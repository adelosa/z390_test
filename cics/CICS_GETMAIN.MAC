.**********************************************************************
.* Copyright 2006 Automated Software Tools Corporation                *
.* This source code is part of z390 assembler/emulator package        *
.* The z390 package is distributed under GNU general public license   *
.* Author - Don Higgins                                               *
.**********************************************************************
.* 04/19/08 RPI 833 ADD STRING QUOTES FOR HLASM COMPATIBILITY         *
.**********************************************************************
         MACRO
         CICS_GETMAIN
         GBLB  &PARMS_0C02
         LCLB  &NOHAND
         LCLC  &SET,&LENGTH,&FLENGTH,&INITIMG,&RESP,&RESP2
&NP      SETA  N'&SYSLIST
&IP      SETA  0
.PLOOP   ANOP
&IP      SETA  &IP+1
         AIF   (&IP GT &NP).ELOOP
&PARM    SETC  '&SYSLIST(&IP)'
         AIF   ('&PARM'(1,4) EQ 'SET(').SET
         AIF   ('&PARM'(1,7) EQ 'LENGTH(').LENGTH
         AIF   ('&PARM'(1,8) EQ 'FLENGTH(').FLENGTH
         AIF   ('&PARM'(1,8) EQ 'INITIMG(').INITIMG
         AIF   ('&PARM'(1,8)  EQ 'NOHANDLE').NOHAND
         AIF   ('&PARM'(1,5)  EQ 'RESP(').RESP
         AIF   ('&PARM'(1,6)  EQ 'RESP2(').RESP2
         MNOTE 12,'BAD PARM &PARM'
         AGO   .PLOOP
.*
.SET     ANOP
&SET     SETC  '&PARM'(5,K'&PARM-5)
         AGO   .PLOOP
.*
.LENGTH  ANOP
&LENGTH  SETC  '&PARM'(8,K'&PARM-8)
         AGO   .PLOOP
.*
.FLENGTH ANOP
&FLENGTH SETC  '&PARM'(9,K'&PARM-9)
         AGO   .PLOOP
.*
.INITIMG ANOP
&INITIMG SETC  '&PARM'(9,K'&PARM-9)
         AGO   .PLOOP
.*
.NOHAND  ANOP
&NOHAND  SETB  1
         AGO   .PLOOP
.*
.RESP    ANOP
&RESP    SETC  '&PARM'(6,K'&PARM-6)
&NOHAND  SETB  1
         AGO   .PLOOP
.*
.RESP2   ANOP
&RESP2   SETC  '&PARM'(7,K'&PARM-7)
         AGO   .PLOOP
.*
.ELOOP   ANOP
         L     R15,=A(P0C02)      LOAD PARM ADDRESS
         USING (P0C02,P0C02END),R15
         XC    P0C02(P0C02END-P0C02),P0C02 CLEAR PARMS
         MVC   P0C02FN,=X'0C02'   SET FUNCTION CODE
         AIF   ('&LENGTH' NE '' AND '&FLENGTH' NE '').BADLEN
         AIF   ('&LENGTH' EQ '' AND '&FLENGTH' EQ '').NEEDLEN
         AIF   ('&SET' EQ '').BADSET
.* LENGTH MAY BE L' OR CONSTANT LIKE X'..'
         AIF   ('&FLENGTH' NE '').FLEN
         AIF   ('&LENGTH'(2,1) EQ '''').LENNUM
         AIF   (T'&LENGTH NE 'N').LENLABL
.LENNUM  ANOP
         LH    R1,=AL2(&LENGTH)   SET LENGTH
         AGO   .SAVLEN
.*
.LENLABL ANOP
         LH    R1,&LENGTH         SET GETMAIN LENGTH FROM LABEL
         AGO   .SAVLEN
.*
.FLEN    ANOP
         AIF   ('&FLENGTH'(2,1) EQ '''').FLENNUM
         AIF   (T'&FLENGTH NE 'N').FLENLAB
.FLENNUM ANOP
         L     R1,=AL4(&FLENGTH)  SET FLENGTH
         AGO   .SAVLEN
.*
.FLENLAB ANOP
         L     R1,&FLENGTH        SET FLENGTH FROM LABEL
.SAVLEN  ANOP
         ST    R1,P0C02LEN        SAVE LENGTH
.*
         AIF   ('&INITIMG' EQ '').DOGETM
         MVI   P0C02INM,X'FF'     SET INITIMG SPECIFIED
         AIF   ('&INITIMG'(2,1) EQ '''').INITNUM
         AIF   (T'&INITIMG NE 'N').INITLAB
.INITNUM ANOP
         MVC   P0C02INT,=AL1(&INITIMG) SET PADDING BYTE
         AGO   .DOGETM
.*
.INITLAB ANOP
         MVC   P0C02INT,&INITIMG  SET PADDING BYTE FROM LABEL
.DOGETM  ANOP
         ST    DFHEIBR,P0C02EIB   SET EIB ADDRESS
         ST    TCTTEAR,P0C02TCT   SET TCTTE ADDRESS
         AIF   (NOT &NOHAND).DUNNOH
         MVI   P0C02NOH,X'FF'     SET NOHANDLE
.DUNNOH  ANOP
         AIF   ('&RESP' EQ '').NORESP
         LA    R1,&RESP           ADDRESS OF RESP
         ST    R1,P0C02RSP        SAVE IT
.NORESP  ANOP
         AIF   ('&RESP2' EQ '').NORESP2
         LA    R1,&RESP2          ADDRESS OF RESP2
         ST    R1,P0C02RS2        SAVE IT
.NORESP2 ANOP
         ZCALL LCL0C02,(P0C02),MF=I CALL GETMAIN PROCESSOR
.*
         L     R15,=A(P0C02)      LOAD PARM ADDRESS
         L     R1,P0C02GMA        R1=GETMAIN ADDRESS
         LA    &SET,8(R1)         SET GETMAIN ADDRESS FOR REQUESTOR
         AIF   (&PARMS_0C02).BYP0C02
         B     P0C02BYP_&SYSNDX   EXIT
*
&PARMS_0C02 SETB 1
P0C02    EQU   *
P0C02FN  DS    XL2                FUNCTION CODE
P0C02EIB DS    AL4                EIB
P0C02TCT DS    AL4                TCTTE
P0C02LEN DS    AL4                LENGTH/FLENGTH
P0C02INM DS    X                  FF=INITIMG SPECIFIED
P0C02INT DS    X                  INITIMG
P0C02GMA DS    AL4                GETMAIN ADDRESS
P0C02NOH DS    X                  FF=NOHANDLE
P0C02RSP DS    AL4                RESP
P0C02RS2 DS    AL4                RESP2
P0C02END EQU   *                  END MARKER
         DS    0H
*
P0C02BYP_&SYSNDX DS 0H
.BYP0C02 ANOP
         DROP  R15
         MEXIT
.*
.BADLEN  MNOTE 12,'BOTH LENGTH AND FLENGTH ARE SPECIFIED'
         MEXIT
.*
.BADSET  MNOTE 12,'SET IS MANDATORY'
         MEXIT
.*
.NEEDLEN MNOTE 12,'LENGTH OR FLENGTH MUST BE SPECIFIED'
         MEXIT
         MEND
