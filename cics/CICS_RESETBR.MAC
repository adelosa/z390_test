.**********************************************************************
.* Copyright 2006 Automated Software Tools Corporation                *
.* This source code is part of z390 assembler/emulator package        *
.* The z390 package is distributed under GNU general public license   *
.* Author - Don Higgins                                               *
.**********************************************************************
.* 04/19/08 RPI 833 ADD STRING QUOTES FOR HLASM COMPATIBILITY         *
.**********************************************************************
         MACRO
         CICS_RESETBR
.* XRBA IS AN EXTENSION
         GBLB  &PARMS_0614
         LCLB  &RBA,&XRBA,&RRN,&GTEQ,&EQUAL,&GENERIC,&NOHAND
         LCLC  &FILE,&DATASET,&RIDFLD,&REQID,&KLENGTH,&RESP,&RESP2
.*
&NP      SETA  N'&SYSLIST
&IP      SETA  0
.PLOOP   ANOP
&IP      SETA  &IP+1
         AIF   (&IP GT &NP).ELOOP
&PARM    SETC  '&SYSLIST(&IP)'
.*
         AIF   ('&PARM'(1,5)  EQ 'FILE(').FILE
         AIF   ('&PARM'(1,8)  EQ 'DATASET(').DATASET
         AIF   ('&PARM'(1,7)  EQ 'RIDFLD(').RIDFLD
         AIF   ('&PARM'(1,6)  EQ 'REQID(').REQID
         AIF   ('&PARM'(1,10) EQ 'KEYLENGTH(').KLENGTH
         AIF   ('&PARM'(1,3)  EQ 'RBA').RBA
         AIF   ('&PARM'(1,4)  EQ 'XRBA').XRBA
         AIF   ('&PARM'(1,3)  EQ 'RRN').RRN
         AIF   ('&PARM'(1,4)  EQ 'GTEQ').GTEQ
         AIF   ('&PARM'(1,5)  EQ 'EQUAL').EQUAL
         AIF   ('&PARM'(1,7)  EQ 'GENERIC').GENERIC
         AIF   ('&PARM'(1,8)  EQ 'NOHANDLE').NOHAND
         AIF   ('&PARM'(1,5)  EQ 'RESP(').RESP
         AIF   ('&PARM'(1,6)  EQ 'RESP2(').RESP2
         MNOTE 12,'BAD PARM &PARM'
         AGO   .PLOOP
.*
.FILE    ANOP
&FILE    SETC  '&PARM'(6,K'&PARM-6)
         AGO   .PLOOP
.*
.DATASET ANOP
&DATASET SETC  '&PARM'(9,K'&PARM-9)
         AGO   .PLOOP
.*
.RIDFLD  ANOP
&RIDFLD  SETC  '&PARM'(8,K'&PARM-8)
         AGO   .PLOOP
.*
.REQID   ANOP
&REQID   SETC  '&PARM'(7,K'&PARM-7)
         AGO   .PLOOP
.*
.KLENGTH ANOP
&KLENGTH SETC  '&PARM'(11,K'&PARM-11)
         AGO   .PLOOP
.*
.RBA     ANOP
&RBA     SETB  1
         AGO   .PLOOP
.*
.XRBA    ANOP
&XRBA    SETB  1
         AGO   .PLOOP
.*
.RRN     ANOP
&RRN     SETB  1
         AGO   .PLOOP
.*
.GTEQ    ANOP
&GTEQ    SETB  1
         AGO   .PLOOP
.*
.EQUAL   ANOP
&EQUAL   SETB  1
         AGO   .PLOOP
.*
.GENERIC ANOP
&GENERIC SETB  1
         AGO   .PLOOP
.*
.NOHAND  ANOP
&NOHAND  SETB  1
         AGO   .PLOOP
.*
.RESP    ANOP
&RESP    SETC  '&PARM'(6,K'&PARM-6)
&NOHAND  SETB  1
         AGO   .PLOOP
.*
.RESP2   ANOP
&RESP2   SETC  '&PARM'(7,K'&PARM-7)
         AGO   .PLOOP
.*
.ELOOP   ANOP
         AIF   ('&FILE' EQ '' AND '&DATASET' EQ '').NOFILE
         AIF   ('&FILE' NE '' AND '&DATASET' NE '').BOTHF
         AIF   ('&RIDFLD' EQ '').NEEDRID
         AIF   (&RBA AND &XRBA).BADRBA
         AIF   (&RRN AND &RBA).BOTHTYP
         AIF   (&RRN AND &XRBA).BOTHTYP
         AIF   (&GENERIC AND &RBA).BADGEN1
         AIF   (&GENERIC AND &XRBA).BADGEN1
         AIF   (&GENERIC AND &RRN).BADGEN1
         AIF   ('&KLENGTH' EQ '' AND &GENERIC).BADGEN2
         AIF   ('&KLENGTH' NE '' AND NOT(&GENERIC)).BADGEN3
         AIF   (&GTEQ AND &EQUAL).BOTHBWS
.*
         L     R15,=A(P0614)      LOAD PARM ADDRESS
         USING (P0614,P0614END),R15
         XC    P0614(P0614END-P0614),P0614 CLEAR PARMS
         MVC   P0614FN,=X'0614'   SET FUNCTION CODE
         LA    R1,&RIDFLD         R1=ADDRESS OF RIDFLD
         ST    R1,P0614ARD        SAVE IT
         LA    R1,L'&RIDFLD       R1=LENGTH OF RIDFLD
         STC   R1,P0614LRD        SAVE IT
.*
         AIF   ('&FILE' EQ '').DODTAST
.* GOT FILE
         AIF   ('&FILE'(1,1) EQ '''').FLSTRING
         MVC   P0614FIL,&FILE     SET FILE NAME AS LABEL
         AGO   .DOKL
.*
.FLSTRING ANOP
&FLLEN   SETA  K'&FILE
         AIF   (&FLLEN GT 10).BADFILE
         MVC   P0614FIL,=CL8&FILE SET FILE NAME AS STRING
         AGO   .DOKL
.*
.* GOT DATASET
.DODTAST ANOP
         AIF   ('&DATASET'(1,1) EQ '''').DTSTRING
         MVC   P0614FIL,&DATASET  SET DATASET NAME AS LABEL
         AGO   .DOKL
.*
.DTSTRING ANOP
&DTLEN   SETA  K'&DATASET
         AIF   (&DTLEN GT 10).BADFILE
         MVC   P0614FIL,=CL8&DATASET SET DATASET NAME AS STRING
.DOKL    ANOP
         AIF   ('&KLENGTH' EQ '').CHKOPT
         AIF   ('&KLENGTH'(2,1) EQ '''').KLENNUM
         AIF   (T'&KLENGTH NE 'N').KLENLAB
.KLENNUM ANOP
         LA    R1,&KLENGTH        R1=KEYLENGTH
         STH   R1,P0614KLN        SAVE IT
         MVI   P0614KIN,X'FF'     SET VALID KEYLENGTH
         AGO   .CHKGEN
.*
.KLENLAB ANOP
         LH    R1,&KLENGTH        R1=KEYLENGTH FROM LABEL
         STH   R1,P0614KLN        SAVE IT
         MVI   P0614KIN,X'FF'     SET VALID KEYLENGTH
.CHKGEN  ANOP
         AIF   (NOT &GENERIC).GENKEY
         MVI   P0614GEN,X'FF'     SET GENERIC
.GENKEY  ANOP
         LTR   R1,R1              IS IT KEYLENGTH(0) OR -VE ?
         BNP   CICS_RESETBR_&SYSNDX._NOKEY EXIT IF IT IS
         CH    R1,=H'128'         GT MAX ALLOWED ?
         BH    CICS_RESETBR_&SYSNDX._NOKEY EXIT IF IT IS
         BCTR  R1,0               -1 FOR DYNAMIC LENGTH
         STC   R1,CICS_RESETBR_&SYSNDX._MVCKEY+1 STORE LENGTH
CICS_RESETBR_&SYSNDX._MVCKEY EQU *
         MVC   P0614RID(0),&RIDFLD MOVE KEY
CICS_RESETBR_&SYSNDX._NOKEY EQU *
         AGO   .DUNOPT
.*
.CHKOPT  ANOP
         AIF   (NOT &RBA).NORBA
         MVC   P0614RID+4(4),&RIDFLD MOVE RIDFLD
         MVI   P0614RBA,X'FF'     SET RBA
         AGO   .DUNOPT
.*
.NORBA   ANOP
         AIF   (NOT &XRBA).NOXRBA
         MVC   P0614RID(8),&RIDFLD MOVE RIDFLD
         MVI   P0614XRB,X'FF'     SET XRBA
         AGO   .DUNOPT
.*
.NOXRBA  ANOP
         AIF   (NOT &RRN).NORRN
         MVC   P0614RID(4),&RIDFLD MOVE RIDFLD
         MVI   P0614RRN,X'FF'     SET RRN
         AGO   .DUNOPT
.*
.NORRN   ANOP
.* DEFAULT IS FULL KEY
         MVC   P0614RID,&RIDFLD   MOVE FULL KEY
.DUNOPT  ANOP
         AIF   ('&REQID' EQ '').DUNREQ
         AIF   (T'&REQID NE 'N').REQLABL
         MVC   P0614REQ,=AL2(&REQID) MOVE REQID
         AGO   .DUNREQ
.*
.REQLABL ANOP
         MVC   P0614REQ,&REQID    MOVE REQID AS LABEL
.DUNREQ  ANOP
         AIF   (NOT &GTEQ).DUNGTEQ
         MVI   P0614GTE,X'FF'     SET GTEQ
.DUNGTEQ ANOP
         ST    DFHEIBR,P0614EIB   SET EIB ADDRESS
         ST    TCTTEAR,P0614TCT   SET TCTTE ADDRESS
         AIF   (NOT &NOHAND).DUNNOH
         MVI   P0614NOH,X'FF'     SET NOHANDLE
.DUNNOH  ANOP
         AIF   ('&RESP' EQ '').NORESP
         LA    R1,&RESP           ADDRESS OF RESP
         ST    R1,P0614RSP        SAVE IT
.NORESP  ANOP
         AIF   ('&RESP2' EQ '').NORESP2
         LA    R1,&RESP2          ADDRESS OF RESP2
         ST    R1,P0614RS2        SAVE IT
.NORESP2 ANOP
         ZCALL LCL0614,(P0614),MF=I CALL RESETBR PROCESSOR
.*
         L     R15,=A(P0614)      LOAD PARM ADDRESS
         CLI   P0614NOH,X'FF'     NOHANDLE ?
         BE    P0614BYP_&SYSNDX   EXIT IF IT IS
         OC    EIBRESP,EIBRESP    ANY BAD RESPONSE ?
         BZ    P0614BYP_&SYSNDX   EXIT IF NONE
* INVREQ, FILENOTFOUND, NOTFND, NOTOPEN, DISABLED, ILLOGIC
         DC    AL3(0),C'ABEND'    MARKER FOR Z390KCP ESTAE
         DC    AL4(P0614BYP_&SYSNDX) ENTRYPOINT FOR IGNORE CONDITION
*
         AIF   (&PARMS_0614).BYP0614
&PARMS_0614 SETB 1
P0614    EQU   *
P0614FN  DS    XL2                FUNCTION CODE
P0614EIB DS    AL4                EIB
P0614TCT DS    AL4                TCTTE
P0614FIL DS    CL8                FILENAME
P0614KIN DS    X                  FF=KEYLENGTH IS VALID
P0614KLN DS    XL2                KEYLENGTH
P0614RID DS    XL128              RIDFLD
P0614ARD DS    AL4                A(RIDFLD)
P0614LRD DS    X                  L'RIDFLD
P0614GEN DS    X                  FF=GENERIC
P0614RBA DS    X                  FF=RBA
P0614XRB DS    X                  FF=XRBA
P0614RRN DS    X                  FF=RRN
P0614GTE DS    X                  00-EQUAL FF=GTEQ
P0614REQ DS    XL2                REQID
P0614NOH DS    X                  FF=NOHANDLE
P0614RSP DS    AL4                RESP
P0614RS2 DS    AL4                RESP2
P0614END EQU   *                  END MARKER
         DS    0H
*
.BYP0614 ANOP
P0614BYP_&SYSNDX DS 0H
         DROP  R15
         MEXIT
.*
.NOFILE  MNOTE 12,'FILE OR DATASET MUST BE SPECIFIED'
         MEXIT
.*
.BOTHF   MNOTE 12,'BOTH FILE AND DATASET ARE SPECIFIED'
         MEXIT
.*
.BADFILE MNOTE 12,'INVALID FILE OR DATASET'
         MEXIT
.*
.NEEDRID MNOTE 12,'RIDFLD IS MANDATORY'
         MEXIT
.*
.BADRBA  MNOTE 12,'BOTH RBA AND XRBA ARE SPECIFIED'
         MEXIT
.*
.BOTHTYP MNOTE 12,'BOTH RRN AND (X)RBA ARE SPECIFIED'
         MEXIT
.*
.BOTHBWS MNOTE 12,'BOTH GTEQ AND EQUAL ARE SPECIFIED'
         MEXIT
.*
.BADGEN1 MNOTE 12,'GENERIC CANNOT BE SPECIFIED WITH RRN OR (X)RBA'
         MEXIT
.*
.BADGEN2 MNOTE 12,'GENERIC REQUIRES KEYLENGTH'
         MEXIT
.*
.BADGEN3 MNOTE 12,'KEYLENGTH REQUIRES GENERIC'
         MEXIT
         MEND
