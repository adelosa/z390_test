.*********************************************************************
.* Copyright 2006 Automated Software Tools Corporation               *
.* This source code is part of z390 assembler/emulator package       *
.* The z390 package is distributed under GNU general public license  *
.* Author - Don Higgins                                              *
.*********************************************************************
         MACRO
         CICS_XCTL
         GBLB  &XCTLBLDL
         LCLC  &PROGRAM,&COMMAREA,&LENGTH
&NP      SETA  N'&SYSLIST
&IP      SETA  0
.PLOOP   ANOP
&IP      SETA  &IP+1
         AIF   (&IP GT &NP).ELOOP
&PARM    SETC  &SYSLIST(&IP)
         AIF   ('&PARM'(1,8)  EQ 'PROGRAM(').PROGRAM
         AIF   ('&PARM'(1,9)  EQ 'COMMAREA(').COMMAREA
         AIF   ('&PARM'(1,7)  EQ 'LENGTH(').LENGTH
         MNOTE 12,'BAD PARM &PARM'
         AGO   .PLOOP
.*
.PROGRAM ANOP
&PROGRAM SETC  '&PARM'(9,K'&PARM-9)
         AGO   .PLOOP
.*
.COMMAREA ANOP
&COMMAREA SETC '&PARM'(10,K'&PARM-10)
         AGO   .PLOOP
.*
.LENGTH  ANOP
&LENGTH  SETC  '&PARM'(8,K'&PARM-8)
         AGO   .PLOOP
.*
.ELOOP   ANOP
         AIF   (&PROGRAM EQ '').MISPROG
         MVC   EIBFN,=X'0E04'     SET EIBFN
         XC    EIBRCODE,EIBRCODE  CLEAR EIBRCODE
         XC    EIBRESP,EIBRESP    CLEAR EIBRESP
         XC    EIBRESP2,EIBRESP2  CLEAR EIBRESP2
         AIF   (&XCTLBLDL).NOBLDL
&XCTLBLDL SETB 1
         B     CICS_XCTL_&SYSNDX._01 BRANCH ROUND BLDL BLOCK
XCTL_BLDLLIST DC H'1'             BLDL LIST WITH 1 ENTRY
         DC    H'12'              BLDL ENTRY LENGTH
XCTL_BLDLNAME DS CL8              BLDL ENTRY NAME TO FIND
         DS    XL4
CICS_XCTL_&SYSNDX._01 DS 0H
.NOBLDL  ANOP
         AIF   ('&PROGRAM'(1,1) EQ '''').STRING
         MVC   XCTL_BLDLNAME,&PROGRAM MOVE PROGRAM FOR BLDL
         MVC   EIBRSRCE,&PROGRAM  SET EIBRSRCE AS LABEL
         MVC   EIBPROG,&PROGRAM   SET EIBPROG  AS LABEL
         AGO   .NOSTRING
.*
.STRING  ANOP
&PROGLEN SETA  K'&PROGRAM
         AIF   (&PROGLEN LT 3 OR &PROGLEN GT 10).BADPROG
         MVC   XCTL_BLDLNAME,=CL8&PROGRAM MOVE PROGRAM FOR BLDL
         MVC   EIBRSRCE,=CL8&PROGRAM SET EIBRSRCE AS STRING
         MVC   EIBPROG,=CL8&PROGRAM  SET EIBPROG  AS STRING
.NOSTRING ANOP
         BLDL  0,XCTL_BLDLLIST    BLDL
         LTR   R15,R15            RC=4 IF ENTRY NOT FOUND
         BZ    CICS_XCTL_&SYSNDX._02 EXIT IF OK
.* INVOKE PGMIDERR
         MVI   EIBRCODE,X'01'     SET EIBRCODE
         MVC   EIBRESP,DFHRESP(PGMIDERR) SET EIBRESP=PGMIDERR
         MVC   EIBRESP2,=F'3'     SET EIBRESP2=PROGRAM NOT FOUND
         DC    AL3(0),C'ABEND'    MARKER FOR Z390KCP ESTAE
         DC    AL4(CICS_XCTL_&SYSNDX._IGNORE) ENTPT FOR IGNORE COND
.*
CICS_XCTL_&SYSNDX._02 DS 0H
         AIF   (&COMMAREA NE '').COMMCHK
         AIF   (&LENGTH EQ '').COMMCHK
         MNOTE 12,'LENGTH WITHOUT COMMAREA'
CICS_XCTL_&SYSNDX._IGNORE DS 0H
         MEXIT
*
.COMMCHK ANOP
         AIF   (&COMMAREA NE '').GOTCOMM
         XC    DFHEICAP,DFHEICAP  CLEAR COMMAREA ADDRESS
         XC    EIBCALEN,EIBCALEN  CLEAR COMMAREA LENGTH
         AGO   .ALLDONE
.*
.GOTCOMM ANOP
&COMMTQ  SETC  T'&COMMAREA
         AIF   ('&COMMAREA'(1,1) EQ '=' OR &COMMTQ EQ 'A').COMADLIT
         LA    R14,&COMMAREA      COMMAREA ADDRESS
         AGO   .COMMLEN
.*
.COMADLIT ANOP
         L     R14,&COMMAREA      INDIRECT COMMAREA ADDRESS
.* LENGTH IS COMPULSORY FOR INDIRECT
         AIF   (&LENGTH EQ '').BADLEN
.COMMLEN ANOP
         AIF   (&LENGTH NE '').LENVAL
&LENGTH  SETC  'L''&COMMAREA'
         AGO   .LENNUM
.*
.LENVAL  ANOP
         AIF   ('&LENGTH'(2,1) EQ '''').LENNUM
         AIF   ('&LENGTH'(1,1) LT '0' OR '&LENGTH'(1,1) GT '9').LENLABL
.LENNUM  ANOP
         LH    R15,=AL2(&LENGTH)  R15=NUMERIC LENGTH
         AGO   .COMMCPY
.*
.LENLABL ANOP
         LH    R15,&LENGTH        R15=LENGTH FROM LABEL
.COMMCPY ANOP
         C     R14,DFHEICAP       SAME COMMAREA ADDRESS ?
         BNE   CICS_XCTL_&SYSNDX._03 EXIT IF NOT
         C     R15,EIBCALEN       SAME COMMAREA LENGTH ?
         BE    CICS_XCTL_&SYSNDX._04 EXIT IF IT IS
CICS_XCTL_&SYSNDX._03 DS 0H
.* MUST TAKE A COPY OF THE COMMAREA
         STH   R15,EIBCALEN       OLD LENGTH HOLDING AREA
         GETMAIN R,LV=(R15)
         LH    R15,EIBCALEN       R15=OLD LENGTH
         STH   R0,EIBCALEN        SAVE ACTUAL LENGTH ACQUIRED
         ST    R1,DFHEICAP        SAVE COMMAREA COPY ADDRESS
         LR    R0,R1              R0=NEW ADDRESS
         LR    R1,R15             USE OLD LENGTH FOR RECEIVING AREA
         MVCL  R0,R14             COPY DATA
         MVI   TCTTECND,X'FF'     TELL RETURN, FREEMAIN IS NEEDED
CICS_XCTL_&SYSNDX._04 DS 0H
.ALLDONE ANOP
.* MUST COPY THE PARM, BECAUSE WE HAVE TO FREE THE DSA
.* THE CURRENT PROGRAM WILL BE AUTO-FREED
         GETMAIN R,LV=4
         ST    R1,DFHEIPRM        SAVE IN CASE WE ABEND
         MVC   0(4,R1),DFHEICAP   MOVE PARM INTO GETMAINED AREA
*
* FREE ALL AID BLOCKS
*
         USING DFHADBLK,R1
         ICM   R1,15,DFHEIAID     ANY AID BLOCK ADDRESSES ?
         BZ    CICS_XCTL_&SYSNDX._HCN EXIT IF NONE
CICS_XCTL_&SYSNDX._ALP EQU *
         L     R14,AIDCHAIN       R14=NEXT AID BLOCK IF ANY
         LA    R0,AIDLENG         R0=AID BLOCK LENGTH
         FREEMAIN R,A=(R1),LV=(R0)
         LTR   R1,R14             ANY MORE AID BLOCKS ?
         BNZ   CICS_XCTL_&SYSNDX._ALP LOOP IF THERE ARE
.*
CICS_XCTL_&SYSNDX._HCN EQU *
         DROP  R1                 DROP AID BLOCK ADDRESS
*
* FREE ALL HANDLE CONDITION BLOCKS
*
         USING DFHHCBLK,R1
         ICM   R1,15,DFHEIHCN     ANY CONDITION BLOCK ADDRESSES ?
         BZ    CICS_XCTL_&SYSNDX._DSA EXIT IF NONE
CICS_XCTL_&SYSNDX._HLP EQU *
         L     R14,HCNCHAIN       R14=NEXT CONDITION BLOCK IF ANY
         LA    R0,HCNLENG         R0=CONDITION BLOCK LENGTH
         FREEMAIN R,A=(R1),LV=(R0)
         LTR   R1,R14             ANY MORE CONDITION BLOCKS ?
         BNZ   CICS_XCTL_&SYSNDX._HLP LOOP IF THERE ARE
         DROP  R1                 DROP HANDLE BLOCK BASE
.*
CICS_XCTL_&SYSNDX._DSA EQU *
.*
.* IF WE HAVE A HANDLE ABEND LABEL() THEN MUST CLEAR THE ENTRY
.* THE LABEL MAY NOT BE VIABLE. WE WILL LEAVE PROGRAM() ALONE.
.*
         ICM   R1,15,TCTTEABD     ANY ABEND BLOCK ?
         BZ    CICS_XCTL_&SYSNDX._05 EXIT IF NONE
         USING ABDDEST,R1
         LH    R0,TCTTELNK        R0=CURRENT LINK LEVEL
         AHI   R0,-1              -1 FOR INDEX
         MS    R0,=AL4(ABDLENG)   * ENTRY LENGTH
         AR    R1,R0              R1=CORRECT ABEND BLOCK ENTRY
         CLI   ABDDEST,X'00'      IS IT A LABEL ?
         BNE   CICS_XCTL_&SYSNDX._05 EXIT IF NOT
         XC    ABDDEST(ABDLENG),ABDDEST CLEAR ABEND ENTRY
CICS_XCTL_&SYSNDX._05 DS 0H
         DROP  R1
         L     R14,DFHEIPRM       R14=PARM ADDRESS
*
* FREE THE DSA
*
         FREEMAIN R,A=(R13),LA=DFHEILEN
         LR    R1,R14             R1=PARM ADDRESS
         XCTL  EPLOC=EIBRSRCE
CICS_XCTL_&SYSNDX._IGNORE DS 0H
         MEXIT
.*
.MISPROG MNOTE 12,'PROGRAM IS MISSING'
         MEXIT
.*
.BADPROG MNOTE 12,'INVALID PROGRAM'
         MEXIT
.*
.BADLEN  MNOTE 12,'LENGTH IS MANDATORY FOR INDIRECT COMMAREA'
CICS_XCTL_&SYSNDX._IGNORE DS 0H
         MEXIT
         MEND
