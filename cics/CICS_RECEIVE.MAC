.*********************************************************************
.* Copyright 2006 Automated Software Tools Corporation               *
.* This source code is part of z390 assembler/emulator package       *
.* The z390 package is distributed under GNU general public license  *
.* Author - Don Higgins                                              *
.*********************************************************************
.* 05/06/06 RPI 308 ADD EXEC CICS SUPPORT FOR RECEIVE
.* 04/19/08 RPI 833 ADD STRING QUOTES FOR HLASM COMPATIBILITY
.*********************************************************************
         MACRO
         CICS_RECEIVE
         GBLB  &PARMS_0402,&PARMS_1802
         LCLB  &NOHAND,&NOWAIT
         LCLC  &INTO,&LENGTH,&MAP,&MAPSET
&NP      SETA  N'&SYSLIST
&IP      SETA  0
.PLOOP   ANOP
&IP      SETA  &IP+1
         AIF   (&IP GT &NP).ELOOP
&PARM    SETC  '&SYSLIST(&IP)'
         AIF   ('&PARM'(1,5) EQ 'INTO(').INTO
         AIF   ('&PARM'(1,7) EQ 'LENGTH(').LENGTH
         AIF   ('&PARM'(1,8) EQ 'NOHANDLE').NOHAND
         AIF   ('&PARM'(1,6) EQ 'NOWAIT').NOWAIT
.* ADDED FOR MAPPING SUPPORT
         AIF   ('&PARM'(1,4) EQ 'MAP(').MAP
         AIF   ('&PARM'(1,7) EQ 'MAPSET(').MAPSET
         AIF   ('&PARM'(1,8) EQ 'TERMINAL').DISCARD
         AIF   ('&PARM'(1,4) EQ 'ASIS').DISCARD
         MNOTE 12,'BAD PARM &PARM'
         AGO   .PLOOP
.*
.INTO    ANOP
&INTO    SETC  '&PARM'(6,K'&PARM-6)
         AGO   .PLOOP
.*
.LENGTH  ANOP
&LENGTH  SETC  '&PARM'(8,K'&PARM-8)
         AGO   .PLOOP
.*
.NOHAND  ANOP
&NOHAND  SETB  1
         AGO   .PLOOP
.*
.NOWAIT  ANOP
&NOWAIT  SETB  1
         AGO   .PLOOP
.*
.MAP     ANOP
&MAP     SETC  '&PARM'(5,K'&PARM-5)
         AGO   .PLOOP
.*
.MAPSET  ANOP
&MAPSET  SETC  '&PARM'(8,K'&PARM-8)
         AGO   .PLOOP
.*
.DISCARD ANOP
         AGO   .PLOOP
.*
.ELOOP   ANOP
         AIF   ('&MAP' EQ '' AND '&MAPSET' EQ '').NOTMAP
         AGO   .MAPPING
.*
.NOTMAP  ANOP
         AIF   ('&INTO' NE '' AND '&LENGTH' NE '').EIBAID
         MNOTE 12,'BOTH INTO AND LENGTH ARE REQUIRED'
         MEXIT
.*
.EIBAID  ANOP
         AIF   ('&INTO' NE 'EIBAID').LENNUM
         MNOTE 12,'INTO(EIBAID) NO LONGER SUPPORTED'
         MEXIT
.*
.LENNUM  ANOP
         AIF   ('&LENGTH'(2,1) EQ '''').LENERR
         AIF   ('&LENGTH'(1,1) LT '0' OR '&LENGTH'(1,1) GT '9').LENLABL
.LENERR  ANOP
         MNOTE 12,'LENGTH ERROR'
         MEXIT
.*
.LENLABL ANOP
         L     R2,=A(P0402)       LOAD PARM ADDRESS
         USING (P0402,P0402END),R2
         ST    DFHEIBR,P0402EIB   SET EIB ADDRESS
         ST    TCTTEAR,P0402TCT   SET TCTTE ADDRESS
         AIF   (&NOHAND).CLRADB
         MVC   P0402ADB,DFHEIAID  SET AID BLOCK ADDRESS
         AGO   .DUNADB
.*
.CLRADB  ANOP
         XC    P0402ADB,P0402ADB  RESET AID BLOCK ADDRESS
.DUNADB  ANOP
         LA    R1,&INTO           R1=ADDRESS OF INTO
         ST    R1,P0402INT        SET A(INTO)
         LA    R1,L'&INTO         R1=LENGTH OF INTO
         STH   R1,P0402INL        SET L'INTO
         LA    R1,&LENGTH         R1=ADDRESS OF LENGTH
         ST    R1,P0402LEN        SET A(LENGTH)
         AIF   (&NOHAND).DOHAND
         MVI   P0402NOH,X'00'     RESET NOHANDLE
         AGO   .TRYWAIT
.*
.DOHAND  ANOP
         MVI   P0402NOH,X'FF'     SET NOHANDLE
.TRYWAIT ANOP
         AIF   (&NOWAIT).DOWAIT
         MVI   P0402NOW,X'00'     RESET NOWAIT
         AGO   .DUNWAIT
.*
.DOWAIT  ANOP
         MVI   P0402NOW,X'FF'     SET NOWAIT
.DUNWAIT ANOP
         CALL  LCL0402,(P0402),MF=I CALL RECEIVE PROCESSOR
         OC    EIBRESP,EIBRESP    ANY BAD RESPONSE ?
         BZ    P0402BYP_&SYSNDX   EXIT IF NONE
* LENGERR
         DC    AL3(0),C'ABEND'    MARKER FOR Z390KCP ESTAE
         DC    AL4(P0402IGN_&SYSNDX) ENTRYPOINT FOR IGNORE CONDITION
*
P0402IGN_&SYSNDX EQU *
* RECALL RECEIVE TO HANDLE IGNORE
         CALL  LCL0402,(P0402),MF=I CALL RECEIVE PROCESSOR
*
         AIF   (&PARMS_0402).BYP0402
         B     P0402BYP_&SYSNDX   EXIT
*
         LTORG
*
&PARMS_0402 SETB 1
P0402    EQU   *
         DC    X'0402'            FUNCTION CODE
P0402EIB DS    AL4                EIB
P0402TCT DS    AL4                TCTTE
P0402ADB DS    AL4                ADBLK
P0402INT DS    AL4                INTO
P0402INL DS    AL2                L'INTO
P0402LEN DS    AL4                LENGTH
P0402NOH DS    X                  FF=NOHANDLE
P0402NOW DS    X                  FF=NOWAIT
P0402END EQU   *                  END MARKER
*
.BYP0402 ANOP
P0402BYP_&SYSNDX DS 0H
         DROP  R2
         MEXIT
.*
.MAPPING ANOP
         AIF   ('&MAP' NE '').MAPOK
         MNOTE 12,'MAP IS MANDATORY'
         MEXIT
.*
.MAPOK   ANOP
         AIF   ('&LENGTH' EQ '').LENOK
         MNOTE 12,'LENGTH NOT SUPPORTED'
         MEXIT
.*
.LENOK   ANOP
         L     R2,=A(P1802)       LOAD PARM ADDRESS
         USING (P1802,P1802END),R2
         ST    DFHEIBR,P1802EIB   SET EIB ADDRESS
         ST    TCTTEAR,P1802TCT   SET TCTTE ADDRESS
.*
         AIF   ('&MAPSET' NE '').MSETOK
&MAPSET  SETC  '&MAP'
.MSETOK  ANOP
&MAPLEN  SETA  K'&MAP
         AIF   ('&MAP'(1,1) NE '''').BADMAP
         AIF   (&MAPLEN LT 3 OR &MAPLEN GT 9).BADMAP
.*
         AIF   (T'&MAPSET EQ 'A').LOADIT
&MAPSLEN SETA  K'&MAPSET
         AIF   (&MAPSLEN LT 3 OR &MAPSLEN GT 9).BADMAPS
.LOADIT  ANOP
         EXEC  CICS LOAD PROGRAM(&MAPSET) ENTRY(R14) LENGTH(P1802MLN)
         ST    R14,P1802MSA       SAVE MAPSET ADDRESS
         MVC   P1802MAP,=CL7&MAP  MOVE MAPNAME
.*
.DUNMAP  ANOP
&MAPANDS SETC  '&MAP'(2,&MAPLEN-2).'S'
&MAPANDL SETC  '&MAP'(2,&MAPLEN-2).'L'
         LA    R14,&MAPANDS       R14=MAP STRUCTURE ADDRESS
         ST    R14,P1802DSC       SAVE IT
         LA    R14,&MAPANDL       R14=MAP STRUCTURE LENGTH
         STH   R14,P1802DSL       SAVE IT
         CALL  LCL1802,(P1802),MF=I CALL RECEIVE MAP PROCESSOR
         OC    EIBRESP,EIBRESP    ANY BAD RESPONSE ?
         BZ    P1802IGN_&SYSNDX   EXIT IF NONE
* MAPFAIL, INVMPSZ
         DC    AL3(0),C'ABEND'    MARKER FOR Z390KCP ESTAE
         DC    AL4(P1802IGN_&SYSNDX) ENTRYPOINT FOR IGNORE CONDITION
*
P1802IGN_&SYSNDX EQU *
         EXEC  CICS RELEASE PROGRAM(&MAPSET)
         AIF   (&PARMS_1802).BYP1802
         B     P1802BYP_&SYSNDX   EXIT
*
         LTORG
*
&PARMS_1802 SETB 1
P1802    EQU   *
         DC    X'1802'            FUNCTION CODE
P1802EIB DS    AL4                EIB
P1802TCT DS    AL4                TCTTE
P1802MSA DS    AL4                MAPSET ADDRESS
P1802MAP DS    CL7                MAP NAME
P1802MLN DS    XL2                MAPSET LENGTH
P1802DSC DS    AL4                STRUCTURE ADDRESS
P1802DSL DS    AL2                STRUCTURE LENGTH
P1802END EQU   *                  END MARKER
*
P1802BYP_&SYSNDX DS 0H
.BYP1802 ANOP
         DROP  R2
*
         MEXIT
.*
.BADMAP  ANOP
         MNOTE 12,'INVALID MAP NAME'
         MEXIT
.*
.BADMAPS ANOP
         MNOTE 12,'INVALID MAPSET NAME'
         MEXIT
.*
         MEND
