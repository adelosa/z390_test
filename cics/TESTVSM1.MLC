*********************************************************************
* Copyright 2006 Automated Software Tools Corporation               *
* This source code is part of z390 assembler/emulator package       *
* The z390 package is distributed under GNU general public license  *
* Author - Don Higgins                                              *
*********************************************************************
         DFHEIGBL
         DFHEISTG
MYDATA   DS    CL50               DATA AREA
MYLEN    DS    XL2                RECEIVED LENGTH
MYRID    DS    XL4                RIDFLD (RBA)
MYRID1   DS    XL4                RIDFLD (RBA)
MYRID2   DS    XL4                RIDFLD (RBA)
MYRID8   DS    XL8                RIDFLD (XRBA)
FWTSBA   DS    XL4                WCC,SBA FOR FOP MSG
FWTMSG   DS    CL(FOPLN)          FOP MESSAGE
TESTVSM1 DFHEIENT CODEREG=(R12,R3,R4,R5,R6)
*
* TEST VSAM 1
*
*    ESDS/VAR MYFILE01 READ/RBA REC  3
*    ESDS/VAR MYFILE01 READ/RBA REC  2
*    ESDS/VAR MYFILE01 READ RBA REC  1
*    FILENOTFOUND CONDITION RAISED
*    DISABLED     CONDITION RAISED
*    NOTOPEN      CONDITION RAISED
*    NOTFND       CONDITION RAISED (READ INVALID RBA)
*    LENGERR/11   CONDITION RAISED
*    INVREQ/20    CONDITION RAISED (OPEN MYFILE02, READ NOT ALLOWED)
*    ESDS/VAR MYFILE01 BROWSE FORWARD RECS 15-17
*    ESDS/VAR MYFILE01 BROWSE BACK    RECS 17-15
*    ESDS/VAR MYFILE01 BROWSE RANDOM  RECS 26,14(PREV=13),18
*    NOTFND       CONDITION RAISED (READNEXT INVALID RBA)
*    ENDFILE      CONDITION RAISED (READNEXT RBA AT END)
*    ENDFILE      CONDITION RAISED (READPREV RBA AT START)
*    ESDS COMPLEX TEST...DONE IN THIS SEQUENCE 3 TIMES
*       BROWSE FORWARD MYFILE01 RECS 7-10
*       BROWSE BACK    MYFILE01 RECS 10-7
*       READ SEQ       MYFILE05 1ST 4 RECS
*
* READ REC 3,2,1 BY RBA
*
         MVI   FOPSEP+1,C'|'      SET SEPARATOR
         MVI   FHSEP,C'|'         SET SEPARATOR
         MVC   FOPTYPE,=C'ESDS'   SET FILE TYPE IN MESSAGE
         MVC   FOPFIXVR,=C'VAR'   SET FIX/VAR IN MESSAGE
         MVC   FOPNAME,=C'MYFILE01' SET FILENAME IN MESSAGE
         MVC   FOPFUNC,=CL8'READ' SET FUNCTION IN MESSAGE
         MVC   FOPMETH,=CL4'RBA'  SET METHOD IN MESSAGE
         MVC   MYRID,=F'19'       RIDFLD=19  RECORD 3
         MVC   MYLEN,=H'50'       SET MAXIMUM LENGTH
         EXEC  CICS READ FILE('MYFILE01') INTO(MYDATA) LENGTH(MYLEN)   X
               RIDFLD(MYRID) RBA
         BAL   R9,WQTS            WRITE IT TO TS Q
         MVC   FWTSBA,FOP1        MOVE WCC,SBA
         MVC   FOPRECNO,=C'  3'   SET RECORD NUMBER IN MESSAGE
         MVC   FWTMSG,FOPTYPE     MOVE MESSAGE TEXT
         EXEC  CICS SEND FROM(FWTSBA) LENGTH(FOPL)
*
         MVC   MYRID,=F'9'        RIDFLD=9   RECORD 2
         MVC   MYLEN,=H'50'       SET MAXIMUM LENGTH
         EXEC  CICS READ FILE('MYFILE01') INTO(MYDATA) LENGTH(MYLEN)   X
               RIDFLD(MYRID) RBA
         BAL   R9,WQTS            WRITE IT TO TS Q
         MVC   FWTSBA,FOP2        MOVE WCC,SBA
         MVC   FOPRECNO,=C'  2'   SET RECORD NUMBER IN MESSAGE
         MVC   FWTMSG,FOPTYPE     MOVE MESSAGE TEXT
         EXEC  CICS SEND FROM(FWTSBA) LENGTH(FOPL)
*
         MVC   MYRID8,=FL8'0'     RIDFLD=0  RECORD 1
         MVC   MYLEN,=H'50'       SET MAXIMUM LENGTH
         EXEC  CICS READ FILE('MYFILE01') INTO(MYDATA) LENGTH(MYLEN)   X
               RIDFLD(MYRID8) XRBA
         BAL   R9,WQTS            WRITE IT TO TS Q
         MVC   FWTSBA,FOP3        MOVE WCC,SBA
         MVC   FOPMETH,=CL4'XRBA' SET METHOD IN MESSAGE
         MVC   FOPRECNO,=C'  1'   SET RECORD NUMBER IN MESSAGE
         MVC   FWTMSG,FOPTYPE     MOVE MESSAGE TEXT
         EXEC  CICS SEND FROM(FWTSBA) LENGTH(FOPL)
*
* RAISE SOME CONDITIONS, WE MAY NOT DO ALL THESE FOR EVERY FUNCTION
*
         EXEC  CICS HANDLE CONDITION                                   X
               FILENOTFOUND(VSAMFNF)                                   X
               DISABLED(VSAMDIS)                                       X
               NOTFND(VSAMNOTF)                                        X
               LENGERR(VSAMLNG)                                        X
               NOTOPEN(VSAMNOTO)                                       X
               ENDFILE(VSAMENDF)                                       X
               INVREQ(VSAMINV)
*
* FILENOTFOUND
         MVC   FWTSBA,FOP4        MOVE WCC,SBA
         MVC   FOPNAME,=CL8'FRED' SET FILENAME IN MESSAGE
         MVC   FOPRECNO,=C'  1'   SET RECORD NUMBER IN MESSAGE
         MVC   FWTMSG,FOPTYPE     MOVE MESSAGE TEXT
         EXEC  CICS SEND FROM(FWTSBA) LENGTH(FOPL)
         MVC   MYRID8,=FL8'0'     RIDFLD=0  RECORD 1
         MVC   MYLEN,=H'50'       SET MAXIMUM LENGTH
         LA    R7,VSAMRTN1        R7=HANDLE RETURN
         EXEC  CICS READ FILE('FRED') INTO(MYDATA) LENGTH(MYLEN)       X
               RIDFLD(MYRID8) XRBA
*
VSAMRTN1 DS    0H
* DISABLED
         MVC   FWTSBA,FOP6        MOVE WCC,SBA
         MVC   FOPNAME,=CL8'MYFILE04' SET FILENAME IN MESSAGE
         MVC   FOPRECNO,=C'  1'   SET RECORD NUMBER IN MESSAGE
         MVC   FWTMSG,FOPTYPE     MOVE MESSAGE TEXT
         EXEC  CICS SEND FROM(FWTSBA) LENGTH(FOPL)
         MVC   MYRID8,=FL8'0'     RIDFLD=0  RECORD 1
         MVC   MYLEN,=H'50'       SET MAXIMUM LENGTH
         LA    R7,VSAMRTN2        R7=HANDLE RETURN
         EXEC  CICS READ FILE('MYFILE04') INTO(MYDATA) LENGTH(MYLEN)   X
               RIDFLD(MYRID8) XRBA
*
VSAMRTN2 DS    0H
* NOTOPEN
         MVC   FWTSBA,FOP8        MOVE WCC,SBA
         MVC   FOPNAME,=CL8'MYFILE03' SET FILENAME IN MESSAGE
         MVC   FOPRECNO,=C'  1'   SET RECORD NUMBER IN MESSAGE
         MVC   FWTMSG,FOPTYPE     MOVE MESSAGE TEXT
         EXEC  CICS SEND FROM(FWTSBA) LENGTH(FOPL)
         MVC   MYRID8,=FL8'0'     RIDFLD=0  RECORD 1
         MVC   MYLEN,=H'50'       SET MAXIMUM LENGTH
         LA    R7,VSAMRTN3        R7=HANDLE RETURN
         EXEC  CICS READ FILE('MYFILE03') INTO(MYDATA) LENGTH(MYLEN)   X
               RIDFLD(MYRID8) XRBA
*
VSAMRTN3 DS    0H
* NOTFND 1
         MVC   FWTSBA,FOP10       MOVE WCC,SBA
         MVC   FOPNAME,=CL8'MYFILE01' SET FILENAME IN MESSAGE
         MVC   FOPRECNO,=C'  ?'   SET RECORD NUMBER IN MESSAGE
         MVC   FOPMETH,=CL4'RBA'  SET METHOD IN MESSAGE
         MVC   FWTMSG,FOPTYPE     MOVE MESSAGE TEXT
         EXEC  CICS SEND FROM(FWTSBA) LENGTH(FOPL)
         MVC   MYRID,=F'-1'       RIDFLD=1  INVALID RBA
         MVC   MYLEN,=H'50'       SET MAXIMUM LENGTH
         LA    R7,VSAMRTN4        R7=HANDLE RETURN
         MVI   NOTFNDNO,C'1'      SET 1ST NOTFND
         EXEC  CICS READ FILE('MYFILE01') INTO(MYDATA) LENGTH(MYLEN)   X
               RIDFLD(MYRID) RBA
*
VSAMRTN4 DS    0H
* LENGERR/11
         MVC   FWTSBA,FOP12       MOVE WCC,SBA
         MVC   FOPRECNO,=C' 26'   SET RECORD NUMBER IN MESSAGE
         MVC   FWTMSG,FOPTYPE     MOVE MESSAGE TEXT
         EXEC  CICS SEND FROM(FWTSBA) LENGTH(FOPL)
         MVC   MYRID,=XL4'20D'    RIDFLD=X'20D' RECORD 26
         MVC   MYLEN,=H'20'       LENGTH TOO SHORT
         LA    R7,VSAMRTN5        R7=HANDLE RETURN
         EXEC  CICS READ FILE('MYFILE01') INTO(MYDATA) LENGTH(MYLEN)   X
               RIDFLD(MYRID) RBA
VSAMRTN5 DS    0H
         MVC   MYLEN,=H'20'       LENGTH REQUESTED
         BAL   R9,WQTS            WRITE IT TO TS Q
*
* INVREQ/20
         MVC   FWTSBA,FOP14       MOVE WCC,SBA
         MVC   FOPNAME,=CL8'MYFILE02' SET FILENAME IN MESSAGE
         MVC   FOPRECNO,=C'  1'   SET RECORD NUMBER IN MESSAGE
         MVC   FWTMSG,FOPTYPE     MOVE MESSAGE TEXT
         EXEC  CICS SEND FROM(FWTSBA) LENGTH(FOPL)
         MVC   MYRID,=F'1'        RIDFLD=1 RECORD  1
         MVC   MYLEN,=H'50'       SET LENGTH
         LA    R7,VSAMRTN6        R7=HANDLE RETURN
         EXEC  CICS READ FILE('MYFILE02') INTO(MYDATA) LENGTH(MYLEN)   X
               RIDFLD(MYRID) RBA
*
VSAMRTN6 DS    0H
* START BROWSE
         MVC   FWTSBA,FOP16       MOVE WCC,SBA
         MVC   FOPNAME,=CL8'MYFILE01' SET FILENAME IN MESSAGE
         MVC   FOPRECNO,=C'   '   SET RECORD NUMBER IN MESSAGE
         MVC   FOPFUNC,=CL8'STARTBR' SET FUNCTION IN MESSAGE
         MVC   FWTMSG,FOPTYPE     MOVE MESSAGE TEXT
         EXEC  CICS SEND FROM(FWTSBA) LENGTH(FOPL)
         MVC   MYRID,=XL4'D9'     RIDFLD=X'D9' RECORD 15
         EXEC  CICS STARTBR FILE('MYFILE01') RIDFLD(MYRID) RBA
*
* READNEXT 3 RECORDS
         MVC   FWTSBA,FOP17       MOVE WCC,SBA
         MVC   FOPRECNO,=C'S  '   SET RECORD NUMBERS IN MESSAGE
         MVC   FOPFUNC,=CL8'READNEXT' SET FUNCTION IN MESSAGE
         MVC   FWTMSG,FOPTYPE     MOVE MESSAGE TEXT
         EXEC  CICS SEND FROM(FWTSBA) LENGTH(FOPL)
         LA    R8,3               READ 3 FORWARDS
RDNXLOOP EQU   *
         MVC   MYLEN,=H'50'       SET MAXIMUM LENGTH
         EXEC  CICS READNEXT FILE('MYFILE01') INTO(MYDATA)             X
               LENGTH(MYLEN) RIDFLD(MYRID) RBA
         BAL   R9,WQTS            WRITE IT TO TS Q
         BCT   R8,RDNXLOOP        LOOP
*
* READPREV 3 RECORDS
         MVC   FWTSBA,FOP18       MOVE WCC,SBA
         MVC   FOPRECNO,=C'S  '   SET RECORD NUMBERS IN MESSAGE
         MVC   FOPFUNC,=CL8'READPREV' SET FUNCTION IN MESSAGE
         MVC   FWTMSG,FOPTYPE     MOVE MESSAGE TEXT
         EXEC  CICS SEND FROM(FWTSBA) LENGTH(FOPL)
         LA    R8,3               READ 3 BACKWARDS
RDPVLOOP EQU   *
         MVC   MYLEN,=H'50'       SET MAXIMUM LENGTH
         EXEC  CICS READPREV FILE('MYFILE01') INTO(MYDATA)             X
               LENGTH(MYLEN) RIDFLD(MYRID) RBA
         BAL   R9,WQTS            WRITE IT TO TS Q
         BCT   R8,RDPVLOOP        LOOP
*
* READ RANDOM 3 RECORDS
         MVC   FWTSBA,FOP19       MOVE WCC,SBA
         MVC   FOPRECNO,=C'S  '   SET RECORD NUMBERS IN MESSAGE
         MVC   FOPFUNC,=CL8'READ RND' SET FUNCTION IN MESSAGE
         MVC   FWTMSG,FOPTYPE     MOVE MESSAGE TEXT
         EXEC  CICS SEND FROM(FWTSBA) LENGTH(FOPL)
         MVC   MYLEN,=H'50'       SET MAXIMUM LENGTH
         MVC   MYRID,=XL4'20D'    RIDFLD=X'20D' RECORD 26
         EXEC  CICS READNEXT FILE('MYFILE01') INTO(MYDATA)             X
               LENGTH(MYLEN) RIDFLD(MYRID) RBA
         BAL   R9,WQTS            WRITE IT TO TS Q
         MVC   MYLEN,=H'50'       SET MAXIMUM LENGTH
         MVC   MYRID,=XL4'C3'     RIDFLD=X'C3' RECORD 14
* POINT AT RECORD 14, READ RECORD 13
         EXEC  CICS READPREV FILE('MYFILE01') INTO(MYDATA)             X
               LENGTH(MYLEN) RIDFLD(MYRID) RBA
         BAL   R9,WQTS            WRITE IT TO TS Q
         MVC   MYLEN,=H'50'       SET MAXIMUM LENGTH
         MVC   MYRID,=XL4'121'    RIDFLD=X'121' RECORD 18
         EXEC  CICS READNEXT FILE('MYFILE01') INTO(MYDATA)             X
               LENGTH(MYLEN) RIDFLD(MYRID) RBA
         BAL   R9,WQTS            WRITE IT TO TS Q
*
* END BROWSE
         MVC   FWTSBA,FOP20       MOVE WCC,SBA
         MVC   FOPRECNO,=C'   '   SET RECORD NUMBERS IN MESSAGE
         MVC   FOPFUNC,=CL8'ENDBR' SET FUNCTION IN MESSAGE
         MVC   FWTMSG,FOPTYPE     MOVE MESSAGE TEXT
         EXEC  CICS SEND FROM(FWTSBA) LENGTH(FOPL)
         EXEC  CICS ENDBR FILE('MYFILE01')
*
* NOTFND 2
* START BROWSE, READNEXT, INVALID RBA, RAISE NOTFND 2
         MVC   FWTSBA,FOP21       MOVE WCC,SBA
         MVC   FOPNAME,=CL8'MYFILE01' SET FILENAME IN MESSAGE
         MVC   FOPRECNO,=C'   '   SET RECORD NUMBER IN MESSAGE
         MVC   FOPFUNC,=CL8'READNEXT' SET FUNCTION IN MESSAGE
         MVC   FWTMSG,FOPTYPE     MOVE MESSAGE TEXT
         EXEC  CICS SEND FROM(FWTSBA) LENGTH(FOPL)
         MVC   MYRID,=XL4'C0'     RIDFLD=X'C0' BAD RBA
         MVI   NOTFNDNO,C'2'      SET 2ND NOTFND
         LH    R7,FHANDL          MESSAGE LENGTH
         AHI   R7,-1              SHORTEN BY 1
         STH   R7,FHANDL          STORE BACK
         LA    R7,VSAMRTN7        R7=HANDLE RETURN
         EXEC  CICS STARTBR FILE('MYFILE01') RIDFLD(MYRID) RBA
         EXEC  CICS READNEXT FILE('MYFILE01') INTO(MYDATA)             X
               LENGTH(MYLEN) RIDFLD(MYRID) RBA
*
VSAMRTN7 EQU   *
* ENDFILE RAISED BY READING FORWARD FROM END
         LH    R7,FOPL            MESSAGE LENGTH
         AHI   R7,-1              SHORTEN BY 1
         STH   R7,FOPL            STORE BACK
         MVC   FWTSBA,FOP2C2      MOVE WCC,SBA
         MVC   MYLEN,=H'50'       SET MAXIMUM LENGTH
         MVC   MYRID,=F'-1'       RIDFLD=-1  LAST RECORD
         MVC   FOPRECNO,=C'END'   SET RECORD NUMBER IN MESSAGE
         MVC   FOPFUNC,=CL8'READNEXT' SET FUNCTION IN MESSAGE
         MVC   FWTMSG,FOPTYPE     MOVE MESSAGE TEXT
         EXEC  CICS SEND FROM(FWTSBA) LENGTH(FOPL)
         MVI   ENDFLENO,C'1'      SET 1ST ENDFILE
         LA    R7,VSAMRTN8        R7=HANDLE RETURN
         EXEC  CICS READNEXT FILE('MYFILE01') INTO(MYDATA)             X
               LENGTH(MYLEN) RIDFLD(MYRID) RBA
*
VSAMRTN8 EQU   *
* ENDFILE RAISED BY READING BACK FROM START
         MVC   FWTSBA,FOP4C2      MOVE WCC,SBA
         MVC   MYLEN,=H'50'       SET MAXIMUM LENGTH
         MVC   MYRID,=F'0'        RIDFLD=0  FIRST RECORD
         MVC   FOPRECNO,=C'BEG'   SET RECORD NUMBER IN MESSAGE
         MVC   FOPFUNC,=CL8'READPREV' SET FUNCTION IN MESSAGE
         MVC   FWTMSG,FOPTYPE     MOVE MESSAGE TEXT
         EXEC  CICS SEND FROM(FWTSBA) LENGTH(FOPL)
         MVI   ENDFLENO,C'2'      SET 2ND ENDFILE
         LA    R7,VSAMRTN9        R7=HANDLE RETURN
         EXEC  CICS READPREV FILE('MYFILE01') INTO(MYDATA)             X
               LENGTH(MYLEN) RIDFLD(MYRID) RBA
*
VSAMRTN9 EQU   *
         EXEC  CICS ENDBR FILE('MYFILE01')
*
* COMPLEX TEST, 2 OVERLAPPING BROWSES OF SAME FILE, PLUS READ OF
* FILE THAT IS A MIRROR OF ANOTHER
         MVC   FWTSBA,FOP6C2      MOVE WCC,SBA
         MVC   FOPNAME,=CL8'COMPLEX' SET FILENAME IN MESSAGE
         MVC   FOPRECNO,=C'   '   SET RECORD NUMBER IN MESSAGE
         MVC   FOPFUNC,=CL8'COMPLEX' SET FUNCTION IN MESSAGE
         MVC   FWTMSG,FOPTYPE     MOVE MESSAGE TEXT
         EXEC  CICS SEND FROM(FWTSBA) LENGTH(FOPL)
         MVC   MYRID1,=XL4'45'    RIDFLD=X'45' RECORD 7
         EXEC  CICS STARTBR FILE('MYFILE01') RIDFLD(MYRID1) RBA        X
               REQID(1)
         MVC   MYRID2,=XL4'87'    RIDFLD=X'87' RECORD 11(BACK TO 10)
         EXEC  CICS STARTBR FILE('MYFILE01') RIDFLD(MYRID2) RBA        X
               REQID(2)
         XC    MYRID,MYRID        MYFILE05 START
         LA    R8,4               R8=LOOP LIMIT
PLEXLOOP EQU   *
         MVC   MYLEN,=H'50'       SET MAXIMUM LENGTH
         EXEC  CICS READNEXT FILE('MYFILE01') INTO(MYDATA)             X
               LENGTH(MYLEN) RIDFLD(MYRID1) RBA REQID(1)
         BAL   R9,WQTS            WRITE IT TO TS Q
         MVC   MYLEN,=H'50'       SET MAXIMUM LENGTH
         EXEC  CICS READPREV FILE('MYFILE01') INTO(MYDATA)             X
               LENGTH(MYLEN) RIDFLD(MYRID2) RBA REQID(2)
         BAL   R9,WQTS            WRITE IT TO TS Q
         MVC   MYLEN,=H'50'       SET MAXIMUM LENGTH
         EXEC  CICS READ     FILE('MYFILE05') INTO(MYDATA)             X
               LENGTH(MYLEN) RIDFLD(MYRID) RBA
         BAL   R9,WQTS            WRITE IT TO TS Q
         L     R9,MYRID           CURRENT RBA
         AHI   R9,50              +RECORD LENGTH
         ST    R9,MYRID           NEW RBA
         BCT   R8,PLEXLOOP        LOOP
         EXEC  CICS ENDBR FILE('MYFILE01') REQID(1)
         EXEC  CICS ENDBR FILE('MYFILE01') REQID(2)
*
* MYFILE05, READ RECS 2-4, RESETBR, READ RECS 8-6
         MVC   FWTSBA,FOP7C2      MOVE WCC,SBA
         MVC   FOPNAME,=CL8'MYFILE05' SET FILENAME IN MESSAGE
         MVC   FOPRECNO,=C'   '   SET RECORD NUMBER IN MESSAGE
         MVC   FOPFUNC,=CL8'RESETBR' SET FUNCTION IN MESSAGE
         MVC   FWTMSG,FOPTYPE     MOVE MESSAGE TEXT
         EXEC  CICS SEND FROM(FWTSBA) LENGTH(FOPL)
         MVC   MYRID1,=AL4(2*50)  RIDFLD=X'64' RECORD 2
         EXEC  CICS STARTBR FILE('MYFILE05') RIDFLD(MYRID1) RBA        X
               REQID(1)
         LA    R8,3               R8=LOOP LIMIT
RSBRLP1  EQU   *
         MVC   MYLEN,=H'50'       SET MAXIMUM LENGTH
         EXEC  CICS READNEXT FILE('MYFILE05') INTO(MYDATA)             X
               LENGTH(MYLEN) RIDFLD(MYRID1) RBA REQID(1)
         BAL   R9,WQTS            WRITE IT TO TS Q
         BCT   R8,RSBRLP1         LOOP
         MVC   MYRID1,=AL4(8*50)  RIDFLD=X'190' RECORD 8
         EXEC  CICS RESETBR FILE('MYFILE05') RIDFLD(MYRID1) RBA        X
               REQID(1)
         LA    R8,3               R8=LOOP LIMIT
RSBRLP2  EQU   *
         MVC   MYLEN,=H'50'       SET MAXIMUM LENGTH
         EXEC  CICS READPREV FILE('MYFILE05') INTO(MYDATA)             X
               LENGTH(MYLEN) RIDFLD(MYRID1) RBA REQID(1)
         BAL   R9,WQTS            WRITE IT TO TS Q
         BCT   R8,RSBRLP2         LOOP
         EXEC  CICS ENDBR FILE('MYFILE05') REQID(1)
*
         EXEC  CICS SEND FROM(ENDMSG) LENGTH(ENDMSGL)
*
         EXEC  CICS RETURN
*
* HANDLE ROUTINES
*
VSAMFNF  DS    0H
         MVC   FWTSBA,FOP5        MOVE WCC,SBA
         MVC   FHANDCON,=CL12'FILENOTFOUND' MOVE CONDITION
         B     FWTHSEND           EXIT
*
VSAMDIS  DS    0H
         MVC   FWTSBA,FOP7        MOVE WCC,SBA
         MVC   FHANDCON,=CL12'DISABLED' MOVE CONDITION
         B     FWTHSEND           EXIT
*
VSAMNOTO DS    0H
         MVC   FWTSBA,FOP9        MOVE WCC,SBA
         MVC   FHANDCON,=CL12'NOTOPEN' MOVE CONDITION
         B     FWTHSEND           EXIT
*
VSAMNOTF DS    0H
         MVC   FWTSBA,FOP11       MOVE WCC,SBA
         CLI   NOTFNDNO,C'1'      1ST ?
         BE    NOTFNDGO           EXIT IF IT IS
         MVI   FOPSEP+1,C' '      RESET SEPARATOR
         MVI   FHSEP,C' '         RESET SEPARATOR
         MVC   FWTSBA,FOP1C2      MOVE WCC,SBA
NOTFNDGO EQU   *
         MVC   FHANDCON,=CL12'NOTFND' MOVE CONDITION
         B     FWTHSEND           EXIT
*
VSAMLNG  DS    0H
         MVC   FWTSBA,FOP13       MOVE WCC,SBA
         L     R8,EIBRESP2        R8=RESP2
         CVD   R8,DEC             CONVERT TO DECIMAL
         XC    FHANDCON,FHANDCON  CLEAR CONDITION
         MVC   FHANDCON+6(4),=X'40202020' MOVE EDIT WORD
         ED    FHANDCON+6(4),DEC+6 EDIT RESP2
         MVC   FHANDCON(8),=C'LENGERR/' MOVE CONDITION
         B     FWTHSEND           EXIT
*
VSAMINV  DS    0H
         MVC   FWTSBA,FOP15       MOVE WCC,SBA
         L     R8,EIBRESP2        R8=RESP2
         CVD   R8,DEC             CONVERT TO DECIMAL
         XC    FHANDCON,FHANDCON  CLEAR CONDITION
         MVC   FHANDCON+5(4),=X'40202020' MOVE EDIT WORD
         ED    FHANDCON+5(4),DEC+6 EDIT RESP2
         MVC   FHANDCON(7),=C'INVREQ/' MOVE CONDITION
         B     FWTHSEND           EXIT
*
VSAMENDF DS    0H
         MVC   FWTSBA,FOP3C2      MOVE WCC,SBA
         CLI   ENDFLENO,C'1'      1ST ?
         BE    ENDFLEGO           EXIT IF IT IS
         MVC   FWTSBA,FOP5C2      MOVE WCC,SBA
ENDFLEGO EQU   *
         MVC   FHANDCON,=CL12'ENDFILE' MOVE CONDITION
*
FWTHSEND EQU   *
         MVC   FWTMSG,FHANDCON    MOVE MESSAGE TEXT
         EXEC  CICS SEND FROM(FWTSBA) LENGTH(FHANDL)
         BR    R7                 RETURN TO MAIN LINE
*
NOTFNDNO DC    C'1'               DISPLAY INDICATOR
ENDFLENO DC    C'1'               DISPLAY INDICATOR
*
* SUBROUTINES
*
WQTS     DS    0H
         EXEC  CICS WRITEQ TS QUEUE('VSM1') FROM(MYDATA) LENGTH(MYLEN)
         BR    R9                 RETURN
*
FOP1     TN3270 WCC_KD,(SBA,3,1)
FOP2     TN3270 WCC_KD,(SBA,4,1)
FOP3     TN3270 WCC_KD,(SBA,5,1)
FOP4     TN3270 WCC_KD,(SBA,6,1)
FOP5     TN3270 WCC_KD,(SBA,7,1)
FOP6     TN3270 WCC_KD,(SBA,8,1)
FOP7     TN3270 WCC_KD,(SBA,9,1)
FOP8     TN3270 WCC_KD,(SBA,10,1)
FOP9     TN3270 WCC_KD,(SBA,11,1)
FOP10    TN3270 WCC_KD,(SBA,12,1)
FOP11    TN3270 WCC_KD,(SBA,13,1)
FOP12    TN3270 WCC_KD,(SBA,14,1)
FOP13    TN3270 WCC_KD,(SBA,15,1)
FOP14    TN3270 WCC_KD,(SBA,16,1)
FOP15    TN3270 WCC_KD,(SBA,17,1)
FOP16    TN3270 WCC_KD,(SBA,18,1)
FOP17    TN3270 WCC_KD,(SBA,19,1)
FOP18    TN3270 WCC_KD,(SBA,20,1)
FOP19    TN3270 WCC_KD,(SBA,21,1)
FOP20    TN3270 WCC_KD,(SBA,22,1)
FOP21    TN3270 WCC_KD,(SBA,23,1)
FOP1C2   TN3270 WCC_KD,(SBA,3,42)
FOP2C2   TN3270 WCC_KD,(SBA,4,42)
FOP3C2   TN3270 WCC_KD,(SBA,5,42)
FOP4C2   TN3270 WCC_KD,(SBA,6,42)
FOP5C2   TN3270 WCC_KD,(SBA,7,42)
FOP6C2   TN3270 WCC_KD,(SBA,8,42)
FOP7C2   TN3270 WCC_KD,(SBA,9,42)
*
* ESDS MYFILE01 READ   RBA REC  3
FOPTYPE  DS    CL4
         DC    C'/'
FOPFIXVR DS    CL3
         DC    C' '
FOPNAME  DS    CL8
         DC    C' '
FOPFUNC  DC    C'READNEXT'
         DC    C' '
FOPMETH  DC    C'XRBA'
         DC    C' REC'
FOPRECNO DS    CL3
FOPSEP   DC    C' |'
FOPLN    EQU   *-FOPTYPE
FOPL     DC    AL2(*-(FOPTYPE-4))
*
FHANDCON DC    CL12' '
         DC    C' CONDITION RAISED          '
FHSEP    DC    C'|'
FHANDL   DC    AL2(*-(FHANDCON-4))
*
ENDMSG   TN3270 WCC_KD,(SBA,24,1)
         DC    C'TESTVSM1 COMPLETED, PRESS CLEAR'
ENDMSGL  DC    AL2(*-ENDMSG)
*
DEC      DC    PL8'0'
*
         TN3270 SYMBOLS
         EQUREGS
         END
