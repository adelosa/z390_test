.**********************************************************************
.* Copyright 2006 Automated Software Tools Corporation                *
.* This source code is part of z390 assembler/emulator package        *
.* The z390 package is distributed under GNU general public license   *
.* Author - Don Higgins                                               *
.**********************************************************************
.* 05/06/06 RPI  308 - ADD EXEC CICS SUPPORT FOR CICS PROLOG          *
.* 06/18/09 RPI 1042 - ISSUE SF02 IF R11 DFHEIBLK PTR NOT SET         *
.**********************************************************************
         MACRO
&N       DFHEIENT &CODEREG=(R12),&DATAREG=(R13)
.*
.* DEFINE EXEC CICS PROGRAM ENTRY
.*
.* THIS MACRO CALL REPLACES THE FIRST CSECT OF MLC SOURCE CODE IF
.* CICS AND PROLOG OPTIONS ON
.*
         GBLB  &ZC_CICS
         GBLC  &DFHEIENT_CSECT
&DFHEIENT_CSECT SETC '&N'         SAVE CSECT FOR DFHEIEND RESET
         AIF   (NOT &ZC_CICS)
.* ASM USAGE
         DFHEIBLK                 EXEC INTERFACE BLOCK
         USING DFHEIBLK,DFHEIBR
         AELSE
.* COBOL USAGE
DFHEIBR  EQU   11
         USING DFHEIBLK_DSECT,DFHEIBR
         AEND
         DFHTCTTE                 TERMINAL TABLE ENTRY
         USING DFHTCTTE,TCTTEAR
         EQUREGS ,                DEFINE GENERAL REGISTERS RPI 905
&N       CSECT
*            R1 >>> A(EIB,COMMAREA)
* TCTTEAR (R10) >>> TCTTE
* DFHEIBR (R11) >>> EIB
*         (R14) >>> RETURN ADDRESS (LINK ONLY)
*
         LR    R2,R1              R2=SAVE USER PARM POINTER
*********************************************************************
* VERIFY R11 SET ELSE ABEND S402  RPI 1042
*
         LTR   R11,R11         IS R11 ZERO (NOINIT)
         JZ    BAD_EIBLKPTR
         CLFI  R11,X'F4F4F4F4' IS R11 F4'S (INIT)
         JNE   OK_EIBLKPTR
BAD_EIBLKPTR DS    0H
         WTO 'EZ390E EXEC CCIS NOT RUNNING'
         LA  R15,16
         SVC 3
OK_EIBLKPTR  DS    0H        
*********************************************************************
*
* ENTRY IS ONLY BY DIRECT BRANCH FROM MODULES LCL0E02 (LINK)
* OR LCL0E04 (XCTL)
*
* DON'T SAVE THE REGS IF XCTL, THIS ISN'T A NEW LINK LEVEL
         CHHSI EIBFN,X'0E04'      XCTL ?
         JE    CICS_EIENT_&SYSNDX._NOSAVE EXIT IF IT IS
* FIND LAST LINKER AND ESTABLISH LINKAGE
         LH    R15,TCTTELNK       R15=CURRENT LINK LEVEL
         AHI   R15,-1             -1
         SLL   R15,2              *4
         L     R1,TCTTELKA        R0=LKA ADDRESS
         AR    R1,R15             INDEX TO LAST LINK-LEVEL ENTRY
         L     R13,0(R1)          SAVE AREA OF LAST LINK-LEVEL
         SAVE  (R14,R12)          SAVE REGS IN PREV SAVE AREA
CICS_EIENT_&SYSNDX._NOSAVE EQU *
         AIF   (NOT &ZC_CICS)
*
* SET 1ST CODE BASE
*
         BALR  &CODEREG(1),0      CODE BASE 1
         USING &N._BASE,&CODEREG(1)
.*
&N._BASE DS   0H
         AEND
*
* GETMAIN THE DSA, AND SET UP THE CHAIN
*
         LAY   R1,(DFHEIEND-DFHEISTG) R1=DSA LENGTH
         GETMAIN R,LV=(R1)
         ST    R1,8(R13)          SAVE NEW DSA SAVE AREA IN PRIOR SAVE
         ST    R13,4(R1)          SAVE OLD SAVE AREA IN NEW DSA SAVE
         LR    R13,R1             DSA BASE 1
         USING DFHEISTG,R13
         XC    DFHEICAP(DFHEIUSR-DFHEICAP),DFHEICAP CLEAR PREFIX DSA
*
* SAVE DSA LENGTH
*
         ST    R0,DFHEILEN        SAVE DSA LENGTH FOR FREEMAIN
*
* SET EIB AND COMMAREA ADDRESSES
*
         MVC   DFHEIEIB,0(R2)     SET EIB ADDRESS IN DSA
         MVC   DFHEICAP,4(R2)     SET COMMAREA ADDRESS IN DSA
*
* IF WE CAME FROM XCTL, WE MUST FREE THE PARM STORAGE AREA
*
         CHHSI EIBFN,X'0E04'      XCTL ?
         JNE   CICS_EIENT_&SYSNDX._01 EXIT IF NOT
         LA    R0,8               LENGTH OF 8
         FREEMAIN A=(R2),LV=(R0)
         LA    R2,DFHEIEIB        SET UP THE PARM AGAIN
         J     CICS_EIENT_&SYSNDX._02 EXIT
         LTORG
.*
CICS_EIENT_&SYSNDX._01 DS 0H
*
* LINK ONLY
* FIND OUR LKA ENTRY AND STORE OUR DSA ADDRESS
*
         LH    R15,TCTTELNK       R15=CURRENT LINK LEVEL
         SLL   R15,2              *4
         L     R1,TCTTELKA        R1=LKA ADDRESS
         AR    R1,R15             INDEX TO OUR LINK LEVEL ENTRY
         ST    R13,0(R1)          SAVE OUR DSA ADDRESS
CICS_EIENT_&SYSNDX._02 DS 0H
*
&CBASE   SETA  N'&CODEREG
         AIF   (&CBASE EQ 1).CEXIT
&S       SETA  1
.*
.CLOOP   ANOP
&S       SETA  &S+1
         AIF   (&S GT &CBASE).CEXIT
&COFFSET SETA  &COFFSET+4096
         LAY   &CODEREG(&S),4096(&CODEREG(&S-1)) CODE BASE &S
         USING &N._BASE+&COFFSET,&CODEREG(&S)
         AGO   .CLOOP
.*
.CEXIT   ANOP
&DBASE   SETA  N'&DATAREG
         AIF   (&DBASE EQ 1).DEXIT
&S       SETA  1
.*
.DLOOP   ANOP
&S       SETA  &S+1
         AIF   (&S GT &DBASE).DEXIT
&DOFFSET SETA  &DOFFSET+4096
         LAY   &DATAREG(&S),4096(&DATAREG(&S-1)) DSA BASE &S
         USING DFHEISTG+&DOFFSET,&DATAREG(&S)
         AGO   .DLOOP
.*
.DEXIT   ANOP
         MEND
