***********************************************************************
* Copyright 2006 Automated Software Tools Corporation                 *
* This source code is part of z390 assembler/emulator package         *
* The z390 package is distributed under GNU general public license    *
* Author - Don Higgins                                                *
***********************************************************************
* WE CANNOT HAVE A CONVENTIONAL ENTRY
* A FIXED SAVEAREA WOULD PREVENT XCTL A TO B TO C TO A
* MUST OBEY THE MACRO RULES, NO EXTRA REGS
* WE WILL ALWAYS HAVE ADDRESSABILITY TO A DSA
LCL0E04  CSECT
*
* FN=0E04  EXEC CICS XCTL
*
* R1  >>> P0E04 BLOCK POINTER
* R14 = RETURN ADDRESS
         USING (P0E04,P0E04END),R1
         USING *,R12
         B     12(R15)            BYPASS HEADER
         DC    CL8'LCL0E04'
         LR    R0,R12             R0=SAVED R12
         LR    R12,R15            SET BASE
         ST    R0,SAVER12         SAVE ORIGINAL R12
         USING DFHEIBLK,DFHEIBR
         USING DFHTCTTE,TCTTEAR
         USING DFHEISTG,R13
         MVC   EIBFN,P0E04FN      SET EIBFN
         XC    EIBRCODE,EIBRCODE  CLEAR EIBRCODE
         XC    EIBRESP,EIBRESP    CLEAR EIBRESP
         XC    EIBRESP2,EIBRESP2  CLEAR EIBRESP2
         ICM   R15,15,P0E04RSP    R15=RESP ADDRESS
         BZ    NORESP             EXIT IF NONE
         XC    0(4,R15),0(R15)    CLEAR RESP
NORESP   EQU   *
         ICM   R15,15,P0E04RS2    R15=RESP2 ADDRESS
         BZ    NORESP2            EXIT IF NONE
         XC    0(4,R15),0(R15)    CLEAR RESP2
NORESP2  EQU   *
         MVC   TCTTEINV,EIBPROG   SET INVOKINGPROG FOR ASSIGN
         MVC   BLDLNAME,P0E04PGM  MOVE PROGRAM FOR BLDL
         MVC   EIBRSRCE,P0E04PGM  SET EIBRSRCE
         MVC   EIBPROG,P0E04PGM   SET EIBPROG
         LR    R0,R1              SAVE PARM POINTER
         BLDL  0,BLDLLIST         BLDL
         LR    R1,R0              RESTORE PARM POINTER
         LTR   R15,R15            RC=4 IF ENTRY NOT FOUND
         BZ    LOADOK             EXIT IF OK
* INVOKE PGMIDERR
         MVI   EIBRCODE,X'01'     SET EIBRCODE
         MVC   EIBRESP,DFHRESP(PGMIDERR) SET EIBRESP=PGMIDERR
         MVC   EIBRESP2,=F'3'     SET EIBRESP2=PROGRAM NOT FOUND
         ICM   R15,15,P0E04RSP    R15=RESP ADDRESS
         BZ    DORESP2            EXIT IF NONE
         MVC   0(4,R15),EIBRESP   SET RESP
DORESP2  EQU   *
         ICM   R15,15,P0E04RS2    R15=RESP2 ADDRESS
         BZ    RETURN             EXIT IF NONE
         MVC   0(4,R15),EIBRESP2  SET RESP2
         B     RETURN             EXIT
*
LOADOK   EQU   *
         ICM   R14,15,P0E04COM    ANY COMMAREA ADDRESS ?
         BNZ   GOTCOMM            EXIT IF WE HAVE ONE
* NO COMMAREA
         XC    DFHEICAP,DFHEICAP  CLEAR COMMAREA ADDRESS
         XC    EIBCALEN,EIBCALEN  CLEAR COMMAREA LENGTH
         B     ALLDONE            EXIT
*
GOTCOMM  EQU   *
* WE HAVE A COMMAREA
         LH    R15,P0E04CLN       R15=COMMAREA LENGTH
         C     R14,DFHEICAP       SAME COMMAREA ADDRESS ?
         BNE   DIFFCOMM           EXIT IF NOT
         CH    R15,EIBCALEN       SAME COMMAREA LENGTH ?
         BE    ALLDONE            EXIT IF IT IS
DIFFCOMM EQU   *
* MUST TAKE A COPY OF THE COMMAREA
         STH   R15,EIBCALEN       OLD LENGTH HOLDING AREA
         GETMAIN R,LV=(R15)
         LH    R15,EIBCALEN       R15=OLD LENGTH
         STH   R0,EIBCALEN        SAVE ACTUAL LENGTH ACQUIRED
         ST    R1,DFHEICAP        SAVE COMMAREA COPY ADDRESS
         LR    R0,R1              R0=NEW ADDRESS
         LR    R1,R15             USE OLD LENGTH FOR RECEIVING AREA
         MVCL  R0,R14             COPY DATA
         MVI   TCTTECND,X'FF'     TELL RETURN, FREEMAIN IS NEEDED
ALLDONE  EQU   *
* MUST COPY THE PARM, BECAUSE WE HAVE TO FREE THE DSA
* THE CURRENT PROGRAM WILL BE AUTO-FREED
         GETMAIN R,LV=8
         ST    R1,PARMADDR        SAVE PARM ADDRESS
         ST    DFHEIBR,0(R1)      SAVE EIB ADDRESS
         MVC   4(4,R1),DFHEICAP   SAVE COMMAREA ADDRESS
*
* FREE ALL AID BLOCKS
*
         USING DFHADBLK,R1
         ICM   R1,15,DFHEIAID     ANY AID BLOCK ADDRESSES ?
         BZ    TRYHCN             EXIT IF NONE
AIDLOOP  EQU   *
         L     R14,AIDCHAIN       R14=NEXT AID BLOCK IF ANY
         LA    R0,AIDLENG         R0=AID BLOCK LENGTH
         FREEMAIN R,A=(R1),LV=(R0)
         LTR   R1,R14             ANY MORE AID BLOCKS ?
         BNZ   AIDLOOP            LOOP IF THERE ARE
         DROP  R1                 DROP AID BLOCK ADDRESS
TRYHCN   EQU   *
*
* FREE ALL HANDLE CONDITION BLOCKS
*
         USING DFHHCBLK,R1
         ICM   R1,15,DFHEIHCN     ANY CONDITION BLOCK ADDRESSES ?
         BZ    TRYABD             EXIT IF NONE
HCNLOOP  EQU    *
         L     R14,HCNCHAIN       R14=NEXT CONDITION BLOCK IF ANY
         LA    R0,HCNLENG         R0=CONDITION BLOCK LENGTH
         FREEMAIN R,A=(R1),LV=(R0)
         LTR   R1,R14             ANY MORE CONDITION BLOCKS ?
         BNZ   HCNLOOP            LOOP IF THERE ARE
         DROP  R1                 DROP HANDLE BLOCK BASE
TRYABD   EQU   *
*
* IF WE HAVE A HANDLE ABEND LABEL() THEN MUST CLEAR THE ENTRY
* THE LABEL MAY NOT BE VIABLE. WE WILL LEAVE PROGRAM() ALONE.
*
         ICM   R1,15,TCTTEABD     ANY ABEND BLOCK ?
         BZ    FREEDSA            EXIT IF NONE
         USING ABDDEST,R1
         LH    R0,TCTTELNK        R0=CURRENT LINK LEVEL
         AHI   R0,-1              -1 FOR INDEX
         MS    R0,=AL4(ABDLENG)   * ENTRY LENGTH
         AR    R1,R0              R1=CORRECT ABEND BLOCK ENTRY
         CLI   ABDDEST,X'00'      IS IT A LABEL ?
         BNE   FREEDSA            EXIT IF NOT
         XC    ABDDEST(ABDLENG),ABDDEST CLEAR ABEND ENTRY
         DROP  R1
FREEDSA  EQU   *
         L     R14,PARMADDR       R14=PARM ADDRESS
*
* FREE THE DSA
*
         FREEMAIN R,A=(R13),LA=DFHEILEN
         LR    R1,R14             R1=PARM ADDRESS
         L     R12,SAVER12        RESTORE ORIGINAL R12
         XCTL  EPLOC=EIBRSRCE     XCTL
*
RETURN   EQU   *
         L     R12,SAVER12        RESTORE ORIGINAL R12
         BR    R14                RETURN
*
SAVER12  DS    F                  SAVE R12
PARMADDR DS    F                  SAVE GETMAINED PARM ADDRESS
*
BLDLLIST DC    H'1'               BLDL LIST WITH 1 ENTRY
         DC    H'12'              BLDL ENTRY LENGTH
BLDLNAME DS    CL8                BLDL ENTRY NAME TO FIND
         DS    XL4
*
P0E04    DSECT
P0E04FN  DS    XL2                FUNCTION CODE
P0E04PGM DS    CL8                PROGRAM
P0E04COM DS    AL4                COMMAREA ADDRESS
P0E04CLN DS    XL2                COMMAREA LENGTH
         DS    X                  FF=NOHANDLE
         DS    X
P0E04RSP DS    AL4                RESP
P0E04RS2 DS    AL4                RESP2
P0E04END EQU   *                  END MARKER
*
         DFHEIBLK                 EIB
         DFHTCTTE                 TCTTE
         DFHEISTG                 DSA
         DFHADBLK                 HANDLE AID BLOCK
         DFHHCBLK                 HANDLE CONDITION BLOCK
         DFHABBLK                 HANDLE ABEND BLOCK
*
         EQUREGS REGS=GPR
*
         END
