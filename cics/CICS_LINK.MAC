.**********************************************************************
.* Copyright 2006 Automated Software Tools Corporation                *
.* This source code is part of z390 assembler/emulator package        *
.* The z390 package is distributed under GNU general public license   *
.* Author - Don Higgins                                               *
.**********************************************************************
.* 04/19/08 RPI 833 ADD STRING QUOTES FOR HLASM COMPATIBILITY         *
.**********************************************************************
         MACRO
         CICS_LINK
         GBLB  &PARMS_0E02
         LCLB  &NOHAND,&LEVEL0
         LCLC  &PROGRAM,&COMMAREA,&LENGTH,&RESP,&RESP2
&NP      SETA  N'&SYSLIST
&IP      SETA  0
.PLOOP   ANOP
&IP      SETA  &IP+1
         AIF   (&IP GT &NP).ELOOP
&PARM    SETC  '&SYSLIST(&IP)'
         AIF   ('&PARM'(1,8) EQ 'PROGRAM(').PROGRAM
         AIF   ('&PARM'(1,9) EQ 'COMMAREA(').COMMAREA
         AIF   ('&PARM'(1,7) EQ 'LENGTH(').LENGTH
         AIF   ('&PARM'(1,8) EQ 'NOHANDLE').NOHAND
         AIF   ('&PARM'(1,5) EQ 'RESP(').RESP
         AIF   ('&PARM'(1,6) EQ 'RESP2(').RESP2
         AIF   ('&PARM'(1,6) EQ 'LEVEL0').LEVEL0
         MNOTE 12,'BAD PARM &PARM'
         AGO   .PLOOP
.*
.PROGRAM ANOP
&PROGRAM SETC  '&PARM'(9,K'&PARM-9)
         AGO   .PLOOP
.*
.COMMAREA ANOP
&COMMAREA SETC '&PARM'(10,K'&PARM-10)
         AGO   .PLOOP
.*
.LENGTH  ANOP
&LENGTH  SETC  '&PARM'(8,K'&PARM-8)
         AGO   .PLOOP
.*
.NOHAND  ANOP
&NOHAND  SETB  1
         AGO   .PLOOP
.*
.RESP    ANOP
&RESP    SETC  '&PARM'(6,K'&PARM-6)
&NOHAND  SETB  1
         AGO   .PLOOP
.*
.RESP2   ANOP
&RESP2   SETC  '&PARM'(7,K'&PARM-7)
         AGO   .PLOOP
.*
.LEVEL0  ANOP
&LEVEL0  SETB  1
         AGO   .PLOOP
.*
.ELOOP   ANOP
         L     R15,=A(P0E02)      LOAD PARM ADDRESS
         USING (P0E02,P0E02END),R15
         XC    P0E02(P0E02END-P0E02),P0E02 CLEAR PARMS
         MVC   P0E02FN,=X'0E02'   SET FUNCTION CODE
         AIF   (NOT &LEVEL0).NOTLV0
         MVI   P0E02LV0,X'FF'     SET LINK LEVEL 0
.NOTLV0  ANOP
         AIF   ('&PROGRAM' EQ '').MISPROG
         AIF   ('&PROGRAM'(1,1) EQ '''').STRING
         MVC   P0E02PGM,&PROGRAM  MOVE PROGRAM FROM LABEL
         AGO   .DOCOMM
.*
.STRING  ANOP
&PROGLEN SETA  K'&PROGRAM
         AIF   (&PROGLEN LT 3 OR &PROGLEN GT 10).BADPROG
         MVC   P0E02PGM,=CL8&PROGRAM MOVE PROGRAM AS STRING
.DOCOMM  ANOP
         AIF   ('&COMMAREA' NE '').COMMCHK
         AIF   ('&LENGTH' EQ '').COMMCHK
         AGO   .COMMERR
.*
.COMMCHK ANOP
         AIF   ('&COMMAREA' EQ '').ALLDONE
.* PROCESS COMMAREA
&COMMTQ  SETC  T'&COMMAREA
         AIF   ('&COMMAREA'(1,1) EQ '=' OR '&COMMTQ' EQ 'A').COMADLIT
         LA    R1,&COMMAREA       R1=COMMAREA ADDRESS FROM LABEL
         ST    R1,P0E02COM        SAVE IT
         AGO   .COMMLEN
.*
.COMADLIT ANOP
         L     R1,&COMMAREA       R1=INDIRECT COMMAREA ADDRESS
         ST    R1,P0E02COM        SAVE IT
.* LENGTH IS COMPULSORY FOR INDIRECT
         AIF   ('&LENGTH' EQ '').BADLEN
         AGO   .LENVAL
.*
.COMMLEN ANOP
         AIF   ('&LENGTH' NE '').LENVAL
.* DEFAULT LENGTH
         LA    R1,L'&COMMAREA     R1=IMPLIED LENGTH OF COMMAREA
         STH   R1,P0E02CLN        SAVE IT
         AGO   .ALLDONE
.*
.LENVAL  ANOP
         AIF   ('&LENGTH'(2,1) EQ '''').LENNUM
         AIF   (T'&LENGTH NE 'N').LENLABL
.LENNUM  ANOP
         LA    R1,&LENGTH         R1=COMMAREA LENGTH
         STH   R1,P0E02CLN        SAVE IT
         AGO   .ALLDONE
.*
.LENLABL ANOP
         LH    R1,&LENGTH         R1=COMMAREA LENGTH FROM LABEL
         STH   R1,P0E02CLN        SAVE IT
.ALLDONE ANOP
         AIF   (NOT &NOHAND).TRYRESP
         MVI   P0E02NOH,X'FF'     SET NOHANDLE
.TRYRESP ANOP
         AIF   ('&RESP' EQ '').NORESP
         LA    R1,&RESP           ADDRESS OF RESP
         ST    R1,P0E02RSP        SAVE IT
.NORESP  ANOP
         AIF   ('&RESP2' EQ '').NORESP2
         LA    R1,&RESP2          ADDRESS OF RESP2
         ST    R1,P0E02RS2        SAVE IT
.NORESP2 ANOP
* SPECIAL LINKAGE
         LA    R1,P0E02           R1=PARAMETER LIST
         LA    R14,P0E02RTN_&SYSNDX RETURN ADDRESS
         L     R15,=V(LCL0E02)    R15=EXTERNAL LINK MODULE ADDRESS
         BR    R15                GO TO IT
*
P0E02RTN_&SYSNDX EQU *
         L     R15,=A(P0E02)      LOAD PARM ADDRESS
         CLI   P0E02NOH,X'FF'     NOHANDLE ?
         BE    P0E02BYP_&SYSNDX   EXIT IF IT IS
         OC    EIBRESP,EIBRESP    ANY BAD RESPONSE ?
         BZ    P0E02BYP_&SYSNDX   EXIT IF NONE
* PGMIDERR
         DC    AL3(0),C'ABEND'    MARKER FOR Z390KCP ESTAE
         DC    AL4(P0E02BYP_&SYSNDX) ENTRYPOINT FOR IGNORE CONDITION
*
         AIF   (&PARMS_0E02).BYP0E02
&PARMS_0E02 SETB 1
P0E02    EQU   *
P0E02FN  DS    XL2                FUNCTION CODE
P0E02PGM DS    CL8                PROGRAM
P0E02COM DS    AL4                COMMAREA ADDRESS
P0E02CLN DS    XL2                COMMAREA LENGTH
P0E02LV0 DS    X                  FF=LINK LEVEL 0
P0E02NOH DS    X                  FF=NOHANDLE
P0E02RSP DS    AL4                RESP
P0E02RS2 DS    AL4                RESP2
P0E02END EQU   *                  END MARKER
         DS    0H
*
.BYP0E02 ANOP
P0E02BYP_&SYSNDX DS 0H
         AIF   (&LEVEL0).NOEI2
         MVC   EIBCALEN,DFHEICAL  RESTORE EIB COMMAREA LENGTH
.NOEI2   ANOP
         DROP  R15
         MEXIT
.*
.COMMERR MNOTE 12,'LENGTH WITHOUT COMMAREA'
         MEXIT
.*
.MISPROG MNOTE 12,'PROGRAM IS MISSING'
         MEXIT
.*
.BADPROG MNOTE 12,'INVALID PROGRAM'
         MEXIT
.*
.BADLEN  MNOTE 12,'LENGTH IS MANDATORY FOR INDIRECT COMMAREA'
         MEXIT
         MEND
