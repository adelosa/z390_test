.**********************************************************************
.* Copyright 2006 Automated Software Tools Corporation                *
.* This source code is part of z390 assembler/emulator package        *
.* The z390 package is distributed under GNU general public license   *
.* Author - Don Higgins                                               *
.**********************************************************************
.* 04/19/08 RPI 833 ADD STRING QUOTES FOR HLASM COMPATIBILITY         *
.**********************************************************************
         MACRO
         CICS_READPREV
.* XRBA AND FLENGTH ARE EXTENSIONS
         GBLB  &PARMS_0610
         LCLB  &RBA,&XRBA,&RRN,&NOHAND
         LCLC  &FILE,&DATASET,&INTO,&SET,&LENGTH,&FLENGTH,&RIDFLD
         LCLC  &REQID,&KLENGTH,&RESP,&RESP2
.*
&NP      SETA  N'&SYSLIST
&IP      SETA  0
.PLOOP   ANOP
&IP      SETA  &IP+1
         AIF   (&IP GT &NP).ELOOP
&PARM    SETC  '&SYSLIST(&IP)'
.*
         AIF   ('&PARM'(1,5)  EQ 'FILE(').FILE
         AIF   ('&PARM'(1,8)  EQ 'DATASET(').DATASET
         AIF   ('&PARM'(1,5)  EQ 'INTO(').INTO
         AIF   ('&PARM'(1,4)  EQ 'SET(').SET
         AIF   ('&PARM'(1,7)  EQ 'LENGTH(').LENGTH
         AIF   ('&PARM'(1,8)  EQ 'FLENGTH(').FLENGTH
         AIF   ('&PARM'(1,10) EQ 'KEYLENGTH(').KLENGTH
         AIF   ('&PARM'(1,7)  EQ 'RIDFLD(').RIDFLD
         AIF   ('&PARM'(1,6)  EQ 'REQID(').REQID
         AIF   ('&PARM'(1,3)  EQ 'RBA').RBA
         AIF   ('&PARM'(1,4)  EQ 'XRBA').XRBA
         AIF   ('&PARM'(1,3)  EQ 'RRN').RRN
         AIF   ('&PARM'(1,8)  EQ 'NOHANDLE').NOHAND
         AIF   ('&PARM'(1,5)  EQ 'RESP(').RESP
         AIF   ('&PARM'(1,6)  EQ 'RESP2(').RESP2
         MNOTE 12,'BAD PARM &PARM'
         AGO   .PLOOP
.*
.FILE    ANOP
&FILE    SETC  '&PARM'(6,K'&PARM-6)
         AGO   .PLOOP
.*
.DATASET ANOP
&DATASET SETC  '&PARM'(9,K'&PARM-9)
         AGO   .PLOOP
.*
.INTO    ANOP
&INTO    SETC '&PARM'(6,K'&PARM-6)
         AGO   .PLOOP
.*
.SET     ANOP
&SET     SETC '&PARM'(5,K'&PARM-5)
         AGO   .PLOOP
.*
.LENGTH  ANOP
&LENGTH  SETC  '&PARM'(8,K'&PARM-8)
         AGO   .PLOOP
.*
.FLENGTH ANOP
&FLENGTH SETC  '&PARM'(9,K'&PARM-9)
         AGO   .PLOOP
.*
.KLENGTH ANOP
&KLENGTH SETC  '&PARM'(11,K'&PARM-11)
         AGO   .PLOOP
.*
.RIDFLD  ANOP
&RIDFLD  SETC  '&PARM'(8,K'&PARM-8)
         AGO   .PLOOP
.*
.REQID   ANOP
&REQID   SETC  '&PARM'(7,K'&PARM-7)
         AGO   .PLOOP
.*
.RBA     ANOP
&RBA     SETB  1
         AGO   .PLOOP
.*
.XRBA    ANOP
&XRBA    SETB  1
         AGO   .PLOOP
.*
.RRN     ANOP
&RRN     SETB  1
         AGO   .PLOOP
.*
.NOHAND  ANOP
&NOHAND  SETB  1
         AGO   .PLOOP
.*
.RESP    ANOP
&RESP    SETC  '&PARM'(6,K'&PARM-6)
&NOHAND  SETB  1
         AGO   .PLOOP
.*
.RESP2   ANOP
&RESP2   SETC  '&PARM'(7,K'&PARM-7)
         AGO   .PLOOP
.*
.ELOOP   ANOP
         AIF   ('&FILE' EQ '' AND '&DATASET' EQ '').NOFILE
         AIF   ('&FILE' NE '' AND '&DATASET' NE '').BOTHF
         AIF   ('&INTO' EQ '' AND '&SET' EQ '').NOINTST
         AIF   ('&INTO' NE '' AND '&SET' NE '').BOTHINST
         AIF   ('&LENGTH' NE '' AND '&FLENGTH' NE '').BOTHLEN
         AIF   ('&RIDFLD' EQ '').NEEDRID
         AIF   (&RBA AND &XRBA).BADRBA
         AIF   (&RRN AND &RBA).BOTHTYP
         AIF   (&RRN AND &XRBA).BOTHTYP
.*
         L     R15,=A(P0610)      LOAD PARM ADDRESS
         USING (P0610,P0610END),R15
         XC    P0610(P0610END-P0610),P0610 CLEAR PARMS
         MVC   P0610FN,=X'0610'   SET FUNCTION CODE
         LA    R1,&RIDFLD         R1=ADDRESS OF RIDFLD
         ST    R1,P0610ARD        SAVE IT
         LA    R1,L'&RIDFLD       R1=LENGTH OF RIDFLD
         STC   R1,P0610LRD        SAVE IT
.*
         AIF   ('&FILE' EQ '').DODTAST
.* GOT FILE
         AIF   ('&FILE'(1,1) EQ '''').FLSTRING
         MVC   P0610FIL,&FILE     SET FILE NAME AS LABEL
         AGO   .CHKLEN
.*
.FLSTRING ANOP
&FLLEN   SETA  K'&FILE
         AIF   (&FLLEN GT 10).BADFILE
         MVC   P0610FIL,=CL8&FILE SET FILE NAME AS STRING
         AGO   .CHKLEN
.*
.* GOT DATASET
.DODTAST ANOP
         AIF   ('&DATASET'(1,1) EQ '''').DTSTRING
         MVC   P0610FIL,&DATASET  SET DATASET NAME AS LABEL
         AGO   .CHKLEN
.*
.DTSTRING ANOP
&DTLEN   SETA  K'&DATASET
         AIF   (&DTLEN GT 10).BADFILE
         MVC   P0610FIL,=CL8&DATASET SET DATASET NAME AS STRING
.*
.CHKLEN  ANOP
         AIF   ('&SET' EQ '').NOSET
         MVI   P0610SET,X'FF'     SET SET INDICATOR
         AGO   .DUNLEN
.*
.NOSET   ANOP
         LA    R1,&INTO           INTO ADDRESS
         ST    R1,P0610INT        SAVE IT
         AIF   ('&LENGTH' EQ '').NOLENG
         AIF   (T'&LENGTH NE 'N').LENLABL
         LA    R1,&LENGTH         R1=LENGTH
         ST    R1,P0610LEN        SAVE IT
         AGO   .DUNLEN
.*
.LENLABL ANOP
         LH    R1,&LENGTH         R1=LENGTH FROM LABEL
         ST    R1,P0610LEN        SAVE IT
         LA    R1,&LENGTH         R1=ADDRESS OF LENGTH
         ST    R1,P0610LAD        SAVE IT
         AGO   .DUNLEN
.*
.NOLENG  ANOP
         AIF   ('&FLENGTH' EQ '').NOLENS
         AIF   (T'&FLENGTH NE 'N').FLENLBL
         L     R1,=AL4(&FLENGTH)  R1=FLENGTH
         ST    R1,P0610LEN        SAVE IT
         AGO   .DUNLEN
.*
.FLENLBL ANOP
         L     R1,&FLENGTH        R1=FLENGTH FROM LABEL
         ST    R1,P0610LEN        SAVE IT
         LA    R1,&FLENGTH        R1=ADDRESS OF FLENGTH
         ST    R1,P0610FAD        SAVE IT
         AGO   .DUNLEN
.*
.NOLENS  ANOP
         LA    R1,L'&INTO         R1=IMPLIED LENGTH OF INTO
         ST    R1,P0610LEN        SAVE IT
.DUNLEN  ANOP
         AIF   ('&KLENGTH' EQ '').CHKOPT
         AIF   ('&KLENGTH'(2,1) EQ '''').KLENNUM
         AIF   (T'&KLENGTH NE 'N').KLENLAB
.KLENNUM ANOP
         LA    R1,&KLENGTH        R1=KEYLENGTH
         STH   R1,P0610KLN        SAVE IT
         MVI   P0610KIN,X'FF'     SET VALID KEYLENGTH
         AGO   .GENKEY
.*
.KLENLAB ANOP
         LH    R1,&KLENGTH        R1=KEYLENGTH FROM LABEL
         STH   R1,P0610KLN        SAVE IT
         MVI   P0610KIN,X'FF'     SET VALID KEYLENGTH
.GENKEY  ANOP
         LTR   R1,R1              IS IT KEYLENGTH(0) OR -VE ?
         BNP   CICS_READPREV_&SYSNDX._NOKEY EXIT IF IT IS
         CH    R1,=H'128'         GT MAX ALLOWED ?
         BH    CICS_READPREV_&SYSNDX._NOKEY EXIT IF IT IS
         BCTR  R1,0               -1 FOR DYNAMIC LENGTH
         STC   R1,CICS_READPREV_&SYSNDX._MVCKEY+1 STORE LENGTH
CICS_READPREV_&SYSNDX._MVCKEY EQU *
         MVC   P0610RID(0),&RIDFLD MOVE KEY
CICS_READPREV_&SYSNDX._NOKEY EQU *
         AGO   .DUNOPT
.*
.CHKOPT  ANOP
         AIF   (NOT &RBA).NORBA
         MVC   P0610RID+4(4),&RIDFLD MOVE RIDFLD
         MVI   P0610RBA,X'FF'     SET RBA
         AGO   .DUNOPT
.*
.NORBA   ANOP
         AIF   (NOT &XRBA).NOXRBA
         MVC   P0610RID(8),&RIDFLD MOVE RIDFLD
         MVI   P0610XRB,X'FF'     SET XRBA
         AGO   .DUNOPT
.*
.NOXRBA  ANOP
         AIF   (NOT &RRN).NORRN
         MVC   P0610RID(4),&RIDFLD MOVE RIDFLD
         MVI   P0610RRN,X'FF'     SET RRN
         AGO   .DUNOPT
.*
.NORRN   ANOP
.* DEFAULT IS FULL KEY
         MVC   P0610RID,&RIDFLD   MOVE FULL KEY
.DUNOPT  ANOP
         AIF   ('&REQID' EQ '').DUNREQ
         AIF   (T'&REQID NE 'N').REQLABL
         MVC   P0610REQ,=AL2(&REQID) MOVE REQID
         AGO   .DUNREQ
.*
.REQLABL ANOP
         MVC   P0610REQ,&REQID    MOVE REQID AS LABEL
.DUNREQ  ANOP
         ST    DFHEIBR,P0610EIB   SET EIB ADDRESS
         ST    TCTTEAR,P0610TCT   SET TCTTE ADDRESS
         AIF   (NOT &NOHAND).DUNNOH
         MVI   P0610NOH,X'FF'     SET NOHANDLE
.DUNNOH  ANOP
         AIF   ('&RESP' EQ '').NORESP
         LA    R1,&RESP           ADDRESS OF RESP
         ST    R1,P0610RSP        SAVE IT
.NORESP  ANOP
         AIF   ('&RESP2' EQ '').NORESP2
         LA    R1,&RESP2          ADDRESS OF RESP2
         ST    R1,P0610RS2        SAVE IT
.NORESP2 ANOP
         ZCALL LCL0610,(P0610),MF=I CALL READPREV PROCESSOR
.*
         L     R15,=A(P0610)      LOAD PARM ADDRESS
         AIF   ('&SET' EQ '').NOSET2
         L     &SET,P0610STA      LOAD THE SET REGISTER
.NOSET2  ANOP
         CLI   P0610NOH,X'FF'     NOHANDLE ?
         BE    P0610BYP_&SYSNDX   EXIT IF IT IS
         OC    EIBRESP,EIBRESP    ANY BAD RESPONSE ?
         BZ    P0610BYP_&SYSNDX   EXIT IF NONE
* INVREQ, FILENOTFOUND, LENGERR, NOTFND, NOTOPEN, DISABLED, ENDFILE
* ILLOGIC
         DC    AL3(0),C'ABEND'    MARKER FOR Z390KCP ESTAE
         DC    AL4(P0610BYP_&SYSNDX) ENTRYPOINT FOR IGNORE CONDITION
*
         AIF   (&PARMS_0610).BYP0610
&PARMS_0610 SETB 1
P0610    EQU   *
P0610FN  DS    XL2                FUNCTION CODE
P0610EIB DS    AL4                EIB
P0610TCT DS    AL4                TCTTE
P0610FIL DS    CL8                FILENAME
P0610SET DS    X                  FF=SET IS SPECIFIED
P0610STA DS    AL4                ADDRESS FOR SET
P0610INT DS    AL4                ADDRESS OF INTO
P0610LEN DS    XL4                LENGTH
P0610LAD DS    AL4                ADDRESS OF LENGTH IF LABEL
P0610FAD DS    AL4                ADDRESS OF FLENGTH IF LABEL
P0610KIN DS    X                  FF=KEYLENGTH IS VALID
P0610KLN DS    XL2                KEYLENGTH
P0610RID DS    XL128              RIDFLD
P0610ARD DS    AL4                A(RIDFLD)
P0610LRD DS    X                  L'RIDFLD
P0610RBA DS    X                  FF=RBA
P0610XRB DS    X                  FF=XRBA
P0610RRN DS    X                  FF=RRN
P0610REQ DS    XL2                REQID
P0610NOH DS    X                  FF=NOHANDLE
P0610RSP DS    AL4                RESP
P0610RS2 DS    AL4                RESP2
P0610END EQU   *                  END MARKER
         DS    0H
*
.BYP0610 ANOP
P0610BYP_&SYSNDX DS 0H
         DROP  R15
         MEXIT
.*
.NOFILE  MNOTE 12,'FILE OR DATASET MUST BE SPECIFIED'
         MEXIT
.*
.BOTHF   MNOTE 12,'BOTH FILE AND DATASET ARE SPECIFIED'
         MEXIT
.*
.BADFILE MNOTE 12,'INVALID FILE OR DATASET'
         MEXIT
.*
.NOINTST MNOTE 12,'INTO OR SET MUST BE SPECIFIED'
         MEXIT
.*
.BOTHINST MNOTE 12,'BOTH INTO AND SET ARE SPECIFIED'
         MEXIT
.*
.BOTHLEN MNOTE 12,'BOTH LENGTH AND FLENGTH ARE SPECIFIED'
         MEXIT
.*
.NEEDRID MNOTE 12,'RIDFLD IS MANDATORY'
         MEXIT
.*
.BADRBA  MNOTE 12,'BOTH RBA AND XRBA ARE SPECIFIED'
         MEXIT
.*
.BOTHTYP MNOTE 12,'BOTH RRN AND (X)RBA ARE SPECIFIED'
         MEXIT
         MEND
