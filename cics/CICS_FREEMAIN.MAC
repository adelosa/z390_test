.*********************************************************************
.* Copyright 2006 Automated Software Tools Corporation               *
.* This source code is part of z390 assembler/emulator package       *
.* The z390 package is distributed under GNU general public license  *
.* Author - Don Higgins                                              *
.*********************************************************************
.* 04/19/08 RPI 833 ADD STRING QUOTES FOR HLASM COMPATIBILITY 
.*********************************************************************
         MACRO
         CICS_FREEMAIN
         LCLC  &DATA,&DATAPTR
&NP      SETA  N'&SYSLIST
&IP      SETA  0
.PLOOP   ANOP
&IP      SETA  &IP+1
         AIF   (&IP GT &NP).ELOOP
&PARM    SETC  '&SYSLIST(&IP)'
         AIF   ('&PARM'(1,5)  EQ 'DATA(').DATA
         AIF   ('&PARM'(1,12) EQ 'DATAPOINTER(').DATAPNT
         MNOTE 12,'BAD PARM &PARM'
         AGO   .PLOOP
.*
.DATA    ANOP
&DATA    SETC  '&PARM'(6,K'&PARM-6)
         AGO   .PLOOP
.*
.DATAPNT ANOP
&DATAPTR SETC  '&PARM'(13,K'&PARM-13)
         AGO   .PLOOP
.*
.ELOOP   ANOP
         AIF   ('&DATA' NE '' AND '&DATAPTR' NE '').BADDATA
         AIF   ('&DATA' EQ '' AND '&DATAPTR' EQ '').NEEDDTA
         MVC   EIBFN,=X'0C04'     SET EIBFN
         XC    EIBRCODE,EIBRCODE  CLEAR EIBRCODE
         XC    EIBRESP,EIBRESP    CLEAR EIBRESP
         XC    EIBRESP2,EIBRESP2  CLEAR EIBRESP2
.*
         AIF   ('&DATAPTR' NE '').DOPTR
         L     R1,&DATA           INDIRECT FREEMAIN ADDRESS
         AGO   .DUNDATA
.*
.DOPTR   ANOP
         LR    R1,&DATAPTR        POINTER TO FREEMAIN ADDRESS
.*
.DUNDATA ANOP
         AHI   R1,-8              -8 TO REAL STORAGE START
         LA    R14,TCTTESCC       R14=ANCHOR OF GETMAIN CHAIN
CICS_FREEMAIN_&SYSNDX._LOOP EQU *
         OC    0(4,R14),0(R14)    ANY GETMAIN CHAIN ?
         BZ    CICS_FREEMAIN_&SYSNDX._INVREQ EXIT IF NO MATCHING ADDR
         C     R1,0(R14)          FOUND THE GETMAIN ?
         BE    CICS_FREEMAIN_&SYSNDX._FOUND EXIT IF FOUND
         L     R14,0(R14)         NEXT GETMAIN AREA
         B     CICS_FREEMAIN_&SYSNDX._LOOP LOOP THRU CHAIN
.*
CICS_FREEMAIN_&SYSNDX._INVREQ EQU *
.* STORAGE AREA NOT FOUND, INVOKE INVREQ
         MVI   EIBRCODE,X'E0'     SET EIBRCODE
         MVC   EIBRESP,DFHRESP(INVREQ) SET EIBRESP=INVREQ
         MVC   EIBRESP2,=F'1'     SET EIBRESP2=NOT GETMAINED AREA
         DC    AL3(0),C'ABEND'    MARKER FOR Z390KCP ESTAE
         DC    AL4(CICS_FREEMAIN_&SYSNDX._IGNORE) ENTPT FOR IGNORE COND
.*
CICS_FREEMAIN_&SYSNDX._FOUND EQU *
.* FOUND THE GETMAIN, REPAIR THE CHAIN THEN FREEMAIN
         MVC   0(4,R14),0(R1)     MOVE NEXT CHAIN ADDR INTO PREVIOUS
         L     R0,4(R1)           ACTUAL LENGTH TO FREEMAIN
         FREEMAIN LV=(R0)         FREEMAIN
CICS_FREEMAIN_&SYSNDX._IGNORE EQU *
         MEXIT
.*
.BADDATA MNOTE 12,'BOTH DATA AND DATAPOINTER ARE SPECIFIED'
         MEXIT
.*
.NEEDDTA MNOTE 12,'DATA OR DATAPOINTER MUST BE SPECIFIED'
         MEXIT
         MEND
