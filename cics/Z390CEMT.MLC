***********************************************************************
* Copyright 2006 Automated Software Tools Corporation                 *
* This source code is part of z390 assembler/emulator package         *
* The z390 package is distributed under GNU general public license    *
* Author - Don Higgins                                                *
***********************************************************************
*
* NOTE TO ME: CHANGE IFIL TO BE MORE LIKE IENQ AND SAVE STORAGE
*
* CEMT FUNCTIONS
*   THE FULL SYSTAX IS SUPPORTED, EG. CEMT PERFORM SHUTDOWN IMMEDIATE
*   THE FOLLOWING MINIMUMS ARE TESTED
*
*   I SYS        REQUEST Z390CICS.INI INFO AND DISPLAY
*   I TER        REQUEST TERMINAL INFO AND DISPLAY
*   I TRA        PCT DISPLAY
*   I FIL        FCT DISPLAY
*   I ENQ        ENQ DISPLAY
*
*   S TER OUT    CLOSES THE Z390KCP THREAD (CLIENT)
*
*   P SHU        CLOSES THE Z390KCP THREAD (CLIENT)
*                WHEN ALL ACTIVE TASKS HAVE ENDED, CLOSE SERVER
*
*   P SHU IMM    CLOSE THE SERVER
*
         DFHEIGBL
         DFHEISTG
PARSE    DS    0H
PARSE1   DS    CL20               COMMAND
PARSE2   DS    CL20               OPERATION TYPE
PARSE3   DS    CL20               OPERATION MODIFIER
PARSELEN EQU   *-PARSE
*
DFHPCTAD DS    A                  PCT ADDRESS
*
* I SYS  MESSAGE AREA
SNDISYST DS    CL(ISYSTITE)
SNDISYSL DS    CL(ISYSLSTL)
* I TER  MESSAGE AREA
SNDITERT DS    CL(ITERTITE)
SNDITERL DS    CL(ITERLSTL)
* I TRA MESSAGE AREA
SNDITRNT DS    CL(ITRNTITE)
SNDITRNL DS    CL(ITRNLSTL)
* I FIL MESSAGE AREA
SNDIFILT DS    CL(IFILTITE)
SNDIFILL DS    CL(IFILLSTL)
* I ENQ MESSAGE AREA
SNDIENQT DS    CL(IENQTITE)
SNDIENQL DS    CL(IENQLEN*21)
*
Z390CEMT DFHEIENT CODEREG=(R12,R3)
*
         EXEC  CICS HANDLE AID CLEAR(TERMINAT)
         L     R6,TCTTEDA         INITIAL TIOA (NULL TERMINATED)
         AHI   R6,3               MISS AID, CURSOR ADDRESS
         CLI   0(R6),SBA          PRECEDING SBA ?
         BNE   NOSBA              EXIT IF NOT
         AHI   R6,3               MISS SBA
NOSBA    EQU   *
         AHI   R6,4               MISS CEMT
         XC    PARSE(PARSELEN),PARSE CLEAR PARSE AREA
*
* FIND 1ST PARM
*
         BAL   R14,NEXTPARM       LOCATE START OF 1ST PARM
         CLI   0(R6),X'00'        END OF TIOA ?
         BE    PARSERR1           EXIT IF 1ST PARM NOT FOUND
         LA    R7,PARSE1          PARM ADDRESS
         BAL   R14,EXTRACT        EXTRACT PARM
*
* FIND 2ND PARM
*
         BAL   R14,NEXTPARM       LOCATE START OF 2ND PARM
         CLI   0(R6),X'00'        END OF TIOA ?
         BE    PROCESS            EXIT IF 2ND PARM NOT FOUND
         LA    R7,PARSE2          PARM ADDRESS
         BAL   R14,EXTRACT        EXTRACT PARM
*
* FIND OPTIONAL 3RD PARM
*
         BAL   R14,NEXTPARM       LOCATE START OF 2ND PARM
         CLI   0(R6),X'00'        END OF TIOA ?
         BE    PROCESS            EXIT IF NO 3RD PARM
         LA    R7,PARSE3          PARM ADDRESS
         BAL   R14,EXTRACT        EXTRACT PARM
*
PROCESS  EQU   *
         OI    PARSE1,C' '        CONVERT 1ST PARM TO UPPER CASE
         OC    PARSE2(3),=4C' '   CONVERT 2ND PARM TO UPPER CASE
         OC    PARSE3(4),=4C' '   CONVERT 3RD PARM TO UPPER CASE
* SYNTAX CHECKS
         CLI   PARSE1,C'I'        I ?
         BNE   TRYS               EXIT IF NOT
* CEMT I
         CLC   PARSE2(3),=C'SYS'  I SYS ?
         BE    ISYS               EXIT IF IT IS
         CLC   PARSE2(3),=C'TER'  I TER ?
         BE    ITER               EXIT IF IT IS
         CLC   PARSE2(3),=C'TRA'  I TRA ?
         BE    ITRN               EXIT IF IT IS
         CLC   PARSE2(3),=C'FIL'  I FIL ?
         BE    IFIL               EXIT IF IT IS
         CLC   PARSE2(3),=C'ENQ'  I ENQ ?
         BE    IENQ               EXIT IF IT IS
         B     PARSERRI           EXIT IF BAD INQUIRE
*
ISYS     EQU   *
* PROCESS CEMT I SYS, IGNORE OTHER PARMS
         L     R8,CEMTI           R8=MESSAGE LENGTH
         LA    R5,CEMTI           R5=MESSAGE
         MVC   CEMTIREQ,=C'FE01'  SET REQUEST CODE
         MVC   CEMTITRM,TCTTETI   SET TERMID
         MVC   CEMTITKN,EIBTASKN  SET TASK NO.
         TCPIO SEND,MSG=(R5),LMSG=(R8),PORT=3900
         LTR   R15,R15            CHECK RC ?
         BNZ   TCPIOERR           EXIT IF BAD
         L     R8,CEMTRCVE        R8=MESSAGE LENGTH
         TCPIO RECEIVE,MSG=CEMTRCVE,LMSG=(R8),PORT=3900
         LTR   R15,R15            CHECK RC ?
         BNZ   TCPIOERR           EXIT IF BAD
         MVC   SNDISYST,ISYSTITL  SET UP TITLE
         LA    R6,SNDISYSL        R6=DESTINATION
         LA    R8,ISYSLIST        R8=SOURCE
         LA    R7,ISYSLSTL        DESTINATION LENGTH
         LR    R9,R7              SOURCE LENGTH
         MVCL  R6,R8              INITIALIZE DISPLAY
         LA    R6,SNDISYSL        R6=DISPLAY ADDRESS
         USING ISYSDSCT,R6
         LA    R7,CEMTDATA        R7=RECEIVED DATA
         USING ISYSDATA,R7
* MOVE THE DATA
         MVC   ISYSJPTH,ISYSDJRP  MOVE JARPATH
         MVC   ISYSCPTH,ISYSDCSP  MOVE CICSPATH
         MVC   ISYSTPFX,ISYSDPFX  MOVE TERMID_PREFIX
         MVC   ISYSTDAT,=C'DMY'   SET DATE FORMAT DMY
         CLI   ISYSDDTE,C'K'      IS DATE=K ?
         BE    ISYSDTDN           EXIT IF IT IS
         MVC   ISYSTDAT,=C'MDY'   SET DATE FORMAT MDY
         CLI   ISYSDDTE,C'U'      IS DATE=U ?
         BE    ISYSDTDN           EXIT IF IT IS
         MVC   ISYSTDAT,=C'YMD'   SET DATE FORMAT YMD
ISYSDTDN EQU   *
         MVC   ISYSMAXU+1(1),ISYSDTUS MOVE MAXTHREADS IN USE
         OI    ISYSMAXU+1,C'0'    CONVERT TO CHAR
         CLI   ISYSDTUS,X'0A'     IS IT 10 ?
         BNE   ISYSHEX1           EXIT IF NOT
         MVC   ISYSMAXU,=C'10'    SET 10
ISYSHEX1 EQU   *
         MVC   ISYSMAXT+1(1),ISYSDTMX MOVE MAXTHREADS
         OI    ISYSMAXT+1,C'0'    CONVERT TO CHAR
         CLI   ISYSDTMX,X'0A'     IS IT 10 ?
         BNE   ISYSHEX2           EXIT IF NOT
         MVC   ISYSMAXT,=C'10'    SET 10
ISYSHEX2 EQU   *
         MVC   ISYSLCLU+1(1),ISYSDLUS MOVE LOCAL TERMINALS IN USE
         OI    ISYSLCLU+1,C'0'    CONVERT TO CHAR
         CLI   ISYSDLUS,X'0A'     IS IT 10 ?
         BNE   ISYSHEX3           EXIT IF NOT
         MVC   ISYSLCLU,=C'10'    SET 10
ISYSHEX3 EQU   *
         MVC   ISYSLOCL+1(1),ISYSDLCL MOVE LOCAL_TERMINALS
         OI    ISYSLOCL+1,C'0'    CONVERT TO CHAR
         CLI   ISYSDLCL,X'0A'     IS IT 10 ?
         BNE   ISYSHEX4           EXIT IF NOT
         MVC   ISYSLOCL,=C'10'    SET 10
ISYSHEX4 EQU   *
         MVC   ISYSRMTU+1(1),ISYSDRUS MOVE REMOTE TERMINALS IN USE
         OI    ISYSRMTU+1,C'0'    CONVERT TO CHAR
         CLI   ISYSDRUS,X'0A'     IS IT 10 ?
         BNE   ISYSHEX5           EXIT IF NOT
         MVC   ISYSRMTU,=C'10'    SET 10
ISYSHEX5 EQU   *
         MVC   ISYSREMT+1(1),ISYSDRMT MOVE REMOTE_TERMINALS
         OI    ISYSREMT+1,C'0'    CONVERT TO CHAR
         CLI   ISYSDRMT,X'0A'     IS IT 10 ?
         BNE   ISYSHEX6           EXIT IF NOT
         MVC   ISYSREMT,=C'10'    SET 10
ISYSHEX6 EQU   *
         MVC   ISYSLTRC,ISYSDTRL  MOVE TRACE_LOCALS
         MVC   ISYSZTRC,ISYSDTRZ  MOVE TRACE_Z390CICS
         MVC   ISYSINIT,ISYSDINT  MOVE INITIAL_TRANSID
         MVC   ISYSSEQT,ISYSDSEQ  MOVE SEQ_TERM
         EXEC  CICS SEND FROM(SNDISYST) LENGTH(ISYSLEN)
         B     RETURN             END OF PROGRAM
*
ITER     EQU   *
* PROCESS CEMT I TER, IGNORE OTHER PARMS
         L     R8,CEMTI           R8=MESSAGE LENGTH
         LA    R5,CEMTI           R5=MESSAGE
         MVC   CEMTIREQ,=C'FE00'  SET REQUEST CODE
         MVC   CEMTITRM,TCTTETI   SET TERMID
         MVC   CEMTITKN,EIBTASKN  SET TASK NO.
         TCPIO SEND,MSG=(R5),LMSG=(R8),PORT=3900
         LTR   R15,R15            CHECK RC ?
         BNZ   TCPIOERR           EXIT IF BAD
         LA    R8,200             R8=MESSAGE LENGTH
         TCPIO RECEIVE,MSG=CEMTRCVE,LMSG=(R8),PORT=3900
         LTR   R15,R15            CHECK RC ?
         BNZ   TCPIOERR           EXIT IF BAD
         MVC   SNDITERT,ITERTITL  SET UP TITLE
         LA    R6,SNDITERL        R6=DESTINATION
         LA    R8,ITERLIST        R8=SOURCE
         LA    R7,ITERLSTL        DESTINATION LENGTH
         LR    R9,R7              SOURCE LENGTH
         MVCL  R6,R8              INITIALIZE LIST
         LA    R6,SNDITERL        R6=LIST ADDRESS
         USING ITERDSCT,R6
         LA    R7,CEMTDATA        R7=RECEIVED DATA
         USING THRDDSCT,R7
         LA    R8,11              R8=MAX THREADS + 1 FOR SEQ TERM
         LA    R9,C'0'            R9=TERMID SUFFIX
ITERLOOP EQU   *
         MVC   ITERTERM(3),CEMTDATA+THRDLEN*THRDNUM MOVE TERMID PREFIX
         STC   R9,ITERTERM+3      MOVE TERMID SUFFIX
         C     R8,=F'1'           LAST TERMINAL ?
         BNE   ITERNTSQ           EXIT IF NOT
         MVC   ITERTERM,=C'SQ01'  SET SEQ TERM
ITERNTSQ EQU   *
         CLI   THRDTYPE,UNALLOC   IS IT UNALLOCATED ?
         BE    ITERLOC            EXIT IF IT IS
         MVC   ITERTYPE,=CL6'LOCAL' PRESUME LOCAL
         CLI   THRDTYPE,LOCAL     IS IT LOCAL ?
         BE    ITERLOC            EXIT IF IT IS
         MVC   ITERTYPE,=C'REMOTE' SET REMOTE
ITERLOC  EQU   *
         MVC   ITERTRAN,THRDTRAN  MOVE TRANSID
         MVC   ITERIND,=CL9'RUNNING' PRESUME RUNNING
         CLI   THRDIND,ST_RUN     RUNNING STATUS ?
         BE    ITERNXT            EXIT IF IT IS
         MVC   ITERIND,=C'AVAILABLE' SET AVAILABLE
         CLI   THRDIND,ST_AVAIL   AVAILABLE STATUS ?
         BE    ITERNXT            EXIT IF IT IS
         MVC   ITERIND,=CL9'SUS-ENQ' SET SUSPENDED-ENQ
         CLI   THRDIND,ST_SUSEQ   SUSPENDED-ENQ STATUS ?
         BE    ITERNXT            EXIT IF IT IS
         MVC   ITERIND,=C'SHUT DOWN' SET SHUT DOWN
ITERNXT  EQU   *
         AHI   R6,ITERLEN         BUMP OUTPUT POINTER
         AHI   R7,THRDLEN         BUMP INPUT POINTER
         AHI   R9,1               BUMP TERMID SUFFIX
         BCT   R8,ITERLOOP        LOOP
         EXEC  CICS SEND FROM(SNDITERT) LENGTH(ITERMLEN)
         B     RETURN             END OF PROGRAM
*
ITRN     EQU   *
* PROCESS CEMT I TRA, IGNORE OTHER PARMS
* ### LIMIT OF 17
* ### LATER, EXTEND AND CODE PAGE FORWARD (PF7) AND BACK (PF8)
         EXEC  CICS LOAD PROGRAM('DFHPCT') SET(R6)
         ST    R6,DFHPCTAD        SAVE LOAD POINT
         MVC   SNDITRNT,ITRNTITL  SET UP TITLE
         LA    R6,SNDITRNL        R6=DESTINATION
         LA    R8,ITRNLIST        R8=SOURCE
         LA    R7,ITRNLSTL        DESTINATION LENGTH
         LR    R9,R7              SOURCE LENGTH
         MVCL  R6,R8              INITIALIZE LIST
         LA    R6,SNDITRNL        R6=LIST ADDRESS
         USING ITRNDSCT,R6
         L     R7,DFHPCTAD        R7=PCT ADDRESS
         LA    R8,17              R8=MAX TRANSIDS
ITRNLOOP EQU   *
         MVC   ITRNTRAN,0(R7)     MOVE TRANSID
         MVC   ITRNPROG,4(R7)     MOVE PROGRAM
         MVC   BLDLNAME,4(R7)     SAVE PROGRAM NAME
         BLDL  0,BLDLLIST         BLDL
         LTR   R15,R15            RC=4 IF ENTRY NOT FOUND
         BZ    ITRNINCR           EXIT IF FOUND
* PROGRAM NOT FOUND
         MVC   ITRNMSG,=C'PROGRAM NOT FOUND' SET MESSAGE
ITRNINCR EQU   *
         AHI   R6,ITRNLEN         BUMP OUTPUT POINTER
         AHI   R7,12              BUMP PCT POINTER
         CLI   0(R7),X'FF'        END OF PCT ?
         BE    ITRNSEND           EXIT IF IT IS
         BCT   R8,ITRNLOOP        LOOP
ITRNSEND EQU   *
         EXEC  CICS SEND FROM(SNDITRNT) LENGTH(ITRNMLEN)
         EXEC  CICS RELEASE PROGRAM('DFHPCT')
         B     RETURN             END OF PROGRAM
*
IFIL     EQU   *
* PROCESS CEMT I FIL, IGNORE OTHER PARMS
         L     R8,CEMTI           R8=MESSAGE LENGTH
         LA    R5,CEMTI           R5=MESSAGE
         MVC   CEMTIREQ,=C'FE05'  SET REQUEST CODE
         MVC   CEMTITRM,TCTTETI   SET TERMID
         MVC   CEMTITKN,EIBTASKN  SET TASK NO.
         TCPIO SEND,MSG=(R5),LMSG=(R8),PORT=3900
         LTR   R15,R15            CHECK RC ?
         BNZ   TCPIOERR           EXIT IF BAD
* RECEIVE THE PREFIX ONLY
* THIS COULD BE A LARGE AREA, SO WE NEED TO GETMAIN A RECEIVE AREA
         TCPIO RECEIVE,MSG=CEMTRCVE,LMSG=12,PORT=3900
         LTR   R15,R15            CHECK RC ?
         BNZ   TCPIOERR           EXIT IF BAD
         L     R8,CEMTRCVE        R8=ACTUAL LENGTH TO RECEIVE
         MVC   CEMTRCVE,=F'200'   RESTORE THE STANDARD RECEIVE LENGTH
         AHI   R8,-12             -12 FOR DATA RECEIVED
         GETMAIN R,LV=(R8),A=IFILGETM
         ST    R0,IFILGETL        SAVE LENGTH FOR FREEMAIN
         TCPIO RECEIVE,MSG=0(R1),LMSG=(R8),PORT=3900
         LTR   R15,R15            CHECK RC ?
         BNZ   TCPIOERR           EXIT IF BAD
         MVC   SNDIFILT,IFILTITL  SET UP TITLE
         LA    R6,SNDIFILL        R6=DESTINATION
         LA    R8,IFILLIST        R8=SOURCE
         LA    R7,IFILLSTL        DESTINATION LENGTH
         LR    R9,R7              SOURCE LENGTH
         MVCL  R6,R8              INITIALIZE LIST
         LA    R6,SNDIFILL        R6=LIST ADDRESS
         USING IFILDSCT,R6
         L     R7,IFILGETM        R7=RECEIVED DATA
         USING IFILDATA,R7
IFILLOOP EQU   *
         MVC   IFILFILE,IFILDFLE  MOVE FILENAME
         MVC   IFILOPE,=C'OPE'    PRESET OPEN
         TM    IFILDSTA,FCTOPCLO  IS IT OPEN ?
         BO    IFILOPEN           EXIT IF IT IS
         MVC   IFILOPE,=C'CLO'    SET CLOSED
IFILOPEN EQU   *
         MVC   IFILENA,=C'ENA'    PRESET ENABLED
         TM    IFILDSTA,FCTENDIS  IS IT ENABLED ?
         BO    IFILENAB           EXIT IF IT IS
         MVC   IFILOPE,=C'DIS'    SET DISABLED
IFILENAB EQU   *
         TM    IFILDSTA,FCTUNENA  IS IT UNENABLED ?
         BNO   IFILNTUN           EXIT IF NOT
         MVC   IFILOPE,=C'UNE'    SET UNENABLED
IFILNTUN EQU   *
         MVC   IFILREA,=C'REA'    SET READ
         TM    IFILDSRV,FCTREAD   IS IT READ ?
         BO    IFILREAD           EXIT IF IT IS
         MVC   IFILREA,=C'   '    SET NO READ
IFILREAD EQU   *
         MVC   IFILUPD,=C'UPD'    SET UPDATE
         TM    IFILDSRV,FCTUPDT   IS IT UPDATE ?
         BO    IFILUPDT           EXIT IF IT IS
         MVC   IFILUPD,=C'   '    SET NO UPDATE
IFILUPDT EQU   *
         MVC   IFILADD,=C'ADD'    SET ADD
         TM    IFILDSRV,FCTADD    IS IT ADD ?
         BO    IFILADD1           EXIT IF IT IS
         MVC   IFILADD,=C'   '    SET NO ADD
IFILADD1 EQU   *
         MVC   IFILBRO,=C'BRO'    SET BROWSE
         TM    IFILDSRV,FCTBRWSE  IS IT BROWSE ?
         BO    IFILBRWS           EXIT IF IT IS
         MVC   IFILBRO,=C'   '    SET NO READ
IFILBRWS EQU   *
         MVC   IFILDEL,=C'DEL'    SET DELETE
         TM    IFILDSRV,FCTDELT   IS IT DELETE ?
         BO    IFILGOFV           EXIT IF IT IS
         MVC   IFILDEL,=C'   '    SET NO DELETE
IFILGOFV EQU   *
         MVC   IFILFXVR,=C'FIX'   SET FIXED
         TM    IFILDFXV,FCTFXVIM  IS IT FIXED ?
         BO    IFILINCR           EXIT IF IT IS
         MVC   IFILFXVR,=C'VAR'   SET VARIABLE
IFILINCR EQU   *
         MVC   IFILDSN,IFILDDSN   MOVE DSNAME
         AHI   R6,IFILLEN         BUMP OUTPUT POINTER
         AHI   R7,IFILDLEN        BUMP INPUT POINTER
         CLI   IFILDFLE,X'FF'     END OF FILES ?
         BNE   IFILLOOP           LOOP IF NOT
         EXEC  CICS SEND FROM(SNDIFILT) LENGTH(IFILMLEN)
         FREEMAIN LA=IFILGETL,A=IFILGETM
         B     RETURN             END OF PROGRAM
*
IFILGETM DS    A                  GETMAIN ADDRESS
IFILGETL DS    F                  GETMAIN LENGTH
         DROP  R6,R7
*
IENQ     EQU   *
* PROCESS CEMT I ENQ, IGNORE OTHER PARMS
         L     R8,CEMTI           R8=MESSAGE LENGTH
         LA    R5,CEMTI           R5=MESSAGE
         MVC   CEMTIREQ,=C'FE06'  SET REQUEST CODE
         MVC   CEMTITRM,TCTTETI   SET TERMID
         MVC   CEMTITKN,EIBTASKN  SET TASK NO.
         TCPIO SEND,MSG=(R5),LMSG=(R8),PORT=3900
         LTR   R15,R15            CHECK RC ?
         BNZ   TCPIOERR           EXIT IF BAD
* RECEIVE THE PREFIX ONLY
* THIS COULD BE A LARGE AREA, SO WE NEED TO GETMAIN A RECEIVE AREA
         TCPIO RECEIVE,MSG=CEMTRCVE,LMSG=12,PORT=3900
         LTR   R15,R15            CHECK RC ?
         BNZ   TCPIOERR           EXIT IF BAD
         L     R8,CEMTRCVE        R8=ACTUAL LENGTH TO RECEIVE
         MVC   CEMTRCVE,=F'200'   RESTORE THE STANDARD RECEIVE LENGTH
         AHI   R8,-12             -12 FOR DATA RECEIVED
         GETMAIN R,LV=(R8),A=IENQGETM
         ST    R0,IENQGETL        SAVE LENGTH FOR FREEMAIN
         TCPIO RECEIVE,MSG=0(R1),LMSG=(R8),PORT=3900
         LTR   R15,R15            CHECK RC ?
         BNZ   TCPIOERR           EXIT IF BAD
         MVC   SNDIENQT,IENQTITL  SET UP TITLE
         LA    R6,SNDIENQL        R6=DESTINATION
         LA    R7,L'SNDIENQL      DESTINATION LENGTH
         LR    R8,R6              AREA TO CLEAR
         SR    R9,R9              CLEAR SECOND LENGTH
         MVCLE R6,R8,C' '         CLEAR DESTINATION TO BLANKS
         LA    R6,SNDIENQL        R6=LIST ADDRESS
         USING IENQDSCT,R6
         L     R7,IENQGETM        R7=RECEIVED DATA
         USING IENQDATA,R7
         LA    R8,SBATAB          R8=SBA TABLE
IENQLOOP EQU   *
         CLI   IENQDRES,X'FF'     END OF ENQ'S ?
         BE    IENQSEND           EXIT IF IT IS
         MVC   IENQSBA,0(R8)      MOVE SBA
* IF LENGTH IS ZERO DISPLAY 4 BYTES IN HEX
         OC    IENQDLTH,IENQDLTH  ANY LENGTH ?
         BNZ   IENQGTRS           EXIT IF SOME
         UNPK  IENQRES(9),IENQDRES(5) UNPACK ENQ ADDRESS
         TR    IENQRES(8),IENQHEX-240 TRANSLATE TO PRINTABLE HEX
         MVI   IENQRES+8,C' '     CLEAR EXTRA BYTE
         B     IENQDOLN           EXIT
*
IENQGTRS EQU   *
* MOVE RESOURCE TO A MAX OF 30 (TRANSLATE OUT ANY HEX CHARS)
         LA    R15,30             SET MAXIMUM LENGTH
         CHHSI IENQDLTH,30        LENGTH > 30 ?
         BH    IENQDOEX           EXIT IF IT IS
         LH    R15,IENQDLTH       R15=LENGTH
IENQDOEX EQU   *
         BCTR  R15,0              -1 FOR EXECUTE
         EX    R15,IENQEXMV       MOVE RESOURCE
IENQDOLN EQU   *
         LH    R15,IENQDLTH       R15=LENGTH
         CVD   R15,DEC            CONVERT TO DECIMAL
         MVC   IENQLNTH-1(4),=X'40202120' MOVE EDIT WORD
         ED    IENQLNTH-1(4),DEC+6 EDIT LENGTH
         L     R15,IENQDUCT       R15=USE COUNT
         AHI   R15,1              CONVERT TO OFFSET 1
         CVD   R15,DEC            CONVERT TO DECIMAL
         MVC   IENQUCT-1(10),=X'40202020202020202120' MOVE EDIT WORD
         ED    IENQUCT-1(10),DEC+3 EDIT USE COUNT
         MVC   IENQOWN(3),EIBTRMID SET TERMID PREFIX
         MVC   IENQOWN+3(1),IENQDOWN SET TERMID SUFFIX
* ALTHOUGH WE WILL STORE X'FA' FOR THE 11TH TERMINAL
* WE WILL NEVER SEE IT AS CEMT CANNOT BE SIMULATED
         LA    R1,IENQDWT         R1=ADDRESS OF WAIT LIST INPUT
         LA    R15,IENQWAIT       R15=ADDRESS OF WAIT LIST OUTPUT
         LA    R14,THRDNUM        R14=NO. OF TERMINALS
         LA    R9,X'F0'           R9=TERMINAL SUFFIX
IENQWLP  EQU   *
         CLI   0(R1),X'FF'        TERMINAL WAITING ?
         BNE   IENQINC            EXIT IF NOT
         STC   R9,0(R15)          MARK IT
IENQINC  EQU   *
         AHI   R15,2              BUMP WAIT LIST OUTPUT POINTER
         AHI   R1,1               BUMP WAIT LIST INPUT POINTER
         AHI   R9,1               BUMP TERMINAL SUFFIX
         BCT   R14,IENQWLP        LOOP
         AHI   R6,IENQLEN         BUMP OUTPUT POINTER
         AHI   R7,IENQDLEN        BUMP INPUT POINTER
         AHI   R8,3               BUMP SBA TABLE POINTER
         B     IENQLOOP           LOOP
*
IENQSEND EQU   *
         EXEC  CICS SEND FROM(SNDIENQT) LENGTH(IENQMLEN)
         FREEMAIN LA=IENQGETL,A=IENQGETM
         B     RETURN             END OF PROGRAM
*
IENQEXMV MVC   IENQRES(0),IENQDRES MOVE RESOURCE
IENQGETM DS    A                  GETMAIN ADDRESS
IENQGETL DS    F                  GETMAIN LENGTH
IENQHEX  DC    C'0123456789ABCDEF'
         DROP  R6,R7
*
TRYS     EQU   *
* SYNTAX CHECK
         CLI   PARSE1,C'S'        S ?
         BNE   TRYP               EXIT IF NOT
         CLC   PARSE2(3),=C'TER'  S TER ?
         BNE   PARSERRS           EXIT IF BAD SET
         CLC   PARSE3(3),=C'OUT'  S TER OUT ?
         BNE   PARSERRS           EXIT IF BAD SET
STER     EQU   *
* PROCESS CEMT S TER OUT
         MVI   TCTTETS,X'FF'      SET SHUTTERM REQUEST
         B     RETURN             END OF PROGRAM
*
TRYP     EQU   *
         CLI   PARSE1,C'P'        P ?
         BNE   PARSERR1           EXIT IF BAD 1ST PARM
PSHU     EQU   *
         L     R8,CEMTI           R8=MESSAGE LENGTH
         LA    R5,CEMTI           R5=MESSAGE
         CLC   PARSE2(3),=C'SHU'  P SHU ?
         BNE   PARSERRP           EXIT IF BAD PERFORM
         MVC   CEMTIREQ,=C'FE02'  SET REQUEST CODE
         MVC   CEMTITRM,TCTTETI   SET TERMID
         CLC   PARSE3(3),=C'IMM'  P SHU IMM ?
         BNE   PSEND              EXIT IF NOT
         MVC   CEMTIREQ,=C'FE03'  SET REQUEST CODE
PSEND    EQU   *
         TCPIO SEND,MSG=(R5),LMSG=(R8),PORT=3900
         LTR   R15,R15            CHECK RC ?
         BNZ   TCPIOERR           EXIT IF BAD
         B     RETURN             EXIT
*
PARSERR1 EQU   *
* MISSING OR BAD 1ST PARAMETER
* ROW 1 0-79     HEAD
* ROW 2 80-159
* ROW 3 160-239  INQUIRE
* ROW 4 240-319  SET
* ROW 5 320-399  PERFORM
         EXEC  CICS SEND FROM(CONVP1) LENGTH(CONVP1L)
         BAL   R9,RECEIVE         RECEIVE
         CLC   EIBCPOSN,=H'160'   CURSOR BEFORE SELECTIONS ?
         BL    PARSERR1           EXIT IF IT IS
         CLC   EIBCPOSN,=H'399'   CURSOR AFTER SELECTIONS ?
         BH    PARSERR1           EXIT IF IT IS
         CLC   EIBCPOSN,=H'320'   PERFORM ?
         BH    PARSERRP           EXIT IF IT IS
         CLC   EIBCPOSN,=H'240'   SET ?
         BH    PARSERRS           EXIT IF IT IS
         CLC   EIBCPOSN,=H'160'   INQUIRE ?
         BH    PARSERRI           EXIT IF IT IS
         B     PARSERR1           EXIT
*
PARSERRI EQU   *
* MISSING OR BAD CEMT I
* ROW 1 0-79     HEAD
* ROW 2 80-159
* ROW 3 160-239  ENQUEUE
* ROW 3 240-319  FILE
* ROW 4 320-399  TERMINAL
* ROW 5 400-479  TRANSACTION
* ROW 6 480-559  SYSTEM
         MVI   PARSE1,C'I'        SET I
         EXEC  CICS SEND FROM(CONVPI) LENGTH(CONVPIL)
         BAL   R9,RECEIVE         RECEIVE
         CLC   EIBCPOSN,=H'160'   CURSOR BEFORE SELECTIONS ?
         BL    PARSERRI           EXIT IF IT IS
         CLC   EIBCPOSN,=H'559'   CURSOR AFTER SELECTIONS ?
         BH    PARSERRI           EXIT IF IT IS
         MVC   PARSE2(3),=C'SYS'  SET SYSTEM
         CLC   EIBCPOSN,=H'480'   SYSTEM ?
         BH    ISYS               EXIT IF IT IS
         MVC   PARSE2(3),=C'TRA'  SET TRANSACTION
         CLC   EIBCPOSN,=H'400'   TRANSACTION ?
         BH    ITRN               EXIT IF IT IS
         MVC   PARSE2(3),=C'TER'  SET TERMINAL
         CLC   EIBCPOSN,=H'320'   TERMINAL ?
         BH    ITER               EXIT IF IT IS
         MVC   PARSE2(3),=C'FIL'  SET FILE
         CLC   EIBCPOSN,=H'240'   FILE ?
         BH    IFIL               EXIT IF IT IS
         MVC   PARSE2(3),=C'ENQ'  SET ENQUEUE
         CLC   EIBCPOSN,=H'160'   ENQUEUE ?
         BH    IENQ               EXIT IF IT IS
         B     PARSERRI           EXIT
*
PARSERRS EQU   *
* MISSING OR BAD CEMT S
* ROW 1 0-79     HEAD
* ROW 2 80-159
* ROW 3 160-239  TERMINAL OUTOFSERVICE
         MVI   PARSE1,C'S'        SET S
         EXEC  CICS SEND FROM(CONVPS) LENGTH(CONVPSL)
         BAL   R9,RECEIVE         RECEIVE
         CLC   EIBCPOSN,=H'160'   CURSOR BEFORE SELECTIONS ?
         BL    PARSERRS           EXIT IF IT IS
         CLC   EIBCPOSN,=H'239'   CURSOR AFTER SELECTIONS ?
         BH    PARSERRS           EXIT IF IT IS
         MVC   PARSE2(3),=C'TER'  SET TERMINAL
         MVC   PARSE3(3),=C'OUT'  SET OUTOFSERVICE
         CLC   EIBCPOSN,=H'160'   TERMINAL OUT ?
         BH    STER               EXIT IF IT IS
         B     PARSERRS           EXIT
*
PARSERRP EQU   *
* MISSING OR BAD CEMT P
* ROW 1 0-79     HEAD
* ROW 2 80-159
* ROW 3 160-239  PERFORM SHUTDOWN
* ROW 3 240-319  PERFORM SHUTDOWN IMMEDIATE
         MVI   PARSE1,C'P'        SET P
         EXEC  CICS SEND FROM(CONVPP) LENGTH(CONVPPL)
         BAL   R9,RECEIVE         RECEIVE
         CLC   EIBCPOSN,=H'160'   CURSOR BEFORE SELECTIONS ?
         BL    PARSERRP           EXIT IF IT IS
         CLC   EIBCPOSN,=H'319'   CURSOR AFTER SELECTIONS ?
         BH    PARSERRP           EXIT IF IT IS
         MVC   PARSE2(3),=C'SHU'  SET SHUTDOWN
         MVC   PARSE3(3),=C'IMM'  SET IMMEDIATE
         CLC   EIBCPOSN,=H'240'   SHUTDOWN IMMEDIATE ?
         BH    PSHU               EXIT IF IT IS
         MVC   PARSE3(3),=C'   '  NO IMMEDIATE
         CLC   EIBCPOSN,=H'160'   SHUTDOWN ?
         BH    PSHU               EXIT IF IT IS
         B     PARSERRP           EXIT
*
TCPIOERR EQU   *
         EXEC  CICS SEND FROM(TCPERR) LENGTH(TCPERRL)
         B     RETURN             EXIT
*
TERMINAT EQU   *
         EXEC  CICS SEND FROM(CEMTCLR) LENGTH(CEMTCLRL)
*
RETURN   EQU   *
         EXEC  CICS RETURN
*
* SUBROUTINES
*
NEXTPARM EQU   *
* FIND START OF NEXT PARM
* R6=CURRENT LOCATION
         CLI   0(R6),X'00'        TIOA DONE ?
         BER   R14                EXIT IT IS IT
         CLI   0(R6),C' '         FIND BLANK ?
         BNER  R14                EXIT WHEN PARM FOUND
         AHI   R6,1               BUMP TIOA POINTER
         B     NEXTPARM           LOOP
*
EXTRACT  EQU   *
* EXTRACT PARM
* R6=1ST PARM CHAR
* R7=PARM LOCATION
         SR    R8,R8              ZERO PARM LENGTH
EXTRLOOP EQU   *
         TM    0(R6),X'BF'        END OF PARM (BLANK OR X'00') ?
         BER   R14                RETURN IF IT IS
         CH    R8,=H'21'          TOO MANY CHARS ?
         BE    PARSERR1           YES, ERROR IF OVER 20 CHARS
         MVC   0(1,R7),0(R6)      MOVE PARM CHAR
         AHI   R6,1               BUMP TIOA POINTER
         AHI   R7,1               BUMP PARM POINTER
         AHI   R8,1               COUNT THEM
         B     EXTRLOOP           LOOP
*
RECEIVE  EQU   *
         XC    RCVEAREA,RCVEAREA  CLEAR RECEIVE AREA
         EXEC  CICS RECEIVE INTO(RCVEAREA) LENGTH(RCVELEN)
         BR    R9                 RETURN
*
CEMTI    DS    0F
* REQUEST INFO
* FE00  REQUEST I TER DATA
* FE01  REQUEST I SYS DATA
* FE02  REQUEST P SHU
* FE03  REQUEST P SHU IMM
* FE05  REQUEST I FIL DATA
* FE06  REQUEST I ENQ DATA
         DC    A(CEMTIEND-*)
CEMTIREQ DS    CL4                REQUEST ID
CEMTITRM DS    CL4                TERMID
         DC    C'CEMT'            TRANSID
         DC    C' '               TRANSID TYPE
CEMTITKN DS    PL4                TASK NO.
CEMTIEND EQU   *
*
CEMTRCVE DS    0F
* RECEIVE AREA
* MUST KEEP THIS CONSISTANT WITH ALL Z390CICS SENDS
         DC    A(200)             MAX LENGTH
         DS    CL4                REQUEST CODE
         DS    CL4                TERMINAL ID
         DS    CL4                TRANSID
         DS    C                  TRANSID TYPE
         DS    PL4                TASK NO.
CEMTDATA DS    CL188              RETURNED DATA
*
* I SYS -- STRUCTURES
*
* -----KEYWORD----  VALUE---------------
* JARPATH           E:\SOFTWARE\Z390
* TERMID_PREFIX     DON
* THREADS            4 OF 10 ALLOCATED
*
ISYSTITL EQU   *
         TN3270 ESC,WRT_EW,WCC_KD,(SBA,1,1),(SF,ATT_UA_MDT),IC
         DC    C'CEMT I SYS'
         TN3270 (SBA,3,1),(SF,ATT_PA)
         DC    C'-----KEYWORD----  VALUE---------------'
ISYSTITE EQU   *-ISYSTITL
*
ISYSLIST EQU   *
         TN3270 (SBA,4,2)
         DC    CL18'JARPATH'
         DC    CL50' '
         TN3270 (SBA,5,2)
         DC    CL18'CICSPATH'
         DC    CL50' '
         TN3270 (SBA,6,2)
         DC    CL18'TERMID_PREFIX'
         DC    CL3' '
         TN3270 (SBA,7,2)
         DC    CL18'DATE_FORMAT'
         DC    CL3' '
         TN3270 (SBA,8,2)
         DC    CL18'THREADS'
         DC    C' N OF  N ALLOCATED'
         TN3270 (SBA,9,2)
         DC    CL18'LOCAL_TERMINALS'
         DC    C' N OF  N ALLOCATED'
         TN3270 (SBA,10,2)
         DC    CL18'REMOTE_TERMINALS'
         DC    C' N OF  N ALLOCATED'
         TN3270 (SBA,11,2)
         DC    CL18'INITIAL_TRANSID'
         DC    CL4' '
         TN3270 (SBA,12,2)
         DC    CL18'TRACE_LOCALS'
         DC    CL3' '
         TN3270 (SBA,13,2)
         DC    CL18'TRACE_Z390CICS'
         DC    CL3' '
         TN3270 (SBA,14,2)
         DC    CL18'SEQ_TERM'
         DC    CL5' '
ISYSLSTL EQU   *-ISYSLIST
ISYSLEN  DC    AL2(*-ISYSTITL)
*
* I TER -- STRUCTURES
*
* TERM  -TYPE-  TRAN  -STATUS--
* DON0  REMOTE  GUI6  RUNNING
* DON1  LOCAL         AVAILABLE
* DON2  LOCAL         SHUT DOWN
*
ITERTITL EQU   *
         TN3270 ESC,WRT_EW,WCC_KD,(SBA,1,1),(SF,ATT_UA_MDT),IC
         DC    C'CEMT I TER'
         TN3270 (SBA,3,1),(SF,ATT_PA)
         DC    C'TERM  -TYPE-  TRAN  -STATUS--'
ITERTITE EQU   *-ITERTITL
*
ITERLIST EQU   *
         TN3270 (SBA,4,2)
         DC    CL(ITERLEN-3)' '
         TN3270 (SBA,5,2)
         DC    CL(ITERLEN-3)' '
         TN3270 (SBA,6,2)
         DC    CL(ITERLEN-3)' '
         TN3270 (SBA,7,2)
         DC    CL(ITERLEN-3)' '
         TN3270 (SBA,8,2)
         DC    CL(ITERLEN-3)' '
         TN3270 (SBA,9,2)
         DC    CL(ITERLEN-3)' '
         TN3270 (SBA,10,2)
         DC    CL(ITERLEN-3)' '
         TN3270 (SBA,11,2)
         DC    CL(ITERLEN-3)' '
         TN3270 (SBA,12,2)
         DC    CL(ITERLEN-3)' '
         TN3270 (SBA,13,2)
         DC    CL(ITERLEN-3)' '
         TN3270 (SBA,14,2)
         DC    CL(ITERLEN-3)' '
ITERLSTL EQU   *-ITERLIST
ITERMLEN DC    AL2(*-ITERTITL)
*
* I TRAN -- STRUCTURES
*
* TRAN  PROGRAM-  ----MESSAGES-----
* AAAA  MELPROG1  PROGRAM NOT FOUND
* CEMT  Z390CEMT
*
ITRNTITL EQU   *
         TN3270 ESC,WRT_EW,WCC_KD,(SBA,1,1),(SF,ATT_UA_MDT),IC
         DC    C'CEMT I TRA'
         TN3270 (SBA,3,1),(SF,ATT_PA)
         DC    C'TRAN  PROGRAM-  ----MESSAGES-----'
ITRNTITE EQU   *-ITRNTITL
*
ITRNLIST EQU   *
         TN3270 (SBA,4,2)
         DC    CL(ITRNLEN-3)' '
         TN3270 (SBA,5,2)
         DC    CL(ITRNLEN-3)' '
         TN3270 (SBA,6,2)
         DC    CL(ITRNLEN-3)' '
         TN3270 (SBA,7,2)
         DC    CL(ITRNLEN-3)' '
         TN3270 (SBA,8,2)
         DC    CL(ITRNLEN-3)' '
         TN3270 (SBA,9,2)
         DC    CL(ITRNLEN-3)' '
         TN3270 (SBA,10,2)
         DC    CL(ITRNLEN-3)' '
         TN3270 (SBA,11,2)
         DC    CL(ITRNLEN-3)' '
         TN3270 (SBA,12,2)
         DC    CL(ITRNLEN-3)' '
         TN3270 (SBA,13,2)
         DC    CL(ITRNLEN-3)' '
         TN3270 (SBA,14,2)
         DC    CL(ITRNLEN-3)' '
         TN3270 (SBA,15,2)
         DC    CL(ITRNLEN-3)' '
         TN3270 (SBA,16,2)
         DC    CL(ITRNLEN-3)' '
         TN3270 (SBA,17,2)
         DC    CL(ITRNLEN-3)' '
         TN3270 (SBA,18,2)
         DC    CL(ITRNLEN-3)' '
         TN3270 (SBA,19,2)
         DC    CL(ITRNLEN-3)' '
         TN3270 (SBA,20,2)
         DC    CL(ITRNLEN-3)' '
ITRNLSTL EQU   *-ITRNLIST
ITRNMLEN DC    AL2(*-ITRNTITL)
*
* I FIL -- STRUCTURES
*
* FILENAME  ----------- STATUS ------------  DSNAME--------------------
* MYFILE01  OPE ENA REA UPD ADD BRO DEL FIX  E:\MYFILE01
*
IFILTITL EQU   *
         TN3270 ESC,WRT_EW,WCC_KD,(SBA,1,1),(SF,ATT_UA_MDT),IC
         DC    C'CEMT I FIL'
         TN3270 (SBA,3,1),(SF,ATT_PA)
         DC    C'FILENAME  ----------- STATUS ------------  DSNAME-----X
               -------------------------'
IFILTITE EQU   *-IFILTITL
*
IFILLIST EQU   *
         TN3270 (SBA,4,2)
         DC    CL(IFILLEN-3)' '
         TN3270 (SBA,5,2)
         DC    CL(IFILLEN-3)' '
         TN3270 (SBA,6,2)
         DC    CL(IFILLEN-3)' '
         TN3270 (SBA,7,2)
         DC    CL(IFILLEN-3)' '
         TN3270 (SBA,8,2)
         DC    CL(IFILLEN-3)' '
         TN3270 (SBA,9,2)
         DC    CL(IFILLEN-3)' '
         TN3270 (SBA,10,2)
         DC    CL(IFILLEN-3)' '
         TN3270 (SBA,11,2)
         DC    CL(IFILLEN-3)' '
         TN3270 (SBA,12,2)
         DC    CL(IFILLEN-3)' '
         TN3270 (SBA,13,2)
         DC    CL(IFILLEN-3)' '
         TN3270 (SBA,14,2)
         DC    CL(IFILLEN-3)' '
         TN3270 (SBA,15,2)
         DC    CL(IFILLEN-3)' '
         TN3270 (SBA,16,2)
         DC    CL(IFILLEN-3)' '
         TN3270 (SBA,17,2)
         DC    CL(IFILLEN-3)' '
         TN3270 (SBA,18,2)
         DC    CL(IFILLEN-3)' '
IFILLSTL EQU   *-IFILLIST
IFILMLEN DC    AL2(*-IFILTITL)
*
* I ENQ -- STRUCTURES
*
* RESOURCE----//---  LENGTH  USE COUNT  OWNER   -------WAITING-------
* 12345678901234567   00000  123456789   DON0   0 1 2 3 4 5 6 7 8 9 S
*
IENQTITL EQU   *
         TN3270 ESC,WRT_EW,WCC_KD,(SBA,1,1),(SF,ATT_UA_MDT),IC
         DC    C'CEMT I ENQ'
         TN3270 (SBA,3,1),(SF,ATT_PA)
         DC    C'RESOURCE----------------------  LENGTH  USE COUNT  OWN-
               ER  -------WAITING-------'
IENQTITE EQU   *-IENQTITL
*
IENQMLEN DC    AL2(IENQLEN*21)
*
SBATAB   EQU   *
         TN3270 (SBA,4,2)
         TN3270 (SBA,5,2)
         TN3270 (SBA,6,2)
         TN3270 (SBA,7,2)
         TN3270 (SBA,8,2)
         TN3270 (SBA,9,2)
         TN3270 (SBA,10,2)
         TN3270 (SBA,11,2)
         TN3270 (SBA,12,2)
         TN3270 (SBA,13,2)
         TN3270 (SBA,14,2)
         TN3270 (SBA,15,2)
         TN3270 (SBA,16,2)
         TN3270 (SBA,17,2)
         TN3270 (SBA,18,2)
         TN3270 (SBA,19,2)
         TN3270 (SBA,20,2)
         TN3270 (SBA,21,2)
         TN3270 (SBA,22,2)
         TN3270 (SBA,23,2)
         TN3270 (SBA,24,2)
*
CONVP1   EQU   *
         TN3270 ESC,WRT_EW,WCC_KD,(SBA,1,1),(SF,ATT_UA_MDT),IC
         DC    C'CEMT'
         TN3270 (SBA,1,78),(SF,ATT_PA)
         TN3270 (SBA,3,6)
         DC    C'Inquire'
         TN3270 (SBA,4,6)
         DC    C'Set'
         TN3270 (SBA,5,6)
         DC    C'Perform'
CONVP1L  DC    AL2(*-CONVP1)
*
CONVPI   EQU   *
         TN3270 ESC,WRT_EW,WCC_KD,(SBA,1,1),(SF,ATT_UA_MDT),IC
         DC    C'CEMT I'
         TN3270 (SBA,1,78),(SF,ATT_PA)
         TN3270 (SBA,3,6)
         DC    C'ENQueue'
         TN3270 (SBA,4,6)
         DC    C'FILe'
         TN3270 (SBA,5,6)
         DC    C'TERminal'
         TN3270 (SBA,6,6)
         DC    C'TRAnsaction'
         TN3270 (SBA,7,6)
         DC    C'SYStem'
CONVPIL  DC    AL2(*-CONVPI)
*
CONVPS   EQU   *
         TN3270 ESC,WRT_EW,WCC_KD,(SBA,1,1),(SF,ATT_UA_MDT),IC
         DC    C'CEMT S'
         TN3270 (SBA,1,78),(SF,ATT_PA)
         TN3270 (SBA,3,6)
         DC    C'TERminal OUTofservice'
CONVPSL  DC    AL2(*-CONVPS)
*
CONVPP   EQU   *
         TN3270 ESC,WRT_EW,WCC_KD,(SBA,1,1),(SF,ATT_UA_MDT),IC
         DC    C'CEMT P'
         TN3270 (SBA,1,78),(SF,ATT_PA)
         TN3270 (SBA,3,6)
         DC    C'PERform SHUtdown'
         TN3270 (SBA,4,6)
         DC    C'PERform SHUtdown IMMediate'
CONVPPL  DC    AL2(*-CONVPP)
*
CEMTCLR  EQU   *
         TN3270 ESC,WRT_EW,WCC_KD CLEAR SCREEN
CEMTCLRL DC    AL2(*-CEMTCLR)
*
TCPERR   EQU   *
         TN3270 WCC_KD,(SBA,3,2)
         DC    C'CEMT TCPIO ERROR'
TCPERRL  DC    AL2(*-TCPERR)
*
BLDLLIST DC    H'1'       BLDL LIST WITH 1 ENTRY
         DC    H'12'      BLDL ENTRY WITH LENGTH EXCLUDING LENGTH FIELD
BLDLNAME DC    CL8' '     BLDL ENTRY NAME TO FIND IN SYS390 DIR OR CDE
         DC    XL4'00'    TTRK R=1 IF FOUND K=1 IF CDE OR 0 IF SYS390
*
RCVELEN  DS    AL2                RECEIVED LENGTH
RCVEAREA DC    XL80'00'           RECEIVE AREA
*
DEC      DC    PL8'0'
*
* I SYS -- DSECT OUTPUT
*
ISYSDSCT DSECT
         DS    CL3                SBA
         DS    CL18               HEADER
ISYSJPTH DS    CL50               JARPATH
         DS    CL3                SBA
         DS    CL18               HEADER
ISYSCPTH DS    CL50               CICSPATH
         DS    CL3                SBA
         DS    CL18               HEADER
ISYSTPFX DS    CL3                TERMID_PREFIX
         DS    CL3                SBA
         DS    CL18               HEADER
ISYSTDAT DS    CL3                DATE FORMAT
         DS    CL3                SBA
         DS    CL18               HEADER
* NN OF NN ALLOCATED
ISYSMAXU DS    CL2                MAXTHREADS IN USE
         DS    CL4                ' OF '
ISYSMAXT DS    CL2                MAXTHREADS
         DS    CL10               ' ALLOCATED'
         DS    CL3                SBA
         DS    CL18               HEADER
ISYSLCLU DS    CL2                LOCAL TERMINALS IN USE
         DS    CL4                ' OF '
ISYSLOCL DS    CL2                LOCAL_TERMINALS
         DS    CL10               ' ALLOCATED'
         DS    CL3                SBA
         DS    CL18               HEADER
ISYSRMTU DS    CL2                REMOTE TERMINALS IN USE
         DS    CL4                ' OF '
ISYSREMT DS    CL2                REMOTE_TERMINALS
         DS    CL10               ' ALLOCATED'
         DS    CL3                SBA
         DS    CL18               HEADER
ISYSINIT DS    CL4                INITIAL_TRANSID
         DS    CL3                SBA
         DS    CL18               HEADER
ISYSLTRC DS    CL3                TRACE_LOCALS
         DS    CL3                SBA
         DS    CL18               HEADER
ISYSZTRC DS    CL3                TRACE_Z390CICS
         DS    CL3                SBA
         DS    CL18               HEADER
ISYSSEQT DS    CL5                SEQ_TERM
*
* I SYS -- REQUESTED DATA FORMAT
*
ISYSDATA DSECT
ISYSDJRP DS    CL50               JARPATH
ISYSDCSP DS    CL50               CICSPATH
ISYSDPFX DS    CL3                TERMID_PREFIX
ISYSDDTE DS    C                  DATE FORMAT
ISYSDTMX DS    X                  MAXTHREADS
ISYSDTUS DS    X                  THREADS IN USE
ISYSDLCL DS    X                  LOCAL_TERMINALS
ISYSDLUS DS    X                  LOCAL TERMINALS IN USE
ISYSDRMT DS    X                  REMOTE_TERMINALS
ISYSDRUS DS    X                  REMOTE TERMINALS IN USE
ISYSDINT DS    CL4                INITIAL_TRANSID
ISYSDTRL DS    CL3                TRACE_LOCALS
ISYSDTRZ DS    CL3                TRACE_Z390CICS
ISYSDSEQ DS    CL5                SEQ_TERM
*
* I TER -- DSECT OUTPUT
*
ITERDSCT DSECT
         DS    CL3                SBA
ITERTERM DS    CL4                TERMID
         DS    CL2
ITERTYPE DS    CL6                LOCAL OR REMOTE
         DS    CL2
ITERTRAN DS    CL4                TRANSID
         DS    CL2
ITERIND  DS    CL9                RUNNING/AVAILABLE/SHUT DOWN
ITERLEN  EQU   *-ITERDSCT
*
* I TRA -- DSECT OUTPUT
*
ITRNDSCT DSECT
         DS    CL3                SBA
ITRNTRAN DS    CL4                TRANSID
         DS    CL2
ITRNPROG DS    CL8                PROGRAM
         DS    CL2
ITRNMSG  DS    CL17               MESSAGE
ITRNLEN  EQU   *-ITRNDSCT
*
* I FIL -- DSECT OUTPUT
*
IFILDSCT DSECT
         DS    CL3                SBA
IFILFILE DS    CL8                FILENAME
         DS    CL2
IFILOPE  DS    CL3                OPE/CLO
         DS    C
IFILENA  DS    CL3                ENA/DIS/UNE
         DS    C
IFILREA  DS    CL3
         DS    C
IFILUPD  DS    CL3
         DS    C
IFILADD  DS    CL3
         DS    C
IFILBRO  DS    CL3
         DS    C
IFILDEL  DS    CL3
         DS    C
IFILFXVR DS    CL3                FIX/VAR
         DS    CL2
IFILDSN  DS    CL40               DSNAME
IFILLEN  EQU   *-IFILDSCT
*
* I FIL -- REQUESTED DATA FORMAT
*
IFILDATA DSECT
IFILDFLE DS    CL8                FILENAME
IFILDSTA DS    X                  STATUS
IFILDSRV DS    X                  SERVREQ
IFILDFXV DS    X                  FIXED/VARIABLE
IFILDDSN DS    CL40               DSNAME
IFILDLEN EQU   *-IFILDATA
*
IENQDSCT DSECT
IENQSBA  DS    CL3                SBA
IENQRES  DS    CL30               RESOURCE
         DS    CL5
IENQLNTH DS    CL3                LENGTH
         DS    CL2
IENQUCT  DS    CL9                USE COUNT
         DS    CL3
IENQOWN  DS    CL4                OWNER
         DS    CL2
IENQWAIT DS    CL21               WAIT LIST
IENQLEN  EQU   *-IENQDSCT
*
* I ENQ -- REQUESTED DATA FORMAT
*
IENQDATA DSECT
IENQDRES DS    CL30               RESOURCE
IENQDLTH DS    XL2                LENGTH
IENQDUCT DS    XL4                USE COUNT
IENQDOWN DS    C                  OWNER
IENQDWT  DS    CL(THRDNUM)        WAIT LIST
IENQDLEN EQU   *-IENQDATA
*
         THRDDSCT                 TERMINAL THREAD CONTROL AREA
         DFHFCTDS                 FILE CONTROL TABLE
         ACBD
*
         TN3270 SYMBOLS
         END
