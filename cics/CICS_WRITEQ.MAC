.**********************************************************************
.* Copyright 2006 Automated Software Tools Corporation                *
.* This source code is part of z390 assembler/emulator package        *
.* The z390 package is distributed under GNU general public license   *
.* Author - Don Higgins                                               *
.**********************************************************************
.* 04/19/08 RPI 833 ADD STRING QUOTES FOR HLASM COMPATIBILITY         *
.**********************************************************************
         MACRO
         CICS_WRITEQ
         GBLB  &PARMS_0A02
         LCLB  &REWRITE,&NOHAND
         LCLC  &TYPE,&QUEUE,&QNAME,&FROM,&LENGTH,&NUMITEMS,&ITEM
.* ICTERM AND ICTRAN ARE FOR INTERNAL USE ONLY
         LCLC  &ICTERM,&ICTRAN
         LCLC  &RESP,&RESP2
&TYPE    SETC  '&SYSLIST(1)'
         AIF   ('&TYPE' EQ 'TS').TS
         MNOTE 12,'WRITEQ TYPE NOT RECOGNIZED'
         MEXIT
.*
.TS      ANOP
&NP      SETA  N'&SYSLIST
&IP      SETA  1
.PLOOP   ANOP
&IP      SETA  &IP+1
         AIF   (&IP GT &NP).ELOOP
&PARM    SETC  '&SYSLIST(&IP)'
.* DISCARDED PARMS
         AIF   ('&PARM'(1,4)  EQ 'MAIN').PLOOP
         AIF   ('&PARM'(1,9)  EQ 'AUXILIARY').PLOOP
.*
         AIF   ('&PARM'(1,6)  EQ 'QUEUE(').QUEUE
         AIF   ('&PARM'(1,6)  EQ 'QNAME(').QNAME
         AIF   ('&PARM'(1,5)  EQ 'FROM(').FROM
         AIF   ('&PARM'(1,7)  EQ 'LENGTH(').LENGTH
         AIF   ('&PARM'(1,9)  EQ 'NUMITEMS(').NUMITEMS
         AIF   ('&PARM'(1,5)  EQ 'ITEM(').ITEM
         AIF   ('&PARM'(1,7)  EQ 'REWRITE').REWRITE
         AIF   ('&PARM'(1,7)  EQ 'ICTERM(').ICTERM
         AIF   ('&PARM'(1,7)  EQ 'ICTRAN(').ICTRAN
         AIF   ('&PARM'(1,8)  EQ 'NOHANDLE').NOHAND
         AIF   ('&PARM'(1,5)  EQ 'RESP(').RESP
         AIF   ('&PARM'(1,6)  EQ 'RESP2(').RESP2
         MNOTE 12,'BAD PARM &PARM'
         AGO   .PLOOP
.*
.QUEUE   ANOP
&QUEUE   SETC  '&PARM'(7,K'&PARM-7)
         AGO   .PLOOP
.*
.QNAME   ANOP
&QNAME   SETC  '&PARM'(7,K'&PARM-7)
         AGO   .PLOOP
.*
.FROM    ANOP
&FROM    SETC '&PARM'(6,K'&PARM-6)
         AGO   .PLOOP
.*
.LENGTH  ANOP
&LENGTH  SETC  '&PARM'(8,K'&PARM-8)
         AGO   .PLOOP
.*
.NUMITEMS ANOP
&NUMITEMS SETC  '&PARM'(10,K'&PARM-10)
         AGO   .PLOOP
.*
.ITEM    ANOP
&ITEM    SETC  '&PARM'(6,K'&PARM-6)
         AGO   .PLOOP
.*
.REWRITE ANOP
&REWRITE SETB  1
         AGO   .PLOOP
.*
.ICTERM  ANOP
&ICTERM  SETC  '&PARM'(8,K'&PARM-8)
         AGO   .PLOOP
.*
.ICTRAN  ANOP
&ICTRAN  SETC  '&PARM'(8,K'&PARM-8)
         AGO   .PLOOP
.*
.NOHAND  ANOP
&NOHAND  SETB  1
         AGO   .PLOOP
.*
.RESP    ANOP
&RESP    SETC  '&PARM'(6,K'&PARM-6)
&NOHAND  SETB  1
         AGO   .PLOOP
.*
.RESP2   ANOP
&RESP2   SETC  '&PARM'(7,K'&PARM-7)
         AGO   .PLOOP
.*
.ELOOP   ANOP
         AIF   ('&QUEUE' EQ '' AND '&QNAME' EQ '').NOQUEUE
         AIF   ('&QUEUE' NE '' AND '&QNAME' NE '').BOTHQ
         AIF   (&REWRITE AND '&ITEM' EQ '').BADITEM
         AIF   ('&NUMITEMS' NE '' AND '&ITEM' NE '').BADNUM
         AIF   ('&NUMITEMS' NE '' AND &REWRITE).BADNUM
         AIF   ('&FROM' EQ '').BADFROM
         AIF   ('&ITEM' NE '' AND (NOT &REWRITE)).COMPAT
         AGO   .WQGO
.*
.COMPAT  ANOP
.* ITEM WITHOUT REWRITE BECOMES NUMITEMS
&NUMITEMS SETC '&ITEM'
&ITEM    SETC  ''
.*
.WQGO    ANOP
         L     R15,=A(P0A02)      LOAD PARM ADDRESS
         USING (P0A02,P0A02END),R15
         XC    P0A02(P0A02END-P0A02),P0A02 CLEAR PARMS
         MVC   P0A02FN,=X'0A02'   SET FUNCTION CODE
.*
         AIF   ('&QUEUE' EQ '').DOQNAME
.* GOT QUEUE
         AIF   ('&QUEUE'(1,1) EQ '''').QUSTRNG
         MVC   P0A02QNM(8),&QUEUE SET QUEUE NAME AS LABEL
         MVC   P0A02QNM+8(8),=8C' ' CLEAR REMAINDER
         AGO   .CHKNAME
.*
.QUSTRNG ANOP
&QULEN   SETA  K'&QUEUE
         AIF   (&QULEN GT 10).BADQ
         MVC   P0A02QNM,=CL16&QUEUE SET QUEUE NAME AS STRING
         AGO   .CHKNAME
.*
.* GOT QNAME
.DOQNAME ANOP
         AIF   ('&QNAME'(1,1) EQ '''').QNSTRING
         MVC   P0A02QNM,&QNAME    SET QUEUE NAME AS LABEL
         AGO   .CHKNAME
.*
.QNSTRING ANOP
&QNLEN   SETA  K'&QNAME
         AIF   (&QNLEN GT 18).BADQ
         MVC   P0A02QNM,=CL16&QNAME SET QUEUE NAME AS STRING
.CHKNAME ANOP
.* PROCESS ITEM
         AIF   ('&ITEM' EQ '').DUNITEM
         AIF   (T'&ITEM NE 'N').ITMLABL
         MVC   P0A02ITM,=AL2(&ITEM) MOVE ITEM
         AGO   .DUNITEM
.*
.ITMLABL ANOP
         MVC   P0A02ITM,&ITEM     MOVE ITEM AS LABEL
.DUNITEM ANOP
.*
         AIF   ('&FROM' NE '').GOTFROM
         AIF   ('&LENGTH' EQ '').GOTFROM
         MNOTE 12,'LENGTH WITHOUT FROM'
         MEXIT
.*
.GOTFROM ANOP
&FROMTQ  SETC  T'&FROM
         AIF   ('&FROM'(1,1) EQ '=' OR '&FROMTQ' EQ 'A').FRMADLIT
         LA    R1,&FROM           R1=FROM ADDRESS AS LABEL
         ST    R1,P0A02FRM        SAVE IT
         AGO   .FROMLEN
.*
.FRMADLIT ANOP
         L     R1,&FROM           R1=INDIRECT FROM ADDRESS AS LABEL
         ST    R1,P0A02FRM        SAVE IT
.* LENGTH IS COMPULSORY FOR INDIRECT
         AIF   ('&LENGTH' EQ '').BADLEN
.FROMLEN ANOP
         AIF   ('&LENGTH' NE '').LENVAL
         LA    R1,L'&FROM         R1=IMPLIED LENGTH OF FROM
         STH   R1,P0A02LEN        SAVE IT
         AGO   .DUNLEN
.*
.LENVAL  ANOP
         AIF   ('&LENGTH'(2,1) EQ '''').LENNUM
         AIF   (T'&LENGTH NE 'N').LENLABL
.LENNUM  ANOP
         LA    R1,&LENGTH         R1=LENGTH
         STH   R1,P0A02LEN        SAVE IT
         AGO   .DUNLEN
.*
.LENLABL ANOP
         LH    R1,&LENGTH         R1=LENGTH FROM LABEL
         STH   R1,P0A02LEN        SAVE IT
.DUNLEN  ANOP
         AIF   ('&NUMITEMS' EQ '').NONUMIT
         AIF   (T'&NUMITEMS EQ 'N').BADNUM2
         LA    R1,&NUMITEMS       R1=ADDRESS OF NUMITEMS
         ST    R1,P0A02NUM        SAVE IT
.NONUMIT ANOP
         AIF   ('&ICTERM' EQ '').DOICTRN
.* GOT ICTERM
         MVC   P0A02ICM,&ICTERM   SET ICTERM AS LABEL
.DOICTRN ANOP
         AIF   ('&ICTRAN' EQ '').ALLDUN
.* GOT ICTRAN
         MVC   P0A02ICN,&ICTRAN   SET ICTRAN AS LABEL
.ALLDUN  ANOP
         ST    DFHEIBR,P0A02EIB   SET EIB ADDRESS
         ST    TCTTEAR,P0A02TCT   SET TCTTE ADDRESS
         AIF   (NOT &NOHAND).DUNNOH
         MVI   P0A02NOH,X'FF'     SET NOHANDLE
.DUNNOH  ANOP
         AIF   ('&RESP' EQ '').NORESP
         LA    R1,&RESP           ADDRESS OF RESP
         ST    R1,P0A02RSP        SAVE IT
.NORESP  ANOP
         AIF   ('&RESP2' EQ '').NORESP2
         LA    R1,&RESP2          ADDRESS OF RESP2
         ST    R1,P0A02RS2        SAVE IT
.NORESP2 ANOP
         ZCALL LCL0A02,(P0A02),MF=I CALL WRITEQ PROCESSOR
*
         L     R15,=A(P0A02)      LOAD PARM ADDRESS
         CLI   P0A02NOH,X'FF'     NOHANDLE ?
         BE    P0A02BYP_&SYSNDX   EXIT IF IT IS
         OC    EIBRESP,EIBRESP    ANY BAD RESPONSE ?
         BZ    P0A02BYP_&SYSNDX   EXIT IF NONE
* INVREQ, ITEMERR, LENGERR, QIDERR, IOERR
         DC    AL3(0),C'ABEND'    MARKER FOR Z390KCP ESTAE
         DC    AL4(P0A02BYP_&SYSNDX) ENTRYPOINT FOR IGNORE CONDITION
*
         AIF   (&PARMS_0A02).BYP0A02
&PARMS_0A02 SETB 1
P0A02    EQU   *
P0A02FN  DS    XL2                FUNCTION CODE
P0A02EIB DS    AL4                EIB
P0A02TCT DS    AL4                TCTTE
P0A02QNM DS    CL16               QUEUE NAME
P0A02ITM DS    XL2                ITEM
P0A02LEN DS    XL2                LENGTH
P0A02FRM DS    AL4                ADDRESS OF FROM
P0A02NUM DS    AL4                ADDRESS OF NUMITEMS
P0A02ICM DS    CL4                ICTERM
P0A02ICN DS    CL4                ICTRAN
P0A02NOH DS    X                  FF=NOHANDLE
P0A02RSP DS    AL4                RESP
P0A02RS2 DS    AL4                RESP2
P0A02END EQU   *                  END MARKER
         DS    0H
*
.BYP0A02 ANOP
P0A02BYP_&SYSNDX DS 0H
         DROP  R15
         MEXIT
.*
.NOQUEUE MNOTE 12,'QUEUE OR QNAME MUST BE SPECIFIED'
         MEXIT
.*
.BOTHQ   MNOTE 12,'BOTH QUEUE AND QNAME ARE SPECIFIED'
         MEXIT
.*
.BADQ    MNOTE 12,'INVALID QUEUE OR QNAME'
         MEXIT
.*
.BADITEM MNOTE 12,'REWRITE REQUIRES ITEM'
         MEXIT
.*
.BADNUM  MNOTE 12,'IF NUMITEMS IS SPECIFIED, ITEM AND REWRITE ARE INVAL-
               ID'
         MEXIT
.*
.BADNUM2 MNOTE 12,'NUMITEMS MUST BE A LABEL (MAY HAVE ORIGINATED AS ITE-
               M)'
         MEXIT
.*
.BADFROM MNOTE 12,'FROM IS MANDATORY'
         MEXIT
.*
.BADLEN  MNOTE 12,'LENGTH IS MANDATORY FOR INDIRECT FROM'
         MEXIT
         MEND
