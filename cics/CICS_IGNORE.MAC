.*********************************************************************
.* Copyright 2006 Automated Software Tools Corporation               *
.* This source code is part of z390 assembler/emulator package       *
.* The z390 package is distributed under GNU general public license  *
.* Author - Don Higgins                                              *
.*********************************************************************
.* 04/19/08 RPI 833 ADD STRING QUOTES FOR HLASM COMPATIBILITY 
.*********************************************************************
         MACRO
         CICS_IGNORE
         LCLA  &CONDRNG
         LCLC  &TYPE
         LCLC  &CONDS(100)
&CONDRNG SETA  100
&TYPE    SETC  '&SYSLIST(1)'
         AIF   ('&TYPE' EQ 'CONDITION').COND
         MNOTE 12,'IGNORE TYPE NOT RECOGNIZED'
         MEXIT
.*
.* IGNORE CONDITION
.*
.COND    ANOP
         MVC   EIBFN,=X'020A'     SET EIBFN
         USING DFHHCBLK,R1
         ICM   R1,15,DFHEIHCN     ANY CONDITION BLOCK ADDRESS ?
         BZ    CICS_IGNORE_&SYSNDX._02 EXIT IF NO CONDITION BLOCKS
CICS_IGNORE_&SYSNDX._05 DS 0H
         LR    R14,R1             R14=LAST CONDITION BLOCK ADDRESS
         ICM   R1,15,HCNCHAIN     R1=NEXT CONDITION BLOCK
         BNZ   CICS_IGNORE_&SYSNDX._05 LOOP
.* END OF CONDITION BLOCK CHAIN
         LR    R1,R14             R1=LAST CONDITION BLOCK ADDRESS
         B     CICS_IGNORE_&SYSNDX._01 EXIT
.*
CICS_IGNORE_&SYSNDX._02 DS 0H
.* GET THE FIRST CONDITION BLOCK
         LA    R1,HCNLENG         R1=CONDITION BLOCK LENGTH
         GETMAIN R,LV=(R1)
         XC    0(256,R1),0(R1)    CLEAR CONDITION BLOCK
         XC    256(HCNLENG-256,R1),256(R1) CLEAR CONDITION BLOCK
         ST    R1,DFHEIHCN        SAVE CONDITION BLOCK ADDRESS
         MVC   HCNHEAD,=C'DFHHCBLK' SET HEADER
CICS_IGNORE_&SYSNDX._01 DS 0H
.* SET CONDITION LIST
&CONDS(01) SETC 'ERROR'
&CONDS(12) SETC 'FILENOTFOUND'
&CONDS(13) SETC 'NOTFND'
&CONDS(14) SETC 'DUPREC'
&CONDS(15) SETC 'DUPKEY'
&CONDS(16) SETC 'INVREQ'
&CONDS(18) SETC 'NOSPACE'
&CONDS(19) SETC 'NOTOPEN'
&CONDS(20) SETC 'ENDFILE'
&CONDS(21) SETC 'ILLOGIC'
&CONDS(22) SETC 'LENGERR'
&CONDS(26) SETC 'ITEMERR'
&CONDS(27) SETC 'PGMIDERR'
&CONDS(31) SETC 'EXPIRED'
&CONDS(44) SETC 'QIDERR'
&CONDS(84) SETC 'DISABLED'
.*
&NP      SETA  N'&SYSLIST
&IP      SETA  1
.PLOOPC  ANOP
&IP      SETA  &IP+1
         AIF   (&IP GT &NP).ELOOP
&PARM    SETC  '&SYSLIST(&IP)'
.* INNER LOOP
&INNER   SETA  0
.ILOOPC  ANOP
&INNER   SETA  &INNER+1
         AIF   (&INNER GT &CONDRNG).BADPARM
         AIF   (K'&CONDS(&INNER) EQ 0).ILOOPC
         AIF   ('&PARM' EQ '&CONDS(&INNER)').GOTCOND
         AGO   .ILOOPC
.*
.GOTCOND ANOP
.* IGNORE IT
         LR    R14,R1             R14=ADDRESS OF CONDITION BLOCK
         LA    R14,12+(&INNER*4)(R14) INDEX TO ENTRY
         MVC   0(4,R14),=4X'FF'   IGNORE ENTRY
         AGO   .PLOOPC
.*
.BADPARM ANOP
         MNOTE 12,'BAD PARM &PARM'
         MEXIT
.*
.ELOOP   ANOP
         DROP  R1
         MEXIT
         MEND
