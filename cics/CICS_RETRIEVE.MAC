.**********************************************************************
.* Copyright 2006 Automated Software Tools Corporation                *
.* This source code is part of z390 assembler/emulator package        *
.* The z390 package is distributed under GNU general public license   *
.* Author - Don Higgins                                               *
.**********************************************************************
         MACRO
         CICS_RETRIEVE
         GBLB  &PARMS_100A
         LCLB  &NOHAND
         LCLC  &INTO,&SET,&LENGTH,&RTRANID,&RTERMID,&QUEUE
         LCLC  &RESP,&RESP2
&NP      SETA  N'&SYSLIST
&IP      SETA  0
.PLOOP   ANOP
&IP      SETA  &IP+1
         AIF   (&IP GT &NP).ELOOP
&PARM    SETC  '&SYSLIST(&IP)'
         AIF   ('&PARM'(1,5) EQ 'INTO(').INTO
         AIF   ('&PARM'(1,4) EQ 'SET(').SET
         AIF   ('&PARM'(1,7) EQ 'LENGTH(').LENGTH
         AIF   ('&PARM'(1,9) EQ 'RTRANSID(').RTRANID
         AIF   ('&PARM'(1,8) EQ 'RTERMID(').RTERMID
         AIF   ('&PARM'(1,6) EQ 'QUEUE(').QUEUE
         AIF   ('&PARM'(1,8) EQ 'NOHANDLE').NOHAND
         AIF   ('&PARM'(1,5) EQ 'RESP(').RESP
         AIF   ('&PARM'(1,6) EQ 'RESP2(').RESP2
         MNOTE 12,'BAD PARM &PARM'
         AGO   .PLOOP
.*
.INTO    ANOP
&INTO    SETC '&PARM'(6,K'&PARM-6)
         AGO   .PLOOP
.*
.SET     ANOP
&SET     SETC '&PARM'(5,K'&PARM-5)
         AGO   .PLOOP
.*
.LENGTH  ANOP
&LENGTH  SETC  '&PARM'(8,K'&PARM-8)
         AGO   .PLOOP
.*
.RTRANID ANOP
&RTRANID SETC  '&PARM'(10,K'&PARM-10)
         AGO   .PLOOP
.*
.RTERMID ANOP
&RTERMID SETC  '&PARM'(9,K'&PARM-9)
         AGO   .PLOOP
.*
.QUEUE   ANOP
&QUEUE   SETC  '&PARM'(7,K'&PARM-7)
         AGO   .PLOOP
.*
.NOHAND  ANOP
&NOHAND  SETB  1
         AGO   .PLOOP
.*
.RESP    ANOP
&RESP    SETC  '&PARM'(6,K'&PARM-6)
&NOHAND  SETB  1
         AGO   .PLOOP
.*
.RESP2   ANOP
&RESP2   SETC  '&PARM'(7,K'&PARM-7)
         AGO   .PLOOP
.*
.ELOOP   ANOP
         AIF   ('&INTO' EQ '' AND '&SET'    EQ '').NOINTOST
         AIF   ('&INTO' NE '' AND '&SET'    NE '').BOTHINST
         AIF   ('&SET'  NE '' AND '&LENGTH' EQ '').NEEDLEN
.*
         L     R15,=A(P100A)      LOAD PARM ADDRESS
         USING (P100A,P100AEND),R15
         XC    P100A(P100AEND-P100A),P100A CLEAR PARMS
         MVC   P100AFN,=X'100A'   SET FUNCTION CODE
.*
         AIF   ('&SET' EQ '').NOSET
         MVI   P100ASET,X'FF'     SET SET INDICATOR
         AGO   .DOLENG
.*
.NOSET   ANOP
         LA    R1,&INTO           INTO ADDRESS
         ST    R1,P100AINT        SAVE IT
.DOLENG  ANOP
         AIF   ('&LENGTH' EQ '').NOLENG
         AIF   (T'&LENGTH EQ 'N').BADLEN
         LA    R1,&LENGTH         R1=ADDRESS OF LENGTH
         ST    R1,P100ALEN        SAVE IT
         AGO   .DUNLEN
.*
.NOLENG  ANOP
         MVC   P100ALEN,=F'-1'    SET NO LENGTH SPECIFIED
.DUNLEN  ANOP
.* PROCESS RTRANSID
         AIF   ('&RTRANID' EQ '').DORTRM
         LA    R1,&RTRANID        R1=ADDRESS OF RTRANSID
         ST    R1,P100ARTN        SAVE IT
.DORTRM  ANOP
.* PROCESS RTERMID
         AIF   ('&RTERMID' EQ '').DOQUEUE
         LA    R1,&RTERMID        R1=ADDRESS OF RTERMID
         ST    R1,P100ARTM        SAVE IT
.DOQUEUE ANOP
.* PROCESS QUEUE
         AIF   ('&QUEUE' EQ '').DOCALL
         LA    R1,&QUEUE          R1=ADDRESS OF QUEUE
         ST    R1,P100AQNM        SAVE IT
.DOCALL  ANOP
         ST    DFHEIBR,P100AEIB   SET EIB ADDRESS
         ST    TCTTEAR,P100ATCT   SET TCTTE ADDRESS
         AIF   (NOT &NOHAND).DUNNOH
         MVI   P100ANOH,X'FF'     SET NOHANDLE
.DUNNOH  ANOP
         AIF   ('&RESP' EQ '').NORESP
         LA    R1,&RESP           ADDRESS OF RESP
         ST    R1,P100ARSP        SAVE IT
.NORESP  ANOP
         AIF   ('&RESP2' EQ '').NORESP2
         LA    R1,&RESP2          ADDRESS OF RESP2
         ST    R1,P100ARS2        SAVE IT
.NORESP2 ANOP
         ZCALL LCL100A,(P100A),MF=I CALL RETRIEVE PROCESSOR
.*
         L     R15,=A(P100A)      LOAD PARM ADDRESS
         AIF   ('&SET' EQ '').NOSET2
         L     &SET,P100ASTA      LOAD THE SET REGISTER
.NOSET2  ANOP
         CLI   P100ANOH,X'FF'     NOHANDLE ?
         BE    P100ABYP_&SYSNDX   EXIT IF IT IS
         OC    EIBRESP,EIBRESP    ANY BAD RESPONSE ?
         BZ    P100ABYP_&SYSNDX   EXIT IF NONE
* ENDDATA, ENVDEFERRM, LENGERR, NOTFND
         DC    AL3(0),C'ABEND'    MARKER FOR Z390KCP ESTAE
         DC    AL4(P100ABYP_&SYSNDX) ENTRYPOINT FOR IGNORE CONDITION
*
         AIF   (&PARMS_100A).BYP100A
&PARMS_100A SETB 1
P100A    EQU   *
P100AFN  DS    XL2                FUNCTION CODE
P100AEIB DS    AL4                EIB
P100ATCT DS    AL4                TCTTE
P100AINT DS    AL4                ADDRESS OF INTO
P100ASET DS    X                  FF=SET IS SPECIFIED
P100ASTA DS    AL4                ADDRESS FOR SET
P100ALEN DS    AL4                ADDRESS OF LENGTH
P100ARTN DS    AL4                ADDRESS OF RTRANSID
P100ARTM DS    AL4                ADDRESS OF RTERMID
P100AQNM DS    AL4                ADDRESS OF QUEUE NAME
P100ANOH DS    X                  FF=NOHANDLE
P100ARSP DS    AL4                RESP
P100ARS2 DS    AL4                RESP2
P100AEND EQU   *                  END MARKER
         DS    0H
*
.BYP100A ANOP
P100ABYP_&SYSNDX DS 0H
         DROP  R15
         MEXIT
.*
.NOINTOST MNOTE 12,'INTO OR SET MUST BE SPECIFIED'
         MEXIT
.*
.BOTHINST MNOTE 12,'BOTH INTO AND SET ARE SPECIFIED'
         MEXIT
.*
.BADRTRN MNOTE 12,'INVALID RTRANSID'
         MEXIT
.*
.BADRTRM MNOTE 12,'INVALID RTERMID'
         MEXIT
.*
.BADQUE  MNOTE 12,'INVALID QUEUE'
         MEXIT
.*
.NEEDLEN MNOTE 12,'SET REQUIRES LENGTH'
         MEXIT
.*
.BADLEN  MNOTE 12,'LENGTH MUST BE A LABEL'
         MEXIT
         MEND
