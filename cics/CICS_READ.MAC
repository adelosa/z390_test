.**********************************************************************
.* Copyright 2006 Automated Software Tools Corporation                *
.* This source code is part of z390 assembler/emulator package        *
.* The z390 package is distributed under GNU general public license   *
.* Author - Don Higgins                                               *
.**********************************************************************
.* 04/19/08 RPI 833 ADD STRING QUOTES FOR HLASM COMPATIBILITY         *
.**********************************************************************
         MACRO
         CICS_READ
.* XRBA AND FLENGTH ARE EXTENSIONS
         GBLB  &PARMS_0602
         LCLB  &RBA,&XRBA,&RRN,&GTEQ,&EQUAL,&GENERIC,&NOHAND
         LCLC  &FILE,&DATASET,&INTO,&SET,&LENGTH,&FLENGTH,&RIDFLD
         LCLC  &KLENGTH,&RESP,&RESP2
.*
&NP      SETA  N'&SYSLIST
&IP      SETA  0
.PLOOP   ANOP
&IP      SETA  &IP+1
         AIF   (&IP GT &NP).ELOOP
&PARM    SETC  '&SYSLIST(&IP)'
.*
         AIF   ('&PARM'(1,5)  EQ 'FILE(').FILE
         AIF   ('&PARM'(1,8)  EQ 'DATASET(').DATASET
         AIF   ('&PARM'(1,5)  EQ 'INTO(').INTO
         AIF   ('&PARM'(1,4)  EQ 'SET(').SET
         AIF   ('&PARM'(1,7)  EQ 'LENGTH(').LENGTH
         AIF   ('&PARM'(1,8)  EQ 'FLENGTH(').FLENGTH
         AIF   ('&PARM'(1,10) EQ 'KEYLENGTH(').KLENGTH
         AIF   ('&PARM'(1,7)  EQ 'RIDFLD(').RIDFLD
         AIF   ('&PARM'(1,3)  EQ 'RBA').RBA
         AIF   ('&PARM'(1,4)  EQ 'XRBA').XRBA
         AIF   ('&PARM'(1,3)  EQ 'RRN').RRN
         AIF   ('&PARM'(1,7)  EQ 'GENERIC').GENERIC
         AIF   ('&PARM'(1,4)  EQ 'GTEQ').GTEQ
         AIF   ('&PARM'(1,5)  EQ 'EQUAL').EQUAL
         AIF   ('&PARM'(1,8)  EQ 'NOHANDLE').NOHAND
         AIF   ('&PARM'(1,5)  EQ 'RESP(').RESP
         AIF   ('&PARM'(1,6)  EQ 'RESP2(').RESP2
         MNOTE 12,'BAD PARM &PARM'
         AGO   .PLOOP
.*
.FILE    ANOP
&FILE    SETC  '&PARM'(6,K'&PARM-6)
         AGO   .PLOOP
.*
.DATASET ANOP
&DATASET SETC  '&PARM'(9,K'&PARM-9)
         AGO   .PLOOP
.*
.INTO    ANOP
&INTO    SETC '&PARM'(6,K'&PARM-6)
         AGO   .PLOOP
.*
.SET     ANOP
&SET     SETC '&PARM'(5,K'&PARM-5)
         AGO   .PLOOP
.*
.LENGTH  ANOP
&LENGTH  SETC  '&PARM'(8,K'&PARM-8)
         AGO   .PLOOP
.*
.FLENGTH ANOP
&FLENGTH SETC  '&PARM'(9,K'&PARM-9)
         AGO   .PLOOP
.*
.KLENGTH ANOP
&KLENGTH SETC  '&PARM'(11,K'&PARM-11)
         AGO   .PLOOP
.*
.RIDFLD  ANOP
&RIDFLD  SETC  '&PARM'(8,K'&PARM-8)
         AGO   .PLOOP
.*
.RBA     ANOP
&RBA     SETB  1
         AGO   .PLOOP
.*
.XRBA    ANOP
&XRBA    SETB  1
         AGO   .PLOOP
.*
.RRN     ANOP
&RRN     SETB  1
         AGO   .PLOOP
.*
.GENERIC ANOP
&GENERIC SETB  1
         AGO   .PLOOP
.*
.GTEQ    ANOP
&GTEQ    SETB  1
         AGO   .PLOOP
.*
.EQUAL   ANOP
&EQUAL   SETB  1
         AGO   .PLOOP
.*
.NOHAND  ANOP
&NOHAND  SETB  1
         AGO   .PLOOP
.*
.RESP    ANOP
&RESP    SETC  '&PARM'(6,K'&PARM-6)
&NOHAND  SETB  1
         AGO   .PLOOP
.*
.RESP2   ANOP
&RESP2   SETC  '&PARM'(7,K'&PARM-7)
         AGO   .PLOOP
.*
.ELOOP   ANOP
         AIF   ('&FILE' EQ '' AND '&DATASET' EQ '').NOFILE
         AIF   ('&FILE' NE '' AND '&DATASET' NE '').BOTHF
         AIF   ('&INTO' EQ '' AND '&SET' EQ '').NOINTST
         AIF   ('&INTO' NE '' AND '&SET' NE '').BOTHINST
         AIF   ('&LENGTH' NE '' AND '&FLENGTH' NE '').BOTHLEN
         AIF   ('&RIDFLD' EQ '').NEEDRID
         AIF   (&RBA AND &XRBA).BADRBA
         AIF   (&RRN AND &RBA).BOTHTYP
         AIF   (&RRN AND &XRBA).BOTHTYP
         AIF   (&GENERIC AND &RBA).BADGEN1
         AIF   (&GENERIC AND &XRBA).BADGEN1
         AIF   (&GENERIC AND &RRN).BADGEN1
         AIF   ('&KLENGTH' EQ '' AND &GENERIC).BADGEN2
         AIF   ('&KLENGTH' NE '' AND NOT(&GENERIC)).BADGEN3
         AIF   (&GTEQ AND &EQUAL).BOTHBWS
.*
         L     R15,=A(P0602)      LOAD PARM ADDRESS
         USING (P0602,P0602END),R15
         XC    P0602(P0602END-P0602),P0602 CLEAR PARMS
         MVC   P0602FN,=X'0602'   SET FUNCTION CODE
.*
         AIF   ('&FILE' EQ '').DODTAST
.* GOT FILE
         AIF   ('&FILE'(1,1) EQ '''').FLSTRING
         MVC   P0602FIL,&FILE     SET FILE NAME AS LABEL
         AGO   .CHKLEN
.*
.FLSTRING ANOP
&FLLEN   SETA  K'&FILE
         AIF   (&FLLEN GT 10).BADFILE
         MVC   P0602FIL,=CL8&FILE SET FILE NAME AS STRING
         AGO   .CHKLEN
.*
.* GOT DATASET
.DODTAST ANOP
         AIF   ('&DATASET'(1,1) EQ '''').DTSTRING
         MVC   P0602FIL,&DATASET  SET DATASET NAME AS LABEL
         AGO   .CHKLEN
.*
.DTSTRING ANOP
&DTLEN   SETA  K'&DATASET
         AIF   (&DTLEN GT 10).BADFILE
         MVC   P0602FIL,=CL8&DATASET SET DATASET NAME AS STRING
.*
.CHKLEN  ANOP
         AIF   ('&SET' EQ '').NOSET
         MVI   P0602SET,X'FF'     SET SET INDICATOR
         AGO   .DUNLEN
.*
.NOSET   ANOP
         LA    R1,&INTO           INTO ADDRESS
         ST    R1,P0602INT        SAVE IT
         AIF   ('&LENGTH' EQ '').NOLENG
         AIF   (T'&LENGTH NE 'N').LENLABL
         LA    R1,&LENGTH         R1=LENGTH
         ST    R1,P0602LEN        SAVE IT
         AGO   .DUNLEN
.*
.LENLABL ANOP
         LH    R1,&LENGTH         R1=LENGTH FROM LABEL
         ST    R1,P0602LEN        SAVE IT
         LA    R1,&LENGTH         R1=ADDRESS OF LENGTH
         ST    R1,P0602LAD        SAVE IT
         AGO   .DUNLEN
.*
.NOLENG  ANOP
         AIF   ('&FLENGTH' EQ '').NOLENS
         AIF   (T'&FLENGTH NE 'N').FLENLBL
         L     R1,=AL4(&FLENGTH)  R1=FLENGTH
         ST    R1,P0602LEN        SAVE IT
         AGO   .DUNLEN
.*
.FLENLBL ANOP
         L     R1,&FLENGTH        R1=FLENGTH FROM LABEL
         ST    R1,P0602LEN        SAVE IT
         LA    R1,&FLENGTH        R1=ADDRESS OF FLENGTH
         ST    R1,P0602FAD        SAVE IT
         AGO   .DUNLEN
.*
.NOLENS  ANOP
         LA    R1,L'&INTO         R1=IMPLIED LENGTH OF INTO
         ST    R1,P0602LEN        SAVE IT
.*
.DUNLEN  ANOP
         AIF   ('&KLENGTH' EQ '').CHKOPT
         AIF   ('&KLENGTH'(2,1) EQ '''').KLENNUM
         AIF   (T'&KLENGTH NE 'N').KLENLAB
.KLENNUM ANOP
         LA    R1,&KLENGTH        R1=KEYLENGTH
         STH   R1,P0602KLN        SAVE IT
         MVI   P0602KIN,X'FF'     SET VALID KEYLENGTH
         AGO   .CHKGEN
.*
.KLENLAB ANOP
         LH    R1,&KLENGTH        R1=KEYLENGTH FROM LABEL
         STH   R1,P0602KLN        SAVE IT
         MVI   P0602KIN,X'FF'     SET VALID KEYLENGTH
.CHKGEN  ANOP
         AIF   (NOT &GENERIC).GENKEY
         MVI   P0602GEN,X'FF'     SET GENERIC
.GENKEY  ANOP
         LTR   R1,R1              IS IT KEYLENGTH(0) OR -VE ?
         BNP   CICS_READ_&SYSNDX._NOKEY EXIT IF IT IS
         CH    R1,=H'128'         GT MAX ALLOWED ?
         BH    CICS_READ_&SYSNDX._NOKEY EXIT IF IT IS
         BCTR  R1,0               -1 FOR DYNAMIC LENGTH
         STC   R1,CICS_READ_&SYSNDX._MVCKEY+1 STORE LENGTH
CICS_READ_&SYSNDX._MVCKEY EQU *
         MVC   P0602RID(0),&RIDFLD MOVE KEY
CICS_READ_&SYSNDX._NOKEY EQU *
         AGO   .DUNOPT
.*
.CHKOPT  ANOP
         AIF   (NOT &RBA).NORBA
         MVC   P0602RID+4(4),&RIDFLD MOVE RIDFLD
         MVI   P0602RBA,X'FF'     SET RBA
         AGO   .DUNOPT
.*
.NORBA   ANOP
         AIF   (NOT &XRBA).NOXRBA
         MVC   P0602RID(8),&RIDFLD MOVE RIDFLD
         MVI   P0602XRB,X'FF'     SET XRBA
         AGO   .DUNOPT
.*
.NOXRBA  ANOP
         AIF   (NOT &RRN).NORRN
         MVC   P0602RID(4),&RIDFLD MOVE RIDFLD
         MVI   P0602RRN,X'FF'     SET RRN
         AGO   .DUNOPT
.*
.NORRN   ANOP
.* DEFAULT IS FULL KEY
         MVC   P0602RID,&RIDFLD   MOVE FULL KEY
.*
.DUNOPT  ANOP
         AIF   (NOT &GTEQ).DUNBRWS
         MVI   P0602GTE,X'FF'     SET GTEQ
.DUNBRWS ANOP
         ST    DFHEIBR,P0602EIB   SET EIB ADDRESS
         ST    TCTTEAR,P0602TCT   SET TCTTE ADDRESS
         AIF   (NOT &NOHAND).DUNNOH
         MVI   P0602NOH,X'FF'     SET NOHANDLE
.DUNNOH  ANOP
         AIF   ('&RESP' EQ '').NORESP
         LA    R1,&RESP           ADDRESS OF RESP
         ST    R1,P0602RSP        SAVE IT
.NORESP  ANOP
         AIF   ('&RESP2' EQ '').NORESP2
         LA    R1,&RESP2          ADDRESS OF RESP2
         ST    R1,P0602RS2        SAVE IT
.NORESP2 ANOP
         ZCALL LCL0602,(P0602),MF=I CALL READ PROCESSOR
.*
         L     R15,=A(P0602)      LOAD PARM ADDRESS
         AIF   ('&SET' EQ '').NOSET2
         L     &SET,P0602STA      LOAD THE SET REGISTER
.NOSET2  ANOP
         CLI   P0602NOH,X'FF'     NOHANDLE ?
         BE    P0602BYP_&SYSNDX   EXIT IF IT IS
         OC    EIBRESP,EIBRESP    ANY BAD RESPONSE ?
         BZ    P0602BYP_&SYSNDX   EXIT IF NONE
* INVREQ, FILENOTFOUND, LENGERR, NOTFND, NOTOPEN, DISABLED, ILLOGIC
         DC    AL3(0),C'ABEND'    MARKER FOR Z390KCP ESTAE
         DC    AL4(P0602BYP_&SYSNDX) ENTRYPOINT FOR IGNORE CONDITION
*
         AIF   (&PARMS_0602).BYP0602
&PARMS_0602 SETB 1
P0602    EQU   *
P0602FN  DS    XL2                FUNCTION CODE
P0602EIB DS    AL4                EIB
P0602TCT DS    AL4                TCTTE
P0602FIL DS    CL8                FILENAME
P0602SET DS    X                  FF=SET IS SPECIFIED
P0602STA DS    AL4                ADDRESS FOR SET
P0602INT DS    AL4                ADDRESS OF INTO
P0602LEN DS    XL4                LENGTH
P0602LAD DS    AL4                ADDRESS OF LENGTH IF LABEL
P0602FAD DS    AL4                ADDRESS OF FLENGTH IF LABEL
P0602KIN DS    X                  FF=KEYLENGTH IS VALID
P0602KLN DS    XL2                KEYLENGTH
P0602RID DS    XL128              RIDFLD
P0602GEN DS    X                  FF=GENERIC
P0602RBA DS    X                  FF=RBA
P0602XRB DS    X                  FF=XRBA
P0602RRN DS    X                  FF=RRN
P0602GTE DS    X                  00=EQUAL FF=GTEQ
P0602NOH DS    X                  FF=NOHANDLE
P0602RSP DS    AL4                RESP
P0602RS2 DS    AL4                RESP2
P0602END EQU   *                  END MARKER
         DS    0H
*
.BYP0602 ANOP
P0602BYP_&SYSNDX DS 0H
         DROP  R15
         MEXIT
.*
.NOFILE  MNOTE 12,'FILE OR DATASET MUST BE SPECIFIED'
         MEXIT
.*
.BOTHF   MNOTE 12,'BOTH FILE AND DATASET ARE SPECIFIED'
         MEXIT
.*
.BADFILE MNOTE 12,'INVALID FILE OR DATASET'
         MEXIT
.*
.NOINTST MNOTE 12,'INTO OR SET MUST BE SPECIFIED'
         MEXIT
.*
.BOTHINST MNOTE 12,'BOTH INTO AND SET ARE SPECIFIED'
         MEXIT
.*
.BOTHLEN MNOTE 12,'BOTH LENGTH AND FLENGTH ARE SPECIFIED'
         MEXIT
.*
.NEEDRID MNOTE 12,'RIDFLD IS MANDATORY'
         MEXIT
.*
.BADRBA  MNOTE 12,'BOTH RBA AND XRBA ARE SPECIFIED'
         MEXIT
.*
.BOTHTYP MNOTE 12,'BOTH RRN AND (X)RBA ARE SPECIFIED'
         MEXIT
.*
.BOTHBWS MNOTE 12,'BOTH GTEQ AND EQUAL ARE SPECIFIED'
         MEXIT
.*
.BADGEN1 MNOTE 12,'GENERIC CANNOT BE SPECIFIED WITH RRN OR (X)RBA'
         MEXIT
.*
.BADGEN2 MNOTE 12,'GENERIC REQUIRES KEYLENGTH'
         MEXIT
.*
.BADGEN3 MNOTE 12,'KEYLENGTH REQUIRES GENERIC'
         MEXIT
         MEND
