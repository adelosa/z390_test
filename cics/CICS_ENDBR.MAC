.*********************************************************************
.* Copyright 2006 Automated Software Tools Corporation               *
.* This source code is part of z390 assembler/emulator package       *
.* The z390 package is distributed under GNU general public license  *
.* Author - Don Higgins                                              *
.*********************************************************************
.* 04/19/08 RPI 833 ADD STRING QUOTES FOR HLASM COMPATIBILITY 
.*********************************************************************
         MACRO
         CICS_ENDBR
         LCLC  &FILE,&DATASET,&REQID
.*
&NP      SETA  N'&SYSLIST
&IP      SETA  0
.PLOOP   ANOP
&IP      SETA  &IP+1
         AIF   (&IP GT &NP).ELOOP
&PARM    SETC  '&SYSLIST(&IP)'
.*
         AIF   ('&PARM'(1,5)  EQ 'FILE(').FILE
         AIF   ('&PARM'(1,8)  EQ 'DATASET(').DATASET
         AIF   ('&PARM'(1,6)  EQ 'REQID(').REQID
         MNOTE 12,'BAD PARM &PARM'
         AGO   .PLOOP
.*
.FILE    ANOP
&FILE    SETC  '&PARM'(6,K'&PARM-6)
         AGO   .PLOOP
.*
.DATASET ANOP
&DATASET SETC  '&PARM'(9,K'&PARM-9)
         AGO   .PLOOP
.*
.REQID   ANOP
&REQID   SETC  '&PARM'(7,K'&PARM-7)
         AGO   .PLOOP
.*
.ELOOP   ANOP
         AIF   ('&FILE' EQ '' AND '&DATASET' EQ '').NOFILE
         AIF   ('&FILE' NE '' AND '&DATASET' NE '').BOTHF
.*
         MVC   EIBFN,=X'0612'     SET EIBFN
         XC    EIBRCODE,EIBRCODE  CLEAR EIBRCODE
         XC    EIBRESP,EIBRESP    CLEAR EIBRESP
         XC    EIBRESP2,EIBRESP2  CLEAR EIBRESP2
.* GETMAIN AND MOVE THE DATA TO SEND
         LA    R1,FCPREFIX        R1=FC BLOCK LENGTH
         GETMAIN R,LV=(R1),A=DFHEIFCP
         USING DFHFCBLK,R1
         XC    DFHFCBLK(FCPREFIX),DFHFCBLK CLEAR FC BLOCK
         ST    R0,FCPTCPIO        SAVE LENGTH FOR FREEMAIN
         MVC   FCPFN,=C'0612'     SET FUNCTION CODE
         MVC   FCPTERM,TCTTETI    SET TERMINAL ID
         MVC   FCPTRAN,EIBTRNID   SET TRANSID
         MVC   FCPTASKN,EIBTASKN  SET TASK NUMBER
         MVI   FCPCTYPE,FCPCBRWS  SET BROWSE
.*
         AIF   ('&FILE' EQ '').DODTAST
.* GOT FILE
         AIF   ('&FILE'(1,1) EQ '''').FLSTRING
         MVC   EIBRSRCE,&FILE     SET EIBRSRCE AS LABEL
         MVC   FCPFILNM,&FILE     SET FILE NAME AS LABEL
         AGO   .DOREQ
.*
.FLSTRING ANOP
&FLLEN   SETA  K'&FILE
         AIF   (&FLLEN GT 10).BADFILE
         MVC   EIBRSRCE,=CL8&FILE SET EIBRSRCE AS STRING
         MVC   FCPFILNM,=CL8&FILE SET FILE NAME AS STRING
         AGO   .DOREQ
.*
.* GOT DATASET
.DODTAST ANOP
         AIF   ('&DATASET'(1,1) EQ '''').DTSTRING
         MVC   EIBRSRCE,&DATASET  SET EIBRSRCE AS LABEL
         MVC   FCPFILNM,&DATASET  SET DATASET NAME AS LABEL
         AGO   .DOREQ
.*
.DTSTRING ANOP
&DTLEN   SETA  K'&DATASET
         AIF   (&DTLEN GT 10).BADFILE
         MVC   EIBRSRCE,=CL8&DATASET SET EIBRSRCE AS STRING
         MVC   FCPFILNM,=CL8&DATASET SET DATASET NAME AS STRING
.*
.DOREQ   ANOP
         AIF   ('&REQID' EQ '').DUNREQ
         AIF   ('&REQID'(1,1) LT '0' OR '&REQID'(1,1) GT '9').REQLABL
         MVC   FCPREQID,=AL2(&REQID) MOVE NUMERIC REQID
         AGO   .DUNREQ
.*
.REQLABL ANOP
         MVC   FCPREQID,&REQID    MOVE REQID AS LABEL
.DUNREQ  ANOP
* SEND REQUEST TO SERVER, GET REPLY
         LA    R15,FCPREFIX       R15=PREFIX LENGTH
         L     R14,DFHEIFCP       RESTORE FC BLOCK ADDRESS
         TCPIO SEND,MSG=(R14),LMSG=(R15),PORT=3900
         LTR   R15,R15            CHECK RC ?
         BNZ   CICS_ENDBR_&SYSNDX._INVREQ ERROR IF BAD
* ONLY PREFIX IS RECEIVED
         TCPIO RECEIVE,MSG=(R14),LMSG==A(FCPREFIX),PORT=3900
         LTR   R15,R15            CHECK RC ?
         BNZ   CICS_ENDBR_&SYSNDX._INVREQ ERROR IF BAD
         LR    R1,R14             RE-ESTABLISH FC BLOCK BASE
         OC    FCPRETCD,FCPRETCD  BAD RETURN CODE ?
         BZ    CICS_ENDBR_&SYSNDX._IGNORE EXIT IF NONE
         CLC   FCPRETCD,DFHRESP(FILENOTFOUND) FILENOTFOUND ?
         BE    CICS_ENDBR_&SYSNDX._FILENOTFOUND EXIT IF IT IS
         CLC   FCPRETCD,DFHRESP(ILLOGIC) ILLOGIC ?
         BE    CICS_ENDBR_&SYSNDX._ILLOGIC EXIT IF IT IS
.* ALL OTHER CONDITIONS ARE INVREQ
CICS_ENDBR_&SYSNDX._INVREQ DS 0H
.* INVOKE INVREQ
         MVI   EIBRCODE,X'08'     SET EIBRCODE
         MVC   EIBRESP,DFHRESP(INVREQ) SET EIBRESP=INVREQ
         MVC   EIBRESP2,FCPRESP2  SET EIBRESP2
         DC    AL3(0),C'ABEND'    MARKER FOR Z390KCP ESTAE
         DC    AL4(CICS_ENDBR_&SYSNDX._IGNORE) ENTPT FOR IGNORE COND
.*
CICS_ENDBR_&SYSNDX._FILENOTFOUND DS 0H
.* INVOKE FILENOTFOUND
         MVI   EIBRCODE,X'01'     SET EIBRCODE
         MVC   EIBRESP,DFHRESP(FILENOTFOUND) SET EIBRESP=FILENOTFOUND
         MVC   EIBRESP2,FCPRESP2  SET EIBRESP2
         DC    AL3(0),C'ABEND'    MARKER FOR Z390KCP ESTAE
         DC    AL4(CICS_ENDBR_&SYSNDX._IGNORE) ENTPT FOR IGNORE COND
.*
CICS_ENDBR_&SYSNDX._ILLOGIC DS 0H
.* INVOKE ILLOGIC
         MVI   EIBRCODE,X'02'     SET EIBRCODE
         MVC   EIBRESP,DFHRESP(ILLOGIC) SET EIBRESP=ILLOGIC
         MVC   EIBRESP2+3(1),FCPRESP2+3 SET EIBRESP2
         MVC   EIBRCODE+1(1),FCPRESP2 MOVE RPLFEEDB+1
         MVC   EIBRCODE+2(1),FCPRESP2+1 MOVE RPLFEEDB+3
         DC    AL3(0),C'ABEND'    MARKER FOR Z390KCP ESTAE
         DC    AL4(CICS_ENDBR_&SYSNDX._IGNORE) ENTPT FOR IGNORE COND
.*
CICS_ENDBR_&SYSNDX._IGNORE DS 0H
         ICM   R1,15,DFHEIFCP     ANY ADDRESS TO BE FREED ?
         BZ    CICS_ENDBR_&SYSNDX._END EXIT IF NOT
         FREEMAIN LV=FCPREFIX
         XC    DFHEIFCP,DFHEIFCP  CLEAR ADDRESS
CICS_ENDBR_&SYSNDX._END DS 0H
         DROP  R1                 DROP FC BLOCK BASE
         MEXIT
.*
.NOFILE  MNOTE 12,'FILE OR DATASET MUST BE SPECIFIED'
         MEXIT
.*
.BOTHF   MNOTE 12,'BOTH FILE AND DATASET ARE SPECIFIED'
         MEXIT
.*
.BADFILE MNOTE 12,'INVALID FILE OR DATASET'
         MEXIT
         MEND
