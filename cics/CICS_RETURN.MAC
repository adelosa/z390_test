.**********************************************************************
.* Copyright 2006 Automated Software Tools Corporation                *
.* This source code is part of z390 assembler/emulator package        *
.* The z390 package is distributed under GNU general public license   *
.* Author - Don Higgins                                               *
.**********************************************************************
.* 05/05/06 RPI 308 CICS RETURN CALLED FROM EXEC                      *
.* 04/19/08 RPI 833 ADD STRING QUOTES FOR HLASM COMPATIBILITY         *
.**********************************************************************
         MACRO
         CICS_RETURN
         GBLB  &PARMS_0E08
         LCLB  &IMMED
         LCLC  &TRANSID,&COMMAREA,&LENGTH,&RESP,&RESP2
&NP      SETA  N'&SYSLIST
&IP      SETA  0
.PLOOP   ANOP
&IP      SETA  &IP+1
         AIF   (&IP GT &NP).ELOOP
&PARM    SETC  '&SYSLIST(&IP)'
         AIF   ('&PARM'(1,8) EQ 'TRANSID(').TRANSID
         AIF   ('&PARM'(1,9) EQ 'COMMAREA(').COMMAREA
         AIF   ('&PARM'(1,7) EQ 'LENGTH(').LENGTH
         AIF   ('&PARM'(1,9) EQ 'IMMEDIATE').IMMED
         AIF   ('&PARM'(1,8) EQ 'NOHANDLE').PLOOP
         AIF   ('&PARM'(1,5) EQ 'RESP(').RESP
         AIF   ('&PARM'(1,6) EQ 'RESP2(').RESP2
         MNOTE 12,'BAD PARM &PARM'
         AGO   .PLOOP
.*
.TRANSID ANOP
&TRANSID SETC  '&PARM'(9,K'&PARM-9)
         AGO   .PLOOP
.*
.COMMAREA ANOP
&COMMAREA SETC '&PARM'(10,K'&PARM-10)
         AGO   .PLOOP
.*
.LENGTH  ANOP
&LENGTH  SETC  '&PARM'(8,K'&PARM-8)
         AGO   .PLOOP
.*
.IMMED   ANOP
&IMMED   SETB  1
         AGO   .PLOOP
.*
.RESP    ANOP
&RESP    SETC  '&PARM'(6,K'&PARM-6)
         AGO   .PLOOP
.*
.RESP2   ANOP
&RESP2   SETC  '&PARM'(7,K'&PARM-7)
         AGO   .PLOOP
.*
.ELOOP   ANOP
         AIF   (&IMMED AND '&TRANSID' EQ '').BADIMM
         L     R15,=A(P0E08)      LOAD PARM ADDRESS
         USING (P0E08,P0E08END),R15
         XC    P0E08(P0E08END-P0E08),P0E08 CLEAR PARMS
         MVC   P0E08FN,=X'0E08'   SET FUNCTION CODE
.* PROCESS IMMEDIATE
         AIF   (NOT &IMMED).DOTRAN
         MVI   P0E08IMM,X'FF'     SET IMMEDIATE FLAG
.DOTRAN  ANOP
.* PROCESS TRANSID
         AIF   ('&TRANSID' EQ '').DOCOMM
         AIF   ('&TRANSID'(1,1) EQ '''').STRING
         MVC   P0E08TRN,&TRANSID  MOVE TRANSID FROM LABEL
         AGO   .DOCOMM
.*
.STRING  ANOP
&TRANLEN SETA  K'&TRANSID
         AIF   (&TRANLEN LT 3 OR &TRANLEN GT 6).BADTRAN
         MVC   P0E08TRN,=CL4&TRANSID MOVE TRANSID AS STRING
.DOCOMM  ANOP
.* PROCESS COMMAREA
         AIF   ('&COMMAREA' NE '').COMMCHK
         AIF   ('&LENGTH' EQ '').COMMCHK
         AGO   .COMMERR
.*
.COMMCHK ANOP
         AIF   ('&COMMAREA' EQ '').ALLDONE
         AIF   ('&TRANSID' EQ '').MISTRAN
&COMMTQ  SETC  T'&COMMAREA
         AIF   ('&COMMAREA'(1,1) EQ '=' OR '&COMMTQ' EQ 'A').COMADLIT
         LA    R1,&COMMAREA       R1=COMMAREA ADDRESS FROM LABEL
         ST    R1,P0E08COM        SAVE IT
         AGO   .COMMLEN
.*
.COMADLIT ANOP
         L     R1,&COMMAREA       R1=INDIRECT COMMAREA ADDRESS
         ST    R1,P0E08COM        SAVE IT
.* LENGTH IS COMPULSORY FOR INDIRECT
         AIF   ('&LENGTH' EQ '').BADLEN
         AGO   .LENVAL
.*
.COMMLEN ANOP
.* PROCESS LENGTH
         AIF   ('&LENGTH' NE '').LENVAL
.* DEFAULT LENGTH
         LA    R1,L'&COMMAREA     R1=IMPLIED LENGTH OF COMMAREA
         STH   R1,P0E08CLN        SAVE IT
         AGO   .ALLDONE
.*
.LENVAL  ANOP
         AIF   ('&LENGTH'(2,1) EQ '''').LENNUM
         AIF   (T'&LENGTH NE 'N').LENLABL
.LENNUM  ANOP
         LA    R1,&LENGTH         R1=COMMAREA LENGTH
         STH   R1,P0E08CLN        SAVE IT
         AGO   .ALLDONE
.*
.LENLABL ANOP
         LH    R1,&LENGTH         R1=COMMAREA LENGTH FROM LABEL
         STH   R1,P0E08CLN        SAVE IT
.ALLDONE ANOP
         AIF   ('&RESP' EQ '').NORESP
         LA    R1,&RESP           ADDRESS OF RESP
         ST    R1,P0E08RSP        SAVE IT
.NORESP  ANOP
         AIF   ('&RESP2' EQ '').NORESP2
         LA    R1,&RESP2          ADDRESS OF RESP2
         ST    R1,P0E08RS2        SAVE IT
.NORESP2 ANOP
* SPECIAL LINKAGE
         LA    R1,P0E08           R1=PARAMETER LIST
         DROP  R15
         LA    R14,P0E08RTN_&SYSNDX RETURN ADDRESS
         L     R15,=V(LCL0E08)    R15=EXTERNAL RETURN MODULE ADDRESS
         BR    R15                GO TO IT
*
P0E08RTN_&SYSNDX EQU *
         OC    EIBRESP,EIBRESP    ANY BAD RESPONSE ?
         BZ    P0E08BYP_&SYSNDX   EXIT IF NONE
* INVREQ
         DC    AL3(0),C'ABEND'    MARKER FOR Z390KCP ESTAE
         DC    AL4(0)             IGNORE HERE IS NOT PERMITTED
*
         AIF   (&PARMS_0E08).BYP0E08
&PARMS_0E08 SETB 1
P0E08    EQU   *
P0E08FN  DS    XL2                FUNCTION CODE
P0E08TRN DS    CL4                TRANSID
P0E08COM DS    AL4                COMMAREA ADDRESS
P0E08CLN DS    XL2                COMMAREA LENGTH
P0E08IMM DS    X                  FF=IMMEDIATE
P0E08RSP DS    AL4                RESP
P0E08RS2 DS    AL4                RESP2
P0E08END EQU   *                  END MARKER
         DS    0H
*
.BYP0E08 ANOP
P0E08BYP_&SYSNDX DS 0H
         MEXIT
.*
.COMMERR MNOTE 12,'LENGTH WITHOUT COMMAREA'
         MEXIT
.*
.BADTRAN MNOTE 12,'INVALID TRANSID'
         MEXIT
.*
.MISTRAN MNOTE 12,'TRANSID IS MISSING'
         MEXIT
.*
.BADIMM  MNOTE 12,'IMMEDIATE REQUIRES TRANSID'
         MEXIT
.*
.BADLEN  MNOTE 12,'LENGTH IS MANDATORY FOR INDIRECT COMMAREA'
         MEXIT
         MEND
