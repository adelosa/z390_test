***********************************************************************
* Copyright 2006 Automated Software Tools Corporation                 *
* This source code is part of z390 assembler/emulator package         *
* The z390 package is distributed under GNU general public license    *
* Author - Don Higgins                                                *
***********************************************************************
LCL060C  SUBENTRY
*
* FN=060C  EXEC CICS STARTBR
*
* R1  >>> P060C BLOCK POINTER
* R14 = RETURN ADDRESS
         LR    R3,R1              SET BASE
         L     R3,0(R3)                    FOR PARMS
         USING (P060C,P060CEND),R3
         L     DFHEIBR,P060CEIB   LOAD EIB ADDRESS
         USING DFHEIBLK,DFHEIBR
         L     TCTTEAR,P060CTCT   LOAD TCT ADDRESS
         USING DFHTCTTE,TCTTEAR
         MVC   EIBFN,P060CFN      SET EIBFN
         MVC   EIBDS,P060CFIL     SET EIBDS
         XC    EIBRCODE,EIBRCODE  CLEAR EIBRCODE
         XC    EIBRESP,EIBRESP    CLEAR EIBRESP
         XC    EIBRESP2,EIBRESP2  CLEAR EIBRESP2
         ICM   R1,15,P060CRSP     R1=RESP ADDRESS
         BZ    NORESP             EXIT IF NONE
         XC    0(4,R1),0(R1)      CLEAR RESP
NORESP   EQU   *
         ICM   R1,15,P060CRS2     R1=RESP2 ADDRESS
         BZ    NORESP2            EXIT IF NONE
         XC    0(4,R1),0(R1)      CLEAR RESP2
NORESP2  EQU   *
* GETMAIN AND MOVE THE DATA TO SEND
         EXEC  CICS GETMAIN FLENGTH(=A(FCPREFIX)) SET(R5) INITIMG(0)   X
               NOHANDLE
         ST    R5,FCBLKSV         SAVE FC BLOCK ADDRESS FOR FREEMAIN
         USING DFHFCBLK,R5
* RESET EIB FIELDS
         MVC   EIBFN,P060CFN      SET EIBFN
         XC    EIBRCODE,EIBRCODE  CLEAR EIBRCODE
         XC    EIBRESP,EIBRESP    CLEAR EIBRESP
         XC    EIBRESP2,EIBRESP2  CLEAR EIBRESP2
         MVC   FCPTCPIO,=A(FCPREFIX) MOVE LENGTH TO FC BLOCK
         MVC   FCPFN,=C'060C'     SET FUNCTION CODE
         MVC   FCPTERM,TCTTETI    SET TERMINAL ID
         MVC   FCPTRAN,EIBTRNID   SET TRANSID
         MVC   FCPTASKN,EIBTASKN  SET TASK NUMBER
         MVI   FCPCTYPE,FCPCBRWS  SET BROWSE
         MVC   EIBRSRCE,P060CFIL  SET EIBRSRCE
         MVC   FCPFILNM,P060CFIL  SET FILE NAME
         MVC   FCPKEYLN,=X'7FFF'  SET MISSING KEYLENGTH
         CLI   P060CKIN,X'FF'     ANY KEYLENGTH ?
         BNE   DUNKLEN            EXIT IF NONE
         MVC   FCPKEYLN,P060CKLN  MOVE KEYLENGTH
DUNKLEN  EQU   *
         CLI   P060CGEN,X'FF'     GENERIC ?
         BNE   TRYRBA             EXIT IF NOT
         MVI   FCPRDOPT,FCPRDGEN  SET RIDFLD=GENERIC
         B     GOBROPT            EXIT
*
TRYRBA   EQU   *
         CLI   P060CRBA,X'FF'     RBA ?
         BNE   TRYXRBA            EXIT IF NOT
         MVI   FCPRDOPT,FCPRDRBA  SET RIDFLD=RBA
         B     GOBROPT            EXIT
*
TRYXRBA  EQU   *
         CLI   P060CXRB,X'FF'     XRBA ?
         BNE   TRYRRN             EXIT IF NOT
         MVI   FCPRDOPT,FCPRDXRB  SET RIDFLD=XRBA
         B     GOBROPT            EXIT
*
TRYRRN   EQU   *
         CLI   P060CRRN,X'FF'     RRN ?
         BNE   GOBROPT            EXIT IF NOT
         MVI   FCPRDOPT,FCPRDRRN  SET RIDFLD=RRN
GOBROPT  EQU    *
         MVI   FCPBROPT,FCPBRGTE  SET GTEQ BY DEFAULT
         CLI   P060CGTE,X'00'     EQUAL ?
         BNE   DUNBROPT           EXIT IF NOT
         MVI   FCPBROPT,FCPBREQU  SET EQUAL
DUNBROPT EQU   *
         MVC   FCPRID,P060CRID    SET RIDFLD
         MVC   FCPREQID,P060CREQ  SET REQID
* SEND REQUEST TO SERVER, GET REPLY
         TCPIO SEND,MSG=(R5),LMSG==A(FCPREFIX),PORT=3900
         LTR   R15,R15            CHECK RC ?
         BNZ   INVREQ             ERROR IF BAD
* ONLY THE PREFIX IS RECEIVED
         TCPIO RECEIVE,MSG=(R5),LMSG==A(FCPREFIX),PORT=3900
         LTR   R15,R15            CHECK RC ?
         BNZ   INVREQ             ERROR IF BAD
         OC    FCPRETCD,FCPRETCD  BAD RETURN CODE ?
         BZ    STRTBROK           EXIT IF NONE
         CLC   FCPRETCD,DFHRESP(FILENOTFOUND) FILENOTFOUND ?
         BE    FILENTFD           EXIT IF IT IS
         CLC   FCPRETCD,DFHRESP(INVREQ) INVREQ ?
         BE    INVREQ             EXIT IF IT IS
         CLC   FCPRETCD,DFHRESP(NOTFND) NOTFND ?
         BE    NOTFND             EXIT IF IT IS
         CLC   FCPRETCD,DFHRESP(NOTOPEN) NOTOPEN ?
         BE    NOTOPEN            EXIT IF IT IS
         CLC   FCPRETCD,DFHRESP(DISABLED) DISABLED ?
         BE    DISABLED           EXIT IF IT IS
         CLC   FCPRETCD,DFHRESP(ILLOGIC) ILLOGIC ?
         BE    ILLOGIC            EXIT IF IT IS
* SERVER HAS SENT UNKNOWN VALUE IN FCPRETCD
         B     INVREQ             SHOULD NOT OCCUR
*
STRTBROK EQU   *
         L     R1,P060CARD        R1=ADDRESS OF RIDFLD
         CLI   P060CRBA,X'FF'     IS IT RBA ?
         BNE   TRYXRBA2           EXIT IF NOT
         MVC   0(4,R1),FCPRBA     MOVE RIDFLD BACK
         B     RETURN             EXIT
*
TRYXRBA2 EQU   *
         CLI   P060CXRB,X'FF'     IS IT XRBA ?
         BNE   TRYRRN2            EXIT IF NOT
         MVC   0(8,R1),FCPXRBA    MOVE RIDFLD BACK
         B     RETURN             EXIT
*
TRYRRN2  EQU   *
         CLI   P060CRRN,X'FF'     IS IT RRN ?
         BNE   DEFRID             EXIT IF NOT
         MVC   0(4,R1),FCPRRN     MOVE RIDFLD BACK
         B     RETURN             EXIT
*
DEFRID   EQU   *
* DEFAULT TO KEY
         LB    R2,P060CLRD        R2=L'RIDFLD
         BCTR  R2,0               -1 FOR MVC
         STC   R2,DEFMVC+1        MODIFY MVC
DEFMVC   MVC   0(0,R1),FCPRID     MOVE RIDFLD BACK
         B     RETURN             EXIT
*
INVREQ   EQU   *
* INVOKE INVREQ
         MVI   EIBRCODE,X'08'     SET EIBRCODE
         MVC   EIBRESP,DFHRESP(INVREQ) SET EIBRESP=INVREQ
         MVC   EIBRESP2,FCPRESP2  SET EIBRESP2
         B     DORESP             EXIT
*
FILENTFD EQU   *
* INVOKE FILENOTFOUND
         MVI   EIBRCODE,X'01'     SET EIBRCODE
         MVC   EIBRESP,DFHRESP(FILENOTFOUND) SET EIBRESP=FILENOTFOUND
         MVC   EIBRESP2,FCPRESP2  SET EIBRESP2
         B     DORESP             EXIT
*
NOTFND   EQU   *
* INVOKE NOTFND
         MVI   EIBRCODE,X'81'     SET EIBRCODE
         MVC   EIBRESP,DFHRESP(NOTFND) SET EIBRESP=NOTFND
         MVC   EIBRESP2+3(1),FCPRESP2+3 SET EIBRESP2
         MVC   EIBRCODE+1(1),FCPRESP2 MOVE RPLFEEDB+1
         MVC   EIBRCODE+2(1),FCPRESP2+1 MOVE RPLFEEDB+3
         B     DORESP             EXIT
*
NOTOPEN  EQU   *
* INVOKE NOTOPEN
         MVI   EIBRCODE,X'0C'     SET EIBRCODE
         MVC   EIBRESP,DFHRESP(NOTOPEN) SET EIBRESP=NOTOPEN
         MVC   EIBRESP2,FCPRESP2  SET EIBRESP2
         B     DORESP             EXIT
*
DISABLED EQU   *
* INVOKE DISABLED
         MVI   EIBRCODE,X'0D'     SET EIBRCODE
         MVC   EIBRESP,DFHRESP(DISABLED) SET EIBRESP=DISABLED
         MVC   EIBRESP2,FCPRESP2  SET EIBRESP2
         B     DORESP             EXIT
*
ILLOGIC  EQU   *
* INVOKE ILLOGIC
         MVI   EIBRCODE,X'02'     SET EIBRCODE
         MVC   EIBRESP,DFHRESP(ILLOGIC) SET EIBRESP=ILLOGIC
         MVC   EIBRESP2+3(1),FCPRESP2+3 SET EIBRESP2
         MVC   EIBRCODE+1(1),FCPRESP2 MOVE RPLFEEDB+1
         MVC   EIBRCODE+2(1),FCPRESP2+1 MOVE RPLFEEDB+3
DORESP   EQU   *
         ICM   R14,15,P060CRSP    R14=RESP ADDRESS
         BZ    DORESP2            EXIT IF NONE
         MVC   0(4,R14),EIBRESP   SET RESP
DORESP2  EQU   *
         ICM   R14,15,P060CRS2    R14=RESP2 ADDRESS
         BZ    RETURN             EXIT IF NONE
         MVC   0(4,R14),EIBRESP2  SET RESP2
RETURN   EQU   *
         MVC   RCODE,EIBRCODE     SAVE RCODE
         MVC   RESP,EIBRESP       SAVE RESP
         MVC   RESP2,EIBRESP2     SAVE RESP2
         EXEC  CICS FREEMAIN DATA(FCBLKSV) NOHANDLE
         OC    EIBRESP,EIBRESP    ANY BAD RESPONSE ?
         BNZ   DORESP             EXIT IF THERE IS
         MVC   EIBFN,P060CFN      SET EIBFN
         MVC   EIBRCODE,RCODE     RESTORE RCODE
         MVC   EIBRESP,RESP       RESTORE RESP
         MVC   EIBRESP2,RESP2     RESTORE RESP2
         SUBEXIT
*
FCBLKSV  DS    AL4                SAVE FC BLOCK ADDRESS
RCODE    DS    XL4                SAVE RCODE
RESP     DS    XL4                SAVE RESP
RESP2    DS    XL4                SAVE RESP2
*
P060C    DSECT
P060CFN  DS    XL2                FUNCTION CODE
P060CEIB DS    AL4                EIB
P060CTCT DS    AL4                TCTTE
P060CFIL DS    CL8                FILENAME
P060CKIN DS    X                  FF=KEYLENGTH IS VALID
P060CKLN DS    XL2                KEYLENGTH
P060CRID DS    XL128              RIDFLD
P060CARD DS    AL4                A(RIDFLD)
P060CLRD DS    X                  L'RIDFLD
P060CGEN DS    X                  FF=GENERIC
P060CRBA DS    X                  FF=RBA
P060CXRB DS    X                  FF=XRBA
P060CRRN DS    X                  FF=RRN
P060CGTE DS    X                  00-EQUAL FF=GTEQ
P060CREQ DS    XL2                REQID
         DS    X                  FF=NOHANDLE
P060CRSP DS    AL4                RESP
P060CRS2 DS    AL4                RESP2
P060CEND EQU   *                  END MARKER
*
         DFHEIBLK                 EIB
         DFHTCTTE                 TCTTE
         DFHFCBLK                 FILE CONTROL PREFIX AREA
*
         EQUREGS REGS=GPR
*
         END
