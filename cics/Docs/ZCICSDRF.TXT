Z390/CICS Diagnosis Reference
=============================

Index
-----
Control Blocks...
   Dynamic Storage Area (DSA)
   EXEC Interface Block (EIB)
   HANDLE ABEND Block
   HANDLE AID Block
   HANDLE CONDITION Block
   Link-Level Area (LKA)
   Terminal Control Table-Terminal Entry (TCTTE)

Management descriptions...
   Abend
   COMMAREA
   GETMAIN/FREEMAIN
   HANDLE AID
   HANDLE/IGNORE CONDITION

-----------------------------------------------------------------------

Control Blocks
--------------

Dynamic Storage Area (DSA)
   Eye catcher: None
   Acquired   : DFHEIENT
   Released   : DFHEIRET
   Anchor     : R13
   DSECT      : DFHEISTG (prefix only)
   Cleared    : Only the prefix, not the user area
   Length     : Variable

EXEC Interface Block (EIB)
   Eye catcher: 'DFHEIBLK'
   Acquired   : Z390KCP
   Released   : Close of thread
   Anchor     : R11 (DFHEIBR)
   DSECT      : DFHEIBLK
   Cleared    : Yes
   Length     : EIBLENG

HANDLE ABEND Block
   Eye catcher: 'DFHABBLK'
   Acquired   : 1st use
   Released   : Task end
   Anchor     : TCTTEABD (Byte after eyecatcher)
   DSECT      : DFHABBLK
   Cleared    : Yes
   Length     : ABDLENG (one table entry)
   Entries    : 25

HANDLE AID block
   Eye catcher: 'DFHADBLK'
   Acquired   : HANDLE AID (1st block only)
                PUSH HANDLE
   Released   : DFHEIRET   (all chained AID blocks)
                POP HANDLE (only top=of-chain block)
                XCTL       (all chained AID blocks)
   Anchor     : DFHEIAID (DSA)
   Chain      : AIDCHAIN
   DSECT      : DFHADBLK
   Cleared    : Yes
   Length     : AIDLENG

HANDLE CONDITION block
   Eye catcher: 'DFHHCBLK'
   Acquired   : HANDLE CONDITION (1st block only)
                PUSH HANDLE
   Released   : DFHEIRET   (all chained HANDLE CONDITION blocks)
                POP HANDLE (only top=of-chain block)
                XCTL       (all chained HANDLE CONDITION blocks)
   Anchor     : DFHEIHCN (DSA)
   Chain      : HCNCHAIN
   DSECT      : DFHHCBLK
   Cleared    : Yes
   Length     : HCNLENG

Link-Level Area (LKA)
   Eye catcher: None
   Acquired   : Z390KCP
   Released   : Close of thread
   Anchor     : TCTTELKA
   Cleared    : Yes
   Length     : 4 (R13 value for this link-level)
   Entries    : 25

Terminal Control Table-Terminal Entry (TCTTE)
   Eye catcher: 'DFHTCTTE'
   Acquired   : Z390KCP
   Released   : Close of thread
   Anchor     : R10 (TCTTEAR)
   DSECT      : DFHTCTTE
   Cleared    : Yes
   Length     : TCTTELEN

-----------------------------------------------------------------------

Abend Management
   The following types of abend may occur...
      Program check
      IGNORE CONDITION not permitted (program check)
      Condition raised but not handled or ignored
      EXEC CICS ABEND

   Whether any of these result in a dump and/or termination of the task
   depends on the HANDLE ABEND status which is discussed later.

   All of the above types cause a program check, with the following
   markers...
      X'000000',C'ABEND',A(IGNORE address) -- HANDLE CONDITION
      X'0000FE',C'ABEND',C'xxxx'           -- ABEND with dump
      X'0000FF',C'ABEND',C'????'           -- ABEND without dump
      Other                                -- Program check

      The program check is trapped by the ESTAE routine APPABEND in
      Z390KCP. This routine determines the cause of the abend and takes
      the correct action...

      HANDLE CONDITION marker...
         The last CONDITION block is located (if any) and the condition
         slot is tested, followed by the ERROR slot.
         If no HANDLE or IGNORE then the terminate handler is invoked
         (see later).

      ABEND with/without dump and program checks go straight to the
      terminate handler.

      Terminate handler...
         APPTABDN in Z390KCP tests for the existence of a HANDLE ABEND
         block (DFHABBLK, see above). If none the task is terminated
         abnormally.

         Each entry in the HANDLE ABEND block represents a link-level,
         so the table is scanned backwards for the highest active entry.
         If there are no active entries, the task is terminated
         abnormally.

         If an active entry is found it is immediately inactivated.
         HANDLE ABEND LABEL will cause a branch to the label.
         HANDLE ABEND PROGRAM will cause an XCTL to the program.
         If the abending program has received a COMMAREA, then that will
         be passed to the abend handler.

         Note that PUSH, POP, HANDLE ABEND CANCEL/RESET only affect the
         current link-level.

      Dumps...
         A program check will always produce an ASRA SNAP dump.
         ABEND without NODUMP, will always produce a dump using ABCODE.

         No other dumps will be produced if an abend or condition is
         handled.

COMMAREA Management
   a) RETURN COMMAREA
      The program issuing the RETURN must be at link-level 1 (ie.
      about to return to Z390KCP). If this is not the case then
      INVREQ will be raised. This condition cannot be IGNOREd as it
      is assumed that no valid code follows a RETURN.

      The RETURN macro sets TCTTECA (address) and TCTTECAL (length).
      When the next task is invoked TCTTECAL is used to refresh
      EIBCALEN.

      When Z390KCP regains control after RETURN, the COMMAREA address
      and length are compared with the last RETURN COMMAREA (holding
      areas COMMADDR and COMMLEN).
      --- If both are the same, they are passed to the next transid.

      --- If either is different, then a new area is GETMAINd, the
          COMMAREA is copied, and the old one FREEMAINd.
          Temporary holding areas COMMSAVA and COMMSAVL are used during
          the FREEMAIN process.

   b) LINK COMMAREA
      The address is stored in the linkers DSA at DFHEICAP and the
      length in EIBCALEN. DFHEICAP is passed as a parameter.

      Note: A LINK COMMAREA is never specifically FREEMAINd, it is
            always part of another storage area (DSA, Program, GETMAIN).

   c) XCTL COMMAREA
      The current COMMAREA address in the DSA (DFHEICAP) and length in
      EIBCALEN are compared with the XCTL COMMAREA.
      --- If both are the same, the address is passed to the next
          program.

      --- If either is different, then a new area is GETMAINd and the
          COMMAREA is copied.

          The new COMMAREA address is held in the callers DSA (DFHEICAP)
          and is passed via a small GETMAINd area. This area address is
          stored at DFHEIPRM and its existence flagged by TCTTECND=X'FF'.

GETMAIN/FREEMAIN Management
   A chain of storage areas is anchored fron TCTTESCC.
   TCTTESCC has the address of the first GETMAINd area.

   Eight bytes are added to each request, and they serve as a prefix...
      4-byte address of next GETMAIN or 0, 4-byte total length.

   The user is passed the address after the prefix.

   FREEMAIN must have the same address as the GETMAIN passed otherwise
   an INVREQ condition is raised. FREEMAINs may occur in any order, the
   chain is just 'repaired' at that point.

   At task end or task abend all remaining GETMAINs are FREEMAINd.

HANDLE AID Management
   A HANDLE AID is owned by a program and is never passed to another
   program. The AID block (DFHADBLK, see above) is acquired on first
   use. PUSH and POP will acquire/release additional AID blocks.

   At task end, task abend or an XCTL, all AID blocks are FREEMAINd.

   HANDLE AID only works for conversational tasks.

HANDLE/IGNORE CONDITION Management
   A HANDLE CONDITION is owned by a program and is never passed to
   another program. The CONDITION block (DFHHCBLK, see above) is
   acquired on first use. PUSH and POP will acquire/release additional
   CONDITION blocks.

   Each 4-byte entry represents a condition, this may contain...
      4X'00'   -- The condition is not handled (default)
      A(label) -- The condition will be handled at label
      4X'FF'   -- The condition should be ignored

   The ERROR condition can be handled as a 'catch-all' for any type
   of condition that doesn't have a specific HANDLE CONDITION.
   When both a condition and ERROR are set, only the condition label
   is used, not both.

   At task end, task abend or an XCTL, all CONDITION blocks are
   FREEMAINd.

Trademarks
----------
CICS is a registered trademark of International Business Corporation.

Author: Melvyn Maltz
Shipping Date: June 25, 2007
Z390 version: V1.3.04c
Z390/CICS version: V2
