{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"z390 v1.5.01b PTF 10/28/09 Copyright 2009 Automated Software Tools Corporation To install this cumulative PTF, perform the following steps: Verify J2SE 6.0+ and z390 base release is correctly installed by starting GUI and enterring command IVP which should then display z390 current version. If you plan to use regression tests or MVS 3.8 macros, be sure these optional downloads are installed before applying PTF to pickup any updates to regression tests or MVS 3.8 macros. For Windows, download and run the InstallShield setup in the ptf zip file to update base release to current ptf level. For Linux unzip the ptf zip and copy the z390 sub-directory structure to the corresponding install directory overlaying or adding updated files since the initial install of full release. Rerun Linux command to reset z390 attributes to RWX. Start z390 GUI and run command IVP to verify z390 installation. The return code should be 0 or 4 if you do not install optional files. To see RPI fixes included in this PTF visit: http://www.z390.org/z390_Download_Archive.htm Visit http://www.z390.org for more information on latest z390 updates. Visit http://www.zpar.org for more information on ZPAR utilities including source z390/zcobol tracing Visit http://www.zcobol.org for more information on zcobol which is included in z390 releases and PTF's.","title":"z390"},{"location":"#z390","text":"v1.5.01b PTF 10/28/09 Copyright 2009 Automated Software Tools Corporation To install this cumulative PTF, perform the following steps: Verify J2SE 6.0+ and z390 base release is correctly installed by starting GUI and enterring command IVP which should then display z390 current version. If you plan to use regression tests or MVS 3.8 macros, be sure these optional downloads are installed before applying PTF to pickup any updates to regression tests or MVS 3.8 macros. For Windows, download and run the InstallShield setup in the ptf zip file to update base release to current ptf level. For Linux unzip the ptf zip and copy the z390 sub-directory structure to the corresponding install directory overlaying or adding updated files since the initial install of full release. Rerun Linux command to reset z390 attributes to RWX. Start z390 GUI and run command IVP to verify z390 installation. The return code should be 0 or 4 if you do not install optional files. To see RPI fixes included in this PTF visit: http://www.z390.org/z390_Download_Archive.htm Visit http://www.z390.org for more information on latest z390 updates. Visit http://www.zpar.org for more information on ZPAR utilities including source z390/zcobol tracing Visit http://www.zcobol.org for more information on zcobol which is included in z390 releases and PTF's.","title":"z390"},{"location":"userguide/","text":"Introduction What is z390? The z390 toolkit provides a way to develop, test, and deploy IBM mainframe compatible HLASM assembler programs using any computer that supports Java Version 6 or above. What is HLASM? HLASM stands for High Level Assembler and it's an IBM software product for creating assembler programs targeted at the z/Architecture platform. BAL or Basic Assembler Language is the base for the HLASM syntax and wikipedia has the page IBM Basic Assembly Language and successors which provides a good description of the language. PRINT NOGEN START 0 YREGS BEGIN SUBENTRY WTO 'Hello world!' RETURN END BEGIN z390 Features Supports latest IBM z196 mainframe instruction set ASSIST instruction set OS/390 and z/OS compatable macros CICS application support via emulation VSE compatable macros DFSORT compatable sort utility VSAM file support including REPRO utility z390 alternatives There are a number of tools you can use to develop HLASM programs. The following is a non exaustive list of alternative offerings. HLASM This is the software that the z390 toolkit ultimately seeks to replace. HLASM can only runs on IBM Hardware. You can buy an IBM developer setup that provides a mainframe in a PC that you can use to develop applications for IBM systems. Alternatively you have access to a real IBM mainframe with HLASM available. For a modern development environment, you could pair this with the IBM Developer for Z IDE and the required integration. For most people, this option is simply not available. PC/370 This was the original PC Mainframe assembler software created by Don Higgins, the author of z390. The program is a very old DOS based program and will not run on Windows 10. It also does not support IBM OS macros. You could use a virtual machine running FreeDOS if you want to try it. It is now free. Download from Bill Qualls website Hercules/MVS3.8j/TK4- You can get the full mainframe experience by running a mainframe simulator. TK4- is a turn key (TK) distribution of a mid 80's z/OS predecessor called MVS 3.8j which uses a mainframe simulator called Hercules. All this comes at zero cost. This setup can provide you an assembler you can use. This predates the modern HLASM toolkit and is also limited to S/370 instructions and 24 bit addressing. You will need to use TSO and the mainframe to program which may not be desirable. http://wotho.ethz.ch/tk4-/ SATK - Stand alone toolkit If you are interested in bare metal z/Architecture assembly programming then this is your tool. It was developed to support Linux on Z/Architecture. https://github.com/s390guy/SATK Question I don't think this can be used for OS based applications but I would need to spend some more time investigating to know for sure. Commercial HLASM tools Tachyon Assembler Workbench and Dignus Systems/ASM Assembler and debugger are 2 products that provide HLASM compatable tools. They may be the best tools in the world, but they are not free. Cost is unknown.","title":"Introduction"},{"location":"userguide/#introduction","text":"","title":"Introduction"},{"location":"userguide/#what-is-z390","text":"The z390 toolkit provides a way to develop, test, and deploy IBM mainframe compatible HLASM assembler programs using any computer that supports Java Version 6 or above.","title":"What is z390?"},{"location":"userguide/#what-is-hlasm","text":"HLASM stands for High Level Assembler and it's an IBM software product for creating assembler programs targeted at the z/Architecture platform. BAL or Basic Assembler Language is the base for the HLASM syntax and wikipedia has the page IBM Basic Assembly Language and successors which provides a good description of the language. PRINT NOGEN START 0 YREGS BEGIN SUBENTRY WTO 'Hello world!' RETURN END BEGIN","title":"What is HLASM?"},{"location":"userguide/#z390-features","text":"Supports latest IBM z196 mainframe instruction set ASSIST instruction set OS/390 and z/OS compatable macros CICS application support via emulation VSE compatable macros DFSORT compatable sort utility VSAM file support including REPRO utility","title":"z390 Features"},{"location":"userguide/#z390-alternatives","text":"There are a number of tools you can use to develop HLASM programs. The following is a non exaustive list of alternative offerings.","title":"z390 alternatives"},{"location":"userguide/#hlasm","text":"This is the software that the z390 toolkit ultimately seeks to replace. HLASM can only runs on IBM Hardware. You can buy an IBM developer setup that provides a mainframe in a PC that you can use to develop applications for IBM systems. Alternatively you have access to a real IBM mainframe with HLASM available. For a modern development environment, you could pair this with the IBM Developer for Z IDE and the required integration. For most people, this option is simply not available.","title":"HLASM"},{"location":"userguide/#pc370","text":"This was the original PC Mainframe assembler software created by Don Higgins, the author of z390. The program is a very old DOS based program and will not run on Windows 10. It also does not support IBM OS macros. You could use a virtual machine running FreeDOS if you want to try it. It is now free. Download from Bill Qualls website","title":"PC/370"},{"location":"userguide/#herculesmvs38jtk4-","text":"You can get the full mainframe experience by running a mainframe simulator. TK4- is a turn key (TK) distribution of a mid 80's z/OS predecessor called MVS 3.8j which uses a mainframe simulator called Hercules. All this comes at zero cost. This setup can provide you an assembler you can use. This predates the modern HLASM toolkit and is also limited to S/370 instructions and 24 bit addressing. You will need to use TSO and the mainframe to program which may not be desirable. http://wotho.ethz.ch/tk4-/","title":"Hercules/MVS3.8j/TK4-"},{"location":"userguide/#satk-stand-alone-toolkit","text":"If you are interested in bare metal z/Architecture assembly programming then this is your tool. It was developed to support Linux on Z/Architecture. https://github.com/s390guy/SATK Question I don't think this can be used for OS based applications but I would need to spend some more time investigating to know for sure.","title":"SATK - Stand alone toolkit"},{"location":"userguide/#commercial-hlasm-tools","text":"Tachyon Assembler Workbench and Dignus Systems/ASM Assembler and debugger are 2 products that provide HLASM compatable tools. They may be the best tools in the world, but they are not free. Cost is unknown.","title":"Commercial HLASM tools"},{"location":"userguide/install/","text":"Installation Prerequisites Java SE Runtime Environment You will need to have a Java SE runtime version 6 or above. You do not need the Java SDK but if you have this already installed, this includes the required Java SE runtime. Note If you want to work on z390, then you will need a JDK installed to compile, build and debug the application. See http://z390.sourceforge.net/z390_Java_Source_Compile_and_Debug.htm for more on compiling and debugging java code. Download Download the latest version from the z390 website . The distribution file name is in the format of z390_vnnnn.zip where nnnn is the version number. Install for Windows Unzip the zip distribution to your system. The zip will extract to a folder with the name z390_vnnnn where nnnn is the version number. You can add the z390\\bat directory to system path in order to be able to run z390 commands from any Windows command terminal. Install for MacOS Unzip the zip distribution to your system. The ideal location that will work with the provided perl scripts is your users lib directory. /Users/{youruser}/lib or ~/lib If the folder does not exist, create it. Unzip the distribution in this folder. The zip will extract to a folder with the name z390_vnnnn where nnnn is the version number. Next add the \u017c390 perl script to your path by adding a shortcutin your user bin directory. /Users/{youruser}/bin or ~/bin If the user bin folder does not exist, create it. If the bin folder is not in your path, you will need to modify your shell init script to add your bin folder to your path (.zshrc for zsh) Create a shortcut to the z390.pl script in your bin folder ln -s ~/lib/z390_vnnnn/perl/z390.pl ~/bin/z390 You can now run z390 command in the Terminal. Optional components Three optional z390 downloads are available. Theses are currently hosted on the site in the Download links section: RT.ZIP \u2013 regression tests can be downloaded and installed into the z390 install directory to create rt directory with all the regression test source code used to debug and test z390. After install, run all regression tests using command rt\\RT.BAT . MVS.ZIP \u2013 MVS 3.8 Public Domain macros can be downloaded and installed into the z390 install directory to create mvs subdirectory with all the public domain MVS 3.8 source macros which are useful examples for learning MVS macro code and the common macro interfaces. Note that although z390 can assemble MVS, z/OS, z/VM, and VSE macros, only the z390 macro library can be used to assemble, link, and then execute code under J2SE on Windows and Linux systems because these macros issue z390 specific svc calls. To run regression tests using MVS macros after install, run rt\\RTMVS.BAT . WEBDOC_z390.ZIP \u2013 copy of the www.z390.org website documentation can be downloaded and installed in z390\\webdoc. If the file z390\\webdoc\\index.html is found, then the help menu \"Guide\" will open the local documentation index page otherwise it will open www.z390.org just like the help \"Support\" menu item always does. Troubleshooting the installation There is an installation verification program which can be run by entering IVP.BAT from the GUI or Windows command line after setting current directory to the z390 install directory. This program will display the OS, J2SE, and z390 current versions and will issue warning messages if the required versions for successful z390 execution are not found. The z390 root directory plus the optional rt and mvs directory installs will have new file named Z390.IVP which contains the current z390 version ID and is checked to verify installed version is compatible with the current z390.jar executable code. If the return code is not zero, please check the installation and rerun the IVP command again after resolving install problems. If the J2SE version is not at least 6.0+, z390 will not run successfully. Be sure to uninstall any older versions which may be causing conflict. If problems persist, first suggestion is to try removing all J2SE versions and all z390 versions including deleting the residual install directory files as some early versions left read only files which prevent correct install of current version. Then reboot and reinstall latest J2SE and z390 versions.","title":"Installation"},{"location":"userguide/install/#installation","text":"","title":"Installation"},{"location":"userguide/install/#prerequisites","text":"","title":"Prerequisites"},{"location":"userguide/install/#java-se-runtime-environment","text":"You will need to have a Java SE runtime version 6 or above. You do not need the Java SDK but if you have this already installed, this includes the required Java SE runtime. Note If you want to work on z390, then you will need a JDK installed to compile, build and debug the application. See http://z390.sourceforge.net/z390_Java_Source_Compile_and_Debug.htm for more on compiling and debugging java code.","title":"Java SE Runtime Environment"},{"location":"userguide/install/#download","text":"Download the latest version from the z390 website . The distribution file name is in the format of z390_vnnnn.zip where nnnn is the version number.","title":"Download"},{"location":"userguide/install/#install-for-windows","text":"Unzip the zip distribution to your system. The zip will extract to a folder with the name z390_vnnnn where nnnn is the version number. You can add the z390\\bat directory to system path in order to be able to run z390 commands from any Windows command terminal.","title":"Install for Windows"},{"location":"userguide/install/#install-for-macos","text":"Unzip the zip distribution to your system. The ideal location that will work with the provided perl scripts is your users lib directory. /Users/{youruser}/lib or ~/lib If the folder does not exist, create it. Unzip the distribution in this folder. The zip will extract to a folder with the name z390_vnnnn where nnnn is the version number. Next add the \u017c390 perl script to your path by adding a shortcutin your user bin directory. /Users/{youruser}/bin or ~/bin If the user bin folder does not exist, create it. If the bin folder is not in your path, you will need to modify your shell init script to add your bin folder to your path (.zshrc for zsh) Create a shortcut to the z390.pl script in your bin folder ln -s ~/lib/z390_vnnnn/perl/z390.pl ~/bin/z390 You can now run z390 command in the Terminal.","title":"Install for MacOS"},{"location":"userguide/install/#optional-components","text":"Three optional z390 downloads are available. Theses are currently hosted on the site in the Download links section: RT.ZIP \u2013 regression tests can be downloaded and installed into the z390 install directory to create rt directory with all the regression test source code used to debug and test z390. After install, run all regression tests using command rt\\RT.BAT . MVS.ZIP \u2013 MVS 3.8 Public Domain macros can be downloaded and installed into the z390 install directory to create mvs subdirectory with all the public domain MVS 3.8 source macros which are useful examples for learning MVS macro code and the common macro interfaces. Note that although z390 can assemble MVS, z/OS, z/VM, and VSE macros, only the z390 macro library can be used to assemble, link, and then execute code under J2SE on Windows and Linux systems because these macros issue z390 specific svc calls. To run regression tests using MVS macros after install, run rt\\RTMVS.BAT . WEBDOC_z390.ZIP \u2013 copy of the www.z390.org website documentation can be downloaded and installed in z390\\webdoc. If the file z390\\webdoc\\index.html is found, then the help menu \"Guide\" will open the local documentation index page otherwise it will open www.z390.org just like the help \"Support\" menu item always does.","title":"Optional components"},{"location":"userguide/install/#troubleshooting-the-installation","text":"There is an installation verification program which can be run by entering IVP.BAT from the GUI or Windows command line after setting current directory to the z390 install directory. This program will display the OS, J2SE, and z390 current versions and will issue warning messages if the required versions for successful z390 execution are not found. The z390 root directory plus the optional rt and mvs directory installs will have new file named Z390.IVP which contains the current z390 version ID and is checked to verify installed version is compatible with the current z390.jar executable code. If the return code is not zero, please check the installation and rerun the IVP command again after resolving install problems. If the J2SE version is not at least 6.0+, z390 will not run successfully. Be sure to uninstall any older versions which may be causing conflict. If problems persist, first suggestion is to try removing all J2SE versions and all z390 versions including deleting the residual install directory files as some early versions left read only files which prevent correct install of current version. Then reboot and reinstall latest J2SE and z390 versions.","title":"Troubleshooting the installation"}]}