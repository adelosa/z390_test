*********************************************************************
* Copyright 2007 Automated Software Tools Corporation               *
* This source code is part of z390 assembler/emulator package       *
* The z390 package is distributed under GNU general public license  *
* Author - Don Higgins                                              *
* Date   - 09/19/07                                                 *
*********************************************************************
* 09/19/07 INITIAL CODING OF ESDS FIXED SKP SEQ ACCESS USING GENCB    
* 09/20/07 RPI 702 CHANGE TO USE POINT TO SET START FOR SEQ RWD/BWD   
* 09/26/07 RPI 702 FOR SEQ, SKIP NULL RCDS AND RETURN ARG=REC#        
*********************************************************************
ESF1SKP1 RT1   MAIN 
REC#     DC    XL4'00'
         LTORG
         EQUREGS
         RT1   START
*
* READ SEQ FWD STARTING AT REC 2 USING KEY and SEQ
*
         WTO   'GEN ACB/RPL AND SKP SEQ READ STARTING AT REC 2'
         GENCB BLK=ACB,DDNAME=VFILE,MACRF=(KEY,SEQ)
         LTR   R15,R15
         RT1   CC0
         LR    R2,R1             R2=ACB 
         OPEN  ((R2),(INPUT))
         LTR   R15,R15
         RT1   CC0
         GETMAIN R,LV=80
         LR    R4,R1             R4=RECORD AREA
         GENCB BLK=RPL,ACB=(R2),AREA=(R4),OPTCD=(KEY),ARG=REC# 
         LTR   R15,R15
         RT1   CC0
         LR    R3,R1             R3=RPL
         MVC   REC#,=F'2'
         POINT RPL=(R3)          SET CUR POS TO REC 2       
         LTR   R15,R15
         RT1   CC0
         MVC   REC#,=F'-1'       RESET TO TEST ARG ON SEQ GET
         MODCB RPL=(R3),OPTCD=(SEQ,FWD)
         LTR   R15,R15
         RT1   CC0
         GET   RPL=(R3)          READ REC2 SEQ FWD
         LTR   R15,R15
         RT1   CC0
         CLC   REC#,=F'2'
         RT1   CC0
         CLC   0(80,R4),=80C'2'  VERIFY REC 2
         RT1   CC0
         GET   RPL=(R3)          READ REC 4 SEQ FWD SKIPPING REC 3      
         LTR   R15,R15
         RT1   CC0
         CLC   REC#,=F'4'
         RT1   CC0
         CLC   0(80,R4),=80C'4'  VERIFY REC 4
         RT1   CC0
         GET   RPL=(R3)          READ EOF                               
         CHI   R15,8  
         RT1   CC0
*
* REPOSITION TO REC3 FOR READING REC 2 AND REC 0 BACKWARD
*
         WTO   'SKP SEQ READ BACKWARD STARTING AT REC 2'
         MODCB RPL=(R3),OPTCD=(KEY)
         LTR   R15,R15
         RT1   CC0
         MVC   REC#,=F'3'                                     
         POINT RPL=(R3)          SET CUR POS TO REC 3        
         LTR   R15,R15
         RT1   CC0
         MVC   REC#,=F'-1'       RESET TO TEST SEQ ARG 
         MODCB RPL=(R3),OPTCD=(SEQ,BWD)
         LTR   R15,R15
         RT1   CC0
         GET   RPL=(R3)          READ REC2 SEQ BWD
         LTR   R15,R15
         RT1   CC0
         CLC   REC#,=F'2'        VERIFY REC# 2
         RT1   CC0
         CLC   0(80,R4),=80C'2'  VERIFY REC 2
         RT1   CC0
         GET   RPL=(R3)          READ REC 0 SEQUENTIALLY BACKWARD
         LTR   R15,R15
         RT1   CC0
         CLC   REC#,=F'0'        VERIFY REC# 0
         RT1   CC0
         CLC   0(80,R4),=80C'0'  VERIF REC 0
         RT1   CC0
         GET   RPL=(R3)          READ EOF                               
         CHI   R15,8  
         RT1   CC0
*
* REPOSITION TO EOF FOR READING REC 4, 2 BACKWARD
*
         WTO   'SKP SEQ READ BACKWARD STARTING AT REC 4'
         MODCB RPL=(R3),OPTCD=(KEY)
         LTR   R15,R15
         RT1   CC0
         MVC   REC#,=F'-1'                                     
         POINT RPL=(R3)          SET CUR POS TO EOF         
         LTR   R15,R15
         RT1   CC0
         MODCB RPL=(R3),OPTCD=(SEQ,BWD)
         LTR   R15,R15
         RT1   CC0
         GET   RPL=(R3)          READ REC4 SEQ BWD
         LTR   R15,R15
         RT1   CC0
         CLC   REC#,=F'4'        VERIFY REC#
         RT1   CC0
         CLC   0(80,R4),=80C'4'  VERIFY REC 3
         RT1   CC0
         GET   RPL=(R3)          READ REC 2 SEQUENTIALLY BACKWARD
         LTR   R15,R15
         RT1   CC0
         CLC   REC#,=F'2'        VERIFY REC# 2
         RT1   CC0
         CLC   0(80,R4),=80C'2'  VERIF REC 2
         RT1   CC0
         GET   RPL=(R3)          READ REC 0 SEQUENTIALLY BACKWARD
         LTR   R15,R15
         RT1   CC0
         CLC   REC#,=F'0'        VERIFY REC# 0
         RT1   CC0
         CLC   0(80,R4),=80C'0'  VERIF REC 0
         RT1   CC0
         GET   RPL=(R3)          READ REC 0 SEQUENTIALLY BACKWARD
         CHI   R15,8             VERIFY EOF
         RT1   CC0
         CLOSE ((R2))
         LTR   R15,R15
         RT1   CC0
         RT1   END
         END
