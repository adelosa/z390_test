*********************************************************************
* Copyright 2005 Automated Software Tools Corporation               *
* This source code is part of z390 assembler/emulator package       *
* The z390 package is distributed under GNU general public license  *
* Author - Don Higgins                                              *
* Date   - 11/20/05                                                 *
*********************************************************************
* RUN BMKPD1 INSTRUCTION LOOP BENCHMARK TO MEASURE
* PACKED DECIMAL EXECUTION SPEED
* SEE STATISTICS GENERATED ON LOG:
*   11/23/05 Z390 V1.0.07 3.0 GHZ P4
*             AP8   =  5697 NANOSECONDS USING MEM_WORK AND BIGINT
*             AP16  = 12065 NANOSECONDS USING MEM_WORK AND BIGINT
*             AP8   =  4869 NANOSECONDS USING BIGINT
*             AP16  = 11370 NANOSECONDS USING BIGINT
*             AP8   =  2873 NANOSECONDS USING LONG VS BIGINT IF OK
*             AP16  = 11284 NANOSECONDS USING BIGINT WHEN REQUIRED
*********************************************************************
* 11/23/05 RPI 108 USE INT VERSUS BIGINT WHEN VALUES WITHIN RANGE
*          AND REMOVE USE OF MEM_WORK TO AVOID END OF MEMORY TRAP
*********************************************************************
         MACRO
&TEST    BMKINS &OP,&OP1,&OP2,&OP3
.*
.* TEST INSTRUCTION OP WITH OPERANDS &OP1,&OP2,&OP3
.*
         MVC  DINSOP,=CL5'&OP' 
&OPS     SETC &SYSLIST(2)
&I       SETA 2
.OPLOOP  ANOP
&I       SETA &I+1
         AIF  (&I GT N'&SYSLIST).OPEND
&OPS     SETC '&OPS,&SYSLIST(&I)'
         AGO  .OPLOOP
.OPEND   ANOP
         BAL  R12,BMKINIT
&TEST    &OP &OPS
         BCT  R11,&TEST
         BAL  R12,BMKCALC
         MEND
BMKPD1   SUBENTRY
         WTO  'BMKPD1 CALC EZ390 PD INSTRUCTION SPEEDS'
         L     R0,=A(REPS)
         CVD   R0,PWORK
         ED    DREPS,PWORK+4
         WTO   MF=(E,WTOREPS)
         BAL   R12,BMKINIT
TEST0    BCT   R11,TEST0          CALC BCT ONLY
         BAL   R12,BMKCALC
         MVC   BCT_NS,INS_NS      SAVE BCT MICS FOR OTHER CALCS
*
* INSTRUCTION TIMING MACROS
*
AP8      BMKINS AP,PDATA,=P'1'
AP16     BMKINS AP,PDATA16,=P'123456789012345'

*
* END OF MACROS
*
         WTO  'BMKINS1 ENDED OK'
         SUBEXIT
*
* INIT - SET START TIME AND COUNT
*
BMKINIT  EQU  *
         TIME NS,TOD_NS_START
         L    R11,=A(REPS)
         SR   R0,R0
         SPM  R0     SUPRESS OVERFLOW
         BR   R12
*
* CALC AND DISPLAY INSTRUCTION RATE
*
BMKCALC  EQU  *
         TIME NS,TOD_NS_END
         LG   R1,TOD_NS_END
         SG   R1,TOD_NS_START
         DSGF R0,=A(REPS)
         SG   R1,BCT_NS
         STG  R1,INS_NS
         CVDG R1,PWORK16
         MVC  DRATE,MASK
         ED   DRATE,PWORK16+13
         WTO  MF=(E,WTORATE)
         BR   R12
*
* COMMON DATA
*
         EQUREGS
*
* SET REPS TO MINIMUM VALUE REQUIRED TO GET WITHIN DESIRED ACCURACY
*
*   1.  Using original TIME MIC counter based on Java current time mics
*       reguired 10 M reps to get within 5% accuracy
*   2.  Using new TIME NS counter based on Java nanoTime only
*       requires 3 M reps to get within 5% accuracy
*
REPS     EQU 3000000
PWORK    DS   D  
PWORK16  DS   DL16
TOD_NS_START DS  D
TOD_NS_END   DS  D
INS_NS   DS  D
BCT_NS   DS  FL8'0'
WTOREPS  DC  AL2(REPEND-*,0)
         DC  C'INSTRUCTION REPITITIONS = '
DREPS    DC  X'4020202020202020'
REPEND   EQU *         
WTORATE  DC  AL2(RATEEND-*,0)
         DC  C'INS '
DINSOP   DC  CL5'BCT',C' ='
DRATE    DC  CL6' ZZZZN'
         DC  C' NANOSECONDS'
RATEEND  EQU *         
MASK     DC  X'402020202120'
DATA1    DC   CL256' '
DATA2    DC   CL256' ' 
PDATA    DC   PL8'0'
PDATA16  DC   PL16'0'
         END      
