*********************************************************************
* Copyright 2007 Automated Software Tools Corporation               *
* This source code is part of z390 assembler/emulator package       *
* The z390 package is distributed under GNU general public license  *
* Author - Don Higgins                                              *
* Date   - 07/25/07                                                 *
*********************************************************************
* 07/25/07 INITIAL CODING OF REPRO UTILITY TO COPY INFILE TO OUTFILE
* 08/30/07 RPI 688 CORRECT OUTFILEQ SYNAD ADDRESS FOR ERRORS
*          CORRECT VAR LENGTH QSAM OUTPUT PREFIX  GENERATION        
* 09/07/07 RPI 681 CONVERT VCDT TO VSAM CATALOG WITH VCLR/VAIX ENTRIES
*********************************************************************
REPRO    SUBENTRY
         COPY  ASMMSP                                                  
         WTO   'REPRO COPY INFILE TO OUTFILE (QSAM TO/FROM VSAM)'
         PM    INIT    SET FILE AND RECORD TYPE INFO             
         PM    OPEN
LOOP     EQU   *
         PM    GET
         PM    PUT
         B     LOOP
EOF      EQU   *
         PM    CLOSE
         WTO   'REPRO ENDED OK'
         SUBEXIT
*
* INIT - SET INFILE AND OUTFILE TYPES AND SET RECORD AREA
*
* FILE TYPE IS VSAM IF DD FILE NAME UP TO . IS 390 LOADABLE
* ELSE IT IS ASSUMED QSAM.  NOT WHEN ACB IS OPENED THE NAME
* FOLLOWING PERIOD IN DDNAME FILE SPEC IS OPTIONAL CATALOG ENTRY
* NAME FOR BASE CLUSTER.
*
INIT     PENTRY
         GETENV INFILEDD
         IF    (LTR,R15,NE,R15)
               WTO 'REPRO INFILE DDNAME NOT FOUND'
               SUBEXIT RC=15
         ENDIF
         PM    LOADVCAT
         IF    (LTR,R15,EQ,R15)
               MVI  INFILET,C'V'
         ELSE  
               MVI  INFILET,C'Q'
         ENDIF
         GETENV OUTFILEDD
         IF    (LTR,R15,NE,R15)
               WTO 'REPRO OUTFILE DDNAME NOT FOUND'
               SUBEXIT RC=15
         ENDIF
         PM    LOADVCAT
         IF    (LTR,R15,EQ,R15)
               MVI  OUTFILET,C'V'
         ELSE  
               MVI  OUTFILET,C'Q'
         ENDIF
         IF    (CLI,INFILET,EQ,C'Q'),AND,(CLI,OUTFILET,EQ,C'Q')
               WTO 'REPRO INFILE OR OUTFILE MUST BE VSAM'
               SUBEXIT RC=16
         ELSEIF (CLI,INFILET,EQ,C'V'),AND,(CLI,OUTFILET,EQ,C'V')
               WTO 'REPRO INFILE OR OUTFILE MUST BE QSAM'
               SUBEXIT RC=16
         ENDIF
         PEXIT
*
* ATTEMPT TO LOAD VSAM CATALOG FROM FILE SPEC AT R1 
* AND SET R15 0 IF SUCCESSFUL
*
LOADVCAT PENTRY
         LR    R14,R1   R14=A(OUTFILE FILE SPEC)
         IF    (TRT,0(256,R14),NE,FIND_PERIOD_NULL) FIND PERIOD OR NULL
               LR   R15,R1
               SR   R15,R14
               BCTR R15,0
               EX   R15,VCATMVC         MOVE FILE SPEC WO PERIOD
               LA   R15,VCATDSN+1(R15)
               MVC  0(5,R15),VCAT390    APPEND .390
               LOAD DSNAME=VCATDSN      TRY LOADING CATALOG
               IF   (LTR,R15,EQ,R15)
                    MVI  OUTFILET,C'V'  ASSUME VSAM IF CAT LOADED
               ELSE
                    MVI  OUTFILET,C'Q'  ELSE ASSUME QSAM
               ENDIF
         ELSE
               MVI  OUTFILET,C'Q'       ASSUME QSAM IF NO PERIOD/NULL
         ENDIF
         PEXIT
VCATMVC  MVC   VCATDSN(0),0(R14)  MOVE VSAM CATALOG DSN 
*
* OPEN INFILE AND OUTFILE USING DCB OR ACM BASED ON TYPE
* AND COPY RECFM AND LRECLF FROM VSAM CATALOG CLUSTER ENTRY TO QSAM DCB
*
OPEN     PENTRY
         IF    (CLI,INFILET,EQ,C'Q')
               MVC INFILEQ+DCBSYNAD-IHADCB(4),=A(ERR11)
               OPEN (INFILEQ,(INPUT))
               IF  (LTR,R15,NE,R15)
                   B  ERR11
               ENDIF
         ELSE
               OPEN (INFILEV,(INPUT))
               IF  (LTR,R15,NE,R15)
                   B  ERR12
               ELSE
                   LA  R1,OUTFILEQ
                   LA  R2,INFILEV   RPI 681 (WAS OLD ACBAVCDT)
                   PM    INITREC 
               ENDIF
         ENDIF
         IF    (CLI,OUTFILET,EQ,C'Q')
               MVC  OUTFILEQ+DCBSYNAD-IHADCB(4),=A(ERR13)
               OPEN (OUTFILEQ,(OUTPUT))
               IF  (LTR,R15,NE,R15)
                   B  ERR13
               ELSE
                   LA  R1,OUTFILEQ
                   LA  R2,INFILEV   RPI 681 (WAS OLD ACBAVCDT)
                   PM  INITREC
               ENDIF
         ELSE
               OPEN (OUTFILEV,(OUTPUT))
               IF  (LTR,R15,NE,R15)
                   B  ERR14
               ELSE
                   LA  R1,INFILEQ
                   LA  R2,OUTFILEV  RPI 681 (WAS OLD ACBAVCDT)
                   PM  INITREC
               ENDIF
         ENDIF
         PEXIT
*
* CLOSE FILES
*
CLOSE    PENTRY
         IF     (CLI,INFILET,EQ,C'Q')
               MVC  INFILEQ+DCBSYNAD-IHADCB(4),=A(ERR41)
               CLOSE INFILEQ
         ELSE
               CLOSE INFILEV
               IF  (LTR,R15,NE,R15)
                   B  ERR42
               ENDIF
         ENDIF
         IF     (CLI,OUTFILET,EQ,C'Q')
               MVC  OUTFILEQ+DCBSYNAD-IHADCB(4),=A(ERR43) RPI 688
               CLOSE OUTFILEQ
         ELSE
               CLOSE OUTFILEV
               IF  (LTR,R15,NE,R15)
                   B  ERR44
               ENDIF
         ENDIF
         PEXIT
*
* GET RECORD FROM INFILE QSAM OR VSAM FILE
*
GET      PENTRY
         IF    (CLI,INFILET,EQ,C'Q')
               MVC  INFILEQ+DCBSYNAD-IHADCB(4),=A(ERR21)
               GET  INFILEQ,(R3)
         ELSE
               GET  RPL=INFILER
               SHOWCB RPL=INFILER,AREA=FDBK,LENGTH=1,FIELDS=(FDBK)
               IF  (CH,R15,EQ,=H'8'),  CHECK RC AND REASON FOR EOD     X
               AND,(CLI,FDBK,EQ,4)
                   B  EOF
               ENDIF
               IF  (LTR,R15,NE,R15)
                   B  ERR22
               ENDIF
         ENDIF
         PEXIT
*
* PUT RECORD TO OUTFILE QSAM OR VSAM FILE
*
PUT      PENTRY
         IF    (CLI,OUTFILET,EQ,C'Q')
               MVC  OUTFILEQ+DCBSYNAD-IHADCB(4),=A(ERR31)   RPI 688
               SHOWCB RPL=INFILER,AREA=VLEN,LENGTH=4,FIELDS=(RECLEN)
               IF   (TM,OUTFILEQ+DCBRECFM-IHADCB,O,DCBRECFM_V) RPI 688  
                    L    R2,VLEN
                    AHI  R2,4
                    SLL  R2,16
                    ST   R2,0(R3)  RPI 688 SET QSAM VAR LENGTH PREFIX
               ENDIF
               PUT  OUTFILEQ,(R3)
         ELSE
               IF   (TM,INFILEQ+DCBRECFM-IHADCB,O,DCBRECFM_V)  RPI 688  
                    LH    R0,0(R3) 
                    AHI   R0,-4
                    MODCB RPL=OUTFILER,RECLEN=(R0)   RPI 688
               ENDIF
               PUT  RPL=OUTFILER
               IF  (LTR,R15,NE,R15)
                   B  ERR32
               ENDIF
         ENDIF
         PEXIT
*
* INITREC
*   R1 = QSAM DCB
*   R2 = VSAM VCLR VSAM CATALOG BASE CLUSTER ENTRY 
*
*  INITREC - INIT QSAM DCB LRECLF AND RECFM FROM VCDT
*    R1  = QSAM DCB
*    R2  = VCDT VSAM CLUSTER DEFINITION TABLE
*
INITREC  PENTRY
         USING IHADCB,R1
         USING IHAACB,R2  RPI 681 (WAS OLD IHAVCDT FOR SINGLE FILE)
         L     R14,ACBDCBA  R14= VSAM ESDS DATA DCB  RPI 681
         L     R15,ACBVCLRA R15= VCLR BASE CLUSTER   RPI 681
         USING IHAVCLR,R15                           RPI 681
         MVC   DCBBLKSIF,VCLRLREC SET QSAM DCBBLKSIF RPI 681
         MVC   DCBLRECLF,VCLRLREC SET QSAM DCBLRECLF RPI 681
         IF    (TM,VCLRFLG1,O,VCLRVREC)  RPI 688     RPI 681
               MVI   DCBRECFM,DCBRECFM_V  VARIABLE LENGTH REC QSAM
               L     R2,VCLRLREC                     RPI 681
               AHI   R2,4          LENGTH OF MAX RECORD + 4
               IF    (CH,R2,GT,=H'32764')
                     B  ERR51
               ENDIF
               ST    R2,DCBBLKSIF
               ST    R2,DCBLRECLF
               GETMAIN RU,LV=(R2)
               LR    R3,R1         R3=A(VSAM RECORD LENGTH IN PFX)
               LA    R4,4(R3)      R4=A(VSAM LOGICAL)
         ELSE
               MVI   DCBRECFM,DCBRECFM_F  FIXED LENGTH REC QSAM
               L     R2,VCLRLREC                    RPI 681
               ST    R2,DCBBLKSIF
               ST    R2,DCBLRECLF
               MODCB RPL=INFILER,RECLEN=(R2)    RPI 688
               MODCB RPL=OUTFILER,RECLEN=(R2)   RPI 688
               GETMAIN RU,LV=(R2)
               LR    R3,R1         R3=A(VSAM RECORD LENGTH IN PEX)
               LR    R4,R1         R4=A(VSAM LOGICAL REC)
         ENDIF
         MODCB RPL=INFILER,AREA=(R4)    RPI 688
         MODCB RPL=OUTFILER,AREA=(R4)   RPI 688
         DROP  R1,R2
         PEXIT
*
* ABORT ERROR ROUTINES
*
ERR11    WTO   'REPRO OPEN INFILE QSAM FAILED'
         ABEND 11,DUMP
ERR12    WTO   'REPRO OPEN INFILE VSAM FAILED'
         ABEND 12,DUMP
ERR13    WTO   'REPRO OPEN OUTFILE QSAM FAILED'
         ABEND 13,DUMP
ERR14    WTO   'REPRO OPEN OUTFILE VSAM FAILED'
         ABEND 14,DUMP
ERR21    WTO   'REPRO GET INFILE QSAM FAILED'
         ABEND 21,DUMP
ERR22    WTO   'REPRO GET INFILE VSAM FAILED'
         ABEND 22,DUMP
ERR31    WTO   'REPRO PUT OUTFILE QSAM FAILED'
         ABEND 31,DUMP
ERR32    WTO   'REPRO PUT OUTFILE VSAM FAILED'
         ABEND 32,DUMP
ERR41    WTO   'REPRO CLOSE INFILE QSAM FAILED'
         ABEND 41,DUMP
ERR42    WTO   'REPRO CLOSE INFILE VSAM FAILED'
         ABEND 42,DUMP
ERR43    WTO   'REPRO CLOSE OUTFILE QSAM FAILED'
         ABEND 43,DUMP
ERR44    WTO   'REPRO CLOSE OUTFILE VSAM FAILED'
         ABEND 44,DUMP
ERR51    WTO   'REPRO RECORD LENGTH TOO LARGE FOR QSAM'
         ABEND 51,DUMP
*
* QSAM DCB AND VSAM ACB CB'S
*
INFILEQ  DCB   DDNAME=INFILE,RECFM=F,LRECL=0,MACRF=GM,EODAD=EOF
INFILEV  ACB   DDNAME=INFILE,MACRF=(SEQ,IN)
INFILER  RPL   ACB=INFILEV,OPTCD=(SEQ)
OUTFILEQ DCB   DDNAME=OUTFILE,RECFM=F,LRECL=0,MACRF=PM
OUTFILEV ACB   DDNAME=OUTFILE,MACRF=(SEQ,OUT)
OUTFILER RPL   ACB=OUTFILEV,OPTCD=(SEQ)
*
* WORK AREAS
*
INFILET  DC    C'Q' QSAM OR VSAM
OUTFILET DC    C'Q' QSAM OR VSAM
INFILEDD DC    C'INFILE',X'00'
OUTFILEDD DC   C'OUTFILE',X'00'
FDBK     DS    X  RPL REASON CODE
VLEN     DC    F'0'
VCATDSN  DC    CL256' '
VCAT390  DC    C'.390',X'00'
FIND_PERIOD_NULL DC 256X'00'
         ORG   FIND_PERIOD_NULL+X'00'
         DC    X'FF' STOP ON SOURCE NULL
         ORG   FIND_PERIOD_NULL+C'.'
         DC    X'FF' STOP ON SOURCE PERIOD
         ORG
         LTORG
         EQUREGS
         VCDTD
         END
