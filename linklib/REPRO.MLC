*********************************************************************
* Copyright 2007 Automated Software Tools Corporation               *
* This source code is part of z390 assembler/emulator package       *
* The z390 package is distributed under GNU general public license  *
* Author - Don Higgins                                              *
* Date   - 07/25/07                                                 *
*********************************************************************
* 07/25/07 INITIAL CODING OF REPRO UTILITY TO COPY INFILE TO OUTFILE
* 08/30/07 RPI 688 CORRECT OUTFILEQ SYNAD ADDRESS FOR ERRORS
*          CORRECT VAR LENGTH QSAM OUTPUT PREFIX  GENERATION        
* 09/07/07 RPI 681 CONVERT VCDT TO VSAM CATALOG WITH VCLR/VAIX ENTRIES
* 09/15/07 RPI 696 VERIFY LOADED FILE IS VCDT BEFORE ASSUMING VSAM      
* 09/17/07 RPI 697 SUPPORT OPTIONAL OVERRIDE OF QSAM FILE RECFM IN
*          BRACKETS AFTER FILE NAME ON INFILE OR OUTFILE.
*          ALSO DISPLAY INFILE AND OUTFILE INFO AT STARTUP      
* 09/19/07 RPI 697 CORRECT EOF TEST WITH SHOWCB RC=0 CHANGE
* 09/22/07 RPI 701 CHANGE DEFAULT TO REPLACE EXISTING VSAM FILES 
*          DURING LOADING UNLESS [DISP=MOD] IS CODED FOLLOWING 
*          CATALOG.ENTRY ON OUTFILE.
*********************************************************************
*
*  REPRO WILL LOAD OR UNLOAD VSAM FILE FROM/TO QSAM FILE 
*
*    INFILE  = QSAM OR VSAM INPUT FILE
*    OUTFILE = VSAM OR QSAM OUTPUT FILE
*
*    1.  VSAM FILE MUST SPECIFY VCDT CATALOG WITH ENTRY SUFFIX.
*    2.  QSAM FILE MAY HAVE OVERIDE RECFM USING SUFFIX OF THE FORM
*        [RECFM=FT|FB|VT|VB]. THE DEFAULT IF F OR V BASED ON VSAM.
*    3.  QSAM OVERRIDE MUST BE CONSISTENT WITH VSAM RECORD FORMAT F/V
*
*    EXAMPLE:
*       SET INFILE=ESF1.TF1[RECFM=FT]  INPUT TEXT QSAM FILE
*       SET OUTFILE=TESTCAT.ESF1       OUTPUT ESF1.VES FIXED ESDS VSAM
*       EXEC REPRO
*
* REGISTER USAGE
*   R3 = RECORD PREFIX (QSAM VAR RECORD WITH 4 BYTE PREFIX)
*   R4 = RECORD AREA   (VSAM FIXED OR VAR LEN RECORD)
*   R5 = QSAM INFILE/OUTFILE DCB
*   R6 = VSAM INFILE/OUTFILE ACB
*   R7 = VSAM VCLR CATALOG ENTRY
*   R8 = VSAM/QSAM TEST DDNAME 
*   R9 = QSAM DSNAME WITH OPTIONAL OVERRIDE [RECFM=XX]
*
*********************************************************************
REPRO    SUBENTRY BASES=(R13,R12)
         COPY  ASMMSP                                                  
         WTO   'Z390 VSAM REPRO UTILITY V1.0'
         PM    INIT    SET FILE AND RECORD TYPE INFO             
LOOP     EQU   *
         PM    GET
         PM    PUT
         B     LOOP
EOF      EQU   *
         PM    CLOSE
         WTO   'REPRO ENDED OK'
         SUBEXIT
*
* INIT - SET INFILE AND OUTFILE TYPES AND SET RECORD AREA
*
* FILE TYPE IS VSAM IF DD FILE NAME UP TO . IS 390 LOADABLE
* VCDT CATALOG ELSE IT IS ASSUMED QSAM.  WHEN ACB IS OPENED THE NAME
* FOLLOWING PERIOD IN DDNAME FILE SPEC PROVIDES CATALOG ENTRY
* NAME BASE CLUSTER.
*
INIT     PENTRY
         GETENV INFILEDD
         IF    (LTR,R15,NE,R15)
               WTO 'REPRO INFILE DDNAME NOT FOUND'
               SUBEXIT RC=15
         ENDIF
         PM    LOAD_CATALOG
         IF    (LTR,R15,EQ,R15)
               MVI  INFILET,C'V'
         ELSE  
               MVI  INFILET,C'Q'
         ENDIF
         GETENV OUTFILEDD
         IF    (LTR,R15,NE,R15)
               WTO 'REPRO OUTFILE DDNAME NOT FOUND'
               SUBEXIT RC=15
         ENDIF
         PM    LOAD_CATALOG
         IF    (CLI,INFILET,EQ,C'Q')
               IF    (LTR,R15,EQ,R15)
                     MVI  OUTFILET,C'V'
                     PM   INIT_LOAD
               ELSE  
                     WTO 'REPRO NO CATALOG FOUND FOR INFILE OR OUTFILE'
                     SUBEXIT RC=16
               ENDIF
         ELSE
               IF    (LTR,R15,EQ,R15)
                     WTO 'REPRO VSAM TO VSAM NOT SUPPORTED'
                     SUBEXIT RC=16
               ENDIF
               MVI   OUTFILET,C'Q'
               PM    INIT_UNLOAD
         ENDIF
         SNAP  ID=1,TEXT='REPRO FILES OPENED',PDATA=DCB
         PEXIT
*
* ATTEMPT TO LOAD VSAM CATALOG FROM FILE SPEC AT R1 
* AND SET R15 0 IF SUCCESSFUL
*
LOAD_CATALOG PENTRY
         LR    R8,R1   R8=A(FILE SPEC)
         IF    (TRT,0(256,R8),NE,FIND_PER_BRK_NULL) FIND .|[|NULL
               STC  R2,PER_BRK_CHAR
               ST   R1,PER_BRK_ADDR
               LR   R15,R1
               SR   R15,R8
               BCTR R15,0
               EX   R15,VCATMVC         MOVE FILE SPEC WO PER/BRK
               LA   R15,VCATDSN+1(R15)
               MVC  0(5,R15),VCAT390    APPEND .390
               LOAD DSNAME=VCATDSN      TRY LOADING CATALOG
               IF   (LTR,R15,EQ,R15)
                    LR   R1,R0
                    USING IHAVCDT,R1
                    IF   (CLC,VCDTID,EQ,=C'VCDT')  RPI 696
                         SR   R15,R15 ASSUME VSAM IF CAT LOADED
                    ELSE
                         PM   CHECK_QSAM_OVERRIDE
                         DELETE DSNAME=VCATDSN
                         LA   R15,4 CATALOG NOT FOUND SO ASSUME QSAM
                    ENDIF
               ELSE
                    PM   CHECK_QSAM_OVERRIDE
                    LA   R15,4  NOT LOADED SO ASSUME QSAM
               ENDIF             
         ELSE
               MVI  R15,4   ASSUME QSAM IF NO PERIOD/NULL
         ENDIF
         PEXIT
         DROP  R1
VCATMVC  MVC   VCATDSN(0),0(R8)  MOVE VSAM CATALOG DSN 
*
* CHECK QSAM OVERRIDE
*
CHECK_QSAM_OVERRIDE PENTRY
         LR   R9,R8  SAVE QSAM DSNAME
         IF   (CLI,PER_BRK_CHAR,EQ,C'.')
              L  R1,PER_BRK_ADDR
              IF (TRT,1(255,R1),NE,FIND_PER_BRK_NULL)
                 IF (CLI,0(R1),EQ,C'[')
                    ST R1,PER_BRK_ADDR
                    PM SET_QFILE_RECFM
                 ENDIF
              ENDIF
         ELSE
              IF   (CLI,PER_BRK_CHAR,EQ,C'[')
                    PM SET_QFILE_RECFM
              ENDIF
         ENDIF
         PEXIT
*
* SET QFILE RECFM OVERRIDE
*
SET_QFILE_RECFM PENTRY
         L     R1,PER_BRK_ADDR
         MVI   0(R1),X'00' TERMAINATE QSAM DSNAME FOR OPEN
         IF  (CLC,1(6,R1),NE,=C'RECFM=')
             WTO 'REPRO INVALID QSAM FILE OVERRIDE [RECFM=FT|FB|VT|VB]'
         ELSEIF (CLC,7(2,R1),EQ,=C'VB')
             MVC RECFM_OVF,=C'VB'
         ELSEIF (CLC,7(2,R1),EQ,=C'VT')
             MVC RECFM_OVF,=C'VT'
         ELSEIF (CLC,7(2,R1),EQ,=C'FB')
             MVC RECFM_OVF,=C'FB'
         ELSEIF (CLC,7(2,R1),EQ,=C'FT')
             MVC RECFM_OVF,=C'FT'
         ELSE
             WTO 'REPRO INVALID QSAM OVERRIDE [RECFM=FT|FB|VT|VB]'
             SUBEXIT RC=16
         ENDIF
         PEXIT
*
* LOAD - OPEN INFILE QSAM AND OUTFILE VSAM
*
INIT_LOAD PENTRY
         WTO   'LOADING VSAM OUTFILE FROM QSAM INFILE'
         PM    CHECK_VSAM_OVERRIDE
         IF    (CLI,MOD,EQ,TRUE)
               WTO 'REPRO OPENING VSAM OUTFILE FOR MOD VS RELOAD'
               OPEN  (OUTFILEV,(UPDATE))
         ELSE
               WTO 'REPRO OPENING VSAM OUTFILE FOR RELOAD VS MOD'
               OPEN  (OUTFILEV,(OUTPUT))
         ENDIF
         IF    (LTR,R15,NE,R15)
               WTO 'REPRO OPEN FOR OUTFILE VSAM CATALOG ENTRY FAILED'
               SUBEXIT RC=16
         ENDIF
         LA  R5,INFILEQ
         LA  R6,OUTFILEV  
         PM  INIT_QSAM
         OPEN (INFILEQ,(INPUT))
         IF   (LTR,R15,NE,R15)
              WTO 'REPRO OPEN FOR INFILE QSAM FILE FAILED'
              SUBEXIT RC=16
         ENDIF
         MVC  INFILEQ+DCBSYNAD-IHADCB(4),=A(ERR11)
         PEXIT
*
* UNLOAD - OPEN INFILE VSAM AND OUTFILE QSAM
*
INIT_UNLOAD PENTRY
         WTO   'UNLOADING VSAM INFILE TO QSAM OUTFILE'
         OPEN  (INFILEV,(INPUT))
         IF    (LTR,R15,NE,R15)
               WTO 'REPRO OPEN FOR INFILE VSAM CATALOG ENTRY FAILED'
               SUBEXIT RC=16
         ENDIF
         LA  R5,OUTFILEQ
         LA  R6,INFILEV  
         PM  INIT_QSAM
         OPEN (OUTFILEQ,(OUTPUT))
         IF   (LTR,R15,NE,R15)
              WTO 'REPRO OPEN FOR OUTFILE QSAM FILE FAILED'
              SUBEXIT RC=16
         ENDIF
         MVC  OUTFILEQ+DCBSYNAD-IHADCB(4),=A(ERR13)
         PEXIT
*
* CHECK_VSAM_OVERRIDE - CHECK FOR [DISP=MOD] FOLLOWING CATALOG.ENTRY
* ON OUTFILE AND USE OPEN (OUTFILE,(UPDATE)) VS (OUTFILE,(OUTPUT)) 
*
CHECK_VSAM_OVERRIDE PENTRY
         MVI   FIND_PER,X'00' TURN OFF PERIOD SEARCH
         IF    (TRT,0(256,R8),NE,FIND_PER_BRK_NULL) FIND BRK/NULL
               IF (CLI,0(R1),EQ,C'[')
                  IF (CLC,0(10,R1),EQ,=C'[DISP=MOD]')
                     MVI MOD,TRUE
                  ENDIF
                  MVI 0(R1),0 TERMINATE OUTFILE SPEC AT BRK
                  ST  R8,OUTFILEV+ACBDSNAM-IHAACB USE UPDATED DSN
               ENDIF
         ENDIF    
         PEXIT

INIT_VSAM PENTRY
*
* INIT_QSAM - SET QSAM RECFM, LRECL, BLKSIZE CONSISTENT WITH VSAM
*
*   R5 = QSAM DCB
*   R6 = VSAM ACB                                  
*
INIT_QSAM PENTRY
         USING IHADCB,R5  QSAM DCB IN/OUT FILE
         ST    R9,DCBDSNAM SET DSNAME WITHOUT OPTIONAL OVERRIDE
         USING IHAACB,R6  VSAM ACB IN/OUT FILE
         L     R7,ACBVCLRA R15= VCLR BASE CLUSTER    RPI 681
         USING IHAVCLR,R7                            RPI 681
         IF    (TM,VCLRFLG1,O,VCLRVREC)  RPI 688     RPI 681
               PM    SET_VREC_RECFM
               L     R2,VCLRLREC                     RPI 681
               AHI   R2,4         LENGTH OF MAX RECORD + 4
               IF    (CH,R2,GT,=H'32764')
                     B  ERR51
               ENDIF
               IF    (CLC,RECFM_OVF,EQ,=C'VB')
                     AHI   R2,4    ADD 4 BYTE VB PREFIX
               ENDIF
               ST    R2,DCBBLKSIF  VB BLKSI
               GETMAIN RU,LV=(R2)
               LR    R3,R1         R3=A(VSAM RECORD LENGTH IN PFX)
               LA    R4,4(R3)      R4=A(VSAM LOGICAL)
         ELSE
               PM    SET_FIXED_RECFM
               L     R2,VCLRLREC                RPI 681
               ST    R2,DCBBLKSIF
               ST    R2,DCBLRECLF
               MODCB RPL=INFILER,RECLEN=(R2)    RPI 688
               MODCB RPL=OUTFILER,RECLEN=(R2)   RPI 688
               GETMAIN RU,LV=(R2)
               LR    R3,R1         R3=A(VSAM RECORD LENGTH IN PEX)
               LR    R4,R1         R4=A(VSAM LOGICAL REC)
         ENDIF
         CVD   R2,PWORK
         MVC   DLRECL,=X'402020202020'
         ED    DLRECL,PWORK+5
         WTO MF=(E,WTO_QSAM)
         MODCB RPL=INFILER,AREA=(R4)    RPI 688
         MODCB RPL=OUTFILER,AREA=(R4)   RPI 688
         PEXIT
*
* SET FIXED QSAM RECORD FORMAT AND DISPLAY IT
*
SET_FIXED_RECFM PENTRY
         IF    (CLC,RECFM_OVF,EQ,=C'XX'),OR,(CLC,RECFM_OVF,EQ,=C'F ')
               MVC   RECFM_OVF,=C'F ' 
               MVI   DCBRECFM,DCBRECFM_F 
         ELSEIF (CLC,RECFM_OVF,EQ,=C'FT')
               MVI DCBRECFM,DCBRECFM_FT
         ELSEIF (CLC,RECFM_OVF,EQ,=C'FB')
               MVI DCBRECFM,DCBRECFM_FB
         ELSE 
               WTO 'REPRO INVALID FIXED QSAM [RECFM=FT|FB]'
               SUBEXIT RC=16
         ENDIF
         PEXIT
*
* SET VARIABLE QSAM RECORD FORMAT AND DISPLAY IT
*
SET_VREC_RECFM PENTRY
         IF    (CLC,RECFM_OVF,EQ,=C'XX'),OR,(CLC,RECFM_OVF,EQ,=C'V ')
               MVC   RECFM_OVF,=C'V '
               MVI   DCBRECFM,DCBRECFM_V
         ELSEIF (CLC,RECFM_OVF,EQ,=C'VT')
               MVI DCBRECFM,DCBRECFM_VT
         ELSEIF (CLC,RECFM_OVF,EQ,=C'VB')
               MVI DCBRECFM,DCBRECFM_VB
         ELSE 
               WTO 'REPRO INVALID VARIABLE QSAM [RECFM=VT|VB]'
               SUBEXIT RC=16
         ENDIF
         PEXIT
*
* CLOSE FILES
*
CLOSE    PENTRY
         IF     (CLI,INFILET,EQ,C'Q')
               MVC  INFILEQ+DCBSYNAD-IHADCB(4),=A(ERR41)
               CLOSE INFILEQ
               CLOSE OUTFILEV
               IF  (LTR,R15,NE,R15)
                   B  ERR44
               ENDIF
         ELSE
               CLOSE INFILEV
               IF  (LTR,R15,NE,R15)
                   B  ERR42
               ENDIF
               MVC  OUTFILEQ+DCBSYNAD-IHADCB(4),=A(ERR43) RPI 688
               CLOSE OUTFILEQ
         ENDIF
         PEXIT
*
* GET RECORD FROM INFILE QSAM OR VSAM FILE
*
GET      PENTRY
         IF    (CLI,INFILET,EQ,C'Q')
               MVC  INFILEQ+DCBSYNAD-IHADCB(4),=A(ERR21)
               GET  INFILEQ,(R3)
         ELSE
               GET  RPL=INFILER
               IF  (CH,R15,EQ,=H'8')   CHECK RC
                   SHOWCB RPL=INFILER,AREA=FDBK,LENGTH=1,FIELDS=(FDBK)
                   IF (CLI,FDBK,EQ,4)
                      B  EOF
                   ENDIF
               ENDIF
               IF  (LTR,R15,NE,R15)
                   B  ERR22
               ENDIF
         ENDIF
         PEXIT
*
* PUT RECORD TO OUTFILE QSAM OR VSAM FILE
*
PUT      PENTRY
         IF    (CLI,OUTFILET,EQ,C'Q')
               MVC  OUTFILEQ+DCBSYNAD-IHADCB(4),=A(ERR31)   RPI 688
               SHOWCB RPL=INFILER,AREA=VLEN,LENGTH=4,FIELDS=(RECLEN)
               IF   (TM,OUTFILEQ+DCBRECFM-IHADCB,O,DCBRECFM_V) RPI 688  
                    L    R2,VLEN
                    AHI  R2,4
                    SLL  R2,16
                    ST   R2,0(R3)  RPI 688 SET QSAM VAR LENGTH PREFIX
               ENDIF
               PUT  OUTFILEQ,(R3)
         ELSE
               IF   (TM,INFILEQ+DCBRECFM-IHADCB,O,DCBRECFM_V)  RPI 688  
                    LH    R0,0(R3) 
                    AHI   R0,-4
                    MODCB RPL=OUTFILER,RECLEN=(R0)   RPI 688
               ENDIF
               PUT  RPL=OUTFILER
               IF  (LTR,R15,NE,R15)
                   B  ERR32
               ENDIF
         ENDIF
         PEXIT
*
* ABORT ERROR ROUTINES
*
ERR11    WTO   'REPRO OPEN INFILE QSAM FAILED'
         ABEND 11,DUMP
ERR12    WTO   'REPRO OPEN INFILE VSAM FAILED'
         ABEND 12,DUMP
ERR13    WTO   'REPRO OPEN OUTFILE QSAM FAILED'
         ABEND 13,DUMP
ERR14    WTO   'REPRO OPEN OUTFILE VSAM FAILED'
         ABEND 14,DUMP
ERR21    WTO   'REPRO GET INFILE QSAM FAILED'
         ABEND 21,DUMP
ERR22    WTO   'REPRO GET INFILE VSAM FAILED'
         ABEND 22,DUMP
ERR31    WTO   'REPRO PUT OUTFILE QSAM FAILED'
         ABEND 31,DUMP
ERR32    WTO   'REPRO PUT OUTFILE VSAM FAILED'
         ABEND 32,DUMP
ERR41    WTO   'REPRO CLOSE INFILE QSAM FAILED'
         ABEND 41,DUMP
ERR42    WTO   'REPRO CLOSE INFILE VSAM FAILED'
         ABEND 42,DUMP
ERR43    WTO   'REPRO CLOSE OUTFILE QSAM FAILED'
         ABEND 43,DUMP
ERR44    WTO   'REPRO CLOSE OUTFILE VSAM FAILED'
         ABEND 44,DUMP
ERR51    WTO   'REPRO RECORD LENGTH TOO LARGE FOR QSAM'
         ABEND 51,DUMP
*
* QSAM DCB AND VSAM ACB CB'S
*
INFILEQ  DCB   DDNAME=INFILE,RECFM=F,LRECL=0,MACRF=GM,EODAD=EOF
INFILEV  ACB   DDNAME=INFILE,MACRF=(SEQ,IN)
INFILER  RPL   ACB=INFILEV,OPTCD=(SEQ)
OUTFILEQ DCB   DDNAME=OUTFILE,RECFM=F,LRECL=0,MACRF=PM
OUTFILEV ACB   DDNAME=OUTFILE,MACRF=(SEQ,OUT)
OUTFILER RPL   ACB=OUTFILEV,OPTCD=(SEQ)
*
* WORK AREAS
*
MOD      DC    AL1(FALSE) ADD VSAM RECORDS IF [DISP=MOD] ON OUTFILE
TRUE     EQU   1
FALSE    EQU   0
PWORK    DC    D'0'
WTO_QSAM DC    AL2(WTO_QSAM_END-*,0)
         DC    C'QSAM FILE RECFM='
RECFM_OVF DC   C'XX'
         DC    C' LRECL ='
DLRECL   DC    C' 12345'
WTO_QSAM_END   EQU   *
INFILET  DC    C'Q' QSAM OR VSAM
OUTFILET DC    C'Q' QSAM OR VSAM
INFILEDD DC    C'INFILE',X'00'
OUTFILEDD DC   C'OUTFILE',X'00'
FDBK     DS    X  RPL REASON CODE
VLEN     DC    F'0'
VCATDSN  DC    CL256' '
VCAT390  DC    C'.390',X'00'
PER_BRK_CHAR DC C'X'  PERIOD, BRACKET, OR NULL TERM CHAR
PER_BRK_ADDR DC A(0)  ADDR OF TERM CHAR
FIND_PER_BRK_NULL DC 256X'00'
         ORG   FIND_PER_BRK_NULL+X'00'
         DC    X'FF' STOP ON SOURCE NULL
         ORG   FIND_PER_BRK_NULL+C'.'
FIND_PER DC    C'.' STOP ON SOURCE PERIOD
         ORG   FIND_PER_BRK_NULL+C'['
         DC    C'[' STOP ON SOURCE BRACKET 
         ORG
         LTORG
         EQUREGS
         VCDTD
         END
