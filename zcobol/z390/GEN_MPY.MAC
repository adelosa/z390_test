         MACRO
.*********************************************************************
.* Copyright 2008 Automated Software Tools Corporation               *
.* This source code is part of z390 zCOBOL/assembler/emulator package*
.* The z390 package is distributed under GNU general public license  *
.* Author - Don Higgins                                              *
.* Date   - 04/07/08                                                 *
.*********************************************************************
.* 10/30/08 initial coding for Z390 GEN_MPY using GEN_SUB as model    
.* 02/16/09 upgrade to use ZCGETFLD for subscripts and qual.
.* 02/25/09 RPI 1004 add support for types 1,2,E,D,L &ZC_FLOAT type    
.* 03/17/09 RPI 1004 add support for types 1-9,Q    
.* 04/28/09 RPI 1003 add support for TMP vars with neg IX
.*********************************************************************
         GEN_MPY &T_NAME,&T_IX,&S_NAME,&S_IX,&ROUNDED,&ONSIZE 
         COPY  ZC_WS
         AIF (&T_IX GT 0)
             :&N_TARGET SETC '&T_NAME'
             :&L_TARGET SETA  &SYM_LEN(&T_IX)
             :&S_TARGET SETB  &SYM_PIC_SIGN(&T_IX)
             :&T_TARGET SETC '&SYM_PIC_TYPE(&T_IX)'
             :&P_TARGET SETC '&SYM_PIC(&T_IX)'
         AELSEIF (&T_IX LT 0)
             :&N_TARGET SETC '&TMP_NAME(-&T_IX)'
             :&L_TARGET SETA  &TMP_LEN(-&T_IX)
             :&S_TARGET SETB  &TMP_SIGN(-&T_IX)
             :&T_TARGET SETC '&TMP_TYPE(-&T_IX)'
             :&P_TARGET SETC ''
         AELSE
            MNOTE 8,'GEN_MOVE MISSING TARGET INDEX FOR &T_NAME'
            MEXIT
         AEND
         :&N_SOURCE SETC '&S_NAME'
         AIF (&S_IX GT 0)
             :&L_SOURCE SETA  &SYM_LEN(&S_IX)
             :&S_SOURCE SETB  &SYM_PIC_SIGN(&S_IX)
             :&T_SOURCE SETC '&SYM_PIC_TYPE(&S_IX)'
         AELSEIF (&S_IX LT 0)
             :&N_SOURCE SETC '&TMP_NAME(-&S_IX)'
             :&L_SOURCE SETA  &TMP_LEN(-&S_IX)
             :&S_SOURCE SETB  &TMP_SIGN(-&S_IX)
             :&T_SOURCE SETC '&TMP_TYPE(-&S_IX)'
         AEND
         AIF   (&ROUNDED EQ 1)
               MNOTE 8,'GEN_MPY ROUNDED NOT SUPPORTED YET'
               MEXIT
         AEND
         AIF   (&ONSIZE EQ 1)
               MNOTE 8,'GEN_MPY ON SIZE NOT SUPPORTED YET'
               MEXIT
         AEND
         AIF   (&S_IX NE 0)
               ACALL MPY_FLD
         AELSE
               :&LIT SETC '&N_SOURCE'
               ACALL MPY_LIT
         AEND
         AIF   (&ONSIZE EQ 1)
               GEN_ONSIZE_START MPY
         AEND
         MEXIT
.*
.* MPY LITERAL
.* 
         AENTRY MPY_LIT
         AIF  ('&LIT'(1,1) GT '0'                                      X
                OR '&LIT'(1,1) EQ '+'                                  X
                OR '&LIT'(1,1) EQ '-')
               :&NUM SETC '&LIT'
               ACALL MPY_NUM_LIT
         AELSEIF  ('&LIT' EQ 'ZERO'                                    X
                   OR '&LIT' EQ 'ZEROES')                          
               :&NUM SETC '0'
               ACALL MPY_NUM_LIT
         AELSE
               MNOTE 8,'GEN_MPY UNKNOWN LITERAL &LIT'
               MEXIT
         AEND
         AEND
.*
.* MPY NUMERIC LIT 
.*
      AENTRY MPY_NUM_LIT
      ACASE (C2A('&T_TARGET'))
      AWHEN C'1'
         LE    F0,&N_TARGET
         LARL  R14,=EH'&NUM'
         ME    F0,0(R14)
         STE   F0,&N_TARGET
      AWHEN C'2'
         LD    F0,&N_TARGET
         LARL  R14,=DH'&NUM'
         MD    F0,0(R14)
         STD   F0,&N_TARGET
      AWHEN C'3'
         LD    F0,&N_TARGET
         LD    F2,8+&N_TARGET
         LARL  R14,=LH'&NUM'
         LD    F1,0(R14)
         LD    F3,8(R14)
         MXR   F0,F1
         STD   F0,&N_TARGET
         STD   F2,8+&N_TARGET
      AWHEN C'4'
         LE    F0,&N_TARGET
         LDEBR F0,F0,0
         LARL  R14,=DB'&NUM'
         MDB   F0,0(R14)
         LEDBR F0,F0
         STE   F0,&N_TARGET
      AWHEN C'5'
         LD    F0,&N_TARGET
         LARL  R14,=DB'&NUM'
         MDB   F0,0(R14)
         STD   F0,&N_TARGET
      AWHEN C'6'
         LD    F0,&N_TARGET
         LD    F2,8+&N_TARGET
         LARL  R14,=LB'&NUM'
         LD    F1,0(R14)
         LD    F3,8(R14)
         MXBR  F0,F1
         STD   F0,&N_TARGET
         STD   F2,8+&N_TARGET
      AWHEN C'7'
         LE    F0,&N_TARGET
         LDETR F0,F0,0
         LARL  R14,=DD'&NUM'
         LD    F1,0(R14)
         MDTR  F0,F0,F1
         LEDTR F0,0,F0,0
         STE   F0,&N_TARGET
      AWHEN C'8'
         LD    F0,&N_TARGET
         LARL  R14,=DD'&NUM'
         LD    F1,0(R14)
         MDTR  F0,F1
         STD   F0,&N_TARGET
      AWHEN C'9'
         LD    F0,&N_TARGET
         LD    F2,8+&N_TARGET
         LARL  R14,=LD'&NUM'
         LD    F1,0(R14)
         LD    F3,8(R14)
         MXTR  F0,F0,F1
         STD   F0,&N_TARGET
         STD   F2,8+&N_TARGET
      AWHEN C'F'
         L     R0,&N_TARGET
         MSFI  R0,&NUM
         ST    R0,&N_TARGET
      AWHEN C'H'
         LH    R0,&N_TARGET
         MSFI  R0,&NUM
         STH   R0,&N_TARGET
      AWHEN C'G'
         LG    R0,&N_TARGET
         MSGFI R0,&NUM
         STG   R0,&N_TARGET
      AWHEN C'P'
         :&LPNUM SETA (K'&NUM/2+3)/2*2 ROUNDED EVEN FOR LARL
         AIF (&LPNUM GT 16)
             :&LPNUM SETA 16
         AEND
         LARL  R14,=PL&LPNUM'&NUM'
         MP    &N_TARGET,0(&LPNUM,R14)
      AWHEN C'Q'
         LMG   R0,R1,&N_TARGET
         LARL  R14,=FL16'&NUM'
         LMG   R2,R3,0(R14)   
         L     R15,ZCVT_MPYQ128
         BASR  R14,R15
         STMG  R0,R1,&N_TARGET
      AWHEN C'Z'
         :&PLEN1 SETA &L_TARGET/2+1
         ZC_PACK31 ZCVT_PWORK1,&PLEN1,&N_TARGET,&L_TARGET
         :&LPNUM SETA (K'&NUM/2+3)/2*2 ROUNDED EVEN FOR LARL
         AIF (&LPNUM GT 16)
             :&LPNUM SETA 16
         AEND
         LARL  R14,=PL&LPNUM'&NUM'
         MP    ZCVT_PWORK1(&PLEN1),0(&LPNUM,R14)
         ZC_UNPK31 &N_TARGET,&L_TARGET,&S_TARGET,ZCVT_PWORK1,&PLEN1
      AELSE
         MNOTE 8,'GEN_MPY INVALID DATA TYPE FOR &N_TARGET'
      AEND
      AEND
.*
.* MPY_FLD
.*
         AENTRY MPY_FLD
         ACASE (C2A('&T_TARGET'))
         AWHEN C'1'                     MPY EH BY ?? 
               ACASE (C2A('&T_SOURCE'))
               AWHEN C'1'               MPY EH BY EH
         LE    F0,&N_SOURCE
               AWHEN C'2'               MPY EH BY DH
                 ZC_CONV EH,DH,&N_SOURCE
               AWHEN C'3'               MPY EH BY LH
                 ZC_CONV EH,LH,&N_SOURCE
               AWHEN C'4'               MPY EH BY EB
                 ZC_CONV EH,EB,&N_SOURCE
               AWHEN C'5'               MPY EH BY DB
                 ZC_CONV EH,DB,&N_SOURCE
               AWHEN C'6'               MPY EH BY LB
                 ZC_CONV EH,LB,&N_SOURCE
               AWHEN C'7'               MPY EH BY ED
                 ZC_CONV EH,ED,&N_SOURCE
               AWHEN C'8'               MPY EH BY DD
                 ZC_CONV EH,DD,&N_SOURCE
               AWHEN C'9'               MPY EH BY LD
                 ZC_CONV EH,LD,&N_SOURCE
               AWHEN C'F'               MPY EH BY F 
         L     R0,&N_SOURCE
         CEFR  F0,R0
               AWHEN C'G'               MPY EH BY G 
         LG    R0,&N_SOURCE
         CEGR  F0,R0
               AWHEN C'H'               MPY EH BY H 
         LH    R0,&N_SOURCE
         CEFR  F0,R0
               AWHEN C'P'               MPY EH BY P 
         ZAP   ZCVT_PWORK2,&N_SOURCE
         LMG   R0,R1,ZCVT_PWORK2
         CXSTR F4,R0
                 ZC_CONV  EH,LD
               AWHEN C'Q'               MPY EH BY Q 
                 ZC_CONV EH,Q,&N_SOURCE
               AWHEN C'Z'               MPY EH BY Z  
         LE    1,&N_TARGET
                 ZC_PACK31 ZCVT_PWORK2,16,&N_SOURCE,&L_SOURCE
         LMG   R0,R1,ZCVT_PWORK2
         CXSTR F4,R0
                 ZC_CONV  EH,LD
               AELSE
                    MNOTE 8,'GEN_MPY INVALID SOURCE DATA TYPE'           
                    MEXIT
               AEND 
         ME    F0,&N_TARGET
         STE   F0,&N_TARGET
         AWHEN C'2'                     MPY DH BY ??
               ACASE (C2A('&T_SOURCE'))
               AWHEN C'1'               MPY DH BY EH
                 ZC_CONV DH,EH,&N_SOURCE
               AWHEN C'2'               MPY DH BY DH
         LD    F0,&N_SOURCE
               AWHEN C'3'               MPY DH BY LH
                 ZC_CONV DH,LH,&N_SOURCE
               AWHEN C'4'               MPY DH BY EB
                 ZC_CONV DH,EB,&N_SOURCE
               AWHEN C'5'               MPY DH BY DB
                 ZC_CONV DH,DB,&N_SOURCE
               AWHEN C'6'               MPY DH BY LB
                 ZC_CONV DH,LB,&N_SOURCE
               AWHEN C'7'               MPY DH BY ED
                 ZC_CONV DH,ED,&N_SOURCE
               AWHEN C'8'               MPY DH BY DD
                 ZC_CONV DH,DD,&N_SOURCE
               AWHEN C'9'               MPY DH BY LD
                 ZC_CONV DH,LD,&N_SOURCE
               AWHEN C'F'               MPY DH BY F  
         L     R0,&N_SOURCE
         CDFR  F0,R0
               AWHEN C'G'               MPY DH BY G 
         LG    R0,&N_SOURCE
         CDGR  F0,R0
               AWHEN C'H'               MPY DH BY H 
         LH    R0,&N_SOURCE
         CDFR  F0,R0
               AWHEN C'P'               MPY DH BY P 
         ZAP   ZCVT_PWORK2,&N_SOURCE
         LMG   R0,R1,ZCVT_PWORK2
         CXSTR F4,R0
                 ZC_CONV  DH,LD
               AWHEN C'Q'               MPY DH BY Q 
                 ZC_CONV DH,Q,&N_SOURCE
               AWHEN C'Z'               MPY DH BY Z 
                 ZC_PACK31 ZCVT_PWORK2,16,&N_SOURCE,&L_SOURCE
         LMG   R0,R1,ZCVT_PWORK2
         CXSTR F4,R0
                 ZC_CONV DH,LD
               AELSE
                    MNOTE 8,'GEN_MPY INVALID SOURCE DATA TYPE'           
                    MEXIT
               AEND 
         MD    F0,&N_TARGET
         STD   F0,&N_TARGET
         AWHEN C'3'                     MPY LH BY ??
               ACASE (C2A('&T_SOURCE'))
               AWHEN C'1'               MPY LH BY EH
                 ZC_CONV LH,EH,&N_SOURCE
               AWHEN C'2'               MPY LH BY DH
                 ZC_CONV LH,DH,&N_SOURCE
               AWHEN C'3'               MPY LH BY LH
                 ZC_CONV LH,LH,&N_SOURCE
               AWHEN C'4'               MPY LH BY EB
                 ZC_CONV LH,EB,&N_SOURCE
               AWHEN C'5'               MPY LH BY DB
                 ZC_CONV LH,DB,&N_SOURCE
               AWHEN C'6'               MPY LH BY LB
                 ZC_CONV LH,LB,&N_SOURCE
               AWHEN C'7'               MPY LH BY ED
                 ZC_CONV LH,ED,&N_SOURCE
               AWHEN C'8'               MPY LH BY DD
                 ZC_CONV LH,DD,&N_SOURCE
               AWHEN C'9'               MPY LH BY LD
                 ZC_CONV LH,LD,&N_SOURCE
               AWHEN C'F'               MPY LH BY F  
         L     R0,&N_SOURCE
         CXFR  F0,R0
               AWHEN C'G'               MPY LH BY G 
         LG    R0,&N_SOURCE
         CXGR  F0,R0
               AWHEN C'H'               MPY LH BY H 
         LH    R0,&N_SOURCE
         CXFR  F0,R0
               AWHEN C'P'               MPY LH BY P 
         ZAP   ZCVT_PWORK2,&N_SOURCE
         LMG   R0,R1,ZCVT_PWORK2
         CXSTR F4,R0
                 ZC_CONV  LH,LD
               AWHEN C'Q'               MPY LH BY Q 
                 ZC_CONV LH,Q,&N_SOURCE
               AWHEN C'Z'               MPY LH BY Z 
                 ZC_PACK31 ZCVT_PWORK2,16,&N_SOURCE,&L_SOURCE
         LMG   R0,R1,ZCVT_PWORK2
         CXSTR F4,R0
                 ZC_CONV LH,LD
               AELSE
                    MNOTE 8,'GEN_MPY INVALID SOURCE DATA TYPE'           
                    MEXIT
               AEND 
         LD    F1,&N_TARGET
         LD    F3,8+&N_TARGET
         MXR   F0,F1
         STD   F0,&N_TARGET
         STD   F2,8+&N_TARGET
         AWHEN C'4'                     MPY EB BY ?? 
               ACASE (C2A('&T_SOURCE'))
               AWHEN C'1'               MPY EB BY EH
                 ZC_CONV EB,EH,&N_SOURCE
               AWHEN C'2'               MPY EB BY DH
                 ZC_CONV EB,DH,&N_SOURCE
               AWHEN C'3'               MPY EB BY LH
                 ZC_CONV EB,LH,&N_SOURCE
               AWHEN C'4'               MPY EB BY EB
                 ZC_CONV EB,EB,&N_SOURCE
               AWHEN C'5'               MPY EB BY DB
                 ZC_CONV EB,DB,&N_SOURCE
               AWHEN C'6'               MPY EB BY LB
                 ZC_CONV EB,LB,&N_SOURCE
               AWHEN C'7'               MPY EB BY ED
                 ZC_CONV EB,ED,&N_SOURCE
               AWHEN C'8'               MPY EB BY DD
                 ZC_CONV EB,DD,&N_SOURCE
               AWHEN C'9'               MPY EB BY LD
                 ZC_CONV EB,LD,&N_SOURCE
               AWHEN C'F'               MPY EB BY F 
         L     R0,&N_SOURCE
         CEFBR F0,R0
               AWHEN C'G'               MPY EB BY G 
         LG    R0,&N_SOURCE
         CEGBR F0,R0
               AWHEN C'H'               MPY EB BY H 
         LH    R0,&N_SOURCE
         CEFBR F0,R0
               AWHEN C'P'               MPY EB BY P 
         ZAP   ZCVT_PWORK2,&N_SOURCE
         LMG   R0,R1,ZCVT_PWORK2
         CXSTR F4,R0
                 ZC_CONV  EB,LD
               AWHEN C'Q'               MPY EB BY Q 
                 ZC_CONV EB,Q,&N_SOURCE
               AWHEN C'Z'               MPY EB BY Z  
         LE    1,&N_TARGET
                 ZC_PACK31 ZCVT_PWORK2,16,&N_SOURCE,&L_SOURCE
         LMG   R0,R1,ZCVT_PWORK2
         CXSTR F4,R0
                 ZC_CONV  EB,LD
               AELSE
                    MNOTE 8,'GEN_MPY INVALID SOURCE DATA TYPE'           
                    MEXIT
               AEND 
         LE    F1,&N_TARGET
         MEEBR F0,F1
         STE   F0,&N_TARGET
         AWHEN C'5'                     MPY DB BY ??
               ACASE (C2A('&T_SOURCE'))
               AWHEN C'1'               MPY DB BY EH
                 ZC_CONV DB,EH,&N_SOURCE
               AWHEN C'2'               MPY DB BY DH
                 ZC_CONV DB,DH,&N_SOURCE
               AWHEN C'3'               MPY DB BY LH
                 ZC_CONV DB,LH,&N_SOURCE
               AWHEN C'4'               MPY DB BY EB
                 ZC_CONV DB,EB,&N_SOURCE
               AWHEN C'5'               MPY DB BY DB
                 ZC_CONV DB,DB,&N_SOURCE
               AWHEN C'6'               MPY DB BY LB
                 ZC_CONV DB,LB,&N_SOURCE
               AWHEN C'7'               MPY DB BY ED
                 ZC_CONV DB,ED,&N_SOURCE
               AWHEN C'8'               MPY DB BY DD
                 ZC_CONV DB,DD,&N_SOURCE
               AWHEN C'9'               MPY DB BY LD
                 ZC_CONV DB,LD,&N_SOURCE
               AWHEN C'F'               MPY DB BY F  
         L     R0,&N_SOURCE
         CDFBR F0,R0
               AWHEN C'G'               MPY DB BY G 
         LG    R0,&N_SOURCE
         CDGBR F0,R0
               AWHEN C'H'               MPY DB BY H 
         LH    R0,&N_SOURCE
         CDFBR F0,R0
               AWHEN C'P'               MPY DB BY P 
         ZAP   ZCVT_PWORK2,&N_SOURCE
         LMG   R0,R1,ZCVT_PWORK2
         CXSTR F4,R0
                 ZC_CONV  DB,LD
               AWHEN C'Q'               MPY DB BY Q 
                 ZC_CONV DB,Q,&N_SOURCE
               AWHEN C'Z'               MPY DB BY Z 
                 ZC_PACK31 ZCVT_PWORK2,16,&N_SOURCE,&L_SOURCE
         LMG   R0,R1,ZCVT_PWORK2
         CXSTR F4,R0
                 ZC_CONV DB,LD
               AELSE
                    MNOTE 8,'GEN_MPY INVALID SOURCE DATA TYPE'           
                    MEXIT
               AEND 
         MDB   F0,&N_TARGET
         STD   F0,&N_TARGET
         AWHEN C'6'                     MPY LB BY ??
               ACASE (C2A('&T_SOURCE'))
               AWHEN C'1'               MPY LB BY EH
                 ZC_CONV LB,EH,&N_SOURCE
               AWHEN C'2'               MPY LB BY DH
                 ZC_CONV LB,DH,&N_SOURCE
               AWHEN C'3'               MPY LB BY LH
                 ZC_CONV LB,LH,&N_SOURCE
               AWHEN C'4'               MPY LB BY EB
                 ZC_CONV LB,EB,&N_SOURCE
               AWHEN C'5'               MPY LB BY DB
                 ZC_CONV LB,DB,&N_SOURCE
               AWHEN C'6'               MPY LB BY LB
                 ZC_CONV LB,LB,&N_SOURCE
               AWHEN C'7'               MPY LB BY ED
                 ZC_CONV LB,ED,&N_SOURCE
               AWHEN C'8'               MPY LB BY DD
                 ZC_CONV LB,DD,&N_SOURCE
               AWHEN C'9'               MPY LB BY LD
                 ZC_CONV LB,LD,&N_SOURCE
               AWHEN C'F'               MPY LB BY F  
         L     R0,&N_SOURCE
         CXFBR F0,R0
               AWHEN C'G'               MPY LB BY G 
         LG    R0,&N_SOURCE
         CXGBR F0,R0
               AWHEN C'H'               MPY LB BY H 
         LH    R0,&N_SOURCE
         CXFBR F0,R0
               AWHEN C'P'               MPY LB BY P 
         ZAP   ZCVT_PWORK2,&N_SOURCE
         LMG   R0,R1,ZCVT_PWORK2
         CXSTR F4,R0
                 ZC_CONV  LB,LD
               AWHEN C'Q'               MPY LB BY Q 
                 ZC_CONV LB,Q,&N_SOURCE
               AWHEN C'Z'               MPY LB BY Z 
                 ZC_PACK31 ZCVT_PWORK2,16,&N_SOURCE,&L_SOURCE
         LMG   R0,R1,ZCVT_PWORK2
         CXSTR F4,R0
                 ZC_CONV LB,LD
               AELSE
                    MNOTE 8,'GEN_MPY INVALID SOURCE DATA TYPE'           
                    MEXIT
               AEND 
         LD    F1,&N_TARGET
         LD    F3,8+&N_TARGET
         MXBR  F0,F1
         STD   F0,&N_TARGET
         STD   F2,8+&N_TARGET
         AWHEN C'7'                     MPY ED BY ?? 
               ACASE (C2A('&T_SOURCE'))
               AWHEN C'1'               MPY ED BY EH
                 ZC_CONV DD,DH,&N_SOURCE
               AWHEN C'2'               MPY ED BY DH
                 ZC_CONV DD,DH,&N_SOURCE
               AWHEN C'3'               MPY ED BY LH
                 ZC_CONV DD,LH,&N_SOURCE
               AWHEN C'4'               MPY ED BY EB
                 ZC_CONV DD,EB,&N_SOURCE
               AWHEN C'5'               MPY ED BY DB
                 ZC_CONV DD,DB,&N_SOURCE
               AWHEN C'6'               MPY ED BY LB
                 ZC_CONV DD,LB,&N_SOURCE
               AWHEN C'7'               MPY ED BY ED
                 ZC_CONV DD,ED,&N_SOURCE
               AWHEN C'8'               MPY ED BY DD
                 ZC_CONV DD,DD,&N_SOURCE
               AWHEN C'9'               MPY ED BY LD
                 ZC_CONV DD,LD,&N_SOURCE
               AWHEN C'F'               MPY ED BY F 
         LGF   R0,&N_SOURCE
         CDGTR F0,R0
               AWHEN C'G'               MPY ED BY G 
         LG    R0,&N_SOURCE
         CDGTR F0,R0
               AWHEN C'H'               MPY ED BY H 
         LGH   R0,&N_SOURCE
         CDGTR F0,R0
               AWHEN C'P'               MPY ED BY P 
         ZAP   ZCVT_PWORK2,&N_SOURCE
         LMG   R0,R1,ZCVT_PWORK2
         CXSTR F4,R0
                 ZC_CONV  DD,LD
               AWHEN C'Q'               MPY ED BY Q 
                 ZC_CONV DD,Q,&N_SOURCE
               AWHEN C'Z'               MPY ED BY Z  
         LE    1,&N_TARGET
                 ZC_PACK31 ZCVT_PWORK2,16,&N_SOURCE,&L_SOURCE
         LMG   R0,R1,ZCVT_PWORK2
         CXSTR F4,R0
                 ZC_CONV  DD,LD
               AELSE
                    MNOTE 8,'GEN_MPY INVALID SOURCE DATA TYPE'           
                    MEXIT
               AEND 
         LE    F1,&N_TARGET
         LDETR F1,F1,0
         MDTR  F0,F0,F1
         LEDTR F0,0,F0,0
         STE   F0,&N_TARGET
         AWHEN C'8'                     MPY DD BY ??
               ACASE (C2A('&T_SOURCE'))
               AWHEN C'1'               MPY DD BY EH
                 ZC_CONV DD,EH,&N_SOURCE
               AWHEN C'2'               MPY DD BY DH
                 ZC_CONV DD,DH,&N_SOURCE
               AWHEN C'3'               MPY DD BY LH
                 ZC_CONV DD,LH,&N_SOURCE
               AWHEN C'4'               MPY DD BY EB
                 ZC_CONV DD,EB,&N_SOURCE
               AWHEN C'5'               MPY DD BY DB
                 ZC_CONV DD,DB,&N_SOURCE
               AWHEN C'6'               MPY DD BY LB
                 ZC_CONV DD,LB,&N_SOURCE
               AWHEN C'7'               MPY DD BY ED
                 ZC_CONV DD,ED,&N_SOURCE
               AWHEN C'8'               MPY DD BY DD
                 ZC_CONV DD,DD,&N_SOURCE
               AWHEN C'9'               MPY DD BY LD
                 ZC_CONV DD,LD,&N_SOURCE
               AWHEN C'F'               MPY DD BY F  
         LGF   R0,&N_SOURCE
         CDGTR F0,R0
               AWHEN C'G'               MPY DD BY G 
         LG    R0,&N_SOURCE
         CDGTR F0,R0
               AWHEN C'H'               MPY DD BY H 
         LGH   R0,&N_SOURCE
         CDGTR F0,R0
               AWHEN C'P'               MPY DD BY P 
         ZAP   ZCVT_PWORK2,&N_SOURCE
         LMG   R0,R1,ZCVT_PWORK2
         CXSTR F4,R0
                 ZC_CONV  DD,LD
               AWHEN C'Q'               MPY DD BY Q 
                 ZC_CONV DD,Q,&N_SOURCE
               AWHEN C'Z'               MPY DD BY Z 
                 ZC_PACK31 ZCVT_PWORK2,16,&N_SOURCE,&L_SOURCE
         LMG   R0,R1,ZCVT_PWORK2
         CXSTR F4,R0
                 ZC_CONV DD,LD
               AELSE
                    MNOTE 8,'GEN_MPY INVALID SOURCE DATA TYPE'           
                    MEXIT
               AEND 
         LD    F1,&N_TARGET
         MDTR  F0,F0,F1
         STD   F0,&N_TARGET
         AWHEN C'9'                     MPY LD BY ??
               ACASE (C2A('&T_SOURCE'))
               AWHEN C'1'               MPY LD BY EH
                 ZC_CONV LD,EH,&N_SOURCE
               AWHEN C'2'               MPY LD BY DH
                 ZC_CONV LD,DH,&N_SOURCE
               AWHEN C'3'               MPY LD BY LH
                 ZC_CONV LD,LH,&N_SOURCE
               AWHEN C'4'               MPY LD BY EB
                 ZC_CONV LD,EB,&N_SOURCE
               AWHEN C'5'               MPY LD BY DB
                 ZC_CONV LD,DB,&N_SOURCE
               AWHEN C'6'               MPY LD BY LB
                 ZC_CONV LD,LB,&N_SOURCE
               AWHEN C'7'               MPY LD BY ED
                 ZC_CONV LD,ED,&N_SOURCE
               AWHEN C'8'               MPY LD BY DD
                 ZC_CONV LD,DD,&N_SOURCE
               AWHEN C'9'               MPY LD BY LD
                 ZC_CONV LD,LD,&N_SOURCE
               AWHEN C'F'               MPY LD BY F  
         LGF   R0,&N_SOURCE
         CXGTR F0,R0
               AWHEN C'G'               MPY LD BY G 
         LG    R0,&N_SOURCE
         CXGTR F0,R0
               AWHEN C'H'               MPY LD BY H 
         LGH   R0,&N_SOURCE
         CXGTR F0,R0
               AWHEN C'P'               MPY LD BY P 
         ZAP   ZCVT_PWORK2,&N_SOURCE
         LMG   R0,R1,ZCVT_PWORK2
         CXSTR F4,R0
                 ZC_CONV  LD,LD
               AWHEN C'Q'               MPY LD BY Q 
                 ZC_CONV LD,Q,&N_SOURCE
               AWHEN C'Z'               MPY LD BY Z 
                 ZC_PACK31 ZCVT_PWORK2,16,&N_SOURCE,&L_SOURCE
         LMG   R0,R1,ZCVT_PWORK2
         CXSTR F4,R0
                 ZC_CONV LD,LD
               AELSE
                    MNOTE 8,'GEN_MPY INVALID SOURCE DATA TYPE'           
                    MEXIT
               AEND 
         LD    F1,&N_TARGET
         LD    F3,8+&N_TARGET
         MXTR  F0,F0,F1
         STD   F0,&N_TARGET
         STD   F2,8+&N_TARGET
         AWHEN C'F'                     MPY F  BY ??
               ACASE (C2A('&T_SOURCE'))
               AWHEN C'1'
                 ZC_CONV Q,EH,&N_SOURCE
               AWHEN C'2'
                 ZC_CONV Q,DH,&N_SOURCE
               AWHEN C'3'
                 ZC_CONV Q,LH,&N_SOURCE
               AWHEN C'4'
                 ZC_CONV Q,EB,&N_SOURCE
               AWHEN C'5'
                 ZC_CONV Q,DB,&N_SOURCE
               AWHEN C'6'
                 ZC_CONV Q,LB,&N_SOURCE
               AWHEN C'7'
                 ZC_CONV Q,ED,&N_SOURCE
               AWHEN C'8'
                 ZC_CONV Q,DD,&N_SOURCE
               AWHEN C'9'
                 ZC_CONV Q,LD,&N_SOURCE
               AWHEN C'F'
         L     R1,&N_SOURCE
               AWHEN C'G'
         LG    R1,&N_SOURCE
               AWHEN C'H'
         LH    R1,&N_SOURCE
               AWHEN C'P'
         L     0,&N_SOURCE
         ZAP   ZCVT_PWORK,&N_SOURCE
         CVB   R1,ZCVT_PWORK
               AWHEN C'Q'
         L     R1,12+&N_SOURCE  IGNORE HIGH 96
               AWHEN C'Z'
                 ZC_PACK31 ZCVT_PWORK1,16,&N_SOURCE,&L_SOURCE
         LMG   R0,R1,ZCVT_PWORK1
         CXSTR F4,R0
                 ZC_CONV Q,LD
               AELSE
                    MNOTE 8,'GEN_MPY INVALID SOURCE DATA TYPE'           
                    MEXIT
               AEND 
         MS    R1,&N_TARGET IGNORE HIGH 96 OF Q IN R0-R1
         ST    R1,&N_TARGET
         AWHEN C'G'                     MPY G  BY ??
               ACASE (C2A('&T_SOURCE'))
               AWHEN C'1'
                 ZC_CONV Q,EH,&N_SOURCE
               AWHEN C'2'
                 ZC_CONV Q,DH,&N_SOURCE
               AWHEN C'3'
                 ZC_CONV Q,LH,&N_SOURCE
               AWHEN C'4'
                 ZC_CONV Q,EB,&N_SOURCE
               AWHEN C'5'
                 ZC_CONV Q,DB,&N_SOURCE
               AWHEN C'6'
                 ZC_CONV Q,LB,&N_SOURCE
               AWHEN C'7'
                 ZC_CONV Q,ED,&N_SOURCE
               AWHEN C'8'
                 ZC_CONV Q,DD,&N_SOURCE
               AWHEN C'9'
                 ZC_CONV Q,LD,&N_SOURCE
               AWHEN C'F'
         LGF   R1,&N_SOURCE
               AWHEN C'G'
         LG    R1,&N_SOURCE
               AWHEN C'H'
         LGH   R1,&N_SOURCE
               AWHEN C'P'
         ZAP   ZCVT_PWORK2,&N_SOURCE
         CVBG  R1,ZCVT_PWORK2
               AWHEN C'Q'
         LG    R1,8+&N_SOURCE   IGNORE HIGH 112 BITS
               AWHEN C'Z'
                  ZC_PACK31 ZCVT_PWORK2,16,&N_SOURCE,&L_SOURCE
         LMG   R0,R1,ZCVT_PWORK2
         CXSTR F4,R0
                  ZC_CONV Q,LD
               AELSE
                    MNOTE 8,'GEN_MPY INVALID SOURCE DATA TYPE'           
                    MEXIT
               AEND 
         MSG   R1,&N_TARGET IGNORE HIGH 64 OF Q IN R0-R1
         STG   R1,&N_TARGET
         AWHEN C'H'                     MPY H  BY ??
               ACASE (C2A('&T_SOURCE'))
               AWHEN C'1'
                 ZC_CONV Q,EH,&N_SOURCE
               AWHEN C'2'
                 ZC_CONV Q,DH,&N_SOURCE
               AWHEN C'3'
                 ZC_CONV Q,LH,&N_SOURCE
               AWHEN C'4'
                 ZC_CONV Q,EB,&N_SOURCE
               AWHEN C'5'
                 ZC_CONV Q,DB,&N_SOURCE
               AWHEN C'6'
                 ZC_CONV Q,LB,&N_SOURCE
               AWHEN C'7'
                 ZC_CONV Q,ED,&N_SOURCE
               AWHEN C'8'
                 ZC_CONV Q,DD,&N_SOURCE
               AWHEN C'9'
                 ZC_CONV Q,LD,&N_SOURCE
               AWHEN C'F'
         L     R1,&N_SOURCE
               AWHEN C'G'
         LG    R1,&N_SOURCE
               AWHEN C'H'
         LH    R1,&N_SOURCE
               AWHEN C'P'
         ZAP   ZCVT_PWORK,&N_SOURCE
         CVB   1,ZCVT_PWORK
               AWHEN C'Q'
         LH    R1,14+&N_SOURCE   IGNORE HIGH 112 BITS
               AWHEN C'Z'
                  ZC_PACK31 ZCVT_PWORK2,16,&N_SOURCE,&L_SOURCE
         LMG   R0,R1,ZCVT_PWORK2
         CXSTR F4,R0
                  ZC_CONV Q,LD
               AELSE
                    MNOTE 8,'GEN_MPY INVALID SOURCE DATA TYPE'           
                    MEXIT
               AEND 
         LH    R2,&N_TARGET 
         MSR   R1,R2           IGNORE HIGH 96 OF Q IN R0-R1
         STH   R1,&N_TARGET
         AWHEN C'P'                     MPY P  BY ??
               ACASE (C2A('&T_SOURCE'))
               AWHEN C'1'
                 ZC_CONV P,EH,&N_SOURCE
         STMG  R0,R1,ZCVT_PWORK2
         MP    &N_TARGET,ZCVT_PWORK2
               AWHEN C'2'
                 ZC_CONV P,DH,&N_SOURCE
         STMG  R0,R1,ZCVT_PWORK2
         MP    &N_TARGET,ZCVT_PWORK2
               AWHEN C'3'
                 ZC_CONV P,LH,&N_SOURCE
         STMG  R0,R1,ZCVT_PWORK2
         MP    &N_TARGET,ZCVT_PWORK2
               AWHEN C'4'
                 ZC_CONV P,EB,&N_SOURCE
         STMG  R0,R1,ZCVT_PWORK2
         MP    &N_TARGET,ZCVT_PWORK2
               AWHEN C'5'
                 ZC_CONV P,DB,&N_SOURCE
         STMG  R0,R1,ZCVT_PWORK2
         MP    &N_TARGET,ZCVT_PWORK2
               AWHEN C'6'
                 ZC_CONV P,LB,&N_SOURCE
         STMG  R0,R1,ZCVT_PWORK2
         MP    &N_TARGET,ZCVT_PWORK2
               AWHEN C'7'
                 ZC_CONV P,ED,&N_SOURCE
         STMG  R0,R1,ZCVT_PWORK2
         MP    &N_TARGET,ZCVT_PWORK2
               AWHEN C'8'
                 ZC_CONV P,DD,&N_SOURCE
         STMG  R0,R1,ZCVT_PWORK2
         MP    &N_TARGET,ZCVT_PWORK2
               AWHEN C'9'
                 ZC_CONV P,LD,&N_SOURCE
         STMG  R0,R1,ZCVT_PWORK2
         MP    &N_TARGET,ZCVT_PWORK2
               AWHEN C'F'
         L     0,&N_SOURCE
         CVD   0,ZCVT_PWORK
         MP    &N_TARGET,ZCVT_PWORK
               AWHEN C'G'
         LG    0,&N_SOURCE
         CVDG  0,ZCVT_PWORK1
         MP    &N_TARGET,ZCVT_PWORK1
               AWHEN C'H'
         LH    0,&N_SOURCE
         CVD   0,ZCVT_PWORK
         MP    &N_TARGET,ZCVT_PWORK
               AWHEN C'P'
         MP    &N_TARGET,&N_SOURCE
               AWHEN C'Q'                            
         LMG   0,1,&N_SOURCE
                  ZC_CONV P,Q
         STMG  R0,R1,CVT_PWORK2
         MP    &N_TARGET,ZCVT_PWORK2
               AWHEN C'Z'
                  ZC_PACK31 ZCVT_PWORK2,16,&N_SOURCE,&L_SOURCE
         MP    &N_TARGET,ZCVT_PWORK2
               AELSE
                    MNOTE 8,'GEN_MPY INVALID SOURCE TYPE'           
                    MEXIT
               AEND 
         AWHEN C'Q'                     MPY Q  BY ??
               ACASE (C2A('&T_SOURCE'))
               AWHEN C'1'
                 ZC_CONV Q,EH,&N_SOURCE
               AWHEN C'2'
                 ZC_CONV Q,DH,&N_SOURCE
               AWHEN C'3'
                 ZC_CONV Q,LH,&N_SOURCE
               AWHEN C'4'
                 ZC_CONV Q,EB,&N_SOURCE
               AWHEN C'5'
                 ZC_CONV Q,DB,&N_SOURCE
               AWHEN C'6'
                 ZC_CONV Q,LB,&N_SOURCE
               AWHEN C'7'
                 ZC_CONV Q,ED,&N_SOURCE
               AWHEN C'8'
                 ZC_CONV Q,DD,&N_SOURCE
               AWHEN C'9'
                 ZC_CONV Q,LD,&N_SOURCE
               AWHEN C'F'
         LGF   R1,&N_SOURCE
         LGR   R0,R1
         SRAG  R0,R0,63
               AWHEN C'G'
         LG    R1,&N_SOURCE
         LGR   R0,R1
         SRAG  R0,R0,63
               AWHEN C'H'
         LGH   R1,&N_SOURCE
         LGR   R0,R1
         SRAG  R0,R0,63
               AWHEN C'P'
         ZAP   ZCVT_PWORK2,&N_SOURCE
         LMG   R0,R1,ZCVT_PWORK2
         CXSTR F4,R0
                 ZC_CONV Q,LD
               AWHEN C'Q'
         LMG   R0,R1,&N_SOURCE
               AWHEN C'Z'
                  ZC_PACK31 ZCVT_PWORK2,16,&N_SOURCE,&L_SOURCE
         LMG   R0,R1,ZCVT_PWORK2
         CXSTR F4,R0
                  ZC_CONV Q,LD
               AELSE
                    MNOTE 8,'GEN_MPY INVALID SOURCE DATA TYPE'           
                    MEXIT
               AEND 
         LMG   R2,R3,&N_TARGET
         L     R15,ZCVT_MPYQ128
         BASR  R14,R15
         STMG  R0,R1,&N_TARGET
         AWHEN C'Z'                     MPY Z  BY ??
               ACASE (C2A('&T_SOURCE'))
               AWHEN C'1'
                 ZC_CONV Q,EH,&N_SOURCE
               AWHEN C'2'
                 ZC_CONV Q,DH,&N_SOURCE
               AWHEN C'3'
                 ZC_CONV Q,LH,&N_SOURCE
               AWHEN C'4'
                 ZC_CONV Q,EB,&N_SOURCE
               AWHEN C'5'
                 ZC_CONV Q,DB,&N_SOURCE
               AWHEN C'6'
                 ZC_CONV Q,LB,&N_SOURCE
               AWHEN C'7'
                 ZC_CONV Q,ED,&N_SOURCE
               AWHEN C'8'
                 ZC_CONV Q,DD,&N_SOURCE
               AWHEN C'9'
                 ZC_CONV Q,LD,&N_SOURCE
               AWHEN C'F'
         LGF   R1,&N_SOURCE
         LGR   R0,R1
         SRAG  R0,R0,63
               AWHEN C'G'
         LG    R1,&N_SOURCE
         LGR   R0,R1
         SRAG  R0,R0,63
               AWHEN C'H'
         LGH   R1,&N_SOURCE
         LGR   R0,R1
         SRAG  R0,R0,63
               AWHEN C'P'
         ZAP   ZCVT_PWORK2,&N_SOURCE 
         LMG   R0,R1,ZCVT_PWORK2
         CXSTR F4,R0
                 ZC_CONV Q,LD
               AWHEN C'Z'
                 ZC_PACK31 ZCVT_PWORK2,16,&N_SOURCE,&L_SOURCE
         LMG   R0,R1,ZCVT_PWORK2
         CXSTR F4,R0
                 ZC_CONV Q,LD
               AELSE
                    MNOTE 8,'GEN_MPY INVALID SOURCE DATA TYPE'           
                    MEXIT
               AEND 
         LGR   R2,R0           R2-R3 = QS SOURCE
         LGR   R3,R1
               ZC_PACK31 ZCVT_PWORK1,16,&N_TARGET,&L_TARGET
         LMG   R0,R1,ZCVT_PWORK1
         CXSTR F4,R0
                 ZC_CONV Q,LD R0-R1 = QT TARGET
         L     R15,ZCVT_MPYQ128
         BASR  R14,R15                MPY QT = QT * QS
                 ZC_CONV P,Q         CVT TO LD
         STMG  R0,R1,ZCVT_PWORK1
               ZC_UNPK31 &N_TARGET,&L_TARGET,&S_TARGET,ZCVT_PWORK1,16
         AELSE
               MNOTE 8,'GEN_MPY INVALID TARGET DATA TYPE'           
               MEXIT
         AEND
         AEND
         MEND
