Comparing files RT\TEST\zstrmac2.mlc and RT\TEST\ZSTRMAC2.TXT
Resync Failed.  Files are too different.
***** RT\TEST\zstrmac2.mlc
*********************************************************************
* Copyright 2008 Automated Software Tools Corporation               *
* This source code is part of z390 assembler/emulator package       *
* The z390 package is distributed under GNU general public license  *
* Author - Don Higgins                                              *
* Date   - 08/13/08                                                 *
*********************************************************************
* 08/13/22 RPI 896 TRANSLATE Z390 ZSTRMAC EXTENSIONS TO STD HLASM
*          1.  HLASM BOOTSTRAP    - RT\TEST\ZSTRMAC1.MLC
*          1.  STRUCTURED VERSION - LINKLIB\ZSTRMAC.ZSM
*          2.  HLASM VERSION      - LINKLIB\ZSTRMAC.MLC VIA ZSTRMAC1
*********************************************************************
* ZSTRMAC READS SYSUT1 SOURCE FILE AND OUTPUTS SYSUT2 SOURCE FILE
* WITH TRANSLATION OF FOLLOWING Z390 ZSTRMAC EXTENSIONS TO STD HLASM:
*  1. AIF (EXP)     >   AIF (NOT(EXP)).AIF_N
*  2. AELSEIF (EXP) >   AGO .AIF_N+1
*                   > .AIF_N AIF (EXP).AIF_N+1
*  3. AELSE         >   AGO .AIF_N+2
*                   > .AIF_N+1 ANOP
*  4. AEND          > .AIF_N+2 ANOP
*  5. APM NAME      > &APM_NAME SETA N
*                   >   AGO .APM_NAME
*                   > .APM_NAME_N ANOP
*  6. AENTRY NAME   > .APM_NAME ANOP
*  7. AEXIT         >   AGO .APM_NAME_END    (EXIT NON AIF STRUCURE)
*     AEND          >   .APM_NAME_END AGO (&APM_NAME),.APM_NAME_1,,
*                                                     .APM_NAME_N
*  8. AWHILE (EXP)  > .AWHILE_N_TEST AIF (NOT(EXP)).AWHILE_N_EXIT
*     AEND          >   AGO .AWHILE_N_TEST
*                   > .AWHILE_N_EXIT ANOP
*  9. AUNTIL (EXP)  >   AGO .AUNTIL_N
*                   > .AUNTIL_N_TEST AIF (EXP).AUNTIL_N_EXIT
*                   > .AUNTIL_N ANOP
*     AEND          >   AGO .AUNTIL_N_TEST
*                   > .AUNTIL_N_EXIT ANOP
* 10. ASELECT (EXP) >   AGO .ASELECT_N_AGO
* 11. AWHEN V1      > .AWHEN_N_V1 ANOP
*     AWHEN V2      >   AGO .ASELECT_N_EXIT
*                   > .AWHEN_N_V2 ANOP
*     AELSE         >   AGO .ASELECT_N_EXIT
*                     .ASELECT_N_ELSE ANOP
*     AEND          >   AGO .ASELECT_N_EXIT
*                   > .ASELECT_N_AGO AGO (EXP),.AWHEN_N_V1,.AWHEN_N_V2
*                   >   AGO .ASELECT_N_ELSE
*                   > .ASELECT_N_EXIT ANOP
* 12. :LAB STMT     > place LAB in label fired and start STMT at :
*
* NOTES:
*  1. THE ORIGINAL BOOTSTRAP VERSION IS IN RT\TEST\ZSTRMAC1.MLC
*     ALONG WITH THE FIRST TEST PROGRAM TESTZSM1.ZSM WHICH IS
*     TRANSLATED TO TESTZSM1.MLC USING ZSTRMAC1.MLC.
*  2. TO RUN TRANSLATOR USING HLASM:
*     A.  REMOVE DDNAME= EXTENSIONS FROM AREAD AND PUNCH
*     B.  PLACE INPUT SOURCE AFTER PROGRAM SOURCE IN SYSIN.
*     C.  CHANGE EOF LOGIC TO CHECK FOR EOF RECORD SUCH AS "END"
*********************************************************************
         MACRO
         ZSTRMAC
         LCLA  &ERRORS        TOTAL ERROR MESSAGES
         LCLA  &AEND_TOT,&AENTRY_TOT,&AEXIT_TOT,&AIF_TOT,&APM_TOT
         LCLA  &ASELECT_TOT,&AUNTIL_TOT,&AWHEN_TOT,&AWHILE_TOT
         LCLC  &TEXT          LINE OF TEXT READ BY READ_TEXT
         LCLB  &EOF           END OF FILE
         LCLA  &LINES         TOTAL INPUT LINES
         LCLB  &GEN_AIF_ERR   SYNTAX ERROR IN GEN_AIF
         LCLB  &FIND_NAME_ERR SYNTAX ERROR FINDING APM/AENTRY NAME
         LCLB  &FIND_PARM_ERR SYNTAX ERROR FINDING FIRST PARM
         LCLB  &FIND_EXP_ERR  SYNTAX ERROR FINDING (..) FOR AIF/ASELECT
         LCLA  &LVL           CURRENT LEVEL OF STRUCTURE
         LCLC  &LVL_TYPE(50) TYPE AIF/ASELECT/AENTRY
         LCLA  &LVL_TCNT(50) TYPE INSTANCE COUNTER
         LCLB  &LVL_TEND(50) TYPE END LABEL REQ FOR MULT BLKS
         LCLA  &LVL_BCNT(50) BLOCK COUNTER WITHIN TYPE INSTANCE
         LCLC  &LVL_ASELECT(50) ASELECT COMPUTED AGO STATEMENT
         LCLA  &LVL_ASELECT_FIRST(50) ASELECT FIRST WHEN VALUE 0-255
         LCLA  &LVL_ASELECT_LAST(50)  ASELECT LAST  WHEN VALUE 0-255
         LCLB  &LVL_AWHEN(50)   AWHEN BLOCK DEFINED FOR ASELECT
         LCLB  &LVL_AELSE(50)   AELSE BLOCK DEFINED FOR ASELECT
         LCLA  &IS_OP           START OF OPCODE
         LCLA  &IS_OP_END       ENDOF OF OPCODE+1
         LCLA  &IS_EXP          START OF AIF EXP (...)
         LCLA  &APM_INDEX       INDEX TO APM/AENTRY NAME VIA FIND_NAME
         LCLA  &APM_NAME_TOT    TOTAL PERFORMED ROUTINES
         LCLC  &APM_NAME(100)   NAMES OF PERFORMED ROUTINES
         LCLA  &APM_CNT(100)    EXIT COUNT FOR ROUTINES
         LCLB  &APM_DEF(100)    FLAG FOR DUP AND MISSING ERRORS
.*
.* READ SYUT1 AND OUTPUT SYSUT2 WITH STRUCTURED MACRO CODE
.*
.*       APM   READ_REC
&APM_READ_REC SETA    1
           AGO   .APM_READ_REC
.APM_READ_REC_1 ANOP
.*       AWHILE (NOT &EOF)
.AWHILE_1_TEST ANOP
.*         AIF    (NOT(NOT &EOF)).AWHILE_1_END
             AIF    (NOT(NOT(NOT &EOF))).AIF_1_1 .AWHILE_1_END
.*             APM PROC_REC
&APM_PROC_REC    SETA    1
                 AGO   .APM_PROC_REC
***** RT\TEST\ZSTRMAC2.TXT
ZSTRMAC ERROR INVALID CONTINUATION
ZSTRMAC ERROR AWHEN MISSING ASELECT
*****

