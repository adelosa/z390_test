*/********************************************************************* 00001000
*    :module                                                          * 00002000
*       CEEXSTCH - Internal macro to convert a character suboption of * 00003000
*                    the STORAGE option to a DC instruction operand   * 00004000
*                    (invoked in CEEXOPT)                             * 00005000
*    :emodule                                                         * 00006000
*                                                                     * 00007000
*    :security                                                        * 00008000
*                                                                     * 00009000
*      Licensed Materials - Property of IBM                           * 00010000
*                                                                     * 00011000
*      5686-094  (C) Copyright IBM Corp. 1991,  1996                  * 00012000
*      All Rights Reserved.                                           * 00013000
*                                                                     * 00014000
*                                                                     * 00015000
*       US Government Users Restricted Rights - Use, duplication or   * 00016000
*       disclosure restricted by GSA ADP Schedule Contract with IBM   * 00017000
*       Corp.                                                         * 00018000
*                                                                     * 00019000
*    :esecurity                                                       * 00020000
*                                                                     * 00021000
*    :status                                                          * 00022000
*       LE/VSE Version 1 Release 4 Modification 0                     * 00023000
*    :estatus                                                         * 00024000
*                                                                     * 00025000
*    :function                                                        * 00026000
*       Nested macro CEEXSTCH, used to convert a character suboption  * 00027000
*       of the STORAGE option to a character string equivalent suit-  * 00028000
*       able as the operand of a DC instruction, has two positional   * 00029000
*       parameter inputs, assumed to be non-null:                     * 00030000
*             &CHR    : the character suboption, which should be in   * 00031000
*                       one of the forms                              * 00032000
*                              'A' | "A" | C1 | NONE                  * 00033000
*                       where C1 represents two hex digits (X'C1' is  * 00034000
*                       the hex equivalent of 'A'), and NONE indi-    * 00035000
*                       cates that the corresponding storage is not   * 00036000
*                       to be set to any value                        * 00037000
*             &NUM    : decimal digit indicating which of the STORAGE * 00038000
*                       character suboptions is being processed       * 00039000
*                       (currently supported: 1 = heap allocation     * 00040000
*                       value, 2 = heap free value, 3 = DSA alloca-   * 00041000
*                       tion value)                                   * 00042000
*       The three global outputs produced are:                        * 00043000
*             &STORVAL: the resulting DC operand, e.g., C'a', X'00'   * 00044000
*             &SETBITS: additive flag indicating which of the STORAGE * 00045000
*                       character suboptions have been set, e.g., if  * 00046000
*                       &NUM is 1, and &CHR is correctly specified in * 00047000
*                       one of the first three forms above, the first * 00048000
*                       (high-order) bit of &SETBITS is ORed on       * 00049000
*             &STCHOK : binary flag, 0 if &CHR is detected to have an * 00050000
*                       incorrect format, else 1                      * 00051000
*       Note that if &CHR is two characters long, but not validly     * 00052000
*       hex, the error is not detected here (&STCHOK will have value  * 00053000
*       1 on exit).  Instead, the assembler captures the error in the * 00054000
*       corresponding DC instruction, producing an appropriate        * 00055000
*       message in the listing and a non-zero return code for the     * 00056000
*       assembly.                                                     * 00057000
*    :efunction                                                       * 00058000
*                                                                     * 00059000
*    :notes                                                           * 00060000
*       Dependencies - None.                                          * 00061000
*                                                                     * 00062000
*       Restrictions - To be invoked only from CEEXOPT.               * 00063000
*    :enotes                                                          * 00064000
*                                                                     * 00065000
*    :regs - Register Conventions                                     * 00066000
*       (none)                                                        * 00067000
*    :eregs                                                           * 00068000
*                                                                     * 00069000
*    :entry                                                           * 00070000
*       (none)                                                        * 00071000
*    :eentry                                                          * 00072000
*                                                                     * 00073000
*    :exit                                                            * 00074000
*       (none)                                                        * 00075000
*    :eexit                                                           * 00076000
*                                                                     * 00077000
*    :retcode                                                         * 00078000
*       Possible return codes (produced by MNOTE):                    * 00079000
*          0: no errors detected                                      * 00080000
*          8: STORAGE suboption was not in a recognized format        * 00081000
*    :eretcode                                                        * 00082000
*                                                                     * 00083000
*    :external - List of external routines used by this module        * 00084000
*       (none)                                                        * 00085000
*    :eexternal                                                       * 00086000
*                                                                     * 00087000
*    :data - Major data areas, control blocks, tables, etc.           * 00088000
*       (none)                                                        * 00089000
*    :edata                                                           * 00090000
*                                                                     * 00091000
*    :macros                                                          * 00092000
*       Macros defined in this module                                 * 00093000
*         (none)                                                      * 00094000
*       Macros used by this module                                    * 00095000
*         (none)                                                      * 00096000
*    :emacros                                                         * 00097000
*                                                                     * 00098000
*    :include                                                         * 00099000
*       (none)                                                        * 00100000
*    :einclude                                                        * 00101000
*                                                                     * 00102000
*    :messages                                                        * 00103000
*       (none)                                                        * 00104000
*    :emessages                                                       * 00105000
*                                                                     * 00106000
*    :history                                                         * 00107000
*       01/09/90 (DMW) New                                            * 00108000
*    :ehistory                                                        * 00109000
*                                                                     * 00110000
*    :pseudocode                                                      * 00111000
*       (none)                                                        * 00112000
*    :epseudocode                                                     * 00113000
*                                                                     * 00114000
*    :epls                                                            * 00115000
**********************************************************************/ 00116000
         MACRO                                                          00117000
         CEEXSTCH &CHR,                Suboption value, e.g., 'A'      X00118000
               &NUM                    Suboption order, e.g., 1         00119000
.********************************************************************** 00120000
.*   SET symbols                                                      * 00121000
.********************************************************************** 00122000
         GBLA  &BIT1                   Value of 1st bit of 8 (128)      00123000
         GBLA  &BIT2                   Value of 2nd bit of 8 ( 64)      00124000
         GBLA  &BIT3                   Value of 3rd bit of 8 ( 32)      00125000
         LCLA  &FLAGVAL                Appropriate &BITn for &SETBITS   00126000
         GBLA  &SETBITS                STORAGE char set bits (additive) 00127000
.*                                                                      00128000
         GBLB  &STCHOK                 Flag for error detection         00129000
.*                                                                      00130000
         LCLC  &PARM                   Input copy (for subscripting)    00131000
         LCLC  &PARMMSG                Name of suboption number &NUM    00132000
         GBLC  &STORVAL                Final DC operand result          00133000
.********************************************************************** 00134000
.*   Initialize &STCHOK to indicate no errors and &STORVAL to X'00'.  * 00135000
.*   If the first parameter is NONE, exit with &STCHOK on.            * 00136000
.********************************************************************** 00137000
&STCHOK  SETB  1                       Assume no errors                 00138000
&STORVAL SETC  'X''00'''               Default DC operand result        00139000
         AIF   ('&CHR' EQ 'NONE').STC8                                  00140000
&PARM    SETC  '&CHR'                  Capture character suboption      00141000
         AGO   (&NUM).STC1,.STC2,.STC3 Set subopt name and &SETBITS val 00142000
.*                                                                      00143000
.STC1    ANOP                                                           00144000
&PARMMSG SETC  'heap allocation value' 1st character suboption name     00145000
&FLAGVAL SETA  &BIT1                   Value to add into &SETBITS       00146000
         AGO   .STC4                                                    00147000
.*                                                                      00148000
.STC2    ANOP                                                           00149000
&PARMMSG SETC  'heap free value'       2nd character suboption name     00150000
&FLAGVAL SETA  &BIT2                   Value to add into &SETBITS       00151000
         AGO   .STC4                                                    00152000
.*                                                                      00153000
.STC3    ANOP                                                           00154000
&PARMMSG SETC  'DSA allocation value'  3rd character suboption name     00155000
&FLAGVAL SETA  &BIT3                   Value to add into &SETBITS       00156000
.*                                                                      00157000
.STC4    ANOP                          Verify that length is 2 or 3     00158000
         AIF   (K'&PARM EQ 2).STC5                                      00159000
         AIF   (K'&PARM EQ 3).STC6                                      00160000
         AGO   .STC7                   Suboption not in correct format  00161000
.*                                                                      00162000
.STC5    ANOP                          Process length 2 string          00163000
&STORVAL SETC  'X''&CHR'''             Assume parm properly hex         00164000
&SETBITS SETA  &SETBITS+&FLAGVAL       Indicate char was specified      00165000
         AGO   .STC8                                                    00166000
.*                                                                      00167000
.STC6    ANOP                          Process length 3 string          00168000
         AIF   ('&PARM'(1,1) NE '''' AND '&PARM'(1,1) NE '"').STC7      00169000
         AIF   ('&PARM'(3,1) NE '''' AND '&PARM'(3,1) NE '"').STC7      00170000
&STORVAL SETC  'C'''.'&PARM'(2,1)''''  Extract quoted character         00171000
&SETBITS SETA  &SETBITS+&FLAGVAL       Indicate char was specified      00172000
         AGO   .STC8                                                    00173000
.*                                                                      00174000
.STC7    ANOP                          Suboption wasn't recognized      00175000
         MNOTE 8,'STORAGE &PARMMSG is not recognized:'                  00176000
         MNOTE 8,'it has been set to X''00''.'                          00177000
&STCHOK  SETB  0                       Indicate error detected          00178000
.*                                                                      00179000
.STC8    ANOP                                                           00180000
         MEND                                                           00181000
