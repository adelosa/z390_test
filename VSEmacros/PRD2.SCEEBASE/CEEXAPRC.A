*/********************************************************************* 00001000
*    :module                                                          * 00002000
*       CEEXAPRC - Internal macro to determine the type of the ABPERC * 00003000
*                    information level suboption, and to produce a DC * 00004000
*                    instruction operand containing its extracted     * 00005000
*                    numeric value, if any (invoked in CEEXOPT)       * 00006000
*    :emodule                                                         * 00007000
*                                                                     * 00008000
*    :security                                                        * 00009000
*                                                                     * 00010000
*      Licensed Materials - Property of IBM                           * 00011000
*                                                                     * 00012000
*      5686-094  (C) Copyright IBM Corp. 1991,  1996                  * 00013000
*      All Rights Reserved.                                           * 00014000
*                                                                     * 00015000
*       US Government Users Restricted Rights - Use, duplication or   * 00016000
*       disclosure restricted by GSA ADP Schedule Contract with IBM   * 00017000
*       Corp.                                                         * 00018000
*                                                                     * 00019000
*                                                                     * 00020000
*    :esecurity                                                       * 00021000
*                                                                     * 00022000
*    :status                                                          * 00023000
*       LE/VSE Version 1 Release 4 Modification 0                     * 00024000
*    :estatus                                                         * 00025000
*                                                                     * 00026000
*    :function                                                        * 00027000
*       Nested macro CEEXAPRC, used to determine the type of the      * 00028000
*       ABPERC information level suboption and to extract its numeric * 00029000
*       value if any as a DC operand, has one positional parameter    * 00030000
*       input, assumed to be non-null:                                * 00031000
*             &STR    : the character suboption, which should be in   * 00032000
*                       one of the forms                              * 00033000
*                              NONE | Udddd | Shh | XXXX | Ihh        * 00034000
*                       where dddd represents four decimal digits,    * 00035000
*                       hh represents two hex digits (A through F     * 00036000
*                       must be capitalized), and XXXX represents any * 00037000
*                       four characters other than NONE               * 00038000
*       The three global outputs produced are:                        * 00039000
*             &ABTYPE : the type of &STR, either NONE, user, system,  * 00040000
*                       or other, corresponding to the five legal     * 00041000
*                       forms shown under &STR above, returned as an  * 00042000
*                       arithmetic value (&BIT1, &BIT2, &BIT3, &BIT4, * 00043000
*                       or &BIT5 respectively)                        * 00044000
*             &ABNUM  : DC operand containing the numeric value in    * 00045000
*                       &STR if any e.g., F'0' for NONE or XXXX,      * 00046000
*                       A(1234) for U1234, XL4'21' for S21,           * 00047000
*                       XL4'05' for I05                               * 00048000
*             &APRCOK : binary flag, 0 if &STR is detected to have an * 00049000
*                       incorrect format, else 1                      * 00050000
*    :efunction                                                       * 00051000
*                                                                     * 00052000
*    :notes                                                           * 00053000
*       Dependencies - None.                                          * 00054000
*                                                                     * 00055000
*       Restrictions - To be invoked only from CEEXOPT.               * 00056000
*    :enotes                                                          * 00057000
*                                                                     * 00058000
*    :regs - Register Conventions                                     * 00059000
*       (none)                                                        * 00060000
*    :eregs                                                           * 00061000
*                                                                     * 00062000
*    :entry                                                           * 00063000
*       (none)                                                        * 00064000
*    :eentry                                                          * 00065000
*                                                                     * 00066000
*    :exit                                                            * 00067000
*       (none)                                                        * 00068000
*    :eexit                                                           * 00069000
*                                                                     * 00070000
*    :retcode                                                         * 00071000
*       Possible return codes (produced by MNOTE):                    * 00072000
*          0: no errors detected                                      * 00073000
*          8: ABPERC suboption was not in a recognized format         * 00074000
*    :eretcode                                                        * 00075000
*                                                                     * 00076000
*    :external - List of external routines used by this module        * 00077000
*       (none)                                                        * 00078000
*    :eexternal                                                       * 00079000
*                                                                     * 00080000
*    :data - Major data areas, control blocks, tables, etc.           * 00081000
*       (none)                                                        * 00082000
*    :edata                                                           * 00083000
*                                                                     * 00084000
*    :macros                                                          * 00085000
*       Macros defined in this module                                 * 00086000
*         (none)                                                      * 00087000
*       Macros used by this module                                    * 00088000
*          CEEXNUMB - determines if a character string consists only  * 00089000
*                     of valid binary, decimal, or hex characters     * 00090000
*    :emacros                                                         * 00091000
*                                                                     * 00092000
*    :include                                                         * 00093000
*       (none)                                                        * 00094000
*    :einclude                                                        * 00095000
*                                                                     * 00096000
*    :messages                                                        * 00097000
*       (none)                                                        * 00098000
*    :emessages                                                       * 00099000
*                                                                     * 00100000
*    :history                                                         * 00101000
*       07/26/90 (DMW) New                                            * 00102000
*    :ehistory                                                        * 00103000
*                                                                     * 00104000
*    :pseudocode                                                      * 00105000
*       (none)                                                        * 00106000
*    :epseudocode                                                     * 00107000
*                                                                     * 00108000
*    :epls                                                            * 00109000
**********************************************************************/ 00110000
         MACRO                                                          00111000
         CEEXAPRC &STR                 Suboption value, e.g., U4095     00112000
.********************************************************************** 00113000
.*   SET symbols                                                      * 00114000
.********************************************************************** 00115000
         GBLA  &ABTYPE                 ABPERC suboption type            00116000
         GBLA  &BIT1                   Type NONE                        00117000
         GBLA  &BIT2                   Type Udddd (user abcode)         00118000
         GBLA  &BIT3                   Type Shh (system abcode)         00119000
         GBLA  &BIT4                   Type XXXX (none of the above)    00120000
         GBLA  &BIT5                   Type Ihh (program interrupt)     00121000
.*                                                                      00122000
         GBLB  &APRCOK                 Flag for error detection         00123000
         GBLB  &NUMBOK                 Flag from CEEXNUMB               00124000
.*                                                                      00125000
         GBLC  &ABNUM                  ABPERC DC with abcode number     00126000
         LCLC  &NUM                    Numeric portion of abcode        00127000
         LCLC  &PARM                   Input copy (for subscripting)    00128000
.********************************************************************** 00129000
.*   Initialize &APRCOK to indicate no errors, and set defaults.      * 00130000
.*   Determine type of abcode suboption.                              * 00131000
.********************************************************************** 00132000
&APRCOK  SETB  1                       Assume no errors                 00133000
&ABTYPE  SETA  &BIT1                   Default parameter NONE           00134000
&ABNUM   SETC  'F''0'''                Default abcode number DC         00135000
         AIF   ('&STR' EQ 'NONE').APR7                                  00136000
&PARM    SETC  '&STR'                  Capture suboption                00137000
         AIF   ('&PARM'(1,1) EQ 'U').APR1                               00138000
         AIF   ('&PARM'(1,1) EQ 'S').APR2                               00139000
         AIF   ('&PARM'(1,1) EQ 'I').APR2                               00140000
         AGO   .APR4                   Check for abcode XXXX            00141000
.*                                                                      00142000
.APR1    ANOP                          Check if U is followed by dddd   00143000
         AIF   (K'&PARM NE 5).APR4     If length not 5, check for XXXX  00144000
&NUM     SETC  '&PARM'(2,4)            Capture dddd for numeric check   00145000
         CEEXNUMB &NUM,D,4             Obtain &NUMBOK (decimal check)   00146000
         AIF   (NOT &NUMBOK).APR6      Go report error                  00147000
&ABTYPE  SETA  &BIT2                   Abcode is of type Udddd (user)   00148000
&ABNUM   SETC  'A('.'&NUM'.')'         A(dddd) suitable for DC          00149000
         AGO   .APR7                                                    00150000
.*                                                                      00151000
.APR2    ANOP                          Check if S is followed by hh     00152000
         AIF   (K'&PARM NE 3).APR4     If length not 3, check for XXXX  00153000
&NUM     SETC  '&PARM'(2,2)            Capture hh for numeric check     00154000
         CEEXNUMB &NUM,H,2             Obtain &NUMBOK (hex check)       00155000
         AIF   (NOT &NUMBOK).APR6      If not numeric, error            00156000
&ABNUM   SETC  'XL4'''.'&NUM'.''''     XL4'hh' suitable for DC          00157000
         AIF   ('&PARM'(1,1) EQ 'I').APR3                               00158000
&ABTYPE  SETA  &BIT3                   Abcode is of type Shh(system)    00159000
         AGO   .APR7                                                    00160000
.APR3    ANOP                                                           00161000
&ABTYPE  SETA  &BIT5                   Abcode is of type Ihh(PC)        00162000
         AGO   .APR7                                                    00163000
.*                                                                      00164000
.APR4    ANOP                          Check if abcode is of form XXXX  00165000
         AIF   (K'&PARM NE 4).APR6     If length not 4, error           00166000
.*                                                                      00167000
.APR5    ANOP                          Abcode is of type XXXX (other)   00168000
&ABTYPE  SETA  &BIT4                                                    00169000
         AGO   .APR7                                                    00170000
.*                                                                      00171000
.APR6    ANOP                          Suboption wasn't recognized      00172000
         MNOTE 8,'ABPERC abcode was not recognized:'                    00173000
         MNOTE 8,'it has been set to NONE.'                             00174000
&APRCOK  SETB  0                       Indicate error detected          00175000
.*                                                                      00176000
.APR7    ANOP                                                           00177000
         MEND                                                           00178000
