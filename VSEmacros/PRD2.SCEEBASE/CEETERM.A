         MACRO                                                          00001000
&NAME    CEETERM &RC=0,                Return code.                    X00002000
               &MODIFIER=0,            ENCL_MODIFIER                   X00003000
               &MF=                                                     00004000
.*             &MF=                    LIST/EXECUTE FORM      @NX0179A  00005000
.********************************************************************** 00006000
.*                                                                    * 00007000
.*  CEETERM - LE/VSE Termination MACRO.                               * 00008000
.*                                                                    * 00009000
.*  Licensed Materials - Property of IBM                              * 00010000
.*                                                                    * 00011000
.*  5686-094  (C) Copyright IBM Corp. 1991,  1996                     * 00012000
.*  All rights reserved.                                              * 00013000
.*                                                                    * 00014000
.*      US Government Users Restricted Rights - Use, duplication or   * 00015000
.*      disclosure restricted by GSA ADP Schedule Contract with IBM   * 00016000
.*      Corp.                                                         * 00017000
.*                                                                    * 00018000
.*                                                                    * 00019000
.*  STATUS - Release level of this macro                              * 00020000
.*         LE/VSE Version 1 Release 4 Modification 0                  * 00021000
.*                                                                    * 00022000
.*  FUNCTION:                                                         * 00023000
.*      This macro used to terminate a LE/VSE enabled program.        * 00024000
.*      If used with a main entry the appropriate call will be made   * 00025000
.*      to LE/VSE termination routines.                               * 00026000
.*                                                                    * 00027000
.*  History - History of changes to this macro                        * 00028000
.*                                                                    * 00029000
.*      10/09/94 - (JL )  User can specify variable/register  @NX0179A* 00030000
.*                 for RC and MODIFIER in LIST/EXEC form      @NX0179A* 00031000
.*                                                                    * 00032000
.* $01=PQ26738  GWH      19990621     Modified macro to generate      * 00033000
.*                                    CEEMAIN csect.                  * 00034000
.*                                                                    * 00035000
.********************************************************************** 00036000
         GBLC   &CEEOEPVNX         Label of Entry.                      00037000
         GBLB   &CEEMAIN           Indicator that compile unit main     00038000
         GBLB   &CEEHOOK           Hook on/off                          00039000
         GBLB   &CEEMAING          CEEMAIN CSECT Generated ind.   @01A  00040000
         LCLC   &NX                                                     00041000
         LCLC   &LOC                                          @NX0179A* 00042000
&LOC     SETC   'I'                Initialize the local variable        00043000
&NX      SETC   '&SYSNDX'(2,3)                                          00044000
         AIF  (&CEEHOOK).HOOK1                                          00045000
         AGO  .HOOK2                                                    00046000
.HOOK1   EX   0,CEECAAEXIT-CEECAA(12)                                   00047000
.HOOK2   ANOP                                                           00048000
         AIF    ('&MF' EQ 'L').MF1     If MF=L specified then branch    00049000
         AIF    ('&NAME' EQ '').SKIP1A                                  00050000
&NAME    DS   0H                                                        00051000
.SKIP1A  ANOP                                                           00052000
         AIF    ('&MF' NE '').MF1     If MF specified then branch       00053000
.********************************************************************** 00054000
.*    generate code for main program with no LIST/EXECUTE form        * 00055000
.********************************************************************** 00056000
         AIF  (&CEEMAIN EQ 1).NOLIST    Generate code for subprogram    00057000
         AIF  ('&RC'(1,1) NE '(').SKIP3A                                00058000
         ST   &RC(1),CEET&NX+12                                         00059000
         AGO .SKIP3B                                                    00060000
.SKIP3A  ANOP                                                           00061000
         AIF  (T'&RC EQ 'N').SKIP3B                                     00062000
         AIF  (T'&RC EQ 'U').SKIP3B                                     00063000
         MVC CEET&NX+8,&RC  Load RC                                     00064000
.SKIP3B  ANOP                                                           00065000
         AIF  ('&MODIFIER'(1,1) NE '(').SKIP4A                          00066000
         ST   &MODIFIER(1),CEET&NX+8                                    00067000
         AGO .SKIP4B                                                    00068000
.SKIP4A  ANOP                                                           00069000
         AIF  (T'&MODIFIER EQ 'N').SKIP4B                               00070000
         AIF  (T'&MODIFIER EQ 'U').SKIP4B                               00071000
         MVC CEET&NX+8,&MODIFIER  Load modifier                         00072000
.SKIP4B  ANOP                                                           00073000
         LA   1,CEET&NX                 Get address of termination list 00074000
         L    15,=V(CEETREC)            Get address of termination rtn  00075000
         BALR 14,15                     Call termination routine.       00076000
CEET&NX  DC   A(*+8)               Parm 1                               00077000
         DC   A(*+8+X'80000000')   Parm 2                               00078000
         AIF  ('&MODIFIER'(1,1) EQ '(').SKIP5C                          00079000
         AIF  (T'&MODIFIER EQ 'N').SKIP5A                               00080000
         AIF  (T'&MODIFIER EQ 'U').SKIP5A                               00081000
         AGO .SKIP5C                                                    00082000
.SKIP5A  ANOP ,                                                         00083000
         DC   A(&MODIFIER)         Enc_Modifier                         00084000
         AGO .SKIP6A                                                    00085000
.SKIP5C  ANOP ,                                                         00086000
         DS   A                    Enc_Modifier                         00087000
.SKIP6A  ANOP ,                                                         00088000
         AIF  ('&RC'(1,1) EQ '(').SKIP7A                                00089000
         AIF  (T'&RC EQ 'N').SKIP7B                                     00090000
         AIF  (T'&RC EQ 'U').SKIP7B                                     00091000
         AGO .SKIP7A                                                    00092000
.SKIP7B  ANOP ,                                                         00093000
         DC   A(&RC)               Return code.                         00094000
         AGO .OUT2                                                      00095000
.SKIP7A  ANOP ,                                                         00096000
         DS   A                    Return code.                         00097000
         AGO .OUT2                                                      00098000
.NOLIST ANOP ,                                                          00099000
         AIF  ('&RC'(1,1) EQ '(').SKIP8A                                00100000
         AIF  (T'&RC(1) NE 'N').SKIP8B  parameter addr is not a number  00101000
         L   15,=A(&RC)         . Load Return code.                     00102000
         AGO .SKIP9A                                                    00103000
.SKIP8B ANOP ,                                                          00104000
         AIF  (T'&RC(1) NE 'U').SKIP9B  parameter addr is not a EQU     00105000
         L   15,=A(&RC)          . Load Return code.                    00106000
         AGO .SKIP9A                                                    00107000
.SKIP9B ANOP ,                                                          00108000
         L   15,&RC          . Load Return code.                        00109000
         AGO .SKIP9A                                                    00110000
.SKIP8A  ANOP                                                           00111000
         LR  15,&RC(1)      . Load reason code.                         00112000
.SKIP9A  ANOP                                                           00113000
         AIF  ('&MODIFIER'(1,1) EQ '(').SKIP10                          00114000
         AIF  (T'&MODIFIER(1) NE 'N').SKIPA1 parm addr is not a number  00115000
         L   0,=A(&MODIFIER)   . Load modifier                          00116000
         AGO .SKIP11                                                    00117000
.SKIPA1 ANOP ,                                                          00118000
         AIF  (T'&MODIFIER(1) NE 'U').SKIPA2 parm addr is not a EQU     00119000
         L   0,=A(&MODIFIER)   . Load modifier                          00120000
         AGO .SKIP11                                                    00121000
.SKIPA2 ANOP ,                                                          00122000
         L   0,&MODIFIER    . Load modifier                             00123000
         AGO .SKIP11                                                    00124000
.SKIP10  ANOP                                                           00125000
         LR  0,&MODIFIER(1)  . Load modifier                            00126000
.SKIP11  ANOP                                                           00127000
         L   13,4(13)             Get previous save area                00128000
         L   14,12(,13)           Reload return address                 00129000
         LM  1,12,24(13)          Restore reg 1 through 12              00130000
         BR  14                   Return to caller                      00131000
         AGO .OUT2                                                      00132000
.********************************************************************** 00133000
.*    generate code for  LIST form                            @NX0179A* 00134000
.********************************************************************** 00135000
.MF1     ANOP                                                           00136000
         AIF  (&CEEMAIN NE 1).MF2       If main program gen code        00137000
   MNOTE 8,'"MF="  PARAMETER SHOULD NOT BE USED FOR SUBPROGRAM'         00138000
         AGO .OUT2                                                      00139000
.MF2     ANOP                                                           00140000
         AIF  ('&MF' NE 'L').EXE01  Execute form then branch            00141000
&NAME    DS  4F                                                         00142000
         AGO .OUT2                                                      00143000
.********************************************************************** 00144000
.*    generate code for  EXECUTE form                         @NX0179A* 00145000
.********************************************************************** 00146000
.EXE01   ANOP                                                           00147000
         AIF  ('&MF(1)' NE 'E').EXE01A  error when MF not = E/L         00148000
         AIF  ('&MF'(4,1) EQ '(').EXE01C                                00149000
         AIF  (T'&MF(2) EQ 'N').EXE01B  parameter addr is a number      00150000
         AGO .EXE08A                                                    00151000
.EXE01A  ANOP                                                           00152000
   MNOTE 8,'THE FIRST PARAMETER OF "MF=" SHOULD BE "E" or "L"'          00153000
         AGO .OUT2                                                      00154000
.EXE01B  ANOP                                                           00155000
   MNOTE 8,'THE SECOND PARAMETER OF "MF=" SHOULD NOT BE A NUMBER'       00156000
         AGO .OUT2                                                      00157000
.EXE01C  ANOP                                                           00158000
&LOC     SETC '&MF(2,1)'                                                00159000
         AIF  (T'&LOC EQ 'U').EXE08A  LOC is a EQU label                00160000
         AIF  ('&LOC' NE '0').EXE08A  LOC should not = 0                00161000
   MNOTE 8,'THE SECOND PARAMETER OF "MF=" SHOULD NOT BE 0'              00162000
         AGO .OUT2                                                      00163000
.********************************************************************** 00164000
.*    generate code to move MODIFIER to the third word of     @NX0179A* 00165000
.*               parameter list                               @NX0179A* 00166000
.********************************************************************** 00167000
.EXE08A  ANOP                                                           00168000
         AIF  ('&MODIFIER'(1,1) NE '(').EXE02                           00169000
         AIF  ('&LOC' NE 'I').EXE09A                                    00170000
         ST   &MODIFIER(1),&MF(2)+8  move Modifier to 3rd word of plist 00171000
         AGO .EXE05                                                     00172000
.EXE09A  ANOP                                                           00173000
         ST   &MODIFIER(1),8(,&LOC)  move Modifier to 3rd word of plist 00174000
         AGO .EXE05                                                     00175000
.EXE02   ANOP                                                           00176000
         AIF  (T'&MODIFIER EQ 'U').EXE04   modifier is the name of EQU  00177000
         AIF  (T'&MODIFIER EQ 'N').EXE03   modifier is a number         00178000
         AIF  ('&LOC' NE 'I').EXE10A                                    00179000
         MVC  &MF(2)+8,&MODIFIER move Modifier to 3rd word of plist     00180000
         AGO .EXE05                                                     00181000
.EXE10A  ANOP                                                           00182000
         MVC  8(4,&LOC),&MODIFIER move Modifier to 3rd word of plist    00183000
         AGO .EXE05                                                     00184000
.EXE03   ANOP                                                           00185000
         AIF  ('&LOC' NE 'I').EXE11A                                    00186000
         MVC  &MF(2)+8,=A(&MODIFIER) move Modifier to 3rd word of plist 00187000
         AGO .EXE05                                                     00188000
.EXE11A  ANOP                                                           00189000
         MVC  8(4,&LOC),=A(&MODIFIER) move Modifier to plist            00190000
         AGO .EXE05                                                     00191000
.EXE04   ANOP                                                           00192000
         AIF  ('&LOC' NE 'I').EXE12A                                    00193000
         MVC  &MF(2)+8,=A(&MODIFIER) move Modifier to 3rd word of plist 00194000
         AGO .EXE05                                                     00195000
.EXE12A  ANOP                                                           00196000
         MVC  8(4,&LOC),=A(&MODIFIER) move Modifier to plist            00197000
.********************************************************************** 00198000
.*    generate code to move Return Code to the fourth word    @NX0179A* 00199000
.*           of parameter list                                @NX0179A* 00200000
.********************************************************************** 00201000
.EXE05   ANOP                                                           00202000
         AIF  ('&RC'(1,1) NE '(').EXE06                                 00203000
         AIF  ('&LOC' NE 'I').EXE13A                                    00204000
         ST   &RC(1),&MF(2)+12     move RC to 4th word of plist         00205000
         AGO .EXE17                                                     00206000
.EXE13A  ANOP                                                           00207000
         ST   &RC(1),12(,&LOC)      move RC to 4th word of plist        00208000
         AGO .EXE17                                                     00209000
.EXE06   ANOP                                                           00210000
         AIF  (T'&RC EQ 'U').EXE08       RC is the name of EQU          00211000
         AIF  (T'&RC EQ 'N').EXE07       RC is a number                 00212000
         AIF  ('&LOC' NE 'I').EXE14A                                    00213000
         MVC  &MF(2)+12,&RC    move RC to 4th word of plist             00214000
         AGO .EXE17                                                     00215000
.EXE14A  ANOP                                                           00216000
         MVC  12(4,&LOC),&RC      move RC to 3rd word of plist          00217000
         AGO .EXE17                                                     00218000
.EXE07   ANOP                                                           00219000
         AIF  ('&LOC' NE 'I').EXE15A                                    00220000
         MVC  &MF(2)+12,=A(&RC)    move RC to 4th word of plist         00221000
         AGO .EXE17                                                     00222000
.EXE15A  ANOP                                                           00223000
         MVC  12(4,&LOC),=A(&RC)    move RC to 4th word of plist        00224000
         AGO .EXE17                                                     00225000
.EXE08   ANOP                                                           00226000
         AIF  ('&LOC' NE 'I').EXE16A                                    00227000
         MVC  &MF(2)+12,=A(&RC)    move RC to 4th word of plist         00228000
         AGO .EXE17                                                     00229000
.EXE16A  ANOP                                                           00230000
         MVC  12(4,&LOC),=A(&RC)    move RC to 4th word of plist        00231000
.EXE17   ANOP                                                           00232000
         AIF  ('&LOC' EQ 'I').EXE17A                                    00233000
         AIF  (T'&LOC EQ 'U').EXE171 LOC is a EQU label                 00234000
         AIF  ('&LOC' EQ '1').EXE172 LOC=1 then not to load R1          00235000
.EXE171  ANOP                                                           00236000
         LR   1,&LOC                                                    00237000
.EXE172  ANOP                                                           00238000
         LA   15,8(,1)                                                  00239000
         ST   15,0(,1)                                                  00240000
         LA   15,4(,15)                                                 00241000
         ST   15,4(,1)                                                  00242000
         OI   4(1),X'80'      turn on high order bit                    00243000
         AGO .OUT                                                       00244000
.EXE17A  ANOP                                                           00245000
         LA   1,&MF(2)+8                                                00246000
.*       LA   1,8(,1)                                                   00247000
         ST   1,&MF(2)                                                  00248000
         LA   1,4(,1)                                                   00249000
         ST   1,&MF(2)+4                                                00250000
         OI   &MF(2)+4,X'80'      turn on high order bit                00251000
         LA   1,&MF(2)  get address of termination list                 00252000
.OUT     ANOP                                                           00253000
         L    15,=V(CEETREC)       Get address of termination rtn       00254000
         BALR 14,15                Call termination routine.            00255000
.OUT2    ANOP                                                           00256000
.********************************************************************** 00257000
.* Generate a CEEMAIN csect if MAIN=YES was specified in CEEENTRY @01A* 00258000
.* RMODE/AMODE of CEEMAIN must be ANY/ANY.                        @01A* 00259000
.********************************************************************** 00260000
         AIF  (&CEEMAIN EQ 1).MAIN1     if sub then skip          @01A  00261000
         AIF  (&CEEMAING).MAIN1   If CEEMAIN CSECT already done   @01A  00262000
&CEEMAING SETB 1                  Indicate CEEMAIN CSECT complete @01A  00263000
CEEMAIN  CSECT                     Create MAIN CSECT              @01A  00264000
CEEMAIN  RMODE ANY                                                @01A  00265000
CEEMAIN  AMODE ANY                                                @01A  00266000
         DC    A(&CEEOEPVNX)       Generate address of Main       @01A  00267000
         DC    F'0'                alignment                      @01A  00268000
&CEEOEPVNX CSECT                                                  @01A  00269000
.MAIN1   ANOP                                                           00270000
         MEND                                                           00271000
