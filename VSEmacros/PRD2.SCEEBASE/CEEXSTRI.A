*/********************************************************************* 00001000
*    :module                                                          * 00002000
*       CEEXSTRI - Internal macro to compute effective string length  * 00003000
*                    (invoked in CEEXOPT)                             * 00004000
*    :emodule                                                         * 00005000
*                                                                     * 00006000
*    :security                                                        * 00007000
*                                                                     * 00008000
*      Licensed Materials - Property of IBM                           * 00009000
*                                                                     * 00010000
*      5686-094  (C) Copyright IBM Corp. 1991,  1996                  * 00011000
*      All Rights Reserved.                                           * 00012000
*                                                                     * 00013000
*                                                                     * 00014000
*       US Government Users Restricted Rights - Use, duplication or   * 00015000
*       disclosure restricted by GSA ADP Schedule Contract with IBM   * 00016000
*       Corp.                                                         * 00017000
*                                                                     * 00018000
*    :esecurity                                                       * 00019000
*                                                                     * 00020000
*    :status                                                          * 00021000
*       LE/VSE Version 1 Release 4 Modification 0                     * 00022000
*    :estatus                                                         * 00023000
*                                                                     * 00024000
*    :function                                                        * 00025000
*       Nested macro CEEXSTRI, used to compute the effective length   * 00026000
*       of a string and to ensure that it does not exceed a specified * 00027000
*       maximum (determined after stripping single or double quotes   * 00028000
*       in which it may optionally be enclosed), has three inputs,    * 00029000
*       assumed to be non-null:                                       * 00030000
*             &STR    : the string, which must contain at least 1     * 00031000
*                       character, and may not contain more than 255  * 00032000
*                       characters including any enclosing quotes     * 00033000
*             &MAX    : the maximum effective length of the string to * 00034000
*                       be allowed, assumed positive, e.g., 80        * 00035000
*             &OPT    : the name of the suboption that the string     * 00036000
*                       represents, not to include embedded blanks,   * 00037000
*                       e.g., commands_file                           * 00038000
*       The effective length of the string is computed by scanning,   * 00039000
*       counting contiguous ampersands or apostrophes as one charac-  * 00040000
*       ter.  (Note that the K' attribute would count any such pair   * 00041000
*       as two characters.)  If the effective length has reached &MAX * 00042000
*       characters, but the scan has not yet exhausted the string, it * 00043000
*       will be truncated to an effective length of &MAX and an error * 00044000
*       message and non-zero return code for the assembly will re-    * 00045000
*       sult.  The three global outputs produced are:                 * 00046000
*             &STRING : the input string stripped of any enclosing    * 00047000
*                       quotes and truncated if need be to effective  * 00048000
*                       length &MAX (blanked if unmatched quotes were * 00049000
*                       detected)                                     * 00050000
*             &STRLEN : the resulting effective length of &STRING,    * 00051000
*                       0 if unmatched quotes were detected           * 00052000
*             &STRIOK : binary flag, 0 if unmatched quotes were       * 00053000
*                       detected or if effective length exceeded      * 00054000
*                       &MAX, else 1                                  * 00055000
*       The intent is that &STRING may be inserted into a DC C in-    * 00056000
*       struction of fixed-length &MAX, immediately preceded by half- * 00057000
*       word effective length &STRLEN.  (For each contiguous pair of  * 00058000
*       ampersands or apostrophes, the DC instruction produces only   * 00059000
*       one character, hence the need to count such pairs and not     * 00060000
*       rely on the K' attribute.)                                    * 00061000
*    :efunction                                                       * 00062000
*                                                                     * 00063000
*    :notes                                                           * 00064000
*       Dependencies - None.                                          * 00065000
*                                                                     * 00066000
*       Restrictions - To be invoked only from CEEXOPT.               * 00067000
*    :enotes                                                          * 00068000
*                                                                     * 00069000
*    :regs - Register Conventions                                     * 00070000
*       (none)                                                        * 00071000
*    :eregs                                                           * 00072000
*                                                                     * 00073000
*    :entry                                                           * 00074000
*       (none)                                                        * 00075000
*    :eentry                                                          * 00076000
*                                                                     * 00077000
*    :exit                                                            * 00078000
*       (none)                                                        * 00079000
*    :eexit                                                           * 00080000
*                                                                     * 00081000
*    :retcode                                                         * 00082000
*       Possible return codes (produced by MNOTE):                    * 00083000
*          0: no errors detected                                      * 00084000
*          8: string had unmatched quotes or had to be truncated      * 00085000
*    :eretcode                                                        * 00086000
*                                                                     * 00087000
*    :external - List of external routines used by this module        * 00088000
*       (none)                                                        * 00089000
*    :eexternal                                                       * 00090000
*                                                                     * 00091000
*    :data - Major data areas, control blocks, tables, etc.           * 00092000
*       (none)                                                        * 00093000
*    :edata                                                           * 00094000
*                                                                     * 00095000
*    :macros                                                          * 00096000
*       Macros defined in this module                                 * 00097000
*         (none)                                                      * 00098000
*       Macros used by this module                                    * 00099000
*         (none)                                                      * 00100000
*    :emacros                                                         * 00101000
*                                                                     * 00102000
*    :include                                                         * 00103000
*       (none)                                                        * 00104000
*    :einclude                                                        * 00105000
*                                                                     * 00106000
*    :messages                                                        * 00107000
*       (none)                                                        * 00108000
*    :emessages                                                       * 00109000
*                                                                     * 00110000
*    :history                                                         * 00111000
*       01/09/90 (DMW) New                                            * 00112000
*    :ehistory                                                        * 00113000
*                                                                     * 00114000
*    :pseudocode                                                      * 00115000
*       (none)                                                        * 00116000
*    :epseudocode                                                     * 00117000
*                                                                     * 00118000
*    :epls                                                            * 00119000
**********************************************************************/ 00120000
         MACRO                                                          00121000
         CEEXSTRI &STR,                String optionally in "" or ''   X00122000
               &MAX,                   Max allowed effective STR len   X00123000
               &OPT                    Name of suboption passing STR    00124000
.********************************************************************** 00125000
.*   SET symbols                                                      * 00126000
.********************************************************************** 00127000
         GBLA  &STRLEN                 Effective length of &STRING      00128000
         LCLA  &SUB                    String scanning subscript        00129000
.*                                                                      00130000
         GBLB  &STRIOK                 Flag for error detection         00131000
.*                                                                      00132000
         GBLC  &STRING                 Final resulting string output    00133000
.********************************************************************** 00134000
.*   Initialize &STRLEN, &STRIOK, &STRING.                            * 00135000
.********************************************************************** 00136000
&STRLEN  SETA  0                       Initialize length to 0           00137000
&STRIOK  SETB  1                       Assume no errors                 00138000
&STRING  SETC  '&STR'                  Obtain parameter                 00139000
         AIF   ('&STRING'(1,1) NE '''' AND '&STRING'(1,1) NE '"').STR1  00140000
         AIF   (K'&STRING EQ 1).STR7   Unmatched leading quote          00141000
&STRING  SETC  '&STRING'(2,K'&STRING-1) Strip off leading quote         00142000
         AIF   ('&STRING'(K'&STRING,1) NE '''' AND                     X00143000
               '&STRING'(K'&STRING,1) NE '"').STR7                      00144000
&STRING  SETC  '&STRING'(1,K'&STRING-1) Strip off trailing quote        00145000
         AGO   .STR2                   Go check length of string        00146000
.*                                                                      00147000
.STR1    ANOP                          1st char not quote, so check end 00148000
         AIF   ('&STRING'(K'&STRING,1) EQ '''' OR                      X00149000
               '&STRING'(K'&STRING,1) EQ '"').STR7                      00150000
.*                                                                      00151000
.STR2    ANOP                          Begin length check of string     00152000
         AIF   (K'&STRING NE 0).STR3   Verify string not now null       00153000
&STRING  SETC  ' '                     Blank string since now null      00154000
         AGO   .STR8                                                    00155000
.*                                                                      00156000
.STR3    ANOP                          Initialize subscript for scan    00157000
&SUB     SETA  1                                                        00158000
.*                                                                      00159000
.STR4    ANOP                          Top of count loop                00160000
         AIF   (&STRLEN GE &MAX).STR6  Go check if string scan complete 00161000
         AIF   (&SUB GT K'&STRING).STR8 Scan done, length OK            00162000
&STRLEN  SETA  &STRLEN+1               Increment for char or for pair   00163000
         AIF   (&SUB+1 GT K'&STRING).STR8 Done, avoid next indexing     00164000
         AIF   ('&STRING'(&SUB,2) EQ '''''').STR5                       00165000
         AIF   ('&STRING'(&SUB,2) EQ '&&').STR5                         00166000
&SUB     SETA  &SUB+1                  Increment subscript for 1 char   00167000
         AGO   .STR4                   Continue scan                    00168000
.*                                                                      00169000
.STR5    ANOP                          Adjust subscript for pair        00170000
&SUB     SETA  &SUB+2                                                   00171000
         AGO   .STR4                   Continue scan                    00172000
.*                                                                      00173000
.STR6    ANOP                          Check if truncation required     00174000
         AIF   (&SUB GT K'&STRING).STR8 String OK -- scan complete      00175000
&STRIOK  SETB  0                       Indicate string error detected   00176000
&STRING  SETC  '&STRING'(1,&SUB-1)     Truncate since scan not done     00177000
         MNOTE 8,'&OPT truncated to an effective length of &MAX..'      00178000
         AGO   .STR8                                                    00179000
.*                                                                      00180000
.STR7    ANOP                          Unmatched quote                  00181000
&STRLEN  SETA  0                       Set string effective length to 0 00182000
&STRIOK  SETB  0                       Indicate string error detected   00183000
&STRING  SETC  ' '                     Blank output string              00184000
         MNOTE 8,'&OPT has unmatched quotes, so has been'               00185000
         MNOTE 8,'blanked and set to an effective length of zero.'      00186000
.*                                                                      00187000
.STR8    ANOP                                                           00188000
         MEND                                                           00189000
