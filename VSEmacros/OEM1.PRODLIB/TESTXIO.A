* ------------------------------------------------------------------- * 00001000
* Program: TESTXIO - For use with TCP/IP version 1.4.0D or higher!    * 00002000
*                                                                     * 00003000
* Purpose: To test the external file I/O subsystem                    * 00004000
*                                                                     * 00005000
* Requirements: Need "PRD2.TCPIPCFG" as a work subdirectory.          * 00006000
*                    "IJSYSUC" as TYPE=VSAMCAT defined.               * 00007000
*                    // ASSGN SYS010 in JCL to invoke ICCF library    * 00008000
*                    USER=LEOL, PASSWORD=LEOL for ICCF access         * 00009000
*                                                                     * 00010000
* ------------------------------------------------------------------- * 00011000
TESTXIO  SUBRT  PHASE=NO,CATALR=NO,BASE2=11,BASE3=R10                   00012000
*                                                                       00013000
*  Test 1: Create a test file                                           00014000
*                                                                       00015000
         LA    R6,FILE01                   Setup a default              00016000
         BAL    R7,DYNAMIC                 Allocate dynamic block       00017000
         WTO    TEXT=MSG1                  Tell us about this           00018000
         BAL    R7,TEST1                   Do the first test            00019000
*                                                                       00020000
*  Test 2: Copy a file from one member in LIBR to another               00021000
*                                                                       00022000
         WTO    TEXT=MSG2                  Tell us about this           00023000
         BAL    R7,TEST2                   Do the next test             00024000
*                                                                       00025000
*  Test 3: Delete the original LIBR file                                00026000
*                                                                       00027000
         WTO    TEXT=MSG3                  Tell us about this           00028000
         BAL    R7,TEST3                   Do the Next test             00029000
*                                                                       00030000
*  Test 4: Rename the new LIBR file to the old                          00031000
*                                                                       00032000
         WTO    TEXT=MSG4                  Tell us about this           00033000
         BAL    R7,TEST4                   Do the Next test             00034000
*                                                                       00035000
*  Test 5: Copy the LIBR member into the Power print queue              00036000
*                                                                       00037000
         WTO    TEXT=MSG5                  Tell us about this           00038000
         BAL    R7,TEST5                   Do the Next test             00039000
*                                                                       00040000
*  Test 6: DIRLIST the LIBR directory                                   00041000
*                                                                       00042000
         WTO    TEXT=MSG6                  Tell us about this           00043000
         BAL    R7,TEST6                   Do the Next test             00044000
*                                                                       00045000
*  Test 7: Copy a POWER queue member as another POWER member            00046000
*                                                                       00047000
P2P       WTO    TEXT=MSG7                  Tell us about this          00048000
          BAL    R7,TEST7                   Do the Next test            00049000
*                                                                       00050000
*  Test 8: Delete the first power member                                00051000
*                                                                       00052000
         WTO    TEXT=MSG8                  Tell us about this           00053000
         BAL    R7,TEST3                   Do the Next test             00054000
*                                                                       00055000
*  Test 9: DIRLIST the POWER directory                                  00056000
*                                                                       00057000
         WTO    TEXT=MSG9                  Tell us about this           00058000
         BAL    R7,TEST9                   Do the Next test             00059000
*                                                                       00060000
*  Test 10: Issue a POWER command and display the response              00061000
*                                                                       00062000
         WTO    TEXT=MSG10                 Tell us about this           00063000
         BAL    R7,TEST10                  Do the Next test             00064000
*                                                                       00065000
*  Test 11: Read an ICCF member and put it in the POWER punch queue     00066000
*                                                                       00067000
         WTO    TEXT=MSG11                 Tell us about this           00068000
         BAL    R7,TEST11                  Do the Next test             00069000
*                                                                       00070000
*  Test 12: DIRLIST a VSAM catalog                                      00071000
*                                                                       00072000
VSAM     WTO    TEXT=MSG12                 Tell us about this           00073000
         BAL    R7,TEST12                  Do the Next test             00074000
*                                                                       00075000
*  Test 13: Copy data from POWER to VSAM catalog                        00076000
*                                                                       00077000
         WTO    TEXT=MSG13                 Tell us about this           00078000
         BAL    R7,TEST13                  Do the Next test             00079000
*                                                                       00080000
*  Test 14: Copy data from VSAM to LIBR                                 00081000
*                                                                       00082000
         WTO    TEXT=MSG14                 Tell us about this           00083000
         BAL    R7,TEST14                  Do the Next test             00084000
*                                                                       00085000
*  Test 15: Append data to the VSAM file                                00086000
*                                                                       00087000
         WTO    TEXT=MSG15                 Tell us about this           00088000
         BAL    R7,TEST15                  Do the Next test             00089000
*                                                                       00090000
*  Test 16: Delete the VSAM file                                        00091000
*                                                                       00092000
         WTO    TEXT=MSG16                 Tell us about this           00093000
         BAL    R7,TEST16                  Do the Next test             00094000
*                                                                       00095000
         WTO    TEXT=COMPLETE              Indicate success             00096000
         LR     R1,R6                      Point to the dynamic area    00097000
         L      R0,=A(XFISIZE)             Get the overall length       00098000
         FREEVIS ,                         Release storage              00099000
         B      EXIT                       Return to caller             00100000
*                                                                       00101000
COMPLETE DC     AL2(COMPL)                                              00102000
         DC     C'TESTXIO: Testing complete'                            00103000
COMPL    EQU    *-COMPLETE-2                                            00104000
*                                                                       00105000
* ------------------- Data Build Routine ---------------------------    00106000
*                                                                       00107000
TEST1    XR     R3,R3                      Init the output counter      00108000
         XR     R4,R4                      And this one too             00109000
         LA     R5,DATA                    Point to the data            00110000
         MVC    ERR1D0(2),=CL2'1 '         In case of an error          00111000
COPY1LOP EXFILES WRITE,(R6),ERROR=TEST1WRI,IOAREA1=(R5)                 00112000
         LA     R4,1(,R4)                  Increment the counter        00113000
         LA     R5,80(R5)                  Point to the next record     00114000
         CLI    0(R5),X'FF'                All done ?                   00115000
         BNZ    COPY1LOP                   No...repeat                  00116000
         EXFILES CLOSE,FILE01              Close the output             00117000
         B      TEST1TEL                   And keep on copying          00118000
*                                                                       00119000
* ------------------- Data Copy Routine ---------------------------     00120000
*                                                                       00121000
TEST2    XR     R3,R3                      Init the input counter       00122000
         XR     R4,R4                      Init the output counter      00123000
         MVC    ERR1D0(2),=CL2'2 '         In case of an error          00124000
COPY2LOP DS     0H                                                      00125000
         EXFILES READ,(R6),EOF=TEST1RED,IOAREA1=IOAREA                  00126000
         LA     R3,1(,R3)                  Increment the counter        00127000
         EXFILES WRITE,FILE02,ERROR=TEST1WRI,IOAREA1=IOAREA             00128000
         LA     R4,1(,R4)                  Increment the counter        00129000
         B      COPY2LOP                   And keep on copying          00130000
*                                                                       00131000
* ------------------- Data Delete Routine ---------------------------   00132000
*                                                                       00133000
TEST3    MVC    ERR1D0(2),=CL2'3 '         In case of an error          00134000
         XR     R3,R3                      Init the input counter       00135000
         XR     R4,R4                      Init the output counter      00136000
         EXFILES DELETE,(R6),ERROR=TEST1WRI                             00137000
         WTO    TEXT=TEST3M                Indicate success             00138000
         BR     R7                         Return to caller             00139000
*                                                                       00140000
TEST3M   DC     AL2(TEST3ML)                                            00141000
         DC     C'Result: File has been deleted'                        00142000
TEST3ML  EQU    *-TEST3M-2                                              00143000
*                                                                       00144000
* ------------------- Data Rename Routine ---------------------------   00145000
*                                                                       00146000
TEST4    MVC    ERR1D0(2),=CL2'4 '         In case of an error          00147000
         EXFILES RENAME,FILE02,ERROR=TEST1WRI,NEWNAME='TEST1.TXT'       00148000
         WTO    TEXT=TEST4M                Indicate success             00149000
         BR     R7                         Return to caller             00150000
*                                                                       00151000
TEST4M   DC     AL2(TEST4ML)                                            00152000
         DC     C'Result: File has been renamed'                        00153000
TEST4ML  EQU    *-TEST4M-2                                              00154000
*                                                                       00155000
* ------------------- Copy LIBR member to POWER member ------------     00156000
*                                                                       00157000
TEST5    XR     R3,R3                      Init the input counter       00158000
         XR     R4,R4                      Init the output counter      00159000
         MVC    ERR1D0(2),=CL2'5 '         In case of an error          00160000
COPY5LOP EXFILES READ,(R6),EOF=TEST1RED,                               X00161000
               IOAREA1=IOAREA,FILENAME='TEST1.TXT'                      00162000
         LA     R3,1(,R3)                  Increment the counter        00163000
         EXFILES WRITE,FILE02,ERROR=TEST1WRI,IOAREA1=PRTBUFF,          X00164000
               FILENAME='POWTEST',SUBDIR='POWER\LST\1',RECSIZE='81'     00165000
         LA     R4,1(,R4)                  Increment the counter        00166000
         B      COPY5LOP                   And keep on copying          00167000
*                                                                       00168000
* ------------------- DIRLIST the LIBR queue -----------------------    00169000
*                                                                       00170000
TEST6    XR     R3,R3                      Init the input counter       00171000
         XR     R4,R4                      Init the output counter      00172000
         MVC    ERR1D0(2),=CL2'6 '         In case of an error          00173000
COPY6LOP EXFILES DIRLIST,(R6),EOF=TEST1RED                              00174000
         WTO    TEXT=MSGH                  Display a line               00175000
         LA     R3,1(,R3)                  Increment the counter        00176000
         B      COPY6LOP                   And keep on copying          00177000
*                                                                       00178000
* ------------------- Copy POWER member to POWER member ------------    00179000
*                                                                       00180000
TEST7    XR     R3,R3                      Init the input counter       00181000
         XR     R4,R4                      Init the output counter      00182000
         MVC    ERR1D0(2),=CL2'7 '         In case of an error          00183000
COPY7LOP DS     0H                                                      00184000
         EXFILES READ,(R6),IOAREA1=PRTBUFF,EOF=TEST1RED,               X00185000
               FILENAME='POWTEST',SUBDIR='POWER\LST\1',RECSIZE='133'    00186000
         LA     R3,1(,R3)                  Increment the counter        00187000
         EXFILES WRITE,FILE02,ERROR=TEST1WRI,IOAREA1=PRTBUFF,          X00188000
               FILENAME='POWCOPY',SUBDIR='POWER\LST\1',RECSIZE='133'    00189000
         LA     R4,1(,R4)                  Increment the counter        00190000
         B      COPY7LOP                   And keep on copying          00191000
*                                                                       00192000
* ------------------- DIRLIST the POWER queue ----------------------    00193000
*                                                                       00194000
TEST9    XR     R3,R3                      Init the input counter       00195000
         XR     R4,R4                      Init the output counter      00196000
         MVC    ERR1D0(2),=CL2'9 '         In case of an error          00197000
COPY9LOP EXFILES DIRLIST,(R6),EOF=TEST1RED,SUBDIR='POWER\LST\ALL'       00198000
         WTO    TEXT=MSGH                  Display a line               00199000
         LA     R3,1(,R3)                  Increment the counter        00200000
         B      COPY9LOP                   And keep on copying          00201000
*                                                                       00202000
* ------------------- Send "D A" to POWER and get response ---------    00203000
*                                                                       00204000
TEST10   XR     R3,R3                      Init the input counter       00205000
         XR     R4,R4                      Init the output counter      00206000
         MVC    ERR1D0(2),=CL2'10'         In case of an error          00207000
         EXFILES SEND_COMMAND,(R6),ERROR=TEST1WRI,COMMAND='D A'         00208000
COPYALOP EXFILES GET_RESPONSE,(R6),EOF=TEST1RED                         00209000
         MVC    IOAREA2(60),IOAREA+10      Copy the useful data         00210000
         WTO    TEXT=MSGP                  Display a line               00211000
         LA     R3,1(,R3)                  Increment the counter        00212000
         B      COPYALOP                   And keep on copying          00213000
*                                                                       00214000
* ------------------- Copy ICCF member to POWER member ------------     00215000
*                                                                       00216000
TEST11   XR     R3,R3                      Init the input counter       00217000
         XR     R4,R4                      Init the output counter      00218000
         MVC    ERR1D0(2),=CL2'11'         In case of an error          00219000
COPYBLOP DS     0H                                                      00220000
         EXFILES READ,(R6),EOF=TEST1RED,FILENAME='LIBR',               X00221000
               SUBDIR='ICCF.LIBRARY\2',USERNAME='LEOL',PASSWORD='LEOL'  00222000
         LA     R3,1(,R3)                  Increment the counter        00223000
         EXFILES WRITE,FILE02,ERROR=TEST1WRI,IOAREA1=PRTBUFF,          X00224000
               FILENAME='POWICCF',SUBDIR='POWER\PUN\1'                  00225000
         LA     R4,1(,R4)                  Increment the counter        00226000
         B      COPYBLOP                   And keep on copying          00227000
*                                                                       00228000
* ------------------- DIRLIST the VSAM catalog ---------------------    00229000
*                                                                       00230000
TEST12   XR     R3,R3                      Init the input counter       00231000
         XR     R4,R4                      Init the output counter      00232000
         MVC    ERR1D0(2),=CL2'12'         In case of an error          00233000
COPYCLOP EXFILES DIRLIST,(R6),EOF=TEST1RED,SUBDIR='IJSYSUC'             00234000
         WTO    TEXT=MSGH                  Display a line               00235000
         LA     R3,1(,R3)                  Increment the counter        00236000
         B      COPYCLOP                   And keep on copying          00237000
*                                                                       00238000
* ------------------- Copy POWER member to VSAM catalog -----------     00239000
*                                                                       00240000
TEST13   XR     R3,R3                      Init the input counter       00241000
         XR     R4,R4                      Init the output counter      00242000
         MVC    ERR1D0(2),=CL2'12'         In case of an error          00243000
COPYDLOP DS     0H                                                      00244000
         EXFILES READ,(R6),EOF=TEST1RED,IOAREA1=PRTBUFF,               X00245000
               FILENAME='POWICCF',SUBDIR='POWER\PUN\1'                  00246000
         LA     R3,1(,R3)                  Increment the counter        00247000
         EXFILES WRITE,FILE02,ERROR=TEST1WRI,IOAREA1=IOAREA,           X00248000
               RECSIZE='80',SUBDIR='IJSYSUC',FILENAME='EXFILES.TEST1'   00249000
         LA     R4,1(,R4)                  Increment the counter        00250000
         B      COPYDLOP                   And keep on copying          00251000
*                                                                       00252000
* ------------------- Copy VSAMCAT member to LIBR -----------           00253000
*                                                                       00254000
TEST14   XR     R3,R3                      Init the input counter       00255000
         XR     R4,R4                      Init the output counter      00256000
         MVC    ERR1D0(2),=CL2'12'         In case of an error          00257000
COPYELOP DS     0H                                                      00258000
         EXFILES READ,FILE02,EOF=TEST1RED                               00259000
         LA     R3,1(,R3)                  Increment the counter        00260000
         EXFILES WRITE,(R6),ERROR=TEST1WRI,IOAREA1=IOAREA,             X00261000
               RECSIZE='80',SUBDIR='PRD2.TCPIPCFG',FILENAME='VTEST.TXT' 00262000
         LA     R4,1(,R4)                  Increment the counter        00263000
         B      COPYELOP                   And keep on copying          00264000
*                                                                       00265000
* ----------------- Append POWER member to VSAM catalog -----------     00266000
*                                                                       00267000
TEST15   XR     R3,R3                      Init the input counter       00268000
         XR     R4,R4                      Init the output counter      00269000
         MVC    ERR1D0(2),=CL2'15'         In case of an error          00270000
COPYFLOP DS     0H                                                      00271000
         EXFILES READ,(R6),EOF=TEST2RED,IOAREA1=PRTBUFF,               X00272000
               FILENAME='POWICCF',SUBDIR='POWER\PUN\1'                  00273000
         LA     R3,1(,R3)                  Increment the counter        00274000
         EXFILES APPEND,FILE02,ERROR=TEST1WRI,IOAREA1=IOAREA,          X00275000
               RECSIZE='80',SUBDIR='IJSYSUC',FILENAME='EXFILES.TEST1'   00276000
         LA     R4,1(,R4)                  Increment the counter        00277000
         B      COPYFLOP                   And keep on copying          00278000
TEST2RED DS     0H                                                      00279000
         WTO    TEXT=TEST2M                Indicate the progress        00280000
         EXFILES CLOSE,FILE02,ERROR=TEST1WRI                            00281000
         XR     R4,R4                      Init this value              00282000
COPYFLP2 EXFILES READ,FILE02,EOF=TEST1RED                               00283000
         LA     R4,1(,R4)                  Increment the count          00284000
         B      COPYFLP2                   And repeat                   00285000
*                                                                       00286000
TEST2M   DC     AL2(TEST2ML)                                            00287000
         DC     C'File copied. About to count the output'               00288000
TEST2ML  EQU    *-TEST2M-2                                              00289000
*                                                                       00290000
* ------------------- VSAM Delete Routine ---------------------------   00291000
*                                                                       00292000
TEST16   MVC    ERR1D0(2),=CL2'16'         In case of an error          00293000
         XR     R3,R3                      Init the input counter       00294000
         XR     R4,R4                      Init the output counter      00295000
         EXFILES DELETE,FILE02,ERROR=TEST1WRI,FILENAME='EXFILES.TEST1'  00296000
         WTO    TEXT=TEST16M               Indicate success             00297000
         BR     R7                         Return to caller             00298000
*                                                                       00299000
TEST16M  DC     AL2(TEST16ML)                                           00300000
         DC     C'Result: VSAM File has been deleted'                   00301000
TEST16ML EQU    *-TEST16M-2                                             00302000
*                                                                       00303000
* ------------------- Output Messages ----------------------------      00304000
*                                                                       00305000
*        WRITE error                                                    00306000
*                                                                       00307000
TEST1WRI MVC    ERRTYPE(6),=C'OUTPUT'      Set the value                00308000
         B      BADIO                      And proceed                  00309000
*                                                                       00310000
*        Read is done.                                                  00311000
*                                                                       00312000
TEST1RED MVC    ERRTYPE(6),=C'INPUT '      Set the value                00313000
         C      R15,=F'4'                  EOF ?                        00314000
         BH     BADIO                      No...proceed                 00315000
         LTR    R0,R0                      Normal ?                     00316000
         BZ     TEST1DON                   Yes...proceed                00317000
*                                                                       00318000
*        Handle errors                                                  00319000
*                                                                       00320000
BADIO    CVD    R15,DBLWORK                Get the return code          00321000
         UNPK   ERR1D1(3),DBLWORK+6(2)     Unpack it                    00322000
         OI     ERR1D1+2,X'F0'             Reset the sign               00323000
         CVD    R0,DBLWORK                 Get the return code          00324000
         UNPK   ERR1D2(3),DBLWORK+6(2)     Unpack it                    00325000
         OI     ERR1D2+2,X'F0'             Reset the sign               00326000
         WTO    TEXT=ERR1                  Dsplay the message           00327000
*                                                                       00328000
* ---------------- End of test. Output statistics. Close output file.   00329000
*                                                                       00330000
TEST1DON LTR    R4,R4                      Any data copied ?            00331000
         BNP    TEST1TEL                   No...tell us                 00332000
         EXFILES CLOSE,FILE02              Close the output             00333000
TEST1TEL CVD    R3,DBLWORK                 Convert the number           00334000
         UNPK   MSG1D1(5),DBLWORK+5(3)     Unpack it                    00335000
         OI     MSG1D1+4,X'F0'             Reset the sign               00336000
         CVD    R4,DBLWORK                 Convert the number           00337000
         UNPK   MSG1D2(5),DBLWORK+5(3)     Unpack it                    00338000
         OI     MSG1D2+4,X'F0'             Reset the sign               00339000
         WTO    TEXT=MSG1B                 And display the counts       00340000
         BR     R7                         And exit                     00341000
*                                                                       00342000
* Example of how to generate a dynamic XFIBLOK                          00343000
*                                                                       00344000
DYNAMIC  DS     0H                                                      00345000
         DTFXFILE FILENAME='TEST1.TXT',RECSIZE='80',IOAREA1=IOAREA,    *00346000
               USERNAME='LEO',PASSWORD='SECRET',SUBDIR='PRD2.TCPIPCFG',*00347000
               TYPE=GEN                                                 00348000
         LTR   R15,R15                     Did it work ?                00349000
         BNZ   DYNFAIL                     No...error                   00350000
         LR    R6,R1                       Save the pointer             00351000
         BZR   R7                          Yes...return to caller       00352000
DYNFAIL  WTO   TEXT=DYNM                   Indicate the problem         00353000
         LA    R15,4                       Indicate a problem           00354000
         BR    R7                          Return to caller             00355000
*                                                                       00356000
DYNM     DC     AL2(DYNML)                                              00357000
         DC     C'*** ERROR: UNABLE TO ACQUIRE GETVIS ***'              00358000
DYNML    EQU    *-DYNM-2                                                00359000
*                                                                       00360000
* Terminate the interface and exit                                      00361000
*                                                                       00362000
EXIT     DS    0H                                                       00363000
         EXFILES SHUTDOWN                  Terminate the subtask(s)     00364000
JUMPOUT  AMODESW SET,AMODE=24              Needed by VSE                00365000
         SUBRT   RC=0                      Return to VSE                00366000
*                                                                       00367000
* Working Storage -----------------------------------------             00368000
*                                                                       00369000
FILE01   DTFXFILE FILENAME='TEST1.TXT',RECSIZE='80',IOAREA1=IOAREA,    *00370000
               USERNAME='LEO',PASSWORD='SECRET',SUBDIR='PRD2.TCPIPCFG'  00371000
*                                                                       00372000
FILE02   DTFXFILE FILENAME='COPY.TXT',IOAREA1=IOAREA,RECSIZE='80',     *00373000
               USERNAME='LEO',PASSWORD='SECRET',SUBDIR='PRD2.TCPIPCFG'  00374000
*                                                                       00375000
DBLWORK  DS      D                         Work field                   00376000
                                                                        00377000
MSGP     DC      AL2(60)                                                00378000
IOAREA2  DC      CL80' '                                                00379000
*                                                                       00380000
MSGH     DC      AL2(60)                                                00381000
PRTBUFF  DC      C' '                                                   00382000
IOAREA   DS      CL256                     I/O Buffer                   00383000
*                                                                       00384000
*                                                                       00385000
MSG1     DC      AL2(MSG1L)                                             00386000
         DC      C'TEST1: Create the LIBR work file'                    00387000
MSG1L    EQU     *-MSG1-2                                               00388000
MSG2     DC      AL2(MSG2L)                                             00389000
         DC      C'TEST2: Copy one LIBR member to another'              00390000
MSG2L    EQU     *-MSG2-2                                               00391000
MSG3     DC      AL2(MSG3L)                                             00392000
         DC      C'TEST3: Delete the LIBR work file'                    00393000
MSG3L    EQU     *-MSG3-2                                               00394000
MSG4     DC      AL2(MSG4L)                                             00395000
         DC      C'TEST4: Rename new LIBR file to old name'             00396000
MSG4L    EQU     *-MSG4-2                                               00397000
MSG5     DC      AL2(MSG5L)                                             00398000
         DC      C'TEST5: Copy the LIBR file to the POWER queue'        00399000
MSG5L    EQU     *-MSG5-2                                               00400000
MSG6     DC      AL2(MSG6L)                                             00401000
         DC      C'TEST6: DIRLIST the LIBR queue'                       00402000
MSG6L    EQU     *-MSG6-2                                               00403000
MSG7     DC      AL2(MSG7L)                                             00404000
         DC      C'TEST7: Copy POWER member into POWER member'          00405000
MSG7L    EQU     *-MSG7-2                                               00406000
MSG8     DC      AL2(MSG8L)                                             00407000
         DC      C'TEST8: Delete original POWER member'                 00408000
MSG8L    EQU     *-MSG8-2                                               00409000
MSG9     DC      AL2(MSG9L)                                             00410000
         DC      C'TEST9: DIRLIST the POWER Queue'                      00411000
MSG9L    EQU     *-MSG9-2                                               00412000
MSG10    DC      AL2(MSG10L)                                            00413000
         DC      C'TEST10: Issue a POWER command: D A'                  00414000
MSG10L   EQU     *-MSG10-2                                              00415000
MSG11    DC      AL2(MSG11L)                                            00416000
         DC      C'TEST11: Copy from ICCF to POWER'                     00417000
MSG11L   EQU     *-MSG11-2                                              00418000
MSG12    DC      AL2(MSG12L)                                            00419000
         DC      C'TEST12: DIRLIST the VSAM catalog'                    00420000
MSG12L   EQU     *-MSG12-2                                              00421000
MSG13    DC      AL2(MSG13L)                                            00422000
         DC      C'TEST13: Copy from POWER to VSAM catalog'             00423000
MSG13L   EQU     *-MSG13-2                                              00424000
MSG14    DC      AL2(MSG14L)                                            00425000
         DC      C'TEST14: Copy from VSAMCAT the LIBR'                  00426000
MSG14L   EQU     *-MSG14-2                                              00427000
MSG15    DC      AL2(MSG15L)                                            00428000
         DC      C'TEST15: Append data to the VSAM file'                00429000
MSG15L   EQU     *-MSG15-2                                              00430000
MSG16    DC      AL2(MSG16L)                                            00431000
         DC      C'TEST16: Delete the VSAM dataset'                     00432000
MSG16L   EQU     *-MSG16-2                                              00433000
*                                                                       00434000
MSG1B    DC      AL2(MSG1BL)                                            00435000
         DC      C'Result: Input='                                      00436000
MSG1D1   DC      CL5' ',C'  Output='                                    00437000
MSG1D2   DC      CL5' '                                                 00438000
MSG1BL   EQU     *-MSG1B-2                                              00439000
*                                                                       00440000
ERR1     DC      AL2(ERR1L)                                             00441000
ERRTYPE  DC      C'INPUT  ERROR. TEST='                                 00442000
ERR1D0   DC      CL2' ',C'  RC='                                        00443000
ERR1D1   DC      CL3' ',C'  Reason='                                    00444000
ERR1D2   DC      CL3' '                                                 00445000
ERR1L    EQU     *-ERR1-2                                               00446000
*                                                                       00447000
*                                                                       00448000
DATA     DC      CL80'RECORD 1'                                         00449000
         DC      CL80'RECORD 2'                                         00450000
         DC      CL80'RECORD 3'                                         00451000
         DC      CL80'RECORD 4'                                         00452000
         DC      CL80'RECORD 5'                                         00453000
         DC      CL80'RECORD 6'                                         00454000
         DC      CL80'RECORD 7'                                         00455000
         DC      CL80'RECORD 8'                                         00456000
         DC      CL80'RECORD 9'                                         00457000
         DC      CL80'RECORD 10'                                        00458000
         DC      X'FF'                                                  00459000
*                                                                       00460000
* -------------- Dummy Section(s)                                       00461000
*                                                                       00462000
         EXFILES DSECT                     Layout of the control block  00463000
         END     TESTXIO                   End of program               00464000
