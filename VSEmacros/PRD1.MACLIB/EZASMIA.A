.*------------------------------------------------------------*         EZA00010
.*                                            October 1992 RS *         EZA00020
.* Macro name:                                                *         EZA00030
.*      EZASMIA                                               *         EZA00040
.*                                                            *         EZA00050
.* COPYRIGHT:                                                 *         EZA00060
.*   LICENSED MATERIALS - PROPERTY OF IBM                     *         EZA00070
.*   THIS PRODUCT CONTAINS "RESTRICTED MATERIALS OF IBM"      *         EZA00080
.*   5655-HAL (C) COPYRIGHT IBM CORP. 1993.                   *         EZA00090
.*   ALL RIGHTS RESERVED.                                     *         EZA00100
.*   US GOVERNMENT USERS RESTRICTED RIGHTS -                  *         EZA00110
.*   USE, DUPLICATION OR DISCLOSURE RESTRICTED BY GSA ADP     *         EZA00120
.*   SCHEDULE CONTRACT WITH IBM CORP.                         *         EZA00130
.*   SEE IBM COPYRIGHT INSTRUCTIONS.                          *         EZA00140
.*                                                            *         EZA00150
.* Function:                                                  *         EZA00160
.*      Analyze two mutually exclusive  parameters presented  *         EZA00170
.*      to EZASMI and place the correct address in R0.        *         EZA00180
.*      This macro does not handle arguments than can have    *         EZA00190
.*      values.                                               *         EZA00200
.*      MACRO ARGUMENTS                                       *         EZA00210
.*      &VALU - field being analyzed.                         *         EZA00220
.*                                                            *         EZA00230
.*                                                            *         EZA00240
.*------------------------------------------------------------*         EZA00250
         MACRO                                                          EZA00260
         EZASMIA &VALU1,&VALU2,&NAME1,&NAME2                            EZA00270
         LCLC  &TEMPCH                                                  EZA00280
         AIF   (K'&VALU1 NE 0).N0000 Check for no value specified       EZA00290
         AIF   (K'&VALU2 NE 0).N0010 Check for no value specified       EZA00300
         SLR   0,0                No field specified                    EZA00310
         AGO   .N0020                                                   EZA00320
.N0000   ANOP                                                           EZA00330
         AIF   (K'&VALU2 EQ 0).N0000A Check for second value            EZA00340
.*                                specified                             EZA00350
         MNOTE 4,'EZASMnnn &NAME1 and &NAME2 not valid together, &NAME1XEZA00360
                used.'                                                  EZA00370
.N0000A  ANOP                                                           EZA00380
         AIF   ('&VALU1'(1,1) NE '(').N0001 Was address in register     EZA00390
         LR    0,&VALU1           Put address of field in Reg 0         EZA00400
         AGO   .N0020                                                   EZA00410
.N0001   ANOP                                                           EZA00420
         AIF   ('&VALU1'(1,1) NE '*').N0002 Using indirect addressing?  EZA00430
&TEMPCH  SETC  '&VALU1'(2,K'&VALU1-1)     Get field name                EZA00440
         L     0,&TEMPCH          Put address of field in Reg 0         EZA00450
         AGO   .N0020                                                   EZA00460
.N0002   ANOP                                                           EZA00470
         LA    0,&VALU1           Put address of field in Reg 0         EZA00480
         AGO   .N0020                                                   EZA00490
.N0010   ANOP                                                           EZA00500
         AIF   ('&VALU2'(1,1) NE '(').N0011 Was address in register     EZA00510
         LR    0,&VALU2           Put address of field in Reg 0         EZA00520
         AGO   .N0020                                                   EZA00530
.N0011   ANOP                                                           EZA00540
         AIF   ('&VALU2'(1,1) NE '*').N0012 Using indirect addressing?  EZA00550
&TEMPCH  SETC  '&VALU2'(2,K'&VALU2-1)     Get field name                EZA00560
         L     0,&TEMPCH          Put address of field in Reg 0         EZA00570
         AGO   .N0020                                                   EZA00580
.N0012   ANOP                                                           EZA00590
         LA    0,&VALU2           Put address of field in Reg 0         EZA00600
.N0020   ANOP                                                           EZA00610
         MEND                                                           EZA00620
