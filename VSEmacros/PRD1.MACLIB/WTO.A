* %/*                                                          @ZMC0828 00025000
         MACRO                                                          00050000
&NAME    WTO   &MESG,&MF=I,&ROUTCDE=,&DESC=,&MSGTYP=,&MCSFLAG=,&QID=,  X00100000
               &AREAID=,&SUBSMOD=,&CONNECT=¬,&CONSID=¬,&JOBID=¬,       X00150000
               &JOBNAME=¬,&KEY=¬,&TOKEN=¬,&PRTY=¬,&SYSNAME=¬,          X00200000
               &WQEBLK=¬,&CONSNAME=¬,&CART=¬,&TEXT=¬,&LINKAGE=¬,       +00250000
               &SYNCH=¬,&WSPARM=¬                                  @01C 00300000
.********************************************************************** 03350000
.*                                                             @G64DPSS 03390600
.* MACRO NAME= WTO                                             @G860PSS 03431200
.*                                                             @G860PSS 03471800
.* DESCRIPTIVE NAME= WRITE TO OPERATOR (WTO)                   @G860PSS 03512400
.*                                                             @G860PSS 03553000
.* COPYRIGHT =                                                     @L3C 03593600
.*             5695-047                                            @L6C 03634200
.*             THIS MODULE IS "RESTRICTED MATERIALS OF IBM"             03674800
.*             (C) COPYRIGHT IBM CORP. 1981, 1990                       03715400
.*             LICENSED MATERIALS -PROPERTY OF IBM                      03756000
.*                                                                      03796600
.* STATUS    = HBB4410                                             @02C 03837200
.*                                                                      03877800
.* INVOCATION =                                                    @L2C 03918400
.*             SPECIFY:   WTO MESG,ROUTCDE=,DESC=,MSGTYP=,     @G64DPSS 03959000
.*                            MCSFLAG=,QID=,AREAID=,MF=,           @L2C 03999600
.*                            CONNECT=,CONSID=,JOBID=,             @D2C 04040200
.*                            PRTY=,KEY=,TOKEN=,SYSNAME=,          @L2A 04080800
.*                            SUBSMOD=,JOBNAME=,                   @01C 04121400
.*                            CONSNAME=,CART=,TEXT=,LINKAGE=,      @L6C 04162000
.*                            SYNCH=,WSPARM=                       @L6A 04202600
.*                                                                      04243200
.*                                     OR                          @L2A 04283800
.*                                                                      04324400
.*                        WTO WQEBLK=                              @L2A 04365000
.*                                                                      04405600
.*              WHERE:                                         @G64DPSS 04446200
.*                MESG     THE MESSAGE TEXT FOR A SINGLE OR    @G64DPSS 04486800
.*                         MULTIPLE LINE MESSAGE TO BE         @G64DPSS 04527400
.*                         WRITTEN.                            @G64DPSS 04568000
.*                ROUTCDE= ROUTING CODES TO BE ASSIGNED TO THE @G64DPSS 04608600
.*                         MESSAGE.                            @G64DPSS 04649200
.*                                                             @G64DPSS 04689800
.*                DESC=    DESCRIPTOR CODES TO BE ASSIGNED TO  @G64DPSS 04730400
.*                         THE MESSAGE.                        @G64DPSS 04771000
.*                                                             @G64DPSS 04811600
.*                MSGTYP=  SPECIFIES HOW THE MESSAGE IS TO BE  @G64DPSS 04852200
.*                         ROUTED. VALID VALUES ARE:           @G64DPSS 04892800
.*                           N, Y, SESS, JOBNAMES, STATUS      @G64DPSS 04933400
.*                                                             @G64DPSS 04974000
.*                MCSFLAG= SPECIFIES ATTRIBUTES OF THE         @G64DPSS 05014600
.*                         MESSAGE. VALID VALUES ARE:          @G64DPSS 05055200
.*                           REG0, RESP, REPLY, BRDCST,        @G64DPSS 05095800
.*                           HRDCPY, QREG0, NOTIME, CMD, NOCPY,    @L2C 05136400
.*                           BUSYEXIT                              @D2C 05177000
.*                                                             @G64DPSS 05217600
.*                QID=     REMOTE ENTRY SERVICES (RSS) QUEUE   @G64DPSS 05258200
.*                         ID (OS/VS1 ONLY).                   @G64DPSS 05298800
.*                                                             @G64DPSS 05339400
.*                AREAID=  SPECIFIES A DISPLAY AREA ON THE     @G64DPSS 05380000
.*                         CONSOLE WHERE THE MESSAGE IS TO BE  @G64DPSS 05420600
.*                         WRITTEN.                            @G64DPSS 05461200
.*                                                             @G64DPSS 05501800
.*                MF=      SPECIFIES THE TYPE OF EXPANSION     @G64DPSS 05542400
.*                         REQUIRED. VALID VALUES ARE:         @G64DPSS 05583000
.*                           I, L, E                           @G64DPSS 05623600
.*                         IF NOT SPECIFIED, OR SPECIFIED WITHOUT  @L2A 05664200
.*                         DATA, STANDARD FORM (I-INLINE)          @L2A 05704800
.*                         ASSUMED.                                @L2A 05745400
.*                                                             @G64DPSS 05786000
.*                CONNECT= SPECIFIES THE 4-BYTE MESSAGE NUMBER     @L2A 05826600
.*                         OF THE MULTI-LINE WTO THAT THIS         @L2A 05867200
.*                         WTO IS TO BE CONNECTED TO.  IF A        @L2A 05907800
.*                         REGISTER IS USED, THE REGISTER          @L2A 05948400
.*                         CONTAINS THE MESSAGE NUMBER.  THIS      @L2A 05989000
.*                         KEYWORD IS MUTUALLY EXCLUSIVE WITH      @L2A 06029600
.*                         THE CONSID, CONSNAME AND                @01C 06070200
.*                         SYSNAME KEYWORDS.                       @L2A 06110800
.*                         ONLY VALID FOR CONTINUATION OF          @L2A 06151400
.*                         MULTI-LINE MESSAGES.                    @L2A 06192000
.*                                                                      06232600
.*                CONSID=  SPECIFIES THE 4-BYTE ID OF THE          @L2A 06273200
.*                         CONSOLE TO RECEIVE A MESSAGE.           @L2A 06313800
.*                         IF A REGISTER IS USED, THE REGISTER     @L2A 06354400
.*                         CONTAINS THE 4-BYTE ID.                 @L2A 06395000
.*                         THIS KEYWORD IS MUTUALLY EXCLUSIVE      @L2A 06435600
.*                         WITH THE CONNECT AND CONSNAME KEYWORD.  @L3C 06476200
.*                                                                      06516800
.*              CONSNAME=  SPECIFIES THE 8-BYTE NAME OF THE        @L3A 06557400
.*                         CONSOLE TO RECEIVE A MESSAGE.           @L3A 06598000
.*                         IF A REGISTER IS USED, THE REGISTER     @L3A 06638600
.*                         CONTAINS THE ADDRESS OF THE 8-BYTE      @L3A 06679200
.*                         CONSOLE NAME.                           @L3A 06719800
.*                         THIS KEYWORD IS MUTUALLY EXCLUSIVE      @L3A 06760400
.*                         WITH THE CONNECT AND CONSNAME KEYWORD.  @L3A 06801000
.*                                                                      06841600
.*                JOBID=   SPECIFIES THE 8-BYTE ID WITH WHICH      @L2A 06882200
.*                         THE JES IDENTIFIES THE ISSUER OF        @L2A 06922800
.*                         THIS WTO.  THE KEYWORD IS FOR USE BY    @L2A 06963400
.*                         JES2 AND JES3.  IF A REGISTER IS USED,  @L2A 07004000
.*                         THE REGISTER CONTAINS THE ADDRESS OF    @L2A 07044600
.*                         THE 8-BYTE ID.                          @L2A 07085200
.*                                                                      07125800
.*                JOBNAME= SPECIFIES THE 8-BYTE NAME WITH WHICH    @L2A 07166400
.*                         THE JES IDENTIFIES THE ISSUER OF        @L2A 07207000
.*                         THIS WTO.  THE KEYWORD IS FOR USE BY    @L2A 07247600
.*                         JES2 AND JES3.  IF A REGISTER IS USED   @L2A 07288200
.*                         THE REGISTER CONTAINS THE ADDRESS OF    @L2A 07328800
.*                         THE 8-BYTE NAME.                        @L2A 07369400
.*                                                                      07410000
.*                SUBSMOD= INDICATES WHETHER THE CHARACTERISTICS   @L2A 07450600
.*                         OF THE MESSAGE ISSUED MAY BE CHANGED    @L2A 07491200
.*                         BY THE PRIMARY SUBSYSTEM.               @L2A 07531800
.*                         THE VALID VALUES ARE:                   @L2A 07572400
.*                                  YES - THIS IS THE DEFAULT      @L2A 07613000
.*                                  NO                             @L2A 07653600
.*                                                                      07694200
.*                PRTY=    SPECIFIES THE 2-BYTE PRIORITY TO BE     @L2A 07734800
.*                         ASSIGNED TO THIS MESSAGE. IF A          @L2A 07775400
.*                         REGISTER IS USED, THE 2 RIGHTMOST       @L2A 07816000
.*                         BYTES OF THE REGISTER CONTAIN THE       @L2A 07856600
.*                         2-BYTE VALUE.                           @L2A 07897200
.*                                                                      07937800
.*                KEY=     SPECIFIES AN 8-BYTE KEY TO BE           @L2A 07978400
.*                         ASSOCIATED WITH THIS MESSAGE.  IF A     @L2A 08019000
.*                         REGISTER IS USED, THE REGISTER          @L2A 08059600
.*                         SPECIFIES THE ADDRESS OF THE 8-BYTE     @L2A 08100200
.*                         KEY.                                    @L2A 08140800
.*                                                                      08181400
.*                TOKEN=   SPECIFIES A 4-BYTE TOKEN TO BE          @L2A 08222000
.*                         ASSOCIATED WITH THIS MESSAGE.  THE      @L2A 08262600
.*                         FIELD IS USED TO IDENTIFY A GROUP       @L2A 08303200
.*                         OF MESSAGES THAT CAN BE DELETED BY      @L2A 08343800
.*                         TOKEN.  THE TOKEN SHOULD BE UNIQUE      @L2A 08384400
.*                         WITHIN AN ADDRESS SPACE. IF A REGISTER  @L2A 08425000
.*                         IS USED, THE REGISTER CONTAINS THE      @L2A 08465600
.*                         4-BYTE VALUE.                           @L2A 08506200
.*                                                                      08546800
.*                SYSNAME= SPECIFIES AN 8-BYTE SYSTEM NAME TO BE   @L2A 08587400
.*                         ASSIGNED TO THIS MESSAGE.  IT IS THE    @L2A 08628000
.*                         SYSTEM NAME OF WHERE THIS WTO           @L2A 08668600
.*                         ORIGINATED.  IF A REGISTER IS           @L2A 08709200
.*                         USED, THE REGISTER CONTAINS THE         @L2A 08749800
.*                         ADDRESS OF THE 8-BYTE NAME. THIS        @L2A 08790400
.*                         KEYWORD IS MUTUALLY EXCLUSIVE WITH      @L2A 08831000
.*                         THE CONNECT KEYWORD.                    @L2A 08871600
.*                                                                      08912200
.*                CART=    SPECIFIES THE 4-BYTE ADDRESS OF AN      @L4A 08952800
.*                         EIGHT BYTE COMMAND AND RESPONSE TOKEN   @L4A 08993400
.*                         TO BE ASSOCIATED WITH THIS MESSAGE. THE @L4A 09034000
.*                         CART IS USED TO ASSOCIATE A WTO         @L4A 09074600
.*                         RESPONSE WITH THE ORIGINATING COMMAND.  @L4A 09115200
.*                         IF A REGISTER IS USED, THE REGISTER     @L4A 09155800
.*                         CONTAINS THE 4-BYTE ADDRESS VALUE.      @L4A 09196400
.*                         IF AN 8-BYTE FIELD IS USED, THE ADDRESS @L4A 09237000
.*                         OF THE FIELD IS STORED IN THE WPL.      @L4A 09277600
.*                                                                      09318200
.*                TEXT=    SPECIFIES A DATA AREA                   @PEA 09358800
.*                         CONTAINING A 2 BYTE MESSAGE LENGTH      @L5A 09399400
.*                         FIELD FOLLOWED BY THE ACTUAL MESSAGE    @L5A 09440000
.*                         TEXT. IF A REGISTER IS USED, THE        @L5A 09480600
.*                         REGISTER CONTAINS THE ADDRESS OF THE    @L5A 09521200
.*                         DATA AREA. IF A FIELD IS USED, THE      @L5A 09561800
.*                         ADDRESS OF THE FIELD IS STORED IN       @L5A 09602400
.*                         THE WPL. THE TEXT KEYWORD IS            @L5A 09643000
.*                         MUTUALLY EXCLUSIVE WITH INLINE          @L5A 09683600
.*                         MESSAGE TEXT. EITHER TEXT OR INLINE     @L5A 09724200
.*                         TEXT (BUT NOT BOTH) IS REQUIRED ON      @L5A 09764800
.*                         THE STANDARD OR LIST FORM OF WTO.       @L5A 09805400
.*                                                                 @L5A 09846000
.*                WQEBLK=  SPECIFIES A WQE CONTROL BLOCK TO BE     @L2A 09886600
.*                         USED AS INPUT FOR THE WTO.  IF A        @L2A 09927200
.*                         REGISTER IS USED, THE REGISTER          @L2A 09967800
.*                         SPECIFIES THE ADDRESS OF THE WQE        @L2A 10008400
.*                         CONTROL BLOCK TO BE USED AS INPUT TO    @L2A 10049000
.*                         THE WTO.  THIS KEYWORD IS MUTUALLY      @L2A 10089600
.*                         EXCLUSIVE WITH ALL OTHER KEYWORDS.      @L2A 10130200
.*                         THIS KEYWORD IS ONLY VALID ON THE       @L2A 10170800
.*                         STANDARD FORM (MF=I) OF THE MACRO.      @L2A 10211400
.*                         STANDARD FORM OF THE MACRO.             @L2A 10252000
.*                                                                      10292600
.*               LINKAGE=  SPECIFIES HOW CONTROL IS TO PASS TO THE @L6A 10333200
.*                         WTO FUNCTION.                           @L6A 10373800
.*                         THE VALID VALUES ARE-                   @L6A 10414400
.*                              BRANCH                             @L6A 10455000
.*                              SVC - THIS IS THE DEFAULT          @L6A 10495600
.*                                                                      10536200
.*                 SYNCH=  SPECIFIES WHETHER THE WTO REQUEST IS TO @L6A 10576800
.*                         BE PROCESSED SYNCHRONOUSLY WITH RESPECT @L6A 10617400
.*                         TO THE CALLER.  "SYNCH=YES" IS MUTUALLY @L6A 10658000
.*                         EXCLUSIVE WITH THE CONNECT, AREAID,     @L6A 10698600
.*                         KEYWORDS AND WITH "MCSFLAG=HRDCPY"      @L6A 10739200
.*                         THE VALID VALUES ARE-                   @L6A 10779800
.*                              YES                                @L6A 10820400
.*                              NO  - THIS IS THE DEFAULT          @L6A 10861000
.*                                                                      10901600
.*                WSPARM=  SPECIFIES WHETHER A WAIT STATE IS       @L6A 10942200
.*                         ASSOCIATED WITH THE MESSAGE. IF NO      @L6A 10982800
.*                         WAIT STATE IS ASSOCIATED WITH THE       @L6A 11023400
.*                         MESSAGE THE VALUE WILL BE 0 (THE        @L6A 11064000
.*                         DEFAULT).  IF A NON-ZERO VALUE IS       @L6A 11104600
.*                         SPECIFIED THEN IT IS EITHER THE         @L6A 11145200
.*                         ADDRESS OF THE WAIT STATE PARAMETER     @L6A 11185800
.*                         LIST OR A REGISTER CONTAINING A         @L6A 11226400
.*                         POINTER TO THE PARAMETER LIST.          @L6A 11267000
.*                         WSPARM REQUIRES SYNCH=YES.              @L6A 11307600
.*                                                                      11350000
.*                                                                      11400000
.* FUNCTION =                                                      @L2C 11402600
.*      BUILDS A WRITE TO OPERATOR PARAMETER LIST              @G64DPSS 11405200
.*      (WPL) AND/OR THE CODE WHICH WILL INVOKE SVC 35         @G64DPSS 11407800
.*      OR A BRANCH ENTRY WTO TO ISSUE THE MESSAGE.                @L6C 11410400
.*                                                             @G64DPSS 11413000
.* OPERATION =                                                     @L2A 11415600
.*      - PERFORM APPROPRIATE PARAMETER LIST GENERATION IF         @L2A 11418200
.*           WQEBLK KEYWORD IS SPECIFIED                           @L2A 11420800
.*      - IF EXECUTE FORM SPECIFIED, INSERT RUN-TIME KEYWORD       @L2A 11423400
.*           VALUES INTO THE ALREADY-EXISTING PARAMETER LIST       @L2A 11426000
.*      - IF NO NEW OR CHANGED KEYWORDS SPECIFIED, GENERATE        @L2A 11428600
.*           STANDARD FORM OF THE WPL                              @L2A 11431200
.*      - GENERATE AN EXTENDED FORMAT WPL (WPX) WHEN ANY           @L2A 11433800
.*           NEW OR CHANGED KEYWORDS ARE SPECIFIED.                @L2A 11436400
.*      - IF THIS IS A MULTI-LINE WTO, GENERATE THE MULTI-LINE     @L2A 11439000
.*           SECTION OF THE WPL                                    @L2A 11441600
.*      - IF LINKAGE=BRANCH WAS SPECIFIED GENERATE CODE FOR BRANCH @L6A 11444200
.*           ENTRY TO IEAVBWTO.  OTHERWISE ISSUE THE SVC.          @L6A 11446800
.*                                                                      11450000
.* USAGE =                                                         @L2A 11500000
.*      ANY PROGRAM MAY USE THIS MACRO TO BUILD THE WTO            @L2A 11550000
.*      PARAMETER LIST.  HOWEVER, WQEBLK, JOBID, SYSNAME,          @L2A 11600000
.*      JOBNAME, SUBSMOD, PRTY, LINKAGE, SYNCH, AND                @01C 11650000
.*      WSPARM ARE FOR CONTROL PROGRAM USE ONLY.                   @L6C 11700000
.*                                                                      13400000
.* RESTRICTIONS =                                                  @PFA 13414400
.*                                                                 @PFA 13428800
.*    "LINKAGE" SPECIFIED AS OR DEFAULTED TO "SVC" REQUIRES        @PFA 13443200
.*      THE CALLER TO:                                             @PFA 13457600
.*      - BE IN TASK MODE                                          @PFA 13472000
.*      - HOLD NO LOCKS                                            @PFA 13486400
.*      - BE ENABLED FOR INTERRUPTS                                @PFA 13500800
.*      - BE IN PRIMARY ASC MODE                                   @PFA 13515200
.*      - BE IN NON-CROSS-MEMORY MODE                              @PFA 13529600
.*      - "AUTHORIZED" PARAMETERS REQUIRE SUPERVISOR STATE,        @PFA 13544000
.*         PROTECT KEY 0-7.                                        @PFA 13558400
.*                                                                 @PFA 13572800
.*    "LINKAGE=BRANCH" CAN BE USED-                                @PFA 13587200
.*      WHEN IN SRB MODE-                                          @PFA 13601600
.*        A WTO ISSUED FROM SRB MODE WILL NOT HAVE A JOBNAME OR    @PFA 13616000
.*        JOBID ASSOCIATED WITH IT.                                @PFA 13630400
.*        IT WILL NOT BE AUTOMATICALLY DOM'D WHEN THE TASK ENDS.   @PFA 13644800
.*      WHEN DISABLED FOR INTERRUPTS-                              @PFA 13659200
.*        WTO PARAMETER LIST AND ALL STORAGE ADDRESSED BY IT       @PFA 13673600
.*        MUST BE IN FIXED OR DREF STORAGE.                        @PFA 13688000
.*      WHEN LOCKS HELD                                            @PFA 13702400
.*      WHEN THE PRIMARY ADDRESS SPACE IS NOT THE SAME AS          @PFA 13716800
.*      THE HOME ADDRESS SPACE-                                    @PFA 13731200
.*        CALLER MUST BE IN PRIMARY ASC MODE.                      @PFA 13745600
.*                                                                 @PFA 13760000
.*    IF "LINKAGE=BRANCH" IS SPECIFIED-                            @PFA 13774400
.*        WQEBLK KEYWORD CANNOT BE SPECIFIED, ABEND IF ATTEMPTED   @PFA 13788800
.*        MESSAGE TEXT MAY NOT CONTAIN DBCS DATA.                  @PFA 13803200
.*        CALLER MUST BE IN SUPERVISOR STATE, PROTECT KEY 0-7.     @PFA 13817600
.*        CALLER MUST BE IN PRIMARY ASC MODE.                      @PFA 13832000
.*                                                                 @PFA 13846400
.*    IF "WSPARM" IS SPECIFIED AS NONZERO-                         @PFA 13860800
.*        "LINKAGE=BRANCH" RESTRICTIONS APPLY, PLUS                @PFA 13875200
.*         ALL INPUT STORAGE MUST BE FIXED. (WTO PARAMETER         @PFA 13889600
.*         LIST AND ANY STORAGE ADDRESSESED BY IT, SUCH AS         @PFA 13904000
.*         TEXT DATA OR CART, PLUS THE LOADWAIT PARAMETER          @PFA 13918400
.*         LIST POINTED TO BY WSPARM).                             @PFA 13932800
.*                                                                      13950000
.* DEPENDENCIES =                                                  @L2A 13984000
.*      - LIST AND EXECUTE FORM MUST REFERENCE THE SAME VERSION    @L2A 14018000
.*           OF THE PARAMETER LIST (WPL)                           @L2A 14052000
.*      - THE LENGTH OF THE WPX IS MAINTAINED IN A ONE BYTE FIELD  @L5A 14086000
.*        WITHIN THE WPX. WHENEVER THE LENGTH OF THE WPX CHANGES   @L5A 14120000
.*        THIS FIELD MUST BE UPDATED.                              @L5A 14154000
.*                                                                      14188000
.* MODULE TYPE = MACRO                                             @L2A 14222000
.*                                                                      14256000
.* ENTRY POINT = N/A                                               @L2A 14290000
.*                                                                      14324000
.* INPUT = SEE INVOCATION                                          @L2A 14358000
.*                                                                      14392000
.* OUTPUT =                                                        @L2A 14426000
.*      PARAMETER LIST TO ISSUE SVC 35 OR BALR AND/OR THE          @L6C 14460000
.*      INSTRUCTIONS REQUIRED TO MODIFY THE PARAMETER              @L2A 14494000
.*      LIST AND ISSUE SVC 35 OR BALR TO IEAVBWGL.                 @L6A 14528000
.*                                                                      14562000
.* EXIT, NORMAL                                                    @L2A 14596000
.*   CONDITION - NO ERRORS DETECTED BY THE WTO MACRO               @L2A 14630000
.*   OUTPUT    - NO MNOTE ISSUED. SEVERITY CODE = 0                @L2A 14664000
.*                                                                      14698000
.* EXIT, NORMAL                                                    @L2A 14732000
.*   CONDITION - INFORMATIONAL MNOTE CONDITION DETECTED BY THE     @L2A 14766000
.*                 WTO MACRO                                       @L2A 14800000
.*   OUTPUT    - MNOTE WITH SEVERITY CODE 0 ISSUED WHEN:           @L6C 14834000
.*                .DATA IS SPECIFIED FOR A RUN-TIME KEYWORD ON A   @L6C 14868000
.*                 LIST FORM INVOCATION. THE DATA IS IGNORED.      @L2A 14902000
.*                .LINE TYPE DATA IS SPECIFIED WITH THE TEXT       @PKA 14936000
.*                 KEYWORD ON AN EXECUTE FORM INVOCATION.          @PKA 14970000
.*                 THE LINE TYPE DATA IS IGNORED.                  @PKA 15004000
.*                .A LINE OF INLINE TEXT IS LONGER THAN THE        @PMM 15038000
.*                   DOCUMENTED ALLOWED MAXIMUM LENGTH.            @PMM 15072000
.*                                                                      15106000
.* EXIT, NORMAL                                                    @L2A 15140000
.*   CONDITION - WARNING CONDITION DETECTED BY THE WTO MACRO       @L2A 15174000
.*   OUTPUT    - MNOTE WITH SEVERITY CODE 4 ISSUED WHEN:           @L2A 15208000
.*                .A RUN-TIME KEYWORD IS SPECIFIED WITHOUT DATA    @L2A 15242000
.*                   DURING A STANDARD OR EXECUTE FORM INVOCATION. @L2A 15276000
.*                   THE KEYWORD IS IGNORED.                       @L2A 15310000
.*                .AN INVALID ROUTING CODE IS SPECIFIED            @L2A 15344000
.*                .AN INVALID RANGE OF ROUTING CODES IS SPECIFIED  @L2A 15378000
.*                .RESERVED ROUTING CODES (29-40) ARE          @YA10057 15412000
.*                   SPECIFIED                                 @YA10057 15446000
.*                .AN INVALID SUBSMOD KEYWORD VALUE IS SPECIFIED   @L2A 15480000
.*                .THE BUSYEXIT PARAMETER IS USED ON A WTOR        @L2A 15514000
.*                .AN INVALID DESCRIPTOR CODE IS SPECIFIED         @L2A 15548000
.*                .INVALID OR MUTUALLY EXCLUSIVE MCSFLAG           @L2A 15582000
.*                   VALUES ARE SPECIFIED                          @L2A 15616000
.*                .AN INVALID MSGTYPE VALUE IS SPECIFIED           @L2A 15650000
.*                .AN INVALID QID VALUE IS SPECIFIED               @L2A 15684000
.*                .MORE THAN ONE ARGUMENT CODED WITH EITHER THE    @L6A 15718000
.*                   LINKAGE, SYNCH, OR WSPARM KEYWORDS.           @L6A 15752000
.*                                                                      15786000
.* EXIT, ERROR                                                     @L2A 15820000
.*   CONDITION - TERMINATING ERROR CONDITION DETECTED BY           @L2A 15854000
.*                 THE WTO MACRO                                   @L2A 15888000
.*   OUTPUT    - MNOTE WITH SEVERITY CODE 12 ISSUED WHEN:          @L2A 15922000
.*                .THE WQEBLK KEYWORD IS SPECIFIED ALONG WITH      @L2A 15956000
.*                   OTHER KEYWORDS                                @L2A 15990000
.*                .THE CONNECT KEYWORD IS SPECIFIED ALONG WITH     @L2A 16024000
.*                   EITHER THE SYSNAME, CONSID OR                 @01C 16058000
.*                   CONSNAME.                                     @L3A 16092000
.*                .THE CONSID KEYWORD IS SPECIFIED ALONG WITH      @L3A 16126000
.*                   THE CONSNAME KEYWORD.                         @L3A 16160000
.*                .THE CONNECT KEYWORD IS SPECIFIED ON A           @L2A 16194000
.*                   SINGLE-LINE WTO                               @L2A 16228000
.*                .THE NUMBER OF TEXT LINES REQUESTED IS EITHER    @L2A 16262000
.*                   ZERO OR GREATER THAN 255                      @L2A 16296000
.*                .THE TEXT KEYWORD IS SPECIFIED ALONG WITH        @L5A 16330000
.*                   INLINE MESSAGE TEXT.                          @L5A 16364000
.*                .SYNCH=YES WITH MORE THAN 14 LINES OF TEXT.      @L6A 16398000
.*                .SYNCH=YES SPECIFIED ALONG WITH CONNECT OR       @L6A 16432000
.*                   AREAID KEYWORDS.                              @L6A 16466000
.*                .SYNCH=YES SPECIFIED WITH MCSFLAG=HRDCPY         @L6A 16500000
.*                .SYNCH=YES SPECIFIED WITHOUT LINKAGE=BRANCH      @L6A 16534000
.*                     ON STANDARD OR EXECUTE FORM.                @P9A 16568000
.*                .WSPARM ¬= 0 SPECIFIED WITHOUT SYNCH=YES         @P9C 16602000
.*                     OR  WITHOUT LINKAGE=BRANCH ON STANDARD      @P9C 16636000
.*                     OR EXECUTE FORM.                            @P9A 16670000
.*                                                                      16704000
.* EXTERNAL REFERENCES = N/A                                       @L2A 16738000
.*                                                                      16772000
.* TABLES = N/A                                                    @L2A 16806000
.*                                                                      16840000
.* MACROS =                                                        @L2A 16874000
.*      THE PARAMETER LIST GENERATED BY THIS MACRO IS MAPPED       @L2A 16908000
.*      BY THE MACRO IEZWPL. HOWEVER, IEZWPL IS NOT REQUIRED       @L2A 16942000
.*      TO USE THIS MACRO.                                         @L2A 16976000
.*                                                                      17010000
.* CHANGE ACTIVITY =                                           @G64DPSS 17044000
.*              G64DPSS,OZ43167,G860PSS,ZMC0828                @ZMC0828 17078000
.* $D1=DCR7,     JBB2110, 820831, PDSJ: MULTILINE WTP SUPPORT           17112000
.* $L1=MRRHCLOG, JBB2125, 830608, PDF8: HARDCOPY LOG FORMAT             17146000
.* $L2=COEXWTO1, JBB2220, 841101, PDF9: JES3/MCS COEXISTENCE            17180000
.* $P1=PA20104,  JBB2220, 850220, PDF9: JES3/MCS COEXISTENCE            17214000
.* $P2=PA20116,  JBB2220, 850220, PDF9: JES3/MCS COEXISTENCE            17248000
.* $P3=PA21155,  JBB2220, 860910, PDF9: JES3/MCS COEXISTENCE            17282000
.* $P4=PA21240,  JBB2220, 861008, PDF9: JES3/MCS COEXISTENCE            17316000
.*                      YA10057                                         17350000
.*              YA11509 - NO CODE CHANGES.                              17384000
.*              YA17152 - REDEFINE COMMON ACRONYMS OF GLOBAL DECLARES   17418000
.* $L3=CNMG2,    HBB4410, 870424, PDR3: CONSOLE MERGE STAGE II          17452000
.* $P5=PEO0005,  HBB4410, 850424, PDR3: CONSOLE MERGE STAGE II          17486000
.* $L4=TSOOP,    HBB4410, 870622, PDBU: TSO OPERATOR                    17520000
.* $L5=KNWTO,    HBB4410, 870916, PDCM: KANJI/WTO                       17554000
.* $P6=PEO0021,  HBB4410, 880120, PDBU: CONSOLE MERGE STAGE II          17588000
.* $P7=PEO0158,  HBB4410, 880210, PDBU: CONSOLE MERGE STAGE II          17622000
.* $P8=PEO0133,  HBB4410, 880420, PDF9: TSO OPERATOR                    17656000
.* $L6=CNITGDHE, HBB4410, 890313, PDHE: CONSOLE INTEGRATION             17690000
.* $P9=PH25014,  HBB4410, 890503, PDHD: CONSOLE INTEGRATION             17724000
.* $PA=PH25015,  HBB4410, 890503, PDHD: CONSOLE INTEGRATION             17758000
.* $PB=PH25016,  HBB4410, 890503, PDHD: CONSOLE INTEGRATION             17792000
.* $PC=PH25022,  HBB4410, 890503, PDHD: CONSOLE INTEGRATION             17826000
.* $D2=DEO0124,  HBB4410, 890421, PDCM: DCR 124                         17860000
.* $PE=PEO1712,  HBB4410, 890612, PDCM: TEXT PARAMETER DESCRIPTION      17894000
.* $D3=DEO0184,  HBB4410, 890619, PDHE: DCR 184                         17928000
.* $PF=PEO2883,  HBB4410, 891127, PDHE: ADD RESTRICTIONS TO PROLOG      17962000
.* $PG=PEO3063,  HBB4410, 900105, PDF9: ADD MAX TEXT LENGTH CHECKS      17996000
.* $PH=PEO3503,  HBB4410, 900306, PDHK: ADD MAX TEXT LENGTH CHECKS      18030000
.* $PI=PEO3640,  HBB4410, 900306, PDCY: ALLOW NULL VALUE FOR THE TEXT   18064000
.*                                      KEYWORD FOR LIST FORM OF MACRO  18098000
.* $PJ=PEO3823,  HBB4410, 900330, PDHD: DOWNWARD COMPATABILITY          18132000
.* $PK=PEO3824,  HBB4410, 900330, PDHD: WARN FOR LINE TYPE/EXEC FORM    18166000
.* $PL=PEO3650,  HBB4410, 900330, PDBT: TEXT KWRD WITH NULL END-LINE    18200000
.* $PM=PEO4290,  HBB4410, 900504, PDHE: CHANGE MNOTE SEVERITY           18234000
.* $PN=PEO4497,  HBB4410, 900612, PDHE: CHANGE MNOTE SEVERITY           18268000
.* $01=OY37350,  HBB4410, 901019, PDHE: PEO4845 REMOVE UNSUPPORTED      18302000
.*                                      PARAMETER SUPPORT               18336000
.* $02=OY41569,  HBB4410, 900404, PDBU: DON'T SET ROUTECODE 2 AS A      18370000
.*                                      DEFAULT WHEN ONLY MSGTYP IS     18404000
.*                                      SPECIFIED                       18438000
.* $03=OY49988,  HBB4410, 911206, PDCI: AVOID LABEL NOT FOUND MESSAGE   18472000
.* $04=OY53863,  HBB4410, 920501, PDHE: MNOTE BEING ISSUED INCORRECTLY  18506000
.*     D53CDFG                        : ADAPTION FOR VSE/ESA 1.4        18523061
.*                                                                      18540000
.* MESSAGES (MNOTES) =                                             @L2A 18574000
.*   - SEVERITY 0 MNOTES:                                          @L2A 18608000
.*      - 'KKKKKKKK' DATA IGNORED ON THE LIST FORM OF WTO.         @L2A 18642000
.*           WHERE 'KKKKKKKK' MAY BE CONNECT, CONSID, KEY,         @L2A 18676000
.*           JOBNAME, JOBID, PRTY, TOKEN, SYSNAME,                 @01C 18710000
.*           CONSNAME, CART, TEXT, LINKAGE OR WSPARM.              @L6C 18744000
.*      - INLINE TEXT EXCEEDS ALLOWED MAXIMUM. TEXT LINE           @PMM 18778000
.*             (NUMBER N) HAS BEEN TRUNCATED.                      @PMM 18812000
.*           WHERE 'NUMBER N' APPLIES TO THE LINE NUMBER ON A      @PMM 18846000
.*           MULTI LINE MESSAGE                                    @PMM 18880000
.*                                                                      18914000
.*   - SEVERITY 4 MNOTES:                                          @L2A 18948000
.*      - RESERVED ROUTING CODE(S) 29-40 IGNORED.              @YA10057 18982000
.*      - INVALID RANGE OF ROUTING CODES IGNORED.                  @L2A 19016000
.*      - SUBSMOD=YES ASSUMED. SPECIFIED SUBSMOD VALUE             @L2A 19050000
.*          WAS NOT YES OR NO.                                     @L2A 19084000
.*      - MCSFLAG=BUSYEXIT IGNORED.  NOT VALID ON WTOR.            @L2A 19118000
.*      - 'KKKKKKKK' KEYWORD IGNORED. NO VALUE SPECIFIED.          @L2A 19152000
.*           WHERE 'KKKKKKKK' MAY BE WQEBLK, CONNECT, CONSID,      @L2A 19186000
.*           JOBID, JOBNAME, PRTY, KEY, TOKEN, SYSNAME,            @01C 19220000
.*           CONSNAME, CART, TEXT OR WSPARM.                       @L6C 19254000
.*      - LINKAGE IS TOO LONG.  ARGUMENTS ARE IGNORED AFTER XXXXX. @L6A 19288000
.*      - SYNCH IS TOO LONG.  ARGUMENTS ARE IGNORED AFTER XXXXXXX. @L6A 19322000
.*      - WSPARM IS TOO LONG.  ARGUMENTS ARE IGNORED AFTER XXXXXX. @L6A 19356000
.*      - ROUTCDE  N  IS AN INVALID ROUTING CODE. IT IS IGNORED.   @L2A 19390000
.*      - DESC  N  IS AN INVALID DESCRIPTOR CODE. IT IS IGNORED.   @L2A 19424000
.*      - MSGTYP FIELD INVALID. N IS ASSUMED                       @L2A 19458000
.*      - MCSFLAG= &MCSFLAG(&I) IS INVALID. IT IS IGNORED.         @L2A 19492000
.*      - HRDCPY AND NOCPY MUTUALLY EXCLUSIVE. MCSFLAG=HRDCPY      @L2A 19526000
.*          ASSUMED.                                               @L2A 19560000
.*      - QID FIELD IS INVALID. ZERO ASSUMED.                      @L2A 19594000
.*                                                                      19628000
.*   - SEVERITY 12 MNOTES:                                         @L2A 19662000
.*      - NO TEXT GENERATED. 'WQEBLK' IS MUTUALLY EXCLUSIVE        @L2A 19696000
.*          WITH ALL OTHER KEYWORDS.                               @L2A 19730000
.*      - NO TEXT GENERATED. 'CONNECT' IS MUTUALLY EXCLUSIVE       @L3C 19764000
.*          WITH THE CONSID, SYSNAME, AND CONSNAME KEYWORDS.       @01C 19798000
.*      - NO TEXT GENERATED. 'CONSID' IS MUTUALLY EXCLUSIVE        @L3A 19832000
.*          WITH THE CONSNAME KEYWORD.                                  19866000
.*      - NO TEXT GENERATED. 'CONNECT' IS MUTUALLY EXCLUSIVE       @L2A 19900000
.*          WITH SINGLE LINE WTO.                                  @L2A 19934000
.*      - NUMBER OF LINES REQUESTED IS 0 OR GREATER THAN 255 -     @L2A 19968000
.*          GENERATION TERMINATED                                  @L2A 20002000
.*      - NO TEXT GENERATED. INLINE TEXT IS MUTUALLY EXCLUSIVE     @L5A 20036000
.*          WITH 'TEXT'.                                           @L5A 20070000
.*      - NO TEXT GENERATED.  TOO MANY LINES OF TEXT.              @L6A 20104000
.*          MAX=## WHEN SYNCH=YES.                                 @L6A 20138000
.*             WHERE ## IS THE VALUE ASSIGNED TO THE VARIABLE      @L6A 20172000
.*               MAXLINS                                           @L6A 20206000
.*      - NO TEXT GENERATED. 'SYNCH=YES'                           @L6A 20240000
.*          REQUIRES 'LINKAGE=BRANCH'.                             @L6A 20274000
.*      - NO TEXT GENERATED. 'SYNCH=YES' IS MUTUALLY EXCLUSIVE     @L6A 20308000
.*          WITH THE CONNECT AND AREAID KEYWORDS.                  @L6A 20342000
.*      - NO TEXT GENERATED. 'SYNCH=YES' IS MUTUALLY EXCLUSIVE     @L6A 20376000
.*          WITH 'MCSFLAG=HRDCPY'.                                 @L6A 20410000
.*      - NO TEXT GENERATED. 'WSPARM ¬= 0' REQUIRES                @L6A 20444000
.*          'LINKAGE=BRANCH' AND 'SYNCH=YES'.                      @L6A 20478000
.*      - NO TEXT GENERATED. SPECIFIED LINKAGE VALUE WAS NOT       @L6A 20512000
.*          SVC OR BRANCH.                                         @L6A 20546000
.*      - NO TEXT GENERATED. SPECIFIED SYNCH VALUE WAS NOT         @L6A 20580000
.*          YES OR NO.                                             @L6A 20614000
.*      - NO TEXT GENERATED. SPECIFIED WSPARM VALUE WAS NOT        @L6A 20648000
.*          0, A REGISTER, OR AN ADDRESS.                          @L6A 20682000
.*      - UNSUPPORTED OPERAND OR OPTION '&NSUPOP'              @D61CDFG 20699061
.*                                                                      20716000
.* NOTES      = THIS MACRO IS INVOKED BY THE WTOR AND WTL      @G860PSS 20750000
.*              MACROS TO GENERATE SOME SECTIONS OF THEIR      @G860PSS 20784000
.*              PARAMETER LISTS.                               @G860PSS 20818000
.*                                                             @G860PSS 20852000
.*              THE WPL IS GENERATED BY THIS MACRO IN DIFFERENT    @L2A 20886000
.*              FORMATS DEPENDING ON THE KEYWORDS PROVIDED.        @L2A 20920000
.*              A STANDARD WPL IS GENERATED IF ONLY THE            @L2A 20954000
.*              FOLLOWING KEYWORDS ARE SPECIFIED: ROUTCDE(1-16),   @L2A 20988000
.*              DESC, MCSFLAG, MSGTYPE, QID, AREAID.               @L2A 21022000
.*              IF ANY OTHER KEYWORDS ARE SPECIFIED, A DIFFERENT   @L2A 21056000
.*              STRUCTURE (WPX - MAPPED BY IEZWPL) IS BUILT        @L2A 21090000
.*              FOLLOWING THE MESSAGE TEXT. FOR A MULTI-LINE       @L2A 21124000
.*              WTO, THE MINOR LINES FOLLOW THE WPX.               @L2A 21158000
.*                                                                      21192000
.*              IN ORDER TO SUPPORT ASSEMBLER F, THIS MACRO        @P4A 21226000
.*              MUST BE STRUCTURED SUCH THAT THERE ARE NO          @P4A 21260000
.*              INSTRUCTIONS MORE THAN 3 LINES IN LENGTH.          @P4A 21294000
.*                                                                      21328000
.*              THE LENGTH OF THE WPX IS SPECIFIED WITHIN THE      @LAA 21362000
.*              WPX. WHENEVER THE LENGTH OF THE WPX CHANGES,       @LAA 21396000
.*              THE VALUE OF THIS FIELD MUST ALSO CHANGE. THE      @LAA 21430000
.*              VERSION ID OF THE WPL CAN BE USED TO DETERMINE     @LAA 21464000
.*              THE METHOD TO USE TO ESTABLISH THE LENGTH OF       @LAA 21498000
.*              THE WPX.                                           @LAA 21532000
.*                                                                      21566000
.*              IF LINKAGE=BRANCH IS SPECIFIED THE CONTENTS OF     @L6A 21600000
.*              REGISTER 14 WILL BE DESTROYED.                     @L6A 21634000
.*                                                                      21668000
.********************************************************************** 21702000
.* C THE TEXT LENGTH FIELD FOR WTORS IS NOW ONE BYTE INSTEAD   @G860PSS 21736000
.*   OF TWO                                                    @G860PSS 21770000
.* C MAKE THE PL/S VERSION WORK                                @ZMC0828 21804000
.* A TEST FOR MVS SP LEVEL WHEN BUILDING PARM LIST             @G860PSS 21838000
.* C ALLOW MULTILINE HARDCOPY ONLY WTO                             @D1A 21872000
.* A 'CMD' MCSFLAG FOR OPERATOR COMMANDS                           @L1A 21906000
.* A MODIFY THE MACRO TO PROCESS WQEBLK, 128 ROUTING CODES,        @L2A 21940000
.*   CONSID, JOBID, KEY, TOKEN, SYSNAME, DOMID, JOBNAME,           @L2A 21974000
.*   MPF, SUBSMOD, PRTY, CONNECT AND MCSFLAG=BUSYEXIT              @L2A 22008000
.* C GENERATE WPX 4-BYTE FIELDS ON A BYTE BOUNDARY RATHER THAN     @P1A 22042000
.*   ON A FULLWORD BOUNDARY                                        @P1A 22076000
.* C ACCEPT WQEBLK FIELD NAMES CONTAINING THE PASSED WQE ITSELF    @P2A 22110000
.*   RATHER THAN THE ADDRESS OF THE PASSED WQE                     @P2A 22144000
.* C LIMIT MAX INSTRUCTION LENGTH TO 3 LINES TO SUPPORT ASM F      @P3A 22178000
.* C REFIX PA21155 SO WPX IS ALWAYS CORRECTLY GENERATED            @P4A 22212000
.* C ALLOW ROUTING CODE 41 TO BE SPECIFIED                     @YA10057 22246000
.* NO CODE CHANGES. REASSEM FOR PTF PACKAGING PROBLEM          @YA11509 22280000
.* C REDEFINE GLOBAL NAMES &LEN , &MCS , &WTOLEN   UNIQUELY    @YA17152 22314000
.* A MODIFY THE MACRO TO PROCESS THE CONSNAME AND REPLY CONSOLE    @L3A 22348000
.*   NAME ADDRESS(WTOR)                                            @L3A 22382000
.* C CONSNAME PARAMETER CORRECTED                                  @P5A 22416000
.* A MODIFY THE MACRO TO PROCESS CART                              @D2C 22450000
.* A MODIFY THE MACRO TO ACCEPT THE TEXT KEYWORD                   @L5A 22484000
.* C FIXED REPLY ADDRESS AND ECB ADDRESS ON WTOR STANDARD FORM     @P6A 22518000
.* C PUT BACK CODE TO INITIALIZE REPLY/ECB ADDRESS FOR WTOR        @P7A 22552000
.* C CHANGE GENERATED CODE FOR TEXT KEYWORD ON MULTI-LINE WTO      @P8A 22586000
.* C MODIFY THE MACRO TO PROCESS LINKAGE, SYNCH, AND  WSPARM       @L6A 22620000
.*   KEYWORDS                                                      @L6A 22654000
.* C ALLOW LINKAGE AND WSPARM TO BE NULL ON LIST FORM              @P9A 22688000
.* C UPDATE SYNCH=NO ON EXECUTE FORM                               @PAA 22722000
.* C INITIALIZE WSPARM WITH REAL VALUE ON INLINE FORM              @PBA 22756000
.* C DO NOT GENERATE A WPX FOR SYNCH=NO ON STANDARD FORM           @PCA 22790000
.* C DCR 124 - REMOVE UNIMPLEMENTED FUNCTION                       @D2A 22824000
.* C DOCUMENT RESTRICTIONS IN PROLOG                               @PFA 22858000
.* C ADD CHECKS FOR INLINE TEXT WHOSE LENGTHS EXCEED THE MAXIMUM   @PGA 22892000
.*   ALLOWED LENGTHS                                               @PGA 22926000
.* C ALLOW NULL VALUE FOR TEXT KEYWORD WHEN LIST FORM OF MACRO     @PIA 22960000
.*   IS SPECIFIED                                                  @PIA 22994000
.* C GENERATE VERSION 1 WPX IF NO NEW KYWDS USED                   @PJA 23028000
.* C ISSUE SEV 0 MNOTE FOR LINE TYPE DATA ON TEXT, EXEC FORM       @PKA 23062000
.* C ALWAYS GENERATE TEXT LENGTH OF 8 WHEN TEXT KEYWORD SPECIFIED  @PLA 23096000
.* C MNOTE SEVERITY FROM 4 TO 0 IN TRUNCATED LINES                 @PMA 23130000
.* C MISSED ONE MNOTE ON PREVIOUS CHANGE                           @PNA 23164000
.* C DON'T SET ROUTECODE 2 AS A DEFAULT IF ONLY MSGTYP SPECIFIED   @02A 23198000
.* C CHANGE LABEL MLWX09 TO MLW09                                  @03A 23232000
.* C TEXT KEYWORD ISSUANCE OF *LINE TYPE ON EXECUTE FORM IGNORED*  @04A 23266000
.*   MESSAGE ISSUED INCORRECTLY ON MULTILINE INVOCATIONS           @04A 23300000
.********************************************************************** 23334000
.*       GLOBAL DECLARATIONS                                            23368000
.********************************************************************** 23402000
         GBLA  &IHBLEN               MESSAGE LENGTH FIELD, WTO @YA17152 23436000
         GBLB  &IHBWTL               GLOBAL WTL INDICATOR               23470000
         GBLB  &IHBWTOR              GLOBAL WTOR INDICATOR              23504000
         GBLB  &IHBMCS               MCS FLAGS ARE TO BE SET   @YA17152 23538000
         GBLB  &SWM                  MSGTYPE FLAGS ARE TO BE SET   @L2A 23572000
         GBLB  &IWPXBIT              A WPX IS TO BE BUILT          @L2A 23606000
         GBLB  &IWQEBIT              A WQEBLK SETUP HAS OCCURRED   @L2A 23640000
         GBLB  &WTOERR               INDICATOR FOR WTOR THAT WTO       X23674000
                                     A TERMINATING MNOTE           @L2A 23708000
         GBLB  &RAREG                REPLY ADDRESS IN REGISTER BIT @L2A 23742000
         GBLB  &RLREG                REPLY LENGTH IN REGISTER BIT  @L2A 23776000
         GBLB  &EAREG                ECB ADDRESS IN REGISTER BIT   @L2A 23810000
         GBLB  &RCNREG               REPLY CONSOLE NAME/ID ADDRESS     X23844000
                                     IN REGISTER BIT               @L3A 23878000
         GBLB  &RCNSPEC              REPLY CONSOLE NAME/ID ADDRESS     X23912000
                                     KEYWORD SPECIFIED             @L3A 23946000
         GBLB  &MLW                  MULTI-LINE WTO SPECIFIED      @L6C 23980000
         GBLC  &IWPXVER              VERSION OF WPX TO BUILD       @PJA 24014000
         GBLC  &WTORYA               REPLY ADDRESS (WTOR)          @L2A 24048000
         GBLC  &WTOECB               ECB ADDRESS (WTOR)            @L2A 24082000
         GBLC  &WTOLENR              REPLY BUFFER LENGTH(WTOR) @YA17152 24116000
         GBLC  &WTORCN               REPLY CONSOLE NAME/ID ADDRESS @L3A 24150000
         GBLC  &SYSSPLV              SYSTEM PRODUCT LEVEL      @G860PSS 24184000
         GBLC  &CD(16)               DC FIELDS SAVEAREA            @L2A 24218000
         GBLC  &GNAME                LABEL NAME                    @L2A 24252000
         GBLC  &VALH                 INDIVIDUAL MINOR LINE ENTRY   @L5A 24286000
         GBLC  &VALH1                TEXT ADDRESS PORTION OF VALH  @L5A 24320000
         GBLC  &VALH2                LINE TYPE PORTION OF VALH     @L5A 24354000
.********************************************************************** 24388000
.*       LOCAL DECLARATIONS                                             24422000
.********************************************************************** 24456000
         LCLA  &H,&I,&N,&J           COUNTERS/SAVEAREAS            @L2C 24490000
         LCLA  &LLCNT                TOTAL NUMBER OF LINES IN MULTI-   X24524000
                                     LINE WTO                      @L2A 24558000
         LCLA  &RCLEN                ROUTING CODE ELEMENT LENGTH   @P3C 24592000
         LCLA  &I1                   ROUTING CODE ELEMENT COUNTER  @L2A 24626000
         LCLA  &K                    ROUTING CODE UPPER RANGE      @L2A 24660000
         LCLA  &MLINDX               WORKING NUMBER OF LINES IN MULTI- X24694000
                                     LINE WTO                      @L5A 24728000
         LCLA  &MLTTIND              OFFSET INTO MLWTO PARMLIST FOR    X24762000
                                     LINE TYPE INDICATORS          @L5A 24796000
         LCLB  &MISCFLG(8)           MISCELLANEOUS FLAGS SAVEAREA  @L2A 24830000
         LCLB  &EMCS(16)             EXTENDED MCSFLAGS SAVEAREA    @L2A 24864000
         LCLA  &LT(256)              LINE TYPE FLAGS FIELD       X02007 24898000
         LCLB  &NODFLT               DO NOT SET ROUTING CODE DEFAULT    24932000
         LCLB  &B(16),&AD,&E,&E1,&E2,&E3,&E4,&E5,&E6               @L2C 24966000
         LCLB  &RB(128)              ROUTING CODE BIT FIELD        @L2A 25000000
         LCLB  &RSVDMNT              BIT INDICATING RESERVED ROUTING   X25034000
                                     CODES WERE SPECIFIED          @L2A 25068000
         LCLB  &SECONDL              PROCESSED FIRST LINE OF MLWTO      25102000
         LCLC  &EM(2)                EXTENDED MCSFLAGS DC FIELD    @L2A 25136000
         LCLB  &PAIR                 DOUBLE CHAR FOUND IN TEXT   X02007 25170000
         LCLC  &DCFLGS               MISCELLANEOUS FLAGS DC FIELD  @L2A 25204000
         LCLC  &RNIBBLE              ROUTING CODE CONVERSION FIELD @L2A 25238000
         LCLC  &DCRC                 ROUTING CODE DC FIELD         @L2A 25272000
         LCLC  &CFLG(17)             VALUE TABLE                   @L2C 25306000
         LCLC  &LOW,&HIGH            ROUTING CODE RANGE VALUES     @L2A 25340000
         GBLC  &ILMEQU               INLINE MESSAGE TEXT VALUE     @L6A 25374000
         LCLC  &ILTEQU               INLINE LINETYPE VALUE         @L6A 25408000
         LCLA  &NUMML                COUNTER FOR TOTAL NUMBER OF LINES +25442000
                                     IN A MULTILINE MESSAGE        @L6A 25476000
         LCLA  &NUMARG               NUMBER OF ARGUMENTS IN AN INLINE  +25510000
                                     VALUE                         @L6A 25544000
         LCLA  &MAXLINS              MAXIMUM NUMBER OF LINES OF TEXT   +25578000
                                     ALLOWED WITH SYNCH=YES        @L6A 25612000
         LCLA  &MAXCLLN              MAXIMUM INLINE LENGTH OF A        +25646000
                                     CONTROL LINETYPE TEXT LINE    @PGA 25680000
         LCLA  &MAXMLLN              MAXIMUM INLINE LENGTH OF ANY      +25714000
                                     OTHER MULTI-LINE TEXT LINE    @PGA 25748000
         LCLA  &MAXSLLN              MAXIMUM LENGTH OF INLINE TEXT     +25782000
                                     ON A SINGLE LINE WTO          @PGA 25816000
         LCLA  &MAXSRLN              MAXIMUM LENGTH OF INLINE TEXT     +25850000
                                     ON A SINGLE LINE WTOR         @PGA 25884000
         LCLB  &SYNN                 SYNCH TO BE TURNED OFF        @PAA 25918000
         LCLB  &LTWARN               LINE TYPE WARNING ISSUED      @PKA 25952000
         LCLC  &NSUPOP               UNSUPPORTED OPERAND       @D61CDFG 25969061
         ACTR  30000                 INITIALIZE LOOP INHIBITOR     @L2C 25986000
&NSUPOP  SETC  'AREAID'                                        @D61CDFG 25986361
         AIF   ('&AREAID' NE '').NSUPOP                        @D61CDFG 25986661
&NSUPOP  SETC  'JOBID'                                         @D61CDFG 25986961
         AIF   ('&JOBID' NE '¬').NSUPOP                        @D61CDFG 25987261
&NSUPOP  SETC  'JOBNAME'                                       @D61CDFG 25987561
         AIF   ('&JOBNAME' NE '¬').NSUPOP                      @D61CDFG 25987861
&NSUPOP  SETC  'KEY'                                           @D61CDFG 25988161
         AIF   ('&KEY' NE '¬').NSUPOP                          @D61CDFG 25988461
&NSUPOP  SETC  'LINKAGE'                                       @D61CDFG 25988761
         AIF   ('&LINKAGE' NE '¬').NSUPOP                      @D61CDFG 25989061
&NSUPOP  SETC  'MSGTYP'                                        @D61CDFG 25989361
         AIF   ('&MSGTYP' NE '').NSUPOP                        @D61CDFG 25989661
&NSUPOP  SETC  'PRTY'                                          @D61CDFG 25989961
         AIF   ('&PRTY' NE '¬').NSUPOP                         @D61CDFG 25990261
&NSUPOP  SETC  'QID'                                           @D61CDFG 25990561
         AIF   ('&QID' NE '').NSUPOP                           @D61CDFG 25990861
&NSUPOP  SETC  'SUBSMOD'                                       @D61CDFG 25991161
         AIF   ('&SUBSMOD' NE '').NSUPOP                       @D61CDFG 25991461
&NSUPOP  SETC  'SYNCH'                                         @D61CDFG 25991761
         AIF   ('&SYNCH' NE '¬').NSUPOP                        @D61CDFG 25992061
&NSUPOP  SETC  'SYSNAME'                                       @D61CDFG 25992361
         AIF   ('&SYSNAME' NE '¬').NSUPOP                      @D61CDFG 25992661
&NSUPOP  SETC  'TOKEN'                                         @D61CDFG 25992961
         AIF   ('&TOKEN' NE '¬').NSUPOP                        @D61CDFG 25993261
&NSUPOP  SETC  'WQEBLK'                                        @D61CDFG 25993561
         AIF   ('&WQEBLK' NE '¬').NSUPOP                       @D61CDFG 25993861
&NSUPOP  SETC  'WSPARM'                                        @D61CDFG 25994161
         AIF   ('&WSPARM' NE '¬').NSUPOP                       @D61CDFG 25994461
&J       SETA  0                    INITIALIZE INDEX           @D61CDFG 25994761
.MCFLOOP AIF   (&J GE N'&MCSFLAG OR T'&MCSFLAG EQ 'O').CHK123  @D61CDFG 25995061
&J       SETA  &J+1                 MORE MCSFLAG VALUES        @D61CDFG 25995361
&NSUPOP  SETC  'BRDCST'                                        @D61CDFG 25995661
         AIF   ('&MCSFLAG(&J)' EQ '&NSUPOP').NSUPOP            @D61CDFG 25995961
&NSUPOP  SETC  'CMD'                                           @D61CDFG 25996261
         AIF   ('&MCSFLAG(&J)' EQ '&NSUPOP').NSUPOP            @D61CDFG 25996561
&NSUPOP  SETC  'NOCPY'                                         @D61CDFG 25996861
         AIF   ('&MCSFLAG(&J)' EQ '&NSUPOP').NSUPOP            @D61CDFG 25997161
&NSUPOP  SETC  'NOTIME'                                        @D61CDFG 25997461
         AIF   ('&MCSFLAG(&J)' EQ '&NSUPOP').NSUPOP            @D61CDFG 25997761
&NSUPOP  SETC  'QREG0'                                         @D61CDFG 25998061
         AIF   ('&MCSFLAG(&J)' EQ '&NSUPOP').NSUPOP            @D61CDFG 25998361
&NSUPOP  SETC  'REG0'                                          @D61CDFG 25998661
         AIF   ('&MCSFLAG(&J)' EQ '&NSUPOP').NSUPOP            @D61CDFG 25998961
&NSUPOP  SETC  'REPLY'                                         @D61CDFG 25999261
         AIF   ('&MCSFLAG(&J)' EQ '&NSUPOP').NSUPOP            @D61CDFG 25999561
         AGO   .MCFLOOP                                        @D61CDFG 25999861
.CHK123  ANOP                                                  @D61CDFG 26000161
         SPLEVEL TEST                                          @D61CDFG 26000461
         AIF   ('&SYSSPLV' GE '4').GEN140  ESA 1.4.0 OR LATER  @D61CDFG 26000761
&NSUPOP  SETC  'CART'                                          @D61CDFG 26001061
         AIF   ('&CART' NE '¬').NSUPOP                         @D61CDFG 26001361
&NSUPOP  SETC  'CONNECT'                                       @D61CDFG 26001661
         AIF   ('&CONNECT' NE '¬').NSUPOP                      @D61CDFG 26001961
&NSUPOP  SETC  'CONSID'                                        @D61CDFG 26002261
         AIF   ('&CONSID' NE '¬').NSUPOP                       @D61CDFG 26002561
&NSUPOP  SETC  'CONSNAME'                                      @D61CDFG 26002861
         AIF   ('&CONSNAME' NE '¬').NSUPOP                     @D61CDFG 26003161
&NSUPOP  SETC  'MCSFLAG'                                       @D61CDFG 26003461
         AIF   ('&MCSFLAG' NE '').NSUPOP                       @D61CDFG 26003761
&NSUPOP  SETC  'TEXT'                                          @D61CDFG 26004061
         AIF   ('&TEXT' NE '¬').NSUPOP                         @D61CDFG 26004361
         AIF   ('&MF' NE 'I').GEN13MF                          @D61CDFG 26004661
&NAME    WTO123 &SYSLIST(1),&SYSLIST(2),&SYSLIST(3),&SYSLIST(4),&SYSLISX26004961
               T(5),&SYSLIST(6),&SYSLIST(7),&SYSLIST(8),&SYSLIST(9),&SYX26005261
               SLIST(10),DESC=&DESC,ROUTCDE=&ROUTCDE           @D61CDFG 26005561
         MEXIT                                                 @D61CDFG 26005861
.GEN13MF ANOP                                                  @D61CDFG 26006161
         AIF   ('&MF' EQ 'L' OR '&MESG' NE '' OR                       X26006461
                '&ROUTCDE' NE '' OR '&DESC' NE '').GEN13OK     @D61CDFG 26006761
&NAME    WTO123 MF=&MF                                         @D61CDFG 26007061
         MEXIT                                                 @D61CDFG 26007361
.GEN13OK ANOP                                                  @D61CDFG 26007661
&NAME    WTO123 &SYSLIST(1),&SYSLIST(2),&SYSLIST(3),&SYSLIST(4),&SYSLISX26007961
               T(5),&SYSLIST(6),&SYSLIST(7),&SYSLIST(8),&SYSLIST(9),&SYX26008261
               SLIST(10),DESC=&DESC,ROUTCDE=&ROUTCDE,MF=&MF    @D61CDFG 26008561
         MEXIT                                                 @D61CDFG 26008861
.NSUPOP  MNOTE 12,'OPERAND OR OPTION ''&NSUPOP'' NOT SUPPORTED ON VSE' X26013261
                                                               @D61CDFG 26014961
         MEXIT                                                 @D61CDFG 26016661
.GEN140  ANOP                                                  @D61CDFG 26018361
         AIF   (&IHBWTOR).LBL1      IF INVOKED BY WTOR, USE THE LABEL  X26020000
                                    GENERATED BY THE WTOR MACRO    @L2A 26054000
&GNAME   SETC  'IHB'.'&SYSNDX'      SET LABEL NAME                      26088000
.LBL1    ANOP                       LABEL NAME PROPERLY SET        @L2A 26122000
&IWPXBIT SETB  0                    INITIALIZE WPX INDICATOR       @L2A 26156000
&IWPXVER SETC  '1'                  INITIALIZE WPX VERSION         @PJC 26190000
&IWQEBIT SETB  0                    INITIALIZE WQEBLK INDICATOR    @L2A 26224000
&WTOERR  SETB  0                    INITIALIZE SEVERE MNOTE BIT    @L2A 26258000
&MAXLINS SETA  14                   MAXIMUM NUMBER OF LINES OF TEXT    +26292000
                                    ALLOWED WITH SYNCH=YES         @L6A 26326000
&MAXSLLN SETA  125                  MAXIMUM LENGTH OF INLINE TEXT      +26360061
                                    TEXT ON A SINGLE LINE WTO  @D61CDFG 26394061
&MAXSRLN SETA  122                  MAXIMUM LENGTH OF INLINE TEXT      +26428000
                                    ON A SINGLE LINE WTOR          @PHM 26462000
         AIF   (&IHBWTOR).WTOROK    IF THIS WAS FROM WTOR, SET         +26496000
                                    MAXIMUM LINE LENGTHS TO ACCOUNT    +26530000
                                    FOR REPLY IDS                  @PHA 26564000
&MAXCLLN SETA  34                   MAXIMUM INLINE LENGTH OF A         +26598061
                                    CONTROL LINETYPE TEXT LINE @D61CDFG 26632061
&MAXMLLN SETA  70                   MAXIMUM INLINE LENGTH OF ANY       +26666061
                                    OTHER MULTI-LINE TEXT LINE @D61CDFG 26700061
         AGO   .WTORNO              NOT WTOR                       @PHA 26734000
.WTOROK  ANOP                       WTO CALLED FROM WTOR           @PHA 26768000
&MAXCLLN SETA  31                   MAXIMUM INLINE LENGTH OF A WTOR    +26802000
                                    CONTROL LINETYPE TEXT LINE     @PHA 26836000
&MAXMLLN SETA  67                   MAXIMUM INLINE LENGTH OF ANY       +26870000
                                    OTHER MULTI-LINE TEXT LINE     @PHA 26904000
.WTORNO  ANOP                       SKIP HERE IF NOT WTOR          @PHA 26938000
.********************************************************************** 26972000
.*                                                                 @L2A 27006000
.*       CHECK FOR SPECIFICATION OF THE WQEBLK KEYWORD.            @L2A 27040000
.*       IF SPECIFIED, VERIFY THAT NO OTHER KEYWORDS HAVE          @L2A 27074000
.*       BEEN SPECIFIED. THIS CHECK AUTOMATICALLY ENSURES          @L2A 27108000
.*       THAT THE STANDARD FORM IS BEING USED.                     @L2A 27142000
.*                                                                 @L2A 27176000
.********************************************************************** 27210000
         AIF   ('&WQEBLK' EQ '¬').NOWQEB  IF NO WQEBLK, CHECK FOR      X27244000
                                          KEYWORD ERRORS           @L2A 27278000
         AIF   ('&MESG'    NE ''  OR  '&MF'      NE 'I' OR             X27312000
                '&ROUTCDE' NE ''  OR  '&DESC'    NE ''  OR             X27346000
                '&QID'     NE ''  OR  '&AREAID'  NE '').BADWQEB    @P4C 27380000
         AIF   ('&MSGTYP'  NE ''  OR  '&MCSFLAG' NE ''  OR             X27414000
                '&SUBSMOD' NE ''  OR                                   X27448000
                '&CONSID'  NE '¬' OR  '&CONNECT' NE '¬').BADWQEB   @D2C 27482000
         AIF   ('&JOBID'   NE '¬' OR                                   X27516000
                '&JOBNAME' NE '¬' OR  '&SYSNAME' NE '¬' OR             X27550000
                '&PRTY'    NE '¬' OR  '&KEY'     NE '¬').BADWQEB   @01C 27584000
         AIF   ('&LINKAGE' NE '¬' OR  '&SYNCH'   NE '¬' OR             +27618000
                '&WSPARM'  NE '¬').BADWQEB                         @L6A 27652000
         AIF   ('&TOKEN'   EQ '¬' AND '&CONSNAME' EQ '¬' AND           X27686000
                '&CART'    EQ '¬' AND '&TEXT'    EQ '¬').WQEONLY       X27720000
                                               WQEBLK SPECIFIED.   @L5C 27754000
.BADWQEB ANOP                           MUTUALLY EXCLUSIVE ERROR   @P4A 27788000
         MNOTE 12,'NO TEXT GENERATED. ''WQEBLK'' IS MUTUALLY EXCLUSIVE X27822000
               WITH ALL OTHER KEYWORDS.'                           @L2A 27856000
&WTOERR  SETB  1                        A SEVERE MNOTE WAS ISSUED  @L2A 27890000
         AGO   .END                     DONE WITH MACRO PROCESSING @L2A 27924000
.WQEONLY ANOP                           WQEBLK IS ONLY KEYWORD     @L2A 27958000
         AIF   ('&WQEBLK' NE '').WQEDATA VERIFY DATA SPECIFIED     @L2A 27992000
         MNOTE 12,'''WQEBLK'' KEYWORD IGNORED. NO VALUE SPECIFIED.'    X28026000
                                                                   @L2A 28060000
&WTOERR  SETB  1                        A SEVERE MNOTE WAS ISSUED  @L2A 28094000
         AGO   .END                     DONE WITH MACRO PROCESSING @L2A 28128000
.WQEDATA ANOP                           WQEBLK DATA SPECIFIED      @L2A 28162000
.********************************************************************** 28196000
.*                                                                 @L2A 28230000
.*       PUT WQEBLK INFORMATION INTO REGISTER 0.                   @L2A 28264000
.*                                                                 @L2A 28298000
.********************************************************************** 28332000
         AIF   ('&WQEBLK'(1,1) EQ '(').WBREG  BRANCH IF IN REG     @L2A 28366000
         LA    0,&WQEBLK(1)             PUT WQE ADDRESS INTO REG 0 @P2C 28400000
         AGO   .WBPLIST                 GO ISSUE SVC 35            @L2A 28434000
.WBREG   AIF   ('&WQEBLK'(2,1) EQ '0' OR                               X28468000
                '&WQEBLK'(2,2) EQ 'R0').WBPLIST SKIP LOAD IF ALREADY   X28502000
                                        IN REGISTER 0              @L2A 28536000
         LR    0,&WQEBLK(1)             PUT WQE ADDRESS INTO REG 0 @L2A 28570000
.* GENERATE THE PARAMETER LIST FOR A WQEBLK INVOCATION             @L2A 28604000
.* AND PUT THE ADDRESS OF THE PASSED WQE INTO REGISTER 0           @L2A 28638000
.WBPLIST ANOP                           GENERATE PLIST FOR WQEBLK  @L2A 28672000
         CNOP  0,4                      SET UP PARAMETER LIST      @L2A 28706000
&NAME    BAL   1,&GNAME.A                                          @L2A 28740000
         DC    AL2(4)                   MESSAGE LENGTH FIELD       @L2A 28774000
         DC    B'0000000000000010'      MCSFLAGS FIELD             @L2A 28808000
&IWQEBIT SETB  1                        INDICATE WQEBLK WAS SET    @L2A 28842000
&GNAME.A DS    0H                                                  @L2A 28876000
         AGO   .EXECUTE                 ISSUE SVC 35 OR BRANCH ENTRY   +28910000
                                        WTO                        @L6C 28944000
.********************************************************************** 28978000
.*                                                                 @L2A 29012000
.*       THE WQEBLK KEYWORD WAS NOT SPECIFIED.                     @L2A 29046000
.*       CHECK FOR THE FOLLOWING TERMINATING ERROR SITUATION:      @L2A 29080000
.*        - LINKAGE KEYWORD ISSUED WITH INVALID ARGUMENT           @L6A 29114000
.*                                                                 @L6A 29148000
.********************************************************************** 29182000
.NOWQEB  ANOP                     WQEBLK NOT SPECIFIED             @L6A 29216000
         AIF   ('&LINKAGE' EQ '¬').CHKSYNC       LINKAGE NOT NAMED @L6A 29250000
         AIF   ('&MF(1)' EQ 'L' AND                                    +29284000
                '&LINKAGE' EQ '').CHKSYNC     NULL OK W/LIST FORM  @P9A 29318000
         AIF   ('&LINKAGE(1)' NE 'SVC' AND                             +29352000
                '&LINKAGE(1)' NE 'BRANCH').ERROR1  LINKAGE SPECIFIED   +29386000
                                                WITH INVALID VALUE @L6A 29420000
         AIF   (N'&LINKAGE LE 1 AND                                    +29454000
                N'&LINKAGE(1) LE 1).CHKSYNC     MORE THAN ONE OPERAND  +29488000
                                                  SPECIFIED?       @L6A 29522000
         MNOTE 4,'*** ''LINKAGE=&LINKAGE'' IS TOO LONG.'           @L6A 29556000
         MNOTE '    ARGUMENTS ARE IGNORED AFTER ''&LINKAGE(1)''.'  @L6A 29590000
.********************************************************************** 29624000
.*       CHECK FOR THE FOLLOWING TERMINATING ERROR SITUATIONS:     @L6A 29658000
.*        - SYNCH KEYWORD ISSUED WITH INVALID ARGUMENT             @L6A 29692000
.*        - SYNCH ARGUMENT YES WITHOUT REQUIRED LINKAGE=BRANCH     @L6A 29726000
.*                ON STANDARD OR EXECUTE FORM                      @P9A 29760000
.*        - SYNCH = YES MUTUALLY EXCLUSIVE WITH CONNECT, AREAID,   @L6A 29794000
.*           PRTY, AND WQEBLK KEYWORDS                             @L6A 29828000
.*        - SYNCH = YES MUTUALLY EXCLUSIVE WITH MCSFLAG=HRDCPY     @L6A 29862000
.********************************************************************** 29896000
.CHKSYNC ANOP                                                      @L6A 29930000
         AIF   ('&SYNCH' EQ '¬').CHKWSPR       SYNCH NOT NAMED     @L6A 29964000
         AIF   ('&SYNCH(1)' NE 'YES' AND                               +29998000
                '&SYNCH(1)' NE 'NO').ERROR3    SYNCH SPECIFIED WITH    +30032000
                                               WITH INVALID VALUE  @L6A 30066000
         AIF   (N'&SYNCH LE 1 AND                                      +30100000
                N'&SYNCH(1) LE 1).CHKSYN1      MORE THAN ONE OPERAND   +30134000
                                               SPECIFIED?          @L6A 30168000
         MNOTE 4,'*** ''SYNCH=&SYNCH'' IS TOO LONG.'               @L6A 30202000
         MNOTE '    ARGUMENTS ARE IGNORED AFTER ''&SYNCH(1)''.'    @L6A 30236000
.CHKSYN1 ANOP                                                      @L6A 30270000
         AIF   ('&SYNCH(1)' EQ 'NO').CHKWSPR   IF SYNCH¬=YES THEN SKIP +30304000
                                               LINKAGE AND MUTUALLY    +30338000
                                               EXCLUSIVE CHECKS    @L6A 30372000
         AIF   ('&LINKAGE(1)' NE 'BRANCH'  AND                         +30406000
                '&MF(1)' NE 'L').ERROR4        LINKAGE WRONG       @P9C 30440000
         AIF   ('&CONNECT' NE '¬' OR '&AREAID' NE '').ERROR5           +30474000
                                               CHECK FOR MUTUALLY      +30508000
                                               EXCLUSIVE KEYWORDS  @L6A 30542000
.********************************************************************** 30576000
.*       CHECK FOR THE FOLLOWING TERMINATING ERROR SITUATIONS:     @L6A 30610000
.*        - WSPARM KEYWORD ISSUED WITHOUT AN ARGUMENT- INLINE FORM @PAC 30644000
.*        - WSPARM SPECIFIED WITH VALUE OTHER THAN 0 AND           @L6A 30678000
.*            SYNCH¬='YES'                                         @L6A 30712000
.********************************************************************** 30746000
.CHKWSPR ANOP                                                      @L6A 30780000
         AIF   ('&WSPARM' EQ '¬').CHKCONN      WSPARM NOT NAMED    @L6A 30814000
         AIF   ('&MF(1)' EQ 'L' AND                                    +30848000
                '&WSPARM' EQ '').CHKCONN      NULL OK W/LIST FORM  @P9A 30882000
         AIF   ('&MF(1)' EQ 'E' AND                                    +30916000
                '&WSPARM' EQ '').CHKCONN    EXEC FORM HAS OWN MSG  @PAC 30950000
         AIF   ('&WSPARM(1)' EQ '').ERROR7     WSPARM KEYWORD SPECIFIED+30984000
                                               WITHOUT AN ARGUMENT @L6A 31018000
         AIF   ('&WSPARM(1)' NE '0' AND '&SYNCH(1)' NE 'YES').ERROR8   +31052000
                                               TEST FOR REQUIRED KEY-  +31086000
                                               WORDS W/ WSPARM¬=0  @L6A 31120000
         AIF   (N'&WSPARM LE 1 AND                                     +31154000
                N'&WSPARM(1) LE 1).CHKCONN     MORE THAN ONE OPERAND   +31188000
                                               SPECIFIED?          @L6A 31222000
         MNOTE 4,'*** ''WSPARM=&WSPARM'' IS TOO LONG.'             @L6A 31256000
         MNOTE '    ARGUMENTS ARE IGNORED AFTER ''&WSPARM(1)''.'   @L6A 31290000
.********************************************************************** 31324000
.*       CHECK FOR THE FOLLOWING TERMINATING ERROR SITUATION:      @L6A 31358000
.*        - CONNECT KEYWORD MUTUALLY EXCLUSIVE WITH THE SYSNAME,   @L2A 31392000
.*                    CONSID AND CONSNAME                          @01C 31426000
.*                                                                 @L2A 31460000
.********************************************************************** 31494000
.CHKCONN ANOP                     CHECK FOR CONNECT KEYWORD        @L6A 31528000
         AIF   ('&CONNECT' EQ '¬').CONNOK BRANCH IF NO CONNECT     @L2A 31562000
         AIF   ('&CONSID' NE '¬' OR '&SYSNAME' NE '¬' ).BADCON     @01C 31596000
         AIF   ('&CONSNAME' EQ '¬').TEXTK  VERIFY CONNECT NOT ISSUED   X31630000
                              WITH THESE KEYWORDS.. IF NO CONSNAME,    X31664000
                              SKIP OVER CONSNAME ERROR CHECK       @L5A 31698000
.BADCON  ANOP                                                      @L2A 31732000
         MNOTE 12,'NO TEXT GENERATED. ''CONNECT'' IS MUTUALLY EXCLUSIVEX31766000
               WITH THE CONSID, SYSNAME, AND CONSNAME KEYWORDS.'   @01C 31800000
&WTOERR  SETB  1                        A SEVERE MNOTE WAS ISSUED  @L2A 31834000
         AGO   .END                  TERMINATE MACRO PROCESSING    @L3C 31868000
.********************************************************************** 31902000
.*                                                                 @L3A 31936000
.*       THE CONNECT KEYWORD HAS NO ERRORS OR WAS NOT SPECIFIED    @L5C 31970000
.*       CHECK FOR THE FOLLOWING TERMINATING ERROR SITUATION:      @L3A 32004000
.*        - CONSID KEYWORD MUTUALLY EXCLUSIVE WITH THE CONSNAME    @L3A 32038000
.*                                                                 @L3A 32072000
.********************************************************************** 32106000
.CONNOK  ANOP                     NO CONNECT KEYWORD SPECIFIED     @L3A 32140000
         AIF   ('&CONSID' EQ '¬').TEXTK  BRANCH IF NO CONSID       @L5C 32174000
         AIF   ('&CONSNAME' EQ '¬').TEXTK    CONSID SPECIFIED. VERIFY  X32208000
                                          CONSNAME NOT SPECIFIED.  @L5C 32242000
         MNOTE 12,'NO TEXT GENERATED. ''CONSID'' IS MUTUALLY EXCLUSIVE X32276000
               WITH THE CONSNAME KEYWORD.'                         @L3A 32310000
&WTOERR  SETB  1                        A SEVERE MNOTE WAS ISSUED  @L3A 32344000
         AGO   .END                  TERMINATE MACRO PROCESSING    @L3A 32378000
.******************************************************************@L5A 32412000
.*                                                                 @L5A 32446000
.*       THE CONSID KEYWORD HAS NO ERRORS OR WAS NOT SPECIFIED.    @L5A 32480000
.*       CHECK FOR THE FOLLOWING TERMINATING ERROR SITUATIONS:     @L5A 32514000
.*       - TEXT KEYWORD MUTUALLY EXCLUSIVE WITH INLINE TEXT.       @L5A 32548000
.*                                                                 @L5A 32582000
.******************************************************************@L5A 32616000
.TEXTK   ANOP                        TEXT SPECIFIED                @L5A 32650000
.********************************************************************** 32684000
.*       IF BOTH TEXT AND INLINE TEXT ARE SPECIFIED, ISSUE AN      @L5A 32718000
.*       ERROR MESSAGE.                                            @L5A 32752000
.********************************************************************** 32786000
         AIF   ('&TEXT' EQ '¬' OR '&MESG' EQ '').CHCKMF            @L5A 32820000
         MNOTE 12,'NO TEXT GENERATED. ''TEXT'' AND INLINE TEXT ARE MUTUX32854000
               ALLY EXCLUSIVE.'      ISSUE ERROR MESSAGE           @L5A 32888000
&WTOERR  SETB  1                     A SEVERE MNOTE WAS ISSUED     @L5A 32922000
         AGO   .END                  TERMINATE MACRO PROCESSING    @L5A 32956000
.CHCKMF  ANOP                        NO CONNECT/KEYWORDS ERROR     @L3A 32990000
         AIF   ('&TEXT' EQ '¬').NOTTEXT   IF TEXT KEYWORD SPECIFIED,   X33024000
                                     USE IT FOR MLWTO CHECK        @L5A 33058000
&MLW     SETB  (N'&TEXT GT 1 OR N'&TEXT(1) GT 1) INDICATE IF THIS      X33092000
                                     IS A MULTI-LINE WTO           @PIC 33126000
.NOTTEXT ANOP                        NO CONNECT/KEYWORDS ERROR     @L3A 33160000
         AIF    ('&MF' EQ 'I' OR '&MF' EQ 'L').NUMCHK  CHECK FOR LIST  X33194000
                                     OR STANDARD FORM              @L2C 33228000
.********************************************************************** 33262000
.*                                                                      33296000
.*       NEITHER LIST NOR STANDARD FORM SPECIFIED. VERIFY THIS IS       33330000
.*       EXECUTE FORM AND THAT IT WAS PROPERLY SPECIFIED.               33364000
.*                                                                      33398000
.********************************************************************** 33432000
         AIF   (N'&MF EQ 2 AND '&MF(1)' EQ 'E').EXVALID  VERIFY VALID  X33466000
                                     EXECUTE MF STRUCTURE USED     @L2C 33500000
.********************************************************************** 33534000
.*       ISSUE ERROR MESSAGE:                                  @G860PSS 33568000
.* 12,INVALID MF OPERAND SPECIFIED-MF                          @G860PSS 33602000
.********************************************************************** 33636000
         IHBERMAC 35,,&MF                                               33670000
         MEXIT                                                          33704000
.********************************************************************** 33738000
.*                                                             @G860PSS 33772000
.*       EXECUTE FORM VALIDLY SPECIFIED. CHECK FOR             @G860PSS 33806000
.*       SPECIFICATION OF RUN-TIME PARAMETERS. (AN EXECUTE FORM    @L2C 33840000
.*       INVOCATION CAN ONLY REPRESENT A WTO BECAUSE THE WTOR      @L2A 33874000
.*       MACRO DOES ITS OWN EXECUTE FORM PROCESSING.)              @L2A 33908000
.*                                                             @G860PSS 33942000
.********************************************************************** 33976000
.EXVALID ANOP                        EXECUTE FORM VALIDLY USED     @L2A 34010000
&NAME    IHBINNRA &MF(2)             SET UP PARAMETER LIST ADDRESS      34044000
.********************************************************************** 34078000
.*       ALL DONE IF WTL                                       @G860PSS 34112000
.********************************************************************** 34146000
         AIF   (&IHBWTL).END         IF WTL, GO TO END OF MACRO         34180000
.********************************************************************** 34214000
.*       CHECK FOR EXCESSIVE MULTIPLE LINES WITH SYNCH=YES.        @L6A 34248000
.*       THE MAXIMUM NUMBER OF LINES ALLOWED WHEN SYNCH=YES IS     @L6A 34282000
.*       DEFINED IN THE VARIABLE &MAXLINS                          @L6A 34316000
.********************************************************************** 34350000
         AIF   ('&SYNCH(1)' EQ 'YES' AND                               +34384000
                 N'&SYSLIST GT &MAXLINS).ERROR2     TOO MANY LINES FOR +34418000
                                                    SYNCH=YES      @L6A 34452000
         AIF   ('&SYNCH(1)' EQ 'YES' AND                               +34486000
                 N'&TEXT GT &MAXLINS).ERROR2        TOO MANY LINES FOR +34520000
                                                    SYNCH=YES      @L6A 34554000
.********************************************************************** 34588000
.*       IF THE TEXT KEYWORD IS SPECIFIED, INSERT THE KEYWORD      @L5A 34622000
.*       VALUE INTO THE PARAMETER LIST IN PLACE OF INLINE          @L5A 34656000
.*       MESSAGE TEXT.                                             @L5A 34690000
.********************************************************************** 34724000
.ETEXTID ANOP                           CHECK FOR TEXT                  34758000
         AIF   ('&TEXT' EQ '¬').SETTEST SKIP DOWN IF NO TEXT       @L5A 34792000
         AIF   ('&TEXT' NE '').ETEXTDT  VERIFY DATA SPECIFIED      @L5A 34826000
         MNOTE 4,'''TEXT'' KEYWORD IGNORED. NO VALUE SPECIFIED.'   @L5A 34860000
         AGO   .SETTEST                 NO TEXT - SKIP DOWN        @L5A 34894000
.ETEXTDT ANOP                           TEXT KEYWORD SPECIFIED     @L5A 34928000
.********************************************************************** 34962000
.*       SET UP REGISTER 14 TO TEMPORARILY POINT TO MESSAGE TEXT   @L5A 34996000
.*       AREA IN PARAMETER LIST TO STORE TEXT VALUE.               @L5A 35030000
.********************************************************************** 35064000
&EMCS(9) SETB  1                        INDICATE IN EXT MCSFLAGS2  @L5A 35098000
         AIF   ('&TEXT(1,2)' EQ '').ETEXTL1    LINE TYPE NOT SPEC. @PKA 35132000
         MNOTE 0,'LINE TYPE ON EXECUTE FORM IGNORED.'              @PKA 35166000
&LTWARN  SETB  1                        ISSUE WARNING ONCE ONLY    @PKA 35200000
.ETEXTL1 ANOP                                                      @PKA 35234000
         AIF   (&MLW).ETEXTR2           BRANCH IF MULTILINE        @L5A 35268000
         AIF   ('&TEXT'(1,1) EQ '(').ETEXTRG BRANCH IF IN REGISTER @L5A 35302000
         LA    15,&TEXT(1)              LOAD TEXT VALUE            @L5A 35336000
         ST    15,4(0,1)                STORE TEXT ADDR INTO PLIST @L5A 35370000
         AGO   .SETREG                  SET UP POINTER TO PARMLIST @L5A 35404000
.ETEXTRG ANOP                           TEXT ADDRESS IN REGISTER   @L5A 35438000
         ST    &TEXT(1),4(0,1)          STORE TEXT ADDR INTO PLIST @L5A 35472000
         AGO   .SETREG                  SET UP POINTER TO PARMLIST @L5A 35506000
.ETEXTR2 ANOP                           MULTILINE W/VALUE IN REG   @L5A 35540000
&VALH1   SETC  '&TEXT(1,1)'             EXTRACT FIRST LINE'S ADDR  @L5A 35574000
         AIF   ('&VALH1' EQ '').SETREG  BRANCH IF NULL ENTRY       @L5A 35608000
         AIF   ('&VALH1'(1,1) NE  '(').ETEXTR4 BRANCH NOT REGISTER @L5A 35642000
&K       SETA  K'&VALH1                                                 35676000
&VALH1   SETC  '&VALH1'(2,&K-2)                                         35710000
         ST    &VALH1,4(0,1)            STORE TEXT ADDRESS         @L5A 35744000
         AGO   .SETREG                  SET UP POINTER TO PARMLIST @L5A 35778000
.ETEXTR4 ANOP                                                      @L5A 35812000
         LA    15,&VALH1                LOAD ADDR OF TEXT FIELD    @P8C 35846000
         ST    15,4(0,1)                STORE TEXT ADDR INTO PLIST @P8A 35880000
         AGO   .SETREG                  SET UP POINTER TO PARMLIST @L5A 35914000
.********************************************************************** 35948000
.*       IF ANY OTHER RUN-TIME WPX KEYWORDS WERE SPECIFIED,        @L5C 35982000
.*       SET REGISTER 14 TO POINT TO THE FIRST BYTE AFTER          @L2A 36016000
.*       THE MESSAGE TEXT FIELD.                                   @L2A 36050000
.********************************************************************** 36084000
.SETTEST ANOP                                                      @L5A 36118000
         AIF   ('&PRTY'    NE '¬' OR  '&CONSID'  NE '¬' OR             X36152000
                '&JOBID'   NE '¬' OR  '&JOBNAME' NE '¬' OR             X36186000
                '&KEY'     NE '¬' OR  '&TOKEN'   NE '¬').SETREG    @P4C 36220000
         AIF   ('&SYSNAME' NE '¬' OR                                   X36254000
                '&CONNECT' NE '¬').SETREG                          @01C 36288000
         AIF   ('&WSPARM'  NE '¬' OR  '&SYNCH(1)' NE '¬').SETREG   @PAC 36322000
         AIF   ('&CONSNAME' EQ '¬' AND '&CART' EQ '¬').CHEKQID         X36356000
                              IF NO RUN-TIME WPX KEYWORDS SPECIFIED,   X36390000
                               SKIP RIGHT TO SVC                   @L4C 36424000
.SETREG  ANOP                                                      @P4A 36458000
         LR    14,1                     FIRST BYTE OF PARM LIST    @L2A 36492000
         SR    15,15                    CLEAR REGISTER 15          @L2A 36526000
         AH    15,0(1,0)                ADD LENGTH OF TEXT + 4     @L2A 36560000
         AR    14,15                    FIRST BYTE AFTER TEXT      @L2A 36594000
.********************************************************************** 36628000
.*       IF THE PRTY KEYWORD IS SPECIFIED, INSERT IT INTO THE      @L2A 36662000
.*       PARAMETER LIST                                            @L2A 36696000
.********************************************************************** 36730000
         AIF   ('&PRTY' EQ '¬').ECONS   SKIP DOWN IF NO PRTY       @L2A 36764000
         AIF   ('&PRTY' NE '').EPRTYDT    VERIFY DATA SPECIFIED    @L2A 36798000
         MNOTE 4,'''PRTY'' KEYWORD IGNORED. NO VALUE SPECIFIED.'   @L2A 36832000
         AGO   .ECONS                   GO CHECK CONSID            @L2A 36866000
.EPRTYDT ANOP                           DATA SPECIFIED             @L2A 36900000
&EMCS(6) SETB  1                        INDICATE IN EXT MCSFLAGS   @L2A 36934000
         AIF   ('&PRTY'(1,1) EQ '(').EPRTYRG BRANCH IF IN REG      @L2A 36968000
         MVC   42(2,14),&PRTY(1)        INSERT PRTY INTO PLIST     @L2A 37002000
         AGO   .ECONS                   GO CHECK CONSID            @L2A 37036000
.EPRTYRG STH   &PRTY(1),42(0,14)        INSERT PRTY INTO PLIST     @L2A 37070000
.********************************************************************** 37104000
.*       IF THE CONSID IS SPECIFIED, INSERT IT INTO THE            @L2A 37138000
.*       PARAMETER LIST                                            @L2A 37172000
.********************************************************************** 37206000
.ECONS   AIF   ('&CONSID' EQ '¬').ECART   SKIP DOWN IF NO CONSID   @L4C 37240000
         AIF   ('&CONSID' NE '').ECONSDT  VERIFY DATA SPECIFIED    @L2A 37274000
         MNOTE 4,'''CONSID'' KEYWORD IGNORED. NO VALUE SPECIFIED.' @L2A 37308000
         AGO   .ECART                   GO CHECK CART              @L4C 37342000
.ECONSDT ANOP                           DATA SPECIFIED             @L2A 37376000
&EMCS(2) SETB  1                        INDICATE IN EXT MCSFLAGS   @L2A 37410000
         AIF   ('&CONSID'(1,1) EQ '(').ECONSRG  BRANCH IF IN REG   @L2A 37444000
         L     15,&CONSID(1)            LOAD CONSID                @L2A 37478000
         ST    15,72(0,14)              INSERT CONSID INTO PLIST   @L2A 37512000
         AGO   .ECART                   GO CHECK CART              @L4C 37546000
.ECONSRG ST    &CONSID(1),72(0,14)      INSERT CONSID INTO PLIST   @L2A 37580000
.********************************************************************** 37614000
.*       IF THE CART IS SPECIFIED, INSERT IT'S ADDRESS INTO THE    @L4A 37648000
.*       PARAMETER LIST                                            @L4A 37682000
.********************************************************************** 37716000
.ECART   AIF   ('&CART' EQ '¬').ECNNAM    SKIP DOWN IF NO CART     @L4A 37750000
         AIF   ('&CART' NE '').ECARTDT    VERIFY DATA SPECIFIED    @L4A 37784000
         MNOTE 4,'''CART'' KEYWORD IGNORED. NO VALUE SPECIFIED.'   @L4A 37818000
         AGO   .ECNNAM                  GO CHECK CONSNAME          @L4A 37852000
.ECARTDT ANOP                           DATA SPECIFIED             @L4A 37886000
         AIF   ('&CART'(1,1) EQ '(').ECARTRG    BRANCH IF IN REG   @L4A 37920000
         LA    15,&CART(1)              LOAD CART ADDRESS          @L4A 37954000
         ST    15,96(0,14)              INSERT CART ADR INTO PLIST @L4A 37988000
         AGO   .ECNNAM                  GO CHECK CONSNAME          @L4A 38022000
.ECARTRG ST    &CART(1),96(0,14)        INSERT CART ADR INTO PLIST @L4A 38056000
.********************************************************************** 38090000
.*       IF THE CONSNAME IS SPECIFIED, INSERT IT INTO THE          @L3A 38124000
.*       PARAMETER LIST                                            @L3A 38158000
.********************************************************************** 38192000
.ECNNAM  AIF   ('&CONSNAME' EQ '¬').EJOBID SKIP DOWN IF NO CONSNAME    X38226000
                                                                   @L3A 38260000
         AIF   ('&CONSNAME' NE '').ECNNADT VERIFY DATA SPECIFIED   @L3A 38294000
         MNOTE 4,'''CONSNAME'' KEYWORD IGNORED. NO VALUE SPECIFIED.'   X38328000
                                                                   @L3A 38362000
         AGO   .EJOBID                  GO CHECK KEY               @L3A 38396000
.ECNNADT ANOP                           DATA SPECIFIED             @L3A 38430000
&EMCS(7) SETB  1                                                   @L3A 38464000
         AIF   ('&CONSNAME'(1,1) EQ '(').ECNNARG BRANCH IF IN REG  @L3A 38498000
         MVC   84(8,14),&CONSNAME(1)    INSERT CONSNAME INTO PLIST @L3A 38532000
         AGO   .EJOBID                  GO CHECK KEY               @L3A 38566000
.ECNNARG MVC   84(8,14),0(&CONSNAME(1)) INSERT CONSNAME INTO PLIST @L3A 38600000
.********************************************************************** 38634000
.*       IF THE JOBID IS SPECIFIED, INSERT IT INTO THE             @L2A 38668000
.*       PARAMETER LIST                                            @L2A 38702000
.********************************************************************** 38736000
.EJOBID  AIF   ('&JOBID' EQ '¬').EJOBN   SKIP DOWN IF NO JOBID     @L2A 38770000
         AIF   ('&JOBID' NE '').EJOBIDT  VERIFY DATA SPECIFIED     @L2A 38804000
         MNOTE 4,'''JOBID'' KEYWORD IGNORED. NO VALUE SPECIFIED.'  @L2A 38838000
         AGO   .EJOBN                   GO CHECK JOBNAME           @L2A 38872000
.EJOBIDT ANOP                           DATA SPECIFIED             @L2A 38906000
         AIF   ('&JOBID'(1,1) EQ '(').EJOBIRG  BRANCH IF IN REG    @L2A 38940000
         MVC   44(8,14),&JOBID(1)       INSERT JOBID INTO PLIST    @L2A 38974000
         AGO   .EJOBN                   GO CHECK JOBNAME           @L2A 39008000
.EJOBIRG MVC   44(8,14),0(&JOBID(1))    INSERT JOBID INTO PLIST    @L2A 39042000
.********************************************************************** 39076000
.*       IF THE JOBNAME IS SPECIFIED, INSERT IT INTO THE           @L2A 39110000
.*       PARAMETER LIST                                            @L2A 39144000
.********************************************************************** 39178000
.EJOBN   AIF   ('&JOBNAME' EQ '¬').EKEY    SKIP DOWN IF NO JOBNAME @L2A 39212000
         AIF   ('&JOBNAME' NE '').EJOBNDT VERIFY DATA SPECIFIED    @L2A 39246000
         MNOTE 4,'''JOBNAME'' KEYWORD IGNORED. NO VALUE SPECIFIED.'    X39280000
                                                                   @L2A 39314000
         AGO   .EKEY                    GO CHECK KEY               @L2A 39348000
.EJOBNDT ANOP                           DATA SPECIFIED             @L2A 39382000
         AIF   ('&JOBNAME'(1,1) EQ '(').EJOBNRG  BRANCH IF IN REG  @L2A 39416000
         MVC   52(8,14),&JOBNAME(1)     INSERT JOBNAME INTO PLIST  @L2A 39450000
         AGO   .EKEY                    GO CHECK KEY               @L2A 39484000
.EJOBNRG MVC   52(8,14),0(&JOBNAME(1))  INSERT JOBNAME INTO PLIST  @L2A 39518000
.********************************************************************** 39552000
.*       IF THE KEY IS SPECIFIED, INSERT IT INTO THE               @L2A 39586000
.*       PARAMETER LIST                                            @L2A 39620000
.********************************************************************** 39654000
.EKEY    AIF   ('&KEY' EQ '¬').ETOKEN   SKIP DOWN IF NO KEY        @L2A 39688000
         AIF   ('&KEY' NE '').EKEYDT    VERIFY DATA SPECIFIED      @L2A 39722000
         MNOTE 4,'''KEY'' KEYWORD IGNORED. NO VALUE SPECIFIED.'    @L2A 39756000
         AGO   .ETOKEN                  GO CHECK TOKEN             @L2A 39790000
.EKEYDT  ANOP                           DATA SPECIFIED             @L2A 39824000
         AIF   ('&KEY'(1,1) EQ '(').EKEYRG KEY IN REG?             @L2A 39858000
         MVC   60(8,14),&KEY(1)         INSERT KEY INTO PLIST      @L2A 39892000
         AGO   .ETOKEN                  GO ISSUE SVC               @L2A 39926000
.EKEYRG  MVC   60(8,14),0(&KEY(1))      INSERT KEY INTO PLIST      @L2A 39960000
.********************************************************************** 39994000
.*       IF THE TOKEN IS SPECIFIED, INSERT IT INTO THE             @L2A 40028000
.*       PARAMETER LIST                                            @L2A 40062000
.********************************************************************** 40096000
.ETOKEN  AIF   ('&TOKEN' EQ '¬').ESYSN   SKIP DOWN IF NO TOKEN     @L2A 40130000
         AIF   ('&TOKEN' NE '').ETOKNDT VERIFY DATA SPECIFIED      @L2A 40164000
         MNOTE 4,'''TOKEN'' KEYWORD IGNORED. NO VALUE SPECIFIED.'  @L2A 40198000
         AGO   .ESYSN                   GO CHECK SYSNAME           @L2A 40232000
.ETOKNDT ANOP                           DATA SPECIFIED             @L2A 40266000
         AIF   ('&TOKEN'(1,1) EQ '(').ETOKNRG BRANCH IF IN REG     @L2A 40300000
         L     15,&TOKEN(1)             LOAD TOKEN                 @L2A 40334000
         ST    15,68(0,14)              INSERT TOKEN INTO PLIST    @L2A 40368000
         AGO   .ESYSN                   GO CHECK SYSNAME           @L2A 40402000
.ETOKNRG ST    &TOKEN(1),68(0,14)       INSERT TOKEN INTO PLIST    @L2A 40436000
.********************************************************************** 40470000
.*       IF THE SYSNAME IS SPECIFIED, INSERT IT INTO THE           @L2A 40504000
.*       PARAMETER LIST                                            @L2A 40538000
.********************************************************************** 40572000
.ESYSN   AIF   ('&SYSNAME' EQ '¬').ECONN   SKIP DOWN IF NO SYSNAME @L2A 40606000
         AIF   ('&SYSNAME' NE '').ESYSNDT VERIFY DATA SPECIFIED    @L2A 40640000
         MNOTE 4,'''SYSNAME'' KEYWORD IGNORED. NO VALUE SPECIFIED.'    X40674000
                                                                   @L2A 40708000
         AGO   .ECONN                   GO CHECK CONNECT           @01C 40742000
.ESYSNDT ANOP                           DATA SPECIFIED             @L2A 40776000
         AIF   ('&SYSNAME'(1,1) EQ '(').ESYSNRG BRANCH IF IN REG   @L2A 40810000
         MVC   76(8,14),&SYSNAME(1)     INSERT SYSNAME INTO PLIST  @L2A 40844000
         AGO   .ECONN                   GO CHECK CONNECT           @01C 40878000
.ESYSNRG MVC   76(8,14),0(&SYSNAME(1))  INSERT SYSNAME INTO PLIST  @L2A 40912000
.********************************************************************** 40946000
.*       IF THE CONNECT ID IS SPECIFIED, INSERT IT INTO THE        @L2A 40980000
.*       PARAMETER LIST                                            @L2A 41014000
.********************************************************************** 41048000
.ECONN   ANOP                                                      @L6C 41082000
         AIF   ('&CONNECT' EQ '¬').ESNCHY  SKIP DOWN IF NO CONNECT @L6A 41116000
         AIF   ('&CONNECT' NE '').ECONNDT  VERIFY DATA SPECIFIED   @L2A 41150000
         MNOTE 4,'''CONNECT'' KEYWORD IGNORED. NO VALUE SPECIFIED.'    X41184000
                                                                   @L2A 41218000
         AGO   .ESNCHY                  GO CHECK SYNCH KEYWORD     @L6C 41252000
.ECONNDT ANOP                           DATA SPECIFIED             @L2A 41286000
&EMCS(4) SETB  1                        INDICATE IN EXT MCSFLAGS   @L2A 41320000
         AIF   ('&CONNECT'(1,1) EQ '(').ECONNRG BRANCH IF IN REG   @L2A 41354000
         L     15,&CONNECT(1)           LOAD CONNECT ID            @L2A 41388000
         ST    15,16(0,14)              INSERT CONNECT INTO PLIST  @L2A 41422000
         AGO   .ESNCHY                  GO CHECK SYNCH KEYWORD     @L6C 41456000
.ECONNRG ST    &CONNECT(1),16(0,14)     INSERT CONNECT INTO PLIST  @L2A 41490000
.********************************************************************** 41524000
.*       IF SYNCH WAS SPECIFIED CHECK IT AND SET BIT IN THE        @PAC 41558000
.*       EXTENDED MCS FLAG FIELD                                   @L6A 41592000
.********************************************************************** 41626000
.ESNCHY  ANOP                                                      @PAA 41660000
         AIF   ('&SYNCH' EQ '¬').EWSPRM    SKIP DOWN IF NO SYNCH   @PAA 41694000
         AIF   ('&SYNCH' NE '').ESYNCDT    VERIFY DATA SPECIFIED   @PAA 41728000
         MNOTE 4,'''SYNCH'' KEYWORD IGNORED. NO VALUE SPECIFIED.'  @PAA 41762000
         AGO   .EWSPRM                                             @PAA 41796000
.ESYNCDT ANOP                                                      @PAA 41830000
&SYNN    SETB  ('&SYNCH(1)' EQ 'NO')    SYNCH MUST BE ZEROED       @PAC 41864000
&EMCS(14) SETB  ('&SYNCH(1)' EQ 'YES')  INDICATE IN EXT MCSFLAGS   @PAC 41898000
.********************************************************************** 41932000
.*       IF THE WAIT STATE PARAMETER LIST ADDRESS WAS SPECIFIED    @L6A 41966000
.*       INSERT IT INTO THE PARAMETER LIST.  IF WSPARM=0,          @P9C 42000000
.*       PLACE ZERO IN THE PARAMETER LIST.                         @P9C 42034000
.********************************************************************** 42068000
.EWSPRM  ANOP                                                      @L6A 42102000
         AIF   ('&WSPARM' EQ '¬').WPXEMCS  SKIP DOWN IF NO WSPARM  @PAC 42136000
         AIF   ('&WSPARM(1)' EQ '0').EWSNOWS                       @P9C 42170000
         AIF   ('&WSPARM(1)' NE '').EWSDT                          @P9C 42204000
         MNOTE 4,'''WSPARM'' KEYWORD IGNORED. NO VALUE SPECIFIED.' @PAA 42238000
         AGO   .WPXEMCS                                            @PAA 42272000
.EWSDT   ANOP                                                      @PAA 42306000
         AIF   ('&WSPARM'(1,1) EQ '(').EWSPMRG  BRANCH IF IN REG   @L6A 42340000
.EWSPMDT ANOP                           ADDRESS SPECIFIED          @L6A 42374000
         LA    15,&WSPARM(1)            LOAD WSPARM ADDRESS        @P9C 42408000
         ST    15,100(0,14)             INSERT WSPARM INTO PLIST   @L6A 42442000
         AGO   .WPXEMCS                 GENERATE MCS EXT FLAGS     @L6A 42476000
.EWSNOWS ANOP                           WAIT STATE TO BE ZEROED    @P9C 42510000
         SR    15,15                    NO ASSOCIATED WAIT STATE   @P9C 42544000
         ST    15,100(0,14)             ZERO WSPARM FIELD          @P9C 42578000
         AGO   .WPXEMCS                 GENERATE MCS EXT FLAGS     @L6A 42612000
.EWSPMRG ANOP                           REGISTER SPECIFIED         @L6A 42646000
         ST    &WSPARM(1),100(0,14)     INSERT WSPARM  INTO PLIST  @L6A 42680000
.********************************************************************** 42714000
.*       CHECK TO SEE IF ANY OF THE EXTENDED MCSFLAGS NEEDS TO     @L2C 42748000
.*       BE SET. THE FLAGS MUST BE UPDATED IF ANY OF THE           @01C 42782000
.*       CONSID, CONNECT, CONSNAME OR PRTY KEYWORDS WERE           @L4C 42816000
.*       SPECIFIED, OR SYNCH=YES. IF SYNCH=NO WAS SPECIFIED,       @PAC 42850000
.*       TURN THE SYNCH FLAG OFF.                                  @PAA 42884000
.********************************************************************** 42918000
.WPXEMCS ANOP                           SET NEW EXTENDED MCSFLAGS  @L2C 42952000
         AIF   (&EMCS(2) OR &EMCS(3) OR &EMCS(4) OR                    X42986000
                &EMCS(6) OR &EMCS(7) OR &EMCS(14) OR                   +43020000
                &EMCS(9)).WPXEMFS   SET EXTENDED MCS FLAGS, IF ON  @L6C 43054000
         AIF    (&SYNN).WPXSYN      SYNCH MUST BE TURNED OFF       @PAA 43088000
         AGO   .EXECUTE             IF NONE, ISSUE SVC OR BRANCH ENTRY +43122000
                                    WTO                            @L6C 43156000
.********************************************************************** 43190000
.*       TURN ON THE EXTENDED MCSFLAGS WHICH MAY NEED TO BE        @L2A 43224000
.*       SET FOR THE EXECUTE FORM OF THE MACRO                     @L2A 43258000
.********************************************************************** 43292000
.WPXEMFS ANOP                       SET THE EXTENDED MCS FLAGS     @L5A 43326000
         OI    4(14),B'&EMCS(1)&EMCS(2)&EMCS(3)&EMCS(4)&EMCS(5)&EMCS(6)X43360000
               &EMCS(7)&EMCS(8)'        UPDATE EXTENDED MCS FLAGS  @L2A 43394000
         OI    5(14),B'&EMCS(9)&EMCS(10)&EMCS(11)&EMCS(12)&EMCS(13)&EMCX43428000
               S(14)&EMCS(15)&EMCS(16)' UPDATE EXTENDED MCS FLAGS2 @L5A 43462000
.WPXSYN  ANOP                        TURN SYNCH OFF IF NECESSARY   @PAA 43496000
         AIF   (NOT(&SYNN)).WPXETXT     NOT SYNCH=NO               @PAA 43530000
         NI    5(14),B'11111011'        SET SYNCH FLAG OFF         @PAA 43564000
.********************************************************************** 43598000
.*       IF THIS IS A MULTILINE WTO, CHECK TO SEE IF THE TEXT      @L5A 43632000
.*       KEYWORD WAS SPECIFIED. IF SO, STORE THE ADDRESS OF EACH   @L5A 43666000
.*       LINE OF TEXT IN THE PARAMETER LIST.                       @L5A 43700000
.********************************************************************** 43734000
.WPXETXT ANOP                           CHECK FOR TEXT ON MLWTO    @L5A 43768000
         AIF   ('&TEXT' EQ '¬' OR NOT &MLW).EXECUTE  SKIP IF NOT A     +43802000
                                        MULTILINE W/TEXT KEYWORD   @L6C 43836000
.********************************************************************** 43870000
.*       MOVE THE TEXT ADDRESSES INTO THE PARAMETER LIST           @L5A 43904000
.********************************************************************** 43938000
&MLTTIND SETA  2                        LINE TYPE INDEX            @L5A 43972000
&MLINDX  SETA  4                        OFFSET TO TEXT ADDRESS     @L5A 44006000
&H       SETA  2                        PROCESSED MAJOR            @L5A 44040000
         AIF   (&H GT N'&TEXT).EXECUTE  ISSUE SVC OR BRANCH ENTRY WTO  +44074000
                                        WHEN COMPLETE              @L6C 44108000
         XR    15,15                    CLEAR INDEX FOR INSERTS    @L5A 44142000
         IC    15,3(14)                 SET LENGTH OF WPX          @L5A 44176000
         LA    14,4(15,14)              POINT TO MULTILINE ENTRIES @L5A 44210000
.EMLW00  ANOP                           BEGIN LOOP FOR MINORS      @L5A 44244000
         AIF   (&H GT N'&TEXT).EXECUTE  ISSUE SVC OR BRANCH ENTRY WTO  +44278000
                                        WHEN COMPLETE              @L6C 44312000
&VALH    SETC  '&TEXT(&H)'              EXTRACT CURRENT VALUE      @L5A 44346000
&VALH1   SETC  '&TEXT(&H,1)'            EXTRACT TEXT ADDRESS       @L5A 44380000
&VALH2   SETC  '&TEXT(&H,2)'            EXTRACT LINE TYPE          @PKA 44414000
         AIF   ('&VALH2' EQ '').ETEXTL2       LINE TYPE NOT SPEC.  @04C 44448000
         AIF   (&LTWARN).ETEXTL2        WARNING ALREADY ISSUED     @PKA 44482000
         MNOTE 0,'LINE TYPE ON EXECUTE FORM IGNORED.'              @PKA 44516000
&LTWARN  SETB  1                        ISSUE WARNING ONCE ONLY    @PKA 44550000
.ETEXTL2 ANOP                                                      @PKA 44584000
         AIF   ('&VALH1'  EQ     '').EMLW02 BRANCH IF NULL LINE    @L5A 44618000
         AIF   ('&VALH1'(1,1) EQ '(').EMLW01 BRANCH IF SPECIFIED       X44652000
                                        IN REGISTER                @L5A 44686000
         LA    15,&VALH1                LOAD ADDR OF TEXT FIELD    @P8C 44720000
         ST    15,&MLINDX.(14)          STORE TEXT ADDR INTO PLIST @P8A 44754000
         AGO   .EMLW02                  CONTINUE PROCESSING        @L5A 44788000
.EMLW01  ANOP                           TEXT IN REGISTER           @L5A 44822000
&K       SETA  K'&VALH1                                                 44856000
&VALH1   SETC  '&VALH1'(2,&K-2)                                         44890000
         ST    &VALH1,&MLINDX.(14)      STORE TEXT ADDRESS         @L5A 44924000
.EMLW02  ANOP                           UPDATE POINTERS            @L5A 44958000
&H       SETA  &H+1                     UPDATE NUMBER OF LINES     @L5A 44992000
&MLINDX  SETA  &MLINDX+8                INDEX TO NEXT PLIST ENTRY  @L5A 45026000
         AGO   .EMLW00                  CONTINUE                   @L5A 45060000
.********************************************************************** 45094000
.*       NO WPX KEYWORDS SPECIFIED. CHECK FOR QID              @G860PSS 45128000
.********************************************************************** 45162000
.CHEKQID ANOP                           CHECK FOR QID KEYWORD      @L2A 45196000
         AIF   (T'&QID EQ 'O').EXECUTE  QID SPECIFIED?             @L6C 45230000
         LR    14,1                     REG 14 GETS PLIST ADDR   X02050 45264000
         AH    14,0(1,0)                UPDATE TO QID ADDRESS    YM1995 45298000
         AIF   ('&QID'(1,1) EQ '(').QIDREG  BRANCH IF IN A REG     @L2C 45332000
         MVC   6(2,14),&QID(1)          INSERT QID IN PARM LIST  X02050 45366000
         AGO   .EXECUTE                 GO TO GENERATE SVC 35 OR BRANCH+45400000
                                        ENTRY WTO                  @L6C 45434000
.QIDREG  ANOP                           QID IS IN A REGISTER       @L2C 45468000
         MVC   6(2,14),0(&QID(1))       INSERT QID INTO PARM LIST  @L2C 45502000
.********************************************************************** 45536000
.*       ALL EXECUTE FORM PROCESSING COMPLETE. GENERATE SVC 35 OR  @L6C 45570000
.*       BRANCH ENTRY WTO                                          @L6A 45604000
.********************************************************************** 45638000
         AGO   .EXECUTE                 ISSUE SVC 35 OR BRANCH ENTRY   +45672000
                                        WTO                        @L6C 45706000
.********************************************************************** 45740000
.*                                                                 @L2A 45774000
.*       STANDARD OR LIST FORM SPECIFIED. DETERMINE IF SINGLE-     @L2A 45808000
.*       LINE OR MULTI-LINE WTO AND WHETHER PROPER AMOUNT OF       @L2A 45842000
.*       TEXT SPECIFIED AND CHECK FOR THE FOLLOWING ERROR:         @L5C 45876000
.*                                                                 @L2A 45910000
.*       - NEITHER INLINE TEXT NOR THE TEXT KEYWORD SPECIFIED      @L5A 45944000
.*         ON THE STANDARD OR LIST FORM OF WTO.                    @L5A 45978000
.*                                                                 @L5A 46012000
.********************************************************************** 46046000
.NUMCHK  ANOP                       EITHER STANDARD OR LIST FORM X02007 46080000
         AIF   ('&TEXT' NE '¬' OR  '&MESG' NE '').TEXTOK BRANCH IF     X46114000
                                     SOME KIND OF TEXT SPECIFIED   @L5A 46148000
.*       AIF   ('&MF(1)' EQ 'E').TEXTK  NO TEXT VALUE REQUIRED ON THE   46182000
.*                                   EXECUTE FORM OF WTO           @L5A 46216000
         MNOTE 12,'NO TEXT GENERATED. ''TEXT'' OR INLINE TEXT MUST BE SX46250000
               PECIFIED.'                                          @L5A 46284000
&WTOERR  SETB  1                     A SEVERE MNOTE WAS ISSUED     @L5A 46318000
         AGO   .END                  TERMINATE MACRO PROCESSING    @L5A 46352000
.TEXTOK  ANOP                                                      @L5A 46386000
         AIF   ('&TEXT' NE '¬').TXTNCHK   IF TEXT KEYWORD SPECIFIED,   X46420000
                                     USE IT FOR MLWTO CHECK        @L5A 46454000
.********************************************************************** 46488000
.*       TEXT KEYWORD NOT SPECIFIED. ASSUME INLINE TEXT, OR MF=L   @L5A 46522000
.*       TEXT KEYWORD NOT SPECIFIED. CHECK USING INLINE TEXT       @L5A 46556000
.********************************************************************** 46590000
         AIF   (&IHBWTOR).MLOK       IF THIS WAS FROM WTOR THE CHECKS  +46624000
                                     AND THE MLW FLAG BIT WAS SET IN   +46658000
                                     THE WTOR MACRO                @L6A 46692000
         AIF   (N'&SYSLIST EQ 0 OR N'&SYSLIST GT 255).NOTXT ERROR IF   X46726000
                   EITHER NO TEXT OR TOO MANY LINES SPECIFIED  @G64DPSS 46760000
         AIF   ('&SYNCH(1)' EQ 'YES' AND                               +46794000
                 N'&SYSLIST GT &MAXLINS).ERROR2     TOO MANY LINES FOR +46828000
                                                    SYNCH=YES      @L6A 46862000
&MLW     SETB  (N'&SYSLIST NE 1 OR N'&SYSLIST(1) NE 1) INDICATE IF     X46896000
                                     THIS IS A MULTI-LINE WTO    X02007 46930000
         AGO   .CONNCHK              CHECK FOR CONNECT WITH SLWTO  @L5A 46964000
.********************************************************************** 46998000
.*       TEXT KEYWORD SPECIFIED. CHECK USING TEXT KEYWORD DATA     @L5A 47032000
.********************************************************************** 47066000
.TXTNCHK ANOP                                                      @L5A 47100000
         AIF   (N'&TEXT EQ 0 AND '&MF' NE 'L').NOTXT  ERROR IF         X47134000
                   ZERO LINES SPECIFIED AND NOT LIST FORM OF MACRO @PIA 47168000
         AIF   (N'&TEXT GT 255).NOTXT   ERROR IF TOO MANY LINES        X47202000
                   SPECIFIED                                       @PIC 47236000
         AIF   ('&SYNCH(1)' EQ 'YES' AND                               +47270000
                 N'&TEXT GT &MAXLINS).ERROR2        TOO MANY LINES FOR +47304000
                                                    SYNCH=YES      @L6A 47338000
.********************************************************************** 47372000
.*                                                                 @L2A 47406000
.*       CHECK FOR THE FOLLOWING TERMINATING ERROR SITUATION:      @L2A 47440000
.*       - CONNECT KEYWORD MUTUALLY EXCLUSIVE WITH SINGLE-LINE WTO @L2A 47474000
.*                                                                 @L2A 47508000
.********************************************************************** 47542000
.CONNCHK ANOP                                                      @L5A 47576000
         AIF   ('&CONNECT' EQ '¬' OR &MLW).MLOK  ERROR IF CONNECT      X47610000
                                      USED ON SINGLE-LINE WTO      @L2A 47644000
         MNOTE 12,'NO TEXT GENERATED. ''CONNECT'' IS MUTUALLY EXCLUSIVEX47678000
                WITH SINGLE LINE WTO.'                             @L2A 47712000
&WTOERR  SETB  1                        A SEVERE MNOTE WAS ISSUED  @L2A 47746000
         AGO   .END                  TERMINATE MACRO PROCESSING    @L2A 47780000
.MLOK    ANOP                        NO CONNECT/SINGLE-LINE ERROR  @L2A 47814000
         AIF   ('&MF' EQ 'I').IROUT  CHECK FOR STANDARD FORM            47848000
.********************************************************************** 47882000
.*                                                             @G860PSS 47916000
.*       LIST FORM SPECIFIED                                   @G860PSS 47950000
.*                                                             @G860PSS 47984000
.********************************************************************** 48018000
         AIF   (&IHBWTOR).WPXCHK    BRANCH FOR WTOR                     48052000
&NAME    DS    0F                                                       48086000
         AGO   .WPXCHK                                                  48120000
.*********************************************************************  48154000
.*                                                             @G860PSS 48188000
.*       INLINE FORM WAS SPECIFIED                             @G860PSS 48222000
.*                                                             @G860PSS 48256000
.********************************************************************** 48290000
.IROUT   AIF   (&IHBWTOR).WPXCHK    FOR A WTOR, THE WTOR MACRO HAS     X48324000
                                    ALREADY DONE THE CNOP AND BAL  @L2C 48358000
         CNOP  0,4                                                      48392000
&NAME    BAL   1,&GNAME.A               BRANCH AROUND MESSAGE           48426000
.WPXCHK  ANOP                       DETERMINE WHETHER TO BUILD WPX      48460000
&J       SETA  0                    INITIALIZE INDEX               @L2A 48494000
.TRYLOOP ANOP                                                      @L5A 48528000
         AIF   (&J GE N'&MCSFLAG OR T'&MCSFLAG EQ 'O').TRYKEYS     @L2A 48562000
&J       SETA  &J+1                 MORE MCSFLAG VALUES TO CHECK   @L2A 48596000
         AIF   ('&MCSFLAG(&J)' NE 'BUSYEXIT').TRYLOOP  IF NOT BUSYEXIT X48630000
                                    SPECIFIED, THEN CHECK NEXT MCSFLAG X48664000
                                    PARAMETER                      @L2A 48698000
         AIF   (NOT &IHBWTOR).BUSYOK BUSYEXIT NOT ALLOWED ON WTOR  @L2A 48732000
         MNOTE 4,'MCSFLAG=BUSYEXIT IGNORED. NOT VALID ON WTOR.'    @L2A 48766000
         AGO   .TRYKEYS             TEST OTHER KEYWORDS            @L2A 48800000
.BUSYOK  ANOP                       BUSYEXIT VALIDLY SPECIFIED     @L2A 48834000
&IWPXBIT SETB 1                     INDICATE WPX IS TO BE BUILT    @L2A 48868000
&EMCS(1) SETB 1                     INDICATE BUSYEXIT SPECIFIED VIA    X48902000
                                    EXTENDED MCSFLAG               @L2A 48936000
.TRYKEYS ANOP                       TEST FOR OTHER WPX KEYWORDS    @L2A 48970000
.********************************************************************** 49004000
.*                                                                 @P4A 49038000
.*       THE FOLLOWING WPX CHECKS ARE SEPARATED SO THIS MACRO      @P4A 49072000
.*       RUNS IN ASSEMBLER F.                                      @P4A 49106000
.*                                                                 @P4A 49140000
.********************************************************************** 49174000
.*       AIF   (&IWPXBIT).CHEKMCS   IF ALREADY DETERMINED TO BUILD A    49199561
.*                                  WPX, SKIP THIS CHECK           @L2A 49225061
.* *** ABOVE CHECK COMMENTED OUT, TEMPORARY FIX OF MVS BUG *** @D61CDFG 49250561
         AIF   ('&JOBID'   NE '¬' OR  '&JOBNAME' NE '¬' OR             X49276000
                '&SYSNAME' NE '¬' OR  '&KEY'     NE '¬' OR             X49310000
                '&TOKEN'   NE '¬').SETWPX                          @01C 49344000
         AIF   ('&CONSID'  NE '¬' OR  '&PRTY'    NE '¬' OR             X49378000
                '&SUBSMOD' NE ''  OR                                   X49412000
                '&CONNECT' NE '¬' OR  '&CONSNAME' NE '¬' ).SETWPX  @D2C 49446000
         AIF   ('&CART'    NE '¬' OR  '&TEXT'    NE '¬').SETWPX    @PCC 49480000
         AIF   ('&WSPARM'  NE '¬' AND '&MF'  NE 'I').SETWPX        @PCA 49514000
         AIF   ('&WSPARM'  NE '¬' AND '&WSPARM' NE '0').SETWPX     @PCA 49548000
         AIF   ('&SYNCH'   NE '¬' AND '&MF'  NE 'I').SETWPX        @PCA 49582000
         AIF   ('&SYNCH'   NE '¬' AND '&SYNCH' NE 'NO').SETWPX     @PCA 49616000
         AIF   (NOT &RCNSPEC).CHEKMCS                              @L3C 49650000
.SETWPX  ANOP                       WPX IS TO BE BUILT             @P4A 49684000
.*  THE FOLLOWING KEYWORDS ARE NEW IN HBB4410. IF ANY OF THEM      @PJA 49718000
.*  IS SPECIFIED, WE BUILD A VERSION 2 WPX. OTHERWISE,             @PJA 49752000
.*  A VERSION 1 WPX WILL BE BUILT.                                 @PJA 49786000
         AIF   ('&CONSNAME' NE '¬' OR                                  X49820000
                '&CART'    NE '¬' OR  '&TEXT'    NE '¬' OR             X49854000
                '&SYNCH'   NE '¬' OR  '&WSPARM'  NE '¬').SETVER2   @01C 49888000
         AIF   (&RCNSPEC).SETVER2   RPLYISUR WAS SPECIFIED (WTOR)  @PJA 49922000
         AGO    .SETVER1            SET VERSION 1 LEVEL WPX        @PJA 49956000
.SETVER2 ANOP                                                      @PJA 49990000
&IWPXVER SETC '2'                   INDICATE VERSION 2 WPX              50024000
.SETVER1 ANOP                                                      @PJA 50058000
&IWPXBIT SETB 1                     INDICATE WPX IS TO BE BUILT    @L2A 50092000
.CHEKMCS ANOP                       CHECK WHETHER TO SET MCSFLAGS  @L2A 50126000
.*    THE MCS BIT INDICATES WHETHER MCS FLAGS WILL BE SET        X02050 50160000
.*    (ON IF EITHER ROUTING CODES, DESCRIPTOR CODES, MESSAGE TYPE       50194000
.*    OR QID INFORMATION IS SPECIFIED)                                  50228000
&IHBMCS  SETB  (T'&ROUTCDE NE 'O' OR T'&MSGTYP NE 'O' OR               X50262000
               T'&DESC NE 'O')                                 @YA17152 50296000
&IHBMCS  SETB  (&IHBMCS OR (T'&QID NE 'O' AND NOT &IWPXBIT))   @YA17152 50330000
.********************************************************************** 50364000
.*                                                                 @L2A 50398000
.*  DETERMINE WHICH ROUTING CODES HAVE BEEN SPECIFIED, IF ANY:     @L2A 50432000
.*    - ONLY ROUTING CODES 1-28 AND 41-128 MAY BE SET.         @YA10057 50466000
.*    - ROUTING CODES 29-40 ARE RESERVED AND IGNORED IF        @YA10057 50500000
.*        IF SPECIFIED.                                        @YA10057 50534000
.*    - IF ANY ROUTING CODES GREATER THAN 16 ARE SPECIFIED (WITHIN @L2A 50568000
.*        1-128 AND INCLUDING 29-40) AN EXTENDED FORMAT WPL    @YA10057 50602000
.*        (WPX) WILL BE BUILT.                                 @YA10057 50636000
.*    - IF NONE OF ROUTING CODES 1-28 OR 41-128 ARE SET,       @YA10057 50670000
.*        A DEFAULT SETTING OF ROUTING CODE 2 IS APPLIED.      @YA10057 50704000
.*    - IF THE ROUTCDE KEYWORD IS NOT SPECIFIED:                   @L2A 50738000
.*        .IF MCSFLAG=REG0, QREG0 OR CONSID KEYWORD IS SPECIFIED,  @L2A 50772000
.*           THEN NO ROUTING CODES ARE SET                         @L2A 50806000
.*        .IF REG0/QREG0/CONSID NOT USED, IF DESCRIPTOR CODE       @02C 50840000
.*           INFORMATION IS SPECIFIED, THEN THE DEFAULT IS SET.    @02C 50874000
.*           OTHERWISE, NO ROUTING CODES ARE SET.                  @02C 50908000
.*                                                                 @L2A 50942000
.********************************************************************** 50976000
         AIF   (T'&ROUTCDE NE 'O').YESROUT ROUTING CODES?          @L2M 51010000
         AIF   ('&CONSID'  NE '¬' OR '&CONSNAME' NE '¬').ENDROUT       X51044000
                                   IF CONSID OR CONSNAME SPECIFIED     X51078000
                                    THEN SET NO ROUTING CODES      @L3C 51112000
&J       SETA  0                    NO ROUTING CODES. SET UP INDEX @L2A 51146000
.DEFLAG  ANOP                       CHECK FOR MCSFLAG=REG0/QREG0   @L2M 51180000
         AIF   (&J EQ N'&MCSFLAG OR T'&MCSFLAG EQ 'O').NOREG0      @L2M 51214000
&J       SETA  &J+1                 MORE MCSFLAG VALUES TO CHECK   @L2M 51248000
         AIF   ('&MCSFLAG(&J)' EQ 'REG0' OR '&MCSFLAG(&J)' EQ 'QREG0').*51282000
               ENDROUT              IF MCSFLAG VALUE 'REG0' OR 'QREG0' X51316000
                                    SPECIFIED, IGNORE ALL ROUTING CODES 51350000
         AGO   .DEFLAG              CHECK NEXT MCSFLAG VALUE       @L2C 51384000
.NOREG0  ANOP                       MCSFLAG=REG0/QREG0 NOT USED    @L2C 51418000
         AIF   ('&MSGTYP' NE '').ENDROUT BYPASS SETTING OF ROUTE CODE  X51452000
                                    2 IF MSGTYP SPECIFIED          @02A 51486000
&RB(2)   SETB  (&IHBMCS)            SET DEFAULT ROUTING CODE   @YA17152 51520000
         AGO   .ENDROUT             DONE WITH ROUTING CODE CHECKS  @L2C 51554000
.YESROUT ANOP                                                           51588000
.*                                                                      51622000
.*    ROUTING CODES HAVE BEEN SPECIFIED. DETERMINE WHICH CODES     @L2C 51656000
.*    ARE TO BE USED AND SET THE APPROPRIATE BITS IN STRING 'RB'.  @L2A 51690000
.*    ROUTING CODE RANGES ARE ACCEPTED AS LONG AS:                 @L2A 51724000
.*      - THE SECOND NUMBER OF THE RANGE  >=  THE FIRST NUMBER     @L2A 51758000
.*      - BOTH NUMBERS ARE WITHIN THE RANGE 1-128                  @L2A 51792000
.*      - THE NUMBERS OF THE RANGE ARE SEPARATED BY A DASH (-)     @L2A 51826000
.*                                                                      51860000
&I       SETA  1                    INITIALIZE LIST INDEX          @L2A 51894000
.DOROUT  ANOP                                                           51928000
&I1      SETA  0                    INITIALIZE ELEMENT INDEX       @L2A 51962000
&RCLEN   SETA  K'&ROUTCDE(&I)       SET LENGTH OF CURRENT ELEMENT  @L2A 51996000
         AIF   (&RCLEN EQ 0).SINGLE IF ELEMENT IS NULL, GO TO SINGLE   X52030000
                                    ROUTING CODE CHECK - IT WILL BE    X52064000
                                    DETERMINED TO ISSUE AN MNOTE   @L2A 52098000
         AIF   (T'&ROUTCDE(&I) EQ 'N').SINGLE IF SINGLE ELEMENT    @L2A 52132000
.*                                                                 @L2A 52166000
.*    A ROUTING CODE RANGE HAS BEEN SPECIFIED.                     @L2A 52200000
.*                                                                 @L2A 52234000
.CHKDASH ANOP                       NOT SINGLE CODE. CHECK RANGE   @L2A 52268000
&I1      SETA  &I1+1                INCREMENT ELEMENT INDEX        @L2A 52302000
         AIF   ('&ROUTCDE(&I)'(&I1,1) EQ '-').GOTDASH              @L2A 52336000
         AIF   (&I1+1 GE &RCLEN).BADRNGE  CHECK INDEX POSITION     @L2A 52370000
         AGO   .CHKDASH             CHECK NEXT CHARACTER           @L2A 52404000
.GOTDASH ANOP                       FOUND A DASH (DELIMITER)       @L2A 52438000
         AIF   (&I1 EQ 1).BADRNGE   IF NO LOWER LIMIT, ISSUE MNOTE @L2A 52472000
&LOW     SETC  '&ROUTCDE(&I)'(1,&I1-1) SET FIRST NUMBER OF RANGE   @L2A 52506000
&HIGH    SETC  '&ROUTCDE(&I)'(&I1+1,&RCLEN) SECOND NUMBER OF RANGE @L2A 52540000
         AIF   ('&LOW' GT '&HIGH').BADRNGE IF FIRST NUMBER GREATER THANX52574000
                                    SECOND NUMBER, ISSUE MNOTE     @L2A 52608000
         AIF   ('&LOW' LT '1' OR '&LOW' GT '128' OR                    X52642000
               '&HIGH' LT '1' OR '&HIGH' GT '128').BADRNGE IF EITHER   X52676000
                                    NUMBER IS NOT WITHIN 1-128     @L2A 52710000
&IWPXBIT SETB  (&IWPXBIT OR '&LOW' GT '16' OR '&HIGH' GT '16') BUILD   X52744000
                                    WPX FOR RCS GREATER THAN 16    @L2A 52778000
&RSVDMNT SETB  (&RSVDMNT OR                                            X52812000
               ('&LOW' LE '40' AND '&HIGH' GE '29')) IF RESERVED       X52846000
                          CODES, SET UP TO ISSUE WARNING MNOTE @YA10057 52880000
&NODFLT  SETB  (&NODFLT OR '&LOW' LT '29' OR '&LOW' GT '40' OR         X52914000
               '&HIGH' LT '29' OR '&HIGH' GT '40') DO NOT USE DEFAULT  X52948000
                                SETTING IF ANY ARE GOOD CODES  @YA10057 52982000
&J       SETA  &LOW                 INITIALIZE INDEX               @L2A 53016000
&K       SETA  &HIGH                SET END OF RANGE               @L2A 53050000
.SETLOOP ANOP                       LOOP TO SET ON ROUTING CODES       X53084000
                                    (RESERVED CODES ALSO SET HERE, BUT X53118000
                                    CLEARED BELOW)                 @L2A 53152000
&RB(&J)  SETB  1                    ROUTING CODE N SPECIFIED       @L2A 53186000
&J       SETA  &J+1                 INCREMENT LOOP INDEX           @L2A 53220000
         AIF   (&J LE &K).SETLOOP   IF MORE CODES TO SET           @L2A 53254000
         AGO   .NEXTRC              DETERMINE NEXT ROUTING CODE    @L2A 53288000
.*                                                                 @L2A 53322000
.*    AN INVALID ROUTING CODE RANGE HAS BEEN SPECIFIED. ISSUE AN   @L2A 53356000
.*    MNOTE AND SKIP TO THE NEXT ROUTING CODE.                     @L2A 53390000
.*                                                                 @L2A 53424000
.BADRNGE ANOP                       INVALID ROUTING CODE RANGE     @L2A 53458000
         MNOTE 4,'INVALID RANGE OF ROUTING CODES IGNORED.'         @L2A 53492000
         AGO   .NEXTRC              CHECK NEXT ROUTING CODE        @L2A 53526000
.*                                                                 @L2A 53560000
.*    A SINGLE ROUTING CODE HAS BEEN SPECIFIED. VERIFY THAT IT IS  @L2A 53594000
.*    WITHIN THE PROPER RANGE AND, IF SO, SET THE CORRECT BIT      @L2A 53628000
.*                                                                 @L2A 53662000
.SINGLE  ANOP                                                      @L2A 53696000
&N       SETA  &ROUTCDE(&I)         GET NEXT ROUTING CODE          @L2C 53730000
         AIF   (&N  GE 1 AND &N  LE 128).SETSNGL VALID CODE?       @L2C 53764000
         MNOTE 4,'ROUTCDE &N  IS AN INVALID ROUTING CODE. IT IS IGNOREDX53798000
               .'                                                  @L2C 53832000
         AGO   .NEXTRC              INVALID ROUTING CODE SPECIFIED.    X53866000
                                    CHECK THE NEXT ONE             @L2A 53900000
.SETSNGL ANOP                       VALID ROUTING CODE SPECIFIED        53934000
&IWPXBIT SETB  (&IWPXBIT OR &N  GT 16) BUILD WPX FOR RC > 16       @L2A 53968000
&RSVDMNT SETB  (&RSVDMNT OR (&N  GE 29 AND &N  LE 40)) IF RC 29-40,    X54002000
                                SET UP TO ISSUE WARNING MNOTE  @YA10057 54036000
&NODFLT  SETB  (&NODFLT OR &N  LT 29 OR &N  GT 40) DO NOT USE DEFAULT  X54070000
                                SETTING FOR ACCEPTABLE CODES   @YA10057 54104000
&RB(&N)  SETB  1                    ROUTING CODE N SPECIFIED            54138000
.NEXTRC  ANOP                       DETERMINE IF MORE CODES        @L2C 54172000
&I       SETA  &I+1                 INCREMENT INDEX                     54206000
         AIF   (&I LE N'&ROUTCDE).DOROUT IF MORE CODES, CHECK NEXT ONE  54240000
         AIF   ('&MSGTYP' NE '').ENDROUT BYPASS SETTING OF ROUTE CODE  X54274000
                                    2 IF MSGTYP SPECIFIED          @02A 54308000
&RB(2)   SETB  (&RB(2) OR NOT &NODFLT) VERIFY THAT DEFAULT IS SET       54342000
.ENDROUT ANOP                       DONE WITH ROUTING CODES        @L2C 54376000
.*                                                                 @L2A 54410000
.*    SET UP ROUTING CODE DC FIELD FOR AN OLD-FORMAT WPL           @L2A 54444000
.*                                                                 @L2A 54478000
&CD(3)   SETC  '&RB(1)&RB(2)&RB(3)&RB(4)&RB(5)&RB(6)&RB(7)&RB(8)'  @L2A 54512000
&CD(4)   SETC  '&RB(9)&RB(10)&RB(11)&RB(12)&RB(13)&RB(14)&RB(15)&RB(16)X54546000
               '                                                   @L2A 54580000
.*                                                                 @L2A 54614000
.*    ROUTING CODES 29-40 ARE RESERVED. IF ANY OF THESE HAVE   @YA10057 54648000
.*    BEEN SPECIFIED, ISSUE A WARNING MNOTE AND CLEAR THESE BITS   @L2A 54682000
.*                                                                 @L2A 54716000
         AIF   (NOT &RSVDMNT).WPXDONE  IF ANY RESERVED ROUTING CODES   X54750000
                                    SPECIFIED, ISSUE MNOTE         @L2A 54784000
         MNOTE 4,'RESERVED ROUTING CODE(S) 29-40 IGNORED.'     @YA10057 54818000
&I       SETA  29                   INITIALIZE ROUTING CODE INDEX  @L2A 54852000
.NULLIFY ANOP                       VERIFY RCS 29-40 ARE NOT SET       X54886000
                                                               @YA10057 54920000
&RB(&I)  SETB  0                    NULLIFY ROUTING CODE           @L2A 54954000
&I       SETA  &I+1                 INCREMENT INDEX                @L2A 54988000
         AIF   (&I LE 40).NULLIFY   GO TO TURN OFF THE OTHER CODES     X55022000
                                                               @YA10057 55056000
.********************************************************************** 55090000
.*                                                                 @L2A 55124000
.*  CHECK ALL OTHER CONDITIONS RESULTING IN A WPX.                 @L2A 55158000
.*  A WPX WILL BE BUILT IF ANY OF THE FOLLOWING KEYWORDS HAS       @L2A 55192000
.*  BEEN SPECIFIED (EVEN IF WITH INVALID DATA):                    @L2A 55226000
.*    - CONNECT (ALLOWED ON MULTI-LINE WTO ONLY)                   @L2A 55260000
.*    - JOBNAME                                                    @L2A 55294000
.*    - JOBID                                                      @L2A 55328000
.*    - SYSNAME                                                    @L2A 55362000
.*    - KEY                                                        @L2A 55396000
.*    - TOKEN                                                      @L2A 55430000
.*    - CONSNAME                                                   @L3A 55464000
.*    - CONSID                                                     @L2A 55498000
.*    - PRTY                                                       @L2A 55532000
.*    - SUBSMOD                                                    @L2A 55566000
.*    - CART                                                       @L4A 55600000
.*    - TEXT                                                       @L5A 55634000
.*    - SYNCH                                                      @L6A 55668000
.*    - WSPARM                                                     @L6A 55702000
.*                                                                 @L2A 55736000
.********************************************************************** 55770000
.WPXDONE ANOP                       DONE WITH WPX DETERMINATION    @L2A 55804000
&I       SETA  1                    INITIALIZE INDEX                    55838000
&B(3)    SETB  0                                                   MCS  55872000
         AIF   (T'&DESC EQ 'O').SETNCLR     IF NO DESCRIPTOR CODES     X55906000
                        SPECIFIED, THEN SKIP DESCRIPTOR CODE SECTION    55940000
.********************************************************************** 55974000
.*  DETERMINE WHICH DESCRIPTOR CODES WERE SPECIFIED                     56008000
.********************************************************************** 56042000
.DCHK    ANOP                       DESCRIPTOR CODES SPECIFIED          56076000
&N       SETA  &DESC(&I)            GET THE NEXT DESCRIPTOR CODE        56110000
&I       SETA  &I+1                 INCREMENT THE INDEX                 56144000
         AIF   (&N GE 1 AND &N LE 16).ASSIGND VALID DESCRIPTOR CODE?    56178000
         MNOTE 4,'DESC &N  IS AN INVALID DESCRIPTOR CODE. IT IS IGNOREDX56212000
               .'                                                  @L2C 56246000
         AGO   .NXTD                INVALID DESCRIPTOR CODE. ISSUE     X56280000
                                    MNOTE AND CHECK FOR NEXT CODE       56314000
.ASSIGND ANOP                       YES. VALID DESCRIPTOR CODE          56348000
&B(&N)   SETB  1                    VALID DESCRIPTOR CODE N SPECIFIED   56382000
.NXTD    AIF   (&I LE N'&DESC).DCHK IF MORE CODES, CHECK NEXT ONE       56416000
&I       SETA  1                    SET INDEX TO INDICATE DESC CODE     56450000
.********************************************************************** 56484000
.*  SET OUTPUT AREAS AND CLEAR BINARY FLAGS                             56518000
.********************************************************************** 56552000
.SETNCLR ANOP                                                           56586000
&CD(&I)  SETC  '&B(1)&B(2)&B(3)&B(4)&B(5)&B(6)&B(7)&B(8)'               56620000
&CD(&I+1) SETC '&B(9)&B(10)&B(11)&B(12)&B(13)&B(14)&B(15)&B(16)'        56654000
&N       SETA  1                                                        56688000
.CLR     ANOP                       CLEAR 2 BYTES OF BINARY FLAGS       56722000
&B(&N)   SETB  0                    CLEAR PARTICULAR BIT                56756000
&N       SETA  &N+1                 INCREMENT FLAGS INDEX               56790000
         AIF   (&N LT 17).CLR       IF ALL FLAGS CLEARED, GO ON         56824000
         AIF   (&I EQ 5).FLGCHK0    IF JUST FINISHED SETTING MESSAGE   X56858000
                                    TYPE, THEN SET MCS FLAGS            56892000
         AIF   (&I EQ 7).GENDCS     IF JUST FINISHED SETTING MCS FLAGS X56926000
                                    THEN GENERATE DCS            X02007 56960000
.********************************************************************** 56994000
.*  DETERMINE WHICH MESSAGE TYPE FLAGS WERE SPECIFIED                   57028000
.********************************************************************** 57062000
.TYPCHK  ANOP                                                    X02050 57096000
&SWM     SETB  0                    INITIALIZE MSGTYPE INDICATOR   @L2A 57130000
&I       SETA  5                    SET INDEX TO INDICATE MSGTYPE       57164000
         AIF   (T'&QID EQ 'O' OR '&QID(1)' EQ 'N').TYPCHK1  IS NO QID  X57198000
                                    INFORMATION AVAILABLE?       X02050 57232000
         AIF   (&IWPXBIT).TYPCHK1   IGNORE QID IF BUILDING WPX     @L2A 57266000
&B(4)    SETB  1                    SET THE QID MSG TYPE FLAG    X02050 57300000
&SWM     SETB  1                    INDICATE MSG TYPE SPECIFIED  X02050 57334000
         AGO   .TYPCHK2                                          X02050 57368000
.TYPCHK1 ANOP                       QID WAS NOT SPECIFIED        X02050 57402000
         AIF   (T'&MSGTYP EQ 'O').SETNCLR  IF MSGTYP KEYWORD NOT USED  X57436000
                                                                 X02050 57470000
         AIF   ('&MSGTYP(1)' EQ 'N').SETNCLR  OR MSGTYP=N SPECIFIED,   X57504000
                                    THEN SKIP MSGTYPE PROCESSING        57538000
.TYPCHK2 ANOP                       CHECK ALL MSGTYPE INFO       X02050 57572000
&SWM     SETB  1                    INDICATE MSGTYPE SPECIFIED   X02007 57606000
&N       SETA  1                                                        57640000
         AIF   ('&MSGTYP(1)' EQ 'Y' OR '&MSGTYP(1)' EQ 'N').SETNCLR IF X57674000
                                    MSGTYPE=Y OR N SPECIFIED, THEN WE  X57708000
                                    ARE DONE WITH MSGTYPE PROCESSING    57742000
&I       SETA  1                    INITIALIZE INDEX COUNTER            57776000
.* THE FOLLOWING TABLE CONTAINS VALID MESSAGE TYPE VALUES BESIDE Y OR N 57810000
&CFLG(1) SETC  'JOBNAMES'                                               57844000
&CFLG(2) SETC  'STATUS'                                                 57878000
&CFLG(3) SETC  'ACTIVE'                                          X02007 57912000
&CFLG(4) SETC  ''                                                       57946000
&CFLG(5) SETC  'SHOW'                                              CRJE 57980000
&CFLG(6) SETC  'SESS'                                            20034  58014000
.*   DETERMINE WHICH MESSAGE TYPE VALUES WERE SPECIFIED BY COMPARING    58048000
.*   THEM WITH THE TABLE OF VALID VALUES DECLARED ABOVE AND SETTING     58082000
.*   THE VALUES IN BIT STRING B. IF AN INVALID MSGTYPE VALUE IS         58116000
.*   SPECIFIED, AN MNOTE IS ISSUED AND MSGTYPE=N (NO MESSAGE TYPE)      58150000
.*   IS ASSUMED.                                                        58184000
.TCHK    AIF   ('&MSGTYP(&I)' EQ '&CFLG(&N)').SETTYP  COMPARE AGAINST  X58218000
                                  THE NEXT TABLE ENTRY. IF A MATCH,    X58252000
                                  SET MSGTYPE VALUE IN BITSTRING        58286000
&N       SETA  &N+1               INCREMENT TABLE INDEX                 58320000
         AIF   (&N LE 8).TCHK     TEST AGAINST NEXT VALUE IN TABLE      58354000
         MNOTE 4,'MSGTYP FIELD INVALID. N IS ASSUMED'                   58388000
&N       SETA  1                  INITIALIZE MSGTYPE TABLE INDEX X02007 58422000
&I       SETA  5                  SET INDEX TO INDICATE MSGTYPE  X02007 58456000
&SWM     SETB  0                  INDICATE NO MESSAGE TYPE       X02007 58490000
         AGO   .CLR               CLEAR OUT BIT STRING B         X02007 58524000
.SETTYP  AIF   ('&CFLG(&N)' EQ '').ADDIT  IF THIS MSGTYPE VALUE WAS    X58558000
                                  NULL, DONT SET ANY INDICATOR          58592000
&B(&N)   SETB 1                   INDICATE WHICH MSGTYPE VALUE GIVEN    58626000
.ADDIT   ANOP                     SET UP TO CHECK NEXT MSGTYPE VALUE    58660000
&I       SETA  &I+1               INCREMENT MSGTYPE LIST COUNTER        58694000
&N       SETA  1                  RESET MSGTYPE VALUE TABLE INDEX       58728000
         AIF   (&I LE N'&MSGTYP).TCHK IF MORE MSGTYPE PARAMETERS TO    X58762000
                                  CHECK, GO TO CHECK WHAT NEXT ONE IS   58796000
&I       SETA  5                  DONE WITH MSGTYPE. SET FIELD INDEX    58830000
         AGO   .SETNCLR           SET IN MSGTYPE SAVE FIELD             58864000
.********************************************************************** 58898000
.*  DETERMINE WHICH MCSFLAG PARAMETERS WERE SPECIFIED                   58932000
.********************************************************************** 58966000
.FLGCHK0 ANOP                     FIRST SET MCSFLAG BITS THAT WERE NOT X59000000
                                  DETERMINED VIA THE MCSFLAG KEYWORD    59034000
&B(1)    SETB  (&IHBMCS)          MCSFLAG FOR ROUT/DESC CODES  @YA17152 59068000
&B(4)    SETB  (&SWM)             MCSFLAG FOR MESSAGE TYPE FLAGS        59102000
&B(10)   SETB  (&MLW)             MCSFLAG FOR MULTI-LINE         X02007 59136000
&B(12)   SETB  (&IWPXBIT)         MCSFLAG FOR WPX EXISTENCE        @L2A 59170000
&I       SETA  7                  SET INDEX TO INDICATE MCSFLAG FIELD   59204000
.********************************************************************** 59238000
.*  NOW DETERMINE WHICH MCSFLAG KEYWORD VALUES WERE SPECIFIED           59272000
.********************************************************************** 59306000
         AIF   (T'&MCSFLAG EQ 'O').SETNCLR IF NO OTHER MCSFLAG         X59340000
                                  PROCESSING TO PERFORM, THEN SET BITS X59374000
                                  THAT ARE ALREADY INDICATED            59408000
&I       SETA  1                                                        59442000
&N       SETA  1                                                        59476000
.* THE FOLLOWING TABLE CONTAINS ALL VALID MCSFLAG VALUES                59510000
&CFLG(1) SETC  'REG0'                                                   59544000
&CFLG(2) SETC  'RESP'                                                   59578000
&CFLG(3) SETC  ''                                                       59612000
&CFLG(4) SETC  'REPLY'                                                  59646000
&CFLG(5) SETC  'BRDCST'                                                 59680000
&CFLG(6) SETC  'HRDCPY'                                                 59714000
&CFLG(7) SETC  'QREG0'                                                  59748000
&CFLG(8) SETC  'NOTIME'                                                 59782000
&CFLG(12) SETC 'CMD'                                               @L1A 59816000
&CFLG(13) SETC 'NOCPY'                                                  59850000
&CFLG(16) SETC 'BUSYEXIT'                                          @L2A 59884000
.*   DETERMINE WHICH MCSFLAG VALUES WERE SPECIFIED BY COMPARING         59918000
.*   THEM WITH THE TABLE OF VALID VALUES DECLARED ABOVE AND SETTING     59952000
.*   THE VALUES IN BIT STRING B. IF AN INVALID MCSFLAG VALUE IS         59986000
.*   SPECIFIED, AN MNOTE IS ISSUED AND THAT VALUE IS IGNORED.           60020000
.FLGCHK  AIF   ('&MCSFLAG(&I)' EQ '&CFLG(&N)').SETFLG  TABLE MATCH?     60054000
&N       SETA  &N+1                    NO MATCH. INCREMENT INDEX        60088000
         AIF   (&N LE 17).FLGCHK       CHECK AGAINST NEXT VALUE    @L4C 60122000
         MNOTE 4,'MCSFLAG= &MCSFLAG(&I) IS INVALID. IT IS IGNORED.'     60156000
         AGO   .ADDI                   INVALID MCSFLAG VALUE. IGNORE   X60190000
                                       AND CHECK NEXT VALUE.            60224000
.SETFLG  AIF   ('&CFLG(&N)' EQ '' OR                                   X60258000
                '&CFLG(&N)' EQ 'BUSYEXIT').ADDI IF EITHER NULL OR      X60292000
                                       BUSYEXIT, DONT SET ANY BIT  @D2C 60326000
&B(&N+1) SETB  1                       INDICATE WHICH MCSFLAG SPECIFIED 60360000
.ADDI    ANOP                          SET UP TO CHECK NEXT VALUE       60394000
&I       SETA  &I+1                    INCREMENT COUNTER                60428000
&N       SETA  1                       RESET MCSFLAG TABLE INDEX        60462000
         AIF   (&I LE N'&MCSFLAG).FLGCHK CHECK NEXT MCSFLAG VALUE IF   X60496000
                                       THERE ARE MORE TO CHECK          60530000
         AIF   (&B(7) AND '&SYNCH(1)' EQ 'YES').ERROR6  CHECK FOR      +60564000
                                       MUTUALLY EXCLUSIVE SITUATION    +60598000
                                       SYNCH=YES/MCSFLAG=HRDCPY    @L6A 60632000
         AIF   (&B(7) AND &B(14)).MUTEXC  IF MUTUALLY EXCLUSIVE        X60666000
                                       MCSFLAGS SPECIFIED, ISSUE MNOTE  60700000
         AGO   .SETTER                 NO MUTUALLY EXCLUSIVE PROBLEM    60734000
.MUTEXC  ANOP                          MUTUALLY EXCLUSIVE MCSFLAGS      60768000
&B(14)   SETB  0                       NULLIFY THE 'NOCPY' BIT          60802000
         MNOTE 4,'HRDCPY AND NOCPY MUTUALLY EXCLUSIVE. MCSFLAG=HRDCPY AX60836000
               SSUMED.'                                            @L2C 60870000
.SETTER  ANOP                          DONE WITH MCSFLAG PROCESSING     60904000
&I       SETA  7                       SET INDEX TO INDICATE MCSFLAG    60938000
         AGO   .SETNCLR                SET SPECIFIED MCSFLAGS           60972000
.********************************************************************** 61006000
.*                                                                 @L2A 61040000
.*   PERFORM THE FOLLOWING PROCESSING FOR A MULTI-LINE WTO              61074000
.*                                                                 @L2A 61108000
.********************************************************************** 61142000
.GENDCS  AIF   (NOT &MLW).NOTMLW1  IF NOT MULTI-LINE, SKIP DOWN  X02007 61176000
         AIF   ('&TEXT' NE '¬').MLWT00                   CHECK LINE    X61210000
                                   TYPE AS SPECIFIED FOR TEXT KWD  @L5A 61244000
&H       SETA  1                   THIS IS A MULTI-LINE WTO      X02007 61278000
.********************************************************************** 61312000
.*                                                                 @L2A 61346000
.*   CHECK THE LINE TYPE FOR EACH LINE OF THE MULTI-LINE WTO            61380000
.*                                                                 @L2A 61414000
.********************************************************************** 61448000
         AIF   (&IHBWTOR).MLW01A1  COPY VALUES INTO VARIABLES      @L6A 61482000
&ILMEQU  SETC  '&SYSLIST(1,1)'     FIRST LINE TEXT OF WTO          @L6A 61516000
&ILTEQU  SETC  '&SYSLIST(1,2)'     FIRST LINE LINE TYPE            @L6A 61550000
&NUMML   SETA  N'&SYSLIST          TOTAL NUMBER OF LINES           @L6A 61584000
&NUMARG  SETA  N'&SYSLIST(1)       NUMBER OF ARGUMENTS             @L6A 61618000
         AGO   .MLW01A2            BYPASS WTOR SETTING             @L6A 61652000
.MLW01A1 ANOP                      COPIES FOR WTOR INVOCATION      @L6A 61686000
&ILMEQU  SETC  '&SYSLIST(1,1,1)'   FIRST LINE TEXT OF WTOR         @L6A 61720000
&ILTEQU  SETC  '&SYSLIST(1,1,2)'   FIRST LINE LINE TYPE            @L6A 61754000
&NUMML   SETA  N'&SYSLIST(1)       TOTAL NUMBER OF LINES           @L6A 61788000
&NUMARG  SETA  N'&SYSLIST(1,1)     NUMBER OF ARGUMENTS             @L6A 61822000
.MLW01A2 ANOP                                                      @L6A 61856000
         AIF   ('&ILMEQU' EQ '').MLW04 IF FIRST LINE NULL          @L6C 61890000
         AIF   (&NUMARG GT 2).MLW05    INVALID LINE TYPE?          @L6C 61924000
         AIF   ('&ILTEQU' NE 'C').MLW02  NOT CONTROL LINE?         @L6C 61958000
&LT(1)   SETA  80                  INDICATE CONTROL LINE         X02007 61992000
.MLW01   AIF   (&NUMML  LE &H).MLW11   ANY MORE LINES?             @L6C 62026000
&H       SETA  &H+1                MORE LINES TO PROCESS         X02007 62060000
         AIF   (&IHBWTOR).MLW01A3  RESET FOR NEXT WTO LINE         @L6A 62094000
&ILMEQU  SETC  '&SYSLIST(&H,1)'    LINE OF TEXT                    @L6A 62128000
&ILTEQU  SETC  '&SYSLIST(&H,2)'    LINE TYPE FOR LINE              @L6A 62162000
&NUMARG  SETA  N'&SYSLIST(&H)      NUMBER OF ARGUMENTS             @L6A 62196000
         AGO   .MLW01A4                                            @L6A 62230000
.MLW01A3 ANOP                      RESET FOR NEXT WTOR LINE        @L6A 62264000
&ILMEQU  SETC  '&SYSLIST(1,&H,1)'  LINE OF TEXT                    @L6A 62298000
&ILTEQU  SETC  '&SYSLIST(1,&H,2)'  LINE TYPE FOR LINE              @L6A 62332000
&NUMARG  SETA  N'&SYSLIST(1,&H)    NUMBER OF ARGUMENTS             @L6A 62366000
.MLW01A4 ANOP                                                      @L6A 62400000
         AIF   (&NUMARG GT 2).MLW05  ERROR IF INVALID MULTI-           +62434000
                                   LINE TEXT STRUCTURE IS USED     @L6C 62468000
.MLW02   AIF   ('&ILTEQU' NE 'L' OR '&ILMEQU' EQ '').MLW04             +62502000
                                   JUMP IF THIS IS NOT A LABEL LINE    +62536000
                                   THAT HAS TEXT WITH IT           @L6C 62570000
&LT(&H)  SETA  40                  INDICATE VALID LABEL LINE     X02007 62604000
         AIF   (&SECONDL).MLW03    JUMP IF FIRST LINE PROCESSED  X02007 62638000
&SECONDL SETB  1                   INDICATE FIRST LINE PROCESSED X02007 62672000
         AGO   .MLW01              CHECK FOR MORE LINES          X02007 62706000
.MLW03   AIF   (&NUMML LE &H).MLW11 THIS IS AT LEAST LINE 2        @L6C 62740000
&H       SETA  &H+1                INCREMENT LINE INDEX          X02007 62774000
         AIF   (&IHBWTOR).MLW01A5  RESET FOR NEXT WTO LINE         @L6A 62808000
&ILMEQU  SETC  '&SYSLIST(&H,1)'    COPY LINE OF TEXT               @L6A 62842000
&ILTEQU  SETC  '&SYSLIST(&H,2)'    COPY LINE TYPE                  @L6A 62876000
&NUMARG  SETA  N'&SYSLIST(&H)      DETERMINE NUMBER OF ARGUMENTS   @L6A 62910000
         AGO   .MLW01A6                                            @L6A 62944000
.MLW01A5 ANOP                      RESET FOR NEXT WTOR LINE        @L6A 62978000
&ILMEQU  SETC  '&SYSLIST(1,&H,1)'  COPY LINE OF TEXT               @L6A 63012000
&ILTEQU  SETC  '&SYSLIST(1,&H,2)'  COPY LINE TYPE                  @L6A 63046000
&NUMARG  SETA  N'&SYSLIST(1,&H)    DETERMINE NUMBER OF ARGUMENTS   @L6A 63080000
.MLW01A6 ANOP                                                      @L6A 63114000
         AIF   (&NUMARG GT 2).MLW05  ERROR IF INVALID MULTI-LINE       +63148000
                                   TEXT STRUCTURE IS USED          @L6C 63182000
.MLW04   AIF   ('&ILTEQU' EQ 'E').MLW06  IF THIS IS AN END             +63216000
                                   LINE, JUMP AND SET INDICATOR    @L6C 63250000
         AIF   ('&ILMEQU' EQ '').MLW05   NOT AN END LINE. ERROR IF     +63284000
                                   TEXT FIELD IS NULL              @L6C 63318000
         AIF   ('&ILTEQU' EQ 'DE').MLW08   TEXT EXISTS. CHECK          +63352000
                                   FOR DATA-END LINE TYPE          @L6C 63386000
         AIF   ('&ILTEQU' EQ 'L' OR '&ILTEQU' EQ 'C').MLW09        @03C+63420000
                                   NOT DATA-END OR END. ERROR IF THIS  +63454000
                                   IS CONTROL OR LABEL LINE        @L6C 63488000
         AIF   ('&ILTEQU' NE 'D' AND '&ILTEQU' NE '').MLW10            +63522000
                                   ERROR IF INVALID LINE TYPE      @L6C 63556000
&LT(&H)  SETA  20                  INDICATE DATA LINE            X02007 63590000
         AGO   .MLW03              CHECK FOR MORE LINES          X02007 63624000
.MLW05   ANOP                      INVALID LINE TYPE SPECIFIED   X02007 63658000
&E5      SETB  1                   SET INVALID LINE TYPE FLAG    X02007 63692000
&LT(&H)  SETA  10                  ASSUME THIS IS AN END LINE    X02007 63726000
         AGO   .MLW11              DONE WITH ML PROCESSING       X02007 63760000
.MLW06   ANOP                      END LINE SPECIFIED            X02007 63794000
&LT(&H)  SETA  10                  INDICATE END LINE             X02007 63828000
.MLW07   ANOP                      END OR DATA-END INDICATED     X02007 63862000
&E4      SETB  (&H NE &NUMML)      ERROR IF NOT LAST LINE          @L6C 63896000
         AGO   .MLW11              DONE WITH MULTI-LINE CHECKS   X02007 63930000
.MLW08   ANOP                      DATA-END LINE SPECIFIED       X02007 63964000
&LT(&H)  SETA  30                  INDICATE DATA-END LINE        X02007 63998000
         AGO   .MLW07              CHECK IF THIS IS LAST LINE    X02007 64032000
.MLW09   ANOP                      INVALID C OR L LINETYPE       X02007 64066000
&E3      SETB  1                   SET ERROR INDICATOR           X02007 64100000
&LT(&H)  SETA  30                  ASSUME DATA-END LINE          X02007 64134000
         AGO   .MLW11              DO NO MORE MULTI-LINE CHECKS  X02007 64168000
.MLW10   ANOP                      INVALID LINE TYPE SPECIFIED   X02007 64202000
&E5      SETB  1                   SET ERROR INDICATOR           X02007 64236000
&LT(&H)  SETA  30                  ASSUME DATA-END LINE          X02007 64270000
.MLW11   ANOP                      END OF MULTI-LINE PROCESSING  X02007 64304000
&LLCNT   SETA  &H                  SET NUMBER OF LINES PROCESSED X02007 64338000
&H       SETA  1                   SET LINE COUNTER INDEX        X02007 64372000
         AGO   .NOTMLW1            CONTINUE                        @L5A 64406000
.MLWT00  ANOP                                                      @L5A 64440000
.********************************************************************** 64474000
.*                                                                 @L5A 64508000
.*   CHECK THE LINE TYPE FOR EACH LINE OF THE MULTI-LINE WTO       @L5A 64542000
.*   SPECIFIED WITH THE TEXT KEYWORD.                              @L5A 64576000
.*                                                                 @L5A 64610000
.********************************************************************** 64644000
&H       SETA  1                       FIRST MINOR LINE OF TEXT    @L5A 64678000
&VALH    SETC  '&TEXT(1)'              EXTRACT FIRST LINE          @L5A 64712000
&VALH1   SETC  '&TEXT(&H,1)'           EXTRACT TEXT ADDRESS        @L5A 64746000
&VALH2   SETC  '&TEXT(&H,2)'           EXTRACT LINE TYPE           @L5A 64780000
         AIF   ('&VALH1' EQ '' AND '&MF' NE 'L').MLWT04 BRANCH IF      X64814000
                              FIRST LINE NULL AND NOT LIST FORM    @PIC 64848000
         AIF   (N'&VALH GT 2).MLWT05   BRANCH IF INVALID LINE TYPE @L5A 64882000
         AIF   ('&VALH2' NE 'C').MLWT02 BRANCH IF NOT CONTROL LINE @L5A 64916000
&LT(1)   SETA  80                      INDICATE CONTROL LINE       @L5A 64950000
.MLWT01  AIF   (N'&TEXT    LE &H).MLWT11 ANY MORE LINES?           @L5A 64984000
&H       SETA  &H+1                MORE LINES TO PROCESS           @L5A 65018000
&VALH1   SETC  '&TEXT(&H,1)'           EXTRACT TEXT ADDRESS        @L5A 65052000
&VALH2   SETC  '&TEXT(&H,2)'           EXTRACT LINE TYPE           @L5A 65086000
         AIF   (N'&TEXT(&H)    GT 2).MLWT05 ERROR IF INVALID MULTI-    X65120000
                                   LINE TEXT STRUCTURE IS USED     @L5A 65154000
.MLWT02  AIF   ('&VALH2' NE 'L').MLWT04  JUMP IF THIS IS NOT A LABEL   X65188000
                                       LINE                        @PIA 65222000
         AIF   ('&VALH1' EQ '' AND '&MF' NE 'L').MLWT04                X65256000
                                   JUMP IF A NULL VALUE WAS SPECIFIED  X65290000
                                   FOR TEXT ADDRESS AND THIS IS NOT    X65324000
                                   A LIST FORM INVOCATION OF MACRO @PIC 65358000
&LT(&H)  SETA  40                  INDICATE VALID LABEL LINE       @L5A 65392000
         AIF   (&SECONDL).MLWT03   JUMP IF FIRST LINE PROCESSED    @L5A 65426000
&SECONDL SETB  1                   INDICATE FIRST LINE PROCESSED   @L5A 65460000
         AGO   .MLWT01             CHECK FOR MORE LINES            @L5A 65494000
.MLWT03  AIF   (N'&TEXT    LE &H).MLWT11 THIS IS AT LEAST LINE 2   @L5A 65528000
&H       SETA  &H+1                INCREMENT LINE INDEX            @L5A 65562000
&VALH1   SETC  '&TEXT(&H,1)'           EXTRACT TEXT ADDRESS        @L5A 65596000
&VALH2   SETC  '&TEXT(&H,2)'           EXTRACT LINE TYPE           @L5A 65630000
         AIF   (N'&TEXT(&H) GT 2).MLWT05 ERROR IF INVALID MULTI-       X65664000
                                   LINE TEXT STRUCTURE IS USED     @L5A 65698000
.MLWT04  AIF   ('&VALH2'         EQ 'E').MLWT06 IF THIS IS AN END      X65732000
                                   LINE, JUMP AND SET INDICATOR    @L5A 65766000
         AIF   ('&VALH1' EQ '' AND '&MF' NE 'L').MLWT05 ERROR IF TEXT  X65800000
                                   FIELD IS NULL AND NOT A LIST FORM   X65834000
                                   INVOCATION OF MACRO             @PIC 65868000
         AIF   ('&VALH2'         EQ 'DE').MLWT08  TEXT EXISTS. CHECK   X65902000
                                   FOR DATA-END LINE TYPE          @L5A 65936000
         AIF   ('&VALH2'   EQ 'L' OR '&VALH2'         EQ 'C').MLWT09   X65970000
                                   NOT DATA-END OR END. ERROR IF THIS  X66004000
                                   IS CONTROL OR LABEL LINE        @L5A 66038000
         AIF   ('&VALH2'   NE 'D' AND '&VALH2'         NE '').MLWT10   *66072000
                                   ERROR IF INVALID LINE TYPE      @L5A 66106000
&LT(&H)  SETA  20                  INDICATE DATA LINE              @L5A 66140000
         AGO   .MLWT03             CHECK FOR MORE LINES            @L5A 66174000
.MLWT05  ANOP                      INVALID LINE TYPE SPECIFIED     @L5A 66208000
&E5      SETB  1                   SET INVALID LINE TYPE FLAG      @L5A 66242000
&LT(&H)  SETA  10                  ASSUME THIS IS AN END LINE      @L5A 66276000
         AGO   .MLWT11             DONE WITH ML PROCESSING         @L5A 66310000
.MLWT06  ANOP                      END LINE SPECIFIED              @L5A 66344000
&LT(&H)  SETA  10                  INDICATE END LINE               @L5A 66378000
.MLWT07  ANOP                      END OR DATA-END INDICATED       @L5A 66412000
&E4      SETB  (&H NE N'&TEXT)     ERROR IF NOT LAST LINE          @L5A 66446000
         AGO   .MLWT11             DONE WITH MULTI-LINE CHECKS     @L5A 66480000
.MLWT08  ANOP                      DATA-END LINE SPECIFIED         @L5A 66514000
&LT(&H)  SETA  30                  INDICATE DATA-END LINE          @L5A 66548000
         AGO   .MLWT07             CHECK IF THIS IS LAST LINE      @L5A 66582000
.MLWT09  ANOP                      INVALID C OR L LINETYPE         @L5A 66616000
&E3      SETB  1                   SET ERROR INDICATOR             @L5A 66650000
&LT(&H)  SETA  30                  ASSUME DATA-END LINE            @L5A 66684000
         AGO   .MLWT11             DO NO MORE MULTI-LINE CHECKS    @L5A 66718000
.MLWT10  ANOP                      INVALID LINE TYPE SPECIFIED     @L5A 66752000
&E5      SETB  1                   SET ERROR INDICATOR             @L5A 66786000
&LT(&H)  SETA  30                  ASSUME DATA-END LINE            @L5A 66820000
.MLWT11  ANOP                      END OF MULTI-LINE PROCESSING    @L5A 66854000
&LLCNT   SETA  &H                  SET NUMBER OF LINES PROCESSED   @L5A 66888000
&H       SETA  1                   SET LINE COUNTER INDEX          @L5A 66922000
.********************************************************************** 66956000
.*                                                                 @L5A 66990000
.*   IF INLINE MESSAGE TEXT WAS SPECIFIED,                         @L5A 67024000
.*   CHECK FOR DOUBLE QUOTES OR AMPERSANDS (FOR SINGLE AND MULTI-  @L5A 67058000
.*   LINE WTO) AND ADJUST THE MESSAGE LENGTH FOR EACH PAIR FOUND   @L5A 67092000
.*                                                                 @L5A 67126000
.********************************************************************** 67160000
.NOTMLW1 ANOP                      TARGET FOR SINGLE-LINE WTO    X02007 67194000
         AIF   ('&TEXT' NE '¬').QDONE0 BRANCH IF TEXT KEYWORD      @L5A 67228000
&I       SETA  1                   INITIALIZE INDEX              X02007 67262000
         AIF   (&IHBWTOR).NOTMLA1  IF WTOR CALL BYPASS WTO COPY    @L6A 67296000
&ILMEQU  SETC  '&SYSLIST(1,1)'     FIRST LINE OF WTO TEXT          @L6A 67330000
         AGO   .NOTMLA2            BYPASS WTOR COPY                @L6A 67364000
.NOTMLA1 ANOP                      WTOR, MAKE COPY OF LINE OF TEXT @L6A 67398000
&ILMEQU  SETC  '&SYSLIST(1,1,1)'   FIRST LINE OF WTOR TEXT         @L6A 67432000
.NOTMLA2 ANOP                                                      @L6A 67466000
&IHBLEN  SETA  K'&ILMEQU-2         SET MESSAGE TEXT LENGTH         @L6C 67500000
&PAIR    SETB  0                   INITIALIZE DOUBLE CHAR. BIT   X02007 67534000
.QLOOP1  ANOP                                                    X02007 67568000
&I       SETA  &I+1+&PAIR          INCREMENT TEXT INDEX          X02007 67602000
         AIF   (&I GE K'&ILMEQU).QDONE1 IF END OF TEXT             @L6C 67636000
&PAIR    SETB  ('&ILMEQU'(&I,2) EQ '''''' OR '&ILMEQU'(&I,2) EQ '&&')  +67670000
                                   CHECK FOR DOUBLE QUOTES OR          +67704000
                                   AMPERSANDS                      @L6C 67738000
&IHBLEN  SETA  &IHBLEN-&PAIR       IF FOUND, DECREMENT TEXT LENGTH     X67772000
                                   BY 1                        @YA17152 67806000
         AGO   .QLOOP1             CHECK REST OF TEXT            X02007 67840000
.QDONE0  ANOP                      TEXT KEYWORD INSTEAD OF INLINE  @L5A 67874000
&AD      SETB  (&LT(1) NE 10)      0 IF E-TYPE LINE, 1 IF NOT      @L5A 67908000
&IHBLEN  SETA  8                   LENGTH OF ADDR PLUS PREFIX      @PLC 67942000
         AGO   .PARMGEN            BEGIN PARMLIST GENERATION       @L5A 67976000
.QDONE1  ANOP                      SEARCHED ENTIRE TEXT FIELD    X02007 68010000
&AD      SETB  (&LT(1) NE 10)      0 IF E-TYPE LINE, 1 IF NOT    X02007 68044000
&IHBLEN  SETA  4+&IHBLEN*&AD                                   @YA17152 68078000
.********************************************************************** 68112000
.*                                                                 @PGA 68146000
.*  CHECK IF INLINE TEXT LENGTH EXCEEDS THE DOCUMENTED MAXIMUM:    @PGA 68180000
.* - MULTI-LINE: CONTROL LINE CAN BE UP TO 35 CHARS                @PGA 68214000
.* - MULTI-LINE: OTHER LINE TYPES CAN BE UP TO 71 CHARS            @PGA 68248000
.* - SINGLE-LINE WTO: CAN BE UP TO 125 CHARS                       @PGA 68282000
.* - SINGLE-LINE WTOR: CAN BE UP TO 122 CHARS                      @PGA 68316000
.*  IF LINE IS TOO LONG, ISSUE INFORMATIONAL MNOTE AND TRUNCATE    @PMC 68350000
.*    LINE                                                         @PMA 68384000
.*                                                                 @PGA 68418000
.********************************************************************** 68452000
.CHKCL   AIF   (&MLW AND &LT(1) EQ 80 AND                              X68486000
                &IHBLEN GT &MAXCLLN+4).BADCL  CHECK CONTROL LINE   @PGA 68520000
.CHKML   AIF   (&MLW AND &LT(1) NE 80 AND                              X68554000
                &IHBLEN GT &MAXMLLN+4).BADML  CHECK OTHER ML LINES @PGA 68588000
.CHKSL   AIF   (NOT &MLW AND NOT &IHBWTOR AND                          X68622000
                &IHBLEN GT &MAXSLLN+4).BADSL  CHECK SL WTO         @PGA 68656000
.CHKSR   AIF   (&MLW OR NOT &IHBWTOR OR                                X68690000
                &IHBLEN LE &MAXSRLN+4).PARMGEN  CHECK SL WTOR      @PGA 68724000
&IHBLEN  SETA  &MAXSRLN+4             TRUNCATE SL WTOR LENGTH      @PGA 68758000
         AGO   .LNGTSL1               GO ISSUE MNOTE               @PGA 68792000
.BADCL   ANOP                         CONTROL LINE TOO LONG        @PGA 68826000
&IHBLEN  SETA  &MAXCLLN+4             TRUNCATE CONTROL LINE LENGTH @PGA 68860000
         AGO   .LNGTML1               GO ISSUE MNOTE               @PGA 68894000
.BADML   ANOP                         MULTI-LINE TOO LONG          @PGA 68928000
&IHBLEN  SETA  &MAXMLLN+4             TRUNCATE MULTI-LINE LENGTH   @PGA 68962000
         AGO   .LNGTML1               GO ISSUE MNOTE               @PGA 68996000
.BADSL   ANOP                         SL WTO TOO LONG              @PGA 69030000
&IHBLEN  SETA  &MAXSLLN+4             TRUNCATE SL WTO LENGTH       @PGA 69064000
.LNGTSL1 ANOP                         ISSUE SINGLE-LINE MNOTE      @PGA 69098000
         MNOTE 0,'INLINE TEXT EXCEEDS ALLOWED MAXIMUM. TEXT LINE HAS BEX69132000
               EN TRUNCATED.'                                      @PMC 69166000
         AGO   .CHOPIT                GO TRUNCATE THE ACTUAL TEXT  @PGA 69200000
.LNGTML1 ANOP                         ISSUE MULTI-LINE MNOTE       @PGA 69234000
         MNOTE 0,'INLINE TEXT EXCEEDS ALLOWED MAXIMUM. TEXT LINE NUMBERX69268000
                1 HAS BEEN TRUNCATED.'                             @PMC 69302000
.CHOPIT  ANOP                          TRUNCATE THE TEXT           @PGA 69336000
&ILMEQU  SETC  '&ILMEQU'(1,&IHBLEN-3)  CHOP DOWN TO MAX LENGTH     @PGA 69370000
&ILMEQU  SETC  '&ILMEQU'.''''          PUT BACK THE ENDING QUOTE   @PGA 69404000
.********************************************************************** 69438000
.*   BEGIN PARAMETER LIST GENERATION UNLESS THIS IS A WTOR         @L2A 69472000
.*   WHERE A WPX DOES NOT EXIST. IN THIS SITUATION, THE WTOR       @L2A 69506000
.*   MACRO WILL GENERATE THE PARAMETER LIST.                       @L2A 69540000
.********************************************************************** 69574000
.PARMGEN ANOP                      PARAMETER LIST GENERATION       @L5C 69608000
         AIF   (&IHBWTOR AND NOT &IWPXBIT).END    DONE IF WTOR WITHOUT X69642000
                                                  A WPX            @L2C 69676000
         DC    AL2(&IHBLEN)             TEXT LENGTH            @YA17152 69710000
         DC    B'&CD(7)&CD(8)'          MCSFLAGS                        69744000
         AIF   ('&MESG' NE '').DCTEXT   INLINE TEXT IN PARMLIST    @L5A 69778000
.********************************************************************** 69812000
.*       INLINE TEXT NOT SPECIFIED. DECLARE TEXT ADDRESS FIELD     @L5A 69846000
.********************************************************************** 69880000
         DC    AL4(0)                   MESSAGE TEXT ADDRESS       @L5A 69914000
         AGO   .SKIPDC             CHECK FOR WPX BUILD             @L5A 69948000
.DCTEXT  ANOP                      PLACE INLINE TEXT IN PARMLIST   @L5A 69982000
         AIF   (&IHBLEN EQ 4).SKIPDC NO TEXT, SKIP THE TEXT DC @YA17152 70016000
         DC    C&ILMEQU                 MESSAGE TEXT               @L6C 70050000
.SKIPDC  AIF   (&IWPXBIT).WPXKEYS  IF WPX IS TO BE BUILT, THEN         X70084000
                                   GENERATE THAT RATHER THAN THE REST  X70118000
                                   OF THE OLD-FORMAT WPL           @L2A 70152000
.********************************************************************** 70186000
.*   GENERATING AN OLD-FORMAT WPL. DETERMINE WHETHER TO            @L2A 70220000
.*   GENERATE MORE FIELDS                                          @L2A 70254000
.********************************************************************** 70288000
         AIF   (NOT &IHBMCS).GENML                             @YA17152 70322000
         DC    B'&CD(1)&CD(2)'          DESCRIPTOR CODES                70356000
         DC    B'&CD(3)&CD(4)'          ROUTING CODES                   70390000
         AIF   ('&MSGTYP(1)' NE 'Y' AND NOT &SWM).GENML            @L2C 70424000
         DC    B'&CD(5)&CD(6)'          MESSAGE TYPE                    70458000
         AIF   (T'&QID EQ 'O' OR '&QID(1)' EQ 'N').GENML           @L2C 70492000
         AIF   (T'&QID EQ 'N').GENDCS1                           X02050 70526000
         AIF   ('&QID(1)' EQ 'Y').GENDCS0                        X02050 70560000
         MNOTE 4,'QID FIELD IS INVALID. ZERO ASSUMED.'                  70594000
.GENDCS0 ANOP                                                    X02050 70628000
         DC    AL2(0)                   QID FIELD                X02050 70662000
         AGO   .GENML                                              @L2C 70696000
.GENDCS1 ANOP                                                    X02050 70730000
         DC    AL2(&QID)                QID FIELD                X02050 70764000
         AGO   .GENML                   GO TO MULTI-LINE SECTION   @L2A 70798000
.WPXKEYS ANOP                           GENERATE A WPX             @L2A 70832000
.********************************************************************** 70866000
.*  A WPX IS TO BE GENERATED. FIRST CONVERT THE OBTAINED           @L2A 70900000
.*  ROUTING CODES TO HEXADECIMAL                                   @L2A 70934000
.********************************************************************** 70968000
&DCRC    SETC  ''                   INITIALIZE ROUTING CODE FIELD  @L2A 71002000
&I       SETA  -3                   INITIALIZE ROUTING CODE INDEX  @L2A 71036000
.CNVLOOP ANOP                       TOP OF CONVERSION LOOP         @L2A 71070000
&I       SETA  &I+4                 INCREMENT INDEX TO NEXT ROUTING    X71104000
                                    CODE NIBBLE (GROUP OF 4 BITS)  @L2A 71138000
         AIF   (&I GT 125).ENDCNV   IF DONE CONVERTING, SET EXTENDED   X71172000
                                    MCSFLAGS                       @L2A 71206000
&RNIBBLE SETC  '&RB(&I)&RB(&I+1)&RB(&I+2)&RB(&I+3)'  DEFINE ROUTING    X71240000
                                    CODE NIBBLE (4 BITS)           @L2A 71274000
         AIF   ('&RNIBBLE' NE '0000').TRY1  TEST FOR '0000'        @L2A 71308000
&DCRC    SETC  '&DCRC'.'0'                  APPEND '0' ONTO FIELD  @L2A 71342000
         AGO   .CNVLOOP                                            @L2A 71376000
.TRY1    AIF   ('&RNIBBLE' NE '0001').TRY2  TEST FOR '0001'        @L2A 71410000
&DCRC    SETC  '&DCRC'.'1'                  APPEND '1' ONTO FIELD  @L2A 71444000
         AGO   .CNVLOOP                                            @L2A 71478000
.TRY2    AIF   ('&RNIBBLE' NE '0010').TRY3  TEST FOR '0010'        @L2A 71512000
&DCRC    SETC  '&DCRC'.'2'                  APPEND '2' ONTO FIELD  @L2A 71546000
         AGO   .CNVLOOP                                            @L2A 71580000
.TRY3    AIF   ('&RNIBBLE' NE '0011').TRY4  TEST FOR '0011'        @L2A 71614000
&DCRC    SETC  '&DCRC'.'3'                  APPEND '3' ONTO FIELD  @L2A 71648000
         AGO   .CNVLOOP                                            @L2A 71682000
.TRY4    AIF   ('&RNIBBLE' NE '0100').TRY5  TEST FOR '0100'        @L2A 71716000
&DCRC    SETC  '&DCRC'.'4'                  APPEND '4' ONTO FIELD  @L2A 71750000
         AGO   .CNVLOOP                                            @L2A 71784000
.TRY5    AIF   ('&RNIBBLE' NE '0101').TRY6  TEST FOR '0101'        @L2A 71818000
&DCRC    SETC  '&DCRC'.'5'                  APPEND '5' ONTO FIELD  @L2A 71852000
         AGO   .CNVLOOP                                            @L2A 71886000
.TRY6    AIF   ('&RNIBBLE' NE '0110').TRY7  TEST FOR '0110'        @L2A 71920000
&DCRC    SETC  '&DCRC'.'6'                  APPEND '6' ONTO FIELD  @L2A 71954000
         AGO   .CNVLOOP                                            @L2A 71988000
.TRY7    AIF   ('&RNIBBLE' NE '0111').TRY8  TEST FOR '0111'        @L2A 72022000
&DCRC    SETC  '&DCRC'.'7'                  APPEND '7' ONTO FIELD  @L2A 72056000
         AGO   .CNVLOOP                                            @L2A 72090000
.TRY8    AIF   ('&RNIBBLE' NE '1000').TRY9  TEST FOR '1000'        @L2A 72124000
&DCRC    SETC  '&DCRC'.'8'                  APPEND '8' ONTO FIELD  @L2A 72158000
         AGO   .CNVLOOP                                            @L2A 72192000
.TRY9    AIF   ('&RNIBBLE' NE '1001').TRYA  TEST FOR '1001'        @L2A 72226000
&DCRC    SETC  '&DCRC'.'9'                  APPEND '9' ONTO FIELD  @L2A 72260000
         AGO   .CNVLOOP                                            @L2A 72294000
.TRYA    AIF   ('&RNIBBLE' NE '1010').TRYB  TEST FOR '1010'        @L2A 72328000
&DCRC    SETC  '&DCRC'.'A'                  APPEND 'A' ONTO FIELD  @L2A 72362000
         AGO   .CNVLOOP                                            @L2A 72396000
.TRYB    AIF   ('&RNIBBLE' NE '1011').TRYC  TEST FOR '1011'        @L2A 72430000
&DCRC    SETC  '&DCRC'.'B'                  APPEND 'B' ONTO FIELD  @L2A 72464000
         AGO   .CNVLOOP                                            @L2A 72498000
.TRYC    AIF   ('&RNIBBLE' NE '1100').TRYD  TEST FOR '1100'        @L2A 72532000
&DCRC    SETC  '&DCRC'.'C'                  APPEND 'C' ONTO FIELD  @L2A 72566000
         AGO   .CNVLOOP                                            @L2A 72600000
.TRYD    AIF   ('&RNIBBLE' NE '1101').TRYE  TEST FOR '1101'        @L2A 72634000
&DCRC    SETC  '&DCRC'.'D'                  APPEND 'D' ONTO FIELD  @L2A 72668000
         AGO   .CNVLOOP                                            @L2A 72702000
.TRYE    AIF   ('&RNIBBLE' NE '1110').SETFOX TEST FOR '1110'       @L2A 72736000
&DCRC    SETC  '&DCRC'.'E'                  APPEND 'E' ONTO FIELD  @L2A 72770000
         AGO   .CNVLOOP                                            @L2A 72804000
.SETFOX  ANOP                               MUST BE '1111'         @L2A 72838000
&DCRC    SETC  '&DCRC'.'F'                  APPEND 'F' ONTO FIELD  @L2A 72872000
         AGO   .CNVLOOP                                            @L2A 72906000
.ENDCNV  ANOP                       DONE WITH CONVERSION OF ROUTING    X72940000
                                    CODES                          @L2A 72974000
.********************************************************************** 73008000
.*  SET ON ANY EXTENDED MCSFLAGS THAT DO NOT CORRESPOND            @L2A 73042000
.*  TO THE SPECIFICATION OF A CERTAIN KEYWORD:                     @L2A 73076000
.********************************************************************** 73110000
&EMCS(5) SETB  (&IHBWTOR)               INDICATE WHETHER THIS IS A     X73144000
                                        WTOR WITH EXTENDED PLIST   @L2A 73178000
.********************************************************************** 73212000
.*  PROCESSING FOR THE MISCELLANEOUS FLAGS BYTE IS AS FOLLOWS:     @L2A 73246000
.*    - THE KEYWORDS ARE TO BE USED ON WTO INVOCATIONS ONLY        @L2A 73280000
.*    - ACCEPTABLE SUBSMOD VALUES ARE YES AND NO.                  @L2A 73314000
.*    - THE DEFAULT SUBSMOD VALUE IS NO.                           @L2A 73348000
.********************************************************************** 73382000
         AIF   (&IHBWTOR).ENDFLGS       IGNORE DATA IF WTOR        @L2A 73416000
.CHKSUBS ANOP                           CHECK SUBSMOD KEYWORD      @L2A 73450000
         AIF   ('&SUBSMOD' EQ '').ENDFLGS  IF NO DATA SPECIFIED,       X73484000
                                        DONE WITH KEYWORD          @L2A 73518000
&I       SETA  3                        DATA SPECIFIED. SET INDEX  @L2A 73552000
         AIF   ('&SUBSMOD' NE 'NO').SUBSYES  IF SUBSMOD=NO SPECIFIED,  X73586000
                                        SET APPROPRIATE BIT        @L2A 73620000
&MISCFLG(3) SETB 1                      INDICATE SUBSMOD=NO        @L2A 73654000
         AGO   .ENDFLGS                 DONE WITH MISCELLANEOUS FLAGS  X73688000
                                        BYTE                       @L2A 73722000
.SUBSYES ANOP                           CHECK FOR SUBSMOD=YES      @L2A 73756000
         AIF   ('&SUBSMOD' EQ 'YES').ENDFLGS IF SUBSMOD=YES SPECIFIED, X73790000
                                        SET NOTHING.               @L2A 73824000
         MNOTE 4,'SUBSMOD=YES ASSUMED. SPECIFIED SUBSMOD VALUE WAS NOT X73858000
               YES OR NO.'                                         @L2A 73892000
.ENDFLGS ANOP                           DONE WITH MISCELLANEOUS FLAGS  X73926000
                                        BYTE                       @L2A 73960000
&DCFLGS  SETC  '&MISCFLG(1)&MISCFLG(2)&MISCFLG(3)&MISCFLG(4)&MISCFLG(5)X73994000
               &MISCFLG(6)&MISCFLG(7)&MISCFLG(8)'                  @L2A 74028000
.********************************************************************** 74062000
.*  SET THE FOLLOWING EXTENDED MCS FLAGS:                          @L2A 74096000
.*   FLAG BYTE 1:                                                  @L5A 74130000
.*    - X'40': CONSID KEYWORD SPECIFIED                            @L2A 74164000
.*    - X'10': CONNECT KEYWORD SPECIFIED                           @L2A 74198000
.*    - X'04': PRTY KEYWORD SPECIFIED                              @L2A 74232000
.*    - X'02': CONSNAME KEYWORD SPECIFIED                          @L3A 74266000
.*   FLAG BYTE 2:                                                  @L5A 74300000
.*    - X'80': TEXT KEYWORD SPECIFIED                              @L5A 74334000
.*    - X'04': SYNCH=YES SPECIFIED                                 @L6A 74368000
.********************************************************************** 74402000
&EMCS(2) SETB  ('&CONSID'  NE '¬')      IF CONSID KEYWORD SPECIFIED,   X74436000
                                        SET EXTENDED MCSFLAG       @L2A 74470000
&EMCS(4) SETB  ('&CONNECT' NE '¬')      IF CONNECT KEYWORD SPECIFIED,  X74504000
                                        SET EXTENDED MCSFLAG       @L2A 74538000
&EMCS(6) SETB  ('&PRTY'    NE '¬')      IF PRTY KEYWORD SPECIFIED,     X74572000
                                        SET EXTENDED MCSFLAG       @L2A 74606000
&EMCS(7) SETB  ('&CONSNAME' NE '¬')     IF CONSNAME KEYWORD SPECIFIED, X74640000
                                        SET EXTENDED MCSFLAG       @L3A 74674000
&EMCS(9) SETB  ('&TEXT'    NE '¬')      IF TEXT KEYWORD SPECIFIED,     X74708000
                                        SET EXTENDED MCSFLAG       @L5A 74742000
&EMCS(14) SETB ('&SYNCH(1)' EQ 'YES')   IF SYNCH=YES SPECIFIED,        +74776000
                                        SET EXTENDED MCSFLAG       @L6A 74810000
.********************************************************************** 74844000
.*                                                                 @L2A 74878000
.*      CHECK FOR INFORMATIONAL OR WARNING MNOTE SITUATIONS        @L2A 74912000
.*      CONCERNING RUN-TIME KEYWORDS.                              @L2A 74946000
.*                                                                 @L2A 74980000
.*      FOR A LIST FORM INVOCATION, IF ANY RUN-TIME WPX KEYWORDS   @L2A 75014000
.*      EXCEPT FOR THE TEXT KEYWORD                                @L5A 75048000
.*      ARE SPECIFIED WITH DATA, ISSUE AN INFORMATIONAL MNOTE:     @L2A 75082000
.*                                                                 @L2A 75116000
.*        'KKKKKKKK' DATA IGNORED ON THE LIST FORM OF WTO.         @L2A 75150000
.*                                                                 @L2A 75184000
.*            WHERE 'KKKKKKKK' MAY BE  CONNECT, CONSID, JOBNAME,   @L2A 75218000
.*            JOBID, PRTY, KEY, TOKEN, SYSNAME, CONSNAME,          @01C 75252000
.*            OR CART                                              @L4A 75286000
.*                                                                 @L2A 75320000
.********************************************************************** 75354000
         AIF   ('&MF' EQ 'I').SMNOTES   IF STANDARD FORM SPECIFIED,    X75388000
                                        CHECK FOR KEYWORD MNOTES   @L2A 75422000
         AIF   ('&CONNECT' EQ '¬' OR                                   X75456000
                '&CONNECT' EQ '').LPRTY NO MNOTE IF NO DATA        @01C 75490000
         MNOTE 0,'''CONNECT'' DATA IGNORED ON THE LIST FORM OF WTO.'   X75524000
                                                                   @L2A 75558000
.LPRTY   AIF   ('&PRTY'    EQ '¬' OR                                   X75592000
                '&PRTY'    EQ '').LJOBI NO MNOTE IF NO DATA        @L2A 75626000
         MNOTE 0,'''PRTY'' DATA IGNORED ON THE LIST FORM OF WTO.'      X75660000
                                                                   @L2A 75694000
.LJOBI   AIF   ('&JOBID'   EQ '¬' OR                                   X75728000
                '&JOBID'   EQ '').LJOBN NO MNOTE IF NO DATA        @L2A 75762000
         MNOTE 0,'''JOBID'' DATA IGNORED ON THE LIST FORM OF WTO.'     X75796000
                                                                   @L2A 75830000
.LJOBN   AIF   ('&JOBNAME' EQ '¬' OR                                   X75864000
                '&JOBNAME' EQ '').LKEY  NO MNOTE IF NO DATA        @L2A 75898000
         MNOTE 0,'''JOBNAME'' DATA IGNORED ON THE LIST FORM OF WTO.'   X75932000
                                                                   @L2A 75966000
.LKEY    AIF   ('&KEY'     EQ '¬' OR                                   X76000000
                '&KEY'     EQ '').LTOKN NO MNOTE IF NO DATA        @L2A 76034000
         MNOTE 0,'''KEY'' DATA IGNORED ON THE LIST FORM OF WTO.'       X76068000
                                                                   @L2A 76102000
.LTOKN   AIF   ('&TOKEN'   EQ '¬' OR                                   X76136000
                '&TOKEN'   EQ '').LCONS NO MNOTE IF NO DATA        @L2A 76170000
         MNOTE 0,'''TOKEN'' DATA IGNORED ON THE LIST FORM OF WTO.'     X76204000
                                                                   @L2A 76238000
.LCONS   AIF   ('&CONSID'  EQ '¬' OR                                   X76272000
                '&CONSID'  EQ '').LCNAM NO MNOTE IF NO DATA        @L3C 76306000
         MNOTE 0,'''CONSID'' DATA IGNORED ON THE LIST FORM OF WTO.'    X76340000
                                                                   @L3A 76374000
.LCNAM   AIF   ('&CONSNAME'  EQ '¬' OR                                 X76408000
                '&CONSNAME'  EQ '').LRCNA NO MNOTE IF NO DATA      @L3A 76442000
         MNOTE 0,'''CONSNAME'' DATA IGNORED ON THE LIST FORM OF WTO.'  X76476000
                                                                   @L3A 76510000
.LRCNA   AIF   ( NOT &IHBWTOR OR NOT &RCNSPEC  OR                      X76544000
                '&WTORCN'  EQ '').LSYSN NO MNOTE IF NO DATA        @L3A 76578000
         MNOTE 0,'''RPLYISUR'' DATA IGNORED ON THE LIST FORM OF WTO.'  X76612000
                                                                   @L3A 76646000
.LSYSN   AIF   ('&SYSNAME' EQ '¬' OR                                   X76680000
                '&SYSNAME' EQ '').LCART  NO MNOTE IF NO DATA       @L4C 76714000
         MNOTE 0,'''SYSNAME'' DATA IGNORED ON THE LIST FORM OF WTO.'   X76748000
                                                                   @L2A 76782000
.LCART   AIF   ('&CART' EQ '¬' OR                                      X76816000
                '&CART' EQ '').LLINK  NO MNOTE IF NO DATA          @P9C 76850000
         MNOTE 0,'''CART'' DATA IGNORED ON THE LIST FORM OF WTO.'      X76884000
                                                                   @L4A 76918000
.LLINK   ANOP                                                      @L6A 76952000
         AIF   ('&LINKAGE' EQ '¬' OR                                   +76986000
                '&LINKAGE' EQ '').LWSPM     NO MNOTE IF NO DATA    @P9A 77020000
         MNOTE 0,'''LINKAGE'' DATA IGNORED ON THE LIST FORM OF WTO.'   +77054000
                                                                   @P9A 77088000
.LWSPM   ANOP                                                      @L6A 77122000
         AIF   ('&WSPARM'  EQ '¬' OR                                   +77156000
                '&WSPARM(1)' EQ '0' OR                                 +77190000
                '&WSPARM'  EQ '').GENWPX    NO MNOTE IF NO DATA    @PAC 77224000
         MNOTE 0,'''WSPARM'' DATA IGNORED ON THE LIST FORM OF WTO.'    +77258000
                                                                   @L6A 77292000
         AGO   .GENWPX                                             @L2A 77326000
.********************************************************************** 77360000
.*                                                                 @L2A 77394000
.*      FOR A STANDARD FORM INVOCATION, IF ANY RUN-TIME KEYWORDS   @L2A 77428000
.*      ARE SPECIFIED WITHOUT DATA, ISSUE A WARNING MNOTE:         @L2A 77462000
.*                                                                 @L2A 77496000
.*        'KKKKKKKK' KEYWORD IGNORED. NO VALUE SPECIFIED.          @L2A 77530000
.*                                                                 @L2A 77564000
.*         WHERE 'KKKKKKKK' MAY BE  CONNECT, CONSID, JOBNAME,      @L2A 77598000
.*            JOBID, PRTY, KEY, TOKEN, SYSNAME, CONSNAME,          @01C 77632000
.*            WSPARM, OR CART.                                     @L6C 77666000
.*                                                                 @L2A 77700000
.********************************************************************** 77734000
.SMNOTES ANOP                                                      @L2A 77768000
         AIF   ('&CONNECT' NE '').SPRTY NO MNOTE IF DATA SPECIFIED @01C 77802000
         MNOTE 4,'''CONNECT'' KEYWORD IGNORED. NO VALUE SPECIFIED.'    X77836000
                                                                   @L2A 77870000
&EMCS(4) SETB  0                        TURN EXT MCSFLAG BACK OFF  @L2A 77904000
.SPRTY   AIF   ('&PRTY' NE '').SCART    NO MNOTE IF DATA SPECIFIED @L4C 77938000
         MNOTE 4,'''PRTY'' KEYWORD IGNORED. NO VALUE SPECIFIED.'       X77972000
                                                                   @L2A 78006000
&EMCS(6) SETB  0                        TURN EXT MCSFLAG BACK OFF  @L2A 78040000
.SCART   AIF   ('&CART' NE '').SJOBI    NO MNOTE IF DATA SPECIFIED @L4A 78074000
         MNOTE 4,'''CART'' KEYWORD IGNORED. NO VALUE SPECIFIED.'       X78108000
                                                                   @L4A 78142000
.SJOBI   AIF   ('&JOBID' NE '').SJOBN   NO MNOTE IF DATA SPECIFIED @L2A 78176000
         MNOTE 4,'''JOBID'' KEYWORD IGNORED. NO VALUE SPECIFIED.'      X78210000
                                                                   @L2A 78244000
.SJOBN   AIF   ('&JOBNAME' NE '').SKEY  NO MNOTE IF DATA SPECIFIED @L2A 78278000
         MNOTE 4,'''JOBNAME'' KEYWORD IGNORED. NO VALUE SPECIFIED.'    X78312000
                                                                   @L2A 78346000
.SKEY    AIF   ('&KEY' NE '').STOKN     NO MNOTE IF DATA SPECIFIED @L2A 78380000
         MNOTE 4,'''KEY'' KEYWORD IGNORED. NO VALUE SPECIFIED.'        X78414000
                                                                   @L2A 78448000
.STOKN   AIF   ('&TOKEN' NE '').SCONS   NO MNOTE IF DATA SPECIFIED @L2A 78482000
         MNOTE 4,'''TOKEN'' KEYWORD IGNORED. NO VALUE SPECIFIED.'      X78516000
                                                                   @L2A 78550000
.SCONS   AIF   ('&CONSID' NE '').SCNAM  NO MNOTE IF DATA SPECIFIED @L3C 78584000
         MNOTE 4,'''CONSID'' KEYWORD IGNORED. NO VALUE SPECIFIED.'     X78618000
                                                                   @L2A 78652000
&EMCS(2) SETB  0                        TURN EXT MCSFLAG BACK OFF  @L2A 78686000
.SCNAM   AIF   ('&CONSNAME' NE '').SRCNA  NO MNOTE IF DATA SPECIFIED   X78720000
                                                                   @L3A 78754000
         MNOTE 4,'''CONSNAME'' KEYWORD IGNORED. NO VALUE SPECIFIED.'   X78788000
                                                                   @L3A 78822000
&EMCS(7) SETB  0                        TURN EXT MCSFLAG BACK OFF  @L2A 78856000
.SRCNA   AIF   (NOT &IHBWTOR OR NOT &RCNSPEC OR                        X78890000
                '&WTORCN' NE '').SSYSN  NO MNOTE IF DATA SPECIFIED @L3A 78924000
         MNOTE 4,'''RPLYISUR'' KEYWORD IGNORED. NO VALUE SPECIFIED.'   X78958000
                                                                   @L3A 78992000
.SSYSN   AIF   ('&SYSNAME' NE '').SWSPRM NO MNOTE IF DATA GIVEN    @L6C 79026000
         MNOTE 4,'''SYSNAME'' KEYWORD IGNORED. NO VALUE SPECIFIED.'    X79060000
                                                                   @L2A 79094000
.SWSPRM  ANOP                                                      @L6A 79128000
         AIF   ('&WSPARM' NE '').SSYNC   NO MNOTE IF DATA GIVEN    @L6A 79162000
         MNOTE 4,'''WSPARM'' KEYWORD IGNORED. NO VALUE SPECIFIED.'     +79196000
                                                                   @L6A 79230000
.SSYNC   ANOP                                                      @L6A 79264000
         AIF   ('&SYNCH' NE '').GENWPX   NO MNOTE IF DATA GIVEN    @L6A 79298000
         MNOTE 4,'''SYNCH'' KEYWORD IGNORED. NO VALUE SPECIFIED.'  @L6A 79332000
&EMCS(14) SETB  0                       TURN EXT MCSFLAG BACK OFF  @L6A 79366000
.********************************************************************** 79400000
.*                                                                 @L2A 79434000
.*   BEGIN GENERATION OF THE WPX SECTION OF THE PARAMETER LIST     @L2A 79468000
.*                                                                 @L2A 79502000
.********************************************************************** 79536000
.GENWPX  ANOP                           GENERATE THE WPX           @L2A 79570000
         DC    AL1(&IWPXVER)            VERSION LEVEL              @PJC 79604000
         DC    B'&DCFLGS'               MISCELLANEOUS FLAGS        @L2A 79638000
.********************************************************************** 79672000
.*   PROCESSING FOR REPLY LENGTH (WTOR) IS AS FOLLOWS:             @L2A 79706000
.*     .WHEN LIST FORM IS SPECIFIED:                               @L2A 79740000
.*       - IF NO DATA SPECIFIED, GENERATE A VALUE OF 0             @L2A 79774000
.*       - IF DATA IS IN A REGISTER, ISSUE AN ERROR MESSAGE        @L2A 79808000
.*                 (THIS IS DONE BY THE WTOR MACRO)                @L2A 79842000
.*       - OTHERWISE, GENERATE WITH THE DATA SPECIFIED             @L2A 79876000
.*     .WHEN STANDARD FORM IS SPECIFIED:                           @L2A 79910000
.*       - IF NO DATA SPECIFIED, ISSUE AN ERROR MESSAGE            @L2A 79944000
.*                 (THIS IS DONE BY THE WTOR MACRO)                @L2A 79978000
.*       - IF DATA IS IN A REGISTER, GENERATE A VALUE OF 0. (THE   @L2A 80012000
.*            ACTUAL DATA WILL BE INSERTED LATER IN THE MACRO)     @L2A 80046000
.*       - OTHERWISE, GENERATE WITH THE DATA SPECIFIED             @L2A 80080000
.********************************************************************** 80114000
         AIF   (NOT &IHBWTOR).DCRL0     GEN ZERO IF NOT A WTOR     @L2A 80148000
         AIF   ('&MF' NE 'L').RLIFORM   BRANCH IF NOT LIST FORM    @L2A 80182000
         AIF   ('&WTOLENR' EQ '').DCRL0  LIST FORM GEN 0 IF NO         X80216000
                                         DATA                  @YA17152 80250000
         AGO   .DCRL                    NOT REG. GEN WITH THE DATA @L2A 80284000
.RLIFORM AIF   (&RLREG).DCRL0           GEN 0 IF DATA IN REG       @L2A 80318000
.DCRL    DC    AL1(&WTOLENR)            REPLY LENGTH           @YA17152 80352000
         AGO   .AFTERRL                 BUILD REST OF PARM LIST    @L2A 80386000
.DCRL0   DC    AL1(0)                   REPLY LENGTH               @L2A 80420000
.AFTERRL ANOP                           DONE WITH REPLY LENGTH     @L2A 80454000
.********************************************************************** 80488000
.*       THE FOLLOWING FIELD MUST BE UPDATED EACH TIME THE LENGTH  @L5A 80522000
.*       OF THE WPX CHANGES.                                       @L5A 80556000
.********************************************************************** 80590000
         AIF   ('&IWPXVER' EQ '2').WPXLEN2   DCL LENGTH, VER2 WPX  @PJA 80624000
         DC    AL1(0)                   RESERVED                   @PJA 80658000
         AGO   .WPXLENE                                            @PJA 80692000
.WPXLEN2 ANOP                                                      @PJA 80726000
         DC    AL1(104)                 LENGTH OF WPX              @L5C 80760000
.WPXLENE ANOP                           FINISHED WPX LENGTH DCL    @PJA 80794000
.********************************************************************** 80828000
.*   DEFINE DC FIELDS FOR EXTENDED MCSFLAGS                        @L2A 80862000
.********************************************************************** 80896000
&EM(1)   SETC  '&EMCS(1)&EMCS(2)&EMCS(3)&EMCS(4)&EMCS(5)&EMCS(6)&EMCS(7X80930000
               )&EMCS(8)'                                          @L2A 80964000
&EM(2)   SETC  '&EMCS(9)&EMCS(10)&EMCS(11)&EMCS(12)&EMCS(13)&EMCS(14)&EX80998000
               MCS(15)&EMCS(16)'                                   @L2A 81032000
         DC    B'&EM(1)&EM(2)'          EXTENDED MCS FLAGS         @L2A 81066000
         DC    AL2(0)                   RESERVED                   @L2A 81100000
.********************************************************************** 81134000
.*   PROCESSING FOR REPLY BUFFER ADDRESS (WTOR) IS AS FOLLOWS:     @P7A 81168000
.*   .WHEN LIST FORM IS SPECIFIED:                                 @P7A 81202000
.*     - IF NO DATA SPECIFIED, GENERATE A VALUE OF 0               @P7A 81236000
.*     - IF DATA IS IN A REGISTER, ISSUE AN ERROR MESSAGE          @P7A 81270000
.*               (THIS IS DONE BY THE WTOR MACRO)                  @P7A 81304000
.*     - OTHERWISE, GENERATE WITH THE DATA SPECIFIED               @P7A 81338000
.*   .WHEN STANDARD FORM IS SPECIFIED                              @P7A 81372000
.*     - IF NO DATA SPECIFIED, ISSUE AN ERROR MESSAGE              @P7A 81406000
.*               (THIS IS DONE BY THE WTOR MACRO)                  @P7A 81440000
.*     - IF DATA IS IN A REGISTER, GENERATE A VALUE OF 0. (THE     @P7A 81474000
.*          ACTUAL DATA WILL BE INSERTED LATER IN THE MACRO)       @P7A 81508000
.*     - OTHERWISE, GENERATE WITH THE DATA SPECIFIED               @P7A 81542000
.********************************************************************** 81576000
         AIF   (NOT &IHBWTOR).DCRA0     GEN ZERO IF NOT A WTOR     @P7A 81610000
         AIF   ('&MF' NE 'L').RAIFORM   BRANCH IF NOT LIST FORM    @P7A 81644000
         AIF   ('&WTORYA' EQ '').DCRA0  LIST FORM. GEN 0 IF NO DATA@P7A 81678000
         AGO   .DCRA                    NOT REG. GEN WITH THE DATA @P7A 81712000
.RAIFORM AIF   (&RAREG).DCRA0           GEN 0 IF DATA IN REG       @P7A 81746000
.DCRA    DC    AL4(&WTORYA)             REPLY BUFFER ADDRESS       @P7A 81780000
         AGO   .AFTERRA                 BUILD REST OF PARM LIST    @P7A 81814000
.DCRA0   DC    AL4(0)                   REPLY BUFFER ADDRESS       @P7C 81848000
.AFTERRA ANOP                           DONE WITH REPLY ADDRESS    @P7A 81882000
.********************************************************************** 81916000
.*   PROCESSING FOR REPLY ECB ADDRESS (WTOR) IS AS FOLLOWS:        @P7A 81950000
.*   .WHEN LIST FORM IS SPECIFIED:                                 @P7A 81984000
.*     - IF NO DATA SPECIFIED, GENERATE A VALUE OF 0               @P7A 82018000
.*     - IF DATA IS IN A REGISTER, ISSUE AN ERROR MESSAGE          @P7A 82052000
.*               (THIS IS DONE BY THE WTOR MACRO)                  @P7A 82086000
.*     - OTHERWISE, GENERATE WITH THE DATA SPECIFIED               @P7A 82120000
.*   .WHEN STANDARD FORM IS SPECIFIED                              @P7A 82154000
.*     - IF NO DATA SPECIFIED, ISSUE AN ERROR MESSAGE              @P7A 82188000
.*               (THIS IS DONE BY THE WTOR MACRO)                  @P7A 82222000
.*     - IF DATA IS IN A REGISTER, GENERATE A VALUE OF 0. (THE     @P7A 82256000
.*          ACTUAL DATA WILL BE INSERTED LATER IN THE MACRO)       @P7A 82290000
.*     - OTHERWISE, GENERATE WITH THE DATA SPECIFIED               @P7A 82324000
.********************************************************************** 82358000
         AIF   (NOT &IHBWTOR).DCEA0     GEN ZERO IF NOT A WTOR     @P7A 82392000
         AIF   ('&MF' NE 'L').EAIFORM   BRANCH IF NOT LIST FORM    @P7A 82426000
         AIF   ('&WTOECB' EQ '').DCEA0  LIST FORM. GEN 0 IF NO DATA@P7A 82460000
         AGO   .DCEA                    NOT REG. GEN WITH THE DATA @P7A 82494000
.EAIFORM AIF   (&EAREG).DCEA0           GEN 0 IF DATA IN REG       @P7A 82528000
.DCEA    DC    AL4(&WTOECB)             REPLY ECB ADDRESS          @P7A 82562000
         AGO   .AFTEREA                 BUILD REST OF PARM LIST    @P7A 82596000
.DCEA0   DC    AL4(0)                   REPLY ECB ADDRESS          @P7C 82630000
.AFTEREA ANOP                           DONE WITH ECB ADDRESS      @P7A 82664000
         DC    AL4(0)                   CONNECT ID                 @01C 82698000
         DC    B'&CD(1)&CD(2)'          DESCRIPTOR CODES           @L2A 82732000
         DC    AL2(0)                   RESERVED                   @L2A 82766000
         DC    XL16'&DCRC'              EXTENDED ROUTING CODES     @L2A 82800000
         DC    B'&CD(5)&CD(6)'          MESSAGE TYPE               @L2A 82834000
         DC    AL2(0)                   MESSAGE'S PRIORITY         @L2A 82868000
         DC    CL8'        '            JOB ID                     @L2A 82902000
         DC    CL8'        '            JOB NAME                   @L2A 82936000
         DC    CL8'        '            RETRIEVAL KEY              @L2A 82970000
         DC    AL4(0)                   TOKEN FOR DOM              @P1C 83004000
         DC    AL4(0)                   CONSOLE ID                 @P1C 83038000
         DC    CL8'        '            SYSTEM NAME                @L2A 83072000
         AIF   ('&IWPXVER' NE '1').GENWPX2                         @PJA 83106000
         DC    AL4(0)                   RESERVED                   @PJA 83140000
         DC    AL4(0)                   RESERVED                   @PJA 83174000
         AGO   .GENML                   FINISHED VER1 WPX          @PJA 83208000
.GENWPX2 ANOP                           VERSION 2 WPX FIELDS       @PJA 83242000
         DC    CL8'        '            CONSOLE NAME               @L3A 83276000
         DC    AL4(0)                   REPLY CONSOLE NAME/ID ADDR @L3A 83310000
         DC    AL4(0)                   CART ADDRESS               @L4C 83344000
.********************************************************************** 83378000
.*   WSPARM IS GENERATED AS ZERO UNLESS IT IS INLINE FORM          @PBA 83412000
.*   WITH A NON-NULL, NONZERO, NON-REGISTER VALUE.                 @PBA 83446000
.*   IT IS INITIALIZED IF INLINE FORM, NOT A REGISTER.             @PBA 83480000
.********************************************************************** 83514000
         AIF   ('&WSPARM' EQ '¬' OR '&WSPARM(1)' EQ '').GENWS      @PBA 83548000
         AIF   ('&WSPARM(1)' EQ '0').GENWS                         @PBA 83582000
         AIF   ('&MF(1)' EQ 'L').GENWS                             @PBA 83616000
         AIF   ('&WSPARM'(1,1) EQ '(').GENWS                       @PBA 83650000
         DC    AL4(&WSPARM(1))          WSPARM ADDRESS             @PBA 83684000
         AGO   .GENML                                              @PBA 83718000
.GENWS   ANOP                                                      @PBA 83752000
         DC    AL4(0)                   WSPARM ADDRESS             @L6C 83786000
.********************************************************************** 83820000
.*   DONE WITH COMMON WPL OR WPX GENERATION.  IF THIS IS A         @L2A 83854000
.*   MULTI-LINE WTO, GENERATE THE MULTI-LINE INFORMATION SECTION   @L2A 83888000
.*   OF THE PARAMETER LIST.                                        @L2A 83922000
.********************************************************************** 83956000
.GENML   AIF   (NOT &MLW).NOTMLW2       SKIP THIS SECTION IF NOT A     X83990000
                                        MULTI-LINE WTO             @L2C 84024000
         AIF   ('&TEXT' NE '¬').GENMLT  BRANCH IF TEXT KEYWORD USED    X84058000
                                                                   @L5A 84092000
         DC    XL2'&LT(1)00'            LINE TYPE                       84126000
         AIF   ('&AREAID' EQ '').ID0    GEN 0 IF NO AREA ID      X02007 84160000
         DC    CL1'&AREAID'             AREA ID                  X02007 84194000
         AGO   .IDA                     GO GENERATE LINE COUNT   X02007 84228000
.ID0     DC    X'00'                    AREA ID                         84262000
.IDA     ANOP                           GENERATE LINE COUNT      X02007 84296000
         DC    AL1(&LLCNT)              TOTAL NUMBER OF LINES    X02007 84330000
.MLW12   AIF   (&H GE &LLCNT).MLW14     DONE IF ALL LINES GENNED X02007 84364000
&H       SETA  &H+1                     INCREMENT LINE COUNTER   X02007 84398000
         AIF   (&IHBWTOR).MLW12A1       IF WTOR BYPASS WTO SETTING @L6A 84432000
&ILMEQU  SETC  '&SYSLIST(&H,1)'         SET TO NEXT LINE OF WTO    @L6A 84466000
         AGO   .MLW12A2                 BYPASS WTOR SETTING        @L6A 84500000
.MLW12A1 ANOP                           WTOR, SET VARIABLE         @L6A 84534000
&ILMEQU  SETC  '&SYSLIST(1,&H,1)'       SET TO NEXT LINE OF WTOR   @L6A 84568000
.MLW12A2 ANOP                                                      @L6A 84602000
&I       SETA  1                        INITIALIZE CHAR COUNTER  X02007 84636000
&IHBLEN  SETA  K'&ILMEQU-2              LENGTH OF CURRENT LINE     @L6C 84670000
&PAIR    SETB  0                        INITIALIZE NO PAIR FOUND X02007 84704000
.QLOOPH  ANOP                                                    X02007 84738000
&I       SETA  &I+1+&PAIR               INCREMENT CHAR COUNTER   X02007 84772000
         AIF   (&I GE K'&ILMEQU).QDONEH IF DONE WITH THIS LINE     @L6C 84806000
&PAIR    SETB  ('&ILMEQU'(&I,2) EQ '''''' OR '&ILMEQU'(&I,2) EQ '&&')  +84840000
                                        CHECK FOR DOUBLE QUOTE OR      +84874000
                                        DOUBLE AMPERSAND           @L6C 84908000
&IHBLEN  SETA  &IHBLEN-&PAIR            IF A PAIR FOUND, ADJUST LINE   X84942000
                                        LENGTH                 @YA17152 84976000
         AGO   .QLOOPH                  LOOK FOR MORE PAIRS      X02007 85010000
.QDONEH  ANOP                           DONE WITH CURRENT LINE   X02007 85044000
&AD      SETB  (&LT(&H) NE 10)          0 IF A NULL END LINE, 1 IF NOT X85078000
                                                                 X02007 85112000
&IHBLEN  SETA  4+&IHBLEN*&AD            SET TEXT LENGTH        @YA17152 85146000
.********************************************************************** 85180000
.*                                                                 @PGA 85214000
.*  CHECK IF INLINE TEXT LENGTH EXCEEDS THE DOCUMENTED MAXIMUM:    @PGA 85248000
.* - AT THIS POINT, WE MUST BE DEALING WITH A MULTI-LINE AND       @PGA 85282000
.* - NOT A CONTROL LINE, SO THE MAXIMUM LENGTH IS 71 CHARS.        @PGA 85316000
.*  IF LINE IS TOO LONG, ISSUE WARNING MNOTE AND TRUNCATE LINE     @PGA 85350000
.*                                                                 @PGA 85384000
.********************************************************************** 85418000
         AIF   (&IHBLEN LE &MAXMLLN+4).GENMORE  CHECK IF TOO LONG  @PGA 85452000
         MNOTE 0,'INLINE TEXT EXCEEDS ALLOWED MAXIMUM. TEXT LINE NUMBERX85486000
                &H HAS BEEN TRUNCATED.'                            @PNC 85520000
&IHBLEN  SETA  &MAXMLLN+4              SET NEW MAXIMUM LENGTH      @PGA 85554000
&ILMEQU  SETC  '&ILMEQU'(1,&IHBLEN-3)  TRUNCATE THE TEXT           @PGA 85588000
&ILMEQU  SETC  '&ILMEQU'.''''          PUT BACK ENDING QUOTE       @PGA 85622000
.GENMORE ANOP                          GENERATE NEXT LINE OF DCLS  @PGA 85656000
         DC    AL2(&IHBLEN)             MESSAGE LENGTH         @YA17152 85690000
         DC    XL2'&LT(&H)00'           LINE TYPE                       85724000
         AIF   (&IHBLEN EQ 4).MLW12     IF NO TEXT,DONT GEN IT @YA17152 85758000
         DC    C&ILMEQU                 MESSAGE TEXT               @L6C 85792000
         AGO   .MLW12                   CHECK NEXT LINE OF TEXT  X02007 85826000
.MLW14   AIF   (NOT &E4).MLW15                                   X02007 85860000
.********************************************************************** 85894000
.*       ISSUE ERROR MESSAGE:                                  @G860PSS 85928000
.* *,GENERATION TERMINATED BY E OR DE LINE TYPE                @G860PSS 85962000
.********************************************************************** 85996000
         IHBERMAC 242                                                   86030000
.MLW15   AIF   (NOT &E5).MLW17                                   X02007 86064000
.********************************************************************** 86098000
.*       ISSUE ERROR MESSAGE:                                  @G860PSS 86132000
.* 4,INVALID LINE TYPE, E OR DE ASSUMED                        @G860PSS 86166000
.********************************************************************** 86200000
         IHBERMAC 243                                                   86234000
.MLW17   AIF   (NOT &E3).NOTMLW2                                 X02007 86268000
.********************************************************************** 86302000
.*       ISSUE ERROR MESSAGE:                                  @G860PSS 86336000
.* 12,INVALID C OR L LINETYPE, DE ASSUMED--GENERATION TERMINATED        86370000
.********************************************************************** 86404000
         IHBERMAC 244                                                   86438000
         AGO   .NOTMLW2                 CONTINUE                   @L5A 86472000
.********************************************************************** 86506000
.*       GENERATE THE MULTILINE INFORMATION FOR THE PARAMETER LIST @L5A 86540000
.*       WHEN THE TEXT KEYWORD IS SPECIFIED                        @L5A 86574000
.********************************************************************** 86608000
.GENMLT  ANOP                                                      @L5A 86642000
&H       SETA  1                        INITIALIZE COUNTER         @L5A 86676000
         DC    XL2'&LT(1)00'            LINE TYPE                  @L5A 86710000
         AIF   ('&AREAID' EQ '').ID2    GEN 0 IF NO AREA ID        @L5A 86744000
         DC    CL1'&AREAID'             AREA ID                    @L5A 86778000
         AGO   .IDB                     GO GENERATE LINE COUNT     @L5A 86812000
.ID2     DC    X'00'                    AREA ID                    @L5A 86846000
.IDB     ANOP                           GENERATE LINE COUNT        @L5A 86880000
         DC    AL1(&LLCNT)              TOTAL NUMBER OF LINES      @L5A 86914000
.MLWT12  AIF   (&H GE &LLCNT).MLWT14    DONE IF ALL LINES GENNED   @L5A 86948000
&H       SETA  &H+1                     INCREMENT LINE COUNTER     @L5A 86982000
&AD      SETB  (&LT(&H) NE 10)          0 IF A NULL END LINE, 1 IF NOT X87016000
                                                                   @L5A 87050000
&IHBLEN  SETA  8                        SET TEXT LENGTH            @PLC 87084000
         DC    AL2(&IHBLEN)             MESSAGE LENGTH         @YA17152 87118000
         DC    XL2'&LT(&H)00'           LINE TYPE                  @L5A 87152000
         DC    AL4(0)                   TEXT ADDRESS               @L5A 87186000
         AGO   .MLWT12                  CHECK NEXT LINE OF TEXT    @L5A 87220000
.MLWT14  AIF   (NOT &E4).MLWT15                                    @L5A 87254000
.********************************************************************** 87288000
.*       ISSUE ERROR MESSAGE:                                      @L5A 87322000
.* *,GENERATION TERMINATED BY E OR DE LINE TYPE                    @L5A 87356000
.********************************************************************** 87390000
         IHBERMAC 242                                              @L5A 87424000
.MLWT15  AIF   (NOT &E5).MLWT17                                    @L5A 87458000
.********************************************************************** 87492000
.*       ISSUE ERROR MESSAGE:                                      @L5A 87526000
.* 4,INVALID LINE TYPE, E OR DE ASSUMED                            @L5A 87560000
.********************************************************************** 87594000
         IHBERMAC 243                                              @L5A 87628000
.MLWT17  AIF   (NOT &E3).NOTMLW2                                   @L5A 87662000
.********************************************************************** 87696000
.*       ISSUE ERROR MESSAGE:                                      @L5A 87730000
.* 12,INVALID C OR L LINETYPE, DE ASSUMED--GENERATION TERMINATED   @L5A 87764000
.********************************************************************** 87798000
         IHBERMAC 244                                              @L5A 87832000
.********************************************************************** 87866000
.*       THE DS INSTRUCTION THAT FOLLOWS IS NOT EXECUTED FOR       @L2A 87900000
.*       EITHER A LIST FORM WTO OR WTOR, OR A STANDARD             @L2A 87934000
.*       FORM WTOR WITHOUT A WPX. IN THIS CASE, THE WTOR           @L2A 87968000
.*       MACRO WILL GENERATE THE PARAMETER LIST AND WILL           @L2A 88002000
.*       THEN PERFORM THE DS INSTRUCTION.                          @L2A 88036000
.********************************************************************** 88070000
.NOTMLW2 ANOP                                                      @L5A 88104000
         AIF   ('&MF' EQ 'L' OR                                        X88138000
               (&IHBWTOR AND NOT &IWPXBIT)).END                    @L2C 88172000
&GNAME.A DS    0H                                                       88206000
         AIF   (NOT &IWPXBIT).SKIPMOD                              @L2A 88240000
.********************************************************************** 88274000
.*       A WPX EXISTS FOR THIS STANDARD FORM INVOCATION.           @L2A 88308000
.*       SET REGISTER 14 TO POINT TO THE FIRST BYTE AFTER          @L2A 88342000
.*       THE MESSAGE TEXT FIELD.                                   @L2A 88376000
.********************************************************************** 88410000
         LR    14,1                     FIRST BYTE OF PARM LIST    @L2A 88444000
         SR    15,15                    CLEAR REGISTER 15          @L2A 88478000
         AH    15,0(1,0)                ADD LENGTH OF TEXT + 4     @L2A 88512000
         AR    14,15                    FIRST BYTE AFTER TEXT      @L2A 88546000
.********************************************************************** 88580000
.*       IF THE TEXT KEYWORD IS SPECIFIED, INSERT THE KEYWORD      @L5A 88614000
.*       VALUE INTO THE PARAMETER LIST IN PLACE OF INLINE          @L5A 88648000
.*       MESSAGE TEXT.                                             @L5A 88682000
.********************************************************************** 88716000
.ITEXTID ANOP                           CHECK FOR TEXT                  88750000
         AIF   ('&TEXT' EQ '¬').IWTOR   SKIP DOWN IF NO TEXT       @L5A 88784000
         AIF   (&MLW).ITEXTR2           BRANCH IF MULTILINE        @L5A 88818000
         AIF   ('&TEXT'(1,1) EQ '(').ITEXTRG BRANCH IF IN REGISTER @L5A 88852000
         LA    15,&TEXT(1)              LOAD TEXT VALUE            @L5A 88886000
         ST    15,4(0,1)                STORE TEXT ADDR INTO PLIST @L5A 88920000
         AGO   .IWTOR                   CHECK FOR WTOR             @L5A 88954000
.ITEXTRG ANOP                           TEXT ADDRESS IN REGISTER   @L5A 88988000
         AIF   (NOT &IHBWTOR).ITEXTNO   IF NOT WTOR, USE TEXT FLD  @L5A 89022000
&K       SETA  K'&TEXT                  GET LENGTH OF VALUE        @L5A 89056000
&VALH1   SETC  '&TEXT'(2,&K-2)          TAKE STUFF BETWEEN PARENS  @L5A 89090000
         ST    &VALH1,4(0,1)            STORE TEXT ADDRESS         @L5A 89124000
         AGO   .IWTOR                   CHECK FOR WTOR             @L5A 89158000
.ITEXTNO ANOP                           TEXT ADDRESS IN REGISTER   @L5A 89192000
         ST    &TEXT(1),4(0,1)          STORE TEXT ADDR INTO PLIST @L5A 89226000
         AGO   .IWTOR                   CHECK FOR WTOR             @L5A 89260000
.ITEXTR2 ANOP                           MULTILINE W/VALUE IN REG   @L5A 89294000
&VALH1   SETC  '&TEXT(1,1)'             EXTRACT FIRST LINE'S ADDR  @L5A 89328000
         AIF   ('&VALH1' EQ '').IWTOR   BRANCH IF NULL ENTRY       @L5A 89362000
         AIF   ('&VALH1'(1,1) NE  '(').ITEXTR4 BRANCH NOT REGISTER @L5A 89396000
&K       SETA  K'&VALH1                                                 89430000
&VALH1   SETC  '&VALH1'(2,&K-2)                                         89464000
         ST    &VALH1,4(0,1)            STORE TEXT ADDRESS         @L5A 89498000
         AGO   .IWTOR                   CHECK FOR WTOR             @L5A 89532000
.ITEXTR4 ANOP                                                      @L5A 89566000
         LA    15,&VALH1                LOAD ADDR OF TEXT FIELD    @P8C 89600000
         ST    15,4(0,1)                STORE TEXT ADDR INTO PLIST @P8A 89634000
.IWTOR   ANOP                                                           89668000
         AIF   (NOT &IHBWTOR).ENDWTOR IF NOT WTOR, BRANCH          @L2A 89702000
.********************************************************************** 89736000
.*       IF THE REPLY ADDRESS IS IN A REGISTER, STORE IT IN        @L2A 89770000
.*       THE PARAMETER LIST                                        @L2A 89804000
.********************************************************************** 89838000
         AIF   ('&WTORYA' EQ '').IECB   BR IF NO DATA SPECIFIED    @L2A 89872000
         AIF   (NOT &RAREG).IECB        BR IF NOT IN REG           @P6C 89906000
         ST    &WTORYA,8(0,14)          STORE REPLY ADDRESS        @L2A 89940000
.********************************************************************** 89974000
.*       IF ECB ADDRESS IS IN A REGISTER, SAVE ITS ADDRESS IN      @L2A 90008000
.*       THE PARAMETER LIST                                        @L2A 90042000
.********************************************************************** 90076000
.IECB    AIF   ('&WTOECB' EQ '').ILEN   BR IF NO DATA SPECIFIED    @L2A 90110000
         AIF   (NOT &EAREG).ILEN        BR IF NOT IN REG           @P6C 90144000
         ST    &WTOECB,12(0,14)         STORE ECB ADDRESS          @L2A 90178000
.********************************************************************** 90212000
.*       IF THE LENGTH IS IN A REGISTER, SAVE ITS ADDRESS IN       @L2A 90246000
.*       THE PARAMETER LIST                                        @L2A 90280000
.********************************************************************** 90314000
.ILEN    AIF   ('&WTOLENR' EQ '').ENDWTOR BR IN NO DATA SPEC.  @YA17152 90348000
         AIF   (NOT &RLREG).ENDWTOR     BR IN NOT IN REG           @L2A 90382000
         STC   &WTOLENR,2(0,14)         STORE REPLY LENGTH     @YA17152 90416000
.ENDWTOR ANOP                           END OF 'WTOR ONLY' INFO    @L2A 90450000
.********************************************************************** 90484000
.*       IF THE PRTY KEYWORD IS SPECIFIED, (FIELD OR REGISTER)     @L2A 90518000
.*       INSERT IT INTO THE PARAMETER LIST                         @L2A 90552000
.********************************************************************** 90586000
         AIF   ('&PRTY' EQ '¬' OR                                      X90620000
                '&PRTY' EQ '').IRCON      VERIFY DATA SPECIFIED    @L3C 90654000
         AIF   ('&PRTY'(1,1) EQ '(').IPRTYRG BRANCH IF IN REG      @L2A 90688000
         MVC   42(2,14),&PRTY(1)        INSERT PRTY INTO PLIST     @L2A 90722000
         AGO   .IRCON                   GO CHECK RPLYISUR          @L3C 90756000
.IPRTYRG STH   &PRTY(1),42(0,14)        INSERT PRTY INTO PLIST     @L2A 90790000
.********************************************************************** 90824000
.*       IF THIS IS A WTOR AND THE REPLY CONSOLE NAME/ID ADDRESS   @L3A 90858000
.*       IS SPECIFIED, (FIELD OR REGISTER) INSERT IT INTO          @L3A 90892000
.*       THE PARAMETER LIST                                        @L3A 90926000
.********************************************************************** 90960000
.IRCON   AIF   (NOT &IHBWTOR OR '&WTORCN' EQ '').ICONS INVOKED BY      X90994000
                                          WTOR AND DATA SPECIFIED       91028000
         AIF   (&RCNREG).IRCONRG        BRANCH IF IN A REG         @L3C 91062000
         LA    15,&WTORCN               LOAD REPLY CONSOLE NAME/ID     X91096000
                                        ADDRESS                    @L3A 91130000
         ST    15,92(0,14)              INSERT REPLY CONSOLE NAME/ID   X91164000
                                        ADDRESS IN PLIST           @L3A 91198000
         AGO   .ICONS                   GO CHECK CONSID            @L3A 91232000
.IRCONRG ST    &WTORCN,92(0,14)         INSERT REPLY CONSOLE NAME/ID   X91266000
                                        ADDRESS IN PLIST           @L3A 91300000
.********************************************************************** 91334000
.*       IF THE CONSID KEYWORD IS SPECIFIED, (FIELD OR REGISTER)   @L2A 91368000
.*       INSERT IT INTO THE PARAMETER LIST                         @L2A 91402000
.********************************************************************** 91436000
.ICONS   AIF   ('&CONSID' EQ '¬' OR                                    X91470000
                '&CONSID' EQ '').ICNNAM   VERIFY DATA SPECIFIED    @L3C 91504000
         AIF   ('&CONSID'(1,1) EQ '(').ICONSRG  BRANCH IF IN REG   @L2A 91538000
         L     15,&CONSID(1)            LOAD CONSID                @L2A 91572000
         ST    15,72(0,14)              INSERT CONSID INTO PLIST   @L2A 91606000
         AGO   .ICNNAM                  GO CHECK CONSNAME          @L3C 91640000
.ICONSRG ST    &CONSID(1),72(0,14)      INSERT CONSID INTO PLIST   @L2A 91674000
.********************************************************************** 91708000
.*       IF THE CONSNAME KEYWORD IS SPECIFIED, (FIELD OR REGISTER) @L3A 91742000
.*       INSERT IT INTO THE PARAMETER LIST                         @L3A 91776000
.********************************************************************** 91810000
.ICNNAM  AIF   ('&CONSNAME' EQ '¬' OR                                  X91844000
                '&CONSNAME' EQ '').IJOBID VERIFY DATA SPECIFIED    @L3A 91878000
         AIF   ('&CONSNAME'(1,1) EQ '(').ICNNARG BRANCH IF IN REG  @L3A 91912000
         MVC   84(8,14),&CONSNAME(1)    INSERT CONSNAME IN REG     @L3A 91946000
         AGO   .IJOBID                  GO CHECK JOBID             @L3A 91980000
.ICNNARG MVC   84(8,14),0(&CONSNAME(1)) INSERT CONSNAME INTO PLIST @L3A 92014000
.********************************************************************** 92048000
.*       IF THE JOBID KEYWORD IS SPECIFIED, (FIELD OR REGISTER)    @L2A 92082000
.*       INSERT IT INTO THE PARAMETER LIST                         @L2A 92116000
.********************************************************************** 92150000
.IJOBID  AIF   ('&JOBID' EQ '¬' OR                                     X92184000
                '&JOBID' EQ '').IJOBN    VERIFY DATA SPECIFIED     @L2A 92218000
         AIF   ('&JOBID'(1,1) EQ '(').IJOBIRG  BRANCH IF IN REG    @L2A 92252000
         MVC   44(8,14),&JOBID(1)       INSERT JOBID INTO PLIST    @L2A 92286000
         AGO   .IJOBN                   GO CHECK JOBNAME           @L2A 92320000
.IJOBIRG MVC   44(8,14),0(&JOBID(1))    INSERT JOBID INTO PLIST    @L2A 92354000
.********************************************************************** 92388000
.*       IF THE JOBNAME KEYWORD IS SPECIFIED, (FIELD OR REGISTER)  @L2A 92422000
.*       INSERT IT INTO THE PARAMETER LIST                         @L2A 92456000
.********************************************************************** 92490000
.IJOBN   AIF   ('&JOBNAME' EQ '¬' OR                                   X92524000
                '&JOBNAME' EQ '').IKEY    VERIFY DATA SPECIFIED    @L2A 92558000
         AIF   ('&JOBNAME'(1,1) EQ '(').IJOBNRG  BRANCH IF IN REG  @L2A 92592000
         MVC   52(8,14),&JOBNAME(1)     INSERT JOBNAME INTO PLIST  @L2A 92626000
         AGO   .IKEY                    GO CHECK KEY               @L2A 92660000
.IJOBNRG MVC   52(8,14),0(&JOBNAME(1))  INSERT JOBNAME INTO PLIST  @L2A 92694000
.********************************************************************** 92728000
.*       IF THE KEY KEYWORD IS SPECIFIED, (FIELD OR REGISTER)      @L2A 92762000
.*       INSERT IT INTO THE PARAMETER LIST                         @L2A 92796000
.********************************************************************** 92830000
.IKEY    AIF   ('&KEY' EQ '¬' OR                                       X92864000
                '&KEY' EQ '').ITOKEN    VERIFY DATA SPECIFIED      @L2A 92898000
         AIF   ('&KEY'(1,1) EQ '(').IKEYRG KEY IN REG?             @L2A 92932000
         MVC   60(8,14),&KEY(1)         INSERT KEY INTO PLIST      @L2A 92966000
         AGO   .ITOKEN                  GO ISSUE SVC               @L2A 93000000
.IKEYRG  MVC   60(8,14),0(&KEY(1))      INSERT KEY INTO PLIST      @L2A 93034000
.********************************************************************** 93068000
.*       IF THE TOKEN KEYWORD IS SPECIFIED, (FIELD OR REGISTER)    @L2A 93102000
.*       INSERT IT INTO THE PARAMETER LIST                         @L2A 93136000
.********************************************************************** 93170000
.ITOKEN  AIF   ('&TOKEN' EQ '¬' OR                                     X93204000
                '&TOKEN' EQ '').ISYSN   VERIFY DATA SPECIFIED      @L2A 93238000
         AIF   ('&TOKEN'(1,1) EQ '(').ITOKNRG BRANCH IF IN REG     @L2A 93272000
         L     15,&TOKEN(1)             LOAD TOKEN                 @L2A 93306000
         ST    15,68(0,14)              INSERT TOKEN INTO PLIST    @L2A 93340000
         AGO   .ISYSN                   GO CHECK SYSNAME           @L2A 93374000
.ITOKNRG ST    &TOKEN(1),68(0,14)       INSERT TOKEN INTO PLIST    @L2A 93408000
.********************************************************************** 93442000
.*       IF THE SYSNAME KEYWORD IS SPECIFIED, (FIELD OR REGISTER)  @L2A 93476000
.*       INSERT IT INTO THE PARAMETER LIST                         @L2A 93510000
.********************************************************************** 93544000
.ISYSN   AIF   ('&SYSNAME' EQ '¬' OR                                   X93578000
                '&SYSNAME' EQ '').ICONN   VERIFY DATA SPECIFIED    @01C 93612000
         AIF   ('&SYSNAME'(1,1) EQ '(').ISYSNRG BRANCH IF IN REG   @L2A 93646000
         MVC   76(8,14),&SYSNAME(1)     INSERT SYSNAME INTO PLIST  @L2A 93680000
         AGO   .ICONN                   GO CHECK CONNECT           @01C 93714000
.ISYSNRG MVC   76(8,14),0(&SYSNAME(1))  INSERT SYSNAME INTO PLIST  @L2A 93748000
.********************************************************************** 93782000
.*       IF THE CONNECT KEYWORD IS SPECIFIED, (FIELD OR REGISTER)  @L2A 93816000
.*       INSERT IT INTO THE PARAMETER LIST                         @L2A 93850000
.********************************************************************** 93884000
.ICONN   AIF   ('&CONNECT' EQ '¬' OR                                   X93918000
                '&CONNECT' EQ '').ISNCHY   VERIFY DATA SPECIFIED   @L6C 93952000
         AIF   ('&CONNECT'(1,1) EQ '(').ICONNRG BRANCH IF IN REG   @L2A 93986000
         L     15,&CONNECT(1)           LOAD CONNECT ID            @L2A 94020000
         ST    15,16(0,14)              INSERT CONNECT INTO PLIST  @L2A 94054000
         AGO   .ISNCHY                  GO CHECK SYNCH             @L6C 94088000
.ICONNRG ST    &CONNECT(1),16(0,14)     INSERT CONNECT INTO PLIST  @L2A 94122000
.********************************************************************** 94156000
.*       IF THE SYNCH=YES WAS SPECIFIED SET THE BIT IN THE         @L6A 94190000
.*       EXTENDED MCS FLAG FIELD                                   @L6A 94224000
.********************************************************************** 94258000
.ISNCHY  ANOP                                                      @L6A 94292000
&SYNN    SETB  ('&SYNCH(1)' EQ 'NO')    SYNCH MUST BE UPDATED      @PAC 94326000
&EMCS(14) SETB  ('&SYNCH(1)' EQ 'YES')  INDICATE IN EXT MCSFLAGS   @PAC 94360000
.********************************************************************** 94394000
.*       IF THE WAIT STATE PARAMETER LIST ADDRESS WAS SPECIFIED    @L6A 94428000
.*       AS A REGISTER, PUT IT IN THE PARAMETER LIST               @PBC 94462000
.*       IF IT WAS NOT A REGISTER, IT IS ALREADY INITIALIZED.      @PBA 94496000
.********************************************************************** 94530000
.IWSPRM  ANOP                                                      @L6A 94564000
         AIF   ('&WSPARM' EQ '¬' OR '&WSPARM(1)' EQ '').ICART      @P9C 94598000
         AIF   ('&WSPARM(1)' EQ '0').ICART                         @PBC 94632000
         AIF   ('&WSPARM'(1,1) NE '(').ICART                       @PBC 94666000
.IWSPMRG ANOP                           REGISTER SPECIFIED         @L6A 94700000
         ST    &WSPARM(1),100(0,14)     INSERT WSPARM  INTO PLIST  @L6A 94734000
.********************************************************************** 94768000
.*       IF THE CART   KEYWORD IS SPECIFIED, (FIELD OR REGISTER)   @L4A 94802000
.*       INSERT IT INTO THE PARAMETER LIST                         @L4A 94836000
.********************************************************************** 94870000
.ICART   AIF   ('&CART' EQ '¬' OR                                      X94904000
                '&CART' EQ '').ITEXT    BRANCH IF NO CART          @L5A 94938000
         AIF   ('&CART'(1,1) EQ '(').ICARTRG  BRANCH IF IN REG     @L4A 94972000
         LA    15,&CART(1)              LOAD CART ADDRESS          @L4A 95006000
         ST    15,96(0,14)              INSERT CART ADR INTO PLIST @L4A 95040000
         AGO   .ITEXT                   GO CHECK FOR TEXT KWD      @L5A 95074000
.ICARTRG ST    &CART(1),96(0,14)        INSERT CART ADR INTO PLIST @L4A 95108000
.********************************************************************** 95142000
.*       IF THIS IS A MULTILINE WTO, CHECK TO SEE IF THE TEXT      @L5A 95176000
.*       KEYWORD WAS SPECIFIED. IF SO, STORE THE ADDRESS OF EACH   @L5A 95210000
.*       LINE OF TEXT IN THE PARAMETER LIST.                       @L5A 95244000
.********************************************************************** 95278000
.ITEXT   ANOP                           CHECK FOR TEXT ON MLWTO    @L5A 95312000
         AIF   ('&TEXT' EQ '¬' OR NOT &MLW).SKIPMOD  SKIP IF NOT A     X95346000
                                        MULTILINE W/TEXT KEYWORD   @L5A 95380000
.********************************************************************** 95414000
.*       MOVE THE TEXT ADDRESSES INTO THE PARAMETER LIST           @L5A 95448000
.********************************************************************** 95482000
&MLTTIND SETA  2                        LINE TYPE INDEX            @L5A 95516000
&MLINDX  SETA  4                        OFFSET TO TEXT ADDRESS     @L5A 95550000
&H       SETA  2                        PROCESSED MAJOR            @L5A 95584000
         AIF   (&H GT &LLCNT).SKIPMOD   ISSUE SVC WHEN COMPLETE    @L5A 95618000
         XR    15,15                    CLEAR INDEX FOR INSERTS    @L5A 95652000
         IC    15,3(14)                 SET LENGTH OF WPX          @L5A 95686000
         LA    14,4(15,14)              POINT TO MULTILINE ENTRIES @L5A 95720000
.IMLW00  ANOP                           BEGIN LOOP FOR MINORS      @L5A 95754000
         AIF   (&H GT &LLCNT).SKIPMOD   ISSUE SVC WHEN COMPLETE    @L5A 95788000
&VALH    SETC  '&TEXT(&H)'              EXTRACT CURRENT VALUE      @L5A 95822000
&VALH1   SETC  '&TEXT(&H,1)'            EXTRACT TEXT ADDRESS       @L5A 95856000
         AIF   ('&VALH1'  EQ     '').IMLW02 BRANCH IF NULL LINE    @L5A 95890000
         AIF   ('&VALH1'(1,1) EQ '(').IMLW01 BRANCH IF SPECIFIED       X95924000
                                        IN REGISTER                @L5A 95958000
         LA    15,&VALH1                LOAD ADDR OF TEXT FIELD    @P8C 95992000
         ST    15,&MLINDX.(14)          STORE TEXT ADDR INTO PLIST @P8A 96026000
         AGO   .IMLW02                  CONTINUE PROCESSING        @L5A 96060000
.IMLW01  ANOP                           TEXT IN REGISTER           @L5A 96094000
&K       SETA  K'&VALH1                                                 96128000
&VALH1   SETC  '&VALH1'(2,&K-2)                                         96162000
         ST    &VALH1,&MLINDX.(14)      STORE TEXT ADDRESS         @L5A 96196000
.IMLW02  ANOP                           UPDATE POINTERS            @L5A 96230000
&H       SETA  &H+1                     UPDATE NUMBER OF LINES     @L5A 96264000
&MLINDX  SETA  &MLINDX+8                INDEX TO NEXT PLIST ENTRY  @L5A 96298000
         AGO   .IMLW00                  CONTINUE                   @L5A 96332000
.********************************************************************** 96366000
.*       PARAMETER LIST GENERATION AND INSERTS ARE COMPLETE.       @L2A 96400000
.*       IF ANY OTHER ERRORS WERE FOUND DURING PROCESSING,         @L2A 96434000
.*       ISSUE AN ERROR MESSAGE VIA IHBERMAC.                      @L2A 96468000
.********************************************************************** 96502000
.SKIPMOD ANOP                                                      @L2A 96536000
         AIF   ('&MF' EQ 'L').END   IF ENTERED DUE TO FILLING IN TEXT  X96570000
                                    ADDRESSES ON LIST FORM, BRANCH @L5A 96604000
         AIF   (&E6 OR &E3 OR &IHBWTL).END                       X02007 96638000
.EXECUTE ANOP                                                      @L6C 96672000
         AIF   ('&MF' EQ 'L').END       LIST FORM DOES NOT ISSUE SVC OR+96706000
                                        BRANCH ENTRY WTO           @L6C 96740000
         AIF   ('&LINKAGE(1)' EQ 'BRANCH').WTOBALR                 @L6A 96774000
         SIMSVC .                                              @D61CDFG 96791061
         SVC   35                       ISSUE SVC 35               @L6A 96808000
         AGO   .END                     BRANCH TO EXIT             @L6A 96842000
.WTOBALR ANOP                           BRANCH ENTRY WTO FIND ADDR @L6A 96876000
         L     15,16(0,0)               ADDRESS OF CVT             @L6A 96910000
         L     15,200(0,15)             ADDRESS OF SCVT            @L6A 96944000
         L     15,20(0,15)              WTO BRANCH ENTRY POINT     @L6A 96978000
         BALR  14,15                    ISSUE BRANCH ENTRY WTO     @L6A 97012000
         AGO   .END                     BRANCH TO EXIT             @L6A 97046000
.********************************************************************** 97080000
.*                                                                      97114000
.*  BEGIN THE LIST OF SEVERITY 12 ERROR MESSAGES                        97148000
.*                                                                      97182000
.********************************************************************** 97216000
.ERROR1  ANOP              INVALID LINKAGE VALUE SPECIFIED         @L6A 97250000
         MNOTE 12,'NO TEXT GENERATED.  SPECIFIED LINKAGE VALUE'    @L6A 97284000
         MNOTE '       WAS NOT SVC OR BRANCH.'                     @L6A 97318000
&WTOERR  SETB  1                        A SEVERE MNOTE WAS ISSUED  @L6A 97352000
         MEXIT                                                     @L6A 97386000
.ERROR2  ANOP              NUMBER OF LINES OF TEXT EXCEEDS MAXIMUM @L6A 97420000
         MNOTE 12,'TOO MANY LINES OF TEXT.  MAX=&MAXLINS WHEN'     @L6A 97454000
         MNOTE '        SYNCH=YES.'                                @L6A 97488000
&WTOERR  SETB  1                        A SEVERE MNOTE WAS ISSUED  @L6A 97522000
         MEXIT                                                     @L6A 97556000
.ERROR3  ANOP              INVALID SYNCH VALUE SPECIFIED           @L6A 97590000
         MNOTE 12,'NO TEXT GENERATED.  SPECIFIED SYNCH VALUE'      @L6A 97624000
         MNOTE '      WAS NOT YES OR NO.'                          @L6A 97658000
&WTOERR  SETB  1                        A SEVERE MNOTE WAS ISSUED  @L6A 97692000
         MEXIT                                                     @L6A 97726000
.ERROR4  ANOP              REQUIRED KEYWORD VALUE MISSING          @L6A 97760000
         MNOTE 12,'NO TEXT GENERATED.  ''SYNCH=YES'' REQUIRES'     @L6A 97794000
         MNOTE '       ''LINKAGE=BRANCH''.'                        @L6A 97828000
&WTOERR  SETB  1                        A SEVERE MNOTE WAS ISSUED  @L6A 97862000
         MEXIT                                                     @L6A 97896000
.ERROR5  ANOP              MUTUAL EXCLUSIVITY ERROR                @L6A 97930000
         MNOTE 12,'NO TEXT GENERATED.  ''SYNCH=YES'' IS MUTUALLY'  @L6A 97964000
         MNOTE '   EXCLUSIVE WITH THE CONNECT AND AREAID KEYWORDS.'    +97998000
                                                                   @L6A 98032000
&WTOERR  SETB  1                        A SEVERE MNOTE WAS ISSUED  @L6A 98066000
         MEXIT                                                     @L6A 98100000
.ERROR6  ANOP              MUTUAL EXCLUSIVITY ERROR                @L6A 98134000
         MNOTE 12,'NO TEXT GENERATED.  ''SYNCH=YES'' IS MUTUALLY'  @L6A 98168000
         MNOTE '    EXCLUSIVE WITH ''MCSFLAG=HDRCPY''.'            @L6A 98202000
&WTOERR  SETB  1                        A SEVERE MNOTE WAS ISSUED  @L6A 98236000
         MEXIT                                                     @L6A 98270000
.ERROR7  ANOP              INVALID WSPARM VALUE SPECIFIED          @L6A 98304000
         MNOTE 12,'NO TEXT GENERATED.  SPECIFIED WSPARM VALUE WAS' @L6A 98338000
         MNOTE '   NOT 0, A REGISTER, OR AN ADDRESS.'              @L6A 98372000
&WTOERR  SETB  1                        A SEVERE MNOTE WAS ISSUED  @L6A 98406000
         MEXIT                                                     @L6A 98440000
.ERROR8  ANOP              REQUIRED KEYWORD VALUE MISSING          @L6A 98474000
         MNOTE 12,'NO TEXT GENERATED.  ''WSPARM ¬= 0'' REQUIRES'   @L6A 98508000
         MNOTE '  ''LINKAGE=BRANCH'' AND ''SYNCH=YES''.'           @L6A 98542000
&WTOERR  SETB  1                        A SEVERE MNOTE WAS ISSUED  @L6A 98576000
         MEXIT                                                     @L6A 98610000
.NOTXT   ANOP                                                    X02007 98644000
         MNOTE 12,'NUMBER OF LINES REQUESTED IS 0 OR GREATER THAN 255 -X98678000
                GENERATION TERMINATED'                         @G64DPSS 98712000
&WTOERR  SETB  1                        A SEVERE MNOTE WAS ISSUED  @L2A 98746000
.END     MEND                                                           98780000
**/                                                                     98814000
*  WTO: MACRO KEYS(                                                     98848000
*                   ROUTCDE,      /*ROUTING CODES FOR MESSAGE        */ 98882000
*                   DESC,         /*MESSAGE DESCRIPTOR CODES         */ 98916000
*                   MSGTYP,       /*ROUTE TO MESSAGE CONSOLES        */ 98950000
*                   MCSFLAG,      /*MESSAGE ATTRIBUTES               */ 98984000
*                   AREAID,       /*DISPLAY AREA                     */ 99018000
*                   WQEBLK,       /*ADDRESS OF WQE               @L2A*/ 99052000
*                   CONNECT,      /*CONNECT ID FOR MESSAGE       @L2A*/ 99086000
*                   CONSID,       /*CONSOLE ID FOR MESSAGE       @L2A*/ 99120000
*                   CONSNAME,     /*CONSOLE NAME FOR MESSAGE     @L3A*/ 99154000
*                   RPLYISUR,     /*CONSOLE NAME/ID FOR MESSAGE  @L3A*/ 99188000
*                   JOBID,        /*MESSAGE JOB IDENTIFIER       @L2A*/ 99222000
*                   JOBNAME,      /*MESSAGE JOB NAME             @L2A*/ 99256000
*                   SUBSMOD,      /*MODIFICATION CHARACTERISTICS @L2A*/ 99290000
*                   PRTY,         /*MESSAGE PRIORITY             @L2A*/ 99324000
*                   KEY,          /*KEY FOR MESSAGE              @L2A*/ 99358000
*                   TOKEN,        /*TOKEN FOR MESSAGE            @L2A*/ 99392000
*                   SYSNAME,      /*SYSTEM NAME                  @L2A*/ 99426000
*                   RTCD,         /*SVC RETURN CODE                  */ 99460000
*                   CART,         /*COMMAND AND RESPONSE TOKEN   @L4A*/ 99494000
*                   TEXT,         /*ADDRESS OF MESSAGE TEXT      @L5A*/ 99528000
*                   LINKAGE,      /*HOW CONTROL IS PASSED        @L6A*/ 99562000
*                   SYNCH,        /*PROCESS SYNCHRONOUSLY        @L6A*/ 99596000
*                   WSPARM,       /*ASSOCIATED WAIT STATE        @L6A*/ 99630000
*                   CPFLG,        /*CONTROL PROGRAM ONLY FLAGS   @D3A*/ 99664000
*                   MF            /*LIST FORMAT                      */ 99698000
*                          );                                           99732000
*    ANS('?'||MACLABEL||'WTOP '||MACLIST||MACKEYS||';');                99766000
*%END WTO;                                                              99800000
