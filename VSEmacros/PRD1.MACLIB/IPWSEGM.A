         MACRO                                                          00001001
&NAM     IPWSEGM &DEVADDR=,&KEEP=,&JECL=,&JECLN=,&MFG=                  00002001
.*                                                                      00003001
.* IBM DISK OPERATING SYSTEM                                            00004001
.* VSE/POWER - 5686-CF7-03                                              00005002
.* IPWSEGM MACRO INSTRUCTION - ENHANCED SEGMENTATION MACRO              00006001
.* ADDITIONAL QUEUE ENTRY ATTRIBUTES BY VERSION 'VS20'         @DY46107 00006101
.*                                                                      00006201
.*       THIS MACRO PROVIDES A MULTI-THREADED INTERFACE BETWEEN         00006301
.*       VSE/POWER SPOOLED APPLICATION PROGRAMS AND VSE/POWER,          00006401
.*       TO LET A 'PROGRAM DRIVEN' SEGMENTATION REQUEST BECOME          00006501
.*       EFFECTIVE. FOR A DETAILED DESCRIPTION OF THE MACRO             00006601
.*       OPERANDS REFER TO THE VSE/POWER APPLICATION PROGRAMMING        00006701
.*       MANUAL.                                                        00006801
.*       MACRO IPWSEGM ACTS ACCORDING TO THE FOLLOWING STEPS:           00006901
.*                                                                      00007001
.*       1) VERIFY MANDATORY AND OPTIONAL OPERANDS FOR CORRECT          00008001
.*          SPECIFICATION. IN CASE OF FAILURE EXIT MACRO BY MNOTE.      00009001
.*                                                                      00010001
.*       2) CHECK PASSED OPERAND VALUES WHENEVER POSSIBLE AT            00011001
.*          ASSEMBLY TIME. IN CASE OF FAILURE EXIT MACRO BY MNOTE.      00012001
.*                                                                      00013001
.*       3) GENERATE AN INTERMEDIATE LOCAL AREA AND FEED IT WITH        00014001
.*          MACRO OPERAND VALUES.                                       00015001
.*                                                                      00016001
.*       4) GENERATE A PARAMETER AREA WITHIN THE MACRO EXPANSION,       00017001
.*          UNLESS A DYNAMIC PARAMETER AREA ADDRESS IS PASSED BY        00018001
.*          THE 'MFG=' OPERAND.                                         00019001
.*                                                                      00020001
.*       5) GENERATE CODE TO ADDRESS THE                                00021001
.*           - INTERMEDIATE LOCAL AREA BY REGISTER 15, AND THE          00022001
.*           - PARAMETER AREA BY BY REGISTER 1                          00023001
.*          AND TO PASS MACRO OPERAND VALUES FROM THE INTERMEDIATE      00024001
.*          TO THE PARAMETER AREA AT EXECUTION TIME.                    00025001
.*                                                                      00026001
.*       6) GENERATE CODE TO ENTER THE IPWSEGM INTERFACE ROUTINE        00027001
.*          'SEG00' OF THE VSE/POWER IPW$$NU MODULE, WHICH RESIDES      00028001
.*          IN THE SYSTEM GETVIS AREA. LET 'SEG00' BUILD                00029001
.*          A 'NOOP' I/O REQUEST WITHIN THE PARAMETER AREA TO           00030001
.*          PASS A * $$ LST/PUN JECL STATEMENT TO A CORRESPONDING       00031001
.*          VSE/POWER EXECUTION WRITER TASK.                            00032001
.*                                                                      00033001
.*       7) GENERATE CODE TO ISSUE THE PREPARED 'NOOP' I/O REQUEST      00034001
.*          DIRECTLY FROM THE MACRO EXPANSION WITHIN THE USER           00035001
.*          PARTITION.                                                  00036001
.*                                                                      00037001
.*       8) GENERATE CODE TO MAKE THE MACRO RETURN AND FEEDBACK         00038001
.*          CODE AVAILABLE IN REGISTER 15 AND TO OFFER ACCESS TO        00039001
.*          ATTRIBUTES OF THE CREATED QUEUE ENTRY VIA REGISTER 1.       00040001
.*                                                                      00041001
.* GLOBAL DEFINITIONS                                                   00042001
.*                                                                      00043001
         LCLA  &CLASS              LOGICAL UNIT CLASS                   00044001
         LCLA  &NUM                LOGICAL UNIT NUMBER                  00045001
         LCLA  &LEN                LENGTH OF JECL AREA                  00046001
         LCLC  &DEV                XXX SPECIFICATION OF SYSXXX          00047001
         LCLC  &REG1               REGISTER POINTING TO DEVADDR         00048001
         LCLC  &REG2               REGISTER POINTING TO JECL            00049001
         LCLC  &REG3               REGISTER HOLDING JECLN               00050001
         LCLC  &REG4               REGISTER POINTING TO MFG AREA        00051001
         LCLB  &LENREG             IDENTIFY LENGTH PASSED BY REGISTER   00052001
         LCLB  &KEEPY              IDENTIFY KEEP=YES SPECIFIED          00053001
         LCLB  &JECLY              IDENTIFY JECL= SPECIFIED             00054001
.*                                                                      00055001
         AGO   .ZZZ                                                     00056001
*        LICENSED MATERIALS - PROPERTY OF IBM                           00057001
*        THIS MACRO IS "RESTRICTED MATERIALS OF IBM"                    00058001
*        5686-CF7 (C) COPYRIGHT IBM CORP. 2004                          00059002
*        SEE COPYRIGHT INSTRUCTIONS                                     00060001
.ZZZ     ANOP                                                           00061001
.* ****************************************************************     00062001
.*       1) VERIFY MANDATORY AND OPTIONAL OPERANDS FOR CORRECT    *     00063001
.*          SPECIFICATION. IN CASE OF FAILURE EXIT MACRO BY MNOTE.*     00064001
.*       2) CHECK PASSED OPERAND VALUES WHENEVER POSSIBLE AT      *     00065001
.*          ASSEMBLY TIME. IN CASE OF FAILURE EXIT MACRO BY MNOTE.*     00066001
.* ****************************************************************     00067001
.*                                                                      00068001
.*                                                                      00069001
.* CHECK MANDATORY 'DEVADDR' OPERAND                                    00070001
.*                                                                      00071001
.*                                                                      00072001
         AIF   (N'&DEVADDR GT 0).SM02  ACT FOR OPERAND SPECIFIED        00073001
.*                                                                      00074001
.*                                                                      00075001
.SM01    ANOP                                                           00076001
         MNOTE 8,'DEVADDR=''&DEVADDR'' NOT SPECIFIED OR EMPTY SPECIFICA/00077001
               TION, GENERATION TERMINATED'                             00078001
         SPACE                                                          00079001
         MEXIT                                                          00080001
.*                                                                      00081001
.* HANDLE 'DEVADDR=(REG1)'                                              00082001
.*                                                                      00083001
.SM02    ANOP                                                           00084001
&NAM     DS    0H                                                       00085001
         AIF   ('&DEVADDR'(1,1) NE '(').SM03  HANDLE NO REGISTER NOTAT. 00086001
         AIF   ('&DEVADDR'(2,1) EQ ')').SM01  EXIT FOR EMPTY REGISTER   00087001
         AIF   (N'&DEVADDR GT 1).SM11         EXIT FOR REGISTER SUBLIST 00088001
&REG1    SETC  '&DEVADDR'(2,K'&DEVADDR-2)  GET DESIGNATED REGISTER      00089001
         AGO   .SM14                       GO FOR KEEP OPERAND          00090001
.*                                                                      00091001
.* HANDLE 'DEVADDR=SYSXXX'                                              00092001
.*                                                                      00093001
.SM03    ANOP                                                           00094001
         AIF   (K'&DEVADDR NE 6).SM08  EXIT IF NOT SIX CHARACTERS       00095001
         AIF   ('&DEVADDR'(1,3) NE 'SYS').SM09  EXIT IF NOT 'SYS...'    00096001
&DEV     SETC  '&DEVADDR'(4,3)     OBTAIN XXX OUT OF SYSXXX             00097001
         AIF   ('&DEV' LT '000' OR '&DEV' GT '255').SM04 GO NOT NUMERIC 00098001
.*                                                                      00099001
.* HANDLE DEVADDR=SYSXXX, WHERE XXX IS NUMERIC                          00100001
.*        TRANSFORM SYSXXX TO CCB FORMAT: '1'|YY (BINARY)               00101001
.*                                                                      00102001
         AIF   ('&DEV'(2,1) LT '0' OR '&DEV'(2,1) GT '9').SM10          00103001
         AIF   ('&DEV'(3,1) LT '0' OR '&DEV'(3,1) GT '9').SM10          00104001
&CLASS   SETA  1                   SET PROGRAMMER UNIT (CCB FORMAT)     00105001
&NUM     SETA  &DEV                TAKE OVER BINARY UNIT NUMBER         00106001
         AGO   .SM14               GO CHECK KEEP OPERAND                00107001
.*                                                                      00108001
.* HANDLE DEVADDR=SYSXXX, WHERE XXX IS NOT NUMERIC 0-255                00109001
.*        TRANSFORM SYSXXX TO CCB FORMAT: '0'|00-03                     00110001
.*                                                                      00111001
.SM04    ANOP                                                           00112001
&CLASS   SETA  0                   SET SYSTEM UNIT (CCB FORAMT)         00113001
&NUM     SETA  2                   START WITH UNIT NUMBER OF 'PCH'      00114001
.SM06    ANOP                      CHECK VALID SYSTEM LOGICAL UNIT      00115001
         AIF   ('&DEV' EQ 'XXXXXXPCHLSTLST'(3*&NUM+1,3)).SM14           00116001
.*                                 LEAVE WITH &NUM = LOOP COUNT         00117001
.*                                 CORRESPONDING TO 'UNIT NUMBER'       00118001
&NUM     SETA  &NUM+1              INCREMENT UNIT NUMBER (CCB FORMAT)   00119001
         AIF   (&NUM LE 4).SM06    LOOP TILL ALL CHECKED                00120001
.*                                                                      00121001
         MNOTE 8,'DEVADDR=''&DEVADDR'' > 255 OR ALPHAMERIC OR ALPHABETI/00122001
               C, BUT NOT PCH|LST, GENERATION TERMINATED'               00123001
         SPACE                                                          00124001
         MEXIT                                                          00125001
.*                                                                      00126001
.SM08    ANOP                                                           00127001
         MNOTE 8,'DEVADDR=''&DEVADDR'' NOT SIX CHARACTERS, GENERATION T/00128001
               ERMINATED'                                               00129001
         SPACE                                                          00130001
         MEXIT                                                          00131001
.*                                                                      00132001
.SM09    ANOP                                                           00133001
         MNOTE 8,'DEVADDR=''&DEVADDR'' NOT STARTING WITH SYS, GENERATIO/00134001
               N TERMINATED'                                            00135001
         SPACE                                                          00136001
         MEXIT                                                          00137001
.*                                                                      00138001
.SM10    ANOP                                                           00139001
         MNOTE 8,'DEVADDR=''&DEVADDR'' NOT NUMERIC 000-255, GENERATION /00140001
               TERMINATED'                                              00141001
         SPACE                                                          00142001
         MEXIT                                                          00143001
.*                                                                      00144001
.SM11    ANOP                                                           00145001
         MNOTE 8,'DEVADDR=''&DEVADDR'' WITH INVALID REGISTER NOTATION, /00146001
               GENERATION TERMINATED'                                   00147001
         SPACE                                                          00148001
         MEXIT                                                          00149001
.*                                                                      00150001
.*                                                                      00151001
.* CHECK OPTIONAL 'KEEP' OPERAND                                        00152001
.*                                                                      00153001
.*                                                                      00154001
.SM14    ANOP                                                           00155001
         AIF   (N'&KEEP EQ 0).SM20    GO FOR KEEP OPERAND OMITTED       00156001
         AIF   ('&KEEP' EQ 'YES').SM18   GO FOR 'YES' SPECIFIED         00157001
         AIF   ('&KEEP' EQ 'NO').SM20    GO FOR 'NO' SPECIFIED          00158001
.*                                                                      00159001
         MNOTE 8,'KEEP=''&KEEP'' NEITHER YES NOR NO, GENERATION TERMINA/00160001
               TED'                                                     00161001
         SPACE                                                          00162001
         MEXIT                                                          00163001
.*                                                                      00164001
.SM18    ANOP                                                           00165001
&KEEPY   SETB  1                   SET KEEP=YES SPECIFIED               00166001
.*                                                                      00167001
.*                                                                      00168001
.* CHECK OPTIONAL 'JECL' OPERAND                                        00169001
.*                                                                      00170001
.*                                                                      00171001
.SM20    ANOP                                                           00172001
         AIF   (N'&JECL EQ 0).SM24  GO FOR JECL OPERAND OMITTED         00173001
&JECLY   SETB  1                    INDICATE 'JECL=' OPERAND SPECIFIED  00174001
         AIF   ('&JECL'(1,1) NE '(').SM24  HANDLE NO REGISTER NOTATION  00175001
         AIF   ('&JECL'(2,1) EQ ')').SM21  EXIT FOR EMPTY REGISTER      00176001
         AIF   (N'&JECL GT 1).SM21         EXIT FOR REGISTER SUBLIST    00177001
&REG2    SETC  '&JECL'(2,K'&JECL-2)  GET DESIGNATED REGISTER            00178001
         AGO   .SM24                                                    00179001
.*                                                                      00180001
.SM21    ANOP                                                           00181001
         MNOTE 8,'JECL=''&JECL'' EMPTY SPECIFICATION OR NO REGISTER NOT/00182001
               ATION, GENERATION TERMINATED'                            00183001
         SPACE                                                          00184001
         MEXIT                                                          00185001
.*                                                                      00186001
.*                                                                      00187001
.* CHECK OPTIONAL 'JECLN' OPERAND                                       00188001
.* IN COMBINATION WITH 'JECL' OPERAND.                                  00189001
.* HANDLE 'JECLN=', IF 'JECL=' NOT SPECIFIED                            00190001
.*                                                                      00191001
.*                                                                      00192001
.SM24    ANOP                                                           00193001
         AIF   (&JECLY).SM28       CONTINUE FOR 'JECL=' SPECIFIED       00194001
         AIF   (N'&JECLN EQ 0).SM26  BOTH JECLN AND JECL NOT SPECIF.    00195001
.*                                                                      00196001
         MNOTE 8,'JECLN ONLY VALID WITH JECL, GENERATION TERMINATED'    00197001
         SPACE                                                          00198001
         MEXIT                                                          00199001
.*                                                                      00200001
.SM26    ANOP                      LEAVE DEFAULT VALUE FOR '&LEN'       00201001
         AGO   .SM40               GO AND CONTINUE                      00202001
.*                                                                      00203001
.* HANDLE 'JECLN=' WHILE 'JECL=' SPECIFIED                              00204001
.*                                                                      00205001
.SM28    ANOP                                                           00206001
         AIF   (N'&JECLN GT 0).SM30  GO IF JECLN SPECIFIED              00207001
&LEN     SETA  71                  PROVIDE DEFAULT JECL LENGTH          00208001
         AGO   .SM40               GO AND CONTINUE                      00209001
.*                                                                      00210001
.SM30    ANOP                      PROCESS JECLN REGISTER NOTATION      00211001
         AIF   ('&JECLN'(1,1) NE '(').SM32  GO FOR NO REGISTER NOTAT.   00212001
         AIF   ('&JECLN'(2,1) EQ ')').SM31  EXIT FOR EMPTY REGISTER     00213001
         AIF   (N'&JECLN GT 1).SM31        EXIT FOR REGISTER SUBLIST    00214001
&REG3    SETC  '&JECLN'(2,K'&JECLN-2)  GET DESIGNATED REGISTER          00215001
&LENREG  SETB  1                   INDICATE 'JECLN'=' IN REG. NOTATION  00216001
         AGO   .SM40               GO AND CONTINUE                      00217001
.*                                                                      00218001
.SM31    ANOP                                                           00219001
         MNOTE 8,'JECLN=''&JECLN'' EMPTY SPECIFICATION OR NO REGISTER N/00220001
               OTATION, GENERATION TERMINATED'                          00221001
         SPACE                                                          00222001
         MEXIT                                                          00223001
.*                                                                      00224001
.SM32    ANOP                      PROCESS JECLN SELF DEFINING TERM     00225001
         AIF   (T'&JECLN NE 'N').SM34  EXIT MACRO, IF NOT NUMERIC       00226001
         AIF   (&JECLN LT 9).SM36      EXIT MACRO, IF LESS MINIMUM      00227001
         AIF   (&JECLN GT 1024).SM36   EXIT MACRO, IF GREATER MAX.      00228001
&LEN     SETA  &JECLN              TAKE OVER SPECIFIED VALUE            00229001
         AGO   .SM40               GO AND CONTINUE                      00230001
.*                                                                      00231001
.SM34    ANOP                                                           00232001
         MNOTE 8,'JECLN=''&JECLN'' OPERAND NOT NUMERIC, GENERATION TERM/00233001
               INATED'                                                  00234001
         SPACE                                                          00235001
         MEXIT                                                          00236001
.*                                                                      00237001
.SM36    ANOP                                                           00238001
         MNOTE 8,'JECLN=''&JECLN'' NOT BETWEEN 9 AND 1024, GENERATION T/00239001
               ERMINATED'                                               00240001
         SPACE                                                          00241001
         MEXIT                                                          00242001
.*                                                                      00243001
.* ****************************************************************     00244001
.*       3) GENERATE AN INTERMEDIATE LOCAL AREA AND FEED IT WITH        00245001
.*          MACRO OPERAND VALUES.                                       00246001
.* ****************************************************************     00247001
.*                                                                      00248001
.SM40    ANOP                                                           00249001
         BAL   15,*+4+16           GO BYPASS INTERMEDIATE AREA @D61NDAT 00250001
         DC    AL1(&CLASS)         CCB LOGICAL UNIT CLASS      @D61NDAT 00251001
         DC    AL1(&NUM)           CCB LOGICAL UNIT NUMBER     @D61NDAT 00252001
         DC    AL2(0)              RESERVED FIELD              @D61NDAT 00253001
         DC    AL4(&LEN)           SPECIFIED LENGTH OF JECL    @D61NDAT 00254001
         AIF   (&JECLY).SM41       CONTINUE IF 'JECL=' SPECIFIED        00255001
         DC    AL4(0)              SPECIFIED ADDRESS OF JECL   @D61NDAT 00256001
         AGO   .SM42               GO AND CONTINUE                      00257001
.*                                                                      00258001
.SM41    ANOP                      EXPAND IF JECL SPECIFIED             00259001
         DC    AL4(&JECL)          SPECIFIED ADDRESS OF JECL   @D61NDAT 00260001
.*                                                                      00261001
.SM42    ANOP                                                           00262001
         DC    CL4'VS20'           IPWSEGM MACRO VERSION ID.   @DY46107 00263001
         SPACE 1                                               @D61NDAT 00264001
.*                                                                      00265001
.* ****************************************************************     00266001
.*       4) GENERATE A PARAMETER AREA WITHIN THE MACRO EXPANSION,       00267001
.*          UNLESS A DYNAMIC PARAMETER AREA ADDRESS IS PASSED BY        00268001
.*          THE 'MFG=' OPERAND.                                         00269001
.* ****************************************************************     00270001
.*                                                                      00271001
         AIF   (N'&MFG GT 0).SM44  GO IF 'MFG=' SPECIFIED               00272001
         BAL   1,*+4+$MXLEN        GO, BYPASS PARAMETER AREA   @D61NDAT 00273001
         DS    XL($MXLEN)          DEFINE THE PARAMETER AREA   @D61NDAT 00274001
         AGO   .SM48               GO AND CONTINUE                      00275001
.*                                                                      00276001
.SM44    ANOP                      HANDLE 'MFG=(REG)' SPECIFIED         00277001
         AIF   ('&MFG'(1,1) NE '(').SM46  GO IF NO REGISTER NOTATION    00278001
         AIF   ('&MFG'(2,1) EQ ')').SM45  EXIT FOR EMPTY REGISTER       00279001
         AIF   (N'&MFG GT 1).SM45         EXIT FOR REGISTER SUBLIST     00280001
&REG4    SETC  '&MFG'(2,K'&MFG-2)  GET DESIGNATED REGISTER              00281001
         LR    1,&REG4             ADDRESS PARAM. AREA BY REG1 @D61NDAT 00282001
         AGO   .SM48               GO AND CONTINUE                      00283001
.*                                                                      00284001
.SM45    ANOP                                                           00285001
         MNOTE 8,'MFG=''&MFG'' EMPTY SPECIFICATION OR NO REGISTER NOTAT/00286001
               ION, GENERATION TERMINATED'                              00287001
         SPACE                                                          00288001
         MEXIT                                                          00289001
.*                                                                      00290001
.SM46    ANOP                      HANDLE 'MFG=AREA' SPECIFIED          00291001
         LA    1,&MFG              ADDRESS PARAM. AREA BY REG1 @D61NDAT 00292001
.*                                                                      00293001
.* ****************************************************************     00294001
.*       5) WHILE ACCESSING THE                                         00295001
.*           - INTERMEDIATE LOCAL AREA BY REGISTER 15, AND THE          00296001
.*           - PARAMETER AREA BY BY REGISTER 1                          00297001
.*          GENERATE CODE, THAT                                         00298001
.*             - CLEARS THE PARAMETER AREA TO HEX ZERO                  00299001
.*             - ALIGNS USED PART OF PARAM. AREA ON DOUBLE WORD         00300001
.*               BOUNDARY AS REQUIRED BY A CCW                          00301001
.*             - SAVES ALL CALLER'S REGISTERS                           00302001
.*             - IDENTIFIES CALLING MACRO VERSION IN PARM. AREA         00303001
.*             - PASSES MACRO OPERAND VALUES FROM THE INTERMEDIATE      00304001
.*               TO THE PARAMETER AREA AT EXECUTION TIME.               00305001
.* ****************************************************************     00306001
.*                                                                      00307001
.SM48    ANOP                                                           00308001
         XC    0($MXLEN,1),0(1)    CLEAR PARAM. AREA TO ZERO   @D61NDAT 00309001
         LA    1,7(,1)             ALIGN USED PART OF PARAM... @D61NDAT 00310001
         SRL   1,3                  .. AREA TO DW BOUNDARY ... @D61NDAT 00311001
         SLL   1,3                  .. SO THAT CCW IS ALIGNED  @D61NDAT 00312001
         STM   2,14,$MXRSV-$MXDS(1)  SAVE CALLER'S REGISTERS   @D61NDAT 00313001
         MVC   $MXVRS-$MXDS(L'$MXVRS,1),12(15)  SETUP VERSION  @D61NDAT 00314001
.*                                                                      00315001
         AIF   ('&DEVADDR'(1,1) NE '(').SM52  GO IF NO REG. NOTATION    00316001
         ST    &REG1,$MXUNA-$MXDS(,1)  PASS ADDRESS OF DEVICE  @D61NDAT 00317001
         OI    $MXOP1-$MXDS(1),$MX1UA  SET 'LOG. UNIT' BY ADDR.@D61NDAT 00318001
         AGO   .SM54                   GO AND CONTINUE                  00319001
.*                                                                      00320001
.SM52    ANOP                      HANDLE 'DEVADDR=SYSXXX' GIVEN        00321001
         MVC   $MXCLS-$MXDS(L'$MXCLS,1),0(15)  PASS UNIT CLASS @D61NDAT 00322001
         MVC   $MXNUM-$MXDS(L'$MXNUM,1),1(15)  PASS UNIT NUMB. @D61NDAT 00323001
.*                                                                      00324001
.SM54    ANOP                                                           00325001
         AIF   (&KEEPY EQ 0).SM56  CONTINUE IN CASE 'KEEP=NO'           00326001
         OI    $MXOP1-$MXDS(1),$MX1KP  SET 'KEEP=YES' WANTED   @D61NDAT 00327001
.*                                                                      00328001
.SM56    ANOP                      HANDLE 'JECL=(REG)' SPECIFIED        00329001
         AIF   (&JECLY EQ 0).SM66  CONTINUE IF 'JECL=' NOT SPECIFIED    00330001
         OI    $MXOP1-$MXDS(1),$MX1PJ  SET 'USER JECL PRESENT' @D61NDAT 00331001
         AIF   ('&JECL'(1,1) NE '(').SM58  GO IF NO REG. NOTATION       00332001
         ST    &REG2,$MXJCL-$MXDS(,1)  PASS ADDR. OF JECL STMT.@D61NDAT 00333001
         AGO   .SM60               GO AND CONTINUE                      00334001
.*                                                                      00335001
.SM58    ANOP                      HANDLE 'JECL=ADDR' SPECIFIED         00336001
         MVC   $MXJCL-$MXDS(L'$MXJCL,1),8(15)  PASS ADDR(JECL) @D61NDAT 00337001
.*                                                                      00338001
.SM60    ANOP                      HANDLE 'JECLN=(REG) SPECIFIED        00339001
         AIF   (&LENREG EQ 0).SM62  GO IF NO REGISTER NOTATION USED     00340001
         ST    &REG3,$MXJCN-$MXDS(,1) PASS LENGTH OF JECL AREA @D61NDAT 00341001
         AGO   .SM66               GO AND CONTINUE                      00342001
.*                                                                      00343001
.SM62    ANOP                      HANDLE 'JECLN=LEN' BEEN GIVEN        00344001
         MVC   $MXJCN-$MXDS(L'$MXJCN,1),4(15)  PASS LEN(JECL)  @D61NDAT 00345001
.*                                                                      00346001
.* ******************************************************************   00347001
.*       6) GENERATE CODE TO ENTER THE IPWSEGM INTERFACE ROUTINE        00348001
.*          'SEG00' OF THE VSE/POWER IPW$$NU MODULE, WHICH RESIDES      00349001
.*          IN THE SYSTEM GETVIS AREA. 'SEG00' DOES FURTHER CHECKING    00350001
.*          AT EXECUTION TIME, AND PREPARES THE 'NOOP' I/O REQUEST      00351001
.*          WITHIN CALLER'S $MXDS AREA. FOR ADDRESSABILITY              00352001
.*           - USE GETFLD SERVICE TO ACCESS VSE/POWER CAT               00353001
.*          IF VSE/POWER NOT ACTIVE, RETURN IMMEDIATELY TO CALLER.      00354001
.* ******************************************************************   00355001
.SM66    ANOP                                                           00356001
         LR    2,1                 SAVE PARAMETER AREA POINTER @D61NDAT 00357001
         SPACE 1                                               @D61NDAT 00358001
         GETFLD FIELD=POWCAT       GET CAT ADDRESS FROM SYSCOM @D61NDAT 00359001
*                                  MODIFYING REGISTER 0,1,15   @D61NDAT 00360001
         LR    15,1                SAVE ADDR. OF VSE/POWER CAT @D61NDAT 00361001
         LR    1,2                 RELOAD PARAM. AREA POINTER  @D61NDAT 00362001
         L     2,$MXRSV-$MXDS(,1)  RELOAD CALLER'S REG. 2      @D61NDAT 00363001
         SPACE 1                                               @D61NDAT 00364001
         LTR   15,15               VSE/POWER ACTIVE AT ALL ?   @D61NDAT 00365001
         BNZ   $MA&SYSNDX          ..YES, GO TO ENTER VSE/POWER@D61NDAT 00366001
         MVI   $MXRRC-$MXDS(1),$MXR04  SET 'INITIALIZATION ERR'@D61NDAT 00367001
         MVI   $MXRFB-$MXDS(1),$MX04PNA  SET 'POWER NOT ACTIVE'@D61NDAT 00368001
         B     $MB&SYSNDX          GO AND CONTINUE             @D61NDAT 00369001
         SPACE 1                                               @D61NDAT 00370001
$MA&SYSNDX DS    0H                                            @D61NDAT 00371001
         LR    7,1                 PASS POINTER OF PARAM. AREA @D61NDAT 00372001
         LR    9,15                COPY VSE/POWER CAT ADDRESS  @D61NDAT 00373001
         L     9,$MXSEGMI(,9)      COPY ADDR(IPWSEGM I/F RTN)  @D61NDAT 00374001
         BALR  14,9                ENTER IPWSEGM INTERFACE RTN.@D61NDAT 00375001
         LR    1,7                 RE-LOAD PTR. OF PARAM. AREA @D61NDAT 00376001
         LM    2,14,$MXRSV-$MXDS(1)  RELOAD CALLER'S REG 2-14  @D61NDAT 00377001
         SPACE 1                                               @D61NDAT 00378001
$MB&SYSNDX DS    0H                                            @D61NDAT 00379001
         SR    0,0                 CLEAR WORK REGISTER         @D61NDAT 00380001
         CH    0,$MXRRF-$MXDS(,1)  SUCCESSFUL RETURN CODES ?   @D61NDAT 00381001
         BNE   $MC&SYSNDX          ..NO, GO + RETURN TO CALLER @D61NDAT 00382001
.*                                                                      00383001
.* ******************************************************************   00384001
.*       7) GENERATE CODE TO ISSUE THE PREPARED 'NOOP' I/O REQUEST      00385001
.*          DIRECTLY FROM THE MACRO EXPANSION WITHIN THE USER           00386001
.*          PARTITION.                                                  00387001
.* ******************************************************************   00388001
.*                                                                      00389001
         LR    0,1                 SAVE POINTER OF PARAM. AREA @D61NDAT 00390001
         LA    1,$MXCCB-$MXDS(,1)  POINT TO CCB FOR I/O REQ.   @D61NDAT 00391001
         SPACE 1                                               @D61NDAT 00392001
         EXCP  (1)                 ISSUE I/O REQUEST TO POWER  @D61NDAT 00393001
         SPACE 1                                               @D61NDAT 00394001
         WAIT  (1)                 WAIT TILL REQUEST HANDLED   @D61NDAT 00395001
         LR    1,0                 RE-LOAD PRT. OF PARAM. AREA @D61NDAT 00396001
         SPACE 1                                               @D61NDAT 00397001
.*                                                                      00398001
.* ******************************************************************   00399001
.*       8) GENERATE CODE TO MAKE THE MACRO RETURN AND FEEDBACK         00400001
.*          CODE AVAILABLE IN REGISTER 15 AND TO OFFER ACCESS TO        00401001
.*          ATTRIBUTES OF THE CREATED QUEUE ENTRY VIA REGISTER 1.       00402001
.* ******************************************************************   00403001
.*                                                                      00404001
$MC&SYSNDX DS    0H                                            @D61NDAT 00405001
         SR    15,15               CLEAR RETURN CODE REGISTER  @D61NDAT 00406001
         ICM   15,3,$MXRRF-$MXDS(1) PASS RC/FB CODES IN REG15, @D61NDAT 00407001
*                                   ADDRESS $MXDS AREA BY REG1 @D61NDAT 00408001
         SPACE 2                                               @D61NDAT 00409001
         MEND                                                           00410001
