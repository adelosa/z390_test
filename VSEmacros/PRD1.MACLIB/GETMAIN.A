*/********************************************************************/ 00001000
*/*                                                                  */ 00002000
*/*                                                                  */ 00003000
*/*01* MACRO-NAME = GETMAIN                                          */ 00004000
*/*                                                                  */ 00005000
*/*01* DESCRIPTIVE-NAME = Get main storage macro.                    */ 00006000
*/*                                                                  */ 00007000
*/*01* PROPRIETARY STATEMENT=                                        */ 00008000
*/***PROPRIETARY_STATEMENT********************************************/ 00009000
*/*                                                                  */ 00010000
*/*         LICENSED MATERIALS - PROPERTY OF IBM                     */ 00011990
*/*         "RESTRICTED MATERIALS OF IBM"                            */ 00012980
*/*         5686-066                                                 */ 00013970
*/*         (C)COPYRIGHT IBM CORP. 1996                              */ 00014960
*/*                                                                  */ 00016000
*/* STATUS= HBB4430                                                  */ 00017000
*/*                                                                  */ 00018000
*/***END_OF_PROPRIETARY_STATEMENT*************************************/ 00019000
*/*                                                                  */ 00020000
*/*01* FUNCTION =                                                    */ 00021000
*/*    Interface to VSM used to obtain a block of virtual storage.   */ 00022000
*/*                                                                  */ 00023000
*/*01* MACROS-INVOKED = SYSSTATE                                     */ 00024000
*/*                                                                  */ 00025000
*/*01* EXTERNAL MACRO VARIABLES = SYSASCE                            */ 00026000
*/*                                                                  */ 00027000
*/*01* CHANGE ACTIVITY =                                             */ 00028000
*/*                                                                  */ 00029000
*/*         $D1=DCR0127,HBB3310,861029,PDF5: Allow disabled,         */ 00030000
*/*             AR mode users of branch entry GETMAIN/FREEMAIN to    */ 00031000
*/*             get/free storage from the primary address space.     */ 00032000
*/*             (Access registers are ignored.)                  @D1A*/ 00033000
*/*                                                                  */ 00034000
*/*         $L1=PROD310,HBB3310,870603,PDF5: Copy-right changes  @L1A*/ 00035000
*/*      $L2=SUBOV  ,JBB4422,900928,PDDS: Support for new low        */ 00036000
*/*                  private, user-key subpools.                 @L2A*/ 00037000
*/*         OY30573 - Restore value in register for KEY parameter    */ 00038000
*/*      $P1=PKB0042,HBB4430,910719,PDF5: Refrain from generating       00039000
*                    superfluous instructions when the Key parameter    00040000
*                    is not specified.  The fix also prevents R1 from   00041000
*                    being corrupted on VRC/VRU GETMAIN.                00042000
*                                                                @P1A*/ 00043000
*/*      $O1=OY46876,JBB4422,910821,PDF5: This APAR fixes the same      00044000
*                    error as PKB0042.  No code changes were needed to  00045000
*                    roll up this APAR because the PTM fixed the whole  00046000
*                    problem.                                           00047000
*                                                                @O1A*/ 00048000
*/*      $L3=TCSAU  ,HBB4430,911003,PDXB:  OWNER                     */ 00049000
*/*      $L4=POSIXVSM,HBB4430,911031,PD00BV: EXPLICIT GETMAIN Support*/ 00050000
*/*      $P2=PKB2327 ,HBB4430,920429,PD00XB: Fix &RL check           */ 00051000
*/*      $P3=PKB2328 ,HBB4430,920429,PD00XB: Fix MNOTEs              */ 00052000
*/*                                                                  */ 00053000
*/*      @D61ADTN: VSE/ESA Compatibility with MVS/ESA                */ 00054000
*/*                                                                  */ 00055000
*/********************************************************************/ 00056000
*/*                                                              @D1A*/ 00057000
* %/*                                                                   00058000
         MACRO                                                          00059000
&NAME    GETMAIN &MODE,&LV=,&LA=,&A=,&SP=,&MF=I,&HIARCHY=,&BNDRY=,     *00060000
               &KEY=,&BRANCH=,&RELATED=,&LOC=,&OWNER=,&INADDR=     @L4C 00061000
.******************************************************************     00062000
.* Parameters                                                           00063000
.******************************************************************     00064000
.* &MODE    - The mode (e.g., R, RC, RU ...).  Note that 'P' mode       00065000
.*            is for VSM internal use only, and provides entry to       00066000
.*            VSM internal cellpool processing.                         00067000
.* &LV      - The input length value                                    00068000
.* &LA      - The input length address. Actually the address of         00069000
.*            the storage holding a list of lengths.                    00070000
.* &A       - The address GETMAIN will return your output in            00071000
.* &SP      - The subpool                                               00072000
.* &MF      - The macro format                                          00073000
.* &HIARCHY - Used by IHBINNRA                                          00074000
.* &BNDRY   - The boundary                                              00075000
.* &KEY     - The key                                                   00076000
.* &BRANCH  - Branch entry or SVC                                       00077000
.* &RELATED - Any valid macro keyword specification                     00078000
.* &LOC     - Specified location of virtual and real storage            00079000
.*            (relative to the 16 mb line)                              00080000
.* &NAME    - Relocatable symbol used to define the first byte of the   00081000
.*            GETMAIN macro expansion.                                  00082000
.* &OWNER   - Owner for Common Storage: HOME, PRIMARY, SECONDARY,       00083000
.*            SYSTEM                                               @L3A 00084000
.******************************************************************     00085000
.* Local and global variables                                           00086000
.******************************************************************     00087000
.* &SVCN    - SVC number. currently valid choices: 4,10,120             00088000
.* &PRG     - Register in which the parameters were passed.             00089000
.* &KYSPC   - 1= Key was specified on the macro invocation       @L2A   00090000
.* &B       - 1= LV value is in a register                              00091000
.* &C       - 1= LA value is in a register                              00092000
.* &D       - 1= A is in a register                                     00093000
.* &GLBR    - 1= global branch entry request                            00094000
.* &BR      - 1= branch entry request                                   00095000
.* &SPREG   - 1= subpool was passed to us in a register                 00096000
.* &UNCND   - 1= its an unconditional request                           00097000
.* &BND     - 1= page boundary 0=doubleword boundary                    00098000
.* &L       - 1= its either a variable request or a list request        00099000
.* &V       - 1= its a variable request                                 00100000
.* &CND     - 1= its a conditional request                              00101000
.* &KEYRG   - 1= key was passed to us in a register                     00102000
.* &LVREG   - 1= length value was passed to us in a register            00103000
.* &INAREG  - 1= input address was passed in a register            @L4A 00104000
.* &RL      - 1= real backing location was specified as ANY             00105000
.* &RLB     - 1= real backing location was specified as BELOW      @L4A 00106000
.* &EXPL    - 1= LOC=EXPLICIT was specified                        @L4A 00107000
.* &VA      - 1= virtual storage can be located anywhere                00108000
.* &VB      - 1= virtual storage must be below the line                 00109000
.* &MAXRG   - 1= maximum length was passed to us in a register          00110000
.* &MINRG   - 1= minimum length was passed to us in a register          00111000
.*                                                                      00112000
.* &GNAME   - Macro-generated relocatable symbol that defines the       00113000
.*            static storage used for the parameter list.               00114000
.* &MAX     - the first length value. it indicates to us the            00115000
.*            most amount of storage that we want to get                00116000
.* &MIN     - the second length value. it indicates to us the           00117000
.*            least amount of storage that we are willing to take       00118000
.* &SYSASCE - indicates whether the invoker of getmain is in AR         00119000
.*            mode or primary mode.                                     00120000
.*                                                                      00121000
.******************************************************************     00122000
         LCLA  &SVCN,&PRG              LOCAL ARITHMETIC VARIABLES       00123000
         LCLB  &B,&C,&D,&GLBR,&BR,&SPREG,&UNCND,&BND,&L,&V,&CND         00124000
         LCLB  &KEYRG,&LVREG,&RL,&VA,&VB,&MAXRG,&MINRG,&KYSPC           00125000
.*                                                                @L2C  00126000
         LCLB  &RLB,&EXPL,&INAREG                                       00127000
.*                                                                @L4A  00128000
         LCLC  &GNAME,&MAX,&MIN        LOCAL CHARACTER VARIABLES        00129000
         LCLC  &BOWN                   Ownership                   @L3A 00130000
         GBLC  &SYSASCE                Global character variable -      00131000
.*                                     indicates whether the invoker    00132000
.*                                     of GETMAIN is in AR ASC mode or  00133000
.*                                     primary ASC mode.           @D1A 00134000
.*0000000400,012200,013000-013200,016800-017600,026600-026800      LC0A 00135000
.*    047000                                                       LC0A 00136000
.*8002,691302-691702,725202-783002                             @G860P30 00137000
&GNAME   SETC  'IHB'.'&SYSNDX'                                          00138000
&PRG     SETA  15                 DEFAULT REG FOR RC, RU, VRC, AND VRU  00139000
.********************************************************************** 00140000
.*   Check for unsupported keywords in the VSE Environment   @D61ADTN * 00141000
.********************************************************************** 00142000
.*                                                                      00143000
         AIF (T'&BRANCH NE 'O').ERBRNCH                        @D61ADTN 00144000
         AIF ('&LOC' EQ 'EXPLICIT').ERXPLIC                    @D61ADTN 00145000
         AIF ('&LOC(1)' EQ 'EXPLICIT').ERXPLIC                 @D61ADTN 00146000
         AIF (T'&INADDR NE 'O').ERINADR                        @D61ADTN 00147000
         AIF (T'&OWNER NE 'O').EROWNER                         @D61ADTN 00148000
.*                                                                      00149000
.********************************************************************** 00150000
.*                                                                      00151000
.SYSSTATE ANOP                                                 @D61ADKH 00152000
         SYSSTATE TEST            This macro sets the global       @D1A 00153000
.*                                variable SYSASCE.  This          @D1A 00154000
.*                                variable is used later to        @D1A 00155000
.*                                determine whether the caller is  @D1A 00156000
.*                                in AR ASC mode or primary ASC    @D1A 00157000
.*                                mode.                            @D1A 00158000
.*                                                                      00159000
.******************************************************************     00160000
.* If no mode was specified then go to the label  NOMODE                00161000
.******************************************************************     00162000
.*                                                                      00163000
         AIF   ('&MODE' EQ '').NOMODE                                   00164000
.*                                                                      00165000
.******************************************************************     00166000
.* If the first letter of the mode is not one of these then its not     00167000
.* a valid mode, branch to label ERROR7 to issue an error message       00168000
.******************************************************************     00169000
.*                                                                      00170000
         AIF   ('&MODE'(1,1) NE 'V' AND '&MODE'(1,1) NE 'E' AND        *00171000
               '&MODE'(1,1) NE 'L' AND '&MODE'(1,1) NE 'R' AND         *00172000
               '&MODE'(1,1) NE 'P').ERROR7                     @Z30EN9G 00173000
.*                                                                      00174000
.******************************************************************     00175000
.* If we are in single character mode (P or R) then branch to           00176000
.* label MODE1                                                          00177000
.******************************************************************     00178000
.*                                                                      00179000
         AIF   (K'&MODE EQ 1).MODE1    SINGLE CHARACTER MODE?           00180000
.*                                                                      00181000
.******************************************************************     00182000
.* If the mode specified is greater than 3 characters long, its         00183000
.* not a valid mode. VRU and VRC are the longest currently valid        00184000
.* modes. Branch to ERROR7 to issue a message.                          00185000
.******************************************************************     00186000
.*                                                                      00187000
         AIF   (K'&MODE GT 3).ERROR7                           @G860P30 00188000
.*                                                                      00189000
.******************************************************************     00190000
.* If the last letter of the mode isn't U or C then we have an          00191000
.* invalid mode. Branch to ERROR7 to issue a message.                   00192000
.******************************************************************     00193000
.*                                                                      00194000
         AIF   ('&MODE'(K'&MODE,1) NE 'U'                              *00195000
               AND '&MODE'(K'&MODE,1) NE 'C').ERROR7           @G860P30 00196000
.*                                                                      00197000
.******************************************************************     00198000
.* If its a 2 character mode skip the next check and go straight        00199000
.* to MODE1 (do not pass go, do not collect $200.00)                    00200000
.******************************************************************     00201000
.*                                                                      00202000
         AIF   (K'&MODE EQ 2).MODE1                            @G860P30 00203000
.*                                                                      00204000
.******************************************************************     00205000
.* For triple character modes, make sure that the first 2               00206000
.* letters of the mode are valid, if not, go to ERROR7 to issue         00207000
.* a message                                                            00208000
.******************************************************************     00209000
.*                                                                      00210000
         AIF   ('&MODE'(1,2) NE 'VR').ERROR7                   @G860P30 00211000
.MODE1   ANOP                                                           00212000
.*                                                                      00213000
.******************************************************************     00214000
.* Set the variable &L to indicate if we are processing either a        00215000
.* variable request or a list request. &L will be 1 if either is        00216000
.* true.                                                                00217000
.******************************************************************     00218000
.*                                                                      00219000
&L       SETB  ('&MODE'(1,1) EQ 'V' OR '&MODE'(1,1) EQ 'L')             00220000
.*                                                                      00221000
.******************************************************************     00222000
.* Set the variable &V to indicate if we are processing a               00223000
.* variable request &V will be 1 it is a variable request               00224000
.******************************************************************     00225000
.*                                                                      00226000
&V       SETB  ('&MODE'(1,1) EQ 'V')                                    00227000
.*                                                                      00228000
.******************************************************************     00229000
.* If the mode is any of the R varieties (R, RC, RU) or P (internal)    00230000
.* then go to label NOMODE                                              00231000
.******************************************************************     00232000
.*                                                                      00233000
         AIF   ('&MODE'(1,1) EQ 'R' OR '&MODE'(1,1) EQ 'P').NOMODE      00234000
.*                                                                      00235000
.******************************************************************     00236000
.* So if the length of the mode is 1 we have a problem since the        00237000
.* only valid one character modes are R and P...and on the              00238000
.* previous instruction we branched to NOMODE for them. Well,           00239000
.* times are tough, go to ERROR7 and issue a message                    00240000
.******************************************************************     00241000
.*                                                                      00242000
         AIF   (K'&MODE EQ 1).ERROR7                                    00243000
.*                                                                      00244000
.******************************************************************     00245000
.* We are now only processing 2 and 3 character valid modes.            00246000
.******************************************************************     00247000
.*                                                                      00248000
.******************************************************************     00249000
.* If the second (and possibly last) character is C, this means that    00250000
.* this is conditional request. Since special processing happens        00251000
.* based on COND/UNCOND, set a variable to indicate this                00252000
.******************************************************************     00253000
.*                                                                      00254000
&CND     SETB  ('&MODE'(2,1) EQ 'C') SVC 4 CONDITIONAL FLAG             00255000
.*                                                                      00256000
.******************************************************************     00257000
.* We are now processing all valid modes regardless of their length     00258000
.******************************************************************     00259000
.*                                                                      00260000
.******************************************************************     00261000
.* If boundary wasn't specified on the macro invocation branch to       00262000
.* NOBNDRY to avoid the boundary related checks                         00263000
.******************************************************************     00264000
.*                                                                      00265000
.NOMODE  AIF   ('&BNDRY' EQ '').NOBNDRY                                 00266000
.*                                                                      00267000
.******************************************************************     00268000
.* Since boundary was specified, set a variable to indicate whether     00269000
.* PAGE was specified or not. Note that if page was specified,          00270000
.* &BND will be 1. If anything else was specified (valid or invalid)    00271000
.* &BND will be 0. These invalid values for boundary will be            00272000
.* caught later in processing.                                          00273000
.******************************************************************     00274000
.*                                                                      00275000
&BND     SETB  ('&BNDRY' EQ 'PAGE')                                     00276000
.*                                                                      00277000
.NOBNDRY ANOP                                                      @L3A 00278000
.******************************************************************@L3A 00279000
.* Check OWNER                                                     @L3A 00280000
.******************************************************************@L3A 00281000
.*                                                                 @L3A 00282000
&BOWN    SETC  '00'                 OWNER=HOME                     @L3A 00283000
         AIF   ('&OWNER' EQ '').NOOWNER                            @L3A 00284000
         AIF   ('&OWNER' NE 'HOME').OWN1                           @L3A 00285000
&BOWN    SETC  '00'                 OWNER=HOME                     @L3A 00286000
         AGO   .OWN9                                               @L3A 00287000
.OWN1    ANOP                                                      @L3A 00288000
         AIF   ('&OWNER' NE 'PRIMARY').OWN2                        @L3A 00289000
&BOWN    SETC  '01'                 OWNER=PRIMARY                  @L3A 00290000
         AGO   .OWN9                                               @L3A 00291000
.OWN2    ANOP                                                      @L3A 00292000
         AIF   ('&OWNER' NE 'SECONDARY').OWN3                      @L3A 00293000
&BOWN    SETC  '10'                 OWNER=SECONDARY                @L3A 00294000
         AGO   .OWN9                                               @L3A 00295000
.OWN3    ANOP                                                      @L3A 00296000
         AIF   ('&OWNER' NE 'SYSTEM').OWN4                         @L3A 00297000
&BOWN    SETC  '11'                 OWNER=SYSTEM                   @L3A 00298000
         AGO   .OWN9                                               @L3A 00299000
.OWN4    AGO   .ERRORO1             OWNER error                    @L3A 00300000
.OWN9    ANOP                                                      @L3A 00301000
         AIF   ('&MODE' NE 'RC' AND                                    *00302000
               '&MODE' NE 'RU' AND '&MODE' NE 'VRC' AND                *00303000
               '&MODE' NE 'VRU').ERRORO2                           @L3A 00304000
.NOOWNER ANOP                                                      @L3A 00305000
.******************************************************************@L4A 00306000
.* Enfore rule that INADDR is only allowed with RC and RU forms    @L4A 00307000
.******************************************************************@L4A 00308000
.*                                                                 @L4A 00309000
         AIF   ('&INADDR' EQ '').NOINADD                           @L4A 00310000
         AIF   ('&MODE' NE 'RC' AND                                    *00311000
               '&MODE' NE 'RU').ERROR33                            @L4A 00312000
.NOINADD ANOP                                                      @L4A 00313000
.******************************************************************     00314000
.* We are now processing request that may or may not have had           00315000
.* boundary specified. If key wasn't specified on the invocation,       00316000
.* go to the label SKIP.This will skip some of the key related          00317000
.* validity checks.                                                     00318000
.******************************************************************     00319000
.*                                                                      00320000
         AIF   ('&KEY' EQ '').SKIP                                      00321000
.*                                                                      00322000
.*                                                            @P1D      00323000
.*                                                                      00324000
.******************************************************************     00325000
.* Since key must have been specified in order to be processing         00326000
.* here, check and see if the valid modes were present. Currently       00327000
.* key can only be specified with RC, RU, VRC and VRU modes             00328000
.******************************************************************     00329000
.*                                                                      00330000
         AIF   ('&MODE' NE 'RC' AND '&MODE' NE 'RU' AND                *00331000
               '&MODE' NE 'VRC' AND '&MODE' NE 'VRU').ERRORA   @G860P30 00332000
.*                                                                      00333000
.******************************************************************     00334000
.* If the key is in a register, we can't really tell much so skip       00335000
.* these checks by going to the label SKIP                              00336000
.******************************************************************     00337000
.*                                                                      00338000
         AIF   ('&KEY'(1,1) EQ '(').SKIP                                00339000
.*                                                                      00340000
.******************************************************************     00341000
.* If the type of the key isn't numeric then we can't check the         00342000
.* value equated to it.                                                 00343000
.******************************************************************     00344000
.*                                                                      00345000
         AIF   (T'&KEY NE 'N').SKIP   CAN'T CHECK EQUATED VALUE         00346000
.*                                                                      00347000
.******************************************************************     00348000
.* Key specified was just a straight number. Check this number          00349000
.* and make sure its not too big. If it is, go to ERRORB to issue       00350000
.* a message.                                                           00351000
.* Note that since anything less than 0 would have failed the           00352000
.* previous type check, we don't have to check for negatives.           00353000
.******************************************************************     00354000
.*                                                                      00355000
         AIF   (&KEY GT 15).ERRORB                                      00356000
.*                                                                      00357000
.******************************************************************     00358000
.* We've done what checking we can for KEY, move on to check            00359000
.* certain combinations that are invalid.                               00360000
.******************************************************************     00361000
.*                                                                      00362000
.******************************************************************     00363000
.* Issuing a branch entry getmain with the list form of the macro       00364000
.* is invalid not to mention fruitless. Go to ERRORC to issue           00365000
.* a message. NOTE: you come here if key isn't specified.               00366000
.******************************************************************     00367000
.*                                                                      00368000
.SKIP    AIF   ('&MF' EQ 'L' AND '&BRANCH' NE '').ERRORC                00369000
.*                                                                      00370000
.******************************************************************     00371000
.* If branch wasn't specified at all, theres nothing to check so        00372000
.* go to the label BRCNT.                                               00373000
.******************************************************************     00374000
.*                                                                      00375000
         AIF   ('&BRANCH' EQ '').BRCNT                                  00376000
.*                                                                      00377000
.******************************************************************     00378000
.* Now that we know that branch was specified...                        00379000
.* If the number of things specified within the branch operand is       00380000
.* less than 2 then we don't have to bother doing the GLOBAL            00381000
.* checks. Branch around these to the label BRSNG to handle             00382000
.* single operand branch requests.                                      00383000
.******************************************************************     00384000
.*                                                                      00385000
         AIF   (N'&BRANCH LT 2).BRSNG                                   00386000
.*                                                                      00387000
.******************************************************************     00388000
.* Since the only valid 2 operand branch request is (YES,GLOBAL)        00389000
.* go to ERRORD to issue a message for any other combinations           00390000
.******************************************************************     00391000
.*                                                                      00392000
         AIF ('&BRANCH(1)' NE 'YES' OR '&BRANCH(2)' NE 'GLOBAL').ERRORD 00393000
.*                                                                      00394000
.******************************************************************     00395000
.* Global branch entry can only be specified with certain modes.        00396000
.* If the mode chosen is not one of the "chosen" then                   00397000
.* go to ERRORF to issue a message.                                     00398000
.******************************************************************     00399000
.*                                                                      00400000
         AIF   ('&BRANCH(2)' EQ 'GLOBAL' AND '&MODE' NE 'RC' AND       *00401000
               '&MODE' NE 'RU' AND '&MODE' NE 'VRC' AND                *00402000
               '&MODE' NE 'VRU').ERRORF                        @G860P30 00403000
.*                                                                      00404000
.******************************************************************     00405000
.* Set bits indicating that this is                                     00406000
.* GLOBAL (&GLBR is set)                                                00407000
.* BRANCH (&BR is set)                                                  00408000
.* These will be used in later processing                               00409000
.******************************************************************     00410000
.*                                                                      00411000
&GLBR    SETB  1                                                        00412000
&BR      SETB  1                                                        00413000
.*                                                                      00414000
.******************************************************************     00415000
.* Branch unconditionally to label BRCNT to continue processing         00416000
.* this request.                                                        00417000
.******************************************************************     00418000
.*                                                                      00419000
         AGO   .BRCNT                                                   00420000
.*                                                                      00421000
.******************************************************************     00422000
.* We are processing single operand branch requests here. Since         00423000
.* at the only valid single request is YES, give an error message       00424000
.* if its not YES                                                       00425000
.******************************************************************     00426000
.*                                                                      00427000
.BRSNG   AIF   ('&BRANCH' NE 'YES').ERRORD                              00428000
.*                                                                      00429000
.******************************************************************     00430000
.* Set bit indicating that this is                                      00431000
.* BRANCH (&BR is set)                                                  00432000
.* This will be used in later processing                                00433000
.******************************************************************     00434000
.*                                                                      00435000
&BR      SETB  1                                                        00436000
.*                                                                      00437000
.******************************************************************     00438000
.* Continue processing                                                  00439000
.******************************************************************     00440000
.*                                                                      00441000
.BRCNT   ANOP                                                           00442000
.*                                                                      00443000
.******************************************************************     00444000
.* Set the SVC number to 4 as a base place to start. This may very      00445000
.* well change in the event that we determine that it is really         00446000
.* not an SVC 4 request.                                                00447000
.******************************************************************     00448000
&SVCN    SETA  4                                                        00449000
.*                                                                      00450000
.******************************************************************     00451000
.*  If MF is 'I', we are processing the standard form of GETMAIN.       00452000
.* (That is, the MF parameter was absent from the macro.)               00453000
.* Mode (e.g., RC or EC or ...) is required when MF is absent.          00454000
.******************************************************************     00455000
.*                                                                      00456000
         AIF   ('&MODE' EQ '' AND '&MF' EQ 'I').ERROR1                  00457000
.*                                                                      00458000
.******************************************************************     00459000
.* If both a length value and an length address were specified,         00460000
.* this is an error. Go to ERROR5 to issue the message                  00461000
.******************************************************************     00462000
.*                                                                      00463000
         AIF   ('&LV' NE '' AND '&LA' NE '').ERROR5                     00464000
.*                                                                      00465000
.******************************************************************     00466000
.* If mode wasn't specified, branch past these specific mode            00467000
.* tests by going to CONT1                                              00468000
.******************************************************************     00469000
.*                                                                      00470000
         AIF   ('&MODE' EQ '').CONT1                                    00471000
.*                                                                      00472000
.******************************************************************     00473000
.* E modes must use LV not LA, issue error message                      00474000
.******************************************************************     00475000
.*                                                                      00476000
         AIF   ('&MODE'(1,1) EQ 'E' AND '&LA' NE '').ERROR6             00477000
.*                                                                      00478000
.******************************************************************     00479000
.* R modes must use LV not LA, issue error message                      00480000
.******************************************************************     00481000
.*                                                                      00482000
         AIF   ('&MODE'(1,1) EQ 'R' AND '&LA' NE '').ERROR6             00483000
.*                                                                      00484000
.******************************************************************     00485000
.* 3 character modes (VRU and VRC) must use LV not LA, issue            00486000
.* an error message                                                     00487000
.******************************************************************     00488000
.*                                                                      00489000
         AIF   (K'&MODE EQ 3 AND '&LA' NE '').ERROR6           @G860P30 00490000
.*                                                                      00491000
.******************************************************************     00492000
.* If a valid value for the boundary parameter was not supplied,        00493000
.* issue an error message                                               00494000
.******************************************************************     00495000
.*                                                                      00496000
         AIF   ('&BNDRY' NE '' AND '&BNDRY' NE 'DBLWD' AND '&BNDRY'    *00497000
               NE 'PAGE').ERROR10                                       00498000
.*                                                                      00499000
.******************************************************************     00500000
.* R mode callers cannot request page boundaries                        00501000
.******************************************************************     00502000
.*                                                                      00503000
         AIF   ('&BNDRY' EQ 'PAGE' AND '&MODE' EQ 'R').ERR10A           00504000
.*                                                                      00505000
.******************************************************************     00506000
.* L modes require LA not LV                                            00507000
.******************************************************************     00508000
.*                                                                      00509000
         AIF   ('&MODE'(1,1) EQ 'L' AND '&LV' NE '').ERROR4             00510000
.*                                                                      00511000
.******************************************************************     00512000
.* 2 character V mode requires LA not LV, issue an error message        00513000
.******************************************************************     00514000
.*                                                                      00515000
      AIF ('&MODE'(1,1) EQ 'V' AND '&LV' NE '' AND K'&MODE LT 3).ERROR4 00516000
.*                                                                      00517000
.******************************************************************     00518000
.* Hiarchy is used by IHBINNRA. Valid values are 0, 1 and not           00519000
.* specified                                                            00520000
.******************************************************************     00521000
.*                                                                      00522000
         AIF   ('&HIARCHY' EQ '' OR '&HIARCHY' EQ '0' OR '&HIARCHY' EQ *00523000
               '1').CONT1                                               00524000
.*                                                                      00525000
.******************************************************************     00526000
.* Otherwise the hiarchy value specified is invalid. Issue a message    00527000
.******************************************************************     00528000
.*                                                                      00529000
         IHBERMAC 195                                                   00530000
.*                                                                      00531000
.******************************************************************     00532000
.* Exit                                                                 00533000
.******************************************************************     00534000
.*                                                                      00535000
         MEXIT                                                          00536000
.*                                                                      00537000
.******************************************************************     00538000
.* Continue processing. Route based on Macro format                     00539000
.* Note that either the mode hasn't been specified or it has            00540000
.* passed all validity checks.                                          00541000
.******************************************************************     00542000
.*                                                                      00543000
.******************************************************************     00544000
.* If macro form is list, go to LROUT                                   00545000
.******************************************************************     00546000
.*                                                                      00547000
.CONT1   AIF   ('&MF' EQ 'L').LROUT                                     00548000
.*                                                                      00549000
.******************************************************************     00550000
.* If macro form is standard (i.e., MF absent from GETMAIN),            00551000
.* go to IROUT. Note that mode is required with MF of I                 00552000
.******************************************************************     00553000
.*                                                                      00554000
         AIF   ('&MF' EQ 'I').IROUT                                     00555000
.*                                                                      00556000
.******************************************************************     00557000
.* We are processing an execute form, which requires that the MF        00558000
.* parameter look like 'MF=(E,<remote parm list description>)'.  We     00559000
.* know that we can't find the parm list if there are less than 2       00560000
.* values specified for the MF parameter.                               00561000
.******************************************************************     00562000
.*                                                                      00563000
         AIF   (N'&MF LE 1).ERROR2                                      00564000
.*                                                                      00565000
.******************************************************************     00566000
.* Only valid thing left is the execute form, if this isn't what        00567000
.* was specified, issue an error message                                00568000
.******************************************************************     00569000
.*                                                                      00570000
         AIF   ('&MF(1)' NE 'E').ERROR2                                 00571000
.*                                                                      00572000
.******************************************************************     00573000
.* We are working with an execute form, so the caller has already       00574000
.* constructed a GETMAIN parameter list with the LIST form of the       00575000
.* macro.  &MF(2) contains the address of the parameter list.  It can   00576000
.* be either an RX address or a register.  IHBINNRA properly loads      00577000
.* register 1 with the address of the parameter list in both cases.     00578000
.* (That is, it will generate a 'LR 1,parm-list-reg-name', or a         00579000
.* 'LA 1,parm-list-RX-addr'                                             00580000
.******************************************************************     00581000
.*                                                                      00582000
&NAME    IHBINNRA &MF(2)                                                00583000
.*                                                                      00584000
.******************************************************************     00585000
.* If the length value wasn't specified                                 00586000
.* Go to CONTB to continue processing                                   00587000
.******************************************************************     00588000
.*                                                                      00589000
         AIF   ('&LV' EQ '').CONTB                                      00590000
.*                                                                      00591000
.******************************************************************     00592000
.* If the length value is in a register go to ISAREG to do the          00593000
.* processing to get it                                                 00594000
.******************************************************************     00595000
.*                                                                      00596000
         AIF   ('&LV'(1,1) EQ '(').ISAREG                               00597000
.*                                                                      00598000
.******************************************************************     00599000
.* If the length value is a symbol then go to CONTBB to                 00600000
.* continue processing.                                                 00601000
.******************************************************************     00602000
.*                                                                      00603000
         AIF   (T'&LV NE 'N').CONTBB                                    00604000
.*                                                                      00605000
.******************************************************************     00606000
.* If the length value is less than 4K (1 page) then continue           00607000
.* processing at label CONTAA                                           00608000
.*                                                                      00609000
.* Note that if the request is for less than 1 page, we can             00610000
.* quickly get the length into a register (with no storage access)      00611000
.* by treating the length as a displacement.                            00612000
.******************************************************************     00613000
.*                                                                      00614000
         AIF   (&LV LE 4095).CONTAA                                     00615000
.*                                                                      00616000
.******************************************************************     00617000
.* Special processing for a page or more. If a page or more is          00618000
.* requested, we must put the length in storage, move it into a         00619000
.* register and then move the register into the parameter list.         00620000
.******************************************************************     00621000
.*                                                                      00622000
.CONTBB  CNOP  0,4                                                      00623000
         B     *+8                     BRANCH AROUND LENGTH             00624000
         DC    A(&LV)                  LENGTH                           00625000
         MVC   0(4,1),*-4              MOVE LENGTH INTO LIST            00626000
.*                                                                      00627000
.******************************************************************     00628000
.* Unconditionally branch to CONTB to continue processing               00629000
.******************************************************************     00630000
.*                                                                      00631000
         AGO   .CONTB                                                   00632000
.*                                                                      00633000
.******************************************************************     00634000
.* Special processing for less than a page                              00635000
.******************************************************************     00636000
.*                                                                      00637000
.******************************************************************     00638000
.* Put the length value into register 14                                00639000
.******************************************************************     00640000
.*                                                                      00641000
.CONTAA  LA    14,&LV.(0,0)            PICK UP LENGTH                   00642000
         ST    14,0(0,1)               STORE INTO LIST                  00643000
.*                                                                      00644000
.******************************************************************     00645000
.* Unconditionally branch to CONTB to continue processing               00646000
.******************************************************************     00647000
.*                                                                      00648000
         AGO   .CONTB                                                   00649000
.*                                                                      00650000
.******************************************************************     00651000
.* Deal with the length being in a register                             00652000
.******************************************************************     00653000
.*                                                                      00654000
.ISAREG  ST    &LV(1),0(0,1)           STORE LENGTH IN LIST             00655000
.*                                                                      00656000
.******************************************************************     00657000
.* If the length address wasn't specified, go to CONTD to continue      00658000
.* processing.                                                          00659000
.******************************************************************     00660000
.*                                                                      00661000
.CONTB   AIF   ('&LA' EQ '').CONTD                                      00662000
.*                                                                      00663000
.******************************************************************     00664000
.* If the length address is in a register, go to ISAREGA to continue    00665000
.* processing.                                                          00666000
.******************************************************************     00667000
.*                                                                      00668000
         AIF   ('&LA'(1,1) EQ '(').ISAREGA                              00669000
.*                                                                      00670000
.******************************************************************     00671000
.* Otherwise, the length address is right there, just process           00672000
.* it                                                                   00673000
.******************************************************************     00674000
.*                                                                      00675000
         LA    14,&LA                  PICK UP LIST ADDRESS             00676000
         ST    14,0(0,1)               STORE IN PARAM LIST              00677000
.*                                                                      00678000
.******************************************************************     00679000
.* Unconditionally branch to CONTD to continue processing               00680000
.******************************************************************     00681000
.*                                                                      00682000
         AGO   .CONTD                                                   00683000
.*                                                                      00684000
.******************************************************************     00685000
.* Process getting the length address from the register.                00686000
.******************************************************************     00687000
.*                                                                      00688000
.ISAREGA ST    &LA(1),0(0,1)           STORE LA IN PARAM LIST           00689000
.*                                                                      00690000
.******************************************************************     00691000
.* If neither mode nor boundary was specified on the execute form       00692000
.* we have nothing to move into the parameter list. We use the values   00693000
.* put there by the list form.                                          00694000
.******************************************************************     00695000
.*                                                                      00696000
.CONTD   AIF   ('&MODE' EQ '' AND '&BNDRY' EQ '').CONTE                 00697000
         MVI   8(1),B'&L&V&CND&BND.0000'         SET MODE / BNDRY FLGS  00698000
.*                                                                      00699000
.******************************************************************     00700000
.* If the output address was not specified then continue                00701000
.* processing at CONTI                                                  00702000
.******************************************************************     00703000
.*                                                                      00704000
.CONTE   AIF   ('&A' EQ '').CONTI                                       00705000
.*                                                                      00706000
.******************************************************************     00707000
.* If the output address is in a register branch to ISAREGB to          00708000
.* process it.                                                          00709000
.******************************************************************     00710000
.*                                                                      00711000
         AIF   ('&A'(1,1) EQ '(').ISAREGB                               00712000
.*                                                                      00713000
.******************************************************************     00714000
.* Otherwise the address is right there for the taking so just          00715000
.* take it.                                                             00716000
.******************************************************************     00717000
.*                                                                      00718000
         LA    14,&A                   LOAD AREA LIST ADDRESS           00719000
         ST    14,4(0,1)               STORE INTO PARAM LIST            00720000
.*                                                                      00721000
.******************************************************************     00722000
.* Unconditionally branch to CONTI to continue processing               00723000
.******************************************************************     00724000
.*                                                                      00725000
         AGO   .CONTI                                                   00726000
.*                                                                      00727000
.******************************************************************     00728000
.* Process the obtaining of the output address when its in a            00729000
.* register.                                                            00730000
.******************************************************************     00731000
.*                                                                      00732000
.ISAREGB ST    &A(1),4(1,0)            STORE INTO PARAM LIST            00733000
.*                                                                      00734000
.******************************************************************     00735000
.* If subpool wasn't specfied, go to label FINI                         00736000
.* we are done modifying the parameter list built by the list           00737000
.* form.                                                                00738000
.******************************************************************     00739000
.*                                                                      00740000
.CONTI   AIF   ('&SP' EQ '').FINI                                       00741000
.*                                                                      00742000
.******************************************************************     00743000
.* If subpool is in a register, go to ISAREGC to get it out of there!   00744000
.******************************************************************     00745000
.*                                                                      00746000
         AIF   ('&SP'(1,1) EQ '(').ISAREGC                              00747000
.*                                                                      00748000
.******************************************************************     00749000
.* Else the subpool is ripe for the picking, just take it               00750000
.******************************************************************     00751000
.*                                                                      00752000
         MVI   9(1),&SP                STORE SUBPOOL VALUE              00753000
.*                                                                      00754000
.******************************************************************     00755000
.* Unconditionally branch to FINI, we are finished                      00756000
.******************************************************************     00757000
.*                                                                      00758000
         AGO   .FINI                                                    00759000
.*                                                                      00760000
.******************************************************************     00761000
.* Get the subpool out of the register and store it                     00762000
.******************************************************************     00763000
.*                                                                      00764000
.ISAREGC STC   &SP(1),9(1,0)           STORE SUBPOOL VALUE              00765000
.*                                                                      00766000
.******************************************************************     00767000
.* Unconditionally branch to FINI, we are finished with the             00768000
.* execute form.                                                        00769000
.******************************************************************     00770000
.*                                                                      00771000
         AGO   .FINI                                                    00772000
.*                                                                      00773000
.******************************************************************     00774000
.* LIST FORM PROCESSING                                                 00775000
.*                                                                      00776000
.* We create a parameter list in the caller's static storage below.     00777000
.* The list looks like this:                                            00778000
.*  Word 1 - Length value, or length list address, or 0.                00779000
.*  Word 2 - When GETMAIN is done, the address of the storage           00780000
.*           obtained will be placed at the storage location            00781000
.*           pointed to by this word.  This is 0 if the list form       00782000
.*           did not specify the 'A' parameter.                         00783000
.*  Word 3 -                                                            00784000
.*   Byte 1 - Flags                                                     00785000
.*   Byte 2 - Subpool.  This is zero if the list form did not           00786000
.*            specify the 'SP' parameter.                               00787000
.*                                                                      00788000
.* Notes:                                                               00789000
.* &NAME is used as a relocatable symbol that defines start of the      00790000
.* parameter list. This is needed so that a subsequent GETMAIN that     00791000
.* specifies MF=(E,&NAME) can find the parameter list created by a      00792000
.* list form GETMAIN.                                                   00793000
.******************************************************************     00794000
.*                                                                      00795000
.******************************************************************     00796000
.* If the length value wasn't specified, go to CONTJ to continue        00797000
.* processing                                                           00798000
.******************************************************************     00799000
.*                                                                      00800000
.LROUT   AIF   ('&LV' EQ  '').CONTJ                                     00801000
.*                                                                      00802000
.******************************************************************     00803000
.* Length value cannot be in a register on the list form of             00804000
.* this macro. Go to ERROR3 and no TV for the rest of the night.        00805000
.******************************************************************     00806000
.*                                                                      00807000
         AIF   ('&LV'(1,1) EQ '(').ERROR3                               00808000
.*                                                                      00809000
.******************************************************************     00810000
.* Start defining the parameter list in the caller's static storage.    00811000
.* The first word contains the length of storage requested.             00812000
.* &NAME is used as a relocatable symbol that defines start of the      00813000
.* parameter list. This is needed so that a subsequent GETMAIN that     00814000
.* specifies MF=(E,&NAME) can find the parameter list created by a      00815000
.* list form GETMAIN.                                                   00816000
.******************************************************************     00817000
.*                                                                      00818000
&NAME    DC    A(&LV)                  LENGTH                           00819000
.*                                                                      00820000
.******************************************************************     00821000
.* Branch unconditionally to CONTLL to continue processing.             00822000
.******************************************************************     00823000
.*                                                                      00824000
         AGO   .CONTLL                                                  00825000
.*                                                                      00826000
.******************************************************************     00827000
.* Processing for when no length value was specified                    00828000
.******************************************************************     00829000
.*                                                                      00830000
.******************************************************************     00831000
.* If the length address was also not specified, go to CONTK to         00832000
.* continue processing.                                                 00833000
.******************************************************************     00834000
.*                                                                      00835000
.CONTJ   AIF   ('&LA' EQ '').CONTK                                      00836000
.*                                                                      00837000
.******************************************************************     00838000
.* If the length address is in a register, thats an error!              00839000
.******************************************************************     00840000
.*                                                                      00841000
         AIF   ('&LA'(1,1) EQ '(').ERROR3                               00842000
.*                                                                      00843000
.******************************************************************     00844000
.* Otherwise the length address is there. Take it. Really, I mean       00845000
.* that.                                                                00846000
.* Note that this is the first thing in the parameter list.             00847000
.* &NAME is used as a relocatable symbol that defines start of the      00848000
.* parameter list. This is needed so that a subsequent GETMAIN that     00849000
.* specifies MF=(E,&NAME) can find the parameter list created by a      00850000
.* list form GETMAIN.                                                   00851000
.******************************************************************     00852000
.*                                                                      00853000
&NAME    DC    A(&LA)                  ADDRESS OF LENGTH LIST           00854000
.*                                                                      00855000
.******************************************************************     00856000
.* Branch unconditionally to CONTLL to continue processing              00857000
.******************************************************************     00858000
.*                                                                      00859000
         AGO   .CONTLL                                                  00860000
.*                                                                      00861000
.******************************************************************     00862000
.* Neither a length value nor a length address has been specified.      00863000
.* We must create a 'place holder' for the spot where the length value  00864000
.* or length list address would have gone.  Note that this is the       00865000
.* first thing in the parameter list.                                   00866000
.* &NAME is used as a relocatable symbol that defines start of the      00867000
.* parameter list. This is needed so that a subsequent GETMAIN that     00868000
.* specifies MF=(E,&NAME) can find the parameter list created by a      00869000
.* list form GETMAIN.                                                   00870000
.******************************************************************     00871000
.*                                                                      00872000
.CONTK   ANOP                                                           00873000
&NAME    DC   A(0)                     LA OR LU                         00874000
.*                                                                      00875000
.******************************************************************     00876000
.* If address wasn't specified then go to CONTM to continue             00877000
.* processing                                                           00878000
.******************************************************************     00879000
.*                                                                      00880000
.CONTLL  AIF   ('&A' EQ '').CONTM                                       00881000
.*                                                                      00882000
.******************************************************************     00883000
.* If the output address is listed as a register, this is an            00884000
.* error. It can only be an A-type address                              00885000
.******************************************************************     00886000
.*                                                                      00887000
         AIF   ('&A'(1,1) EQ '(').ERROR3                                00888000
         DC    A(&A)                   ADDR. OF ADDR. LIST              00889000
.*                                                                      00890000
.******************************************************************     00891000
.* This means the address must have been specified.                     00892000
.* Branch unconditionally to CONTN to continue processing.              00893000
.******************************************************************     00894000
.*                                                                      00895000
         AGO   .CONTN                                                   00896000
.*                                                                      00897000
.******************************************************************     00898000
.* The 'A' parameter was not specified.  Thus, we must create a 'place  00899000
.* holder' for the spot where the output address would have gone.       00900000
.******************************************************************     00901000
.*                                                                      00902000
.CONTM   DC    A(0)                    ADDR. OF ADDR. LIST              00903000
.*                                                                      00904000
.******************************************************************     00905000
.* Set the mode and options flags based on the information              00906000
.* we have been collecting.                                             00907000
.******************************************************************     00908000
.*                                                                      00909000
.CONTN   DC    BL1'&L&V&CND&BND.0000'  MODE AND OPTION FLAGS            00910000
.*                                                                      00911000
.******************************************************************     00912000
.* If the subpool wasn't specified then go to CONTU to set up           00913000
.* the default subpool.                                                 00914000
.******************************************************************     00915000
.*                                                                      00916000
         AIF   ('&SP' EQ '').CONTU                                      00917000
.*                                                                      00918000
.******************************************************************     00919000
.* Subpool can't be in a register, issue a message via ERROR3           00920000
.******************************************************************     00921000
.*                                                                      00922000
         AIF   ('&SP'(1,1) EQ '(').ERROR3                               00923000
.*                                                                      00924000
.******************************************************************     00925000
.* Put the subpool in the parm list.                                    00926000
.******************************************************************     00927000
.*                                                                      00928000
         DC    AL1(&SP)                SUBPOOL VALUE                    00929000
.*                                                                      00930000
.******************************************************************     00931000
.* Unconditionally branch to FINISH since we are done                   00932000
.* with list form processing                                            00933000
.******************************************************************     00934000
.*                                                                      00935000
         AGO   .FINISH                                                  00936000
.*                                                                      00937000
.******************************************************************     00938000
.* The 'SP' parameter was not specified.  Thus, we put a default        00939000
.* subpool value of 0 in the parm list.                                 00940000
.******************************************************************     00941000
.*                                                                      00942000
.CONTU   DC    AL1(0)                  SUBPOOL VALUE                    00943000
.*                                                                      00944000
.******************************************************************     00945000
.* EXIT - we are finished with the lst form (MF=L)                      00946000
.******************************************************************     00947000
.*                                                                      00948000
.FINISH  MEXIT                                                          00949000
.*                                                                      00950000
.******************************************************************     00951000
.* INTERNAL ROUTING - when the mf parameter is absent from the          00952000
.* getmain macro, we come thru here.                                    00953000
.******************************************************************     00954000
.*                                                                      00955000
.******************************************************************     00956000
.* If its a R mode (R, RU, RC) or VRU, VRC then go to RROUT             00957000
.******************************************************************     00958000
.*                                                                      00959000
.IROUT   AIF   ('&MODE'(1,1) EQ 'R' OR K'&MODE EQ 3).RROUT     @G860P30 00960000
.*                                                                      00961000
.******************************************************************     00962000
.* If its a P-type getmain go to PROUT                                  00963000
.******************************************************************     00964000
.*                                                                      00965000
         AIF   ('&MODE'(1,1) EQ 'P').PROUT                     @Z30EN9G 00966000
.*                                                                      00967000
.******************************************************************     00968000
.* If neither a length variable or length address was given             00969000
.* its an error. One or the other must be specified.                    00970000
.* Must be either EC or EU, VC or VU, LC or LU mode.                    00971000
.******************************************************************     00972000
.*                                                                      00973000
         AIF   ('&LV' EQ '' AND '&LA' EQ '').ERROR8                     00974000
.*                                                                      00975000
.******************************************************************     00976000
.*  Align on a word boundary                                            00977000
.******************************************************************     00978000
.*                                                                      00979000
         CNOP  0,4                                                      00980000
&NAME    BAL   1,*+14                  BRANCH AROUND LIST               00981000
.*                                                                      00982000
.******************************************************************     00983000
.* If no length variable was specified, branch to CNTA                  00984000
.* Start generating the parameter list.                                 00985000
.******************************************************************     00986000
.*                                                                      00987000
         AIF   ('&LV' EQ '').CNTA                                       00988000
.*                                                                      00989000
.******************************************************************     00990000
.* If the length variable is in a register, branch to CNTB              00991000
.******************************************************************     00992000
.*                                                                      00993000
         AIF   ('&LV'(1,1) EQ '(').CNTB                                 00994000
.*                                                                      00995000
.******************************************************************     00996000
.* Else the length is right there, just take it.                        00997000
.******************************************************************     00998000
.*                                                                      00999000
         DC    A(&LV)                  LENGTH                           01000000
         AGO   .CNTC                                                    01001000
.*                                                                      01002000
.******************************************************************     01003000
.* The 'LV' parameter has been passed in a register.                    01004000
.* Set aside some space in the parm list for where the length           01005000
.* goes.  We will store the register that contains the length           01006000
.* here.                                                                01007000
.******************************************************************     01008000
.*                                                                      01009000
.CNTB    DC    A(0)                    LENGTH                           01010000
.*                                                                      01011000
.******************************************************************     01012000
.* Set &B on to indicate that LV is in a register                       01013000
.******************************************************************     01014000
.*                                                                      01015000
&B       SETB  1                                                        01016000
.*                                                                      01017000
.******************************************************************     01018000
.* Unconditionally branch to CNTC                                       01019000
.******************************************************************     01020000
.*                                                                      01021000
         AGO   .CNTC                                                    01022000
.*                                                                      01023000
.******************************************************************     01024000
.* We get here when the Getmain specified the LA parameter rather       01025000
.* than the LV parameter.                                               01026000
.* Now check the LA parameter. If its in a register, go to CNTD         01027000
.******************************************************************     01028000
.*                                                                      01029000
.CNTA    AIF   ('&LA'(1,1) EQ '(').CNTD                                 01030000
.*                                                                      01031000
.******************************************************************     01032000
.* Otherwise, its just right there, take it                             01033000
.******************************************************************     01034000
.*                                                                      01035000
         DC    A(&LA)                  ADDR. OF LENGTH LIST             01036000
         AGO   .CNTC                                                    01037000
.*                                                                      01038000
.******************************************************************     01039000
.* The 'LA' parameter has been passed in a register.                    01040000
.* Set aside some spece in the parm list for where the length goes.     01041000
.* We will store the register that contains the address of length list  01042000
.* address here.                                                        01043000
.******************************************************************     01044000
.*                                                                      01045000
.CNTD    DC    A(0)                    ADDR. OF LENGTH LIST             01046000
.*                                                                      01047000
.******************************************************************     01048000
.* Set &B on to indicate that LA is in a register                       01049000
.******************************************************************     01050000
.*                                                                      01051000
&C       SETB  1                                                        01052000
.*                                                                      01053000
.******************************************************************     01054000
.* If A was not specified, its an error                                 01055000
.******************************************************************     01056000
.*                                                                      01057000
.CNTC    AIF   ('&A' EQ '').ERROR8                                      01058000
.*                                                                      01059000
.******************************************************************     01060000
.* If A is in a register, go to CNTE to get it                          01061000
.******************************************************************     01062000
.*                                                                      01063000
         AIF   ('&A'(1,1) EQ '(').CNTE                                  01064000
.*                                                                      01065000
.******************************************************************     01066000
.* Otherwise A is just right there. snatch it                           01067000
.******************************************************************     01068000
.*                                                                      01069000
         DC    A(&A)                  ADDR. OF ADDR. LIST               01070000
         AGO   .CNTF                                                    01071000
.*                                                                      01072000
.******************************************************************     01073000
.* The 'A' parameter has been passed in a register.  Set aside some     01074000
.* space in the parm list for where the address of the address-list     01075000
.* goes.  We will store the register that contains the address of the   01076000
.* address-list here.                                                   01077000
.******************************************************************     01078000
.*                                                                      01079000
.CNTE    DC    A(0)                    ADDR. OF ADDR. LIST              01080000
.*                                                                      01081000
.******************************************************************     01082000
.* Set &D to indicate that A is in a register                           01083000
.******************************************************************     01084000
.*                                                                      01085000
&D       SETB  1                                                        01086000
.*                                                                      01087000
.******************************************************************     01088000
.* Set a byte of mode and option flags                                  01089000
.******************************************************************     01090000
.*                                                                      01091000
.******************************************************************     01092000
.* Note that initialization of the &BOWN flags to 0's has made it       01093000
.* so that it is OK to use that variable even if OWNER cannot           01094000
.* truly be specified on this path.                                     01095000
.******************************************************************     01096000
.*                                                                      01097000
.CNTF    DC    BL1'&L&V&CND&BND.00&BOWN.'  MODE AND OPTION FLAGS   @L3A 01098000
.*                                                                      01099000
.******************************************************************     01100000
.* If no subpool was specified , then go to CNTL to continue            01101000
.******************************************************************     01102000
.*                                                                      01103000
         AIF   ('&SP' EQ '').CNTL                                       01104000
.*                                                                      01105000
.******************************************************************     01106000
.* If the subpool is in a register go to ISAREGQ to continue            01107000
.******************************************************************     01108000
.*                                                                      01109000
         AIF   ('&SP'(1,1) EQ '(').ISAREGQ                              01110000
.*                                                                      01111000
.******************************************************************     01112000
.* Otherwise, get the subpool , it was specified directly               01113000
.******************************************************************     01114000
.*                                                                      01115000
         DC    AL1(&SP)                SUBPOOL VALUE                    01116000
.*                                                                      01117000
.******************************************************************     01118000
.* Branch unconditionally to CNTM to continue                           01119000
.******************************************************************     01120000
.*                                                                      01121000
         AGO   .CNTM                                                    01122000
.*                                                                      01123000
.******************************************************************     01124000
.* Processing for when the subpool is in a register                     01125000
.******************************************************************     01126000
.*                                                                      01127000
.ISAREGQ DC    AL1(0)                  SUBPOOL VALUE                    01128000
.*                                                                      01129000
.******************************************************************     01130000
.* Store the subpool number in the parameter list                       01131000
.******************************************************************     01132000
.*                                                                      01133000
         STC   &SP(1),9(0,1)           STORE SUBPOOL IN LIST            01134000
.*                                                                      01135000
.******************************************************************     01136000
.* Unconditionally branch to CNTM to continue processing.               01137000
.******************************************************************     01138000
.*                                                                      01139000
         AGO   .CNTM                                                    01140000
.*                                                                      01141000
.******************************************************************     01142000
.* No subpool was specified so, set a default of 0                      01143000
.******************************************************************     01144000
.*                                                                      01145000
.CNTL    DC    AL1(0)                  SUBPOOL VALUE                    01146000
.*                                                                      01147000
.******************************************************************     01148000
.* If the LV value isn't in a register go to CNTN to process            01149000
.******************************************************************     01150000
.*                                                                      01151000
.CNTM    AIF   (NOT &B).CNTN                                            01152000
.*                                                                      01153000
.******************************************************************     01154000
.* Otherwise extract the value and store the length in the parameter    01155000
.* list                                                                 01156000
.******************************************************************     01157000
.*                                                                      01158000
         ST    &LV(1),0(0,1)           STORE LENGTH IN LIST             01159000
.*                                                                      01160000
.******************************************************************     01161000
.* Unconditionally branch to CNTO to continue processing                01162000
.******************************************************************     01163000
.*                                                                      01164000
         AGO   .CNTO                                                    01165000
.*                                                                      01166000
.******************************************************************     01167000
.* If the LA value isn't in a register go to CNTN to process            01168000
.******************************************************************     01169000
.*                                                                      01170000
.CNTN    AIF   (NOT &C).CNTO                                            01171000
.*                                                                      01172000
.******************************************************************     01173000
.* Otherwise extract the value and store it in the parameter list       01174000
.******************************************************************     01175000
.*                                                                      01176000
         ST    &LA(1),0(0,1)           STORE LA IN LIST                 01177000
.*                                                                      01178000
.******************************************************************     01179000
.* If A isn't in a register, go to FINI to continue processing          01180000
.******************************************************************     01181000
.*                                                                      01182000
.CNTO    AIF   (NOT &D).FINI                                            01183000
.*                                                                      01184000
.******************************************************************     01185000
.* Extract the A value and store it in the parameter list               01186000
.******************************************************************     01187000
.*                                                                      01188000
         ST    &A(1),4(0,1)            STORE IN PARAM LIST              01189000
.*                                                                      01190000
.******************************************************************     01191000
.* Unconditionally branch to FINI to finish processing                  01192000
.******************************************************************     01193000
.*                                                                      01194000
         AGO   .FINI                                                    01195000
.*                                                                      01196000
.******************************************************************     01197000
.* Internal P type routing - mode of the getmain is P                   01198000
.******************************************************************     01199000
.*                                                                      01200000
.PROUT   ANOP                                                  @Z30EN9G 01201000
.*                                                                      01202000
.******************************************************************     01203000
.* If subpool wasn't specified for this P type, its an error            01204000
.******************************************************************     01205000
.*                                                                      01206000
         AIF   ('&SP' EQ '').ERROR8                            @Z30EN9G 01207000
.*                                                                      01208000
.******************************************************************     01209000
.* If branch  wasn't specified for this P type, its an error            01210000
.******************************************************************     01211000
.*                                                                      01212000
         AIF   ('&BRANCH' EQ '').ERROR8                        @Z30EN9G 01213000
.*                                                                      01214000
.******************************************************************     01215000
.* Branch unconditionally to PROUT1 to continue P type processing       01216000
.******************************************************************     01217000
.*                                                                      01218000
         AGO   .PROUT1                                         @Z30EN9G 01219000
.*                                                                      01220000
.******************************************************************     01221000
.* R-mode GETMAIN (REGMAIN) OR RC, RU, VRC, OR VRU modes @G860P30       01222000
.* If address was specified, its an error. These forms of getmain       01223000
.* do not allow the caller to specify where the address of the          01224000
.* obtained storage should be saved. It is always put in register 1     01225000
.******************************************************************     01226000
.*                                                                      01227000
.RROUT   AIF   ('&A' NE '').ERROR9                                      01228000
.*                                                                      01229000
.******************************************************************     01230000
.* If Length value wasn't specified its an error                        01231000
.******************************************************************     01232000
.*                                                                      01233000
         AIF   ('&LV' EQ '').ERROR8                                     01234000
.*                                                                      01235000
.******************************************************************     01236000
.* If its RC or RU or VRC or VRU mode of getmain go to NREGM            01237000
.* to continue                                                          01238000
.******************************************************************     01239000
.*                                                                      01240000
         AIF   (K'&MODE EQ 2 OR K'&MODE EQ 3).NREGM            @G860P30 01241000
.*                                                                      01242000
.******************************************************************     01243000
.* Else its just a plain R mode which is SVC 10, set that variable      01244000
.******************************************************************     01245000
.*                                                                      01246000
&SVCN    SETA  10                                                       01247000
.*                                                                      01248000
.******************************************************************     01249000
.* If the R mode's length variable is in a register go to ISARGA        01250000
.* to continue processing                                               01251000
.******************************************************************     01252000
.*                                                                      01253000
         AIF   ('&LV'(1,1) EQ '(').ISARGA                               01254000
.*                                                                      01255000
.******************************************************************     01256000
.* If subpool wasn't specified, go to CTUA to continue processing       01257000
.******************************************************************     01258000
.*                                                                      01259000
         AIF   ('&SP' EQ '').CTUA                                       01260000
.*                                                                      01261000
.******************************************************************     01262000
.* P type and R type common code.                                       01263000
.******************************************************************     01264000
.*                                                                      01265000
.PROUT1  ANOP                                                  @Z30EN9G 01266000
.*                                                                      01267000
.******************************************************************     01268000
.* If subpool is in a register, go to ISARGB to continue processing     01269000
.******************************************************************     01270000
.*                                                                      01271000
         AIF   ('&SP'(1,1) EQ '(').ISARGB                               01272000
.*                                                                      01273000
.******************************************************************     01274000
.* Align on a word boundary ( this may be only historical, but I'm      01275000
.* not brave enough to delete it. In the paste the DC AL1 had to        01276000
.* be on a full word boundary for L 0,0(0,1) to work.                   01277000
.******************************************************************     01278000
.*                                                                      01279000
         CNOP  0,4                                                      01280000
.*                                                                      01281000
.******************************************************************     01282000
.* If mode is P go to PMODE to continue processing                      01283000
.* Getmain P gets a cell from VSMs internal cellpool so it never        01284000
.* needs a length.                                                      01285000
.******************************************************************     01286000
.*                                                                      01287000
         AIF   ('&MODE' EQ 'P').PMODE                          @Z30EN9G 01288000
.*                                                                      01289000
.******************************************************************     01290000
.* Fill the subpool value and length value into the parameter           01291000
.* list for the R mode getmain                                          01292000
.******************************************************************     01293000
.*                                                                      01294000
&NAME    BAL   1,*+8                   BRANCH AROUND SP+LV              01295000
         DC    AL1(&SP)                SUBPOOL VALUE                    01296000
         DC    AL3(&LV)                LENGTH                           01297000
         L     0,0(0,1)                LOAD SP AND LV                   01298000
.*                                                                      01299000
.******************************************************************     01300000
.* Branch unconditionally to FINI to finish                             01301000
.******************************************************************     01302000
.*                                                                      01303000
         AGO   .FINI                                                    01304000
.*                                                                      01305000
.******************************************************************     01306000
.* Fill the subpool value into the parameter list and put it where      01307000
.* it needs to go for the P mode getmain                                01308000
.******************************************************************     01309000
.*                                                                      01310000
.PMODE   ANOP                                                  @Z30EN9G 01311000
&NAME    LA    0,&SP.(0,0)             GET SUBPOOL             @Z30EN9G 01312000
         SLL   0,24(0)          SHIFT TO HIGH-ORDER BYTE       @Z30EN9G 01313000
         BAL   1,*+4            INDICATE GETMAIN               @Z30EN9G 01314000
.*                                                                      01315000
.******************************************************************     01316000
.* Branch unconditionally to FINI to finish                             01317000
.******************************************************************     01318000
.*                                                                      01319000
         AGO   .FINI                                           @Z30EN9G 01320000
.*                                                                      01321000
.******************************************************************     01322000
.* If the Length value isn't checkable (type is not numeric)            01323000
.* branch around the check                                              01324000
.* and go to CTUAA to continue processing.                              01325000
.* Recall that we only get here if no subpool was specified             01326000
.* when a subpool is specified, subpool and length are dealt with       01327000
.* together.                                                            01328000
.******************************************************************     01329000
.*                                                                      01330000
.CTUA    AIF   (T'&LV NE 'N').CTUAA                                     01331000
.*                                                                      01332000
.******************************************************************     01333000
.* If the length is less than a page, go to CONTCC to continue          01334000
.******************************************************************     01335000
.*                                                                      01336000
         AIF   (&LV LE 4095).CONTCC                                     01337000
.*                                                                      01338000
.******************************************************************     01339000
.* Length is a page or more or we can't tell what it is cause it        01340000
.* was specified as a symbol rather than a number, put it into          01341000
.* register 0. This is the "long way" (i.e. can't treat the length      01342000
.* as a displacement.                                                   01343000
.******************************************************************     01344000
.*                                                                      01345000
.CTUAA   CNOP  0,4                     ALIGN PARAMETER                  01346000
&NAME    BAL   1,*+8                   BRANCH AROUND LENGTH             01347000
         DC    A(&LV)                  LENGTH                           01348000
         L     0,0(0,1)                LOAD LENGTH                      01349000
.*                                                                      01350000
.******************************************************************     01351000
.* Branch to FINI to finish processing                                  01352000
.******************************************************************     01353000
.*                                                                      01354000
         AGO   .FINI                                                    01355000
.*                                                                      01356000
.******************************************************************     01357000
.* Length is less than a page put it in register 0 (the fast way)       01358000
.******************************************************************     01359000
.*                                                                      01360000
.CONTCC  ANOP                                                           01361000
&NAME    LA    0,&LV.(0,0)             LOAD LENGTH                      01362000
.*                                                                      01363000
.******************************************************************     01364000
.* Branch to NOP2 to continue processing                                01365000
.******************************************************************     01366000
.*                                                                      01367000
         AGO   .NOP2                                                    01368000
.*                                                                      01369000
.******************************************************************     01370000
.* Subpool is in a register. If mode is P then go to PMODE2 to          01371000
.* continue processing                                                  01372000
.******************************************************************     01373000
.*                                                                      01374000
.ISARGB  AIF   ('&MODE' EQ 'P').PMODE2                         @Z30EN9G 01375000
.*                                                                      01376000
.******************************************************************     01377000
.* If the length value isn't checkable, skip the check                  01378000
.* by going to CONTFF                                                   01379000
.******************************************************************     01380000
.*                                                                      01381000
         AIF   (T'&LV NE 'N').CONTFF                           @Z30EN9G 01382000
.*                                                                      01383000
.******************************************************************     01384000
.* If the length value is less than a page, then go to CONTEE           01385000
.* to continue processing                                               01386000
.******************************************************************     01387000
.*                                                                      01388000
         AIF   (&LV LE 4095).CONTEE                                     01389000
.*                                                                      01390000
.******************************************************************     01391000
.* Put the subpool and the length where they belong in register 0.      01392000
.******************************************************************     01393000
.*                                                                      01394000
.CONTFF  CNOP  0,4                     ALIGN LENGTH                     01395000
&NAME    BAL   1,*+8                   BRANCH AROUND LENGTH             01396000
         DC    A(&LV)                  LENGTH                           01397000
         LR    0,&SP(1)                GET SUBPOOL                      01398000
         SLL   0,24(0)                 SHIFT TO HI-ORDER BYTE           01399000
         O     0,0(0,1)                PACK SP AND LV                   01400000
.*                                                                      01401000
.******************************************************************     01402000
.* Unconditionally branch to FINI to finish processing                  01403000
.******************************************************************     01404000
.*                                                                      01405000
         AGO   .FINI                                                    01406000
.*                                                                      01407000
.******************************************************************     01408000
.* Its P mode and our subpool is in a register                          01409000
.******************************************************************     01410000
.*                                                                      01411000
.PMODE2  ANOP                                                  @Z30EN9G 01412000
.*                                                                      01413000
.******************************************************************     01414000
.* Its P mode and our subpool is in a register                          01415000
.* If its already in register 0, go to pmode3 to make sure its          01416000
.* in the right spot of register 0.                                     01417000
.******************************************************************     01418000
.*                                                                      01419000
         AIF   ('&SP(1)' EQ '0').PMODE3                        @Z30EN9G 01420000
.*                                                                      01421000
.******************************************************************     01422000
.* Else load it into register 0 and put it in the right place           01423000
.******************************************************************     01424000
.*                                                                      01425000
&NAME    LR    0,&SP(1)                GET SUBPOOL             @Z30EN9G 01426000
         CNOP  0,4                     ALIGN INSTR STREAM      @Z30EN9G 01427000
         SLL   0,24(0)                 MOVE TO HIGH BYTE       @Z30EN9G 01428000
         BAL   1,*+4                   INDICATE GETMAIN        @Z30EN9G 01429000
.*                                                                      01430000
.******************************************************************     01431000
.* Unconditionally branch to FINI to finish processing                  01432000
.******************************************************************     01433000
.*                                                                      01434000
         AGO   .FINI                                           @Z30EN9G 01435000
.*                                                                      01436000
.******************************************************************     01437000
.* Subpool is already in register 0, just make sure its in the          01438000
.* right spot                                                           01439000
.******************************************************************     01440000
.*                                                                      01441000
.PMODE3  ANOP                                                  @Z30EN9G 01442000
         CNOP  0,4                                             @Z30EN9G 01443000
&NAME    SLL   0,24(0)                 MOVE TO HIGH BYTE       @Z30EN9G 01444000
         BAL   1,*+4                   INDICATE GETMAIN        @Z30EN9G 01445000
.*                                                                      01446000
.******************************************************************     01447000
.* Unconditionally branch to FINI to finish processing                  01448000
.******************************************************************     01449000
.*                                                                      01450000
         AGO   .FINI                                           @Z30EN9G 01451000
.*                                                                      01452000
.******************************************************************     01453000
.* Length value is less than a page, get subpool and length and         01454000
.* put them where they belong in register 1.                            01455000
.******************************************************************     01456000
.*                                                                      01457000
.CONTEE  ANOP                                                           01458000
&NAME    LR    0,&SP(1)                PICK UP SUBPOOL                  01459000
         SLL   0,24(0)                 SHIFT TO HIGH BYTE               01460000
         LA    1,&LV.(0,0)             LOAD LENGTH                      01461000
         OR    0,1                     PACK SP AND LV                   01462000
.*                                                                      01463000
.******************************************************************     01464000
.* Unconditionally branch to NOP2 to finish processing                  01465000
.******************************************************************     01466000
.*                                                                      01467000
         AGO   .NOP2                                                    01468000
.*                                                                      01469000
.******************************************************************     01470000
.* Processing R-mode getmain.                                           01471000
.* The length variable is in a register. If that register is 0          01472000
.* then go to ZEROUT                                                    01473000
.******************************************************************     01474000
.*                                                                      01475000
.ISARGA  AIF   ('&LV(1)' EQ '0').ZEROUT                                 01476000
.*                                                                      01477000
.******************************************************************     01478000
.* If subpool wasn't specified then go to CTUB to continue              01479000
.* processing                                                           01480000
.******************************************************************     01481000
.*                                                                      01482000
         AIF   ('&SP' EQ '').CTUB                                       01483000
.*                                                                      01484000
.******************************************************************     01485000
.* If subpool is also in a register then go to ISARGC to continue       01486000
.* processing                                                           01487000
.******************************************************************     01488000
.*                                                                      01489000
         AIF   ('&SP'(1,1) EQ '(').ISARGC                               01490000
.*                                                                      01491000
.******************************************************************     01492000
.* Otherwise, subpool is right there for the taking, and the length     01493000
.* is already in a register other than 0, so take the subpool put       01494000
.* it in register 0 and or in the length                                01495000
.******************************************************************     01496000
.*                                                                      01497000
.*                                                                      01498000
.******************************************************************     01499000
.* Note that setting register 1 to a value less than 0 tells the        01500000
.* service routine that this is a getmain.                              01501000
.******************************************************************     01502000
.*                                                                      01503000
&NAME    LA    0,&SP.(0,0)             PICK UP SUBPOOL                  01504000
.NOP1    SLL   0,24(0)                 SHIFT TO HIGH BYTE               01505000
         OR    0,&LV(1)                PACK SP AND LV                   01506000
.NOP2    BAL   1,*+4                   INDICATE GETMAIN                 01507000
.*                                                                      01508000
.******************************************************************     01509000
.* Unconditionally branch to FINI to finish processing                  01510000
.******************************************************************     01511000
.*                                                                      01512000
         AGO   .FINI                                                    01513000
.*                                                                      01514000
.******************************************************************     01515000
.* Subpool wasn't specified, so just start dealing with the Length      01516000
.* (Its in a register)                                                  01517000
.* Put the length where it belongs in register 0                        01518000
.******************************************************************     01519000
.*                                                                      01520000
.CTUB    ANOP                                                           01521000
&NAME    LR    0,&LV(1)                LOAD LENGTH                      01522000
.*                                                                      01523000
.******************************************************************     01524000
.* Unconditionally branch to NOP2 to continue processing                01525000
.******************************************************************     01526000
.*                                                                      01527000
         AGO   .NOP2                                                    01528000
.*                                                                      01529000
.******************************************************************     01530000
.* Both length and subpool were given in a register. Put the subpool    01531000
.* in register 0 and                                                    01532000
.* branch back up to NOP1 to continue processing                        01533000
.******************************************************************     01534000
.*                                                                      01535000
.ISARGC  ANOP                                                           01536000
&NAME    LR    0,&SP(1)                PICK UP SUBPOOL                  01537000
         AGO   .NOP1                                                    01538000
.*                                                                      01539000
.******************************************************************     01540000
.* Processing R-mode getmain                                            01541000
.* The length variable is already in register 0.  If subpool            01542000
.* was specified, its an error.                                         01543000
.******************************************************************     01544000
.*                                                                      01545000
.ZEROUT  AIF   ('&SP' NE '').ERROR0                                     01546000
&NAME    BAL   1,*+4                   INDICATE GETMAIN                 01547000
.*                                                                      01548000
.******************************************************************     01549000
.* Unconditionally branch to FINI to finish processing                  01550000
.******************************************************************     01551000
.*                                                                      01552000
         AGO   .FINI                                                    01553000
.*                                                                      01554000
.******************************************************************     01555000
.* SVC 120 Getmain (RC, RU, VRC and VRU)                                01556000
.******************************************************************     01557000
.*                                                                      01558000
.NREGM   ANOP    RC AND RU modes OF GETMAIN                             01559000
&SVCN    SETA  120                SET THE SVC NUMBER                    01560000
.*                                                                      01561000
.******************************************************************     01562000
.* Set a variable to indicate whether this is an SVC 120 condional      01563000
.* request or an unconditional one. &UNCND will be on for               01564000
.* unconditional requests                                               01565000
.******************************************************************     01566000
.*                                                                      01567000
&UNCND   SETB  ('&MODE' EQ 'RU' OR '&MODE' EQ 'VRU') CONDL FLAG         01568000
.*                                                                      01569000
.******************************************************************     01570000
.* If its not branch entry go to COND to contiue processing             01571000
.******************************************************************     01572000
.*                                                                      01573000
         AIF   (NOT &BR).COND     CHECK FOR BRANCH ENTRY TO GETMAIN     01574000
.*                                                                      01575000
.******************************************************************     01576000
.* For branch entry getmain the parameter register should be 3.         01577000
.******************************************************************     01578000
.*                                                                      01579000
&PRG     SETA  3                  SET PARAMETER REG FOR BRANCH ENTRY    01580000
.*                                                                      01581000
.******************************************************************     01582000
.* If subpool wasn't specified then go to CREG1 to continue             01583000
.******************************************************************     01584000
.*                                                                      01585000
.COND    AIF   ('&SP' EQ '').CREG1                                      01586000
.*                                                                      01587000
.******************************************************************     01588000
.* Set a variable to indicate if the subpool is in a register           01589000
.******************************************************************     01590000
.*                                                                      01591000
&SPREG   SETB  ('&SP'(1,1) EQ '(')                                      01592000
.*                                                                      01593000
.******************************************************************     01594000
.* If key wasn't specified, then go to CREG01 to continue processing    01595000
.******************************************************************     01596000
.*                                                                      01597000
.CREG1   AIF   ('&KEY' EQ '').CREG01                                    01598000
.*                                                                      01599000
.*                                                            @P1D      01600000
.*                                                                      01601000
.******************************************************************     01602000
.* Set a variable to indicate if the key is in a register               01603000
.******************************************************************     01604000
.*                                                                      01605000
&KEYRG   SETB  ('&KEY'(1,1) EQ '(')                                     01606000
.CREG01  ANOP                                                           01607000
.*                                                                      01608000
.******************************************************************     01609000
.* Initialize these variables to 0                                      01610000
.******************************************************************     01611000
.*                                                                      01612000
&RL      SETB  0                                               @G860P30 01613000
&VA      SETB  0                                               @G860P30 01614000
&VB      SETB  0                                               @G860P30 01615000
&EXPL    SETB  0                                                   @L4A 01616000
&RLB     SETB  0                                                   @L4A 01617000
.*                                                                      01618000
.******************************************************************     01619000
.* If LOC wasn't supplied, then go to BYLOC1 to continue processing.    01620000
.* note that Not supplied and Resident are the same.                    01621000
.******************************************************************     01622000
.*                                                                      01623000
         AIF   ('&LOC' EQ '').BYLOC1 NOT SUPPL & RES ARE SAME  @G860P30 01624000
.*                                                                      01625000
.******************************************************************     01626000
.* Remember if EXPLICIT was specified as the first operand         @L4A 01627000
.******************************************************************     01628000
.*                                                                      01629000
&EXPL    SETB  ('&LOC(1)' EQ 'EXPLICIT')                           @L4A 01630000
.*                                                                      01631000
.******************************************************************     01632000
.* Ensure that INADDR was specified if first LOC parm is EXPLICIT  @L4A 01633000
.******************************************************************     01634000
.*                                                                      01635000
         AIF   (&EXPL AND '&INADDR' EQ '').ERROR39                 @P3C 01636000
.*                                                                      01637000
.******************************************************************     01638000
.* If more than 2 suboperands were given for LOC, its an error.         01639000
.* Go to Error20 to issue the nastygram.                                01640000
.******************************************************************     01641000
.*                                                                      01642000
         AIF   (N'&LOC GT 2).ERROR20 TWO SUBOPS MAX            @G860P30 01643000
.*                                                                      01644000
.******************************************************************     01645000
.* If only one suboperand was given, go to Byloc2 to continue           01646000
.* processing. They have taken the default of ANY for the second.       01647000
.******************************************************************     01648000
.*                                                                      01649000
         AIF   (N'&LOC EQ 1).BYLOC2                            @G860P30 01650000
.*                                                                      01651000
.******************************************************************     01652000
.* Since the second operand was specified, it must be ANY, or if   @L4C 01653000
.* the first operand is EXPLICIT, it can be BELOW. Issue           @L4A 01654000
.* an error message if its not.                                         01655000
.******************************************************************     01656000
.*                                                                      01657000
         AIF   ('&LOC(2)' NE 'ANY' AND                                 *01658000
               (NOT &EXPL OR '&LOC(2)' NE 'BELOW')).ERROR21        @L4C 01659000
.*                                                                      01660000
.******************************************************************     01661000
.* Caller specified LOC= (xxx,ANY) or LOC=(xxx,BELOW). Remember    @L4C 01662000
.* which one was specified.                                        @L4C 01663000
.******************************************************************     01664000
.*                                                                      01665000
&RL      SETB  ('&LOC(2)' EQ 'ANY')                                @L4C 01666000
&RLB     SETB  ('&LOC(2)' EQ 'BELOW')                              @L4A 01667000
.*                                                                      01668000
.******************************************************************     01669000
.* If a valid choice for the first loc suboperand wasn't given then     01670000
.* issue an error message.                                              01671000
.******************************************************************     01672000
.*                                                                      01673000
.BYLOC2  AIF   ('&LOC(1)' NE 'ANY' AND '&LOC(1)' NE 'BELOW' AND        *01674000
               '&LOC(1)' NE 'RES' AND                                  *01675000
               '&LOC(1)' NE 'EXPLICIT').ERROR22                    @L4C 01676000
.*                                                                      01677000
.******************************************************************     01678000
.* Set the virtual location bits. The combinations are based on the     01679000
.* first LOC operand as follows:                                        01680000
.* RES - 00                                                             01681000
.* BELOW - 01                                                           01682000
.* EXPLICIT - 10                                                        01683000
.* ANY - 11                                                             01684000
.******************************************************************     01685000
.*                                                                      01686000
&VA      SETB  ('&LOC(1)' EQ 'ANY' OR &EXPL)                       @L4C 01687000
&VB      SETB  ('&LOC(1)' EQ 'BELOW' OR '&LOC(1)' EQ 'ANY')        @L4C 01688000
.*                                                                      01689000
.******************************************************************     01690000
.* Caller wants real 'anywhere' if they specified LOC=(xxx,ANY) or      01691000
.* LOC=(ANY). Caller wants real below if they specified LOC=(BELOW) or  01692000
.* LOC=(EXPLICIT,BELOW). (Note, at this point, variable &RL is 1 if     01693000
.* a second operand of ANY was specified. &RLB is 1 if a second operand 01694000
.* of BELOW was specified)                                         @L4C 01695000
.******************************************************************     01696000
.*                                                                      01697000
&RL      SETB  (&RL OR '&LOC(1)' EQ 'ANY' OR                           *01698000
               ('&LOC(1)' EQ 'EXPLICIT' AND NOT &RLB))             @P2C 01699000
.BYLOC1  ANOP                                                  @G860P30 01700000
.*                                                                      01701000
.******************************************************************     01702000
.* Check INADDR parameter                                          @L4A 01703000
.*   EXPLICIT must have been specified for LOC                     @L4A 01704000
.*   GLOBAL branch entry is not allowed                            @L4A 01705000
.*   BNDRY is not allowed                                          @L4A 01706000
.*   OWNER is not allowed                                          @L4A 01707000
.* Also, remember if INADDR is in a register                       @L4A 01708000
.******************************************************************     01709000
.*                                                                      01710000
         AIF   ('&INADDR' EQ '').NOINADR                           @L4A 01711000
         AIF   ('&LOC' EQ '').ERROR32                              @P3A 01712000
         AIF   (NOT &EXPL).ERROR35                                 @P3C 01713000
         AIF   (&GLBR).ERROR36                                     @L4A 01714000
         AIF   ('&BNDRY' NE '').ERROR37                            @L4A 01715000
         AIF   ('&OWNER' NE '').ERROR38                            @P3A 01716000
&INAREG  SETB  ('&INADDR'(1,1) EQ '(')                             @L4A 01717000
.NOINADR ANOP                                                      @L4A 01718000
.*                                                                      01719000
.******************************************************************     01720000
.* If both the subpool and key are in registers, set a bit              01721000
.******************************************************************     01722000
.*                                                                      01723000
&B       SETB  (&SPREG AND &KEYRG)                                      01724000
.*                                                                      01725000
.******************************************************************     01726000
.* Go to PASS1 to do 2 character mode processing                        01727000
.******************************************************************     01728000
.*                                                                      01729000
         AIF   (K'&MODE EQ 2).PASS1                            @G860P30 01730000
.*                                                                      01731000
.******************************************************************     01732000
.* VRC and VRU mode request processing                                  01733000
.******************************************************************     01734000
.*                                                                      01735000
.*                                                                      01736000
.******************************************************************     01737000
.* We need a max and a min, if we don't have both, issue an             01738000
.* error message.                                                       01739000
.******************************************************************     01740000
.*                                                                      01741000
         AIF   (N'&LV NE 2).ERROR30                            @G860P30 01742000
.*                                                                      01743000
.******************************************************************     01744000
.* Set the variable MAX to contain the maximum                          01745000
.******************************************************************     01746000
.*                                                                      01747000
&MAX     SETC  '&LV(1)'                                        @G860P30 01748000
.*                                                                      01749000
.******************************************************************     01750000
.* Set the variable MIN to contain the minimum                          01751000
.******************************************************************     01752000
.*                                                                      01753000
&MIN     SETC  '&LV(2)'                                        @G860P30 01754000
.*                                                                      01755000
.******************************************************************     01756000
.* Max is required!!!!!!!!!!                                            01757000
.******************************************************************     01758000
.*                                                                      01759000
         AIF   ('&MAX' EQ '').ERROR31 MAXIMUM IS REQUIRED      @G860P30 01760000
.*                                                                      01761000
.******************************************************************     01762000
.* Set a bit to indicate if the Maximum was given in a register         01763000
.******************************************************************     01764000
.*                                                                      01765000
&MAXRG   SETB  ('&MAX'(1,1) EQ '(')   MAX IN A REG             @G860P30 01766000
.*                                                                      01767000
.******************************************************************     01768000
.* Minimum can be defaulted                                             01769000
.******************************************************************     01770000
.*                                                                      01771000
         AIF   ('&MIN' EQ '').PASS2   MINIMUM CAN BE DEFAULTED @G860P30 01772000
.*                                                                      01773000
.******************************************************************     01774000
.* Set a bit to indicate if the Minimum was given in a register         01775000
.******************************************************************     01776000
.*                                                                      01777000
&MINRG   SETB  ('&MIN'(1,1) EQ '(')   MINIMUM IN A REG         @G860P30 01778000
.*                                                                      01779000
.******************************************************************     01780000
.* Branch unconditionally to PASS3 to continue processing               01781000
.******************************************************************     01782000
.*                                                                      01783000
         AGO   .PASS3                                          @G860P30 01784000
.*                                                                      01785000
.******************************************************************     01786000
.* Set up default for the minimum as 8 bytes not specified in a         01787000
.* register                                                             01788000
.******************************************************************     01789000
.*                                                                      01790000
.PASS2   ANOP                                                  @G860P30 01791000
&MIN     SETC  '8'                DEFAULT MINIMUM LENGTH       @G860P30 01792000
&MINRG   SETB  0                  MIN NOT IN A REG             @G860P30 01793000
.*                                                                      01794000
.******************************************************************     01795000
.* Generate code to branch past the static storage we will need to      01796000
.* move items from where the caller put them to where the getmain       01797000
.* service routine expects to find them. The most we will need is       01798000
.* 16 bytes. We don't need static storage for some items if they        01799000
.* are already in registers. For example, If the max length is in       01800000
.* a register already, we only need 16-4 bytes. If the minimum size     01801000
.* is also in a register, we will only need 16-4-4 bytes.               01802000
.******************************************************************     01803000
.*                                                                      01804000
.PASS3   CNOP  0,4                ALIGN DATA ON FULLWORD BDY   @G860P30 01805000
&NAME    B     *+16-4*&MAXRG-4*&MINRG-2*&B BRANCH PAST DATA    @G860P30 01806000
.*                                                                      01807000
.******************************************************************     01808000
.* Start to generate static storage area that we need to move input     01809000
.* Data from where caller provides it to where getmain expects it       01810000
.******************************************************************     01811000
.*                                                                      01812000
.*                                                                      01813000
.******************************************************************     01814000
.* If the maximum is in a reg, go to PASS4                              01815000
.******************************************************************     01816000
.*                                                                      01817000
         AIF   (&MAXRG).PASS4     MAX IN A REG                 @G860P30 01818000
.*                                                                      01819000
.******************************************************************     01820000
.* Else the max was specified directly, just take it.                   01821000
.******************************************************************     01822000
.*                                                                      01823000
         DC    A(&MAX)            MAXIMUM LENGTH               @G860P30 01824000
.*                                                                      01825000
.******************************************************************     01826000
.* If the minimum is in a reg, go to PASS5                              01827000
.******************************************************************     01828000
.*                                                                      01829000
.PASS4   AIF   (&MINRG).PASS5     MIN IN A REG                 @G860P30 01830000
.*                                                                      01831000
.******************************************************************     01832000
.* Else the min was specified directly, just take it.                   01833000
.******************************************************************     01834000
.*                                                                      01835000
         DC    A(&MIN)            MINIMUM LENGTH               @G860P30 01836000
.*                                                                      01837000
.******************************************************************     01838000
.* Processing is complete for the VRU and VRC modes, go to CREG11       01839000
.******************************************************************     01840000
.*                                                                      01841000
.PASS5   AGO   .CREG11            PROCESSING COMPLETED         @G860P30 01842000
.PASS1   ANOP                     HANDLE RC/RU modes           @G860P30 01843000
.*                                                                      01844000
.******************************************************************     01845000
.* RC and RU request processing                                         01846000
.******************************************************************     01847000
.*                                                                      01848000
.*                                                                      01849000
.******************************************************************     01850000
.* If the length variable is in a register, set a bit to indicate       01851000
.* that                                                                 01852000
.******************************************************************     01853000
.*                                                                      01854000
&LVREG   SETB  ('&LV'(1,1) EQ '(')                                      01855000
.*                                                                      01856000
.******************************************************************     01857000
.* Align data on a fullword boundary                                    01858000
.******************************************************************     01859000
.*                                                                      01860000
         CNOP  0,4                                                      01861000
&NAME    B     *+12-4*&LVREG-2*&B BRANCH AROUND DATA                    01862000
.*                                                                      01863000
.******************************************************************     01864000
.* If the length variable is in a register, then go to CREG11 to        01865000
.* continue processing.                                                 01866000
.******************************************************************     01867000
.*                                                                      01868000
         AIF   (&LVREG).CREG11                                          01869000
.*                                                                      01870000
.******************************************************************     01871000
.* Else, just extract the length                                        01872000
.******************************************************************     01873000
.*                                                                      01874000
         DC    A(&LV)             LENGTH                                01875000
.CREG11  ANOP                                                           01876000
.*                                                                      01877000
.******************************************************************     01878000
.* If the key was not specified, refrain from setting the bit           01879000
.* that says it was specified.                                          01880000
.******************************************************************     01881000
.*                                                                      01882000
         AIF   ('&KEY' EQ '').NOKEY1                           @P1A     01883000
.*                                                                      01884000
.******************************************************************     01885000
.* Key was specified, so remember it.  (This makes it easy to           01886000
.* give the 'key-specified' bit the proper value in a DC                01887000
.* instruction.)                                               @P1C     01888000
.******************************************************************     01889000
.*                                                                      01890000
&KYSPC   SETB 1                                                @L2A     01891000
.NOKEY1  ANOP                                                  @P1A     01892000
.*                                                                      01893000
.******************************************************************     01894000
.* Start generating a 'pseudo parmlist' in the invoking                 01895000
.* program's static storage.  Register 15 will eventually be            01896000
.* loaded with the values contained here.                      @P1C     01897000
.******************************************************************     01898000
.*                                                                      01899000
&GNAME.F DC    BL1'0&KYSPC.0000&BOWN.' Flags.                      @L3A 01900000
.*                                                                      01901000
.******************************************************************     01902000
.* If key wasn't specified, then we set aside space for it so we can    01903000
.* easily load up register 15 later.                                    01904000
.******************************************************************     01905000
.*                                                                      01906000
         AIF   ('&KEY' EQ '').CREG1A  KEY OMITTED                       01907000
.*                                                                      01908000
.******************************************************************     01909000
.* If key is in a register, we do not set aside any space for it.       01910000
.* We do this because later we will put the key in the 2d byte of       01911000
.* reg 15 (xx xK xx xx), and then use an ICM instruction to fill in     01912000
.* the other bytes ( BB xK BB BB).  The ICM moves 3 contigious          01913000
.* bytes from storage to the register, so we don't want to set          01914000
.* aside any space for the key.                                         01915000
.******************************************************************     01916000
.*                                                                      01917000
         AIF   (&KEYRG).CREG1B    KEY IN REGISTER                       01918000
.*                                                                      01919000
.******************************************************************     01920000
.* Otherwise key was given, just take it and move the 4-bit key         01921000
.* to the high nibble.                                                  01922000
.******************************************************************     01923000
.*                                                                      01924000
         DC    AL1(&KEY*16)       STORAGE KEY                           01925000
.*                                                                      01926000
.******************************************************************     01927000
.* We are all done with the key, move on to the next parameter.         01928000
.******************************************************************     01929000
.*                                                                      01930000
         AGO   .CREG1B                                                  01931000
.*                                                                      01932000
.******************************************************************     01933000
.* Reserve the space that the key would have taken up                   01934000
.******************************************************************     01935000
.*                                                                      01936000
.CREG1A  DC    AL1(0)             RESERVED                              01937000
.*                                                                      01938000
.******************************************************************     01939000
.* If subpool wasn't specified then go to SPNULL1 to continue           01940000
.******************************************************************     01941000
.*                                                                      01942000
.CREG1B  AIF   ('&SP' EQ '').SPNULL1  SUBPOOL OMITTED                   01943000
.*                                                                      01944000
.******************************************************************     01945000
.* If subpool is in a register go to CREG1C to continue                 01946000
.******************************************************************     01947000
.*                                                                      01948000
         AIF   (&SPREG).CREG1C    SUBPOOL IN REGISTER                   01949000
.*                                                                      01950000
.******************************************************************     01951000
.* Else its just right there for the taking                             01952000
.******************************************************************     01953000
.*                                                                      01954000
         DC    AL1(&SP)           SUBPOOL                               01955000
.*                                                                      01956000
.******************************************************************     01957000
.* Unconditionally branch to CREG1C                                     01958000
.******************************************************************     01959000
.*                                                                      01960000
         AGO   .CREG1C                                                  01961000
.*                                                                      01962000
.******************************************************************     01963000
.* Reserve the space that the subpool would have taken up.              01964000
.******************************************************************     01965000
.*                                                                      01966000
.SPNULL1 DC    AL1(0)             SUBPOOL                               01967000
.*                                                                      01968000
.******************************************************************     01969000
.* Fill in the mode byte                                                01970000
.******************************************************************     01971000
.*                                                                      01972000
.CREG1C  DC    BL1'0&RL&VA&VB&V&BND&UNCND.0' MODE BYTE         @G860P30 01973000
         AIF   (K'&MODE EQ 2).PASS6                            @G860P30 01974000
.*                                                                      01975000
.******************************************************************     01976000
.* Handle VRC and VRU length operand                                    01977000
.******************************************************************     01978000
.*                                                                      01979000
.*                                                                      01980000
.******************************************************************     01981000
.* If both max and min are in registers go to PASS10                    01982000
.******************************************************************     01983000
.*                                                                      01984000
         AIF   (&MAXRG AND &MINRG).PASS10                      @G860P30 01985000
.*                                                                      01986000
.******************************************************************     01987000
.* If either max or min is in a register go to PASS7                    01988000
.******************************************************************     01989000
.*                                                                      01990000
         AIF   (&MAXRG OR &MINRG).PASS7                        @G860P30 01991000
.*                                                                      01992000
.******************************************************************     01993000
.* Neither maximum length nor minimum length are in regs                01994000
.******************************************************************     01995000
.*                                                                      01996000
         LM    0,1,*-12+2*&B      LOAD MAX AND MIN LENGTHS     @G860P30 01997000
         AGO   .PASS9             DONE                         @G860P30 01998000
.*                                                                      01999000
.******************************************************************     02000000
.* Both maximum length and minimum length are in regs                   02001000
.******************************************************************     02002000
.*                                                                      02003000
.PASS10  AIF   ('&MAX' EQ '(0)').PASS11                        @G860P30 02004000
         LR    0,&MAX             LOAD MAXIMUM LENGTH          @G860P30 02005000
.PASS11  AIF   ('&MIN' EQ '(1)').PASS9                         @G860P30 02006000
         LR    1,&MIN             LOAD MINIMUM LENGTH          @G860P30 02007000
         AGO   .PASS9             DONE                         @G860P30 02008000
.*                                                                      02009000
.******************************************************************     02010000
.* Either the maximum or minimum length are in regs                     02011000
.******************************************************************     02012000
.*                                                                      02013000
.PASS7   AIF   (&MAXRG).PASS8                                  @G860P30 02014000
         L     0,*-8+2*&B         LOAD MAXIMUM LENGTH          @G860P30 02015000
         AIF   ('&MIN' EQ '1').PASS9   MIN IN RIGHT REG        @G860P30 02016000
         LR    1,&MIN             LOAD MINIMUM LENGTH          @G860P30 02017000
         AGO   .PASS9                                          @G860P30 02018000
.PASS8   L     1,*-8+2*&B         LOAD MINIMUM LENGTH          @G860P30 02019000
         AIF   ('&MAX' EQ '0').PASS9                           @G860P30 02020000
         LR    0,&MAX             LOAD MAXIMUM LENGTH          @G860P30 02021000
.PASS9   AGO   .CREG1M                                             @L4C 02022000
.PASS6   ANOP                                                  @G860P30 02023000
.*                                                                      02024000
.******************************************************************     02025000
.* Handle the length parameter for RC and RU modes.  If the length was  02026000
.* passed in a register go to CREG1Z to continue processing             02027000
.******************************************************************     02028000
.*                                                                      02029000
         AIF   (&LVREG).CREG1Z                                     @L4C 02030000
         L     0,*-8+2*&B         LOAD LENGTH                           02031000
         AGO   .CREG1M                                             @L4C 02032000
.*                                                                      02033000
.******************************************************************     02034000
.* Get the length variable out of the register it was given in and      02035000
.* put it in register 0.                                                02036000
.******************************************************************     02037000
.*                                                                      02038000
.CREG1Z  AIF   ('&LV(1)' EQ '0').CREG1M                            @L4C 02039000
         LR    0,&LV(1)           LOAD LENGTH                  @ZA07133 02040000
.*                                                                      02041000
.******************************************************************     02042000
.* If INADDR specified, load the input address into register 1     @L4A 02043000
.******************************************************************     02044000
.*                                                                      02045000
.CREG1M  AIF   ('&INADDR' EQ '').CREG1D                            @L4A 02046000
         AIF   (&INAREG).CREG1L                                    @L4A 02047000
         L     1,&INADDR(1)       LOAD INPUT ADDRESS               @L4A 02048000
         AGO   .CREG1D                                             @L4A 02049000
.CREG1L  ANOP                                                      @L4A 02050000
         AIF   ('&INADDR(1)' EQ '1').CREG1D                        @L4A 02051000
         LR    1,&INADDR(1)       LOAD INPUT ADDRESS               @L4A 02052000
.*                                                                      02053000
.******************************************************************     02054000
.* If either the key or the subpool was                                 02055000
.* specified in a register, go to KORSREG to continue processing        02056000
.******************************************************************     02057000
.*                                                                      02058000
.CREG1D  AIF   (&KEYRG OR &SPREG).KORSREG                               02059000
.*                                                                      02060000
.******************************************************************     02061000
.* Neither key or subpool is in a register, so just load all of         02062000
.* the getmain parameters into the parameter register.                  02063000
.******************************************************************     02064000
.*                                                                      02065000
         L     &PRG.,&GNAME.F                    LOAD GETMAIN PARMS     02066000
         AGO   .LVCHK                                                   02067000
.*                                                                      02068000
.******************************************************************     02069000
.* Either the key or the subpool is in a register. Check if they        02070000
.* both are.                                                            02071000
.******************************************************************     02072000
.*                                                                      02073000
.KORSREG AIF   (&KEYRG AND &SPREG).BOTHREG                              02074000
.*                                                                      02075000
.******************************************************************     02076000
.* Only one of them is a register, if its not the subpool go to         02077000
.* KEYRG cause it must be the key                                       02078000
.*****************************************************************      02079000
.*                                                                      02080000
         AIF   (NOT &SPREG).KEYREG                                      02081000
.*                                                                      02082000
.******************************************************************     02083000
.* Only Subpool is in a register, if its in the parameter register      02084000
.* already, go to SPINPRG to continue processing                        02085000
.*****************************************************************      02086000
.*                                                                      02087000
         AIF   ('&SP(1)' EQ '&PRG').SPINPRG                             02088000
.*                                                                      02089000
.******************************************************************     02090000
.* Subpool is not in the parm register so put it there                  02091000
.* and throw a few other things in while we're at it.                   02092000
.*****************************************************************      02093000
.*                                                                      02094000
         LR    &PRG.,&SP(1)                      OBTAIN SUBPOOL ID      02095000
.SPINPRG SLL   &PRG.,8(0)                 MOVE SUBPOOL TO BYTE 2 YM1995 02096000
         ICM   &PRG.,13,&GNAME.F                 ADD REMAINING PARMS    02097000
.*                                                                      02098000
.******************************************************************     02099000
.* Subpool and key stuff is done branch to LVCHK to continue            02100000
.*****************************************************************      02101000
.*                                                                      02102000
         AGO   .LVCHK                                                   02103000
.*                                                                      02104000
.******************************************************************     02105000
.* Only key is a register, if its in the parameter register             02106000
.* go to KYINPRG to continue processing                                 02107000
.*****************************************************************      02108000
.*                                                                      02109000
.KEYREG  AIF   ('&KEY(1)' EQ '&PRG').KYINPRG                            02110000
.*                                                                      02111000
.******************************************************************     02112000
.* Key is not in the parameter register, so put it there and add        02113000
.* some other parms.                                                    02114000
.*****************************************************************      02115000
.*                                                                      02116000
         LR    &PRG.,&KEY(1)                     GET STORAGE KEY        02117000
.KYINPRG SLL   &PRG.,16(0)                   SHIFT KEY TO BYTE 1 YM1995 02118000
         ICM   &PRG.,11,&GNAME.F                 ADD REMAINING PARMS    02119000
.*                                                                      02120000
.******************************************************************     02121000
.* Subpool and key stuff is done branch to LVCHK to continue            02122000
.*****************************************************************      02123000
.*                                                                      02124000
         AGO      .LVCHK                                                02125000
.*                                                                      02126000
.******************************************************************     02127000
.* Both key and subpool are in registers                                02128000
.*****************************************************************      02129000
.*                                                                      02130000
.BOTHREG AIF   ('&KEY(1)' NE '&SP(1)').NOTSAME                          02131000
.*                                                                      02132000
.******************************************************************     02133000
.* Both key and subpool are in the same register                        02134000
.* The register must look like this. xxK0SSxx where each letter         02135000
.* represents 1 hex digit. 'x' can be any value, 'K' contains           02136000
.* the 4 bit key and 'SS' is the 1 byte subpool.                        02137000
.*****************************************************************      02138000
.*                                                                      02139000
         AIF   ('&KEY(1)' EQ '&PRG').BOTHPRG                            02140000
.*                                                                      02141000
.******************************************************************     02142000
.* The common register is not the  parm register.                       02143000
.*****************************************************************      02144000
.*                                                                      02145000
         LR    &PRG.,&KEY(1)                     GET STORAGE KEY        02146000
.BOTHPRG ICM   &PRG.,9,&GNAME.F                  ADD REMAINING PARMS    02147000
.*                                                                      02148000
.******************************************************************     02149000
.* Subpool and key stuff is done branch to LVCHK to continue            02150000
.*****************************************************************      02151000
.*                                                                      02152000
         AGO   .LVCHK                                                   02153000
.*                                                                      02154000
.******************************************************************     02155000
.* Both are in registers, but they are different registers.             02156000
.*****************************************************************      02157000
.*                                                                      02158000
.NOTSAME AIF   ('&KEY(1)' EQ '&PRG' OR '&SP(1)' EQ '&PRG').PRGIS1       02159000
.*                                                                      02160000
.******************************************************************     02161000
.* Neither register is the  parm register.                              02162000
.*****************************************************************      02163000
.*                                                                      02164000
         LR    &PRG.,&KEY(1)                     GET STORAGE KEY        02165000
.ADDSP   SLL   &PRG.,8(0)                  SHIFT KEY OVER FOR SP YM1995 02166000
         OR    &PRG.,&SP(1)                      ADD SUBPOOL NUMBER     02167000
         SLL   &PRG.,8(0)                 MOVE PAIR TO BYTES 1-2 YM1995 02168000
         AGO   .BOTHPRG                                                 02169000
.PRGIS1  AIF   ('&KEY(1)' EQ '&PRG').ADDSP                              02170000
.*                                                                      02171000
.******************************************************************     02172000
.* Subpool in in the parm register.                                     02173000
.*****************************************************************      02174000
.*                                                                      02175000
         SLL   &PRG.,8(0)                 MOVE SUBPOOL TO BYTE 2 YM1995 02176000
         SLL   &KEY(1),16(0)                 SHIFT KEY TO BYTE 1 YM1995 02177000
         OR    &PRG.,&KEY(1)           COMBINE KEY & SP                 02178000
         SRL   &KEY(1),16(0)                 RESTORE KEY BACK  @YA30573 02179000
         AGO   .BOTHPRG                                                 02180000
.LVCHK   ANOP                                                  @ZA07133 02181000
.*                                                                3@P1D 02182000
.*--------------------------------------------------------------------- 02183000
.********************************************************************** 02184000
.* All interface parameters have been put where GETMAIN service         02185000
.* routines expect to find them.  The section that follows finds and    02186000
.* branches to the proper VSM entry point.                              02187000
.********************************************************************** 02188000
.*--------------------------------------------------------------------- 02189000
.*                                                                      02190000
.FINI    AIF   ('&MODE' NE 'RC' AND '&MODE' NE 'RU'                    *02191000
                OR &EXPL).FINI1                                    @L4C 02192000
         SR    1,1                     ZERO RESERVED REG 1              02193000
.********************************************************************** 02194000
.* If its branch entry, go to SETBE else issue the SVC                  02195000
.********************************************************************** 02196000
.FINI1   AIF   (&BR).SETBE             TEST FOR BRANCH=YES              02197000
.********************************************************************** 02198000
.* Issue the SVC                                                        02199000
.********************************************************************** 02200000
* R14 is used as work register for the SIMSVC                  @D61ADTN 02201000
         SIMSVC WR=(14)            ISSUE VSE/ESA GETMAIN SVC   @D61ADTN 02202000
         SVC   &SVCN                   ISSUE GETMAIN SVC                02203000
         MEXIT                                                          02204000
.********************************************************************** 02205000
.* Handle branch entry.  The CVT contains pointers to various VSM       02206000
.* entry points (e.g., SVC 120 local branch, SVC 4 branch, ...).        02207000
.********************************************************************** 02208000
.SETBE   L     15,16(0,0)         ADDRESS OF CVT               @G860P30 02209000
         AIF   ('&MODE' EQ 'P').CBBE                           @Z30EN9G 02210000
         AIF   (&SVCN EQ 120).CRBE                                      02211000
         AIF   (&SVCN EQ 10).RMBE                                       02212000
.********************************************************************** 02213000
.* Entry point for list form branch entry                               02214000
.********************************************************************** 02215000
         L     15,848(0,15)       CVTGMBR ENTRY ADDRESS        @G860P30 02216000
         AGO   .SBE                                                     02217000
.********************************************************************** 02218000
.* Entry point for VSM internal cellpool processing.                    02219000
.********************************************************************** 02220000
.CBBE    ANOP                                                  @Z30EN9G 02221000
         L     15,972(0,15)       CVTCBBR ENTRY POINT          @G860P30 02222000
         AGO   .SBE                                            @Z30EN9G 02223000
.********************************************************************** 02224000
.* Entry point for 'R' mode branch entry. (SVC 10 branch entry)         02225000
.********************************************************************** 02226000
.RMBE    L     15,840(0,15)       CVTRMBR ENTRY POINT          @G860P30 02227000
         AGO   .SBE                                                     02228000
.********************************************************************** 02229000
.*                                                                      02230000
.* SVC 120 branch entry.                                                02231000
.*                                                                      02232000
.* The code below finds the address of the VSM entry point that must    02233000
.* be branched to.  This path is used by SVC 120 eqivalent branch       02234000
.* entry requests (local and global).  Callers in AR ASC mode are       02235000
.* allowed to use this interface to obtain global storage or to obtain  02236000
.* storage from the primary address space.  This is made possible by    02237000
.* the 'SAC 0', which causes ARs to be ignored.  (VSM will not work if  02238000
.* ARs are active.)  Note that the 'SAC 0' must appear                  02239000
.* before register 15 is used as a base register because there is no    02240000
.* guarantee that AR 15 is set up properly.  (Using reg 15 as a base    02241000
.* register without a valid ALET in AR 15 will cause a program          02242000
.* check.)                                                              02243000
.*                                                                      02244000
.****************************************************************  @D1A 02245000
.CRBE    ANOP                                                      @D1C 02246000
         AIF ('&SYSASCE' EQ 'P').SKIPSW1  If we are already in     @D1A 02247000
.*                                primary ASC mode, do not         @D1A 02248000
.*                                produce a SAC to switch to       @D1A 02249000
.*                                primary.  (That is, skip the     @D1A 02250000
.*                                switch.)                         @D1A 02251000
         SAC   0                  Switch to primary ASC mode.      @D1A 02252000
.SKIPSW1 ANOP                                                      @D1A 02253000
         AIF   (&GLBR).GLBE       Global branch entry ?            @D1C 02254000
.*                                                                 @D1A 02255000
.* Find the SVC 120 equivalent local branch entry point.           @D1A 02256000
.*                                                                 @D1A 02257000
         L     15,504(0,15)       CVTCRMN ENTRY POINT          @G860P30 02258000
         AGO   .S120BE                                             @D1C 02259000
.*                                                                      02260000
.* Find the Global Work/Save Area used by VSM when it is entered        02261000
.* disabled.  (VSM saves registers here.)                               02262000
.*                                                                      02263000
.GLBE    L     4,684(0,15)        SAVE AREA ADDRESS TABLE      @G860P30 02264000
         L     4,4(0,4)           SAVE AREA ADDRESS            @G860P30 02265000
.*                                                                 @D1A 02266000
.* Find the SVC 120 equivalent global branch entry point.          @D1A 02267000
.*                                                                 @D1A 02268000
         L     15,680(0,15)       CVTGLMN ENTRY POINT          @G860P30 02269000
.S120BE  BALR  14,15              CALL GETMAIN                     @D1A 02270000
         AIF ('&SYSASCE' EQ 'P').SKIPSW2 If we were entered in     @D1A 02271000
.*                                primary ASC mode, do not         @D1A 02272000
.*                                produce a SAC to switch back     @D1A 02273000
.*                                to AR mode.  (That is, skip      @D1A 02274000
.*                                the switch.)                     @D1A 02275000
         SAC   512                Switch back to AR mode.          @D1A 02276000
.SKIPSW2 ANOP                                                      @D1A 02277000
         MEXIT                                                     @D1A 02278000
.****************************************************************  @D1A 02279000
.*  Branch to GETMAIN service.   This handles SVC 4 and 10         @D1A 02280000
.*  equivalent branch entry, and 'P' mode requests.                @D1A 02281000
.****************************************************************  @D1A 02282000
.SBE     BALR  14,15              Call GETMAIN.                    @D1C 02283000
         MEXIT                                                          02284000
.*                                                                 @D1A 02285000
.****************************************************************       02286000
.*                                                                      02287000
.****************************************************************       02288000
.ERROR0  IHBERMAC 92                                                    02289000
         MEXIT                                                          02290000
.****************************************************************       02291000
.*                                                                      02292000
.****************************************************************       02293000
.ERROR1  IHBERMAC 17                                                    02294000
         MEXIT                                                          02295000
.****************************************************************       02296000
.*  Macro form is invalid                                               02297000
.****************************************************************       02298000
.ERROR2  IHBERMAC 1001,MF,&MF                                           02299000
         MEXIT                                                          02300000
.****************************************************************       02301000
.* Something was specified in a register that can't be in a register    02302000
.****************************************************************       02303000
.ERROR3  IHBERMAC 69                                                    02304000
         MEXIT                                                          02305000
.****************************************************************       02306000
.*  Invocation requires LA not LV                                       02307000
.****************************************************************       02308000
.ERROR4  IHBERMAC 89                                                    02309000
         MEXIT                                                          02310000
.****************************************************************       02311000
.* LA and LV can't be specified together                                02312000
.****************************************************************       02313000
.ERROR5  IHBERMAC 91                                                    02314000
         MEXIT                                                          02315000
.****************************************************************       02316000
.* LV must be specified with this invocation, not LA                    02317000
.****************************************************************       02318000
.ERROR6  IHBERMAC 90                                                    02319000
         MEXIT                                                          02320000
.****************************************************************       02321000
.* Issue a message saying that the mode was invalid. Can happen         02322000
.* for various reasons.                                                 02323000
.****************************************************************       02324000
.ERROR7  IHBERMAC 1001,MODE,&MODE                                       02325000
         MEXIT                                                          02326000
.****************************************************************       02327000
.* Required parameters weren't specified                                02328000
.****************************************************************       02329000
.ERROR8  IHBERMAC 01                                                    02330000
         MEXIT                                                          02331000
.****************************************************************       02332000
.*  R mode getmains require that the A parameter be specified           02333000
.*  in this case.                                                       02334000
.****************************************************************       02335000
.ERROR9  IHBERMAC 93                                                    02336000
         MEXIT                                                          02337000
.****************************************************************       02338000
.*  Invalid boundary specified                                          02339000
.****************************************************************       02340000
.ERROR10 IHBERMAC 1014,BNDRY                                            02341000
         MEXIT                                                          02342000
.****************************************************************       02343000
.* R mode callers cannot specify page for their boundary                02344000
.****************************************************************       02345000
.ERR10A  IHBERMAC 1020,&BNDRY,&MODE                                     02346000
         MEXIT                                                          02347000
.****************************************************************       02348000
.* Key was specified with other options that are invalid with key       02349000
.****************************************************************       02350000
.ERRORA  IHBERMAC 1020,KEY,&MODE                                        02351000
         MEXIT                                                          02352000
.****************************************************************       02353000
.* Key specified was too large                                          02354000
.****************************************************************       02355000
.ERRORB  IHBERMAC 1001,KEY,&KEY                                         02356000
         MEXIT                                                          02357000
.****************************************************************       02358000
.* Branch entry list form is invalid                                    02359000
.****************************************************************       02360000
.ERRORC  IHBERMAC 1020,BRANCH,''MF=L''                                  02361000
         MEXIT                                                          02362000
.****************************************************************       02363000
.* Invalid value for the branch keyword was given                       02364000
.****************************************************************       02365000
.ERRORD  IHBERMAC 1001,BRANCH,&BRANCH                                   02366000
         MEXIT                                                          02367000
.****************************************************************       02368000
.* Global branch entry can only be specified with certain modes.        02369000
.****************************************************************       02370000
.ERRORF  IHBERMAC 1020,&BRANCH(2),&MODE                                 02371000
         MEXIT                                                          02372000
.****************************************************************       02373000
.* Too many suboperands were given for the LOC keyword                  02374000
.****************************************************************       02375000
.ERROR20 IHBERMAC 1012,LOC                                     @G860P30 02376000
         MEXIT                                                          02377000
.****************************************************************       02378000
.* The second operand for LOC was specified, but it wasn't ANY,    @L4C 02379000
.* or, if the first operand was EXPLICIT, the second operand was   @L4C 02380000
.* neither ANY nor BELOW.                                          @L4C 02381000
.****************************************************************       02382000
.ERROR21 IHBERMAC 1007,LOC(2)                                  @G860P30 02383000
         MEXIT                                                          02384000
.****************************************************************       02385000
.* LOC(1)  must be BELOW, RES , ANY or EXPLICIT.                   @L4C 02386000
.****************************************************************       02387000
.ERROR22 IHBERMAC 1007,LOC(1)                                  @G860P30 02388000
         MEXIT                                                          02389000
.****************************************************************       02390000
.* Space for max and min must be there on the LV parameter.             02391000
.****************************************************************       02392000
.ERROR30 IHBERMAC 1012,LV                                      @G860P30 02393000
         MEXIT                                                          02394000
.****************************************************************       02395000
.* Maximum is required. (minimum can be defaulted but max can't)        02396000
.****************************************************************       02397000
.ERROR31 IHBERMAC 1017,LV(1)                                   @G860P30 02398000
         MEXIT                                                     @L3A 02399000
.****************************************************************       02400000
.* LOC must be specified when INADDR is specified                  @P3C 02401000
.****************************************************************       02402000
.ERROR32 IHBERMAC 1017,LOC(1)                                      @L4A 02403000
         MEXIT                                                     @L4A 02404000
.****************************************************************       02405000
.* INADDR is only valid with RU and RC forms                       @L4A 02406000
.****************************************************************       02407000
.ERROR33 IHBERMAC 1020,INADDR,&MODE                                @L4A 02408000
         MEXIT                                                     @L4A 02409000
.****************************************************************       02410000
.* LOC=EXPLICIT is only valid with RU and RC forms                 @L4A 02411000
.****************************************************************       02412000
.ERROR34 IHBERMAC 1020,LOC(1),&MODE                                @L4A 02413000
         MEXIT                                                     @L4A 02414000
.****************************************************************       02415000
.* INADDR requires that LOC=EXPLICIT be specified                  @L4A 02416000
.****************************************************************       02417000
.ERROR35 IHBERMAC 1020,LOC(1),INADDR                               @L4A 02418000
         MEXIT                                                     @L4A 02419000
.****************************************************************       02420000
.* Global branch entry is not allowed for explicit request         @L4A 02421000
.* (it doesn't make sense because EXPLICIT is only valid for       @L4A 02422000
.* private, and GLOBAL is only valid for COMMON)                   @L4A 02423000
.****************************************************************       02424000
.ERROR36 IHBERMAC 1020,BRANCH(2),INADDR                            @P3C 02425000
         MEXIT                                                     @L4A 02426000
.****************************************************************       02427000
.* BNDRY is not allowed for explicit request                       @L4A 02428000
.* (and it doesn't make sense, since the input address specifies   @L4A 02429000
.* the exact location)                                             @L4A 02430000
.****************************************************************       02431000
.ERROR37 IHBERMAC 1020,BNDRY,INADDR                                @L4A 02432000
         MEXIT                                                     @L4A 02433000
.****************************************************************       02434000
.* OWNER is not allowed for explicit request                       @L4A 02435000
.* (it doesn't make sense because EXPLICIT is only valid for       @L4A 02436000
.* private, and OWNER is only valid for COMMON)                    @L4A 02437000
.****************************************************************       02438000
.ERROR38 IHBERMAC 1020,OWNER,INADDR                                @L4A 02439000
         MEXIT                                                     @L4A 02440000
.****************************************************************       02441000
.* INADDR must be specified when LOC=EXPLICIT specified            @P3A 02442000
.****************************************************************       02443000
.ERROR39 IHBERMAC 1017,INADDR                                      @P3A 02444000
         MEXIT                                                     @P3A 02445000
.****************************************************************       02446000
.* OWNER is not valid                                                   02447000
.****************************************************************       02448000
.ERRORO1 IHBERMAC 1007,OWNER(1)                                    @L3A 02449000
         MEXIT                                                     @L3A 02450000
.****************************************************************       02451000
.* OWNER is not valid with non-SVC 120 forms                            02452000
.****************************************************************       02453000
.ERRORO2 IHBERMAC 1020,OWNER,&MODE                                 @L3A 02454000
         MEXIT                                                     @L3A 02455000
.*                                                                      02456000
.******************************************************************     02457000
.*  BRANCH is not supported in VSE/ESA                     @D61ADTN     02458000
.******************************************************************     02459000
.*                                                                      02460000
.ERBRNCH IHBERMAC 1309,BRANCH                              @D61ADTN     02461000
.*                                                                      02462000
.******************************************************************     02463000
.* Exit the macro                                                       02464000
.******************************************************************     02465000
.*                                                                      02466000
         MEXIT                                             @D61ADTN     02467000
.*                                                                      02468000
.*                                                                      02469000
.******************************************************************     02470000
.*  LOC=EXPLICIT is not supported in VSE/ESA               @D61ADTN     02471000
.******************************************************************     02472000
.*                                                                      02473000
.ERXPLIC IHBERMAC 1310,LOC,EXPLICIT                        @D61ADTN     02474000
.*                                                                      02475000
.******************************************************************     02476000
.* Exit the macro                                                       02477000
.******************************************************************     02478000
.*                                                                      02479000
         MEXIT                                             @D61ADTN     02480000
.*                                                                      02481000
.*                                                                      02482000
.******************************************************************     02483000
.*  INADDR is not supported in VSE/ESA                     @D61ADTN     02484000
.******************************************************************     02485000
.*                                                                      02486000
.ERINADR IHBERMAC 1309,INADDR                              @D61ADTN     02487000
.*                                                                      02488000
.******************************************************************     02489000
.* Exit the macro                                                       02490000
.******************************************************************     02491000
.*                                                                      02492000
         MEXIT                                             @D61ADTN     02493000
.*                                                                      02494000
.******************************************************************     02495000
.*  OWNER is not supported in VSE/ESA                      @D61ADTN     02496000
.******************************************************************     02497000
.*                                                                      02498000
.EROWNER ANOP                                              @D61ADKH     02499000
         AIF ('&OWNER' EQ 'HOME').SYSSTATE                 @D61ADKH     02500000
         IHBERMAC 1309,OWNER                               @D61ADTN     02501000
.*                                                                      02502000
.******************************************************************     02503000
.* Exit the macro                                                       02504000
.******************************************************************     02505000
.*                                                                      02506000
         MEXIT                                             @D61ADTN     02507000
.*                                                                      02508000
         MEND                                                           02509000
* */ GETMAIN: MACRO                                                     02510000
* KEYS(LV,LA,A,SP,SZ,BNDRY,BRANCH,MF,RTCD,KEY,                          02511000
* RELATED,LOC,OWNER,INADDR);        /*                           @L4C*/ 02512000
*          ANS('?'||MACLABEL||'GETMAINP '||MACLIST||MACKEYS||';');      02513000
*%     END GETMAIN;                                                     02514000
