*/*                                                                  */ 00006000
*/* STATUS  = HBB4410                                                */ 00007000
*/*                                                                  */ 00008000
* %/*                                                                   00009000
        MACRO                                                           00010000
&NAME    SETRP &RETADDR=,&RETREGS=,&DUMP=,&RECORD=,&WKAREA=,&REGS=,    J00011000
               &DUMPOPT=,&DUMPOPX=,&RECPARM=,&RC=0,&FRELOCK=,&CPU=,    X00012000
               &COMPCOD=,&FRESDWA=,&RUB=,                              S00013000
               &SERIAL=,&RETRY=,&FRLKRTY=,&REMREC=,&RETRY15=,          S00014000
               &REASON=,&SSRESET=                              @D64ADOW 00015000
.*                                                                      00016000
         AGO   .NOCOPY                                                  00016100
*********************************************************************** 00016200
*      LICENSED MATERIALS - PROPERTY OF IBM                           * 00016300
*      "RESTRICTED MATERIALS OF IBM"                                  * 00016400
*      5686-066                                                       * 00016500
*      (C)COPYRIGHT IBM CORP. 1996                                    * 00016600
*********************************************************************** 00016700
.NOCOPY ANOP                                                            00016800
.*  CHANGE ACTIVITY=                                           @ZA86653 00017000
.*SU33(ENHANCED DUMP) 7/30/76                                  @G33SPHW 00018000
.*MVS/SYSTEM PRODUCT RELEASE 2 6/26/79                         @G382P2F 00019000
.*MVS/SYSTEM PRODUCT HBB2102 03/27/81                          @G860P1C 00020000
.*             APAR OZ86653 - SET SDWAACF2 BIT ON TO FREE CML  @ZA86653 00021000
.*                            LOCK IF REQUESTED.               @ZA86653 00022000
.* $L1=RASENH ,JBB2220,840313,PDA8: RETRY ENHANCEMENTS             @L1C 00023000
.* $P1=PA20094,JBB2220,850214,PDA8: REMOVE SYSLIST CHECKING        @P1C 00024000
.* $L2 = AR    HBB3310 850901 PDXB: AR SUPPORT                          00025000
.* $D1=DCR0031,HBB3310,860423,PDT9: IOS LOCK SUPPORT               @D1A 00026000
.* $L3=DATASPAC,HBB3310,860728,PDA8: RSMDS LOCK SUPPORT            @L3A 00027000
.* $L4=DATASPAC,HBB3310,861029,PDT9: PROPAGATION OF DATA SPACE STORAGE  00028000
.*                                   RANGES FOR ABDUMP             @L4A 00029000
.* $P2=PC40460,HBB3310,861215,PDT9: NO LOCKWORD FOR IOS LOCK       @P2A 00030000
.* $P3=PC40713,HBB3310,870225,PDT9: MOVE IOS LOCK BIT              @P3A 00031000
.* $L5=LOCKR  ,JBB3320,870916,PDT9: LOCK RESTRUCTURE               @L5A 00032000
.* $L6=CLOCK  ,JBB3320,870916,PDT9: NEW LOCK FOR ETR               @L6A 00033000
.* $L7=JUP03  ,HBB4410,870916,PDT9: NEW LOCKS FOR SMSX             @L7A 00034000
.* $L8=COUPLRTM,HBB4410,870916,PDT9: NEW LOCKS FOR XCF             @L8A 00035000
.* $L9=USERV   ,HBB4410,890626,PDCI: NEW IOSULUT LOCK              @L9A 00036000
.* $01=OY37687 ,HBB4410,901101,PDXB: FIX REASON 4095 CHECK              00037000
.* @D61ADTN: VSE/ESA COMPATIBILITY WITH MVS/ESA                         00038000
.*A000000                                                        Y02704 00039000
.********************************************************************** 00040000
.*   CHECK FOR UNSUPPORTED KEYWORDS IN THE VSE ENVIRONMENT   @D61ADTN * 00041000
.********************************************************************** 00042000
.*                                                                      00043000
.*       AIF (T'&DUMPOPT EQ'O').IGNORET                        @D61ADTN 00044000
.*       MNOTE 0,'PARAMETER DUMPOPT= IS IGNORED BY VSE/ESA.'   @D61ADTN 00045000
.IGNORET ANOP                                                  @D61ADTN 00046000
.*       AIF (T'&DUMPOPX EQ'O').IGNOREX                        @D61ADTN 00047000
.*       MNOTE 0,'PARAMETER DUMPOPX= IS IGNORED BY VSE/ESA.'   @D61ADTN 00048000
.IGNOREX ANOP                                                  @D61ADTN 00049000
.*       AIF (T'&FRELOCK EQ'O').IGNOREL                        @D61ADTN 00050000
.*       MNOTE 0,'PARAMETER FRELOCK= IS IGNORED BY VSE/ESA.'   @D61ADTN 00051000
.IGNOREL ANOP                                                  @D61ADTN 00052000
.*       AIF (T'&RECORD EQ'O').IGNORER                         @D61ADTN 00053000
.*       MNOTE 0,'PARAMETER RECORD= IS IGNORED BY VSE/ESA.'    @D61ADTN 00054000
.IGNORER ANOP                                                  @D61ADTN 00055000
.*       AIF (T'&RECPARM EQ'O').IGNOREP                        @D61ADTN 00056000
.*       MNOTE 0,'PARAMETER RECPARM= IS IGNORED BY VSE/ESA.'   @D61ADTN 00057000
.IGNOREP ANOP                                                  @D61ADTN 00058000
         AIF (T'&SERIAL NE 'O').ERRSER                         @D61ADTN 00059000
         AIF (T'&FRLKRTY NE 'O').ERRFRLK                       @D61ADTN 00060000
         AIF (T'&SSRESET NE 'O').ERRSSRS                       @D64ADOW 00061000
.*                                                                      00062000
         LCLC  &A                                                       00063000
         LCLA  &B                                                       00064000
         LCLA  &I                                                       00065000
         LCLA  &J                                                       00066000
         LCLA  &K                                                       00067000
         LCLA  &L                                                       00068000
         LCLA  &M                                                       00069000
         LCLC  &N                                                       00070000
         LCLA  &LFLAG1                                                  00071000
         LCLA  &LFLAG2                                                  00072000
         LCLA  &LFLAG3                                       @G860P1C   00073000
         LCLA  &LFLAG4                                       @G860P1C   00074000
         LCLA  &LFLAG5                                           @L5A   00075000
         LCLA  &LFLAG6                                           @L5A   00076000
         LCLA  &LFLAG7                                           @L5A   00077000
         LCLA  &LFLAG8                                           @L5A   00078000
         LCLB  &LOCKEXT                                      @G860P1C   00079000
         LCLB  &CCRC                                         @G860P1C   00080000
         LCLC  &LA                      "LA" OR "LAE" VIA SYSSTATE @L2A 00081000
         GBLC  &SYSASCE                                            @L2A 00082000
         SYSSTATE TEST                  TEST ASC ENVIRONMENT       @L2A 00083000
&LA      SETC  'LA'                     MUST USE LA INSTRUCTION    @L2A 00084000
         AIF   ('&SYSASCE' EQ 'P').NOLAE                           @L2A 00085000
&LA      SETC  'LAE'                    MUST USE LAE               @L2A 00086000
.NOLAE   ANOP                                                      @L2A 00087000
&B       SETA  &RC                                                      00088000
&I       SETA  1                                                        00089000
&J       SETA  N'&FRELOCK                                               00090000
&LFLAG1  SETA  0                                                        00091000
&LFLAG2  SETA  0                                                        00092000
&LFLAG3  SETA  0                                             @G860P1C   00093000
&LFLAG4  SETA  0                                             @G860P1C   00094000
&LFLAG5  SETA  0                                                        00095000
&LFLAG6  SETA  0                                                        00096000
&LFLAG7  SETA  0                                                 @L5A   00097000
&LFLAG8  SETA  0                                                 @L5A   00098000
&LOCKEXT SETB  0                                             @G860P1C   00099000
&CCRC    SETB  0                                             @G860P1C   00100000
         NOPR  SDWANOPR    IF THIS STATEMENT CAUSES ASSEMBLER ERROR     00101000
*                          IT IMPLIES THAT SETRP AND THE SDWA ARE       00102000
*                          BEING USED IMCOMPATABLY           @G38AP2F   00103000
         ORG   *-2         OVERLAY THE PREVIOUS INSTRUCTION  @G38AP2F   00104000
         AIF   ('&WKAREA' NE '').CONT                                   00105000
         AIF   ('&NAME' EQ '').RC                                       00106000
&NAME    EQU   *                                                        00107000
         AGO   .RC                                                      00108000
.CONT    ANOP                                                           00109000
&A       SETC  'WKAREA'                                                 00110000
         AIF   ('&WKAREA'(1,1) NE '(').ERR1                             00111000
&NAME    LR    1,&WKAREA(1) .           ACCESS POINTER TO SDWA          00112000
         AIF   ('&SYSASCE' EQ 'P').RC                              @L2A 00113000
         CPYA  1,&WKAREA(1)                                        @L2A 00114000
.RC      ANOP                                                           00115000
         AIF   ('&RC'(1,1) EQ '(').ERR17                                00116000
         AIF   (&B EQ 16).ERRC16                               @D64ADOW 00117000
         AIF   (&B EQ 0).STRC                                  @D64ADOW 00118000
         AIF   (&B EQ 4).RETA                                           00119000
         IHBERMAC 54,,&RC                                               00120000
         MEXIT                                                          00121000
.RETA    ANOP                                                           00122000
         AIF   ('&RETADDR' EQ '').ERR2                                  00123000
         AIF   ('&FRLKRTY' EQ '' AND '&REMREC' EQ '' AND               X00124000
               '&RETRY15' EQ '').MVRC   CHECK FOR RETRY OPTIONS    @L1A 00125000
.********************************************************************** 00126000
.*              RETRY OPTIONS PORCESSING                          @L1A* 00127000
.********************************************************************** 00128000
         L     15,SDWAXPAD-SDWA(0,1)      LIST OF EXTENSIONS PTR   @L1A 00129000
         AIF   ('&SYSASCE' EQ 'P').NOAR17                          @L2A 00130000
         CPYA  15,1                   SET UP ALET OF EXTENSION     @L2A 00131000
.NOAR17  ANOP                                                      @L2A 00132000
         L     15,SDWASRVP-SDWAPTRS(0,15) LOAD 1ST REC EXT PTR     @L1A 00133000
         AIF   ('&FRLKRTY' EQ '').TSTST15 SEE IF FRLKRTY IS USED   @L1A 00134000
         AIF   ('&FRLKRTY' EQ 'YES').SETFRLK TEST IF THERE IS REQUEST  X00135000
                                          TO FREE LOCKS            @L1A 00136000
         AIF   ('&FRLKRTY' EQ 'NO').NOFRLK TEST IF THERE IS A REQUEST  X00137000
                                          NOT TO FREE LOCKS        @L1A 00138000
         AGO   .ERR21                     ILLEGAL FRLKRTY VALUE    @L1A 00139000
.SETFRLK OI    SDWARETF-SDWARC1(15),SDWAFRLK FREE LOCKS ON RETRY   @L1A 00140000
         AGO   .TSTST15                   TEST RETRY15 KEYWORD     @L1A 00141000
.NOFRLK  NI    SDWARETF-SDWARC1(15),X'FF'-SDWAFRLK DONT FREE LOCKS @L1A 00142000
.TSTST15 AIF   ('&RETRY15' EQ '').TSTFRRD IF RETRY15 SPECIFIED     @L1A 00143000
         AIF   ('&RETRY15' EQ 'YES').SETRG TEST IF REQUEST TO SET      X00144000
                                          REGISTER 15 ON RETRY     @L1A 00145000
         AIF   ('&RETRY15' EQ 'NO').NOSETRG TEST TO SEE IF REGISTER 15 X00146000
                                          SHOULD NOT BE SET        @L1A 00147000
         AGO   .ERR22                     ILLEGAL RETRY15 VALUE    @L1A 00148000
.SETRG   OI    SDWARETF-SDWARC1(15),SDWART15 TURN BIT ON TO SET R15 TO X00149000
                                          THE VALUE IN SDWASR15    @L1A 00150000
         AGO   .TSTFRRD                   GO TEST REMREC           @L1A 00151000
.NOSETRG NI    SDWARETF-SDWARC1(15),X'FF'-SDWART15 TURN OFF BIT SO R15 X00152000
                                    WILL BE SET WITH RETRY ADDRESS @L1A 00153000
.TSTFRRD AIF   ('&REMREC' EQ '').MVRC     REMREC SPECIFIED         @L1A 00154000
         AIF   ('&REMREC' EQ 'YES').SETFRRD TEST REMREC=YES        @L1A 00155000
         AIF   ('&REMREC' EQ 'NO').NOFRRD TEST REMREC=NO           @L1A 00156000
         AGO   .ERR23                     ILLEGAL REMREC VALUE     @L1A 00157000
.SETFRRD OI    SDWARETF-SDWARC1(15),SDWAREMR INDICATE DELETE FRR   @L1A 00158000
         AGO   .MVRC                      GO TO RC PROCESSING      @L1A 00159000
.NOFRRD  NI    SDWARETF-SDWARC1(15),X'FF'-SDWAREMR KEEP FRR        @L1A 00160000
.MVRC    MVI   SDWARCDE-SDWA(1),&RC(1) . INITIALIZE RC FIELD            00161000
         AIF   ('&RETADDR'(1,1) EQ '(').RETAR                           00162000
         LA    15,&RETADDR(1) .        ACCESS RETRY ADDRESS             00163000
         AGO   .RETAB                                                   00164000
.RETAR   ANOP                                                           00165000
         LR    15,&RETADDR(1) .        ACCESS RETRY ADDRESS             00166000
.RETAB   ANOP                                                           00167000
         ST    15,SDWARTYA-SDWA(,1) .  INITIALIZE RETRY ADDRESS FIELD   00168000
.FSDWA   ANOP                                                           00169000
         AIF   ('&FRESDWA' EQ '' OR '&FRESDWA' EQ 'NO').RECORD          00170000
         AIF   ('&FRESDWA' NE 'YES').ERR11                              00171000
         OI    SDWAACF2-SDWA(1),SDWAFREE   TURN ON FREE SDWA            00172000
         AGO   .RECORD                                                  00173000
.STRC    ANOP                        THIS SECTION EXECUTED IF RC=0 @L1C 00174000
         MVI   SDWARCDE-SDWA(1),&RC(1) .       PUT RC IN SDWA           00175000
         AIF   ('&FRESDWA' NE '' AND '&FRESDWA' NE 'NO').ERR10          00176000
         AIF   ('&RETREGS' NE '' AND '&RETREGS' NE 'NO').ERR15          00177000
         AIF   ('&RETADDR' NE '').ERR3                                  00178000
         AIF   ('&FRLKRTY' NE '').ERR16                            @L1A 00179000
         AIF   ('&REMREC' NE '').ERR24                             @L1A 00180000
         AIF   ('&RETRY15' NE '').ERR25                            @L1A 00181000
.RECORD  ANOP                                                           00182000
         AIF   ('&RECORD' EQ 'NO').TRECP                                00183000
         AIF   ('&RECORD' EQ 'IGNORE' OR '&RECORD' EQ '').RECPARM       00184000
         AIF   ('&RECORD' NE 'YES').ERR4                                00185000
         OI    SDWAACF2-SDWA(1),SDWARCRD   TURN ON RECORD INDICATOR     00186000
.RECPARM ANOP                                                           00187000
         AIF   ('&RECPARM' EQ '').DUMP                                  00188000
         AIF   ('&RECPARM'(1,1) EQ '(').RECPR                           00189000
         &LA   15,&RECPARM(1) .       ACCESS RECORD PARAMETER LIST @L2C 00190000
         AGO   .RECPCOM                                                 00191000
.RECPR   ANOP                                                           00192000
         &LA   15,0(,&RECPARM(1)) .   ACCESS RECORD PARAMETER LIST @L2C 00193000
.RECPCOM ANOP                                                           00194000
         MVC   SDWARECP-SDWA(24,1),0(15)                                00195000
*                                   MOVE RECORD PARAMETER INTO SDWA     00196000
         AGO   .DUMP                                                    00197000
.TRECP   ANOP                                                           00198000
         AIF   ('&RECPARM' NE '').ERR6                                  00199000
         NI    SDWAACF2-SDWA(1),X'FF'-SDWARCRD    TURN OFF RECORD FLAG  00200000
.DUMP    ANOP                                                           00201000
         AIF   ('&DUMP' EQ 'IGNORE' OR '&DUMP' EQ '').TDUMPOP           00202000
         AIF   ('&DUMP' EQ 'NO').TDOPTS                                 00203000
         AIF   ('&DUMP' NE 'YES').ERR7                                  00204000
         OI    SDWACMPF-SDWA(1),SDWAREQ   TURN ON DUMP INDICATOR        00205000
         AIF   ('&DUMPOPT' EQ '').RETREGS                               00206000
         AIF   ('&DUMPOPX' NE '').ERR26                            @L4A 00207000
         AIF   ('&DUMPOPT'(1,1) EQ '(').DUMPR                           00208000
         &LA   15,&DUMPOPT(1) .      ACCESS PTR TO DUMP PARAMETERS @L2C 00209000
         AGO   .DOPTCOM                                                 00210000
.DUMPR   ANOP                                                           00211000
         &LA   15,0(,&DUMPOPT(1)) .  ACCESS PTR TO DUMP PARAMETERS @L2C 00212000
.DOPTCOM ANOP                                                           00213000
         OI    SDWADPFS-SDWA(1),SDWADLST  TURN ON DUMP OPTION INDICATOR 00214000
         MVC   SDWADDAT-SDWA(4,1),4(15)  ACCESS SDATA AND PDATA FIELDS  00215000
         OI    SDWADPFS-SDWA(1),SDWAENSN  INDICATE ENHANCED DUMP        00216000
*                                                              @G382P2F 00217000
         OI    SDWADPF2-SDWA(1),SDWALVL2  INDICATE HBB2102 VERSION      00218000
*                                         OF SNAP PARMLIST     @G860P1C 00219000
         TM    1(15),X'02'             TEST FOR STORAGE LIST            00220000
         BO    M&SYSNDX                BRANCH IF STORAGE LIST SPECIFIED 00221000
         SR    14,14 .                 ZERO REGISTER FOR COMPARE        00222000
         CL    14,16(,15) .            FURTHER TEST FOR STORAGE LIST    00223000
         BE    Q&SYSNDX             BRANCH IF NO STORAGE LIST  @G860P1C 00224000
M&SYSNDX EQU   *                                               @G382P2F 00225000
         L     14,SDWAXPAD-SDWA(0,1) ADDRESS OF EXTENSION PTRS @G382P2F 00226000
         AIF   ('&SYSASCE' EQ 'P').NOAR1                           @L2A 00227000
         CPYA  14,1                   SET UP ALET OF EXTENSION     @L2A 00228000
.NOAR1   ANOP                                                      @L2A 00229000
         L     14,SDWADSRP-SDWAPTRS(0,14) ADDR OF DUMP STORAGE RANGES   00230000
*                                         EXTENSION            @G382P2F 00231000
         LTR   14,14                  TEST IF EXTENSION EXISTS @G382P2F 00232000
         BZ    Q&SYSNDX               BRANCH IF NO DUMP STORAGE RANGES  00233000
*                                     EXTENSION                @G860P1C 00234000
         OI    SDWADPFS-SDWA(1),SDWASLST   TURN ON STORAGE LIST         00235000
*                                          FLAG                @G382P2F 00236000
         OI    SDWADPF2-SDWA(1),SDWADVS3   INDICATE RANGES ARE IN       00237000
*                                          SDWADSR             @G382P2F 00238000
         SLR   14,14                ZERO LENGTH REG            @G382P2F 00239000
         AIF   ('&SYSASCE' EQ 'P').NOAR13                               00240000
         LAM   0,0,32(15)           GET ALET                       @L2A 00241000
.NOAR13  ANOP                                                           00242000
         TM    2(15),X'80'          TEST MAX NUMBER OF RANGES  @G382P2F 00243000
         L     15,16(,15) .            ACCESS POINTER TO STORAGE LIST   00244000
         AIF   ('&SYSASCE' EQ 'P').NOAR14                               00245000
         CPYA  15,0                 SET ACCESS REGISTER            @L2A 00246000
.NOAR14  ANOP                                                           00247000
         BO    K&SYSNDX            BRANCH IF 30 RANGES ALLOWED @G382P2F 00248000
         LA    0,32                 INIT MAX LENGTH TO 4       @G382P2F 00249000
         B     L&SYSNDX                                        @G382P2F 00250000
K&SYSNDX EQU   *                                               @G382P2F 00251000
         LA    0,240                INIT MAX LENGTH TO 30      @G382P2F 00252000
L&SYSNDX EQU   *                                               @G382P2F 00253000
N&SYSNDX EQU   *                    TOP OF LOOP WHICH CALCULATES        00254000
*                                   MVC LENGTH                 @G382P2F 00255000
         LA    14,8(,14)            INCREMENT LENGTH REG BY 8  @G382P2F 00256000
         TM    4(15),X'80'          TEST IF END OF LIST        @G382P2F 00257000
         LA    15,8(,15)            POINT TO NEXT RANGE        @G382P2F 00258000
         BO    O&SYSNDX             BRANCH IF END OF LIST      @G382P2F 00259000
         CR    14,0                 TEST IF MAX LENGTH REACHED @G382P2F 00260000
         BL    N&SYSNDX             BRANCH IF NOT REACHED      @G382P2F 00261000
O&SYSNDX EQU   *                    EXIT OF LOOP WHICH CALC MVC         00262000
*                                   LENGTH                     @G382P2F 00263000
         SR    15,14                POINT TO BEGINNING OF STORAGE       00264000
*                                   LIST                       @G382P2F 00265000
         BCTR  14,0                 ADJUST LENGTH FOR EXECUTE FORM      00266000
*                                   OF MVC                     @G382P2F 00267000
         LR    0,1                  SAVE SDWA ADDRESS          @G382P2F 00268000
         L     1,SDWAXPAD-SDWA(0,1) ADDRESS OF EXTENSION PTRS  @G382P2F 00269000
         L     1,SDWADSRP-SDWAPTRS(0,1) ADDRESS OF DUMP STORAGE RANGE   00270000
*                                       EXTENSION              @G382P2F 00271000
         EX    14,P&SYSNDX          EXECUTE MVC INSTRUCTION    @G382P2F 00272000
         LA    15,3                 LOAD 3 INTO REG 15         @G382P2F 00273000
         SR    14,15                CALC LENGTH TO LAST ADDR   @G382P2F 00274000
         AR    1,14                 CALC ADDR OF LAST ADDR MOVED INTO   00275000
*                                   THE SDWA                   @G382P2F 00276000
         OI    0(1),X'80'           ENSURE LAST RANGE IS IND   @G382P2F 00277000
         LR    1,0                  RESTORE REG 1 WITH SDWA             00278000
*                                   ADDRESS                    @G382P2F 00279000
         B     E&SYSNDX                                        @G382P2F 00280000
P&SYSNDX EQU   *                                               @G382P2F 00281000
         MVC   0(0,1),0(15)         MOVE DUMP STORAGE RANGES INTO       00282000
*                                   SDWA EXTENSION             @G382P2F 00283000
E&SYSNDX EQU  *                                                         00284000
         AIF  ('&DUMPOPT'(1,1) EQ '(').SBPLR                 @G860P1C   00285000
         &LA  15,&DUMPOPT(1) .      ACCESS PTR TO DUMP PARMS     @L2C   00286000
         AGO  .SBPLCOM                                       @G860P1C   00287000
.SBPLR   ANOP                                                @G860P1C   00288000
         LR   15,&DUMPOPT(1)        ACCESS PTR TO DUMP PARMS @G860P1C   00289000
         AIF  ('&SYSASCE' EQ 'P').SBPLCOM                               00290000
         CPYA 15,&DUMPOPT(1)        GET ITS ALET TOO                    00291000
.SBPLCOM ANOP                                                @G860P1C   00292000
Q&SYSNDX EQU  *                                              @G860P1C   00293000
         TM   2(15),X'02'           TEST FOR SUBPOOL LIST    @G860P1C   00294000
         BZ   U&SYSNDX              BRANCH IF NO SUBPOOL     @ZMC3083   00295000
*                                   LIST SPECIFIED           @ZMC3083   00296000
         SR   14,14                ZERO REGISTER FOR COMPARE @G860P1C   00297000
         CL   14,24(0,15)           FURTHER TEST FOR SUBPOOL LIST       00298000
*                                                            @ZMC2078   00299000
         BE   U&SYSNDX             BRANCH IF NO SUBPOOL LIST @G860P1C   00300000
V&SYSNDX EQU  *                                              @G860P1C   00301000
         L    14,SDWAXPAD-SDWA(0,1)  ADDR OF EXTENSION PTRS  @G860P1C   00302000
         AIF   ('&SYSASCE' EQ 'P').NOAR2                           @L2A 00303000
         CPYA  14,1                   SET UP ALET OF EXTENSION     @L2A 00304000
.NOAR2   ANOP                                                      @L2A 00305000
         L    14,SDWAXSPL-SDWAPTRS(0,14)  ADDR OF SUBPOOL LIST          00306000
*                                         EXTENSION          @G860P1C   00307000
         LTR  14,14                TEST IF EXTENSION EXISTS  @G860P1C   00308000
         BZ   U&SYSNDX             BRANCH IF NO SUBPOOL LIST            00309000
*                                  EXTENSION                 @G860P1C   00310000
         OI   SDWADPF2-SDWA(1),SDWASUBL  TURN ON SUBPOOL LIST           00311000
*                                        FLAG                @G860P1C   00312000
         AIF   ('&SYSASCE' EQ 'P').NOAR15                               00313000
         LAM   14,14,40(15)         GET ALET                       @L2A 00314000
.NOAR15  ANOP                                                           00315000
         L    15,24(0,15)          ACCESS POINTER TO SUBPOOL LIST      *00316000
                                                             @ZMC2078   00317000
         AIF   ('&SYSASCE' EQ 'P').NOAR16                               00318000
         CPYA  15,14                SET ACCESS REGISTER            @L2A 00319000
.NOAR16  ANOP                                                           00320000
         LH   14,0(,15)           PICK UP NUMBER OF SUBPOOLS @G860P1C   00321000
         LTR  14,14               TEST FOR ZERO              @G860P1C   00322000
         BNP  U&SYSNDX            BRANCH IF NO SUBPOOLS      @ZMC3083   00323000
         LA   0,SDWASPMX(0,0)     GET MAX NUMBER SUBPOOLS    @G860P1C   00324000
         CR   14,0                TEST FOR MAX SUBPOOLS      @G860P1C   00325000
         BNH  S&SYSNDX            BRANCH IF EQUAL OR LESS    @G860P1C   00326000
         LR   14,0                MOVE ONLY MAX SUBPOOL IDS  @G860P1C   00327000
S&SYSNDX EQU  *                                              @G860P1C   00328000
         LR   0,1                 SAVE SDWA ADDRESS          @G860P1C   00329000
         L    1,SDWAXPAD-SDWA(0,1)  ADDR OF EXTENSION POINTERS          00330000
*                                                            @G860P1C   00331000
         L    1,SDWAXSPL-SDWAPTRS(0,1)  ADDR OF SUBPOOL LIST            00332000
*                                       EXTENSION            @G860P1C   00333000
         STH  14,SDWASPLN-SDWANRC2(0,1)  STORE NUMBER OF SUBPOOLS       00334000
*                                                            @G860P1C   00335000
         SLL  14,1                  DOUBLE NUMBER TO GET LENGTH         00336000
*                                   OF MOVE                  @G860P1C   00337000
         BCTR  14,0                 ADJUST LENGTH FOR EXECUTE FORM      00338000
*                                   OF MVC                     @G860P1C 00339000
         EX   14,T&SYSNDX           MOVE THE SUBPOOL IDS     @G860P1C   00340000
         LR   1,0                   RESTORE REG1 WITH SDWA ADDRESS      00341000
*                                                            @G860P1C   00342000
         B    U&SYSNDX                                       @G860P1C   00343000
T&SYSNDX EQU  *                                              @G860P1C   00344000
         MVC  SDWASPLS-SDWANRC2(0,1),2(15)  MOVE SUBPOOL IDS INTO       00345000
*                                           SDWA EXTENSION   @G860P1C   00346000
U&SYSNDX EQU  *                                              @G860P1C   00347000
         AGO   .RETREGS                                                 00348000
.TDOPTS  ANOP                                                           00349000
         AIF   ('&DUMPOPT' NE '').ERR8                                  00350000
         AIF   ('&DUMPOPX' NE '').ERR8                             @L4A 00351000
         NI    SDWACMPF-SDWA(1),X'FF'-SDWAREQ TURN OFF DUMP INDICATOR   00352000
.TDUMPOP ANOP                                                           00353000
         AIF   ('&DUMPOPT' NE '').ERR8                                  00354000
         AIF   ('&DUMPOPX' NE '').ERR8                             @L4A 00355000
.RETREGS ANOP                                                           00356000
         AIF   ('&RETREGS' EQ '' OR '&RETREGS' EQ 'NO').TSTRUB          00357000
         AIF   ('&RETREGS' NE 'YES').ERR9                               00358000
         OI    SDWAACF2-SDWA(1),SDWAUPRG   TURN ON RETREGS INDICATOR    00359000
         AIF   ('&RUB' EQ '').CPU                                       00360000
         AIF   ('&RUB'(1,1) EQ '(').RUBR                                00361000
         &LA   15,&RUB(1) .       GET PTR TO REGISTER UPDATE BLOCK @L2C 00362000
         AGO   .RUBCOM                                                  00363000
.RUBR    ANOP                                                           00364000
         LR    15,&RUB(1) .         ACCESS PTR TO REG UPDATE BLOCK      00365000
         AIF  ('&SYSASCE' EQ 'P').RUBCOM                                00366000
         CPYA 15,&RUB(1)            GET ITS ALET TOO                    00367000
.RUBCOM  ANOP                                                           00368000
         LH    0,0(,15) .              ACCESS REGISTER BIT PATTERN      00369000
         LA    15,2(,15) .             CREATE PTR TO USER REG VALUES    00370000
         &LA   14,SDWASRSV-SDWA(,1)    CREATE PTR TO SDWA REG SAVE @L2C 00371000
         SLL   0,16(0) .               SHIFT BIT PATTERN TO HI BYTE     00372000
R&SYSNDX ALR   0,0 .                   SHIFT BIT TO SIGN POSITION       00373000
         BC    12,I&SYSNDX .           BRANCH IF NO CARRY INTO SIGN     00374000
         MVC   0(4,14),0(15) .         MODIFY REGISTER IN SDWA          00375000
         LA    15,4(,15) .              UPDATE POINTER                  00376000
I&SYSNDX LA    14,4(,14) .              UPDATE POINTER IN SDWA          00377000
         BC    5,R&SYSNDX .            TEST ALR CONDITION CODE TO TEST  00378000
*                                      IF ALL BITS EXHAUSTED            00379000
         AGO   .CPU                                                     00380000
.TSTRUB  ANOP                                                           00381000
         AIF   ('&RUB' NE '').ERR12                                     00382000
.CPU     ANOP                                                           00383000
         AIF   ('&CPU' EQ '').CC                                        00384000
&A       SETC  'CPU'                                                    00385000
         AIF   ('&CPU'(1,1) NE '(').ERR1                                00386000
         ST    &CPU(1),SDWACPUA-SDWA(,1)  STORE CPU ID IN SDWA          00387000
         OI    SDWAACF2-SDWA(1),SDWASPIN                                00388000
.CC      ANOP                                                           00389000
         AIF   ('&COMPCOD' EQ '').RSC                          @G860P2F 00390000
         AIF   ('&COMPCOD(1)'(1,1) EQ '(').CCR                          00391000
         AIF   (T'&COMPCOD(1) NE 'N').CCS                               00392000
         AIF   (&COMPCOD(1) GT 4095).ERR13                              00393000
.CCS     ANOP                                                           00394000
         LA    14,&COMPCOD(1).(,0) .   ACCESS COMPLETION CODE           00395000
         AGO   .CCOM                                                    00396000
.CCR     ANOP                                                           00397000
         LR    14,&COMPCOD(1) .        ACCESS COMPLETION CODE           00398000
.CCOM    ANOP                                                           00399000
         AIF   ('&COMPCOD(2)' EQ '' OR '&COMPCOD(2)' EQ 'USER').STCODE  00400000
         AIF   ('&COMPCOD(2)' NE 'SYSTEM').ERR14                        00401000
         SLL   14,12(0) .              SHIFT TO SYSTEM CODE POSITION    00402000
.STCODE  ANOP                                                           00403000
         STCM  14,7,SDWACMPC-SDWA(1)  STORE COMPLETION CODE             00404000
         L    14,SDWAXPAD-SDWA(0,1)  ADDR OF EXTENSION PTRS    @G860P1C 00405000
         AIF   ('&SYSASCE' EQ 'P').NOAR3                           @L2A 00406000
         CPYA  14,1                   SET UP ALET OF EXTENSION     @L2A 00407000
.NOAR3   ANOP                                                      @L2A 00408000
         L    14,SDWASRVP-SDWAPTRS(0,14)  ADDR OF SERVICE DATA          00409000
*                                         EXTENSION            @G860P1C 00410000
         OI   SDWACCRC-SDWASERV(14),SDWACCF INDICATE CHANGE TO          00411000
*                                         COMPCODE             @G860P1C 00412000
&CCRC    SETB 1         BASE TO SERVICE EXTENSION EXISTS       @G860P1C 00413000
.RSC     ANOP                                                  @G860P2F 00414000
         AIF   ('&REASON' EQ '').FRELOCK                       @G860P2F 00415000
         AIF   (&CCRC).RSC1 BRANCH IF EXTENSION PTR IN REG14   @G860P1C 00416000
         L    14,SDWAXPAD-SDWA(0,1)  ADDR OF EXTENSION PTRS    @G860P2F 00417000
         AIF   ('&SYSASCE' EQ 'P').NOAR4                           @L2A 00418000
         CPYA  14,1                   SET UP ALET OF EXTENSION     @L2A 00419000
.NOAR4   ANOP                                                      @L2A 00420000
         L    14,SDWASRVP-SDWAPTRS(0,14)  ADDR OF SERVICE DATA          00421000
*                                         EXTENSION            @G860P2F 00422000
.RSC1    ANOP                                                  @G860P1C 00423000
         AIF   ('&REASON'(1,1) EQ '(').RSCR   CHECK FOR REG    @G860P2F 00424000
         AIF   (T'&REASON(1) NE 'N').RSC2   CODE IS NOT NUMBER @G860P1C 00425000
         AIF   (&REASON(1) GT 4095).RSC2   CODE IS BIG NUMBER  @G860P1C 00426000
         AIF   (&REASON(1) LT 0).RSC2      CODE IS SMALL NUMBER    @01A 00427000
         LA    15,&REASON(1).(,0)     ACCESS REASON CODE       @G860P2F 00428000
         AGO   .RSCST15                                        @G860P1C 00429000
.RSC2    ANOP                                                  @G860P1C 00430000
         CNOP  0,4                    ALIGN ON WORD BOUNDARY   @G860P1C 00431000
         B     *+8                    BRANCH AROUND CONSTANT   @G860P1C 00432000
         DC    AL4(&REASON)           DECLARE FOR REASON CODE  @G860P1C 00433000
         L     15,*-4                 LOAD REASON CODE INTO 15 @G860P1C 00434000
.RSCST15 ANOP                                                  @G860P1C 00435000
         ST    15,SDWAHRC-SDWASERV(0,14)  STORE REASON CODE    @G860P2F 00436000
         AGO   .RSCEND                                         @G860P1C 00437000
.RSCR    ANOP                                                  @G860P2F 00438000
         ST    &REASON(1),SDWAHRC-SDWASERV(0,14)   STORE REASON CODE    00439000
*                                                              @G860P2F 00440000
.RSCEND  ANOP                                                  @G860P1C 00441000
         OI   SDWACCRC-SDWASERV(14),SDWAREAF INDICATE CHANGE TO         00442000
*                                         REASON CODE          @G860P1C 00443000
.FRELOCK ANOP                                                           00444000
         AIF   ('&FRELOCK' EQ '').SERIAL                       @G381P2F 00445000
.LOCKLP  ANOP                                                           00446000
         AIF   (K'&FRELOCK(&I) LE 2).NOLOCK                             00447000
&K       SETA  K'&FRELOCK(&I)-2                                         00448000
         AIF   ('&FRELOCK(&I)' NE 'DISP').OPTM                          00449000
&LFLAG1  SETA  &LFLAG1+16                                               00450000
         AGO   .INITLP                                                  00451000
.OPTM    ANOP                                                           00452000
         AIF   ('&FRELOCK(&I)' NE 'SRM').SALLOC                         00453000
&LFLAG2  SETA  &LFLAG2+4                                                00454000
         AGO   .INITLP                                                  00455000
.SALLOC  ANOP                                                           00456000
         AIF   ('&FRELOCK(&I)' NE 'SALLOC').CMS                         00457000
&LFLAG1  SETA  &LFLAG1+4                                                00458000
         AGO   .INITLP                                                  00459000
.CMS     ANOP                                                           00460000
         AIF   ('&FRELOCK(&I)' NE 'CMS').VSMFIX                @G860P1C 00461000
&LFLAG2  SETA  &LFLAG2+2                                                00462000
         AGO   .INITLP                                                  00463000
.VSMFIX  ANOP                                                  @G860P1C 00464000
         AIF   ('&FRELOCK(&I)' NE 'VSMFIX').RSM                @G860P1C 00465000
&LFLAG4  SETA  &LFLAG4+4                                       @G860P2F 00466000
         AGO   .INITLP                                         @G860P1C 00467000
.RSM     ANOP                                                  @G860P1C 00468000
         AIF   ('&FRELOCK(&I)' NE 'RSM').VSMPAG                @G860P1C 00469000
&LFLAG3  SETA  &LFLAG3+8                                       @G860P2F 00470000
         AGO   .INITLP                                         @G860P1C 00471000
.VSMPAG  ANOP                                                  @G860P1C 00472000
         AIF   ('&FRELOCK(&I)' NE 'VSMPAG').CPULOCK            @G860P1C 00473000
&LFLAG1  SETA  &LFLAG1+32                                      @G860P2F 00474000
         AGO   .INITLP                                         @G860P1C 00475000
.CPULOCK ANOP                                                  @G860P1C 00476000
         AIF   ('&FRELOCK(&I)' NE 'CPU').TRACE                 @G860P1C 00477000
&LFLAG3  SETA  &LFLAG3+128                                     @G860P2F 00478000
         AGO   .INITLP                                         @G860P1C 00479000
.TRACE   ANOP                                                  @G860P1C 00480000
         AIF   ('&FRELOCK(&I)' NE 'TRACE').LCL                 @G860P1C 00481000
&LFLAG3  SETA  &LFLAG3+4                                       @G860P2F 00482000
         AGO   .INITLP                                         @G860P1C 00483000
.LCL     ANOP                                                           00484000
         AIF   ('&FRELOCK(&I)' NE 'LOCAL').IOS                     @P2C 00485000
&LFLAG2  SETA  &LFLAG2+1                                                00486000
         AGO   .INITLP                                                  00487000
.IOS     ANOP                                                      @P2M 00488000
         AIF   ('&FRELOCK(&I)' NE 'IOS').BMFLSD                    @L7C 00489000
&LFLAG3  SETA  &LFLAG3+2                                           @P3C 00490000
         AGO   .INITLP                                             @P2M 00491000
.BMFLSD  ANOP                                                      @L7A 00492000
         AIF   ('&FRELOCK(&I)' NE 'BMFLSD').XCFDS                  @L7A 00493000
&LFLAG5  SETA  &LFLAG5+128                                         @L7A 00494000
         AGO   .INITLP                                             @L7A 00495000
.XCFDS   ANOP                                                      @L8A 00496000
         AIF   ('&FRELOCK(&I)' NE 'XCFDS').XCFRES                  @L8A 00497000
&LFLAG5  SETA  &LFLAG5+64                                          @L8A 00498000
         AGO   .INITLP                                             @L8A 00499000
.XCFRES  ANOP                                                      @L8A 00500000
         AIF   ('&FRELOCK(&I)' NE 'XCFRES').XCFQ                   @L8A 00501000
&LFLAG5  SETA  &LFLAG5+32                                          @L8A 00502000
         AGO   .INITLP                                             @L8A 00503000
.XCFQ    ANOP                                                      @L8A 00504000
         AIF   ('&FRELOCK(&I)' NE 'XCFQ').ETRSET                   @L8A 00505000
&LFLAG5  SETA  &LFLAG5+16                                          @L8A 00506000
         AGO   .INITLP                                             @L8A 00507000
.ETRSET  ANOP                                                      @L5A 00508000
         AIF   ('&FRELOCK(&I)' NE 'ETRSET').IOSULUT                @L9C 00509000
&LFLAG5  SETA  &LFLAG5+8                                           @L6A 00510000
         AGO   .INITLP                                             @L6A 00511000
.IOSULUT ANOP                                                      @L9A 00512000
         AIF   ('&FRELOCK(&I)' NE 'IOSULUT').FINDP                 @L9A 00513000
&LFLAG6  SETA  &LFLAG6+64                                          @L9A 00514000
         AGO   .INITLP                                             @L9A 00515000
.FINDP   ANOP                                                           00516000
&L       SETA  &K                                                       00517000
.FINDP2  AIF   ('&FRELOCK(&I)'(&L,1) EQ '(').GETLOCK                    00518000
&L       SETA  &L-1                                                     00519000
         AIF   (&L LE 1).ERR5                                           00520000
         AGO   .FINDP2                                                  00521000
.GETLOCK ANOP                                                           00522000
&M       SETA  &L-1                    LENGTH OF LOCK                   00523000
&N       SETC  '&FRELOCK(&I)'(&L+1,&K-&M)                               00524000
         AIF   ('&FRELOCK(&I)'(1,&M) NE 'IOSUCB').RSMDS            @P2C 00525000
&LFLAG2  SETA  &LFLAG2+128                                              00526000
         LA    15,&N                   ACCESS ADDR OF LOCKWORD          00527000
         ST    15,SDWAIULW-SDWA(,1)   INITIALIZE IOSUCB LOCKWORD        00528000
         AGO   .INITLP                                                  00529000
.RSMDS   ANOP                                                      @L3A 00530000
         AIF   ('&FRELOCK(&I)'(1,&M) NE 'RSMDS').RSMGL             @L3A 00531000
&LFLAG1  SETA  &LFLAG1+1                                           @L3A 00532000
         LA    15,&N                   ACCESS ADDR OF LOCKWORD     @L3A 00533000
         ST    15,SDWALRSD-SDWA(,1)   INITIALIZE RSMDS LOCKWORD    @L3A 00534000
         AGO   .INITLP                                             @L3A 00535000
.RSMGL   ANOP                                                  @G860P1C 00536000
         AIF   ('&FRELOCK(&I)'(1,&M) NE 'RSMGL').ASMGL         @G860P1C 00537000
         AIF   (&LOCKEXT).BYPAS1                               @G860P1C 00538000
         L     14,SDWAXPAD-SDWA(0,1) ADDRESS OF EXTENSION PTRS @G860P1C 00539000
         AIF   ('&SYSASCE' EQ 'P').NOAR5                           @L2A 00540000
         CPYA  14,1                   SET UP ALET OF EXTENSION     @L2A 00541000
.NOAR5   ANOP                                                      @L2A 00542000
         L     14,SDWAXLCK-SDWAPTRS(0,14) ADDR OF FRELOCK EXT  @G860P1C 00543000
&LOCKEXT SETB  1                                               @G860P1C 00544000
.BYPAS1  ANOP                                                  @G860P1C 00545000
&LFLAG4  SETA  &LFLAG4+8                                       @G860P2F 00546000
         LA    15,&N                      ACCESS LOCKWORD ADDR @G860P1C 00547000
         ST    15,SDWALRSG-SDWAFLCK(,14)  INIT RSMGL  LOCKWORD @G860P1C 00548000
         AGO   .INITLP                                         @G860P1C 00549000
.ASMGL   ANOP                                                  @G860P1C 00550000
         AIF   ('&FRELOCK(&I)'(1,&M) NE 'ASMGL').RSMST         @G860P1C 00551000
         AIF   (&LOCKEXT).BYPAS2                               @G860P1C 00552000
         L     14,SDWAXPAD-SDWA(0,1) ADDRESS OF EXTENSION PTRS @G860P1C 00553000
         AIF   ('&SYSASCE' EQ 'P').NOAR6                           @L2A 00554000
         CPYA  14,1                   SET UP ALET OF EXTENSION     @L2A 00555000
.NOAR6   ANOP                                                      @L2A 00556000
         L     14,SDWAXLCK-SDWAPTRS(0,14) ADDR OF FRELOCK EXT  @G860P1C 00557000
&LOCKEXT SETB  1                                               @G860P1C 00558000
.BYPAS2  ANOP                                                  @G860P1C 00559000
&LFLAG4  SETA  &LFLAG4+2                                       @G860P2F 00560000
         LA    15,&N                      ACCESS LOCKWORD ADDR @G860P1C 00561000
         ST    15,SDWALASG-SDWAFLCK(,14)  INIT ASMGL  LOCKWORD @G860P1C 00562000
         AGO   .INITLP                                         @G860P1C 00563000
.RSMST   ANOP                                                  @G860P1C 00564000
         AIF   ('&FRELOCK(&I)'(1,&M) NE 'RSMST').RSMCM         @G860P2F 00565000
         AIF   (&LOCKEXT).BYPAS3                               @G860P1C 00566000
         L     14,SDWAXPAD-SDWA(0,1) ADDRESS OF EXTENSION PTRS @G860P1C 00567000
         AIF   ('&SYSASCE' EQ 'P').NOAR7                           @L2A 00568000
         CPYA  14,1                   SET UP ALET OF EXTENSION     @L2A 00569000
.NOAR7   ANOP                                                      @L2A 00570000
         L     14,SDWAXLCK-SDWAPTRS(0,14) ADDR OF FRELOCK EXT  @G860P1C 00571000
&LOCKEXT SETB  1                                               @G860P1C 00572000
.BYPAS3  ANOP                                                  @G860P1C 00573000
&LFLAG4  SETA  &LFLAG4+1                                       @G860P2F 00574000
         LA    15,&N                      ACCESS LOCKWORD ADDR @G860P1C 00575000
         ST    15,SDWALRSS-SDWAFLCK(,14)  INIT RSMST  LOCKWORD @G860P1C 00576000
         AGO   .INITLP                                         @G860P1C 00577000
.RSMCM   ANOP                                                  @G860P2F 00578000
         AIF   ('&FRELOCK(&I)'(1,&M) NE 'RSMCM').RSMXM         @G860P2F 00579000
         AIF   (&LOCKEXT).BYPAS6                               @G860P2F 00580000
         L     14,SDWAXPAD-SDWA(0,1) ADDRESS OF EXTENSION PTRS @G860P2F 00581000
         AIF   ('&SYSASCE' EQ 'P').NOAR8                           @L2A 00582000
         CPYA  14,1                   SET UP ALET OF EXTENSION     @L2A 00583000
.NOAR8   ANOP                                                      @L2A 00584000
         L     14,SDWAXLCK-SDWAPTRS(0,14) ADDR OF FRELOCK EXT  @G860P2F 00585000
&LOCKEXT SETB  1                                               @G860P2F 00586000
.BYPAS6  ANOP                                                  @G860P2F 00587000
&LFLAG4  SETA  &LFLAG4+16                                      @G860P2F 00588000
         LA    15,&N                      ACCESS LOCKWORD ADDR @G860P2F 00589000
         ST    15,SDWALRSC-SDWAFLCK(,14)  INIT RSMCM  LOCKWORD @G860P2F 00590000
         AGO   .INITLP                                         @G860P2F 00591000
.RSMXM   ANOP                                                  @G860P1C 00592000
         AIF   ('&FRELOCK(&I)'(1,&M) NE 'RSMXM').RSMAD         @G860P1C 00593000
         AIF   (&LOCKEXT).BYPAS4                               @G860P1C 00594000
         L     14,SDWAXPAD-SDWA(0,1) ADDRESS OF EXTENSION PTRS @G860P1C 00595000
         AIF   ('&SYSASCE' EQ 'P').NOAR9                           @L2A 00596000
         CPYA  14,1                   SET UP ALET OF EXTENSION     @L2A 00597000
.NOAR9   ANOP                                                      @L2A 00598000
         L     14,SDWAXLCK-SDWAPTRS(0,14) ADDR OF FRELOCK EXT  @G860P1C 00599000
&LOCKEXT SETB  1                                               @G860P1C 00600000
.BYPAS4  ANOP                                                  @G860P1C 00601000
&LFLAG1  SETA  &LFLAG1+128                                     @G860P2F 00602000
         LA    15,&N                      ACCESS LOCKWORD ADDR @G860P1C 00603000
         ST    15,SDWALRSX-SDWAFLCK(,14)  INIT RSMXM  LOCKWORD @G860P1C 00604000
         AGO   .INITLP                                         @G860P1C 00605000
.RSMAD   ANOP                                                  @G860P1C 00606000
         AIF   ('&FRELOCK(&I)'(1,&M) NE 'RSMAD').IOSPRG        @G860P1C 00607000
         AIF   (&LOCKEXT).BYPAS5                               @G860P1C 00608000
         L     14,SDWAXPAD-SDWA(0,1) ADDRESS OF EXTENSION PTRS @G860P1C 00609000
         AIF   ('&SYSASCE' EQ 'P').NOAR10                          @L2A 00610000
         CPYA  14,1                   SET UP ALET OF EXTENSION     @L2A 00611000
.NOAR10  ANOP                                                      @L2A 00612000
         L     14,SDWAXLCK-SDWAPTRS(0,14) ADDR OF FRELOCK EXT  @G860P1C 00613000
&LOCKEXT SETB  1                                               @G860P1C 00614000
.BYPAS5  ANOP                                                  @G860P1C 00615000
&LFLAG1  SETA  &LFLAG1+64                                      @G860P2F 00616000
         LA    15,&N                      ACCESS LOCKWORD ADDR @G860P1C 00617000
         ST    15,SDWALRSA-SDWAFLCK(,14)  INIT RSMAD  LOCKWORD @G860P1C 00618000
         AGO   .INITLP                                         @G860P1C 00619000
.IOSPRG  ANOP                                                           00620000
         AIF   ('&FRELOCK(&I)'(1,&M) NE 'IOSYNCH').ASMPAT               00621000
&LFLAG1  SETA  &LFLAG1+2                                                00622000
         LA    15,&N .                 ACCESS ADDR OF LOCKWORD          00623000
         ST    15,SDWAIPLW-SDWA(,1)   INITIALIZE IOSPURGE LOCKWORD      00624000
         AGO   .INITLP                                                  00625000
.ASMPAT  ANOP                                                           00626000
         AIF   ('&FRELOCK(&I)'(1,&M) NE 'ASM').ACBDEB              @L5C 00627000
&LFLAG1  SETA  &LFLAG1+8                                                00628000
         LA    15,&N .                 ACCESS ADDR OF LOCKWORD          00629000
         ST    15,SDWAAPLW-SDWA(,1)   INITIALIZE ASMPAT LOCKWORD        00630000
         AGO   .INITLP                                                  00631000
.ACBDEB  ANOP                                                           00632000
         AIF   ('&FRELOCK(&I)'(1,&M) NE 'TPACBDEB').CML        @G381P2F 00633000
&LFLAG2  SETA  &LFLAG2+8                                                00634000
         LA    15,&N .                 ACCESS ADDR OF LOCKWORD          00635000
         ST    15,SDWATALW-SDWA(,1)   INITIALIZE TPACBDEB LOCKWORD      00636000
         AGO   .INITLP                                                  00637000
.CML     ANOP                                                  @G381P2F 00638000
         AIF   ('&FRELOCK(&I)'(1,&M) NE 'CML').CMLREG          @G381P2F 00639000
         OI    SDWAACF2-SDWA(1),SDWACML IND FREE CML REQUEST   @G381P2F 00640000
         L     15,&N                   OBTAIN ASCB ADDRESS     @G381P2F 00641000
         ST    15,SDWACMLA-SDWA(,1)    SAVE ASCB ADDR FOR CML  @G381P2F 00642000
         AGO   .INITLP                                         @G381P2F 00643000
.CMLREG  ANOP                          CHK FOR CMLASCB IN REG  @G381P2F 00644000
         AIF   ('&FRELOCK(&I)'(1,&M-1) NE 'CML').NXTLOCK       @G381P2F 00645000
         OI    SDWAACF2-SDWA(1),SDWACML IND FREE CML REQUEST   @ZA86653 00646000
&N       SETC  '&FRELOCK(&I)'(&L+1,(&K-&M)-1)                  @G381P2F 00647000
         ST    &N,SDWACMLA-SDWA(,1)    SAVE ASCB ADDR FOR CML  @G381P2F 00648000
         AGO   .INITLP                                         @G381P2F 00649000
.NXTLOCK ANOP                                                           00650000
.NOLOCK  ANOP                                                           00651000
         MNOTE 12,'*** INVALID LOCK IN FRELOCK SUBSTRING ELEMENT &I'    00652000
         MEXIT                                                          00653000
.INITLP  ANOP                                                           00654000
&I       SETA  &I+1                                                     00655000
         AIF   (&I LE &J).LOCKLP                                        00656000
         AIF   (&LFLAG1 EQ 0).LOCK1                                     00657000
         OI    SDWAACF3-SDWA(1),&LFLAG1 INITIALIZE LOCK FLAGS           00658000
.LOCK1   ANOP                                                           00659000
         AIF   (&LFLAG2 EQ 0).LOCK2                            @G860P1C 00660000
         OI    SDWAACF4-SDWA(1),&LFLAG2 INITIALIZE LOCK FLAGS           00661000
.LOCK2   ANOP                                                           00662000
         AIF   (&LFLAG3 EQ 0 AND &LFLAG4 EQ 0 AND &LFLAG5 EQ 0 AND     X00663000
                &LFLAG6 EQ 0 AND &LFLAG7 EQ 0 AND &LFLAG8 EQ 0).SERIAL X00664000
                                                                   @L5A 00665000
.LOCK3   ANOP                                                  @G860P1C 00666000
         AIF   (&LOCKEXT).BYPASN                               @G860P1C 00667000
         L     14,SDWAXPAD-SDWA(0,1) ADDRESS OF EXTENSION PTRS @G860P1C 00668000
         AIF   ('&SYSASCE' EQ 'P').NOAR11                          @L2A 00669000
         CPYA  14,1                   SET UP ALET OF EXTENSION     @L2A 00670000
.NOAR11  ANOP                                                      @L2A 00671000
         L     14,SDWAXLCK-SDWAPTRS(0,14) ADDR OF FRELOCK      @G860P1C 00672000
.BYPASN  ANOP                                                  @G860P1C 00673000
         AIF   (&LFLAG3 EQ 0).LOCK4                            @G860P1C 00674000
         OI    SDWAFLK1-SDWAFLCK(14),&LFLAG3 INIT LOCK FLAGS   @G860P1C 00675000
.LOCK4   ANOP                                                  @G860P1C 00676000
         AIF   (&LFLAG4 EQ 0).LOCK5                                @L5C 00677000
         OI    SDWAFLK2-SDWAFLCK(14),&LFLAG4 INIT LOCK FLAGS   @G860P1C 00678000
.LOCK5   ANOP                                                      @L5A 00679000
         AIF   (&LFLAG5 EQ 0).LOCK6                                @L5A 00680000
         OI    SDWAFLE1-SDWAFLCK(14),&LFLAG5 INIT LOCK FLAGS       @L5A 00681000
.LOCK6   ANOP                                                      @L5A 00682000
         AIF   (&LFLAG6 EQ 0).LOCK7                                @L5A 00683000
         OI    SDWAFLE2-SDWAFLCK(14),&LFLAG6 INIT LOCK FLAGS       @L5A 00684000
.LOCK7   ANOP                                                      @L5A 00685000
         AIF   (&LFLAG7 EQ 0).LOCK8                                @L5A 00686000
         OI    SDWAFLE3-SDWAFLCK(14),&LFLAG7 INIT LOCK FLAGS       @L5A 00687000
.LOCK8   ANOP                                                      @L5A 00688000
         AIF   (&LFLAG8 EQ 0).SERIAL                               @L5A 00689000
         OI    SDWAFLE4-SDWAFLCK(14),&LFLAG8 INIT LOCK FLAGS       @L5A 00690000
.SERIAL  ANOP                                                  @G381P2F 00691000
         AIF   ('&SERIAL' EQ '').RETRY                         @G381P2F 00692000
         AIF   ('&RETRY' NE '').ERR20                          @G381P2F 00693000
         AIF   ('&SERIAL' EQ 'NO').NSERIAL                     @G381P2F 00694000
         AIF   ('&SERIAL' NE 'YES').ERR18                      @G381P2F 00695000
         OI    SDWAACF2-SDWA(1),SDWASERP  INDICATE SERIAL=YES  @G381P2F 00696000
         AGO   .RETRY                                          @G381P2F 00697000
.NSERIAL NI    SDWAACF2-SDWA(1),X'FF'-SDWASERP IND SERIAL=NO   @G381P2F 00698000
.RETRY   ANOP                                                  @G381P2F 00699000
         AIF   ('&RETRY' EQ '').DUMPOPX                            @L4C 00700000
         AIF   ('&RETRY' EQ 'FRR').OPTFRR                      @G381P2F 00701000
         AIF   ('&RETRY' NE 'ERROR').ERR19                     @G381P2F 00702000
         OI    SDWAACF2-SDWA(1),SDWARERR  INDICATE RETRY=ERROR @G381P2F 00703000
         AGO   .DUMPOPX                                            @L4C 00704000
.OPTFRR  NI    SDWAACF2-SDWA(1),X'FF'-SDWARERR IND RETRY=FRR   @G381P2F 00705000
.DUMPOPX ANOP                                                      @L4A 00706000
         AIF ('&DUMPOPX' EQ '').REGS    IF NO DUMPOPX, SKIP        @L4A 00707000
         AIF ('&DUMPOPX'(1,1) EQ '(').DUMPXR  ADDRESS IN REGISTER  @L4A 00708000
         &LA   0,&DUMPOPX(1) .          GET ADDRESS OF RANGE LIST  @L4A 00709000
         AGO   .DUMPRDX                                            @L4A 00710000
.DUMPXR  ANOP                                                      @L4A 00711000
         LR    0,&DUMPOPX(1) .          GET ADDRESS OF RANGE LIST  @L4A 00712000
         AIF   ('&SYSASCE' EQ 'P').DUMPRDX                         @L4A 00713000
         CPYA  0,&DUMPOPX(1)            GET ALET OF RANGE LIST     @L4A 00714000
.DUMPRDX ANOP                                                      @L4A 00715000
         L     15,X'10'(0,0)            GET ADDRESS OF CVT         @L4A 00716000
         L     15,X'C8'(15,0)           GET ADDR OF SECONDARY CVT  @L4A 00717000
         L     15,X'60'(15)             GET POINTER TO IEAVTRDX    @L4A 00718000
         BASSM 14,15                    BRANCH TO IEAVTRDX         @L4A 00719000
.REGS    ANOP                                                           00720000
         AIF   ('&REGS(1)' EQ '').RETUSER                               00721000
&A       SETC   'REGS'                                                  00722000
         AIF   ('&REGS'(1,1) NE '(').ERR1                               00723000
         AIF   ('&REGS(2)' EQ '').RET2                                  00724000
         RETURN  (&REGS(1),&REGS(2)) .                                  00725000
         MEXIT                                                          00726000
.RET2    RETURN  (&REGS(1))                                             00727000
.RETUSER ANOP                                                           00728000
         MEXIT                                                          00729000
.ERR1    ANOP                                                           00730000
         MNOTE 12,'***  REGISTER SPECIFICATION REQUIRED FOR &A KEYWORD' 00731000
         MEXIT                                                          00732000
.ERR2    ANOP                                                           00733000
         MNOTE 12,'***   RETADDR MUST BE SPECIFIED WITH RC/&RC'         00734000
         MEXIT                                                          00735000
.ERR3    ANOP                                                           00736000
         IHBERMAC 1020,RETADDR,RC/&RC                                   00737000
         MEXIT                                                          00738000
.ERR4    ANOP                                                           00739000
         IHBERMAC 54,,&RECORD                                           00740000
         MEXIT                                                          00741000
.ERR5    ANOP                                                           00742000
         MNOTE 12,'*** INVALID SYNTAX IN FRELOCK SUBSTRING ELEMENT &I'  00743000
         MEXIT                                                          00744000
.ERR6    ANOP                                                           00745000
         IHBERMAC 1020,RECPARM,RECORD/NO                                00746000
         MEXIT                                                          00747000
.ERR7    ANOP                                                           00748000
         IHBERMAC 54,,&DUMP                                             00749000
         MEXIT                                                          00750000
.ERR8    ANOP                                                           00751000
         IHBERMAC 1020,DUMPOPT/DUMPOPX,DUMP/NO                     @L4C 00752000
         MEXIT                                                          00753000
.ERR9    ANOP                                                           00754000
         IHBERMAC 54,,&RETREGS                                          00755000
         MEXIT                                                          00756000
.ERR10   ANOP                                                           00757000
         IHBERMAC 1020,FRESDWA,RC/&RC                                   00758000
         MEXIT                                                          00759000
.ERR11   ANOP                                                           00760000
         IHBERMAC 54,,&FRESDWA                                          00761000
         MEXIT                                                          00762000
.ERR12   ANOP                                                           00763000
         IHBERMAC 1020,RUB,RETREGS/NO                                   00764000
         MEXIT                                                          00765000
.ERR13   ANOP                                                           00766000
         MNOTE 12,'***   COMPCOD OPERAND EXCEEDS SPECIFIED LIMITS'      00767000
         MEXIT                                                          00768000
.ERR14   ANOP                                                           00769000
         IHBERMAC 54,,&COMPCOD(2)                                       00770000
         MEXIT                                                          00771000
.ERR15   ANOP                                                           00772000
         IHBERMAC 1020,RETREGS,RC/&RC                                   00773000
         MEXIT                                                          00774000
.ERR16   ANOP                                                           00775000
         MNOTE 12,'** KEYWORD FRLKRTY IS ONLY VALID FOR RC=4'      @L1C 00776000
         MEXIT                                                          00777000
.ERR17   ANOP                                                           00778000
         MNOTE 12,'*** REGISTER SPECIFICATION ILLEGAL FOR RC KEYWORD'   00779000
         MEXIT                                                          00780000
.ERR18   ANOP                                                  @G381P2F 00781000
         MNOTE 12,'*** INVALID SYNTAX ON SERIAL KEYWORD'       @G381P2F 00782000
         MEXIT                                                 @G381P2F 00783000
.ERR19   ANOP                                                  @G381P2F 00784000
         MNOTE 12,'*** INVALID SYNTAX ON RETRY KEYWORD'        @G381P2F 00785000
         MEXIT                                                 @G381P2F 00786000
.ERR20   ANOP                                                  @G381P2F 00787000
         MNOTE 12,'** KEYWORDS SERIAL AND RETRY ARE MUTUALLY EXCLUSIVE' 00788000
         MEXIT                                                 @G381P2F 00789000
.ERR21   ANOP                                                      @L1A 00790000
         MNOTE 12,'** INVALID SYNTAX ON FRLKRTY KEYWORD'           @L1A 00791000
         MEXIT                                                     @L1A 00792000
.ERR22   ANOP                                                      @L1A 00793000
         MNOTE 12,'** INVALID SYNTAX ON RETRY15 KEYWORD'           @L1A 00794000
         MEXIT                                                     @L1A 00795000
.ERR23   ANOP                                                      @L1A 00796000
         MNOTE 12,'** INVALID SYNTAX ON REMREC KEYWORD'            @L1A 00797000
         MEXIT                                                     @L1A 00798000
.ERR24   ANOP                                                      @L1A 00799000
         MNOTE 12,'** KEYWORD REMREC IS ONLY VALID FOR RC=4'       @L1A 00800000
         MEXIT                                                     @L1A 00801000
.ERR25   ANOP                                                      @L1A 00802000
         MNOTE 12,'** KEYWORD RETRY15 IS ONLY VALID FOR RC=4'      @L1A 00803000
         MEXIT                                                     @L1A 00804000
.ERR26   ANOP                                                      @L4A 00805000
     MNOTE 12,'** KEYWORDS DUMPOPT AND DUMPOPX ARE MUTUALLY EXCLUSIVE' X00806000
                                                                   @L4A 00807000
         MEXIT                                                     @L4A 00808000
.ERRSER  ANOP                                                  @D61ADTN 00809000
         IHBERMAC 1309,SERIAL                                  @D61ADTN 00810000
         MEXIT                                                 @D61ADTN 00811000
.ERRFRLK ANOP                                                  @D61APTN 00812000
         IHBERMAC 1309,FRLKRTY                                 @D61ADTN 00813000
         MEXIT                                                 @D61ADTN 00814000
.ERRSSRS ANOP                                                  @D64ADOW 00815000
         IHBERMAC 1309,SSRESET                                 @D64ADOW 00816000
         MEXIT                                                 @D64ADOW 00817000
.ERRC16  ANOP                                                  @D64ADOW 00818000
         IHBERMAC 1309,RC/16                                   @D64ADOW 00819000
         MEXIT                                                 @D64ADOW 00820000
         MEND                                                           00821000
* */                                                                    00822000
* SETRP: MACRO KEYS(WKAREA,RETADDR,RC,RETREGS,DUMP,RECORD,REGS,DUMPOPT, 00823000
*     DUMPOPX,RECPARM,FRELOCK,CPU,COMPCOD,FRESDWA,RUB,SERIAL,RETRY,     00824000
*     REASON,FRLKRTY,RETRY15,REMREC);                         /* @L4C*/ 00825000
*     ANS ('?' || MACLABEL || 'SETRPP ' || MACLIST || MACKEYS || ';');  00826000
* %END;                                                                 00827000
