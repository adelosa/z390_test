* %       GOTO PLSSKIP;                                                 00001000
*/********************************************************************/ 00002000
*/*                                                                  */ 00003000
*/* MACRO: STORAGE                                                   */ 00004000
*/*                                                                  */ 00005000
*/*01* PROPRIETARY STATEMENT=                                        */ 00006000
*/***PROPRIETARY_STATEMENT********************************************/ 00007000
*/*                                                                  */ 00008000
*/*                                                                  */ 00009000
*/*         LICENSED MATERIALS - PROPERTY OF IBM                     */ 00010790
*/*         "RESTRICTED MATERIALS OF IBM"                            */ 00011580
*/*         5686-066                                                 */ 00012370
*/*         (C)COPYRIGHT IBM CORP. 1996                              */ 00013160
*/*                                                                  */ 00014000
*/* STATUS= HBB4430                                                  */ 00015000
*/*                                                                  */ 00016000
*/***END_OF_PROPRIETARY_STATEMENT*************************************/ 00017000
*/*                                                                  */ 00018000
*/* FUNCTION: INTERFACE TO STORAGE ROUTINES                          */ 00019000
*/*                                                                  */ 00020000
*/* SYNTAX: STORAGE OBTAIN|RELEASE                                   */ 00021000
*/*                <,COND=YES|NO>                                    */ 00022000
*/*                <INADDR=VARIABLE1>                                */ 00023000
*/*                <,ADDR=RX-TYPE ADDRESS|REGISTER(1),(2)-(12)>  @D3C*/ 00024000
*/*                <,ALET=SYMBOL|DECIMAL DIGIT                       */ 00025000
*/*                       |ACCESS REGISTER(1),(2)-(12)>              */ 00026000
*/*                <,LENGTH=(LENGTH1=SYMBOL|DECIMAL DIGIT|           */ 00027000
*/*                              REGISTER(0),(2)-(12))               */ 00028000
*/*                         (,LENGTH2=SYMBOL|DECIMAL VALUE|          */ 00029000
*/*                              REGISTER(1),(2)-(12))>              */ 00030000
*/*                <,SP=DECIMAL NUMBER|REGISTER(15),(2)-(12)>        */ 00031000
*/*                <,BNDRY=DBLWD|PAGE>                               */ 00032000
*/*                <,KEY=DECIMAL NUMBER|REGISTER(2)-(12)>            */ 00033000
*/*                <,LOC=(RES|BELOW|ANY|EXPLICIT<,ANY>)|             */ 00034000
*/*                  RES|ANY|BELOW|EXPLICIT|EXPLICIT,BELOW>          */ 00035000
*/*                <,LINKAGE=SYSTEM>                                 */ 00036000
*/*                <,RTCD=SYMBOL|REGISTER(15),(2)-(12)>              */ 00037000
*/*                <,OWNER=HOME|PRIMARY|SECONDARY|SYSTEM>        @L3A*/ 00038000
*/*                <,TCBADDR=RS-TYPE ADDRESS | REGISTER(2)-(12)> @D4A*/ 00039000
*/*                <,RELATED=ANY VALID MACRO KEYWORD SPECIFIED>      */ 00040000
*/*                                                                  */ 00041000
*/*                                                                  */ 00042000
*/* NOTE: THE DEFAULT FOR THE ALET OPERAND IS '0'                    */ 00043000
*/*       THE DEFAULT FOR THE BNDRY OPERAND IS 'DBLWD'               */ 00044000
*/*       THE DEFAULT FOR THE COND OPERAND IS 'NO'                   */ 00045000
*/*       THE DEFAULT FOR THE KEY OPERAND IS '0'                     */ 00046000
*/*       THE DEFAULT FOR THE LINKAGE OPERAND IS 'SYSTEM'            */ 00047000
*/*       THE DEFAULT FOR THE LOC OPERAND IS 'RES'                   */ 00048000
*/*       THE DEFAULT FOR THE SP OPERAND IS '0'                      */ 00049000
*/*       THE DEFAULT FOR THE OWNER OPERAND IS 'HOME'            @L3A*/ 00050000
*/*       BNDRY OPERAND IS NOT VALID WITH RELEASE                    */ 00051000
*/*       OWNER PARAMETER IS NOT VALID WITH RELEASE              @L3A*/ 00052000
*/*       LOC OPERAND IS NOT VALID WITH RELEASE                      */ 00053000
*/*       CALLRKY OPERAND IS NOT VALID WITH KEY                  @L2A*/ 00054000
*/*       RTCD OPERAND IS NOT VALID WITH COND=NO                     */ 00055000
*/*       SP OPERAND IS REQUIRED WHEN KEY IS SPECIFIED               */ 00056000
*/*       BNDRY OPERAND IS NOT VALID WITH LOC=EXPLICIT           @L4A*/ 00057000
*/*       LOC=EXPLICIT REQUIRED WITH INADDR                      @P7C*/ 00058000
*/*       INADDR OPERAND IS NOT VALID WITH RELEASE               @L4A*/ 00059000
*/*                                                                  */ 00060000
*/* |KEYWORDS->|   | L | L |   |   |   |   |   | L |   |   | R |C| | */ 00061000
*/* |          |   | E | E |   |   |   |   |   | I |   |   | E |A|I| */ 00062000
*/* |          |   | N | N |   |   | B |   |   | N |   |   | L |L|N| */ 00063000
*/* |          | C | G | G |   | A | N |   |   | K | A | R | A |L|A| */ 00064000
*/* |          | O | T | T |   | L | D | K | L | A | D | T | T |R|D| */ 00065000
*/* |          | N | H | H | S | E | R | E | O | G | D | C | E |K|D| */ 00066000
*/* |          | D |(1)|(2)| P | T | Y | Y | C | E | R | D | D |Y|R| */ 00067000
*/* |__________|___|___|___|___|___|___|___|___|___|___|___|___|_|_| */ 00068000
*/* |OBTAIN    | O | R | O | O | O | O | O | O | O | O | O | O |O|O| */ 00069000
*/* |__________|___|___|___|___|___|___|___|___|___|___|___|___|_|_| */ 00070000
*/* |RELEASE   | O | R | I | O | O | E | O | E | O | R | O | O |O|E| */ 00071000
*/* |          |   |(*)|   |(*)|   |   |   |   |   |(*)|   |   | | | */ 00072000
*/* |__________|___|___|___|___|___|___|___|___|___|___|___|___|_|_| */ 00073000
*/*                                                                  */ 00074000
*/* |KEYWORDS->|   | T |   |   |   |   |   |   |   |   |   |   | | | */ 00075000
*/* |          |   | C |   |   |   |   |   |   |   |   |   |   | | | */ 00076000
*/* |          | O | B |   |   |   |   |   |   |   |   |   |   | | | */ 00077000
*/* |          | W | A |   |   |   |   |   |   |   |   |   |   | | | */ 00078000
*/* |          | N | D |   |   |   |   |   |   |   |   |   |   | | | */ 00079000
*/* |          | E | D |   |   |   |   |   |   |   |   |   |   | | | */ 00080000
*/* |          | R | R |   |   |   |   |   |   |   |   |   |   | | | */ 00081000
*/* |__________|___|___|___|___|___|___|___|___|___|___|___|___|_|_| */ 00082000
*/* |OBTAIN    | O | O |   |   |   |   |   |   |   |   |   |   | | | */ 00083000
*/* |__________|___|___|___|___|___|___|___|___|___|___|___|___|_|_| */ 00084000
*/* |RELEASE   | E | O |   |   |   |   |   |   |   |   |   |   | | | */ 00085000
*/* |          |   |   |   |   |   |   |   |   |   |   |   |   | | | */ 00086000
*/* |__________|___|___|___|___|___|___|___|___|___|___|___|___|_|_| */ 00087000
*/*                                                                  */ 00088000
*/*                                                                  */ 00089000
*/*            E = ERROR IF SPECIFIED                                */ 00090000
*/*            I = IGNORED                                           */ 00091000
*/*            O = OPTIONAL                                          */ 00092000
*/*            R = REQUIRED                                          */ 00093000
*/*           (1)= SINGLE LENGTH REQUEST OR MAXIMUM LENGTH REQUEST   */ 00094000
*/*           (2)= MINIMUM LENGTH REQUEST                            */ 00095000
*/*           (*)= For subpool release, SP must be specified without */ 00096000
*/*                ADDR and LENGTH.                                  */ 00097000
*/*                For a "normal" release (i.e. not a subpool        */ 00098000
*/*                  release),                                       */ 00099000
*/*                - ADDR AND LENGTH ARE REQUIRED,                   */ 00100000
*/*                  AND SP IS OPTIONAL.                             */ 00101000
*/*                                                                  */ 00102000
*/* Valid uses of registers to pass the subpool and key follow.      */ 00103000
*/* (All others are not valid)                                       */ 00104000
*/*                                                                  */ 00105000
*/* Valid use #1:    ------------------------------------------------*/ 00106000
*/*                                                                  */ 00107000
*/* Reg X:  xxxx xxxx  xxxx xxxx  xxxx xxxx KKKK xxxx                */ 00108000
*/* Reg Y:  xxxx xxxx  xxxx xxxx  xxxx xxxx SSSS SSSS                */ 00109000
*/*                                                                  */ 00110000
*/* Each 'x' represents 1 bit.                                       */ 00111000
*/* KKKK represents the key, SSSS SSSS represents the subpool.       */ 00112000
*/* Reg X can be any of the following registers: 2-12, 15.           */ 00113000
*/* Reg Y can be any of the following registers: 2-12, 15.           */ 00114000
*/* Reg X cannot be the same as reg Y.                               */ 00115000
*/*                                                                  */ 00116000
*/*                                                                  */ 00117000
*/* Valid use #2, both subpool and key in 1 reg:  -------------------*/ 00118000
*/*                                                                  */ 00119000
*/* Reg X:  xxxx xxxx  KKKK xxxx  SSSS SSSS xxxx xxxx                */ 00120000
*/*                                                                  */ 00121000
*/* Each 'x' represents 1 bit.                                       */ 00122000
*/* KKKK represents the key, SSSS SSSS represents the subpool.       */ 00123000
*/* Reg X can be any of the following registers: 2-12, 15.           */ 00124000
*/*                                                                  */ 00125000
*/*                                                                  */ 00126000
*/* INPUT TO 'OBTAIN':                                               */ 00127000
*/*   REGISTER 0  -  LENGTH OF SINGLE LENGTH REQUEST                 */ 00128000
*/*               -  MAXIMUM LENGTH OF VARIABLE LENGTH REQUEST       */ 00129000
*/*   REGISTER 1  -  Input address for EXPLICIT request          @L4C*/ 00130000
*/*               -  MINIMUM LENGTH OF VARIABLE LENGTH REQUEST       */ 00131000
*/*   REGISTER 14 -  PC NUMBER TO INVOKE THE STORAGE ROUTINE         */ 00132000
*/*   REGISTER 15 -                                                  */ 00133000
*/*     BYTE 0       FLAGS                                       @L2C*/ 00134000
*/*       BIT 0      RESERVED                                        */ 00135000
*/*       BIT 1      0 ==> CALLRKY NOT SPECIFIED                 @L2A*/ 00136000
*/*                  1 ==> CALLRKY SPECIFIED                     @L2A*/ 00137000
*/*       BITS 2-4   RESERVED                                        */ 00138000
*/*       BIT  5     TCBADDR PROVIDED                            @D4A*/ 00139000
*/*       BITS 6-7   OWNER (00=H, 01=P, 10=S, 11=SY)             @L3A*/ 00140000
*/*     BYTE 1       KEY (BITS 8-11)                                 */ 00141000
*/*     BYTE 2       SUBPOOL NUMBER                                  */ 00142000
*/*     BYTE 3       FLAGS                                           */ 00143000
*/*       BIT 0      0 ==> ALET NOT SPECIFIED                        */ 00144000
*/*                  1 ==> ALET SPECIFIED                            */ 00145000
*/*       BIT 1      WHEN LOC=EXPLICIT CODED                     @L4A*/ 00146000
*/*                  0 ==> LOC=(,BELOW) SPECIFIED                @L4A*/ 00147000
*/*                  1 ==> LOC=(,ANY) SPECIFIED OR DEFAULTED     @L4A*/ 00148000
*/*                  OTHERWISE                                   @L4A*/ 00149000
*/*                  0 ==> LOC=(,ANY) NOT SPECIFIED                  */ 00150000
*/*                  1 ==> LOC=(,ANY) SPECIFIED                      */ 00151000
*/*       BITS 2-3   00 ==> LOC=RES SPECIFIED                        */ 00152000
*/*                  01 ==> LOC=BELOW SPECIFIED                      */ 00153000
*/*                  10 ==> LOC=EXPLICIT SPECIFIED                   */ 00154000
*/*                  11 ==> LOC=ANY SPECIFIED                        */ 00155000
*/*       BIT 4      0 ==> SINGLE LENGTH REQUEST                     */ 00156000
*/*                  1 ==> VARIABLE LENGTH REQUEST                   */ 00157000
*/*       BIT 5      0 ==> DOUBLEWORD BOUNDARY                       */ 00158000
*/*                  1 ==> PAGE BOUNDARY                             */ 00159000
*/*       BIT 6      0 ==> COND=YES                                  */ 00160000
*/*                  1 ==> COND=NO                                   */ 00161000
*/*       BIT 7      0 ==> OBTAIN REQUEST                            */ 00162000
*/*                  1 ==> RELEASE REQUEST                           */ 00163000
*/*   ACCESS REG0 -  IGNORED IF TCBADDR PARAMETER IS NOT SPECIFIED   */ 00164000
*/*               -  INDICATES THE INPUT TCB                     @D4A*/ 00165000
*/*   ACCESS REG1 -  IGNORED IF ALET PARAMETER IS NOT SPECIFIED      */ 00166000
*/*               -  INDICATE WHICH ADDRESS SPACE STORAGE            */ 00167000
*/*                  IS TO BE OBTAINED FROM                          */ 00168000
*/*                                                                  */ 00169000
*/* OUTPUT OF 'OBTAIN':                                              */ 00170000
*/*   REGISTER 0    -  UNPREDICTABLE IF SINGLE LENGTH REQUEST        */ 00171000
*/*                 -  MAXIMUM LENGTH OF VARIABLE LENGTH REQUEST     */ 00172000
*/*   REGISTER 1    -  ADDRESS OF OBTAINED STORAGE                   */ 00173000
*/*   REGISTER 2-13 -  UNCHANGED                                     */ 00174000
*/*   REGISTER 14   -  UNPREDICTABLE                                 */ 00175000
*/*   REGISTER 15   -  RETURN CODE FOR COND=YES ONLY                 */ 00176000
*/*                    0 ==> VIRTUAL STORAGE WAS ALLOCATED           */ 00177000
*/*                    4 ==> EXPLICIT REQUEST: storage requested @L4C*/ 00178000
*/*                          was outside the region boundaries       */ 00179000
*/*                          OTHERWISE: insufficient contiguous      */ 00180000
*/*                          virtual storage in region to satisfy    */ 00181000
*/*                          request.                                */ 00182000
*/*                    8 ==> REAL STORAGE WAS NOT AVAILABLE          */ 00183000
*/*                          FOR BACKING THE REQUEST OR INTERNAL     */ 00184000
*/*                          STORAGE MANAGEMENT CONTROL BLOCKS       */ 00185000
*/*                    10==> EXPLICIT REQUEST: Storage requested @L4A*/ 00186000
*/*                          is not available for one of four        */ 00187000
*/*                          reasons:                                */ 00188000
*/*                          - some or all is already allocated      */ 00189000
*/*                          - some part of a page containing part   */ 00190000
*/*                            of the storage requested              */ 00191000
*/*                            a) is allocated to another subpool    */ 00192000
*/*                            b) has a real storage attribute which */ 00193000
*/*                               conflicts with the real storage    */ 00194000
*/*                               attribute requested                */ 00195000
*/*                            c) is allocated with a key that is    */ 00196000
*/*                               different from the key of the      */ 00197000
*/*                               storage requested                  */ 00198000
*/*   ACCESS REG0   -  Unpredictable                                 */ 00199000
*/*   ACCESS REG1   -  0 ==> IF ALET PARAMETER IS NOT SPECIFIED      */ 00200000
*/*                 -  ALET OF OBTAINED STORAGE                      */ 00201000
*/*   ACCESS REG 2-13 - Unchanged                                    */ 00202000
*/*   ACCESS REG 14 -  Unpredictable                                 */ 00203000
*/*   ACCESS REG 15 -  Unpredictable                                 */ 00204000
*/*                                                                  */ 00205000
*/* INPUT TO 'RELEASE':                                              */ 00206000
*/*   REGISTER 0  -  LENGTH OF STORAGE BEING RELEASED                */ 00207000
*/*               -  0 ==> RELEASE ENTIRE SUBPOOL                    */ 00208000
*/*   REGISTER 1  -  ADDRESS OF STORAGE BEING RELEASED               */ 00209000
*/*               -  0 ==> RELEASE ENTIRE SUBPOOL                    */ 00210000
*/*   REGISTER 14 -  PC NUMBER TO INVOKE THE STORAGE ROUTINE         */ 00211000
*/*   REGISTER 15 -                                                  */ 00212000
*/*     BYTE 0       FLAGS                                       @L2C*/ 00213000
*/*       BIT 0      RESERVED                                        */ 00214000
*/*       BIT 1      0 ==> CALLRKY NOT SPECIFIED                 @L2A*/ 00215000
*/*                  1 ==> CALLRKY SPECIFIED                     @L2A*/ 00216000
*/*       BITS 2-4   RESERVED                                    @D4C*/ 00217000
*/*       BIT  5     TCBADDR PROVIDED                            @D4A*/ 00218000
*/*       BITS 6-7   RESERVED                                    @D4C*/ 00219000
*/*     BYTE 1       KEY (BITS 8-11)                                 */ 00220000
*/*     BYTE 2       SUBPOOL NUMBER                                  */ 00221000
*/*     BYTE 3       FLAGS                                           */ 00222000
*/*       BIT 0      0 ==> ALET NOT SPECIFIED                        */ 00223000
*/*                  1 ==> ALET SPECIFIED                            */ 00224000
*/*       BITS 1-5   RESERVED                                        */ 00225000
*/*       BIT 6      0 ==> COND=YES                                  */ 00226000
*/*                  1 ==> COND=NO                                   */ 00227000
*/*       BIT 7      0 ==> OBTAIN REQUEST                            */ 00228000
*/*                  1 ==> RELEASE REQUEST                           */ 00229000
*/*   ACCESS REG0 -  IGNORED IF TCBADDR PARAMETER IS NOT SPECIFIED   */ 00230000
*/*               -  INDICATES THE INPUT TCB                     @D4A*/ 00231000
*/*   ACCESS REG1 -  IGNORED IF ALET PARAMETER IS NOT SPECIFIED      */ 00232000
*/*               -  INDICATE WHICH ADDRESS SPACE STORAGE            */ 00233000
*/*                  IS TO BE RELEASED FROM                          */ 00234000
*/*                                                                  */ 00235000
*/* OUTPUT OF 'RELEASE':                                             */ 00236000
*/*   REGISTER 0    -  UNPREDICTABLE                                 */ 00237000
*/*   REGISTER 1    -  UNPREDICTABLE                                 */ 00238000
*/*   REGISTER 2-13 -  UNCHANGED                                     */ 00239000
*/*   REGISTER 14   -  UNPREDICTABLE                                 */ 00240000
*/*   REGISTER 15   -  RETURN CODE FOR COND=YES ONLY                 */ 00241000
*/*                    0 ==> VIRTUAL STORAGE WAS FREED               */ 00242000
*/*                    4 ==> NOT ALL VIRTUAL STORAGE WAS FREED       */ 00243000
*/*                    8 ==> PART OF AREA BEING FREED IS STILL FIXED.*/ 00244000
*/*                          THIS CONDITION CAUSES AN A78 ABEND      */ 00245000
*/*                          UNLESS TCBEOTFM INDICATOR IS ON.        */ 00246000
*/*   ACCESS REG0   -  Unpredictable                                 */ 00247000
*/*   ACCESS REG1   -  Unpredictable                                    00248000
*/*   ACCESS REG 2-13 - Unchanged                                    */ 00249000
*/*   ACCESS REG 14 -  Unpredictable                                 */ 00250000
*/*   ACCESS REG 15 -  Unpredictable                                 */ 00251000
*/*                                                                  */ 00252000
*/* MACROS: NONE                                                     */ 00253000
*/*                                                                  */ 00254000
*/* CHANGE ACTIVITY:                                                 */ 00255000
*/*                                                                  */ 00256000
*/*        $L0=AR,HBB3310,850925,PDFT: STORAGE MACRO                 */ 00257000
*/*        $P1=PC40005,HBB3310,860115,PDFT:                          */ 00258000
*/*            MNOTE MUST BE ISSUED WHEN MORE THAN ONE POSITIONAL    */ 00259000
*/*            PARAMETER IS SPECIFIED                            @P1A*/ 00260000
*/*        $P2=PC40006,HBB3310,860115,PDFT:                          */ 00261000
*/*            MNOTE SHOULD BE ISSUED IN ORDER TO BE CONSISTENT      */ 00262000
*/*            WITH OTHER PARAMETERS.                                */ 00263000
*/*            (I.E. STORAGE OBTAIN,COND=YES,LENGTH=8,ADDR=(,(1)),   */ 00264000
*/*            SP=(,255),RTCD=(,(15))                                */ 00265000
*/*            THERE ARE 2 MNOTES ISSUED FOR THE SP KEYWORD,         */ 00266000
*/*            BUT THERE IS 1 MNOTE ISSUED EACH FOR THE ADDR KEYWORD */ 00267000
*/*            AND THE RTCD KEYWORD.)                            @P2A*/ 00268000
*/*        $P3=PC40009,HBB3310,860115,PDFT:                          */ 00269000
*/*            KEY CAN BE SPECIFIED AS A NUMBER OR                   */ 00270000
*/*            REGISTER (2)-(12)                                 @P3A*/ 00271000
*/*        $D1=DCR3,HBB3310,860219,PDFT:                             */ 00272000
*/*            REGISTER 15 HAS THE FOLLOWING INPUT:                  */ 00273000
*/*            BYTE 0: RESERVED                                      */ 00274000
*/*            BYTE 1: KEY (BITS 8-11)                               */ 00275000
*/*            BYTE 2: SUBPOOL                                       */ 00276000
*/*            BYTE 3: FLAGS                                     @D1A*/ 00277000
*/*        $P4=PC40029,HBB3310,860219,PDFT:                          */ 00278000
*/*            STORAGE UPDATE                                    @P4A*/ 00279000
*/*        $P5=PC40056,HBB3310,860418,PDFT:                          */ 00280000
*/*            DIFFERENT PC NUMBER FOR STORAGE OBTAIN AND            */ 00281000
*/*            STORAGE RELEASE                                   @P5A*/ 00282000
*/*        $P6=PC40014,HBB3310,860728,PDFT:                          */ 00283000
*/*            ONLY ONE MNOTE ISSUED WHEN                            */ 00284000
*/*            'COND=NO' OR DEFAULT OF 'COND' SPECIFIED              */ 00285000
*/*              WITH 'RTCD'                                     @P6A*/ 00286000
*/*        $D2=DCR173,HBB3310,861229,PDT6:  Change the               */ 00287000
*/*            requirements for specifying subpool release.      @D2A*/ 00288000
*/*        $L1=PROD310,HBB3310,870603,PDF5:                          */ 00289000
*/*            C-p-y-right changes                               @L1A*/ 00290000
*/*        $D3=DCR303,HBB3310,880120,PDT6:  Fix documentation        */ 00291000
*/*            about the ADDR parameter (RX-type address).       @D3A*/ 00292000
*/*        OY30573 - Change KEY processing to not alter the          */ 00293000
*/*            register it was passed in and add mnote if any        */ 00294000
*/*            parameter uses an invalid register            @YA30573*/ 00295000
*/*        $L2=TCSAU,  HBB4430,910805,PDXB: CALLRKY                  */ 00296000
*/*        $L3=TCSAU  ,HBB4430,911003,PDXB:  OWNER                   */ 00297000
*/*        $L4=POSIXVSM,HBB4430,910722,PD00BV:                       */ 00298000
*/*            STORAGE OBTAIN BY ADDRESS                         @L4A*/ 00299000
*/*        $P7=PKB2328 ,HBB4430,920429,PD00XB: Fix messages          */ 00300000
*/*        $D4=DKB0110 ,HBB4430,920617,PD00XB: TCBADDR               */ 00301000
*/*                                                                  */ 00302000
*/*      @D61ADTN: VSE/ESA Compatibility with MVS/ESA                */ 00303000
*/*                                                                  */ 00304000
*/********************************************************************/ 00305000
*/* A - 000000-999999                                                */ 00306000
*/*                                                                     00307000
         MACRO                                                          00308000
&LABEL   STORAGE &TYPE,                                                +00309000
               &COND=,                                                 +00310000
               &INADDR=,                                           @L4A+00311000
               &ADDR=,                                                 +00312000
               &ALET=,                                                 +00313000
               &LENGTH=,                                               +00314000
               &SP=,                                                   +00315000
               &BNDRY=,                                                +00316000
               &KEY=,                                                  +00317000
               &LOC=,                                                  +00318000
               &LINKAGE=,                                              +00319000
               &RTCD=,                                                 +00320000
               &CALLRKY=,                                          @L2A+00321000
               &OWNER=,                                            @L3A+00322000
               &TCBADDR=,                                          @D4A+00323000
               &RELATED=                                                00324000
.*                                                                      00325000
.********************************************************************** 00326000
.*                                                                      00327000
.*       DECLARE INTERNAL VARIABLES                                     00328000
.*                                                                      00329000
.********************************************************************** 00330000
.*                                                                      00331000
         LCLB   &ADDRREG           1 ==> ADDRESS IS IN A REGISTER       00332000
         LCLB   &ALETREG           1 ==> ALET IS IN A REGISTER          00333000
         LCLC   &ARGM1             FIRST ARGUMENT                       00334000
         LCLC   &ARGM2             SECOND ARGUMENT                      00335000
         LCLC   &BALET             INDICATOR IF ALET SPECIFIED          00336000
         LCLC   &BBND              INDICATOR IF PAGE SPECIFIED          00337000
         LCLC   &BFUNC             INDICATOR IF RELEASE SPECIFIED       00338000
         LCLC   &BLOC              00 FOR RES, 01 FOR BELOW, 11 FOR ANY 00339000
         LCLC   &BREAL             INDICATOR IF ANY REAL SPECIFIED      00340000
         LCLB   &BSPRLS            1 ==> SUBPOOL RELEASE                00341000
         LCLC   &BUNCN             INDICATOR IF COND=YES/NO             00342000
         LCLC   &BCKEY             INDICATOR IF CALLRKY=YES/NO     @L2A 00343000
         LCLC   &BVAR              INDICATOR IF MIN-VALUE SPECIFIED     00344000
         LCLA   &ERROR4            ERROR CODE OF 4                      00345000
         LCLA   &ERROR12           ERROR CODE OF 12                     00346000
         LCLC   &FLAGS             FLAGS FOR OBTAIN AND RELEASE         00347000
         LCLC   &GNAME             VARIABLE NAME                        00348000
         LCLC   &IADDR             ADDRESS OF STORAGE                   00349000
         LCLB   &IADRREG           1 ==> INADDR IS IN A REGISTER   @L4A 00350000
         LCLC   &IALET             ACCESS LIST ENTRY TOKEN              00351000
         LCLC   &IBKEY             INDICATOR IF KEY SPECIFIED           00352000
         LCLC   &IBNDRY            BOUNDARY                             00353000
         LCLC   &ICOND             COND(YES|NO)                         00354000
         LCLC   &ICKEY             CALLRKY(YES|NO)                 @L2A 00355000
         LCLC   &IFUNC             FUNCTION SPECIFIED                   00356000
         LCLC   &IKEY              KEY                                  00357000
         LCLC   &ILEN1             FIRST ARGUMENT OF LENGTH PARAMETER   00358000
         LCLC   &ILEN2             SECOND ARGUMENT OF LENGTH PARAMETER  00359000
         LCLC   &ILINK             LINKAGE                              00360000
         LCLC   &ILOC1             FIRST ARGUMENT OF LOC PARAMETER      00361000
         LCLC   &ILOC2             SECOND ARGUMENT OF LOC PARAMETER     00362000
         LCLC   &IINADDR           ADDRESS OF STORAGE TO OBTAIN    @L4A 00363000
         LCLC   &INAME             INVOCATION MACRO NAME                00364000
         LCLC   &INVALID           INVALID MESSAGE TEXT                 00365000
         LCLC   &IOWN              OWNER information               @L3A 00366000
         LCLC   &ITCBADD           TCBADDR information             @D4A 00367000
         LCLC   &ITCBADB           TCBADDR 0 or 1 (Bit info)       @D4A 00368000
         LCLC   &IREGS             USE OR SAVE REGISTERS                00369000
         LCLA   &IREG15            REGISTER 15                          00370000
         LCLC   &IRTCD             RTCD NAME                            00371000
         LCLC   &ISP               SUBPOOL                              00372000
         LCLC   &I313              MESSAGE ID                           00373000
         LCLC   &I323              MESSAGE ID                           00374000
         LCLC   &I331              MESSAGE ID                           00375000
         LCLC   &I343              MESSAGE ID                           00376000
         LCLC   &I351              MESSAGE ID                           00377000
         LCLB   &KEYREG            1 ==> KEY IS IN A REGISTER           00378000
         LCLB   &LEN1REG           1 ==> LENGTH(1) IS IN A REGISTER     00379000
         LCLB   &LEN2REG           1 ==> LENGTH(2) IS IN A REGISTER     00380000
         LCLC   &NOARG             MESSAGE TEXT                         00381000
         LCLC   &NOTSPEC           MESSAGE TEXT                         00382000
         LCLC   &NOVALU1           MESSAGE TEXT                         00383000
         LCLC   &NOVALU2           MESSAGE TEXT                         00384000
         LCLC   &REGNOGD           MESSAGE TEXT                @YA30573 00385000
         LCLB   &RTCDREG           1 ==> RETURN CODE IS IN A REGISTER   00386000
         LCLB   &SPREG             1 ==> SUBPOOL IS IN A REGISTER       00387000
         LCLB   &TCBAREG           1 ==> TCBADDR IS IN A REGISTER  @D4A 00388000
         LCLC   &TOLONG            MESSAGE TEXT                         00389000
.*                                                                      00390000
.********************************************************************** 00391000
.*                                                                      00392000
.*       INITIALIZE INTERNAL VARIABLES                                  00393000
.*                                                                      00394000
.********************************************************************** 00395000
.*                                                                      00396000
&ADDRREG SETB   0                  ASSUME ADDR NOT IN REG               00397000
&ALETREG SETB   0                  ASSUME ALET NOT IN REG               00398000
&BSPRLS  SETB   0                  ASSUME NOT SUBPOOL RELEASE           00399000
&ERROR4  SETA   0                  ASSUME NO ERROR                      00400000
&ERROR12 SETA   0                  ASSUME NO ERROR                      00401000
&GNAME   SETC   'IHB'.'&SYSNDX'    VARIABLE NAME                        00402000
&IADRREG SETB   0                  ASSUME INADDR NOT IN REG       @L4A  00403000
&INAME   SETC   '&LABEL'           MACRO LABEL                          00404000
&IREG15  SETA   15                 REGISTER 15                          00405000
&KEYREG  SETB   0                  ASSUME KEY NOT IN REG                00406000
&LEN1REG SETB   0                  ASSUME LEN1 NOT IN REG               00407000
&LEN2REG SETB   0                  ASSUME LEN2 NOT IN REG               00408000
&RTCDREG SETB   0                  ASSUME RTCD NOT IN REG               00409000
&SPREG   SETB   0                  ASSUME SP NOT IN REG                 00410000
&TCBAREG SETB   0                  ASSUME TCBADDR NOT IN REG      @D4A  00411000
.*                                                                      00412000
.********************************************************************** 00413000
.*                                                                      00414000
.*       MESSAGES TO BE GENERATED                                       00415000
.*                                                                      00416000
.********************************************************************** 00417000
.*                                                                      00418000
&ARGM1   SETC   'THE FIRST ARGUMENT IN'                                 00419000
&ARGM2   SETC   'THE SECOND ARGUMENT IN'                                00420000
&I313    SETC   'IHB313 NO TEXT GENERATED.'                             00421000
&I323    SETC   'IHB323 NO TEXT GENERATED.'                             00422000
&I331    SETC   'IHB331 '                                               00423000
&I343    SETC   'IHB343 NO TEXT GENERATED.'                             00424000
&I351    SETC   'IHB351 NO TEXT GENERATED.'                             00425000
&INVALID SETC   'IS NOT VALID WITH'                                     00426000
&NOARG   SETC   'NO ARGUMENT SPECIFIED FOR THE'                         00427000
&NOTSPEC SETC   'IS REQUIRED BUT NOT SPECIFIED.'                        00428000
&NOVALU1 SETC   'NO VALUE SPECIFIED FOR THE FIRST     ARGUMENT OF THE'  00429000
&NOVALU2 SETC   'NO VALUE SPECIFIED FOR THE SECOND    ARGUMENT OF THE'  00430000
&REGNOGD SETC   'REGISTER SPECIFIED IS NOT VALID FOR'          @YA30573 00431000
&TOLONG  SETC   'HAS TOO MANY ARGUMENTS. TRUNCATED TO:'                 00432000
&VALDREG SETC   'PARAMETER.  VALID REGISTERS ARE'              @YA30573 00433000
.*                                                                      00434000
.********************************************************************** 00435000
.*                                                                      00436000
.*       CHECK VALIDITY OF MACRO OPERANDS                               00437000
.*                                                                      00438000
.********************************************************************** 00439000
.*                                                                      00440000
.********************************************************************** 00441000
.*   Check for unsupported keywords in the VSE Environment   @D61ADTN * 00442000
.********************************************************************** 00443000
.*                                                                      00444000
         AIF (T'&ALET EQ 'O').VSECOND                          @D61ADTN 00445000
         MNOTE  0,'ALET /= 0 IS NOT SUPPORTED BY VSE/ESA.'              00446000
.VSECOND ANOP                                                           00447000
         AIF (T'&OWNER NE 'O').EROWNER                         @D61ADTN 00448000
.VSECND1 ANOP                                                  @D62ADMZ 00449000
.*                                                                      00450000
.*                                                                      00451000
.********************************************************************** 00452000
.* CHECK FIRST POSITIONAL PARAMETER FOR OBTAIN OR RELEASE               00453000
.********************************************************************** 00454000
.*                                                                      00455000
         AIF ('&TYPE(1)' EQ '').FUNCER IF TYPE WAS NOT SPECIFIED        00456000
         AIF ((N'&TYPE GT 1) OR (N'&SYSLIST GT 1)).FUNCER1 IF TOO      +00457000
                                       MANY SUBFIELDS OR TOO MANY      +00458000
                                       POSITIONAL PARAMETERS            00459000
         AIF ('&TYPE(1)' NE 'OBTAIN').CHKFUNC  IF OBTAIN NOT SPECIFIED  00460000
&IFUNC   SETC   'OBTAIN'               OBTAIN WAS SPECIFIED             00461000
&BFUNC   SETC   '0'                    SET INDICATOR BIT FOR OBTAIN     00462000
         AGO    .CHKCOND               CONTINUE TO CHECK NEXT KEYWORD   00463000
.CHKFUNC ANOP                                                           00464000
         AIF ('&TYPE(1)' NE 'RELEASE').FUNCER IF RELEASE NOT SPECIFIED  00465000
&IFUNC   SETC   'RELEASE'              RELEASE WAS SPECIFIED            00466000
&BFUNC   SETC   '1'                    SET INDICATOR BIT FOR RELEASE    00467000
         AGO    .CHKCOND               CONTINUE TO CHECK NEXT KEYWORD   00468000
.FUNCER  ANOP                          NEITHER OBTAIN NOR RELEASE WAS  +00469000
                                       SPECIFIED                        00470000
         MNOTE  12,'&I343 POSITIONAL PARAMETER MUST BE         ''OBTAIN+00471000
               '' OR ''RELEASE''.'                                      00472000
&ERROR12 SETA   12                     INDICATE ERROR                   00473000
         MEXIT                                                          00474000
.FUNCER1 ANOP                          TOO MANY POSITIONAL PARMS        00475000
         MNOTE  12,'&I343 TOO MANY POSITIONAL PARAMETERS.'              00476000
&ERROR12 SETA   12                     INDICATE ERROR                   00477000
         MEXIT                                                          00478000
.*                                                                      00479000
.********************************************************************** 00480000
.*                                                                      00481000
.* CHECK KEYWORD FOR THE COND SPECIFICATION. ARGUMENT CAN BE EITHER     00482000
.* 'YES' OR 'NO'.                                                       00483000
.*                                                                      00484000
.********************************************************************** 00485000
.*                                                                      00486000
.CHKCOND ANOP                                                           00487000
&BUNCN   SETC   '1'       SET INDICATOR BIT TO ASSUME COND=NO SPECIFIED 00488000
&ICOND   SETC   'NO'      SET ARGUMENT TO ASSUME COND=NO SPECIFIED      00489000
         AIF ('&COND' EQ '').CHKCKEY   IF COND WAS NOT SPECIFIED @L2A   00490000
         AIF (N'&COND LT 2).CHKCON1    IF NUMBER OF ARGUMENTS LT 2      00491000
         MNOTE  4,'&I331 ''COND=&COND'' &TOLONG ''COND=&COND(1)''.'     00492000
&ERROR4  SETA   4                      NOTE ERROR                       00493000
.CHKCON1 ANOP                                                           00494000
&ICOND   SETC   '&COND(1)'                SAVE COND SPECIFICATION       00495000
         AIF ('&ICOND' EQ '').CHKCON2     IF NO ARGUMENT FOR COND       00496000
         AIF ('&ICOND' EQ 'NO').CHKCKEY   IF COND=NO SPECIFIED     @L2A 00497000
         AIF ('&ICOND' EQ 'YES').CHKCON3  IF COND=YES SPECIFIED         00498000
         MNOTE  12,'&I343 ''&COND(1)'' IN ''COND=&COND'' MUST BE ''YES'+00499000
               ' OR ''NO''.'                                            00500000
&ERROR12 SETA   12                     NOTE ERROR                       00501000
         AGO    .CHKCKEY               CONTINUE TO CHECK NEXT      @L2A 00502000
.CHKCON2 ANOP                                                           00503000
         MNOTE  12,'&I313 &NOARG        ''COND'' PARAMETER.'            00504000
&ERROR12 SETA   12                     NOTE ERROR                       00505000
         AGO    .CHKCKEY               CONTINUE TO CHECK NEXT      @L2A 00506000
.CHKCON3 ANOP                                                           00507000
&BUNCN   SETC   '0'                    SET INDICATOR BIT FOR COND=YES   00508000
.*                                                                      00509000
.********************************************************************** 00510000
.*                                                                      00511000
.* CHECK KEYWORD FOR THE CALLRKY SPECIFICATION.                         00512000
.* ARGUMENT CAN BE EITHER 'YES' OR 'NO'.                          @L2A  00513000
.*                                                                      00514000
.********************************************************************** 00515000
.*                                                                      00516000
.CHKCKEY ANOP                                                      @L2A 00517000
&BCKEY   SETC   '0'  SET INDICATOR BIT TO ASSUME CKEY=NO SPECIFIED @L2A 00518000
&ICKEY   SETC   'NO'      SET ARGUMENT TO ASSUME CKEY=NO SPECIFIED @L2A 00519000
         AIF ('&CALLRKY' EQ '').CHKADDR IF CKEY WAS NOT SPECIFIED  @L2A 00520000
         AIF ('&KEY' EQ '').CKEYOK                                 @L2A 00521000
       MNOTE  12,'&I323 ''CALLRKY'' PARAMETER &INVALID ''KEY''.'   @L2A 00522000
&ERROR12 SETA   12                     NOTE ERROR                  @L2A 00523000
.CKEYOK  ANOP                                                      @L2A 00524000
      AIF (N'&CALLRKY LT 2).CHKCKEY1 IF NUMBER OF ARGUMENTS LT 2   @L2A 00525000
         MNOTE  4,'&I331 ''CALLRKY=&CALLRKY'' &TOLONG ''CALLRKY=&CALLRK+00526000
               Y(1)''.'                                            @L2A 00527000
&ERROR4  SETA   4                      NOTE ERROR                  @L2A 00528000
.CHKCKEY1 ANOP                                                     @L2A 00529000
&ICKEY   SETC   '&CALLRKY(1)'          SAVE CALLRKY SPECIFICATION  @L2A 00530000
         AIF ('&ICKEY' EQ '').CHKCKEY2    IF NO ARGUMENT FOR CKEY  @L2A 00531000
         AIF ('&ICKEY' EQ 'NO').CHKADDR   IF CALLRKY=NO SPECIFIED  @L2A 00532000
         AIF ('&ICKEY' EQ 'YES').CHKCKEY3 IF CALLRKY=YES           @L2A 00533000
         MNOTE  12,'&I343 ''&CALLRKY(1)'' IN ''CALLRKY=&CALLRKY'' MUST +00534000
               BE ''YES'' OR ''NO''.'                              @L2A 00535000
&ERROR12 SETA   12                     NOTE ERROR                  @L2A 00536000
         AGO    .CHKADDR            CONTINUE TO CHECK NEXT KEYWORD @L2A 00537000
.CHKCKEY2 ANOP                                                     @L2A 00538000
         MNOTE  12,'&I313 &NOARG        ''CALLRKY'' PARAMETER.'    @L2A 00539000
&ERROR12 SETA   12                     NOTE ERROR                  @L2A 00540000
         AGO    .CHKADDR            CONTINUE TO CHECK NEXT KEYWORD @L2A 00541000
.CHKCKEY3 ANOP                                                     @L2A 00542000
&BCKEY   SETC   '1'                 SET INDICATOR BIT FOR CKEY=YES @L2A 00543000
.*                                                                      00544000
.********************************************************************** 00545000
.*                                                                      00546000
.* CHECK KEYWORD FOR THE ADDRESS OF STORAGE                             00547000
.*                                                                      00548000
.*     When the ADDR parm is passed as a register, addtional checks     00549000
.* are made to make sure that a valid register is selected.  For the    00550000
.* ADDR parm only regs 1 thru 12 are valid with reg 1 being the         00551000
.* preferred register.                                                  00552000
.*                                                                      00553000
.********************************************************************** 00554000
.*                                                                      00555000
.CHKADDR ANOP                                                           00556000
         AIF ('&ADDR' EQ '').CHKTADD   IF ADDR WAS NOT SPECIFIED   @D4C 00557000
         AIF (N'&ADDR LT 2).CHKADDR1   IF NUMBER OF ARGUMENTS LT 2      00558000
         MNOTE  4,'&I331 ''ADDR=&ADDR'' &TOLONG ''ADDR=&ADDR(1)''.'     00559000
&ERROR4  SETA   4                      NOTE ERROR                       00560000
&IADDR   SETC   '&ADDR(1)'             SAVE ADDR SPECIFICATION          00561000
         AGO    .CHKADDR2              CONTINUE TO CHECK THE KEYWORD    00562000
.CHKADDR1 ANOP                                                          00563000
&IADDR   SETC   '&ADDR'                SAVE ADDR SPECIFICATION          00564000
.CHKADDR2 ANOP                                                          00565000
         AIF ('&IADDR' EQ '').CHKADDR3  IF ARGUMENT NULL                00566000
&ADDRREG SETB  ('&IADDR'(1,1) EQ '(')   SET IF INA ADDR IS IN REGISTER  00567000
         AIF (NOT &ADDRREG).CHKTADD      IF ADDR NOT IN REGISTER   @D4C 00568000
&IADDR   SETC   '&IADDR'(2,K'&IADDR-2)  STRIP PARENS           @YA30573 00569000
         AIF ('&IADDR' EQ '').CHKADDR3  IF ARGUMENT NULL       @YA30573 00570000
         AIF ('&IADDR' EQ '0').CHKADDR12 IF REG NOT VALID FOR ADDR      00571000
.*                                      ISSUE MNOTE            @YA30573 00572000
         AIF ('&IADDR' EQ '00').CHKADDR12 IF REG NOT VALID FOR ADDR     00573000
.*                                      ISSUE MNOTE            @YA30573 00574000
         AIF ('&IADDR' EQ '13').CHKADDR12 IF REG NOT VALID FOR ADDR     00575000
.*                                      ISSUE MNOTE            @YA30573 00576000
         AIF ('&IADDR' EQ '14').CHKADDR12 IF REG NOT VALID FOR ADDR     00577000
.*                                      ISSUE MNOTE            @YA30573 00578000
         AIF ('&IADDR' EQ '15').CHKADDR12 IF REG NOT VALID FOR ADDR     00579000
.*                                      ISSUE MNOTE            @YA30573 00580000
         AGO    .CHKTADD               CONTINUE WITH NEXT KEYWORD  @D4C 00581000
.*                                                             @YA30573 00582000
.CHKADDR12 ANOP                                                @YA30573 00583000
         MNOTE  12,'&I343 &REGNOGD  ''ADDR'' &VALDREG 1-12.' REG        00584000
.*                                     SPECIFIED WAS NOT 1-12  @YA30573 00585000
&ERROR12 SETA   12                     NOTE ERROR              @YA30573 00586000
         AGO    .CHKTADD               CONTINUE WITH NEXT KEYWORD  @D4C 00587000
.*                                                             @YA30573 00588000
.CHKADDR3 ANOP                                                          00589000
        MNOTE  12,'&I313 &NOARG        ''ADDR'' PARAMETER.'             00590000
&ERROR12 SETA   12                     NOTE ERROR                       00591000
.*                                                                      00592000
.********************************************************************** 00593000
.*                                                                      00594000
.* CHECK KEYWORD FOR THE TCB ADDRESS                                    00595000
.*                                                                      00596000
.*     When the TCBADDR parm is passed as a register, additional checks 00597000
.* are made to make sure that a valid register is selected.  For the    00598000
.* TCBADDR parm only regs 2 through 12 are valid.                       00599000
.*                                                                      00600000
.********************************************************************** 00601000
.*                                                                      00602000
.CHKTADD ANOP                                                      @D4A 00603000
&ITCBADB SETC '0'                      TCBADDR NOT SPECIFIED       @D4A 00604000
         AIF ('&TCBADDR' EQ '').CHKIADD IF TCBADDR NOT SPECIFIED   @D4A 00605000
         AIF (N'&TCBADDR LT 2).CHKTCBA1 IF NUMBER OF ARGUMENTS<2   @D4A 00606000
 MNOTE  4,'&I331 ''TCBADDR=&TCBADDR'' &TOLONG ''TCBADDR=&TCBADDR(1)''.'*00607000
                                                                   @D4A 00608000
&ERROR4  SETA   4                      NOTE ERROR                  @D4A 00609000
&ITCBADD SETC  '&TCBADDR(1)'           SAVE TCBADDR SPECIFICATION  @D4A 00610000
         AGO    .CHKTCBA2            CONTINUE TO CHECK THE KEYWORD @D4A 00611000
.CHKTCBA1 ANOP                                                     @D4A 00612000
&ITCBADD  SETC  '&TCBADDR'             SAVE TCBADDR SPECIFICATION  @D4A 00613000
.CHKTCBA2 ANOP                                                     @D4A 00614000
&ITCBADB SETC '1'                      TCBADDR SPECIFIED           @D4A 00615000
         AIF ('&ITCBADD' EQ '').CHKTCBA3 IF ARGUMENT NULL          @D4A 00616000
&TCBAREG SETB  ('&ITCBADD'(1,1) EQ '(') SET IF TCBADDR IN REGISTER @D4A 00617000
         AIF (NOT &TCBAREG).CHKIADD      IF TCBADDR NOT IN REG     @D4A 00618000
&ITCBADD SETC  '&ITCBADD'(2,K'&ITCBADD-2) STRIP PARENS             @D4A 00619000
         AIF ('&ITCBADD' EQ '').CHKTCBA3 IF ARGUMENT NULL          @D4A 00620000
         AIF (T'&ITCBADD NE 'N').CHKIADD   NOT NUMERIC             @D4A 00621000
         AIF ('&ITCBADD' LT '2').CHKTCBA12   Issue Mnote if not         00622000
.*                                      valid reg for TCBADDR      @D4A 00623000
         AIF ('&ITCBADD' GT '12').CHKTCBA12   Issue Mnote if not        00624000
.*                                      valid reg for TCBADDR      @D4A 00625000
         AGO    .CHKIADD               CONTINUE WITH NEXT KEYWORD  @D4A 00626000
.*                                                                 @D4A 00627000
.CHKTCBA12 ANOP                                                    @D4A 00628000
         MNOTE  12,'&I343 &REGNOGD  ''TCBADDR'' &VALDREG 2-12.' REG     00629000
.*                                     SPECIFIED WAS NOT 2-12      @D4A 00630000
&ERROR12 SETA   12                     NOTE ERROR                  @D4A 00631000
         AGO    .CHKIADD               CONTINUE WITH NEXT KEYWORD  @D4A 00632000
.*                                                                 @D4A 00633000
.CHKTCBA3 ANOP                                                     @D4A 00634000
        MNOTE  12,'&I313 &NOARG        ''TCBADDR'' PARAMETER.'     @D4A 00635000
&ERROR12 SETA   12                     NOTE ERROR                  @D4A 00636000
.*                                                                      00637000
.********************************************************************** 00638000
.*                                                                      00639000
.* CHECK KEYWORD FOR THE INPUT ADDRESS OF STORAGE TO OBTAIN        @L4A 00640000
.*                                                                      00641000
.*     When the INADDR parm is passed as a register, addtional checks   00642000
.* are made to make sure that a valid register is selected.  For the    00643000
.* INADDR parm only regs 1 thru 12 are valid with reg 1 being the       00644000
.* preferred register.                                                  00645000
.*     INADDR requires that (OBTAIN) and LOC=EXPLICIT be specified.     00646000
.*     INADDR is mutually exclusive with BNDRY and variable length      00647000
.*                                                                      00648000
.********************************************************************** 00649000
.*                                                                      00650000
.CHKIADD ANOP                                                           00651000
         AIF ('&INADDR' EQ '').CHKALET IF INADDR WAS NOT SPECIFIED @L4A 00652000
         AIF ('&IFUNC' EQ 'OBTAIN').CHKIAD1 IF 'OBTAIN' FUNCTION   @P7A 00653000
         MNOTE  12,'&I323 ''INADDR'' PARAMETER &INVALID ''&IFUNC''.'    00654000
&ERROR12 SETA   12                     NOTE ERROR                  @P7A 00655000
         AGO    .CHKALET               CONTINUE TO CHECK NEXT      @P7A 00656000
.CHKIAD1 ANOP                                                      @P7A 00657000
         AIF (N'&INADDR LT 2).CHKIADD1 IF NUMBER OF ARGUMENTS LT 2 @L4A 00658000
         MNOTE  4,'&I331 ''INADDR=&INADDR'' &TOLONG                    +00659000
                                     ''INADDR=&INADDR(1)''.'       @L4A 00660000
&ERROR4  SETA   4                      NOTE ERROR                  @L4A 00661000
&IINADDR SETC   '&INADDR(1)'           SAVE INADDR SPECIFICATION   @L4A 00662000
         AGO    .CHKIADD2              CONTINUE TO CHECK KEYWORD   @L4A 00663000
.CHKIADD1 ANOP                                                          00664000
&IINADDR SETC   '&INADDR'              SAVE INADDR SPECIFICATION   @L4A 00665000
.CHKIADD2 ANOP                                                          00666000
         AIF ('&IINADDR' EQ '').CHKIADD3 IF ARGUMENT NULL          @L4A 00667000
&IADRREG SETB  ('&IINADDR'(1,1) EQ '(') SET IF INADDR IN REGISTER  @L4A 00668000
        AIF (NOT &IADRREG).CHKIADDZ     IF INADDR NOT IN REGISTER  @L4A 00669000
&IINADDR SETC   '&IINADDR'(2,K'&IINADDR-2) STRIP PARENS            @L4A 00670000
         AIF ('&IINADDR' EQ '').CHKIADD3 IF ARGUMENT NULL          @L4A 00671000
         AIF ('&IINADDR' EQ '0').CHKIADDY IF REG NOT VALID FOR INADDR   00672000
.*                                      ISSUE MNOTE                @L4A 00673000
         AIF ('&IINADDR' EQ '00').CHKIADDY IF REG NOT VALID FOR INADDR  00674000
.*                                      ISSUE MNOTE                @L4A 00675000
         AIF ('&IINADDR' EQ '13').CHKIADDY IF REG NOT VALID FOR INADDR  00676000
.*                                      ISSUE MNOTE                @L4A 00677000
         AIF ('&IINADDR' EQ '14').CHKIADDY IF REG NOT VALID FOR INADDR  00678000
.*                                      ISSUE MNOTE                @L4A 00679000
         AIF ('&IINADDR' EQ '15').CHKIADDY IF REG NOT VALID FOR INADDR  00680000
.*                                      ISSUE MNOTE                @L4A 00681000
.CHKIADDZ ANOP                                                     @L4A 00682000
         AIF ('&LOC(1)' NE 'EXPLICIT').CHKIADD4 LOC=EXPLICIT MUST BE    00683000
.*                                      SPECIFIED WITH INADDR      @L4A 00684000
         AIF ('&IFUNC' EQ 'RELEASE').CHKIADD5  CANNOT USE INADDR ON     00685000
.*                                      RELEASE REQUEST            @L4A 00686000
         AIF ('&BNDRY' NE '').CHKIADD6  BNDRY NOT ALLOWED WITH INADDR   00687000
.*                                                                 @L4A 00688000
         AIF ('&LENGTH' NE '' AND N'&LENGTH GT 1).CHKIADD7         @L4A 00689000
.*                                     VARIABLE LENGTH WITH INADDR @L4A 00690000
         AIF ('&OWNER' NE '').CHKIADD8 OWNER WITH INADDR           @P7A 00691000
         AGO    .CHKALET               CONTINUE TO CHECK NEXT KEYWORD   00692000
.*                                                                 @L4A 00693000
.CHKIADDY ANOP                                                     @L4A 00694000
         MNOTE  12,'&I343 &REGNOGD  ''INADDR'' &VALDREG 1-12.' REG      00695000
.*                                     SPECIFIED WAS NOT 1-12      @L4A 00696000
&ERROR12 SETA   12                     NOTE ERROR                  @L4A 00697000
         AGO    .CHKALET               CONTINUE WITH NEXT KEYWORD  @L4A 00698000
.*                                                                 @L4A 00699000
.CHKIADD3 ANOP                                                     @L4A 00700000
         MNOTE  12,'&I313 &NOARG       ''INADDR'' PARAMETER.'           00701000
.*                                                                 @L4A 00702000
&ERROR12 SETA   12                     NOTE ERROR                  @L4A 00703000
         AGO    .CHKALET               CONTINUE WITH NEXT KEYWORD  @L4A 00704000
.CHKIADD4 ANOP                                                     @L4A 00705000
         MNOTE  12,'&I313 ''LOC=EXPLICIT'' REQUIRED WITH ''INADDR''.'   00706000
.*                                                                 @P7C 00707000
&ERROR12 SETA   12                     NOTE ERROR                  @L4A 00708000
         AGO    .CHKALET               CONTINUE WITH NEXT KEYWORD  @L4A 00709000
.CHKIADD5 ANOP                                                     @L4A 00710000
         MNOTE  12,'&I313 ''INADDR'' ONLY ALLOWED WITH ''OBTAIN''.'     00711000
.*                                                                 @L4A 00712000
&ERROR12 SETA   12                     NOTE ERROR                  @L4A 00713000
         AGO    .CHKALET               CONTINUE WITH NEXT KEYWORD  @L4A 00714000
.CHKIADD6 ANOP                                                     @L4A 00715000
         MNOTE  12,'&I313 ''BNDRY'' NOT ALLOWED WITH ''INADDR''.'       00716000
.*                                                                 @L4A 00717000
&ERROR12 SETA   12                     NOTE ERROR                  @L4A 00718000
         AGO    .CHKALET               CONTINUE WITH NEXT KEYWORD  @L4A 00719000
.CHKIADD7 ANOP                                                     @L4A 00720000
         MNOTE  12,'&I313 VARIABLE LENGTH NOT ALLOWED WITH ''INADDR''.' 00721000
.*                                                                 @L4A 00722000
&ERROR12 SETA   12                     NOTE ERROR                  @L4A 00723000
         AGO    .CHKALET               CONTINUE WITH NEXT KEYWORD  @L4A 00724000
.CHKIADD8 ANOP                                                     @L4A 00725000
         MNOTE  12,'&I313 ''OWNER'' NOT ALLOWED WITH ''INADDR''.'       00726000
.*                                                                 @P7C 00727000
&ERROR12 SETA   12                     NOTE ERROR                  @L4A 00728000
.*                                                                      00729000
.********************************************************************** 00730000
.*                                                                      00731000
.* CHECK KEYWORD FOR THE ACCESS LIST ENTRY TOKEN                        00732000
.*                                                                      00733000
.********************************************************************** 00734000
.*                                                                      00735000
.CHKALET ANOP                                                           00736000
&BALET   SETC   '0'  SET INDICATOR BIT TO ASSUME PRIMARY ADDRESS SPACE  00737000
&IALET   SETC   '0'  SET ARGUMENT TO ASSUME PRIMARY ADDRESS SPACE       00738000
         AIF ('&ALET' EQ '').CHKLEN    IF ALET WAS NOT SPECIFIED        00739000
         AIF (N'&ALET LT 2).CHKALET1   IF NUMBER OF ARGUMENTS LT 2      00740000
         MNOTE  4,'&I331 ''ALET=&ALET'' &TOLONG ''ALET=&ALET(1)''.'     00741000
&ERROR4  SETA   4                      NOTE ERROR                       00742000
&IALET   SETC   '&ALET(1)'             SAVE ALET SPECIFICATION          00743000
         AGO    .CHKALET2              CONTINUE TO CHECK THE KEYWORD    00744000
.CHKALET1 ANOP                                                          00745000
&IALET   SETC   '&ALET'                SAVE ALET SPECIFICATION          00746000
.CHKALET2 ANOP                                                          00747000
         AIF ('&IALET' EQ '').CHKALET21 IF ARGUMENT IS NULL             00748000
&ALETREG SETB  ('&IALET'(1,1) EQ '(')   SET BIT IF ALET IS IN REGISTER  00749000
         AIF (NOT &ALETREG).CHKALET3    IF ALET IS NOT IN REGISTER      00750000
         AIF ('&IALET'(2,K'&IALET-2) NE '').CHKALET3 IF ARG NOT NULL    00751000
.CHKALET21 ANOP                                                         00752000
         MNOTE  12,'&I313 &NOARG        ''ALET'' PARAMETER.'            00753000
&ERROR12 SETA   12                     NOTE ERROR                       00754000
         AGO    .CHKLEN                CONTINUE TO CHECK NEXT KEYWORD   00755000
.CHKALET3 ANOP                                                          00756000
&BALET   SETC   '1'                    INDICATE ALET SPECIFIED          00757000
.*                                                                      00758000
.********************************************************************** 00759000
.*                                                                      00760000
.* CHECK KEYWORD FOR THE LENGTH OF STORAGE                              00761000
.*                                                                      00762000
.*     When the LENGTH parm is passed as a register, addtional checks   00763000
.* are made to make sure that a valid register is selected.  For the    00764000
.* LENGTH parm only regs 0, 2-12 are valid with reg 0 being the         00765000
.* preferred register.  If min and max lengths are passed, the valid    00766000
.* regs for the min value are 0, 2-12 (with reg 0 being preferred),     00767000
.* the valid regs for the max value are 1-12 (with reg 1 being          00768000
.* preferred).                                                          00769000
.*                                                                      00770000
.********************************************************************** 00771000
.*                                                                      00772000
.CHKLEN  ANOP                                                           00773000
&BVAR    SETC   '0'                    ASSUME SINGLE LENGTH REQUEST     00774000
         AIF ('&LENGTH' NE '').CHKLEN0 IF LENGTH WAS NOT SPECIFIED      00775000
         AIF ('&IFUNC' EQ 'RELEASE').CHKSP   IF RELEASE                 00776000
         MNOTE  12,'&I313 ''LENGTH'' PARAMETER &NOTSPEC.'               00777000
&ERROR12 SETA   12                     NOTE ERROR                       00778000
         AGO    .CHKSP                 CONTINUE TO CHECK NEXT KEYWORD   00779000
.CHKLEN0 ANOP                                                           00780000
         AIF ('&IFUNC' NE 'RELEASE').CHKLNOB IF NOT RELEASE             00781000
         AIF (N'&LENGTH LT 2).CHKLEN11 IF NUMBER OF ARGUMENTS LT 2      00782000
         MNOTE  4,'&I331 ''LENGTH=&LENGTH'' &TOLONG ''LENGTH=&LENGTH(1)+00783000
               ''.'                                                     00784000
&ERROR4  SETA   4                      NOTE ERROR                       00785000
         AGO   .CHKLEN1                CONTINUE TO CHECK THE KEYWORD    00786000
.CHKLNOB ANOP                                                           00787000
         AIF (N'&LENGTH LT 3).CHKLEN10 IF NUMBER  OF ARGUMENTS LT 3     00788000
         MNOTE  4,'&I331 ''LENGTH=&LENGTH'' &TOLONG ''LENGTH=(&LENGTH(1+00789000
               ),&LENGTH(2))''.'                                        00790000
&ERROR4  SETA   4                      NOTE ERROR                       00791000
         AGO   .CHKLEN1                CONTINUE TO CHECK THE KEYWORD    00792000
.CHKLEN10 ANOP                                                          00793000
         AIF (N'&LENGTH LT 2).CHKLEN11 IF NUMBER OF ARGUMENTS LT 2      00794000
.CHKLEN1 ANOP                                                           00795000
&ILEN1   SETC   '&LENGTH(1)'           SAVE 1ST ARGUMENT OF LENGTH      00796000
         AGO   .CHKLEN12               CONTINUE TO CHECK THE KEYWORD    00797000
.CHKLEN11 ANOP                                                          00798000
&ILEN1   SETC   '&LENGTH'              SAVE ARGUMENT OF LENGTH          00799000
.CHKLEN12 ANOP                                                          00800000
         AIF ('&ILEN1' EQ '').CHKLEN13 IF 1ST ARGUMENT IS NULL          00801000
&LEN1REG SETB  ('&ILEN1'(1,1) EQ '(')  SET BIT IF LEN1 IS IN REGISTER   00802000
         AIF (NOT &LEN1REG).CHKLEN2    IF LEN1 IS NOT IN REGISTER       00803000
&ILEN1   SETC   '&ILEN1'(2,K'&ILEN1-2) STRIP PARENS            @YA30573 00804000
         AIF ('&ILEN1' EQ '').CHKLEN13 IF 1ST ARGUMENT IS NULL @YA30573 00805000
         AIF ('&ILEN1' EQ '1').CHKLEN14 IF REG NOT VALID                00806000
.*                                     ISSUE MNOTE             @YA30573 00807000
         AIF ('&ILEN1' EQ '01').CHKLEN14 IF REG NOT VALID               00808000
.*                                     ISSUE MNOTE             @YA30573 00809000
         AIF ('&ILEN1' EQ '13').CHKLEN14 IF REG NOT VALID               00810000
.*                                     ISSUE MNOTE             @YA30573 00811000
         AIF ('&ILEN1' EQ '14').CHKLEN14 IF REG NOT VALID               00812000
.*                                     ISSUE MNOTE             @YA30573 00813000
         AIF ('&ILEN1' EQ '15').CHKLEN14 IF REG NOT VALID               00814000
.*                                     ISSUE MNOTE             @YA30573 00815000
         AGO    .CHKLEN2               CONTINUE TO CHECK NEXT ARGUMENT  00816000
.*                                                             @YA30573 00817000
.CHKLEN14 ANOP                                                 @YA30573 00818000
         MNOTE  12,'&I343 &REGNOGD  ''LENGTH'' &VALDREG 0,2-12.' REG    00819000
.*                                    SPECIFIED WAS NOT 0,2-12 @YA30573 00820000
&ERROR12 SETA   12                     NOTE ERROR              @YA30573 00821000
         AGO    .CHKLEN2               CONTINUE TO CHECK NEXT ARGUMENT  00822000
.*                                                             @YA30573 00823000
.CHKLEN13 ANOP                                                          00824000
         MNOTE  12,'&I313 &NOVALU1 ''LENGTH'' PARAMETER.'               00825000
&ERROR12 SETA   12                                                      00826000
.CHKLEN2 ANOP                                                           00827000
         AIF (N'&LENGTH EQ 1).CHKSP    IF ONLY ONE ARGUMENT SPECIFIED   00828000
         AIF ('&IFUNC' EQ 'RELEASE').CHKSP IF RELEASE                   00829000
&ILEN2 SETC     '&LENGTH(2)'           SAVE 2ND ARGUMENT OF LENGTH      00830000
&BVAR    SETC   '1'                    INDICATE VARIABLE LENGTH REQUEST 00831000
         AIF ('&ILEN2' EQ '').CHKLEN21 IF 2ND ARGUMENT IS NULL          00832000
&LEN2REG SETB  ('&ILEN2'(1,1) EQ '(')  SET BIT IF LEN2 IS IN REGISTER   00833000
         AIF (NOT &LEN2REG).CHKSP      IF LEN2 IS NOT IN REGISTER       00834000
&ILEN2   SETC   '&ILEN2'(2,K'&ILEN2-2) STRIP PARENS            @YA30573 00835000
         AIF ('&ILEN2' EQ '').CHKLEN21 IF 2ND ARGUMENT IS NULL @YA30573 00836000
         AIF ('&ILEN2' EQ '0').CHKLEN24 IF REG NOT VALID                00837000
.*                                     ISSUE MNOTE             @YA30573 00838000
         AIF ('&ILEN2' EQ '00').CHKLEN24 IF REG NOT VALID               00839000
.*                                     ISSUE MNOTE             @YA30573 00840000
         AIF ('&ILEN2' EQ '13').CHKLEN24 IF REG NOT VALID               00841000
.*                                     ISSUE MNOTE             @YA30573 00842000
         AIF ('&ILEN2' EQ '14').CHKLEN24 IF REG NOT VALID               00843000
.*                                     ISSUE MNOTE             @YA30573 00844000
         AIF ('&ILEN2' EQ '15').CHKLEN24 IF REG NOT VALID               00845000
.*                                     ISSUE MNOTE             @YA30573 00846000
         AGO    .CHKSP                 CONTINUE TO CHECK NEXT KEYWORD   00847000
.*                                                             @YA30573 00848000
.CHKLEN24 ANOP                                                 @YA30573 00849000
         MNOTE  12,'&I343 &REGNOGD  2ND ''LENGTH'' &VALDREG 1-12.' REG  00850000
.*                                     SPECIFIED WAS NOT 1-12  @YA30573 00851000
&ERROR12 SETA   12                     NOTE ERROR              @YA30573 00852000
         AGO    .CHKSP                 CONTINUE TO CHECK NEXT KEYWORD   00853000
.*                                                             @YA30573 00854000
.CHKLEN21 ANOP                                                          00855000
         MNOTE  12,'&I313 &NOVALU2 ''LENGTH'' PARAMETER.'               00856000
&ERROR12 SETA   12                     NOTE ERROR                       00857000
.*                                                                      00858000
.********************************************************************** 00859000
.*                                                                      00860000
.* CHECK KEYWORD FOR THE SUBPOOL                                        00861000
.*                                                                      00862000
.*     When the SP parm is passed as a register, addtional checks       00863000
.* are made to make sure that a valid register is selected.  For the    00864000
.* SP parm only regs 2 - 12 and 15 are valid with reg 15 being the      00865000
.* preferred register.  KEY and SP can be passed in the same reg but    00866000
.* the KEY value must be in bits 8-11 and the SP value must be in       00867000
.* bits 16-23.  if SP is passed in it's own reg it must be in bits      00868000
.* 24-31.  the remainder of the bits should be zero in either case.     00869000
.*     When the SP parm is passed as a decimal number, the value is     00870000
.* checked to be 0-255.                                                 00871000
.*                                                                      00872000
.********************************************************************** 00873000
.*                                                                      00874000
.CHKSP   ANOP                                                           00875000
&ISP     SETC   '0'                    ASSUME SUBPOOL 0                 00876000
         AIF ('&SP' EQ '').CHKBNDY     IF SP WAS NOT SPECIFIED          00877000
         AIF (N'&SP  LT 2).CHKSP1      IF NUMBER OF ARGUMENTS LT 2      00878000
         MNOTE  4,'&I331 ''SP=&SP'' &TOLONG ''SP=&SP(1)''.'             00879000
&ERROR4  SETA   4                      NOTE ERROR                       00880000
&ISP     SETC   '&SP(1)'               SAVE SP SPECIFICATION            00881000
         AGO    .CHKSP10               CONTINUE TO CHECK NEXT KEYWORD   00882000
.CHKSP1  ANOP                                                           00883000
&ISP     SETC   '&SP'                  SAVE SP SPECIFICATION            00884000
.CHKSP10 ANOP                                                           00885000
         AIF ('&ISP' EQ '').CHKSP11    IF ARGUMENT IS NULL              00886000
&SPREG   SETB  ('&ISP'(1,1) EQ '(')    SET BIT IF SP IS IN REGISTER     00887000
         AIF (NOT &SPREG).CHKSP2       IF SP IS NOT IN REGISTER         00888000
&ISP     SETC '&ISP'(2,K'&ISP-2)       STRIP PARENS            @YA30573 00889000
         AIF ('&ISP' EQ '').CHKSP11    IF ARGUMENT IS NULL     @YA30573 00890000
         AIF ('&ISP' EQ '0').CHKSP12   IF REG NOT VALID                 00891000
.*                                     ISSUE MNOTE             @YA30573 00892000
         AIF ('&ISP' EQ '1').CHKSP12   IF REG NOT VALID                 00893000
.*                                     ISSUE MNOTE             @YA30573 00894000
         AIF ('&ISP' EQ '00').CHKSP12  IF REG NOT VALID                 00895000
.*                                     ISSUE MNOTE             @YA30573 00896000
         AIF ('&ISP' EQ '01').CHKSP12  IF REG NOT VALID                 00897000
.*                                     ISSUE MNOTE             @YA30573 00898000
         AIF ('&ISP' EQ '13').CHKSP12  IF REG NOT VALID                 00899000
.*                                     ISSUE MNOTE             @YA30573 00900000
         AIF ('&ISP' EQ '14').CHKSP12  IF REG NOT VALID                 00901000
.*                                     ISSUE MNOTE             @YA30573 00902000
         AGO    .CHKBNDY               CONTINUE TO CHECK NEXT KEYWORD   00903000
.*                                                             @YA30573 00904000
.CHKSP12 ANOP                                                  @YA30573 00905000
         MNOTE  12,'&I343 &REGNOGD  ''SP'' &VALDREG 2-12,15.' REG       00906000
.*                                   SPECIFIED WAS NOT 2-12,15 @YA30573 00907000
&ERROR12 SETA   12                     NOTE ERROR              @YA30573 00908000
         AGO    .CHKBNDY               CONTINUE TO CHECK NEXT KEYWORD   00909000
.*                                                             @YA30573 00910000
.CHKSP11 ANOP                                                           00911000
         MNOTE  12,'&I313 &NOARG        ''SP'' PARAMETER.'              00912000
&ERROR12 SETA   12                     NOTE ERROR                       00913000
         AGO    .CHKBNDY               CONTINUE TO CHECK NEXT KEYWORD   00914000
.CHKSP2  ANOP                                                           00915000
         AIF (T'&ISP NE 'N').CHKBNDY   NOT SPECIFIED AS A DECIMAL       00916000
         AIF (&ISP LE 255).CHKBNDY     VALUE LESS THAN OR EQUAL TO 255  00917000
&ERROR12 SETA   12                     NOTE ERROR                       00918000
         MNOTE  12,'&I343 ''&ISP'' IN ''SP=&ISP'' MUST BE LESS THAN 256+00919000
               .'                                                       00920000
.*                                                                      00921000
.********************************************************************** 00922000
.*                                                                      00923000
.* CHECK KEYWORD FOR THE BOUNDARY USAGE.  ARGUMENT ONE CAN BE EITHER    00924000
.* 'DBLWD' OR 'PAGE'.                                                   00925000
.* BNDRY CANNOT BE SPECIFIED WITH RELEASE.                              00926000
.*                                                                      00927000
.********************************************************************** 00928000
.*                                                                      00929000
.CHKBNDY ANOP                                                           00930000
&BBND    SETC   '0'      SET INDICATOR BIT TO ASSUME BNDRY=DBLWD        00931000
&IBNDRY  SETC   'DBLWD'  SET ARGUMENT TO ASSUME BNDRY=DBLWD             00932000
         AIF ('&BNDRY' EQ '').CHKKEY   IF BNDRY WAS NOT SPECIFIED       00933000
         AIF ('&IFUNC' EQ 'OBTAIN').CHKBNDY1 IF 'OBTAIN' FUNCTION       00934000
         MNOTE  12,'&I323 ''BNDRY'' PARAMETER &INVALID  ''&IFUNC''.'    00935000
&ERROR12 SETA   12                     NOTE ERROR                       00936000
         AGO    .CHKKEY                CONTINUE TO CHECK NEXT KEYWORD   00937000
.CHKBNDY1 ANOP                                                          00938000
         AIF (N'&BNDRY LT 2).CHKBNDY2  IF NUMBER OF ARGUMENTS LT 2      00939000
         MNOTE  4,'&I331 ''BNDRY=&BNDRY'' &TOLONG ''BNDRY=&BNDRY(1)''.' 00940000
&ERROR4  SETA   4                      NOTE ERROR                       00941000
.CHKBNDY2 ANOP                                                          00942000
&IBNDRY  SETC   '&BNDRY(1)'            SAVE BNDRY SPECIFICATION         00943000
         AIF ('&IBNDRY' NE '').CHKBNDY3 IF ARGUMENT NOT NULL            00944000
         MNOTE  12,'&I313 &NOARG        ''BNDRY'' PARAMETER.'           00945000
&ERROR12 SETA   12                     NOTE ERROR                       00946000
         AGO    .CHKKEY                CONTINUE TO CHECK NEXT KEYWORD   00947000
.CHKBNDY3 ANOP                                                          00948000
         AIF ('&IBNDRY' EQ 'PAGE').CHKBNDY4 IF BNDRY=PAGE               00949000
         AIF ('&IBNDRY' EQ 'DBLWD').CHKKEY  IF BNDRY=DBLWD              00950000
&ERROR12 SETA   12                     NOTE ERROR                       00951000
         MNOTE  12,'&I343 ''&BNDRY(1)'' IN ''BNDRY=&BNDRY'' MUST BE ''P+00952000
               AGE'' OR ''DBLWD''.'                                     00953000
         AGO    .CHKKEY                CONTINUE TO CHECK NEXT KEYWORD   00954000
.CHKBNDY4 ANOP                                                          00955000
&BBND    SETC   '1'                    SET INDICATOR BIT FOR BNDRY=PAGE 00956000
.*                                                                      00957000
.********************************************************************** 00958000
.*                                                                      00959000
.* CHECK KEYWORD FOR THE KEY NUMBER                                     00960000
.*                                                                      00961000
.*     When the KEY parm is passed as a register, addtional checks      00962000
.* are made to make sure that a valid register is selected.  For the    00963000
.* KEY parm only regs 2 - 12 and 15 are valid with reg 15 being the     00964000
.* preferred register.  KEY and SP can be passed in the same reg but    00965000
.* the KEY value must be in bits 8-11 and the SP value must be in       00966000
.* bits 16-23.  if KEY is passed in it's own reg it must be in bits     00967000
.* 24-27.  the remainder of the bits should be zero in either case.     00968000
.*     When the KEY parm is passed as a decimal number, the value is    00969000
.* checked to be 0-16.                                                  00970000
.*                                                                      00971000
.********************************************************************** 00972000
.*                                                                      00973000
.CHKKEY  ANOP                                                           00974000
&IKEY    SETC   '0'                    ASSUME KEY 0                     00975000
         AIF ('&KEY' EQ '').CHKLOC     IF KEY WAS NOT SPECIFIED         00976000
         AIF (N'&KEY LT 2).CHKKEY1     IF NUMBER OF ARGUMENTS LT 2      00977000
         MNOTE  4,'&I331 ''KEY=&KEY'' &TOLONG ''KEY=&KEY(1)''.'         00978000
&ERROR4  SETA   4                      NOTE ERROR                       00979000
&IKEY    SETC   '&KEY(1)'              SAVE KEY SPECIFICATION           00980000
         AGO    .CHKKEY10              CONTINUE TO CHECK NEXT KEYWORD   00981000
.CHKKEY1 ANOP                                                           00982000
&IKEY    SETC   '&KEY'                 SAVE KEY SPECIFICATION           00983000
.CHKKEY10 ANOP                                                          00984000
         AIF ('&IKEY' EQ '').CHKKEY11  IF ARGUMENT NULL                 00985000
&KEYREG  SETB  ('&IKEY'(1,1) EQ '(')   SET BIT IF KEY IS IN REG         00986000
         AIF (NOT &KEYREG).CHKKEY2     IF KEY IS NOT IN REGISTER        00987000
&IKEY    SETC   '&IKEY'(2,K'&IKEY-2)   STRIP PARENS            @YA30573 00988000
         AIF ('&IKEY' EQ '').CHKKEY11  IF ARGUMENT NULL        @YA30573 00989000
         AIF ('&IKEY' EQ '0').CHKKEY12 IF REG NOT VALID                 00990000
.*                                     ISSUE MNOTE             @YA30573 00991000
         AIF ('&IKEY' EQ '1').CHKKEY12 IF REG NOT VALID                 00992000
.*                                     ISSUE MNOTE             @YA30573 00993000
         AIF ('&IKEY' EQ '00').CHKKEY12 IF REG NOT VALID                00994000
.*                                     ISSUE MNOTE             @YA30573 00995000
         AIF ('&IKEY' EQ '01').CHKKEY12 IF REG NOT VALID                00996000
.*                                     ISSUE MNOTE             @YA30573 00997000
         AIF ('&IKEY' EQ '13').CHKKEY12 IF REG NOT VALID                00998000
.*                                     ISSUE MNOTE             @YA30573 00999000
         AIF ('&IKEY' EQ '14').CHKKEY12 IF REG NOT VALID                01000000
.*                                     ISSUE MNOTE             @YA30573 01001000
         AGO    .CHKLOC                CONTINUE TO CHECK NEXT KEYWORD   01002000
.*                                                             @YA30573 01003000
.CHKKEY12 ANOP                                                 @YA30573 01004000
         MNOTE  12,'&I343 &REGNOGD  ''KEY'' &VALDREG 2-12,15.' REG      01005000
.*                                   SPECIFIED WAS NOT 2-12,15 @YA30573 01006000
&ERROR12 SETA   12                     NOTE ERROR              @YA30573 01007000
         AGO    .CHKLOC                CONTINUE TO CHECK NEXT KEYWORD   01008000
.*                                                             @YA30573 01009000
.CHKKEY11 ANOP                                                          01010000
         MNOTE  12,'&I313 &NOARG        ''KEY'' PARAMETER.'             01011000
&ERROR12 SETA   12                     NOTE ERROR                       01012000
         AGO    .CHKLOC                CONTINUE TO CHECK NEXT KEYWORD   01013000
.CHKKEY2 ANOP                                                           01014000
         AIF (T'&IKEY NE 'N').CHKLOC   IF NOT A DECIMAL NUMBER          01015000
         AIF (&IKEY LT 16).CHKLOC      IF LESS THAN 16                  01016000
         MNOTE  12,'&I343 ''&IKEY'' IN ''KEY=&IKEY'' MUST BE A DECIMAL +01017000
               NUMBER LESS THAN 16.'                                    01018000
&ERROR12 SETA   12                     NOTE ERROR                       01019000
.*                                                                      01020000
.********************************************************************** 01021000
.*                                                                      01022000
.* CHECK KEYWORD FOR THE LOCATION SPECIFICATION. THERE MAY BE EITHER    01023000
.* ONE OR TWO ARGUMENTS.  THE FIRST STANDS FOR THE VIRTUAL STORAGE AND  01024000
.* MAY BE EITHER 'RES', 'ANY', 'BELOW' or 'EXPLICIT'.  THE SECOND  @L4C 01025000
.* ARGUMENT STANDS FOR REAL STORAGE AND MAY BE 'ANY', OR, IF EXPLICIT   01026000
.* WAS SPECIFIED FOR THE FIRST ARGUMENT, 'BELOW'. THE DEFAULT FOR  @L4C 01027000
.* THE SECOND ARGUMENT WHEN THE FIRST ARGUMENT IS 'EXPLICIT' IS    @L4C 01028000
.* 'ANY'.THE DEFAULT FOR THE FIRST ARGUMENT IS 'RES'.              @L4C 01029000
.* LOC CANNOT BE SPECIFIED WITH RELEASE.                                01030000
.* INADDR IS REQUIRED WITH LOC=EXPLICIT                            @L4A 01031000
.*                                                                      01032000
.********************************************************************** 01033000
.*                                                                      01034000
.CHKLOC  ANOP                                                           01035000
&BLOC    SETC   '00'                   ASSUME RES FOR VIRTUAL           01036000
&BREAL   SETC   '0'                    ASSUME ANY NOT SPECIFIED         01037000
         AIF ('&LOC' EQ '').CHKLINK    IF LOC WAS NOT SPECIFIED         01038000
         AIF ('&IFUNC' EQ 'OBTAIN').CHKLOC1 IF 'OBTAIN' FUNCTION        01039000
         MNOTE  12,'&I323 ''LOC'' PARAMETER &INVALID    ''&IFUNC''.'    01040000
&ERROR12 SETA   12                     NOTE ERROR                       01041000
         AGO    .CHKLINK               CONTINUE TO CHECK NEXT KEYWORD   01042000
.CHKLOC1 ANOP                                                           01043000
         AIF (N'&LOC  LT 3).CHKLOC2    IF NUMBER OF ARGUMENTS LT 3      01044000
         MNOTE  4,'&I331 ''LOC=&LOC'' &TOLONG ''LOC=(&LOC(1),&LOC(2))''+01045000
               .'                                                       01046000
&ERROR4  SETA   4                      NOTE ERROR                       01047000
.CHKLOC2 ANOP                                                           01048000
&ILOC1   SETC   '&LOC(1)'              SAVE FIRST ARGUMENT              01049000
         AIF ('&ILOC1' NE '').CHKLOC3  IF FIRST ARGUMENT NOT NULL       01050000
         MNOTE  12,'&I313 &NOVALU1 ''LOC'' PARAMETER.'                  01051000
&ERROR12 SETA   12                     NOTE ERROR                       01052000
         AGO    .CHKLOC6               CONTINUE TO CHECK THE KEYWORD    01053000
.CHKLOC3 ANOP                                                           01054000
         AIF ('&ILOC1' EQ 'EXPLICIT').CHKLOC6 IF EXPLICIT LOCATION      01055000
         AIF ('&ILOC1' EQ 'RES').CHKLOC7    IF RES LOCATION             01056000
         AIF ('&ILOC1' EQ 'BELOW').CHKLOC4  IF BELOW LOCATION           01057000
         AIF ('&ILOC1' EQ 'ANY').CHKLOC5    IF ANY LOCATION             01058000
         MNOTE  12,'&I343 &ARGM1 ''LOC=&LOC'' MUST BE ''RES'', ''BELOW'+01059000
               ', ''ANY'' OR ''EXPLICIT''.'                        @L4C 01060000
&ERROR12 SETA   12                     NOTE ERROR                       01061000
         AGO    .CHKLOC7               CONTINUE TO CHECK KEYWORD   @L4C 01062000
.CHKLOC4 ANOP                          BELOW LOCATION                   01063000
&BLOC    SETC   '01'                   SET INDICATOR BIT                01064000
         AGO    .CHKLOC7               CHECK SECOND OPERAND        @L4C 01065000
.CHKLOC5 ANOP                          ANY LOCATION                     01066000
&BLOC    SETC   '11'                   SET INDICATOR BIT                01067000
         AGO    .CHKLOC7               CHECK SECOND OPERAND        @L4A 01068000
.CHKLOC6 ANOP                          EXPLICIT LOCATION           @L4A 01069000
         MNOTE 0,'LOC=EXPLICIT NOT SUPPORTED BY VSE/ESA'                01070000
&ERROR12 SETA   12                     NOTE ERROR              @D62ADMZ 01071000
&BLOC    SETC   '10'                   SET INDICATOR BIT           @L4A 01072000
         AIF ('&IINADDR' NE '').CHKLOC7 INADDR REQUIRED WITH EXPLICIT   01073000
.*                                                                 @L4A 01074000
         MNOTE  12,'&I313 ''INADDR'' IS REQUIRED WITH ''LOC=EXPLICIT''.+01075000
               '                                                   @L4A 01076000
&ERROR12 SETA   12                     NOTE ERROR                       01077000
         AGO    .CHKLINK               CONTINUE TO CHECK NEXT KEYWORD   01078000
.CHKLOC7 ANOP                          CHECK SECOND OPERAND        @L4C 01079000
         AIF (N'&LOC  EQ 1).CHKLOC9    IF ONLY 1 ARGUMENT WAS SPECIFIED 01080000
&ILOC2   SETC   '&LOC(2)'              SAVE SECOND ARGUMENT             01081000
         AIF ('&ILOC2' NE '').CHKLOC8  IF SECOND ARGUMENT NOT NULL @L4C 01082000
         MNOTE  12,'&I313 &NOVALU2 ''LOC'' PARAMETER.'                  01083000
&ERROR12 SETA   12                     NOTE ERROR                       01084000
         AGO    .CHKLINK               CONTINUE TO CHECK NEXT KEYWORD   01085000
.CHKLOC8 ANOP                          SECOND OPERAND IS ANY       @L4C 01086000
         AIF ('&ILOC2' EQ 'ANY').CHKLOCA ANY LOCATION                   01087000
         AIF ('&ILOC1' EQ 'EXPLICIT').CHKLOCB MAYBE EXPLICIT,BELOW @L4A 01088000
         MNOTE  12,'&I343 &ARGM2 ''LOC=&LOC'' MUST BE ''ANY''.'         01089000
&ERROR12 SETA   12                     NOTE ERROR                       01090000
         AGO    .CHKLINK               CONTINUE TO CHECK NEXT KEYWORD   01091000
.CHKLOC9 ANOP                          NO SECOND OPERAND SPECIFIED @L4A 01092000
         AIF ('&ILOC1' NE 'EXPLICIT').CHKLINK FIRST ARG NOT EXPICIT@L4A 01093000
.CHKLOCA ANOP                          SECOND OPERAND IS ANY       @L4C 01094000
&BREAL   SETC   '1'                    INDICATE ANY SPECIFIED           01095000
         AGO    .CHKLINK               CHECK NEXT KEYWORD          @L4A 01096000
.CHKLOCB ANOP                          EXPLICIT,xxx                @L4C 01097000
         AIF ('&ILOC2' EQ 'BELOW').CHKLINK  BELOW SPECIFIED             01098000
         MNOTE  12,'&I343 &ARGM2 ''LOC=&LOC'' MUST BE ''ANY'' OR ''BELO+01099000
               W''.'                                                    01100000
&ERROR12 SETA   12                     NOTE ERROR                       01101000
.*                                                                      01102000
.********************************************************************** 01103000
.*                                                                      01104000
.* CHECK KEYWORD FOR THE LINKAGE.  ARGUMENT CAN ONLY BE 'SYSTEM'        01105000
.*                                                                      01106000
.********************************************************************** 01107000
.*                                                                      01108000
.CHKLINK ANOP                                                           01109000
&ILINK   SETC   'SYSTEM'               ASSUME LINKAGE SYSTEM            01110000
         AIF ('&LINKAGE' EQ '').CHKOWNR  IF LINKAGE WAS NOT SPECIFIED   01111000
         AIF (N'&LINKAGE  LT 2).CHKLINK1 IF NUMBER OF ARGUMENTS LT 2    01112000
         MNOTE  4,'&I331 ''LINKAGE=&LINKAGE'' &TOLONG ''LINKAGE=&LINKAG+01113000
               E(1)''.'                                                 01114000
&ERROR4  SETA   4                      NOTE ERROR                       01115000
.CHKLINK1 ANOP                                                          01116000
&ILINK   SETC   '&LINKAGE(1)'          SAVE LINKAGE SPECIFICATION       01117000
         AIF ('&ILINK' NE '').CHKLINK2 IF ARGUMENT NOT NULL             01118000
         MNOTE  12,'&I313 &NOARG        ''LINKAGE'' PARAMETER.'         01119000
&ERROR12 SETA   12                     NOTE ERROR                       01120000
         AGO    .CHKOWNR               CONTINUE TO CHECK NEXT KEYWORD   01121000
.CHKLINK2 ANOP                                                          01122000
         AIF ('&ILINK' EQ 'SYSTEM').CHKOWNR IF NOT EQUAL TO SYSTEM      01123000
         MNOTE 12,'&I343 ''&LINKAGE(1)'' IN ''LINKAGE=&LINKAGE'' MUST B+01124000
               E ''SYSTEM''.'                                           01125000
&ERROR12 SETA   12                     NOTE ERROR                       01126000
.*                                                                      01127000
.********************************************************************** 01128000
.*                                                                      01129000
.* CHECK KEYWORD FOR THE OWNER.                                    @L3A 01130000
.*                                                                      01131000
.********************************************************************** 01132000
.*                                                                      01133000
.CHKOWNR ANOP                                                      @L3A 01134000
&IOWN    SETC   '00'                   ASSUME OWNER=HOME           @L3A 01135000
         AIF ('&OWNER' EQ '').CHKRTCD    IF OWNER NOT SPECIFIED    @L3A 01136000
         AIF (N'&OWNER    LT 2).CHKOWN1  IF NUMBER OF ARGS LT 2    @L3A 01137000
         MNOTE  4,'&I331 ''OWNER=&OWNER'' &TOLONG ''OWNER=&OWNER(1)''.'*01138000
                                                                   @L3A 01139000
&ERROR4  SETA   4                      NOTE ERROR                  @L3A 01140000
.CHKOWN1 ANOP                                                      @L3A 01141000
         AIF   ('&OWNER(1)' NE 'HOME').CHKOWN2                     @L3A 01142000
&IOWN    SETC   '00'                   OWNER=HOME                  @L3A 01143000
         AGO   .CHKOWN9                                            @L3A 01144000
.CHKOWN2 ANOP                                                      @L3A 01145000
         AIF   ('&OWNER(1)' NE 'PRIMARY').CHKOWN3                  @L3A 01146000
&IOWN    SETC   '01'                   OWNER = PRIMARY             @L3A 01147000
         AGO   .CHKOWN9                                            @L3A 01148000
.CHKOWN3 ANOP                                                      @L3A 01149000
         AIF   ('&OWNER(1)' NE 'SECONDARY').CHKOWN4                @L3A 01150000
&IOWN    SETC   '10'                   OWNER = SECONDARY           @L3A 01151000
         AGO   .CHKOWN9                                            @L3A 01152000
.CHKOWN4 ANOP                                                      @L3A 01153000
         AIF   ('&OWNER(1)' NE 'SYSTEM').CHKOWN5                   @L3A 01154000
&IOWN    SETC   '11'                   OWNER = SYSTEM              @L3A 01155000
         AGO   .CHKOWN9                                            @L3A 01156000
.CHKOWN5 ANOP                                                      @L3A 01157000
         MNOTE 12,'&I343 ''&OWNER(1)'' IN ''OWNER=&OWNER'' MUST BE ''HO+01158000
               ME'', ''PRIMARY'', ''SECONDARY'', OR ''SYSTEM''.'   @L3A 01159000
&ERROR12 SETA   12                     NOTE ERROR                  @L3A 01160000
.CHKOWN9 ANOP                                                      @L3A 01161000
         AIF ('&IFUNC' EQ 'OBTAIN').CHKRTCD IF 'OBTAIN' FUNCTION   @L3A 01162000
      MNOTE 12,'&I323 ''OWNER'' PARAMETER &INVALID ''RELEASE''.'   @L3A 01163000
&ERROR12 SETA   12                     NOTE ERROR                  @L3A 01164000
         AGO    .CHKRTCD               CHECK NEXT KEYWORD          @L3A 01165000
.*                                                                      01166000
.********************************************************************** 01167000
.*                                                                      01168000
.* CHECK KEYWORD FOR THE RETURN CODE                                    01169000
.*                                                                      01170000
.*     When the RTCD parm is passed as a register, addtional checks     01171000
.* are made to make sure that a valid register is selected.  For the    01172000
.* RTCD parm only regs 2 - 12 and 15 are valid with reg 15 being the    01173000
.* preferred register.                                                  01174000
.*                                                                      01175000
.********************************************************************** 01176000
.*                                                                      01177000
.CHKRTCD ANOP                                                           01178000
         AIF ('&RTCD' EQ '').CHKSEM    IF RTCD WAS NOT SPECIFIED        01179000
         AIF ('&ICOND' EQ 'NO').CHKSEM IF COND(NO) WAS SPECIFIED   @P6A 01180000
         AIF (N'&RTCD LT 2).CHKRTCD1   IF NUMBER OF ARGUMENTS LT 2      01181000
         MNOTE  4,'&I331 ''RTCD=&RTCD'' &TOLONG ''RTCD=&RTCD(1)''.'     01182000
&ERROR4  SETA   4                      NOTE ERROR                       01183000
&IRTCD   SETC   '&RTCD(1)'             SAVE RTCD SPECIFICATION          01184000
         AGO    .CHKRTCD10                                              01185000
.CHKRTCD1 ANOP                                                          01186000
&IRTCD   SETC   '&RTCD'                SAVE RTCD SPECIFICATION          01187000
.CHKRTCD10 ANOP                                                         01188000
         AIF ('&IRTCD' EQ '').CHKRTCD2 IF ARGUMENT NULL                 01189000
&RTCDREG SETB  ('&IRTCD'(1,1) EQ '(')   SET BIT IF RTCD IS IN REGISTER  01190000
         AIF (NOT &RTCDREG).CHKSEM      IF RTCD IS NOT IN REGISTER      01191000
&IRTCD   SETC   '&IRTCD'(2,K'&IRTCD-2)   STRIP PARENS          @YA30573 01192000
         AIF ('&IRTCD' EQ '').CHKRTCD2 IF ARGUMENT NULL        @YA30573 01193000
         AIF ('&IRTCD' EQ '0').CHKRTCD12 IF REG NOT VALID               01194000
.*                                     ISSUE MNOTE             @YA30573 01195000
         AIF ('&IRTCD' EQ '1').CHKRTCD12 IF REG NOT VALID               01196000
.*                                     ISSUE MNOTE             @YA30573 01197000
         AIF ('&IRTCD' EQ '00').CHKRTCD12 IF REG NOT VALID              01198000
.*                                     ISSUE MNOTE             @YA30573 01199000
         AIF ('&IRTCD' EQ '01').CHKRTCD12 IF REG NOT VALID              01200000
.*                                     ISSUE MNOTE             @YA30573 01201000
         AIF ('&IRTCD' EQ '13').CHKRTCD12 IF REG NOT VALID              01202000
.*                                     ISSUE MNOTE             @YA30573 01203000
         AIF ('&IRTCD' EQ '14').CHKRTCD12 IF REG NOT VALID              01204000
.*                                     ISSUE MNOTE             @YA30573 01205000
         AGO    .CHKSEM                CONTINUE TO CHECK NEXT KEYWORD   01206000
.*                                                             @YA30573 01207000
.CHKRTCD12 ANOP                                                @YA30573 01208000
         MNOTE  12,'&I343 &REGNOGD  ''RTCD'' &VALDREG 2-12,15.' REG     01209000
.*                                   SPECIFIED WAS NOT 2-12,15 @YA30573 01210000
&ERROR12 SETA   12                     NOTE ERROR              @YA30573 01211000
         AGO    .CHKSEM                CONTINUE TO CHECK NEXT KEYWORD   01212000
.*                                                             @YA30573 01213000
.CHKRTCD2 ANOP                                                          01214000
         MNOTE  12,'&I313 &NOARG        ''RTCD'' PARAMETER.'            01215000
&ERROR12 SETA   12                     NOTE ERROR                       01216000
.*                                                                      01217000
.********************************************************************** 01218000
.*                                                                      01219000
.*    CHECK SEMANTICS FOR 'OBTAIN' AND 'RELEASE'                        01220000
.*       - SUBPOOL MUST BE SPECIFIED WHEN KEY IS SPECIFIED              01221000
.*       - RTCD CAN ONLY BE SPECIFIED WITH COND=YES                     01222000
.*                                                                      01223000
.********************************************************************** 01224000
.*                                                                      01225000
.CHKSEM  ANOP                                                           01226000
         AIF ('&SP' NE '' OR '&KEY' EQ '').CHKSEM1 IF SP WAS           +01227000
                                       SPECIFIED OR KEY WAS NOT        +01228000
                                       SPECIFIED                        01229000
&ERROR12 SETA   12                     NOTE ERROR                       01230000
         MNOTE  12,'&I351 ''SP'' IS REQUIRED WHEN ''KEY'' IS       SPEC+01231000
               IFIED.'                                                  01232000
.CHKSEM1 AIF ('&RTCD' NE '' AND '&ICOND' EQ 'NO').CHKSEM2 IF RTCD WAS  +01233000
                                       SPECIFIED AND COND=NO            01234000
         AGO  .CHKSPRLS                                                 01235000
.CHKSEM2 ANOP                                                           01236000
&ERROR12 SETA  12                      NOTE ERROR                       01237000
         MNOTE 12,'&I323 ''RTCD'' PARAMETER &INVALID   ''COND=NO''.'    01238000
.*                                                                      01239000
.********************************************************************** 01240000
.*                                                                      01241000
.*    IF SUBPOOL RELEASE REQUEST:                                       01242000
.*       - ADDR AND LENGTH CANNOT BE SPECIFIED, AND SP IS REQUIRED      01243000
.*                                                                      01244000
.********************************************************************** 01245000
.*                                                                      01246000
.CHKSPRLS ANOP                                                          01247000
         AIF ('&IFUNC' EQ 'OBTAIN').CHKEND  DO NOT PROCESS SUBPOOL     +01248000
                                       RELEASE IF OBTAIN FUNCTION       01249000
         AIF ('&ADDR' EQ '').SPRLS1         IF ADDR WAS NOT SPECIFIED   01250000
         AIF ('&LENGTH' NE '').CHKEND       IF LENGTH WAS SPECIFIED     01251000
         MNOTE  12,'&I313 ''LENGTH'' PARAMETER &NOTSPEC.'               01252000
&ERROR12 SETA   12                     NOTE ERROR                       01253000
         AGO    .CHKEND                CONTINUE CHECKING                01254000
.SPRLS1  ANOP                                                           01255000
         AIF ('&LENGTH' EQ '').SPRLS2       IF LENGTH WAS NOT SPECIFIED 01256000
         MNOTE  12,'&I313 ''ADDR'' PARAMETER &NOTSPEC.'                 01257000
&ERROR12 SETA   12                     NOTE ERROR                       01258000
         AGO    .CHKEND                CONTINUE CHECKING                01259000
.SPRLS2  ANOP                                                           01260000
         AIF ('&SP' NE '').SPRLS3           IF SP WAS SPECIFIED         01261000
         MNOTE  12,'&I313 ''ADDR'' PARAMETER &NOTSPEC.'                 01262000
         MNOTE  12,'&I313 ''LENGTH'' PARAMETER &NOTSPEC.'               01263000
&ERROR12 SETA   12                     NOTE ERROR                       01264000
         AGO    .CHKEND                CONTINUE CHECKING                01265000
.SPRLS3  ANOP                                                           01266000
&BSPRLS  SETB   1                      SET BIT IF SUBPOOL RELEASE       01267000
&IADDR   SETC   '0'                    SET ADDR TO ZERO                 01268000
.*                                                                      01269000
.********************************************************************** 01270000
.*       GENERATE ASSEMBLER CODE IF NO SEVERE ERROR FOUND               01271000
.********************************************************************** 01272000
.*                                                                      01273000
.CHKEND  ANOP                                                           01274000
         AIF (&ERROR12 EQ 0).GENTEXT     CONTINUE PROCESSING IF NO     +01275000
                                         SEVERE ERROR WAS FOUND         01276000
         MEXIT                           OTHERWISE TERMINATE PROCESSING 01277000
.GENTEXT ANOP                                                           01278000
         AIF ('&INAME' EQ '').GENDCL     IF NO LABEL TO BE GENERATED    01279000
&INAME   DS     0H                                                      01280000
.*                                                                      01281000
.********************************************************************** 01282000
.*     DECLARE VARIABLES                                                01283000
.********************************************************************** 01284000
.*                                                                      01285000
.GENDCL  ANOP                                                           01286000
         CNOP   0,4                                                     01287000
         B      &GNAME.B                     .BRANCH AROUND DATA        01288000
         AIF   (('&ALET' EQ '') OR &ALETREG                            +01289000
               OR (T'&IALET NE 'N')).REGLEN1 IF ALET WAS NOT SPECIFIED,+01290000
                                              OR ALET IS IN REGISTER,  +01291000
                                              OR ALET IS A SYMBOL  @P4C 01292000
&GNAME.A DC     A(&IALET)                    .ALET                      01293000
.REGLEN1 ANOP                                                           01294000
         AIF   (&LEN1REG OR &BSPRLS).REGLEN2  LEN1 IN REG OR SP RELEASE 01295000
&GNAME.L DC     A(&ILEN1)                    .STORAGE LENGTH            01296000
.REGLEN2 ANOP                                                           01297000
         AIF   (('&ILEN2' EQ '') OR &LEN2REG).REGADDR IF LEN2 WAS NOT  +01298000
                                             SPECIFIED, OR IN REGISTER  01299000
&GNAME.M DC     A(&ILEN2)                    .MINIMUM STORAGE LENGTH    01300000
.REGADDR ANOP                                                           01301000
         AIF ('&IFUNC' EQ 'OBTAIN').FLAGOBT  IF OBTAIN WAS SPECIFIED    01302000
.*                                                                3@P4D 01303000
&FLAGS   SETC   '&BALET.00000&BUNCN&BFUNC'   FLAGS FOR RELEASE          01304000
         AGO   .BYTE0                                                   01305000
.FLAGOBT ANOP                                                           01306000
&FLAGS   SETC   '&BALET&BREAL&BLOC&BVAR&BBND&BUNCN&BFUNC' FLAGS FOR    +01307000
                                             OBTAIN                     01308000
.BYTE0   ANOP                                                           01309000
&GNAME.F DC     BL1'0&BCKEY.000&ITCBADB.&IOWN.'  .FLAGS            @D4C 01310000
         AIF ('&KEY' EQ '').BYTE1            IF KEY WAS NOT SPECIFIED   01311000
         AIF   (&KEYREG).BYTE2               IF KEY IN REG              01312000
.BYTE1   ANOP                                                           01313000
         DC     AL1(&IKEY*16)                .KEY                       01314000
.BYTE2   ANOP                                                           01315000
         AIF ('&SP' EQ '').BYTE2A            IF SP WAS NOT SPECIFIED    01316000
         AIF   (&SPREG).BYTE3                SUBPOOL IN REGISTER        01317000
.BYTE2A  DC     AL1(&ISP)                    .SUBPOOL                   01318000
.BYTE3   ANOP                                                           01319000
         DC     BL1'&FLAGS'                  .FLAGS                     01320000
.*                                                                      01321000
.********************************************************************** 01322000
.*     GENERATE CODE TO SET UP ACCESS REGISTER 1                        01323000
.********************************************************************** 01324000
.*                                                                      01325000
.GENALET  ANOP                                                          01326000
&GNAME.B DS     0F                                                      01327000
         AIF ('&ALET' EQ '').GENLN1          IF ALET WAS NOT SPECIFIED  01328000
         AIF   (&ALETREG).ALETRG             ALET IN REGISTER           01329000
         AIF   (T'&IALET NE 'N').ALETVAR     NOT SPECIFIED AS A NUMBER  01330000
         LAM    1,1,&GNAME.A                 .SET ACCESS REGISTER 1     01331000
.*                                                                @P4C  01332000
         AGO   .GENLN1                                            @P4C  01333000
.ALETVAR ANOP                                                           01334000
         LAM    1,1,&IALET                   .SET ACCESS REGISTER 1     01335000
.*                                                                @P4C  01336000
.*                                                               2@P4D  01337000
         AGO   .GENLN1                                                  01338000
.ALETRG  ANOP                                                           01339000
&IALET   SETC   '&IALET'(2,K'&IALET-2)  STRIP PARENS                    01340000
         AIF ('&IALET' EQ '1').GENLN1  ACCESS REG SPECIFICATION IS 1    01341000
         CPYA   1,&IALET                     .SET ACCESS REGISTER 1     01342000
.*                                                                      01343000
.********************************************************************** 01344000
.*     GENERATE CODE TO SET UP REGISTER 0 FOR 'OBTAIN', AND 'RELEASE'   01345000
.********************************************************************** 01346000
.*                                                                      01347000
.GENLN1  ANOP                                                           01348000
         AIF (&BSPRLS).GENSPRLL              IF SUBPOOL RELEASE         01349000
         AIF (&LEN1REG).GENLN1R              IN REGISTER                01350000
.*                                                                @P4D  01351000
         L      0,&GNAME.L                   .STORAGE LENGTH            01352000
         AGO    .GENLN2            CONTINUE GENERATING                  01353000
* GENERAL REGISTER                                                      01354000
.GENLN1R ANOP                                                           01355000
         AIF ('&ILEN1' EQ '0').GENLN2 REGISTER SPECIFICATION IS 0       01356000
         LR     0,&ILEN1                     .STORAGE LENGTH            01357000
         AGO    .GENLN2            CONTINUE GENERATING                  01358000
.*                                                               3@P4D  01359000
.GENSPRLL ANOP                                                          01360000
         SR     0,0                          .STORAGE LENGTH            01361000
.GENLN2  ANOP                                                           01362000
.*                                                                      01363000
.********************************************************************** 01364000
.*     GENERATE CODE TO SET UP AR 0 with TCBADDR                        01365000
.********************************************************************** 01366000
.*                                                                      01367000
.GENTC0  ANOP                                                     @D4A  01368000
         AIF ('&ITCBADB' EQ '0').GENLN3      No TCB to do         @D4A  01369000
         AIF (&TCBAREG).GENTC0R              IN REGISTER          @D4A  01370000
         LAM    0,0,&ITCBADD                 .TCB ADDRESS         @D4A  01371000
         AGO    .GENLN3            CONTINUE GENERATING            @D4A  01372000
* GENERAL REGISTER                                                @D4A  01373000
.GENTC0R ANOP                                                     @D4A  01374000
         SAR    0,&ITCBADD                   .TCB ADDRESS         @D4A  01375000
         AGO    .GENLN3            CONTINUE GENERATING            @D4A  01376000
.*                                                                      01377000
.********************************************************************** 01378000
.*     GENERATE CODE TO SET UP REGISTER1 FOR 'OBTAIN'                   01379000
.********************************************************************** 01380000
.*                                                                      01381000
.GENLN3  ANOP                                                           01382000
         AIF ('&IFUNC' EQ 'RELEASE').GENADDR IF RELEASE WAS SPECIFIED   01383000
         AIF ('&ILEN2' EQ '').GENIA       MINIMUM LENGTH NOT SPECIFIED  01384000
         AIF (&LEN2REG).GENLN2R           IN REGISTER                   01385000
.*                                                                @P4D  01386000
         L      1,&GNAME.M                   .MINIMUM STORAGE LENGTH    01387000
         AGO    .GENR15            CONTINUE GENERATING                  01388000
* GENERAL REGISTER                                                      01389000
.GENLN2R ANOP                      A REGISTER                           01390000
         AIF ('&ILEN2' EQ '1').GENR15 REGISTER SPECIFICATION IS 1       01391000
         LR     1,&ILEN2                     .MINIMUM STORAGE LENGTH    01392000
         AGO    .GENR15            CONTINUE GENERATING                  01393000
.GENIA   ANOP                                                      @L4A 01394000
         AIF   ('&IINADDR' EQ '').GENR15     INADDR not specified  @L4A 01395000
         AIF   (&IADRREG).GENIA1             A REGISTER            @L4A 01396000
.* RX-TYPE ADDRESS                                                 @L4A 01397000
         L      1,&IINADDR                   .ADDRESS OF STORAGE   @L4A 01398000
         AGO    .GENR15            CONTINUE GENERATING             @L4A 01399000
.* REGISTER                                                        @L4A 01400000
.GENIA1 ANOP                                                       @L4A 01401000
         AIF ('&IINADDR' EQ '1').GENR15 REGISTER SPECIFIED IS 1    @L4A 01402000
         LR     1,&IINADDR                   .ADDRESS OF STORAGE   @L4A 01403000
         AGO    .GENR15            CONTINUE GENERATING             @L4A 01404000
.*                                                                 @L4A 01405000
.*                                                                      01406000
.********************************************************************** 01407000
.*     GENERATE CODE TO SET UP REGISTER1 FOR 'RELEASE'                  01408000
.********************************************************************** 01409000
.*                                                                      01410000
.GENADDR ANOP                                                           01411000
         AIF (&BSPRLS).GENSPRLA               IF SUBPOOL RELEASE        01412000
         AIF (&ADDRREG).GENADR                A REGISTER                01413000
.* RX-TYPE ADDRESS                                               @D3C   01414000
         L      1,&IADDR                     .ADDRESS OF STORAGE        01415000
         AGO    .GENR15            CONTINUE INITIALIZATION              01416000
.* REGISTER                                                             01417000
.GENADR ANOP                       A REGISTER                           01418000
         AIF ('&IADDR' EQ '1').GENR15 REGISTER SPECIFICATION IS 1       01419000
         LR     1,&IADDR                     .ADDRESS OF STORAGE        01420000
         AGO    .GENR15            CONTINUE INITIALIZATION              01421000
.GENSPRLA ANOP                                                          01422000
         SR     1,1                          .ADDRESS OF STORAGE        01423000
.*                                                                      01424000
.********************************************************************** 01425000
.*     GENERATE CODE TO SET UP REGISTER 15                              01426000
.*                                                                      01427000
.*    BYTE 0   **********************                                   01428000
.*             *   RESERVED         *                                   01429000
.*    BYTE 1   **********************                                   01430000
.*             *   KEY   *   RSVD   *                                   01431000
.*    BYTE 2   **********************                                   01432000
.*             *   SUBPOOL          *                                   01433000
.*    BYTE 3   **********************                                   01434000
.*             *   FLAGS            *                                   01435000
.*             **********************                                   01436000
.*                                                                      01437000
.********************************************************************** 01438000
.*                                                                      01439000
.GENR15   ANOP                                                          01440000
         AIF    (&KEYREG OR &SPREG).KYSPREG  IF KEY OR SP IN REG        01441000
         L      &IREG15,&GNAME.F             .CONTROL INFORMATION       01442000
         AGO   .GENPC                        CONTINUE GENERATING        01443000
.KYSPREG ANOP                                                           01444000
         AIF    (&KEYREG AND &SPREG).BOTHREG IF KEY AND SP IN REG       01445000
         AIF    (&KEYREG).KEYINREG           IF KEY IN REG              01446000
         AIF ('&ISP' EQ '&IREG15').SPINPRG   IF SP IS IN REG15          01447000
         LR     &IREG15,&ISP                 .OBTAIN SUBPOOL ID         01448000
.SPINPRG SLL    &IREG15,8(0)                 .MOVE SUBPOOL TO BYTE 2    01449000
         ICM    &IREG15,13,&GNAME.F          .CONTROL INFORMATION       01450000
         AGO   .GENPC                        CONTINUE GENERATING        01451000
.KEYINREG ANOP                                                          01452000
         AIF ('&IKEY' EQ '&IREG15').KEYINR15 IF KEY ALREADY IN REG 15   01453000
.*                                                             @YA30573 01454000
         LR     &IREG15,&IKEY                .GET STORAGE KEY           01455000
.KEYINR15 ANOP                                                 @YA30573 01456000
         SLL    &IREG15,16(0)                .MOVE KEY TO BITS 8-11     01457000
         ICM    &IREG15,11,&GNAME.F          .CONTROL INFORMATION       01458000
         AGO   .GENPC                        CONTINUE GENERATING        01459000
.BOTHREG ANOP                                                  @YA30573 01460000
         AIF ('&IKEY' EQ '&ISP').SAMEREG     IF KEY AND SP IN SAME REG  01461000
.*                                                             @YA30573 01462000
         AIF ('&IKEY' EQ '&IREG15').KEYREG15 IF KEY ALREADY IN REG 15   01463000
.*                                                             @YA30573 01464000
         AIF ('&ISP' EQ '&IREG15').SPREG15   IF SP ALREADY IN REG 15    01465000
.*                                                             @YA30573 01466000
         LR     &IREG15,&IKEY                .OBTAIN KEY       @YA30573 01467000
.KEYREG15 ANOP                                                 @YA30573 01468000
         SLL    &IREG15,8(0)                 .MOVE KEY OVER    @YA30573 01469000
         OR     &IREG15,&ISP                 .GET SUBPOOL ID   @YA30573 01470000
         SLL    &IREG15,8(0)                 .MOVE KEY AND SUBPOOL      01471000
.*                                                             @YA30573 01472000
         ICM    &IREG15,9,&GNAME.F           .CONTROL FLAGS    @YA30573 01473000
         AGO   .GENPC                                          @YA30573 01474000
.SPREG15 ANOP                                                  @YA30573 01475000
         LR     14,&IKEY                     .OBTAIN KEY       @YA30573 01476000
         SLL    14,8(0)                      .MOVE KEY OVER    @YA30573 01477000
         OR     &IREG15,14                   .OR INTO REG 15   @YA30573 01478000
         SLL    &IREG15,8(0)                 .MOVE KEY AND SUBPOOL      01479000
.*                                                             @YA30573 01480000
         ICM    &IREG15,9,&GNAME.F           .CONTROL FLAGS    @YA30573 01481000
         AGO   .GENPC                                          @YA30573 01482000
.SAMEREG ANOP                                                  @YA30573 01483000
         AIF ('&IKEY' EQ '&IREG15').BOTHR15  IF KEY AND SP IN REG 15    01484000
.*                                                             @YA30573 01485000
         LR     &IREG15,&IKEY                .OBTAIN KEY & SP  @YA30573 01486000
.BOTHR15 ANOP                                                  @YA30573 01487000
         ICM    &IREG15,9,&GNAME.F           .CONTROL INFORMATION       01488000
.*                                                                      01489000
.********************************************************************** 01490000
.*     GENERATE CODE TO SET UP REGISTER 14                              01491000
.********************************************************************** 01492000
.*                                                                      01493000
.GENPC  ANOP                                                            01494000
         L      14,16(0,0)                   .CVT ADDRESS               01495000
         L      14,772(14,0)                 .ADDR SYST LINKAGE TABLE   01496000
.*                                                                 @P4C 01497000
         AIF ('&IFUNC' EQ 'RELEASE').GENPC1  IF RELEASE WAS SPECIFIED   01498000
.*                                                                 @P5A 01499000
         L      14,160(14,0)                 .OBTAIN LX/EX FOR OBTAIN   01500000
.*                                                                 @P4C 01501000
         AGO    .GENPC2                                            @P5A 01502000
.GENPC1  ANOP                                                      @P5A 01503000
         L      14,204(14,0)                 .OBTAIN LX/EX FOR RELEASE  01504000
.*                                                                 @P5A 01505000
.GENPC2  ANOP                                                      @P5A 01506000
         PC     0(14)                        .PC TO STORAGE RTN         01507000
.*                                                                      01508000
.********************************************************************** 01509000
.*     GENERATE CODE TO SAVE RETURN CODE, AND ADDRESS IF SPECIFIED      01510000
.*     WITH 'OBTAIN'                                                    01511000
.********************************************************************** 01512000
.*                                                                      01513000
         AIF   ('&IFUNC' NE 'OBTAIN' OR '&IADDR' EQ '').SAVERC          01514000
         AIF   (&ADDRREG).SAVEA              A REGISTER                 01515000
.* RX-TYPE ADDRESS                                              @D3C    01516000
         ST     1,&IADDR                     .SAVE ADDR OF STORAGE      01517000
         AGO    .SAVERC            CONTINUE SAVE RETURN CODE            01518000
.* REGISTER                                                             01519000
.SAVEA  ANOP                                                            01520000
         AIF ('&IADDR' EQ '1').SAVERC REGISTER SPECIFICATION IS 1       01521000
         LR     &IADDR,1                     .SAVE ADDR OF STORAGE      01522000
.SAVERC  AIF   ('&IRTCD' EQ '').MMEND                                   01523000
         AIF   (&RTCDREG).SAVERC1            A REGISTER                 01524000
.* A-TYPE ADDRESS                                                       01525000
         ST     15,&IRTCD                    .SAVE RETURN CODE          01526000
         AGO    .MMEND             CONTINUE SAVE RETURN CODE            01527000
.* REGISTER                                                             01528000
.SAVERC1 ANOP                       A REGISTER                          01529000
         AIF ('&IRTCD' EQ '15').MMEND  REGISTER SPECIFICATION IS 15     01530000
         LR     &IRTCD,15                    .SAVE RETURN CODE          01531000
.MMEND   MEXIT                     MACRO IS COMPLETE                    01532000
.*                                                                      01533000
.******************************************************************     01534000
.*  INADDR is not supported in VSE/ESA                     @D61ADTN     01535000
.******************************************************************     01536000
.*                                                                      01537000
.ERINADR IHBERMAC 1309,INADDR                              @D61ADTN     01538000
.*                                                                      01539000
.******************************************************************     01540000
.* Exit the macro                                                       01541000
.******************************************************************     01542000
.*                                                                      01543000
         MEXIT                                             @D61ADTN     01544000
.*                                                                      01545000
.*                                                                      01546000
.******************************************************************     01547000
.*  OWNER is not supported in VSE/ESA                      @D61ADTN     01548000
.******************************************************************     01549000
.*                                                                      01550000
.EROWNER ANOP                                              @D61ADKH     01551000
         AIF ('&OWNER' EQ 'HOME').VSECND1                  @D62ADMZ     01552000
         IHBERMAC 1309,OWNER                               @D61ADTN     01553000
.*                                                                      01554000
.******************************************************************     01555000
.* Exit the macro                                                       01556000
.******************************************************************     01557000
.*                                                                      01558000
         MEXIT                                             @D61ADTN     01559000
.*                                                                      01560000
.*                                                                      01561000
         MEND                                                           01562000
*      */                                                               01563000
* %PLSSKIP:  ;                                                          01564000
*%    STORAGE:                                                          01565000
* MACRO KEYS(COND,                       /* COND=YES|NO              */ 01566000
*            INADDR,                     /* ADDR OF STORAGE TO OBTAIN   01567000
*                                                                @L4A*/ 01568000
*            ADDR,                       /* ADDRESS OF STORAGE       */ 01569000
*            LENGTH,                     /* AMOUNT OF STORAGE        */ 01570000
*            SP,                         /* SUBPOOL ID               */ 01571000
*            ALET,                       /* ACCESS LIST ENTRY TOKEN  */ 01572000
*            BNDRY,                      /* BOUNDARY ALIGNMENT       */ 01573000
*            KEY,                        /* KEY                      */ 01574000
*            CALLRKY,                    /* CALLRKY(YES|NO)      @L2A*/ 01575000
*            LOC,                        /* LOCATION                 */ 01576000
*            RTCD,                       /* RETURN CODE              */ 01577000
*            LINKAGE,                    /* SYSTEM                   */ 01578000
*            OWNER,                      /* OWNER                @L3A*/ 01579000
*            TCBADDR,                    /* TCB ADDRESS          @D4A*/ 01580000
*            RELATED);                   /* INFORMATION USED TO         01581000
*                                           SELF-DOCUMENT            */ 01582000
*    ANS('?'|| MACLABEL || 'STORAGEP' || MACLIST || MACKEYS || ';');    01583000
*%END STORAGE;                                                          01584000
