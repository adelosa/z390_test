*%;    /*                                                               00010001
         MACRO                                                          00020001
         IRRPCOMP &DSECT=YES                                         */ 00030001
*/****START OF SPECIFICATIONS****************************************** 00040001
*                                                                       00050001
*   $MAC(IRRPCOMP) COMP(SC1BN) PROD(SAF):                         @P1C  00060001
*                                                                       00070001
*01* MACRO NAME: IRRPCOMP                                               00080001
*                                                                       00090001
*01* DSECT NAME: COMP                                                   00100001
*                                                                       00110001
*01* DESCRIPTIVE NAME:   OMVS  Common Security Parameter List           00120001
*                                                                       00130001
*02*   ACRONYM: COMP                                                    00140001
**/                                                                     00150001
*/*01* PROPRIETARY STATEMENT=                                        */ 00160001
*/***PROPRIETARY_STATEMENT********************************************/ 00170001
*/*                                                                  */ 00180001
*/*                                                                  */ 00190001
*/* LICENSED MATERIALS - PROPERTY OF IBM                             */ 00200001
*/* THIS MACRO IS "RESTRICTED MATERIALS OF IBM"                      */ 00210001
*/* 5647-A01, 5686-066 (C) COPYRIGHT IBM CORP. 1992, 2000   @D66CDHH */ 00220001
*/*                                                                  */ 00230001
*/* STATUS= HBB7703                                                  */ 00240001
*/*                                                                  */ 00250001
*/***END_OF_PROPRIETARY_STATEMENT*************************************/ 00260001
*/*                                                                  */ 00270001
*/*01* EXTERNAL CLASSIFICATION: PSPI                             @P5A*/ 00280001
*/*01* END OF EXTERNAL CLASSIFICATION:                               */ 00290001
*/*                                                                     00300001
*01* FUNCTION:                                                          00310001
*                                                                       00320001
*    This file contains the PL/X and BAL mapping of the common input    00330001
*    parameter list for   OMVS  SAF and RACF routers. It also has       00340001
*    the input parameter lists for each of the   OMVS  sercurity        00350001
*    service routines. The input parameter lists in this file are:      00360001
*                                                                       00370001
*    DSECT NAME   STUB NAME      SECURITY FUNCTION                      00380001
*                                                                       00390001
*      COMP       all         Common Security                           00400001
*                                                                       00410001
*      IUSP       IRRSIU00    INIT_USP                                  00420001
*                                                                       00430001
*      CSID                   Common Set Id Input Parameter List:       00440001
*                 IRRSSU00      RACF Set Uid                            00450001
*                 IRRSEU00      RACF Set Effective Uid                  00460001
*                 IRRSSG00      RACF Set Group Id                       00470001
*                 IRRSEG00      RACF Set Effective Group Id             00480001
*                                                                       00490001
*      EXID       IRRSEX00    Exec Set Uid/Gid                          00500001
*                                                                       00510001
*      GETG       IRRSGG00    Get Groups.                               00520001
*                                                                       00530001
*      CHKP       IRRSKP00    Check Privilege.                          00540001
*                                                                       00550001
*      GMAP                   Common Get Map Input Parameter List:      00560001
*                 IRRSGM00      RACF Get Group ID Map                   00570001
*                 IRRSUM00      RACF Get User  ID Map                   00580001
*                                                                       00590001
*                                                                       00600001
*      CKPO       IRRSKO00    Check Process Owner.                      00610001
*                                                                       00620001
*      QRYS       IRRSQS00    Query System Security Options.            00630001
*                                                                       00640001
*      CMOD       IRRSCF00    Change File Mode.                         00650001
*                                                                       00660001
*      CLID       IRRSCS00    Clear Setid.                              00670001
*                                                                       00680001
*      n/a        IRRSDU00    Delete Usp (no input parameter list)      00690001
*                                                                       00700001
*      CAUD       IRRSCA00    Change File Audit Options.                00710001
*                                                                       00720001
*      COWN       IRRSCO00    Change Owner and Group.                   00730001
*                                                                       00740001
*      UMSK       IRRSMM00    Set File Mode Creation Mask.              00750001
*                                                                       00760001
*      KACC       IRRSKA00    Check Access.                             00770001
*                                                                       00780001
*      QRYF       IRRSQF00    Query File Security Options.              00790001
*                                                                       00800001
*      KFOW       IRRSKF00    Check File Owner.                         00810001
*                                                                       00820001
*      MKRT       IRRSMR00    Make Root FSP.                            00830001
*                                                                       00840001
*      PTRC       IRRSPT00    PTRACE Authority Check.                   00850001
*                                                                       00860001
*      MFSP       IRRSMF00    Make FSP.                                 00870001
*                                                                       00880001
*      RAUD       IRRSAU00    Audit.                                    00890001
*                                                                       00900001
*      GUGP       IRRSUG00    getugrps()                                00910001
*                                                                       00920001
*      FORK       IRRSFK00    Fork  Exit.                               00930001
*                                                                       00940001
*      MISP       IRRSMI00    Make ISP.                                 00950001
*                                                                       00960001
*      IACC       IRRSKI00    Check access to ISP.                      00970001
*                                                                       00980001
*      IOWN       IRRSCI00    R_IPC_control.                       @03C 00990001
*                                                                       01000001
*      CKO2       IRRSC200    Check the owner of two files.             01010001
*                                                                       01020001
*      GETE       IRRSGE00    Get UIDs/GIDs and supplemental groups     01030001
*                                                                       01040001
*      DINF       IRRSDI00    Get/Set DCE UUID, DCENAME, HOMECELL  @01A 01050001
*                                                                       01060001
*      DKEY       IRRSDK00    Get/Set DPASSWDS                     @01A 01070001
*                                                                       01080001
*      DRUR       IRRSDU00    RACF userid - DCE UUID mapping       @02A 01090001
*                                                                       01100001
*      DAUT       IRRSDA00    RACF Authorization of a DCE Client   @03A 01110001
*                                                                       01120001
*      INTA       IRRSIA00    RACF Initialize ACEE                 @L4A 01130001
*                                                                       01140001
*      ADMN       IRRSEQ00    R_Admin                              @04A 01150001
*                                                                       01160001
*      UMAP       IRRSIM00    R_UserMap                            @L7A 01170001
*                                                                       01180001
*      CDDL       IRRSDL00    CDSA Data Lib Service                @L8A 01190001
*                                                                       01200001
*      KERB       IRRSMK00    RACF Kerberos Information Interface  @LEA 01210001
*                                                                       01220001
*      TKTS       IRRSPK00    RACF Kerberos Ticket Interface       @LHA 01230001
*                                                                       01240001
*01* METHOD OF ACCESS:                                                  01250001
*                                                                       01260001
*02*   PL/X:  %INCLUDE(IRRPCOMP)                                        01270001
*                                                                       01280001
*             DECLARE COMP_PTR PTR(31)                                  01290001
*             To contain the address of the   OMVS  SAF/RACF common     01300001
*             plist and any additional service routine plist.           01310001
*                                                                       01320001
*                                                                       01330001
*02*   ASM:   IRRPCOMP                                                  01340001
*             A DSECT is produced unless DSECT=NO is specified.         01350001
*                                                                       01360001
*             LA     REG,COMP                                           01370001
*             USING  COMP,REG                                           01380001
*                                                                       01390001
*             Where REG is any general register except 0.               01400001
*                                                                       01410001
*                                                                       01420001
*01* SIZE: Release dependent. Refer to the mapping.                     01430001
*                                                                       01440001
*01* POINTED TO BY: Address of COMP is passed in register 1             01450001
*                   when invoking   OMVS  security functions.           01460001
*                                                                       01470001
*01* CREATED BY: Invoker of   OMVS  security functions.                 01480001
*                                                                       01490001
*01* DELETED BY: Invoker of   OMVS   security functions.                01500001
*                                                                       01510001
*01* STORAGE ATTRIBUTES:                                                01520001
*02*   SUBPOOL:  N/A                                                    01530001
*02*   KEY:      Any                                                    01540001
*02*   RESIDENCY: Invoker's primary address space                       01550001
*                                                                       01560001
*01* FREQUENCY: N/A                                                     01570001
*                                                                       01580001
*01* SERIALIZATION: N/A                                                 01590001
*                                                                       01600001
*01* DEPENDENCIES: None                                                 01610001
*                                                                       01620001
*01* NOTES: None                                                        01630001
*                                                                       01640001
*                                                                       01650001
*01* COMPONENT:   SAF (SC1BN)                                           01660001
*                                                                       01670001
*01* DISTRIBUTION LIBRARY:  AMACLIB                                     01680001
*                                                                       01690001
*01* EYE-CATCHER: None - this is not a control block definition.        01700001
*02*   OFFSET:  N/A                                                     01710001
*02*   LENGTH:  N/A                                                     01720001
*                                                                       01730001
*01* CHANGE-ACTIVITY:                                                   01740001
*                                                                       01750001
*   $L0=OMVSSAF, HBB4430, 921201, PDNU:   OMVS  Initial Release         01760001
*   $P1=PIG2939, HBB5510, 930910, PDKAF: PIG2939 NFS Support       @P1A 01770001
*   $P2=PIG2993  HBB5510  930915  PDCCM1: PTM PIG2993              @P2A 01780001
*   $L1=XPG4SAF, JBB5522, 940314  PDKAP1: Support for XPG4         @L1A 01790001
*   $L2=UUSAF,   JBB5522, 940906  PDKAP1: Support for UU           @L2A 01800001
*   $L3=NFSSAF,  JBB5522, 941128  PDAPD1: Support for NFS          @L3A 01810001
*   $D1=NFSSAF,  JBB5522, 941128  PDAPD1: Two workareas in GETE    @D1A 01820001
*   $P3=PP20063  JBB5522, 950417  PDAPD1: Support for NFSC PPZ0026 @P3A 01830001
*   $01=OW15238, JBB5522, 950501  PDNMG1: Support for DCE          @01A 01840001
*   $02=OW15238, JBB5522, 950601  PDJWS1: Support for DCE          @02A 01850001
*   $03=OW15238, JBB5522, 950801  PDEMD1: Support for DCE          @03A 01860001
*   $P4=PPZ0036, JBB5522, 950801  PDNMG1: Support for DCE PPZ0036  @04A 01870001
*   $P5=PSD0785, JBB6602, 960202  PDEMD1: Support for PTM PSD0785  @05A 01880001
*   $L4=WEBSR,   HBB6603, 960729  PDJWS1: OE Server performance    @L4A 01890001
*   $P6=PQC2353  HBB6603, 960909  PDNMG1: OE Server performance    @P6A 01900001
*   $04=OW23446, HBB6603, 960905  PDBRW1: Tivoli Admin inter-op    @04A 01910001
*   $05=OW23446, HBB6603, 961030  PDJWS1: Tivoli Admin inter-op    @05A 01920001
*   $06=OW26931, JBB6604, 970324  PDJWS1: Public Key Phase 1       @06A 01930001
*   $07=OW26061, JBB6604, 970326  PDBRW1: Tivoli Security inter-op @07A 01940001
*   $08=OW26061, JBB6604, 970514  PDALF1: More Security inter-op   @08A 01950001
*   $L5=BOSSTA,  HBB6605, 970624  PDPFW:  BOSS Transportable ACEE  @L5A 01960001
*   $L6=RBAAN,   HBB6605, 970922  PDMKL:  OpenEdition/BAAN         @L6A 01970001
*   $09=OW31934, JBB6604, 980112  PDJWS1: Public Key Phase 2       @09A 01980001
*   $L7=GIDM ,   JBB6607, 980501  PDBG1:  Generic ID mapping       @L7A 01990001
*   $L8=ECPI,    HBB6608, 980713  PDCLC:  Enhanced CDSA Plugins    @L8A 02000001
*   $L9=ECPI,    HBB6608, 980815  PDCLC:  Enhanced CDSA Plugins    @L9A 02010001
*   $LA=ECPI,    HBB6608, 980804  PDRDS2: Enhanced CDSA Plugins    @LAA 02020001
*   $LB=OW35193, HBB6608, 981012  PDALF1: R_admin SETROPTS support @LBA 02030001
*   $LC=ECPI,    HBB6608, 981111  PDCLC:  Enhanced CDSA Plugins    @LCA 02040001
*   $LD=DCERT,   HBB7703, 990802  PDJJP:  Certificate Extensions   @LDA 02050001
*   $LE=KERB,    HBB7703, 990707  PDER1:  Kerberos support         @LEA 02060001
*   $LF=PKIX     HBB7703  991018  PDGTM1: RACF PKIX                @LFA 02070001
*   $LG=PADS1    HBB7703  991018  PDBEC1: PADS1 support            @LGA 02080001
*   $P7=PXD0577  HBB7703, 901022  PDER1:  PTM PXD0577              @P7A 02090001
*   $LH=KERB     HBB7703, 991102  PDAWS1: Kerberos support         @LHA 02100001
*   $P8=PXD0596  HBB7703, 000210  PDCAS1: PTM PXD0596              @P8A 02110001
*   $0A=OW45212  HBB7703  000628  PDGTM1: PKIServ SPE              @0AA 02120001
*                Ported to VSE                                 @D66CDHH 02130001
*                                                                       02140001
*                                                                       02150001
*01* CHANGE-DESCRIPTIONS:                                               02160001
*                                                                       02170001
*    A 000000-999999                                                    02180001
*    A - Delete PFSP parmlist for the MAP_FSP callable service     @P2A 02190001
*    A - Add parameter lists for the new XPG4 modules              @L1A 02200001
*    A - Add parameter list (CKO2) for the new UU module           @L2A 02210001
*    A - Add parameter list (GETE) for the new NFS module          @L3A 02220001
*    A - Add workarea to GETE parameter list                       @D1A 02230001
*    A - Return Real, Effective, Saved UID/GID in GETE output area @P3A 02240001
*    A - Add parameter lists for R_dceinfo, R_dcekey               @01A 02250001
*    A - Add parameter list for R_dceruid                          @02A 02260001
*    A - Add parameter list for R_dceauth                          @03A 02270001
*        Changed comments to reflect current OE terminology.       @03C 02280001
*    C - Length calculation in assembler version                   @P4A 02290001
*    A - Added the External Classification information to prolog   @P5A 02300001
*    A - Added parameter list for InitACEE                         @L4A 02310001
*    C - Change constants to match IRRPSIDF                        @P6A 02320001
*    A - Added parameter list for R_admin                          @04A 02330001
*    C - Driver 2 changes for R_admin                              @05A 02340001
*    C - Added certificate parms for InitACEE                      @06A 02350001
*    A - Added function codes and mappings for group support       @07A 02360001
*    A - Added function codes and mappings for resource support    @08A 02370001
*    C - Added ENVR object parms for InitACEE                      @L5A 02380001
*    A - Added INTA_NO_TIMEOUT and INTA_OUSP_RET attributes and    @L6A 02390001
*        the Output_area parameter.                                @L6A 02400001
*    A - Added register/deregister function codes to InitACEE      @09A 02410001
*    A - Added function codes and mappings for R_UserMap           @L7A 02420001
*    A - Added parm list for CDSA DataLib callable svc IRRSDL00    @L8A 02430001
*    A - Changes for CDSA DataLib phase two                        @L9A 02440001
*    A - Changes for CDSA DataLib phase two                        @LAA 02450001
*    A - Added function codes and mappings for SETROPTS support    @LBA 02460001
*    A - Added support for CDSA DataLib GetUpdateCode function     @LCA 02470001
*    A - Added X500 name and Variable List paramters to IRRSIA00   @LDA 02480001
*    A - Added support for kerberos                                @LEA 02490001
*    A - Added support for PKIX                                    @LEA 02500001
*    A - Support for PKIX                                               02510001
*        (Public Key Infrastructure Standards)                          02520001
*        - Added a constant for a new RACF DataLib                      02530001
*          Callable Service - IncSerialNum                              02540001
*        - Added the mapping for a new RACF DataLib                     02550001
*          Callable Service - IncSerialNum                         @LFA 02560001
*    A - Added support for PADS1 extended data call for RACD       @LGA 02570001
*    C - Correct case on equates                                   @P7A 02580001
*    A - Added support for R_ticketserv                            @LHA 02590001
*    C - Corrected comments for QRYS_OPTN_CODE@                    @P8C 02600001
*    A - Support for PKI Services                                       02610001
*        (Public Key Infrastructure Standards)                          02620001
*        - Defined the mapping for a new                                02630001
*          RACF Callable Service - R_PKIServ                            02640001
*        - Defined the constants for the                                02650001
*          Functions available with the new                             02660001
*          RACF Callable Service - R_PKIServ                       @0AA 02670001
*                                                                       02680001
****END OF SPECIFICATIONS*********************************************/ 02690001
*%;/*                                                                   02700001
*********************************************************************** 02710001
*********************************************************************** 02720001
***                                                                  ** 02730001
***                   COMP ASSEMBLER DECLARATIONS                    ** 02740001
***------------------------------------------------------------------** 02750001
***                                                                  ** 02760001
***   DECLARATION NAME = COMP                                        ** 02770001
***                                                                  ** 02780001
***   DESCRIPTIVE NAME =   OMVS  Common SAF/RACF parameter list.     ** 02790001
***                                                                  ** 02800001
***   FUNCTION = Provides BAL mapping of the common input parameter  ** 02810001
***              list for the   OMVS  SAF/RACF routers.              ** 02820001
***                                                                  ** 02830001
**********************************************************************/ 02840001
*%;   /*                                                                02850001
         AIF   ('&DSECT' EQ 'NO').COMPN                                 02860001
*                                                                       02870001
COMP     DSECT ,                   OMVS  SAF/RACF common plist.         02880001
         AGO   .COMPY                                                   02890001
.COMPN  ANOP                                                            02900001
COMP     DS    0F                  OMVS  SAF/RACF common plist.         02910001
.COMPY  ANOP                                                            02920001
*                                                                       02930001
*                                                                       02940001
COMP_WORKA_STOR@  DS  A          Address of 1024 byte work area.  @P2C  02950001
*                                                                       02960001
COMP_SAFRC_ALET@  DS  A          Address of ALET for SAF Return Code.   02970001
*                                                                       02980001
COMP_SAFRC_STOR@  DS  A          Address of SAF Return Code.            02990001
*                                                                       03000001
COMP_RACRC_ALET@  DS  A          Address of ALET for RACF Return Code.  03010001
*                                                                       03020001
COMP_RACRC_STOR@  DS  A          Address of RACF Return Code.           03030001
*                                                                       03040001
COMP_RACSC_ALET@  DS  A          Address of ALET for RACF Reason Code.  03050001
*                                                                       03060001
COMP_RACSC_STOR@  DS  A          Address of RACF Reason Code.           03070001
*                                                                       03080001
COMP_SERVR_PARMS  DS  0C         Parameters for the service routines    03090001
*                                 start here.                           03100001
*                                                                       03110001
COMP_LEN          EQU *-COMP     Constant - Fixed length of the COMP.   03120001
*                                                                       03130001
*********************************************************************** 03140001
*                                                                     * 03150001
*                 IUSP ASSEMBLER DECLARATIONS                         * 03160001
*---------------------------------------------------------------------* 03170001
*                                                                     * 03180001
*   DECLARATION NAME = IUSP                                           * 03190001
*                                                                     * 03200001
*   DESCRIPTIVE NAME =   OMVS  INIT_USP input parameter list.         * 03210001
*                                                                     * 03220001
*   FUNCTION = Provides the BAL mapping of the input parameter        * 03230001
*              list for the   OMVS  INIT_USP service routine.         * 03240001
*                                                                     * 03250001
*********************************************************************** 03260001
*                                                                       03270001
                   ORG   COMP_SERVR_PARMS     Follows common plist @04C 03280001
*                                                                       03290001
IUSP               DS  0C        Mapping for IUSP                  @04A 03300001
*                                                                       03310001
IUSP_WORKA_ALET@   DS  A         Address of ALET for the output area.   03320001
*                                                                       03330001
IUSP_WORKA_STOR@   DS  A         Address of a 4 byte output area.       03340001
*                                 This area contains an address that    03350001
*                                 points to data about the user.        03360001
*                                                                       03370001
*                                                                       03380001
IUSP_LEN           EQU *-IUSP    Constant - fixed length of the IUSP.   03390001
*                                                                       03400001
*********************************************************************** 03410001
*                                                                     * 03420001
*                 CSID ASSEMBLER DECLARATIONS                         * 03430001
*---------------------------------------------------------------------* 03440001
*                                                                     * 03450001
*   DECLARATION NAME = CSID                                           * 03460001
*                                                                     * 03470001
*   DESCRIPTIVE NAME =   OMVS  RACF Common Set ID input parameter     * 03480001
*                       list.                                         * 03490001
*                                                                     * 03500001
*   FUNCTION = Provides the BAL mapping of the input parameter        * 03510001
*              list for the following   OMVS  RACF Service Routines:  * 03520001
*                 Set Uid                                             * 03530001
*                 Set Effective Uid                                   * 03540001
*                 Set Gid                                             * 03550001
*                 Set Effective Gid                                   * 03560001
*                                                                     * 03570001
*********************************************************************** 03580001
*                                                                       03590001
                   ORG   COMP_SERVR_PARMS    Follows common plist. @04C 03600001
*                                                                       03610001
CSID               DS  0C        Mapping for CSID                  @04A 03620001
*                                                                       03630001
CSID_ID_ALET@      DS  A         Address of ALET for the Uid/Gid.       03640001
*                                                                       03650001
CSID_ID@           DS  A         Address of the Uid/Gid.                03660001
*                                                                       03670001
CSID_IDOA_ALET@    DS  A         Address of ALET for the output area.   03680001
*                                                                       03690001
CSID_IDOA@         DS  A         Address of a 3 word output area.       03700001
*                                 This area contains the new real,      03710001
*                                 effective and saved Uid/Gids.         03720001
*                                                                       03730001
CSID_LEN           EQU *-CSID    Constant - fixed length of the CSID.   03740001
*                                                                       03750001
*                                                                       03760001
*********************************************************************** 03770001
*                                                                     * 03780001
*                 EXID ASSEMBLER DECLARATIONS                         * 03790001
*---------------------------------------------------------------------* 03800001
*                                                                     * 03810001
*   DECLARATION NAME = EXID                                           * 03820001
*                                                                     * 03830001
*   DESCRIPTIVE NAME =   OMVS  RACF Exec Set Uid/Gid input parameter  * 03840001
*                      list.                                          * 03850001
*                                                                     * 03860001
*   FUNCTION = Provides the BAL mapping of the input parameter        * 03870001
*              list for the   OMVS  RACF EXEC Service Routine.        * 03880001
*                                                                     * 03890001
*********************************************************************** 03900001
*                                                                       03910001
                     ORG   COMP_SERVR_PARMS   Follows common plist @04C 03920001
*                                                                       03930001
EXID                 DS  0C      Mapping for EXID                  @04A 03940001
*                                                                       03950001
EXID_FLAG_ALET@      DS  A       Address of ALET for a byte flag.       03960001
*                                                                       03970001
EXID_FLAG@           DS  A       Address of a one byte flag that        03980001
*                                 indicates set Uid, Gid, or Both.      03990001
*                                   x'01' Set Uid.                      04000001
*                                   x'02' Set Gid.                      04010001
*                                   x'03' Set Both.                     04020001
*                                                                       04030001
EXID_UID_ALET@       DS  A       Address of ALET for Uid to be set.     04040001
*                                                                       04050001
EXID_UID@            DS  A       Address of the Uid to be set.          04060001
*                                                                       04070001
EXID_GID_ALET@       DS  A       Address of ALET for Gid to be set.     04080001
*                                                                       04090001
EXID_GID@            DS  A       Address of the Gid to be set.          04100001
*                                                                       04110001
EXID_UIDO_ALET@      DS  A       Address of ALET for Uid output area.   04120001
*                                                                       04130001
EXID_UIDO@           DS  A       Address of Uid output area, which is   04140001
*                                 3 words filled in by IRRREX00 with    04150001
*                                 the real, effective and saved Uids.   04160001
*                                                                       04170001
EXID_GIDO_ALET@      DS  A       Address of ALET for Gid output area.   04180001
*                                                                       04190001
EXID_GIDO@           DS  A       Address of Gid output area, which is   04200001
*                                 3 words filled in by IRRREX00 with    04210001
*                                 the real, effective and saved Gids.   04220001
*                                                                       04230001
EXID_LEN           EQU *-EXID    Constant - fixed length of the EXID.   04240001
*                                                                       04250001
*                                                                       04260001
*********************************************************************** 04270001
*                                                                     * 04280001
*                 GETG ASSEMBLER DECLARATIONS                         * 04290001
*---------------------------------------------------------------------* 04300001
*                                                                     * 04310001
*   DECLARATION NAME = GETG                                           * 04320001
*                                                                     * 04330001
*   DESCRIPTIVE NAME =   OMVS  RACF Get Supplemental Groups input     * 04340001
*                      parameter list.                                * 04350001
*                                                                     * 04360001
*   FUNCTION = Provides the BAL mapping of the input parameter list   * 04370001
*              for the   OMVS  RACF Get Supplemental Groups service   * 04380001
*              routine.                                               * 04390001
*                                                                     * 04400001
*********************************************************************** 04410001
*                                                                       04420001
                     ORG   COMP_SERVR_PARMS   Follows common plist.@04C 04430001
*                                                                       04440001
GETG                 DS  0C      Mapping for GETG                  @04A 04450001
*                                                                       04460001
GETG_KEY_ALET@       DS  A       Address of ALET for the user's key.    04470001
*                                                                       04480001
GETG_KEY@            DS  A       Address of a byte that contains the    04490001
*                                 user's key. The key is in the high    04500001
*                                 order 4 bits of the byte.             04510001
*                                                                       04520001
GETG_GCNT_ALET@      DS  A       Address of ALET for the Group Count.   04530001
*                                                                       04540001
GETG_GCNT@           DS  A       Address of the group count. (A one     04550001
*                                 word area that contains the number    04560001
*                                 of GIDs in the Grouplist area.)       04570001
*                                                                       04580001
GETG_GLST_ALET@      DS  A       Address of ALET for the Group List.    04590001
*                                                                       04600001
GETG_GLST@           DS  A       Address of the Group List area in      04610001
*                                 which supplemental GIDs are returned. 04620001
*                                                                       04630001
GETG_GNUM_ALET@      DS  A       Address of ALET for the number of      04640001
*                                 groups.                               04650001
*                                                                       04660001
GETG_GNUM@           DS  A       Address of the Number Of Groups.       04670001
*                                 A one word area in which the number   04680001
*                                 of supplemental group GIDs is         04690001
*                                 returned.                             04700001
*                                                                       04710001
GETG_LEN           EQU *-GETG    Constant - fixed length of the GETG.   04720001
*                                                                       04730001
*                                                                       04740001
*********************************************************************** 04750001
*                                                                     * 04760001
*                 CHKP ASSEMBLER DECLARATIONS                         * 04770001
*---------------------------------------------------------------------* 04780001
*                                                                     * 04790001
*   DECLARATION NAME = CHKP                                           * 04800001
*                                                                     * 04810001
*   DESCRIPTIVE NAME =   OMVS  RACF Check Privilege input parameter   * 04820001
*                      list.                                          * 04830001
*                                                                     * 04840001
*   FUNCTION = Provides the BAL mapping of the input parameter list   * 04850001
*              for the   OMVS  RACF Check Privilege service routine.  * 04860001
*                                                                     * 04870001
*********************************************************************** 04880001
*                                                                       04890001
                     ORG   COMP_SERVR_PARMS   Follows common plist @04C 04900001
*                                                                       04910001
CHKP                 DS  0C      Mapping for CHKP                  @04A 04920001
*                                                                       04930001
CHKP_AUFC_ALET@      DS  A       Address of ALET for audit function     04940001
*                                 code.                                 04950001
*                                                                       04960001
CHKP_AUFC@           DS  A       Address of the audit function code.    04970001
*                                 (A full word containing the function  04980001
*                                  code that identifies the system      04990001
*                                  call being processed.)               05000001
*                                                                       05010001
CHKP_LEN           EQU *-CHKP    Constant - fixed length of the CHKP.   05020001
*                                                                       05030001
*                                                                       05040001
*********************************************************************** 05050001
*                                                                     * 05060001
*                 GMAP ASSEMBLER DECLARATIONS                         * 05070001
*---------------------------------------------------------------------* 05080001
*                                                                     * 05090001
*   DECLARATION NAME = GMAP                                           * 05100001
*                                                                     * 05110001
*   DESCRIPTIVE NAME =   OMVS  RACF Get Map Common input parameter    * 05120001
*                      list.                                          * 05130001
*                                                                     * 05140001
*   FUNCTION = Provides the BAL mapping of the input parameter        * 05150001
*              list for the   OMVS  RACF Get Group Map/Get User Map   * 05160001
*              service routine.                                       * 05170001
*                                                                     * 05180001
*                                                                     * 05190001
*   Note: GMAP is a common declaration that is used with both Get     * 05200001
*         Group Map and Get User Map. When requesting Get Group Map,  * 05210001
*         all fields pertain to group data. When requesting Get User  * 05220001
*         Map, all fields pertain to user data.                       * 05230001
*                                                                     * 05240001
*********************************************************************** 05250001
*                                                                       05260001
                     ORG   COMP_SERVR_PARMS   Follows common plist @04C 05270001
*                                                                       05280001
GMAP                 DS  0C      Mapping for GMAP                  @04A 05290001
*                                                                       05300001
GMAP_FLAG_ALET@      DS  A       Address of ALET for one byte flag.     05310001
*                                                                       05320001
GMAP_FLAG@           DS  A       Address of the one byte flag:          05330001
*                                 x'00' Search by Gid/Uid.              05340001
*                                 x'01' Search by Group ID/Userid.      05350001
*                                                                       05360001
GMAP_ID_ALET@        DS  A       Address of ALET for the Gid/Uid.       05370001
*                                                                       05380001
GMAP_ID@             DS  A       Address of a word containing the       05390001
*                                 input Uid/Gid or in which the         05400001
*                                 Uid/Gid is returned.                  05410001
*                                                                       05420001
GMAP_NAME_ALET@      DS  A       Address of ALET for the Group Name     05430001
*                                 or Userid.                            05440001
*                                                                       05450001
GMAP_NAME@           DS  A       Address of 8 bytes that contain        05460001
*                                 an input Group Name or Userid         05470001
*                                 or in which the Group name or         05480001
*                                 Userid is returned. The name/id       05490001
*                                 left justified and padded with        05500001
*                                 blanks.                               05510001
*                                                                       05520001
GMAP_LEN           EQU *-GMAP    Constant - fixed length of the GMAP.   05530001
*                                                                       05540001
*                                                                       05550001
*                                                                       05560001
*********************************************************************** 05570001
*                                                                     * 05580001
*                 CKPO ASSEMBLER DECLARATIONS                         * 05590001
*---------------------------------------------------------------------* 05600001
*                                                                     * 05610001
*   DECLARATION NAME = CKPO                                           * 05620001
*                                                                     * 05630001
*   DESCRIPTIVE NAME =   OMVS  RACF Check Process Owner input         * 05640001
*                      parameter list.                                * 05650001
*                                                                     * 05660001
*   FUNCTION = Provides the BAL mapping of the input parameter        * 05670001
*              list for the   OMVS  Check Process Owner service       * 05680001
*              routine.                                               * 05690001
*                                                                     * 05700001
*********************************************************************** 05710001
*                                                                       05720001
                     ORG   COMP_SERVR_PARMS   Follows common plist @04C 05730001
*                                                                       05740001
CKPO                 DS  0C      Mapping for CKPO                  @04A 05750001
*                                                                       05760001
CKPO_REQT_ALET@      DS  A       Address of ALET for one byte Request   05770001
*                                   type.                               05780001
*                                                                       05790001
CKPO_REQT@           DS  A       Address of the one byte request type:  05800001
*                                   1 -  Audit only request from KILL   05810001
*                                     used when SIGCONT signal is being 05820001
*                                     sent.                             05830001
*                                   2 - KILL request.                   05840001
*                                   3 - GETPSENT request.               05850001
*                                   4 - OPEN TTY request.               05860001
*                                                                       05870001
CKPO_UIDS_ALET@      DS  A       Address of ALET for Uids area.         05880001
*                                                                       05890001
CKPO_UIDS@           DS  A       Address of 3 word area containing the  05900001
*                                 real, effective, and saved Uids (in   05910001
*                                 that order) for the target process.   05920001
*                                                                       05930001
CKPO_PID_ALET@       DS  A       Address of ALET for target PID word.   05940001
*                                                                       05950001
CKPO_PID@            DS  A       Address of the words containing the    05960001
*                                 target process's PID.                 05970001
*                                                                       05980001
CKPO_CODE_ALET@      DS  A       Address of ALET for signal code word.  05990001
*                                                                       06000001
CKPO_CODE@           DS  A       Address of word containing a code      06010001
*                                 identifying the signal being sent.    06020001
*                                 This word is ignored for request      06030001
*                                 type 3.                               06040001
*                                                                       06050001
*                                                                       06060001
CKPO_LEN           EQU *-CKPO    Constant - fixed length of CKPO.       06070001
CKPO_KILL_AUDIT    EQU 1         KILL AUDIT Constant.                   06080001
CKPO_KILL          EQU 2         Kill Verification.                     06090001
CKPO_GETPSENT      EQU 3         Identifies caller is GETPSENT.         06100001
CKPO_OPEN_STTY     EQU 4         Open slave TTY.                        06110001
CKPO_MAX_REQ_TYPE  EQU 4         CKPO Max Request Type.                 06120001
*                                                                       06130001
*********************************************************************** 06140001
*                                                                     * 06150001
*                 QRYS ASSEMBLER DECLARATIONS                         * 06160001
*---------------------------------------------------------------------* 06170001
*                                                                     * 06180001
*   DECLARATION NAME = QRYS                                           * 06190001
*                                                                     * 06200001
*   DESCRIPTIVE NAME =   OMVS  RACF Query System Security options     * 06210001
*                      input parameter list.                          * 06220001
*                                                                     * 06230001
*   FUNCTION = Provides the BAL mapping of the input parameter        * 06240001
*              list for the   OMVS  Query System Security options     * 06250001
*              service routine.                                       * 06260001
*                                                                     * 06270001
*********************************************************************** 06280001
*                                                                       06290001
                     ORG   COMP_SERVR_PARMS   Follows common plist @04C 06300001
*                                                                       06310001
QRYS                 DS  0C      Mapping for QRYS                  @04A 06320001
*                                                                       06330001
QRYS_OPTN_CODE_ALET@ DS  A       Address of ALET for the one word       06340001
*                                requested option code.                 06350001
*                                                                       06360001
QRYS_OPTN_CODE@      DS  A       Address of the one word requested      06370001
*                                option code. The defined codes are:    06380001
*                                 x'00000001' - NGROUPS_MAX options@P8C 06390001
*                                 x'00000002' - POSIX_SAVED_IDS opt@P8C 06400001
*                                                                       06410001
QRYS_OUTP_VAL_ALET@  DS  A       Address of ALET for one word output    06420001
*                                value                                  06430001
*                                                                       06440001
QRYS_OUTP_VAL@       DS  A       Address of one word output value       06450001
*                                                                       06460001
QRYS_LEN           EQU *-QRYS    Constant - fixed length of QRYS.       06470001
*                                                                       06480001
*********************************************************************** 06490001
*                                                                     * 06500001
*                 CMOD ASSEMBLER DECLARATIONS                         * 06510001
*---------------------------------------------------------------------* 06520001
*                                                                     * 06530001
*   DECLARATION NAME = CMOD                                           * 06540001
*                                                                     * 06550001
*   DESCRIPTIVE NAME =   OMVS  RACF Change File mode input parameter  * 06560001
*                      list.                                          * 06570001
*                                                                     * 06580001
*   FUNCTION = Provides the BAL mapping of the input parameter        * 06590001
*              list for the   OMVS  Change File Mode service routine. * 06600001
*                                                                     * 06610001
*********************************************************************** 06620001
*                                                                       06630001
                     ORG   COMP_SERVR_PARMS   Follows common plist @04C 06640001
*                                                                       06650001
CMOD                 DS  0C      Mapping for CMOD                  @04A 06660001
*                                                                       06670001
CMOD_MODE_ALET@      DS  A       Address of ALET for the mode parameter 06680001
*                                                                       06690001
CMOD_MODE@           DS  A       Address of a one word mode parameter.  06700001
*                                                                       06710001
CMOD_FSP_ALET@       DS  A       Address of ALET for the FSP structure  06720001
*                                                                       06730001
CMOD_FSP@            DS  A       Address of the FSP structure.          06740001
*                                                                       06750001
CMOD_FID_ALET@       DS  A       Address of ALET for the File Id.       06760001
*                                                                       06770001
CMOD_FID@            DS  A       Address of the File Id which is a      06780001
*                                 16 byte area that contains a unique   06790001
*                                 identifier of the file.               06800001
CMOD_CRED_ALET@      DS  A       Address of ALET for CRED structure.    06810001
*                                                                       06820001
CMOD_CRED@           DS  A       Address of the CRED structure.         06830001
*                                                                       06840001
CMOD_LEN           EQU *-CMOD    Constant - fixed length of CMOD.       06850001
*                                                                       06860001
*********************************************************************** 06870001
*                                                                     * 06880001
*                 CLID ASSEMBLER DECLARATIONS                         * 06890001
*---------------------------------------------------------------------* 06900001
*                                                                     * 06910001
*   DECLARATION NAME = CLID                                           * 06920001
*                                                                     * 06930001
*   DESCRIPTIVE NAME =   OMVS  RACF Clear Setid input parameter list. * 06940001
*                                                                     * 06950001
*   FUNCTION = Provides the BAL mapping of the input parameter        * 06960001
*              list for the   OMVS  Clear Setid service routine.      * 06970001
*                                                                     * 06980001
*********************************************************************** 06990001
*                                                                       07000001
                     ORG   COMP_SERVR_PARMS   Follows common plist @04C 07010001
*                                                                       07020001
CLID                 DS  0C      Mapping for CLID                  @04A 07030001
*                                                                       07040001
CLID_FSP_ALET@       DS  A       Address of ALET for the FSP structure. 07050001
*                                                                       07060001
CLID_FSP@            DS  A       Address of the FSP structure.          07070001
*                                                                       07080001
CLID_FID_ALET@       DS  A       Address of ALET for the File Id.       07090001
*                                                                       07100001
CLID_FID@            DS  A       Address of the File Id which is a      07110001
*                                 16 byte area that contains a unique   07120001
*                                 identifier of the file.               07130001
*                                                                       07140001
CLID_CRED_ALET@      DS  A       Address of ALET for CRED structure.    07150001
*                                                                       07160001
CLID_CRED@           DS  A       Address of the CRED structure.         07170001
*                                                                       07180001
CLID_LEN           EQU *-CLID    Constant - fixed length of CLID.       07190001
*                                                                       07200001
*                                                                       07210001
*********************************************************************** 07220001
*                                                                     * 07230001
*                 CAUD ASSEMBLER DECLARATIONS                         * 07240001
*---------------------------------------------------------------------* 07250001
*                                                                     * 07260001
*   DECLARATION NAME = CAUD                                           * 07270001
*                                                                     * 07280001
*   DESCRIPTIVE NAME =   OMVS  RACF Change File Audit Options input   * 07290001
*                      parameter list.                                * 07300001
*                                                                     * 07310001
*   FUNCTION = Provides the BAL mapping of the input parameter        * 07320001
*              list for the   OMVS  Change File Audit Options routine * 07330001
*                                                                     * 07340001
*********************************************************************** 07350001
*                                                                       07360001
                     ORG   COMP_SERVR_PARMS   Follows common plist @04C 07370001
*                                                                       07380001
CAUD                 DS  0C  Mapping for CAUD                      @04A 07390001
*                                                                       07400001
CAUD_AO_ALET@        DS  A   Address of ALET for the Audit Options.     07410001
*                                                                       07420001
CAUD_AO@             DS  A   Address of 4 bytes that contain an Audit   07430001
*                             Option for each type of access:           07440001
*                              Byte 1 - read access audit options.      07450001
*                              Byte 2 - write access audit options.     07460001
*                              Byte 3 - execute/search audit options.   07470001
*                               Each of the first three bytes contain   07480001
*                               an Audit Option:                   @P1C 07490001
*                               x'00' - don't audit any access attempts 07500001
*                               x'01' - audit successful access.        07510001
*                               x'02' - audit failed access attempts.   07520001
*                              Byte 4 - audit flag.                @P1C 07530001
*                               In the last byte, the last bit     @P1A 07540001
*                               indicates:                         @P1A 07550001
*                               x'00' - set user audit options.    @P1A 07560001
*                               x'01' - set auditor audit options. @P1A 07570001
*                                                                       07580001
CAUD_FSP_ALET@       DS  A   Address of ALET for the FSP structure.     07590001
*                                                                       07600001
CAUD_FSP@            DS  A   Address of the FSP structure.              07610001
*                                                                       07620001
CAUD_FID_ALET@       DS  A   Address of ALET for the File Id.           07630001
*                                                                       07640001
CAUD_FID@            DS  A   Address of the File Id which is a          07650001
*                             16 byte area that contains a unique       07660001
*                             identifier of the file.                   07670001
*                                                                       07680001
CAUD_CRED_ALET@      DS  A   Address of ALET for CRED structure.        07690001
*                                                                       07700001
CAUD_CRED@           DS  A   Address of the CRED structure.             07710001
*                                                                       07720001
CAUD_LEN           EQU *-CAUD   Constant - fixed length of CAUD.        07730001
*                                                                       07740001
*                                                                       07750001
*********************************************************************** 07760001
*                                                                     * 07770001
*                 COWN ASSEMBLER DECLARATIONS                         * 07780001
*---------------------------------------------------------------------* 07790001
*                                                                     * 07800001
*   DECLARATION NAME = COWN                                           * 07810001
*                                                                     * 07820001
*   DESCRIPTIVE NAME =   OMVS  RACF Change Owner and Group input      * 07830001
*                      parameter list.                                * 07840001
*                                                                     * 07850001
*   FUNCTION = Provides the BAL mapping of the input parameter        * 07860001
*              list for the   OMVS  Change Owner and Group service    * 07870001
*              routine.                                               * 07880001
*                                                                     * 07890001
*********************************************************************** 07900001
*                                                                       07910001
                     ORG   COMP_SERVR_PARMS   Follows common plist @04C 07920001
*                                                                       07930001
COWN                 DS  0C      Mapping for COWN                  @04A 07940001
*                                                                       07950001
COWN_UID_ALET@       DS  A       Address of ALET for Uid.               07960001
*                                                                       07970001
COWN_UID@            DS  A       Address of the Uid to be set as the    07980001
*                                 file owner Uid.                       07990001
*                                                                       08000001
COWN_GID_ALET@       DS  A       Address of ALET for Gid.               08010001
*                                                                       08020001
COWN_GID@            DS  A       Address of the Gid to be set as the    08030001
*                                 file owner Gid.                       08040001
*                                                                       08050001
COWN_FSP_ALET@       DS  A       Address of ALET for the FSP structure. 08060001
*                                                                       08070001
COWN_FSP@            DS  A       Address of the FSP structure.          08080001
*                                                                       08090001
COWN_FID_ALET@       DS  A       Address of ALET for the File Id.       08100001
*                                                                       08110001
COWN_FID@            DS  A       Address of the File Id which is a      08120001
*                                 16 byte area that contains a unique   08130001
*                                 identifier of the file.               08140001
*                                                                       08150001
COWN_CRED_ALET@      DS  A       Address of ALET for CRED structure.    08160001
*                                                                       08170001
COWN_CRED@           DS  A       Address of the CRED structure.         08180001
*                                                                       08190001
COWN_LEN           EQU *-COWN    Constant - fixed length of COWN.       08200001
*                                                                       08210001
*********************************************************************** 08220001
*                                                                     * 08230001
*                 UMSK ASSEMBLER DECLARATIONS                         * 08240001
*---------------------------------------------------------------------* 08250001
*                                                                     * 08260001
*   DECLARATION NAME = UMSK                                           * 08270001
*                                                                     * 08280001
*   DESCRIPTIVE NAME =   OMVS  RACF Set File Mode Creation Mask       * 08290001
*                      input parameter list.                          * 08300001
*                                                                     * 08310001
*   FUNCTION = Provides the BAL mapping of the input parameter        * 08320001
*              list for the   OMVS  Set File Mode Creation Mask       * 08330001
*              service routine.                                       * 08340001
*                                                                     * 08350001
*********************************************************************** 08360001
*                                                                       08370001
                     ORG   COMP_SERVR_PARMS   Follows common plist @04C 08380001
*                                                                       08390001
UMSK                 DS  0C      Mapping for UMSK                  @04A 08400001
*                                                                       08410001
UMSK_MODE_ALET@      DS  A       Address of ALET for the mode parameter 08420001
*                                                                       08430001
UMSK_MODE@           DS  A       Address of the mode parameter.         08440001
*                                                                       08450001
UMSK_LEN           EQU *-UMSK    Constant - fixed length of UMSK.       08460001
*                                                                       08470001
*********************************************************************** 08480001
*                                                                     * 08490001
*                 KACC ASSEMBLER DECLARATIONS                         * 08500001
*---------------------------------------------------------------------* 08510001
*                                                                     * 08520001
*   DECLARATION NAME = KACC                                           * 08530001
*                                                                     * 08540001
*   DESCRIPTIVE NAME =   OMVS  RACF Check Access input parameter      * 08550001
*                      list.                                          * 08560001
*                                                                     * 08570001
*   FUNCTION = Provides the BAL mapping of the input parameter        * 08580001
*              list for the   OMVS  Check Access service routine.     * 08590001
*                                                                     * 08600001
*********************************************************************** 08610001
*                                                                       08620001
                     ORG   COMP_SERVR_PARMS   Follows common plist @04C 08630001
*                                                                       08640001
KACC                 DS  0C   Mapping for KACC                     @04A 08650001
*                                                                       08660001
KACC_ACODE_ALET@     DS  A    Address of ALET for the access code.      08670001
*                                                                       08680001
KACC_ACODE@          DS  A    Address of a 1 byte access code that      08690001
*                              contains:                                08700001
*                               x'01' - execute access.                 08710001
*                               x'02' - write access.                   08720001
*                               x'03' - write and execute access.       08730001
*                               x'04' - read access.                    08740001
*                               x'05' - read and execute access.        08750001
*                               x'06' - read and write access.          08760001
*                               x'07' - read, write and execute access. 08770001
*                               x'81' - directory search access.        08780001
*                               x'87' - any access.                     08790001
*                                                                       08800001
KACC_FSP_ALET@       DS  A    Address of ALET for the FSP structure.    08810001
*                                                                       08820001
KACC_FSP@            DS  A    Address of the FSP structure.             08830001
*                                                                       08840001
KACC_FID_ALET@       DS  A    Address of ALET for the File Id.          08850001
*                                                                       08860001
KACC_FID@            DS  A    Address of the File Id which is a         08870001
*                              16 byte area that contains a unique      08880001
*                              identifier of the file.                  08890001
*                                                                       08900001
KACC_CRED_ALET@      DS  A    Address of ALET for CRED structure.       08910001
*                                                                       08920001
KACC_CRED@           DS  A    Address of the CRED structure.            08930001
*                                                                       08940001
KACC_FLAG_ALET@      DS  A    Address of the ALET for the name flag     08950001
*                              byte.                                    08960001
*                                                                       08970001
KACC_FLAG@           DS  A    Address of a byte flag that indicates     08980001
*                              which name is being checked:             08990001
*                              x'00' - Use the CRED_name_flag to        09000001
*                                      determine path name being        09010001
*                                      checked. Used by lookup.         09020001
*                              x'01' - The old (or only) name is        09030001
*                                      being checked. Used by all       09040001
*                                      calls except lookup and when     09050001
*                                      rename and link are checking     09060001
*                                      for write access to the          09070001
*                                      parent directory of the new      09080001
*                                      path name file.                  09090001
*                              x'02' - The new name is being checked.   09100001
*                                      Used by rename and link when     09110001
*                                      checking for write access to     09120001
*                                      the parent directory of the      09130001
*                                      new path name file.              09140001
*                                                                       09150001
KACC_LEN           EQU *-KACC Constant - fixed length of KACC.          09160001
*                                                                       09170001
*********************************************************************** 09180001
*                                                                     * 09190001
*                 QRYF ASSEMBLER DECLARATIONS                         * 09200001
*---------------------------------------------------------------------* 09210001
*                                                                     * 09220001
*   DECLARATION NAME = QRYF                                           * 09230001
*                                                                     * 09240001
*   DESCRIPTIVE NAME =   OMVS  RACF Query File Security Options       * 09250001
*                      input parameter list.                          * 09260001
*                                                                     * 09270001
*   FUNCTION = Provides the BAL mapping of the Query File Security    * 09280001
*              Options for the   OMVS  Query File Security Options    * 09290001
*              service routine.                                       * 09300001
*                                                                     * 09310001
*********************************************************************** 09320001
*                                                                       09330001
                     ORG   COMP_SERVR_PARMS   Follows common plist @04C 09340001
*                                                                       09350001
QRYF                 DS  0C      Mapping for QRYF                  @04A 09360001
*                                                                       09370001
QRYF_OCODE_ALET@     DS  A       Address of ALET for the option code.   09380001
*                                                                       09390001
QRYF_OCODE@          DS  A       Address of a 1 word option code that   09400001
*                                 contains:                             09410001
*                                  x'00000001'-POSIX_CHOWN_RESTRICTED.  09420001
*                                                                       09430001
QRYF_OUTV_ALET@      DS  A       Address of ALET for the output value.  09440001
*                                                                       09450001
QRYF_OUTV@           DS  A       Address of the output value that       09460001
*                                 contains:                             09470001
*                                  0 - POSIX_CHOWN_RESTRICTED.          09480001
*                                 -1 - Not POSIX_CHOWN_RESTRICTED.      09490001
*                                                                       09500001
QRYF_LEN           EQU *-QRYF    Constant - fixed length of QRYF.       09510001
*                                                                       09520001
*                                                                 6@P2D 09530001
*********************************************************************** 09540001
*                                                                     * 09550001
*                 KFOW ASSEMBLER DECLARATIONS                         * 09560001
*---------------------------------------------------------------------* 09570001
*                                                                     * 09580001
*   DECLARATION NAME = KFOW                                           * 09590001
*                                                                     * 09600001
*   DESCRIPTIVE NAME =   OMVS  RACF Check File Owner input parameter  * 09610001
*                      list.                                          * 09620001
*                                                                     * 09630001
*   FUNCTION = Provides the BAL mapping of the input parameter list   * 09640001
*              for the   OMVS  Check File Owner service routine.      * 09650001
*                                                                     * 09660001
*********************************************************************** 09670001
*                                                                       09680001
                     ORG   COMP_SERVR_PARMS   Follows common plist @04C 09690001
*                                                                       09700001
KFOW                 DS  0C      Mapping for KFOW                  @04A 09710001
*                                                                       09720001
KFOW_FSP_ALET@       DS  A       Address of ALET for the input FSP.     09730001
*                                                                       09740001
KFOW_FSP@            DS  A       Address of the input FSP.              09750001
*                                                                       09760001
KFOW_FID_ALET@       DS  A       Address of ALET for the File Id.       09770001
*                                                                       09780001
KFOW_FID@            DS  A       Address of the File Id which is a      09790001
*                                 16 byte area that contains a unique   09800001
*                                 identifier of the file.               09810001
*                                                                       09820001
KFOW_CRED_ALET@      DS  A       Address of ALET for CRED structure.    09830001
*                                                                       09840001
KFOW_CRED@           DS  A       Address of the CRED structure.         09850001
*                                                                       09860001
*                                                                       09870001
KFOW_LEN           EQU *-KFOW    Constant - fixed length of KFOW.       09880001
*                                                                       09890001
*********************************************************************** 09900001
*                                                                     * 09910001
*                 MKRT ASSEMBLER DECLARATIONS                         * 09920001
*---------------------------------------------------------------------* 09930001
*                                                                     * 09940001
*   DECLARATION NAME = MKRT                                           * 09950001
*                                                                     * 09960001
*   DESCRIPTIVE NAME =   OMVS  RACF Make Root FSP input parameter     * 09970001
*                      list.                                          * 09980001
*                                                                     * 09990001
*   FUNCTION = Provides the BAL mapping of the input parameter list   * 10000001
*              for the   OMVS  Make Root FSP service routine.         * 10010001
*                                                                     * 10020001
*********************************************************************** 10030001
*                                                                       10040001
                     ORG   COMP_SERVR_PARMS   Follows common plist @04C 10050001
*                                                                       10060001
MKRT                 DS  0C      Mapping for MKRT                  @04A 10070001
*                                                                       10080001
MKRT_MODE_ALET@      DS  A       Address of ALET for the mode parameter 10090001
*                                                                       10100001
MKRT_MODE@           DS  A       Address of the mode parameter.         10110001
*                                                                       10120001
MKRT_OFSP_ALET@      DS  A       Address of ALET for the output FSP     10130001
*                                 area.                                 10140001
*                                                                       10150001
MKRT_OFSP@           DS  A       Address of the output FSP area.        10160001
*                                                                       10170001
MKRT_FID_ALET@       DS  A       Address of ALET for the File Id.       10180001
*                                                                       10190001
MKRT_FID@            DS  A       Address of the File Id which is a      10200001
*                                 16 byte area that contains a unique   10210001
*                                 identifier of the file.               10220001
*                                                                       10230001
MKRT_DSN_ALET@       DS  A       Address of ALET for the name of the    10240001
*                                 dataset.                              10250001
*                                                                       10260001
MKRT_DSN@            DS  A       Address of an area that contains the   10270001
*                                 name of the PDSE/x data set being     10280001
*                                 created. (44 character length)        10290001
*                                                                       10300001
MKRT_LEN           EQU *-MKRT    Constant - fixed length of MKRT.       10310001
*                                                                       10320001
*********************************************************************** 10330001
*                                                                     * 10340001
*                 PTRC ASSEMBLER DECLARATIONS                         * 10350001
*---------------------------------------------------------------------* 10360001
*                                                                     * 10370001
*   DECLARATION NAME = PTRC                                           * 10380001
*                                                                     * 10390001
*   DESCRIPTIVE NAME =   OMVS  RACF Check PTRACE Authority input      * 10400001
*                      parameter list.                                * 10410001
*                                                                     * 10420001
*   FUNCTION = Provides the BAL mapping of the input parameter list   * 10430001
*              for the   OMVS  Check PTRACE Authority service         * 10440001
*              routine.                                               * 10450001
*                                                                     * 10460001
*********************************************************************** 10470001
*                                                                       10480001
                     ORG   COMP_SERVR_PARMS   Follows common plist @04C 10490001
*                                                                       10500001
PTRC                 DS  0C      Mapping for PTRC                  @04A 10510001
*                                                                       10520001
PTRC_TUID_ALET@      DS  A       Address of ALET for the target UIDs    10530001
*                                 area.                                 10540001
*                                                                       10550001
PTRC_TUID@           DS  A       Address of a 3 word area that contains 10560001
*                                 the REAL, EFFECTIVE, and SAVED UIDs   10570001
*                                 (in that order) for the target        10580001
*                                  process.                             10590001
*                                                                       10600001
PTRC_TGID_ALET@      DS  A       Address of ALET for the target GIDs    10610001
*                                 area.                                 10620001
*                                                                       10630001
PTRC_TGID@           DS  A       Address of a 3 word area that contains 10640001
*                                 the REAL, EFFECTIVE, and SAVED GIDs   10650001
*                                 (in that order) for the target        10660001
*                                  process.                             10670001
*                                                                       10680001
PTRC_TPID_ALET@      DS  A       Address of ALET for the target PID.    10690001
*                                                                       10700001
PTRC_TPID@           DS  A       Address of a word that contains the    10710001
*                                 PID of the target process.            10720001
*                                                                       10730001
PTRC_LEN           EQU *-PTRC    Constant - fixed length of PTRC.       10740001
*                                                                       10750001
*********************************************************************** 10760001
*                                                                     * 10770001
*                 MFSP ASSEMBLER DECLARATIONS                         * 10780001
*---------------------------------------------------------------------* 10790001
*                                                                     * 10800001
*   DECLARATION NAME = MFSP                                           * 10810001
*                                                                     * 10820001
*   DESCRIPTIVE NAME =   OMVS  RACF Make FSP input parameter list.    * 10830001
*                                                                     * 10840001
*   FUNCTION = Provides the BAL mapping of the input parameter list   * 10850001
*              for the   OMVS  Make FSP service routine.              * 10860001
*                                                                     * 10870001
*********************************************************************** 10880001
*                                                                       10890001
                     ORG   COMP_SERVR_PARMS   Follows common plist @04C 10900001
*                                                                       10910001
MFSP                 DS  0C      Mapping for MFSP                  @04A 10920001
*                                                                       10930001
MFSP_MODE_ALET@      DS  A       Address of ALET for the mode parameter 10940001
*                                                                       10950001
MFSP_MODE@           DS  A       Address of the mode parameter.         10960001
*                                                                       10970001
MFSP_OFSP_ALET@      DS  A       Address of ALET for the output FSP     10980001
*                                 area.                                 10990001
*                                                                       11000001
MFSP_OFSP@           DS  A       Address of the output FSP area.        11010001
*                                                                       11020001
*                                                                       11030001
MFSP_ODFSP_ALET@     DS  A       Address of ALET for the owning         11040001
*                                 directory FSP.                        11050001
*                                                                       11060001
MFSP_ODFSP@          DS  A       Address of the owning directory FSP.   11070001
*                                                                       11080001
MFSP_FID_ALET@       DS  A       Address of ALET for the File Id.       11090001
*                                                                       11100001
MFSP_FID@            DS  A       Address of the File Id which is a      11110001
*                                 16 byte area that contains a unique   11120001
*                                 identifier of the file.               11130001
MFSP_CRED_ALET@      DS  A       Address of ALET for CRED structure.    11140001
*                                                                       11150001
MFSP_CRED@           DS  A       Address of the CRED structure.         11160001
*                                                                       11170001
MFSP_LEN           EQU *-MFSP    Constant - fixed length of MFSP.       11180001
*                                                                       11190001
*********************************************************************** 11200001
*                                                                     * 11210001
*                 RAUD ASSEMBLER DECLARATIONS                         * 11220001
*---------------------------------------------------------------------* 11230001
*                                                                     * 11240001
*   DECLARATION NAME = RAUD                                           * 11250001
*                                                                     * 11260001
*   DESCRIPTIVE NAME =   OMVS  RACF Audit input parameter list.       * 11270001
*                                                                     * 11280001
*   FUNCTION = Provides the BAL mapping of the input parameter list   * 11290001
*              for the   OMVS  Audit service routine.                 * 11300001
*                                                                     * 11310001
*********************************************************************** 11320001
*                                                                       11330001
                     ORG   COMP_SERVR_PARMS   Follows common plist @04C 11340001
*                                                                       11350001
RAUD                 DS  0C      Mapping for RAUD                  @04A 11360001
*                                                                       11370001
RAUD_CRED_ALET@      DS  A       Address of ALET for CRED structure.    11380001
*                                                                       11390001
RAUD_CRED@           DS  A       Address of the CRED structure.         11400001
*                                                                       11410001
RAUD_OFID_ALET@      DS  A       Address of ALET for the File Id of     11420001
*                                 the old (or only) file.               11430001
*                                                                       11440001
RAUD_OFID@           DS  A       Address of the File Id for the old     11450001
*                                 (or only) file. The File Id is a      11460001
*                                 16 byte area that contains a unique   11470001
*                                 identifier of the file.               11480001
*                                                                       11490001
RAUD_OFSP_ALET@      DS  A       Address of ALET for the FSP for the    11500001
*                                 old (or only) file.                   11510001
*                                                                       11520001
RAUD_OFSP@           DS  A       Address of the FSP for the old         11530001
*                                 (or only) file.                       11540001
*                                                                       11550001
RAUD_FLAG_ALET@      DS  A       Address of ALET for the flag byte.     11560001
*                                                                       11570001
RAUD_FLAG@           DS  A       Address of a flag byte that indicates: 11580001
*                                 x'00' - last link was not removed.    11590001
*                                 x'01' - last link was removed for     11600001
*                                         a file. The file is deleted.  11610001
*                                This parameter is used only on rename  11620001
*                                and unlink. On a rename, the new name  11630001
*                                is deleted. On unlink, the 'only'      11640001
*                                name was deleted.                      11650001
*                                                                       11660001
RAUD_NFID_ALET@      DS  A       Address of ALET for the File Id of     11670001
*                                 the NEW file. This parameter is       11680001
*                                 used only on a rename.                11690001
*                                                                       11700001
RAUD_NFID@           DS  A       Address of the File Id for the NEW     11710001
*                                 file. This parameter is used only     11720001
*                                 on a rename. The File Id is a         11730001
*                                 16 byte area that contains a unique   11740001
*                                 identifier of the file.               11750001
*                                                                       11760001
RAUD_NFSP_ALET@      DS  A       Address of ALET for the FSP for the    11770001
*                                 NEW file. This parameter is used      11780001
*                                 only on a rename.                     11790001
*                                                                       11800001
RAUD_NFSP@           DS  A       Address of the FSP for the NEW file.   11810001
*                                 This parameter is used only on a      11820001
*                                 rename.                               11830001
*                                                                       11840001
RAUD_LEN           EQU *-RAUD    Constant - fixed length of RAUD.       11850001
*                                                                       11860001
*********************************************************************** 11870001
*                                                                     * 11880001
*                 GUGP ASSEMBLER DECLARATIONS                         * 11890001
*---------------------------------------------------------------------* 11900001
*                                                                     * 11910001
*   DECLARATION NAME = GUGP                                           * 11920001
*                                                                     * 11930001
*   DESCRIPTIVE NAME =   OMVS  RACF Get Users Groups input            * 11940001
*                      parameter list.                                * 11950001
*                                                                     * 11960001
*   FUNCTION = Provides the BAL mapping of the input parameter list   * 11970001
*              for the   OMVS  RACF Get Users Groups service          * 11980001
*              routine.                                               * 11990001
*                                                                     * 12000001
*********************************************************************** 12010001
*                                                                       12020001
                     ORG   COMP_SERVR_PARMS   Follows common plist @04C 12030001
*                                                                       12040001
GUGP                 DS  0C      Mapping for GUGP                  @04A 12050001
*                                                                       12060001
GUGP_KEY_ALET@       DS  A       Address of ALET for the user's key.    12070001
*                                                                       12080001
GUGP_KEY@            DS  A       Address of a byte that contains the    12090001
*                                 user's key. The key is in the high    12100001
*                                 order 4 bits of the byte.             12110001
*                                                                       12120001
GUGP_NLEN_ALET@      DS  A       Address of ALET for the USERID         12130001
*                                 length.                               12140001
*                                                                       12150001
GUGP_NLEN@           DS  A       Address of 1 byte USERID length.       12160001
*                                                                       12170001
GUGP_NAME_ALET@      DS  A       Address of ALET for the USERID.        12180001
*                                                                       12190001
GUGP_NAME@           DS  A       Address of 8 byte USERID.              12200001
*                                                                       12210001
GUGP_GCNT_ALET@      DS  A       Address of ALET for the Group Count.   12220001
*                                                                       12230001
GUGP_GCNT@           DS  A       Address of the group count. (A one     12240001
*                                 word area that contains the number    12250001
*                                 of GIDs in the Grouplist area.)       12260001
*                                                                       12270001
GUGP_GLST_ALET@      DS  A       Address of ALET for the Group List.    12280001
*                                                                       12290001
GUGP_GLST@           DS  A       Address of the Group List area in      12300001
*                                 which supplemental GIDs are returned. 12310001
*                                                                       12320001
GUGP_GNUM_ALET@      DS  A       Address of ALET for the number of      12330001
*                                 groups.                               12340001
*                                                                       12350001
GUGP_GNUM@           DS  A       Address of the Number Of Groups.       12360001
*                                 A one word area in which the number   12370001
*                                 of supplemental group GIDs is         12380001
*                                 returned.                             12390001
*                                                                       12400001
GUGP_LEN           EQU *-GUGP    Constant - fixed length of the GUGP.   12410001
*                                                                       12420001
*********************************************************************** 12430001
*                                                                     * 12440001
*                 FORK ASSEMBLER DECLARATIONS                         * 12450001
*---------------------------------------------------------------------* 12460001
*                                                                     * 12470001
*   DECLARATION NAME = FORK                                           * 12480001
*                                                                     * 12490001
*   DESCRIPTIVE NAME =   OMVS  RACF FORK Exit input parameter list.   * 12500001
*                                                                     * 12510001
*   FUNCTION = Provides the BAL mapping of the input parameter list   * 12520001
*              for the   OMVS  RACF FORK Exit service routine.        * 12530001
*                                                                     * 12540001
*********************************************************************** 12550001
*                                                                       12560001
                     ORG   COMP_SERVR_PARMS   Follows common plist @04C 12570001
*                                                                       12580001
FORK                 DS  0C      Mapping for FORK                  @04A 12590001
*                                                                       12600001
FORK_FLAG_ALET@      DS  A       Address of the ALET for the fork flag. 12610001
*                                                                       12620001
FORK_FLAG@           DS  A       Address of a word flag that indicates  12630001
*                                 the current type of processing:       12640001
*                                  x'00' - Fork Parent Processing.      12650001
*                                  x'02' - Fork Parent Processing  @LGA 12660001
*                                          Extended Data           @LGA 12670001
*                                  x'01' - Forked Child Processing.     12680001
*                                  x'03' - Forked Child Processing @LGA 12690001
*                                          Extended Data           @LGA 12700001
*                                                                       12710001
FORK_DATAKEY_ALET@   DS  A       Address of ALET for the data's         12720001
*                                 storage key.                          12730001
*                                                                       12740001
FORK_DATAKEY@        DS  A       Address of a word that contains the    12750001
*                                 storage key from which the storage    12760001
*                                 for the data is to be obtained.       12770001
*                                                                       12780001
FORK_DATALEN_ALET@   DS  A       Address of ALET for the data length.   12790001
*                                                                       12800001
FORK_DATALEN@        DS  A       Address of a word that contains the    12810001
*                                 data length.                          12820001
*                                                                       12830001
FORK_DATA_ALET@      DS  A       Address of the data ALET.              12840001
*                                                                       12850001
FORK_DATA@           DS  A       Address of the data being passed       12860001
*                                 from the parent to the child via      12870001
*                                 FORK.                                 12880001
*                                                                       12890001
FORK_DATASP_ALET@    DS  A       Address of ALET for the data subpool.  12900001
*                                                                       12910001
FORK_DATASP@         DS  A       Address of a word that contains the    12920001
*                                 subpool from which to obtain          12930001
*                                 storage to hold the data.             12940001
*                                                                       12950001
FORK_LEN           EQU *-FORK   Constant - fixed length of the FORK.    12960001
FORK_PARENT        EQU 0        Constant - Fork Parent processing flag. 12970001
FORK_PARENTX       EQU 2        Constant - Fork Parent processing  @LGA 12980001
*                                          Extended Data flag.     @LGA 12990001
FORK_CHILD         EQU 1        Constant - Fork Child processing flag.  13000001
FORK_CHILDX        EQU 3        Constant - Fork Child processing   @LGA 13010001
*                                          Extended Data flag.     @LGA 13020001
*                                                                       13030001
*********************************************************************** 13040001
*                                                                     * 13050001
*                 MISP ASSEMBLER DECLARATIONS                         * 13060001
*---------------------------------------------------------------------* 13070001
*                                                                     * 13080001
*   DECLARATION NAME = MISP                                           * 13090001
*                                                                     * 13100001
*   DESCRIPTIVE NAME =   OMVS  RACF Make ISP input parameter list.    * 13110001
*                                                                     * 13120001
*   FUNCTION = Provides the BAL mapping of the input parameter list   * 13130001
*              for the   OMVS  Make ISP service routine.              * 13140001
*                                                                     * 13150001
*********************************************************************** 13160001
*                                                                       13170001
                     ORG   COMP_SERVR_PARMS   Follows common plist @04C 13180001
*                                                                       13190001
MISP                 DS  0C      Mapping for MISP                  @04A 13200001
*                                                                       13210001
MISP_MODE_ALET@      DS  A       Address of ALET for the mode.    @L1A  13220001
*                                                                       13230001
MISP_MODE@           DS  A       Address of the mode parameter.   @L1A  13240001
*                                                                       13250001
MISP_OISP_ALET@      DS  A       Address of ALET for the ISP.     @L1A  13260001
*                                                                       13270001
MISP_OISP@           DS  A       Address of the output ISP area.  @L1A  13280001
*                                                                       13290001
MISP_OIPC_ALET@      DS  A       Address of ALET for the output IPCP.   13300001
*                                                                       13310001
MISP_OIPC@           DS  A       Address of the IPCP.             @L1A  13320001
*                                                                       13330001
MISP_CREI_ALET@      DS  A       Address of ALET for CREDIPC structure. 13340001
*                                                                       13350001
MISP_CREI@           DS  A       Address of the CREDIPC structure @L1A  13360001
*                                                                       13370001
MISP_LEN           EQU *-MISP    Constant - fixed length of MISP. @L1A  13380001
*                                                                       13390001
*********************************************************************** 13400001
*                                                                     * 13410001
*                 IACC ASSEMBLER DECLARATIONS                         * 13420001
*---------------------------------------------------------------------* 13430001
*                                                                     * 13440001
*   DECLARATION NAME = IACC                                           * 13450001
*                                                                     * 13460001
*   DESCRIPTIVE NAME =   OMVS  RACF Check access to ISP input         * 13470001
*                      parameter.                                     * 13480001
*                                                                     * 13490001
*   FUNCTION = Provides the BAL mapping of the input parameter        * 13500001
*              list for the   OMVS  Check ISP access service routine. * 13510001
*                                                                     * 13520001
*********************************************************************** 13530001
*                                                                       13540001
                     ORG   COMP_SERVR_PARMS   Follows common plist @04C 13550001
*                                                                       13560001
IACC                 DS  0C   Mapping for IACC                     @04A 13570001
*                                                                       13580001
IACC_ACODE_ALET@     DS  A    Address of ALET for the access code. @L1A 13590001
*                                                                       13600001
IACC_ACODE@          DS  A    Address of a 1 byte access code that @L1A 13610001
*                              contains:                                13620001
*                               x'00' - No access.                      13630001
*                               x'02' - write access.                   13640001
*                               x'04' - read access.                    13650001
*                               x'06' - read and write access           13660001
*                                                                       13670001
IACC_ISP_ALET@       DS  A    Address of ALET for the ISP struc.   @L1A 13680001
*                                                                       13690001
IACC_ISP@            DS  A    Address of the ISP structure.        @L1A 13700001
*                                                                       13710001
IACC_CREI_ALET@      DS  A    Address of ALET for CREDIPC struc.   @L1A 13720001
*                                                                       13730001
IACC_CREI@           DS  A    Address of the CREDIPC structure.    @L1A 13740001
*                                                                       13750001
*                                                                       13760001
IACC_LEN           EQU *-IACC Constant - fixed length of IACC.     @L1A 13770001
*                                                                       13780001
*********************************************************************** 13790001
*                                                                     * 13800001
*                 IOWN ASSEMBLER DECLARATIONS                         * 13810001
*---------------------------------------------------------------------* 13820001
*                                                                     * 13830001
*   DECLARATION NAME = IOWN                                           * 13840001
*                                                                     * 13850001
*   DESCRIPTIVE NAME =   OMVS  RACF Perform R_IPC_control Change      * 13860001
*                        Owner and Group input parameter list     @03C* 13870001
*                                                                     * 13880001
*   FUNCTION = Provides the BAL mapping of the input parameter        * 13890001
*              list for the   OMVS  R_IPC_control service routine @03C* 13900001
*                                                                     * 13910001
*********************************************************************** 13920001
*                                                                       13930001
                     ORG   COMP_SERVR_PARMS   Follows common plist @04C 13940001
*                                                                       13950001
IOWN                 DS  0C      Mapping for IOWN                  @04A 13960001
*                                                                       13970001
*                                                                       13980001
IOWN_CMD_ALET@       DS  A       Address of ALET for cmd code.     @L1A 13990001
*                                                                       14000001
IOWN_CMD@            DS  A       Address of cmd code.              @L1A 14010001
*                                                                       14020001
IOWN_UID_ALET@       DS  A       Address of ALET for Uid.          @L1A 14030001
*                                                                       14040001
IOWN_UID@            DS  A       Address of the Uid to be set as the    14050001
*                                 ISP owner UID.                   @L1A 14060001
*                                                                       14070001
IOWN_GID_ALET@       DS  A       Address of ALET for Gid.          @L1A 14080001
*                                                                       14090001
IOWN_GID@            DS  A       Address of the Gid to be set as the    14100001
*                                 ISP owner GID.                   @L1A 14110001
*                                                                       14120001
IOWN_MODE_ALET@      DS  A       Address of ALET for the mode parameter 14130001
*                                                                       14140001
IOWN_MODE@           DS  A       Address of the mode parameter.    @L1A 14150001
*                                                                       14160001
IOWN_ISP_ALET@       DS  A       Address of ALET for the ISP structure. 14170001
*                                                                       14180001
IOWN_ISP@            DS  A       Address of the ISP structure.     @L1A 14190001
*                                                                       14200001
IOWN_CREI_ALET@      DS  A       Address of ALET for CREDIPC structure. 14210001
*                                                                       14220001
IOWN_CREI@           DS  A       Address of the CREDIPC structure. @L1A 14230001
*                                                                       14240001
IOWN_LEN           EQU *-IOWN    Constant - fixed length of IOWN.  @L1A 14250001
*                                                                       14260001
*********************************************************************** 14270001
*                                                                     * 14280001
*                 CKO2 ASSEMBLER DECLARATIONS                         * 14290001
*---------------------------------------------------------------------* 14300001
*                                                                     * 14310001
*   DECLARATION NAME = CKO2                                           * 14320001
*                                                                     * 14330001
*   DESCRIPTIVE NAME =   OMVS check owner two files parameter list.   * 14340001
*                                                                     * 14350001
*   FUNCTION = Provides the BAL mapping of the input parameter        * 14360001
*              list for the OMVS check owner two files routine.       * 14370001
*                                                                     * 14380001
*********************************************************************** 14390001
*                                                                       14400001
                     ORG   COMP_SERVR_PARMS   Follows common plist @04C 14410001
*                                                                       14420001
CKO2                 DS  0C      Mapping for CK02                  @04A 14430001
*                                                                       14440001
CKO2_FSP1_ALET@      DS  A       Address of ALET for the first FSP.     14450001
*                                                                  @L2A 14460001
*                                                                       14470001
CKO2_FSP1@           DS  A       Address of the first FSP.         @L2A 14480001
*                                                                       14490001
CKO2_FSP2_ALET@      DS  A       Address of ALET for the second         14500001
*                                 FSP.                             @L2A 14510001
*                                                                       14520001
CKO2_FSP2@           DS  A       Address of the second FSP.        @L2A 14530001
*                                                                       14540001
CKO2_FID1_ALET@      DS  A       Address of ALET for the first          14550001
*                                 File ID.                         @L2A 14560001
*                                                                       14570001
CKO2_FID1@           DS  A       Address of the first File ID.          14580001
*                                                                  @L2A 14590001
*                                                                       14600001
CKO2_FID2_ALET@      DS  A       Address of ALET for the                14610001
*                                 Second File ID.                  @L2A 14620001
*                                                                       14630001
CKO2_FID2@           DS  A       Address of the second File ID.    @L2A 14640001
*                                                                       14650001
CKO2_CRED_ALET@      DS  A       Address of ALET for CRED               14660001
*                                 Structure.                       @L2A 14670001
*                                                                       14680001
CKO2_CRED@           DS  A       Address of the CRED structure.    @L2A 14690001
*                                                                       14700001
CKO2_LEN           EQU *-CKO2    Constant - fixed length of CKO2.  @L2A 14710001
*                                                                       14720001
*********************************************************************** 14730001
*                                                                     * 14740001
*                 GETE ASSEMBLER DECLARATIONS                         * 14750001
*---------------------------------------------------------------------* 14760001
*                                                                     * 14770001
*   DECLARATION NAME = GETE                                           * 14780001
*                                                                     * 14790001
*   DESCRIPTIVE NAME =   OMVS  RACF Get real, effective, saved        * 14800001
*                      UIDs/GIDs and supplemental groups from the     * 14810001
*                      USP parameter list.                            * 14820001
*                                                                     * 14830001
*   FUNCTION = Provides the BAL mapping of the input parameter        * 14840001
*              list for the OMVS Get real,eff,saved UIDs/GIDs and     * 14850001
*              supplemental groups routine.                           * 14860001
*********************************************************************** 14870001
*                                                                       14880001
                     ORG   COMP_SERVR_PARMS  Follows common plist  @04C 14890001
*                                                                       14900001
GETE                 DS  0C     Mapping for GETE                   @04A 14910001
*                                                                       14920001
*                                                                       14930001
GETE_WORKB_ALET@     DS  A      Address of ALET for 1024 byte      @D1A 14940001
*                                work area.                             14950001
*                                                                       14960001
GETE_WORKB@          DS  A      Address of 1024 byte work area.    @D1A 14970001
*                                                                       14980001
GETE_KEY_ALET@       DS  A      Address of ALET for the user's key @L3A 14990001
*                                                                       15000001
GETE_KEY@            DS  A      Address of a byte that contains    @L3A 15010001
*                                the user's key. The key is in the      15020001
*                                high order 4 bits of the byte.         15030001
*                                                                       15040001
GETE_GCNT_ALET@      DS  A      Address of ALET for the Group Cnt  @L3A 15050001
*                                                                       15060001
GETE_GCNT@           DS  A      Address of the group count. (A one @L3A 15070001
*                                word area that contains the number     15080001
*                                of GIDs in the Grouplist area.)        15090001
*                                                                       15100001
GETE_GLST_ALET@      DS  A      Address of ALET for the Group List @L3A 15110001
*                                                                       15120001
GETE_GLST@           DS  A      Address of the Group List area in  @L3A 15130001
*                                which supplemental GIDs are returned.  15140001
*                                                                       15150001
GETE_GNUM_ALET@      DS  A      Address of ALET for the number of  @L3A 15160001
*                                groups.                                15170001
*                                                                       15180001
GETE_GNUM@           DS  A      Address of the Number Of Groups.   @L3A 15190001
*                                A one word area in which the number    15200001
*                                of supplemental group GIDs is          15210001
*                                returned.                              15220001
*                                                                       15230001
GETE_UID_ALET@       DS  A      Address of ALET for UIDs.          @L3A 15240001
*                                                                       15250001
GETE_UID@            DS  A      Address of a 3 word output area.   @P3C 15260001
*                                This area contains the real,           15270001
*                                effective and saved UIDs.              15280001
*                                                                       15290001
GETE_GID_ALET@       DS  A      Address of ALET for GIDs.          @L3A 15300001
*                                                                       15310001
GETE_GID@            DS  A      Address of a 3 word output area.   @P3C 15320001
*                                This area contains the real,           15330001
*                                effective and saved GIDs.              15340001
*                                                                       15350001
GETE_LEN           EQU *-GETE   Constant - fixed length of GETE.   @L3A 15360001
*                                                                       15370001
*********************************************************************** 15380001
*                                                                     * 15390001
*                 DKEY ASSEMBLER DECLARATIONS                         * 15400001
*---------------------------------------------------------------------* 15410001
*                                                                     * 15420001
*   DECLARATION NAME = DKEY                                           * 15430001
*                                                                     * 15440001
*   DESCRIPTIVE NAME =   OMVS DCE  Retrieve or replace DCE Key        * 15450001
*                                                                     * 15460001
*   FUNCTION = Provides the ASSEMBLER mapping of the input parameter  * 15470001
*              list for the service to retrieve or replace the        * 15480001
*              DPASSWDS within a RACF user profile.                   * 15490001
*********************************************************************** 15500001
*                                                                       15510001
                     ORG   COMP_SERVR_PARMS   Follows common plist @04C 15520001
*                                                                       15530001
DKEY                 DS  0C     Mapping for DKEY callable service  @04A 15540001
*                                                                       15550001
*                                                                       15560001
DKEY_FUNC_ALET@      DS  A      Address of ALET for Function code  @01A 15570001
*                                                                       15580001
DKEY_FUNC@           DS  A      Address of 1 byte function code    @01A 15590001
*                                                                       15600001
DKEY_USERID_ALET@    DS  A      Address of ALET for the RACF userid@01A 15610001
*                                                                       15620001
DKEY_USERID@         DS  A      Address of 9 byte area that contains    15630001
*                                a 1 byte length followed by a          15640001
*                                userid of up to 8 characters      @01A 15650001
*                                                                       15660001
DKEY_KEY_ALET@       DS  A      Address of ALET for the DCE key    @01A 15670001
*                                                                       15680001
DKEY_KEY@            DS  A      Address of the output key area, if      15690001
*                                retrieving the DCE key, or new key if  15700001
*                                setting the user's DCE key        @01A 15710001
*                                                                       15720001
DKEY_KEYL_ALET@      DS  A      Address of ALET for the DCE key length  15730001
*                                                                  @01A 15740001
*                                                                       15750001
DKEY_KEYL@           DS  A      Address of fullword containing the      15760001
*                                DCE key area length               @01A 15770001
*                                                                       15780001
DKEY_LEN           EQU *-DKEY   Constant - fixed length of DKEY    @01A 15790001
*                                                                       15800001
*                                                                       15810001
DKEY_GET           EQU X'01'    Constant - Retrieve DCE key        @01A 15820001
DKEY_PUT           EQU X'02'    Constant - Replace DCE key         @01A 15830001
*********************************************************************** 15840001
*                                                                     * 15850001
*                 DINF ASSEMBLER DECLARATIONS                         * 15860001
*---------------------------------------------------------------------* 15870001
*                                                                     * 15880001
*   DECLARATION NAME = DINF                                           * 15890001
*                                                                     * 15900001
*   DESCRIPTIVE NAME =   OMVS DCE  Retrieve or replace DCE Info       * 15910001
*                                                                     * 15920001
*   FUNCTION = Provides the ASSEMBLER mapping of the input parameter  * 15930001
*              list for the service to retrieve or replace the        * 15940001
*              DCE UUID, DCENAME, or HOMECELL within a RACF user      * 15950001
*              profile.                                               * 15960001
*********************************************************************** 15970001
*                                                                       15980001
                     ORG   COMP_SERVR_PARMS   Follows common plist @04C 15990001
*                                                                       16000001
DINF                 DS  0C     Mapping for DINF                   @04A 16010001
*                                                                       16020001
*                                                                       16030001
DINF_FUNC_ALET@      DS  A      Address of ALET for Function code  @01A 16040001
*                                                                       16050001
DINF_FUNC@           DS  A      Address of 1 byte function code    @01A 16060001
*                                                                       16070001
DINF_USERID_ALET@    DS  A      Address of ALET for the RACF userid@01A 16080001
*                                                                       16090001
DINF_USERID@         DS  A      Address of 9 byte area that contains    16100001
*                                a 1 byte length followed by a          16110001
*                                userid of up to 8 characters      @01A 16120001
*                                                                       16130001
DINF_FIELDL_ALET@    DS  A      Address of ALET for the Field List @01A 16140001
*                                                                       16150001
DINF_FIELDL@         DS  A      Address of an area containing input     16160001
*                                Field_list                        @01A 16170001
*                                                                       16180001
DINF_OUTPUTA_ALET@   DS  A      Address of ALET for the Output area@01A 16190001
*                                                                       16200001
DINF_OUTPUTA@        DS  A      Address of area which contains the      16210001
*                                contents of the data obtained     @01A 16220001
*                                                                       16230001
DINF_OUTPUTL_ALET@   DS  A      Address of ALET for the Output area     16240001
*                                length                            @01A 16250001
*                                                                       16260001
DINF_OUTOUTL@        DS  A      Address of fullword containing the      16270001
*                                Output area length                @01A 16280001
*                                                                       16290001
DINF_LEN           EQU *-DINF   Constant - fixed length of DINF    @01A 16300001
*                                                                       16310001
DINF_GET           EQU X'01'    Constant - Retrieve DCE info       @01A 16320001
DINF_PUT           EQU X'02'    Constant - Replace DCE info        @01A 16330001
*********************************************************************** 16340001
*                                                                     * 16350001
*                DRUR ASSEMBLER DECLARATIONS                          * 16360001
*---------------------------------------------------------------------* 16370001
*                                                                     * 16380001
*  DECLARATION NAME = DRUR                                            * 16390001
*                                                                     * 16400001
*  DESCRIPTIVE NAME =   RACF userid - DCE UUID mapping parameters     * 16410001
*                                                                     * 16420001
*  FUNCTION = Provides the ASSEMBLER mapping of the input paramter    * 16430001
*             list for the service to map a RACF userid to a DCE      * 16440001
*             principal UUID/home cell UUID pair.                     * 16450001
*********************************************************************** 16460001
                     ORG   COMP_SERVR_PARMS   Follows common plist @04C 16470001
*                                                                       16480001
DRUR                 DS  0C     Mapping for DRUR                   @04A 16490001
*                                                                       16500001
*                                                                       16510001
DRUR_FUNC_ALET@      DS  A      Address of ALET for Function code  @02A 16520001
*                                                                       16530001
DRUR_FUNC@           DS  A      Address of 1 byte function code    @02A 16540001
*                                                                       16550001
DRUR_PRIN_UUID_ALET@ DS  A      Address of ALET for the DCE principal   16560001
*                               UUID                                    16570001
*                                                                       16580001
DRUR_PRIN_UUID@      DS  A      Address of a 36 byte input/output area  16590001
*                               for the DCE principal UUID         @02A 16600001
*                                                                       16610001
*           The following two fields address the home cell UUID         16620001
*           which is optional.  Indicate no home cell UUID passed       16630001
*           by having the pointer and alet address a null byte.    @02A 16640001
DRUR_HOME_UUID_ALET@ DS  A      Address of ALET for the DCE home cell   16650001
*                               UUID                               @02A 16660001
*                                                                       16670001
DRUR_HOME_UUID@      DS  A      Address of a 36 byte input/output area  16680001
*                               for the DCE home cell UUID         @02A 16690001
*                                                                       16700001
DRUR_USERID_ALET@    DS  A      Address of ALET for the RACF userid     16710001
*                                                                  @02A 16720001
DRUR_USERID@         DS  A      Address of a 9 byte input/output area   16730001
*                               for the RACF userid (1 byte for the     16740001
*                               length followed by up to 8 bytes for    16750001
*                               the RACF userid itself)            @02A 16760001
*                                                                       16770001
DRUR_LEN             EQU *-DRUR Constant - fixed length of DRUR    @02A 16780001
*                                                                       16790001
DRUR_GET_RACF_USERID EQU X'01'  Constant - UUID->RACF userid       @02A 16800001
DRUR_GET_DCE_UUID    EQU X'02'  Constant - RACF userid->UUID       @02A 16810001
*                                                                       16820001
*                                                                       16830001
*********************************************************************** 16840001
*                                                                     * 16850001
*                DAUT ASSEMBLER DECLARATIONS                          * 16860001
*---------------------------------------------------------------------* 16870001
*                                                                     * 16880001
*  DECLARATION NAME = DAUT                                            * 16890001
*                                                                     * 16900001
*  DESCRIPTIVE NAME =   RACF Authorization of a DCE Client            * 16910001
*                                                                     * 16920001
*  FUNCTION = Provides the ASSEMBLER mapping of the input paramter    * 16930001
*             list for the service which allows MVS servers to verify * 16940001
*             the authority of a DCE Client (who is also a RACF user) * 16950001
*             to resources on the MVS system that are protected by    * 16960001
*             RACF.                                                   * 16970001
*                                                                     * 16980001
*********************************************************************** 16990001
                     ORG   COMP_SERVR_PARMS   Follows common plist @04C 17000001
*                                                                       17010001
DAUT                 DS  0C     Mapping for DAUT                   @04A 17020001
*                                                                       17030001
*                                                                       17040001
DAUT_ACEEP@          DS  A      Address of a full word containing the   17050001
*                               address of a                            17060001
*                               previously created ACEE (or 0)     @03A 17070001
*                                                                       17080001
DAUT_ALET@           DS  A      Address of ALET for following           17090001
*                               variables.                         @03A 17100001
*                                                                       17110001
DAUT_PRIN_UUID@      DS  A      Address of a 36 byte area for the       17120001
*                               DCE principal UUID                 @03A 17130001
*                                                                       17140001
DAUT_HOME_UUID@      DS  A      Address of a 36 byte area for the       17150001
*                               DCE home cell UUID                 @03A 17160001
*                                                                       17170001
DAUT_USERID@         DS  A      Address of a 9 byte area                17180001
*                               for the RACF userid (1 byte for the     17190001
*                               length followed by up to 8 bytes for    17200001
*                               the RACF userid itself)            @03A 17210001
*                                                                       17220001
DAUT_CLASS_NAME@     DS  A      Address of an 8 byte area for           17230001
*                               the RACF class name of a resource.      17240001
*                               The class name must be left justified   17250001
*                               and padded to the right with blanks.    17260001
*                                                                  @03A 17270001
*                                                                       17280001
DAUT_ENT_NAME@       DS  A      Address of an area for the RACF         17290001
*                               resource profile name.             @03A 17300001
*                                                                       17310001
DAUT_ENT_LEN@        DS  A      Address of a 2 byte area which          17320001
*                               contains the length of the resource     17330001
*                               profile name.                      @03A 17340001
*                                                                       17350001
DAUT_ACC_REQ@        DS  A      Address of a 1 byte area containing     17360001
*                               the requested access to the             17370001
*                               resource.                          @03A 17380001
*                                                                       17390001
DAUT_LEN             EQU *-DAUT Constant - fixed length of DAUT    @03A 17400001
*                                                                       17410001
DAUT_READ            EQU X'02'  Constant - READ access requested   @03A 17420001
DAUT_UPDATE          EQU X'04'  Constant - UPDATE access request.  @03A 17430001
DAUT_CONTROL         EQU X'08'  Constant - CONTROL access request. @03A 17440001
DAUT_ALTER           EQU X'80'  Constant - ALTER access requested  @03A 17450001
*                                                                       17460001
*                                                                       17470001
*********************************************************************** 17480001
*                                                                     * 17490001
*                INTA ASSEMBLER DECLARATIONS                          * 17500001
*---------------------------------------------------------------------* 17510001
*                                                                     * 17520001
*  DECLARATION NAME = INTA                                            * 17530001
*                                                                     * 17540001
*  DESCRIPTIVE NAME =   RACF Initialize ACEE                          * 17550001
*                                                                     * 17560001
*  FUNCTION = Provides the ASSEMBLER mapping of the input paramter    * 17570001
*      list for the service which will create/delete/manage ACEEs.    * 17580001
*                                                                     * 17590001
*********************************************************************** 17600001
                     ORG   COMP_SERVR_PARMS   Follows common plist @L4A 17610001
*                                                                       17620001
INTA                 DS  0C     Mapping for INTA                   @L4A 17630001
*                                                                       17640001
*                                                                       17650001
INTA_FUNC@           DS  A      Address of 1 byte function code    @L4A 17660001
*                                                                       17670001
INTA_ATTRIBUTES@     DS  A      Address of a full word area             17680001
*                               which contains the attribute flags      17690001
*                               for the service                    @L4A 17700001
*                                                                       17710001
INTA_USERID@         DS  A      Address of 9 byte area for the          17720001
*                               RACF userid (1 byte for the             17730001
*                               length followed by up to 8 bytes        17740001
*                               for the RACF userid itself)        @L4A 17750001
*                                                                       17760001
INTA_ACEEP@          DS  A      Address of a full word input/           17770001
*                               output area for the ACEE address.  @L4A 17780001
*                                                                       17790001
INTA_APPL_ID@        DS  A      Address of an 9 byte area which         17800001
*                               specifies the name of the               17810001
*                               application being accessed by the       17820001
*                               user. (1 byte for the length            17830001
*                               followed by up to 8 bytes for the       17840001
*                               application name itself)           @L4A 17850001
*                                                                       17860001
INTA_PASSWORD@       DS  A      Address of an 9 byte area               17870001
*                               containing the user's password or       17880001
*                               pass ticket. (1 byte for the            17890001
*                               length followed by up to 8 bytes        17900001
*                               for the password itself)           @L4A 17910001
*                                                                       17920001
INTA_LOGSTRING@      DS  A      Address of a variable length area       17930001
*                               containing the log string to be         17940001
*                               passed to RACROUTE (1 byte for the      17950001
*                               length followed by up to 255 bytes      17960001
*                               for the log string itself)         @L4A 17970001
INTA_LAST_PARM_VER1  EQU X'80000000' - Variable length parameter list.  17980001
*                                      This was the last parameter for  17990001
*                                      plist version 1            @06A  18000001
*                                                                       18010001
INTA_CERTIFICATE@    DS  A      Address of a variable length area       18020001
*                               containing the X.509 certificate        18030001
*                               identifying the user (fullword          18040001
*                               length followed by the certificate      18050001
*                               itself. Length of zero indicates        18060001
*                               certificate not present)           @06A 18070001
INTA_LAST_PARM_VER2  EQU X'80000000' - Variable length parameter list.  18080001
*                                      This was the last parameter for  18090001
*                                      plist version 2            @L5A  18100001
*                                                                       18110001
INTA_ENVR_IN@        DS  A      Address of an area containing the data  18120001
*                               structure to recreate the security      18130001
*                               environment                        @L5A 18140001
INTA_LAST_PARM_ENVR_IN EQU X'80000000' - Variable length parameter list 18150001
*                                      This could be one of the last    18160001
*                                      parameters for plist ver 3 @L5A  18170001
*                                                                       18180001
INTA_ENVR_OUT@       DS  A      Address of an area containing the data  18190001
*                               structure to retrieve the security      18200001
*                               environment                        @L5A 18210001
*                                                                       18220001
INTA_LAST_PARM_ENVR_OUT EQU X'80000000' -Variable length parameter list 18230001
*                                      This could be one of the last    18240001
*                                      parameters for plist ver 3 @L6A  18250001
*                                                                       18260001
INTA_OUTA_STOR@      DS  A      Address of full word containing the     18270001
*                               address of an OUSP.                @L6A 18280001
INTA_LAST_PARM_OUTA_STOR EQU X'80000000' - Variable length              18290001
*                                      parameter list.  This            18300001
*                                      could be one of the last         18310001
*                                      parameters for plist ver 3  @L6A 18320001
*                                                                       18330001
INTA_X500_NAME_PTR   DS  A      Address of the x500 name pair           18340001
*                               structure.  The structure is a 4-Byte   18350001
*                               structure length, followed by 2 2-byte  18360001
*                               lengths, followed by up to 255 bytes    18370001
*                               of issuers name and up to 255 bytes     18380001
*                               of subjects name.                  @LDA 18390001
*                                                                       18400001
INTA_LAST_X500_NAME  EQU X'80000000' - Variable length                  18410001
*                                      parameter list.  This            18420001
*                                      could be one of the last         18430001
*                                      parameters for plist ver 4  @LDA 18440001
*                                                                       18450001
INTA_VARIABLE_LIST@  DS  A      Address of an area containing a         18460001
*                               criteria value data structure. The      18470001
*                               structure is a 4-byte number of         18480001
*                               entries, followed by 1 or more entries  18490001
*                               Each entry is an 8-byte name, followed  18500001
*                               by a 4-byte value length, followed      18510001
*                               by the value.                      @LDA 18520001
*                                                                       18530001
INTA_LAST_PARM_VAR_LIST  EQU X'80000000' - Variable length              18540001
*                                      parameter list.  This            18550001
*                                      could be one of the last         18560001
*                                      parameters for plist ver 4  @LDA 18570001
*                                                                       18580001
INTA_LAST_PARM       EQU X'80000000' - Variable length parameter list.  18590001
*                                      This is the last parameter @L4A  18600001
*                                                                       18610001
INTA_LEN             EQU *-INTA Constant - fixed length of INTA    @L4A 18620001
*                                                                       18630001
*   Function Code Constants                                             18640001
*                                                                       18650001
INTA_CREATE          EQU X'01'  Constant - Create an ACEE          @L4A 18660001
INTA_DELETE          EQU X'02'  Constant - Delete an ACEE and USP if    18670001
*                                          applicable              @L4A 18680001
INTA_PURGE           EQU X'03'  Constant - Purge space related ACEE     18690001
*                                          management resources    @L4A 18700001
INTA_REGSTR          EQU X'04'  Constant - Register a certificate for   18710001
*                                          the current ACEE        @09A 18720001
INTA_DEREGS          EQU X'05'  Constant - Deregister a certificate for 18730001
*                                          the current ACEE        @09A 18740001
INTA_QUERY           EQU X'06'  Constant - Query a certificate for an   18750001
*                                          associated user ID      @09A 18760001
*                                                                       18770001
*   Attributes Word Bit Mapping                                         18780001
*                                                                       18790001
INTA_MANAGED         EQU X'80000000' - ACEE should be managed           18800001
*                                      (CREATE only)               @L4A 18810001
INTA_USP             EQU X'40000000' - Initialize a USP for the ACEE    18820001
*                                      (CREATE only)               @L4A 18830001
INTA_TASK_LVL        EQU X'20000000' - For CREATE, ON indicates chain   18840001
*                                      ACEE to the TCB. OFF indicates   18850001
*                                      return ACEE address via the      18860001
*                                      Acee_Ptr field.  For DELETE,     18870001
*                                      ON indicates get ACEE address    18880001
*                                      from the TCB. OFF indicates      18890001
*                                      ACEE address passed through      18900001
*                                      Acee_Ptr                    @L4A 18910001
INTA_AUTH_CLNT       EQU X'10000000' - Authenticated Client        @L4A 18920001
INTA_UNAUTH_CLNT     EQU X'08000000' - Unauthenticated Client      @L4A 18930001
INTA_MSG_SUPP        EQU X'04000000' - ON to suppress RACF messages     18940001
*                                      produced as a result of cre-     18950001
*                                      ating an ACEE               @L4A 18960001
INTA_ENVR_RET        EQU X'02000000' - ON to return an ENVR object      18970001
*                                      for the ACEE (CREATE only)  @L5A 18980001
INTA_NO_TIMEOUT      EQU X'01000000' - ON to create a no timeout        18990001
*                                      managed ACEE (CREATE only)  @L6A 19000001
INTA_OUSP_RET        EQU X'00800000' - ON to return an OUSP             19010001
*                                      (CREATE only)               @L6A 19020001
INTA_X500_RET        EQU X'00400000' - ON to return a X500 name         19030001
*                                      pair (QUERY only)           @LDA 19040001
*                                                                       19050001
*********************************************************************** 19060001
*                                                                     * 19070001
*                ADMN ASSEMBLER DECLARATIONS                          * 19080001
*---------------------------------------------------------------------* 19090001
*                                                                     * 19100001
*  DECLARATION NAME = ADMN                                            * 19110001
*                                                                     * 19120001
*  DESCRIPTIVE NAME =   RACF Administration interface                 * 19130001
*                                                                     * 19140001
*  FUNCTION = Provides the ASSEMBLER mapping of the input parameter   * 19150001
*      list for the service which will create/delete/alter users      * 19160001
*      and execute RACF commands.                                     * 19170001
*                                                                  @04A 19180001
*********************************************************************** 19190001
                     ORG   COMP_SERVR_PARMS   Follows common plist @04A 19200001
*                                                                       19210001
ADMN                 DS  0C     Mapping for ADMN                   @04A 19220001
*                                                                       19230001
*                                                                       19240001
ADMN_FUNC@           DS  A      Address of 1 byte function code    @04A 19250001
*                                                                       19260001
ADMN_PARMLIST@       DS  A      Address of the function-specific        19270001
*                               parameter list strcuture           @04A 19280001
*                                                                       19290001
ADMN_USERID@         DS  A      Address of 9 byte area for the          19300001
*                               RACF userid under whose authority       19310001
*                               this service will execute (1 byte       19320001
*                               for the length followed by up to 8      19330001
*                               bytes for the userid itself)       @04A 19340001
*                                                                       19350001
ADMN_ACEEP@          DS  A      Address of a full word containing       19360001
*                               the ACEE address under the authority    19370001
*                               of which this service will execute @04A 19380001
*                                                                       19390001
ADMN_OUTPUT_SP@      DS  A      Address of a caller-supplied one byte   19400001
*                               area containing the subpool in which    19410001
*                               output messages should be obtained @04A 19420001
*                                                                       19430001
ADMN_OUTPUT_MSG@     DS  A      Address of a fullword containing        19440001
*                               a pointer to the RACF command           19450001
*                               ouput, which is mapped below.           19460001
*                               The caller is responsible for           19470001
*                               freeing this storage.              @04A 19480001
*                                                                       19490001
*                                                                       19500001
ADMN_LAST_PARM       EQU X'80000000' - Variable length parameter list.  19510001
*                                      This is the last parameter  @04A 19520001
*                                                                       19530001
*                                                                       19540001
ADMN_LEN             EQU *-ADMN Constant - fixed length of ADMN    @04A 19550001
*                                                                       19560001
*   Function Code Constants                                             19570001
*                                                                       19580001
ADMN_ADD_USER        EQU X'01'  Constant - Add a user              @04A 19590001
ADMN_DEL_USER        EQU X'02'  Constant - Delete a user           @04A 19600001
ADMN_ALT_USER        EQU X'03'  Constant - Alter a user            @04A 19610001
ADMN_LST_USER        EQU X'04'  Constant - List a user             @04A 19620001
ADMN_RUN_COMD        EQU X'05'  Constant - Run a RACF command      @04A 19630001
ADMN_ADD_GROUP       EQU X'06'  Constant - Add a group             @07A 19640001
ADMN_DEL_GROUP       EQU X'07'  Constant - Delete a group          @07A 19650001
ADMN_ALT_GROUP       EQU X'08'  Constant - Alter a group           @07A 19660001
ADMN_LST_GROUP       EQU X'09'  Constant - List a group            @07A 19670001
ADMN_CONNECT         EQU X'0A'  Constant - Connect user to group   @07A 19680001
ADMN_REMOVE          EQU X'0B'  Constant - Remove user from group  @07A 19690001
ADMN_ADD_GENRES      EQU X'0C'  Constant - Add a resource          @08A 19700001
ADMN_DEL_GENRES      EQU X'0D'  Constant - Delete a resource       @08A 19710001
ADMN_ALT_GENRES      EQU X'0E'  Constant - Alter a resource        @08A 19720001
ADMN_LST_GENRES      EQU X'0F'  Constant - List a resource         @08A 19730001
ADMN_ADD_DS          EQU X'10'  Constant - Add a dataset           @08A 19740001
ADMN_DEL_DS          EQU X'11'  Constant - Delete a dataset        @08A 19750001
ADMN_ALT_DS          EQU X'12'  Constant - Alter a dataset         @08A 19760001
ADMN_LST_DS          EQU X'13'  Constant - List a dataset          @08A 19770001
ADMN_PERMIT          EQU X'14'  Constant - Permit a user or group  @08A 19780001
ADMN_ALT_SETR        EQU X'15'  Constant - Alter SETROPTS info     @LBA 19790001
ADMN_XTR_SETR        EQU X'16'  Constant - SETROPTS R_admin ext    @LBA 19800001
ADMN_UNL_SETR        EQU X'17'  Constant - SETROPTS SMF Unload ext @LBA 19810001
*                                                                       19820001
*******************************************************************@L7A 19830001
*                                                                  @L7A 19840001
*                UMAP ASSEMBLER DECLARATIONS                       @L7A 19850001
*------------------------------------------------------------------@L7A 19860001
*                                                                  @L7A 19870001
*  DECLARATION NAME = UMAP                                         @L7A 19880001
*                                                                  @L7A 19890001
*  DESCRIPTIVE NAME =   RACF userid - R_UserMap                    @L7A 19900001
*                                                                  @L7A 19910001
*  FUNCTION = Provides the ASSEMBLER mapping of the input paramter @L7A 19920001
*             list for the service to map an application userid to @L7A 19930001
*             a RACF userid                                        @L7A 19940001
*                                                                  @L7A 19950001
*******************************************************************@L7A 19960001
                     ORG   COMP_SERVR_PARMS   Follows common plist @L7A 19970001
*                                                                  @L7A 19980001
UMAP                 DS  0C     Mapping for UMAP                   @L7A 19990001
*                                                                  @L7A 20000001
*                                                                  @L7A 20010001
UMAP_PARM_ALET@      DS  A      Address of ALET for remaining      @L7A 20020001
*                               parameters                         @L7A 20030001
UMAP_FUNC@           DS  A      Address of 2-byte function code    @L7A 20040001
UMAP_OPTION_WORD@    DS  A      Reserved for future use            @L7A 20050001
UMAP_USERID@         DS  A      Address of a 9-byte input/output   @L7A 20060001
*                               for the RACF userid.  The first    @L7A 20070001
*                               byte is the length followed by     @L7A 20080001
*                               8 bytes for the RACF userid.       @L7A 20090001
UMAP_CERTIFICATE@    DS  A      Address of an input area           @L7A 20100001
*                               for a digital certificate.  First  @L7A 20110001
*                               four bytes are a length followed   @L7A 20120001
*                               by the digital certificate.        @L7A 20130001
UMAP_APPL_USERID@    DS  A      Address of an input/output area for@L7A 20140001
*                               an Application ID.  The first      @L7A 20150001
*                               two bytes contains the length      @L7A 20160001
*                               followed by 246 bytes for the      @L7A 20170001
*                               Application ID.                    @L7A 20180001
*                               If not specified on input, length  @L7A 20190001
*                               must be zero                       @L7A 20200001
UMAP_LAST_PARM  EQU X'80000000' Variable length parameter list     @L7A 20210001
*                               This is the last parameter         @L7A 20220001
*                                                                  @L7A 20230001
UMAP_LEN             EQU *-UMAP Constant - fixed length of UMAP    @L7A 20240001
*                                                                  @L7A 20250001
*********************************************************************** 20260001
*                                                                     * 20270001
*                CDDL ASSEMBLER DECLARATIONS                          * 20280001
*---------------------------------------------------------------------* 20290001
*                                                                     * 20300001
*  DECLARATION NAME = CDDL                                            * 20310001
*                                                                     * 20320001
*  DESCRIPTIVE NAME =   CDSA DataLib Service parameters               * 20330001
*                                                                     * 20340001
*  FUNCTION = Provides the ASSEMBLER mapping of the input paramter    * 20350001
*             list for the CDSA Datalib callable service              * 20360001
*******************************************************************@L8A 20370001
                     ORG   COMP_SERVR_PARMS   Follows common plist @L8A 20380001
*                                                                       20390001
CDDL                 DS  0C     Mapping for CDDL                   @L8A 20400001
*                                                                       20410001
*                                                                       20420001
CDDL_FUNC@           DS  A      Address of 1 byte input function        20430001
*                               code.  Constants for the function       20440001
*                               codes are supplied below           @L8A 20450001
*                                                                       20460001
CDDL_ATTRIBUTES@     DS  A      Address of full word of input           20470001
*                               attributes                         @L8A 20480001
*                                                                       20490001
CDDL_USERID@         DS  A      Address of a 9 byte input area          20500001
*                               for the RACF userid (1 byte for the     20510001
*                               length followed by 8 bytes for          20520001
*                               the RACF userid itself).  A length      20530001
*                               of 0 indicates the current user is      20540001
*                               the ring owner                     @L8A 20550001
*                                                                       20560001
CDDL_RING@           DS  A      Address of a variable length input area 20570001
*                               for the ring name (1 byte for the       20580001
*                               length followed by up to 237 bytes for  20590001
*                               the ring name).  Parameter ignored      20600001
*                               for functions CheckStatus, AbortQuery,  20610001
*                               and DataGetNext.                   @L8A 20620001
*                                                                       20630001
CDDL_VERSION@        DS  A      Address of a 4 byte area containing the 20640001
*                               input version number for function       20650001
*                               specific parameter list pointed to by   20660001
*                               CDDL_PARMLIST@.  Must be set to 0. @L8A 20670001
*                                                                       20680001
CDDL_PARMLIST@       DS  A      Address of the input function specific  20690001
*                               parameter list                     @L8A 20700001
CDDL_LAST_PARM  EQU X'80000000' Variable length parameter list     @L8A 20710001
*                               This is the last parameter         @L8A 20720001
CDDL_LEN           EQU *-CDDL   Constant - fixed length of CDDL    @L8A 20730001
*                                                                       20740001
*---------------------------------------------------------------------* 20750001
*                                                                       20760001
*   Function Code Constants                                             20770001
*                                                                       20780001
*---------------------------------------------------------------------* 20790001
CDDL_DATA_GET_FIRST  EQU X'01'  DataGetFirst - locate and return        20800001
*                               the first certificate in the ring       20810001
*                               matching the specified criteria    @L8A 20820001
CDDL_DATA_GET_NEXT   EQU X'02'  DataGetNext - locate and return the     20830001
*                               next certificate in the ring matching   20840001
*                               the same criteria specified in the      20850001
*                               previous DataGetFirst/DataGetNext       20860001
*                               call                               @L8A 20870001
CDDL_DATA_ABORT      EQU X'03'  DataAbortQuery - free resources         20880001
*                               from previous DataGetFirst or           20890001
*                               DataGetNext call                   @L8A 20900001
CDDL_CHECK_STATUS    EQU X'04'  CheckStatus - return the TRUST/NOTRUST  20910001
*                               status for a given certificate          20920001
CDDL_GET_UPDATE_CODE EQU X'05'  GetUpdateCode - returns the sequence    20930001
*                               number for a ring                  @LCA 20940001
CDDL_INC_SER_NUM     EQU X'06'  IncSerialNum - Increments the Serial    20950001
*                               Number for a Digital Certificate   @LFA 20960001
*                                                                       20970001
*********************************************************************** 20980001
*                                                                     * 20990001
*                KERBEROS ASSEMBLER DECLARATIONS                      * 21000001
*---------------------------------------------------------------------* 21010001
*                                                                     * 21020001
*  DECLARATION NAME = KERB                                            * 21030001
*                                                                     * 21040001
*  DESCRIPTIVE NAME =   Kerberos retrieve or set parameters           * 21050001
*                                                                     * 21060001
*  FUNCTION = Provides the ASSEMBLER mapping of the input parameter   * 21070001
*             list for the R_kerbinfo callable service                * 21080001
*******************************************************************@LEA 21090001
                     ORG   COMP_SERVR_PARMS   Follows common plist @LEA 21100001
*                                                                       21110001
KERB                 DS  0C     Mapping for KERB                   @LEA 21120001
*                                                                       21130001
*                                                                       21140001
KERB_FUNC@           DS  A      Address of 1 byte input function        21150001
*                               code.  Constants for the function       21160001
*                               codes are supplied below           @LEA 21170001
*                                                                       21180001
KERB_RACF_NAME@      DS  A      Address of a 9 byte area containing a   21190001
*                               RACF name. x'00' in first byte if not   21200001
*                               specified                          @LEA 21210001
*                                                                       21220001
KERB_NAME@           DS  A      Address of a 240 byte area containing   21230001
*                               Kerberos Principal name. x'00' in first 21240001
*                               byte if not specified              @LEA 21250001
*                                                                       21260001
KERB_DATA_AREA@      DS  A      Address of storage to be used for       21270001
*                               fields returned on a retrieve      @LEA 21280001
*                                                                       21290001
KERB_LAST_PARM       EQU X'80000000' - Variable length paramater list   21300001
*                                      This is the last parameter  @LEA 21310001
*                                                                       21320001
KERB_LEN             EQU *-KERB Constant - fixed length of KERB    @LEA 21330001
*---------------------------------------------------------------------* 21340001
*                                                                       21350001
*   Function code constants                                             21360001
*                                                                       21370001
*---------------------------------------------------------------------* 21380001
KERB_GET_USER        EQU X'01'  Constant - Get user  information   @P7C 21390001
KERB_UPDATE_REVOKECT EQU X'02'  Constant - Update user revoke count@P7C 21400001
KERB_RESET_REVOKECT  EQU X'03'  Constant - Reset user revoke count @P7C 21410001
KERB_GET_REALM       EQU X'04'  Constant - Get realm information   @P7C 21420001
*                                                                       21430001
*                                                                       21440001
*********************************************************************** 21450001
*                                                                     * 21460001
*                         ASSEMBLER DECLARATIONS                      * 21470001
*---------------------------------------------------------------------* 21480001
*                                                                     * 21490001
*  DECLARATION NAME = TKTS                                            * 21500001
*                                                                     * 21510001
*  DESCRIPTIVE NAME =  Parse or Extract from Kerberos Ticket          * 21520001
*                                                                     * 21530001
*  FUNCTION = Provides the ASSEMBLER mapping of the input parameter   * 21540001
*             list for the R_ticketserv callable service              * 21550001
*******************************************************************@LHA 21560001
                     ORG   COMP_SERVR_PARMS   Follows common plist @LHA 21570001
*                                                                       21580001
TKTS                 DS  0C     Mapping for TKTS                   @LHA 21590001
*                                                                       21600001
*                                                                       21610001
TKTS_PARM_ALET@      DS  A      Address of ALET for remaining      @LHA 21620001
*                               parameters                         @LHA 21630001
TKTS_FUNC@           DS  A      Address of 2 byte input function        21640001
*                               code.  Constants for the function       21650001
*                               codes are supplied below           @LHA 21660001
*                                                                       21670001
TKTS_OPTION_WORD@    DS  A      Address of a full word containing       21680001
*                               binary zeros. The area pointed to by    21690001
*                               this parameter is reserved for future   21700001
*                               use.                               @LHA 21710001
*                                                                       21720001
TKTS_CRED_AREA@      DS  A      Address of an area consisting of a      21730001
*                               2 byte length field followed by a       21740001
*                               ticket.                            @LHA 21750001
*                                                                       21760001
TKTS_OPTIONS@        DS  A      Address of the address containing a     21770001
*                               binary bit string which identifies the  21780001
*                               credential specific processing to be    21790001
*                               performed. This parameter is reserved   21800001
*                               for future use.                    @LHA 21810001
*                                                                       21820001
TKTS_PRIN_USERID@    DS  A      Address of a pre-allocated storage area 21830001
*                               containing 242 bytes which is the       21840001
*                               output principal name preceded by a     21850001
*                               2 byte length field.               @LHA 21860001
*                                                                       21870001
TKTS_LAST_PARM       EQU X'80000000' - Variable length parameter list   21880001
*                                      This is the last parameter  @LHA 21890001
*                                                                       21900001
TKTS_LEN             EQU *-TKTS Constant - fixed length of TKTS    @LHA 21910001
*---------------------------------------------------------------------* 21920001
*                                                                       21930001
*   Function code constants                                             21940001
*                                                                       21950001
*---------------------------------------------------------------------* 21960001
TKTS_RETURN_NAME     EQU X'0001'  Constant - Parse and return Kerberos  21970001
*                                            principal name        @LHA 21980001
*                                                                  @L7A 21990001
*                                                                       22000001
*******************************************************************@0AA 22010001
*                                                                       22020001
*********************************************************************** 22030001
*                                                                     * 22040001
*                PKIS ASSEMBLER DECLARATIONS                          * 22050001
*---------------------------------------------------------------------* 22060001
*                                                                     * 22070001
*  DECLARATION NAME = PKIS                                            * 22080001
*                                                                     * 22090001
*  DESCRIPTIVE NAME = PKIS Service parameters                         * 22100001
*                                                                     * 22110001
*  FUNCTION = Provides the ASSEMBLER mapping of the input parameter   * 22120001
*             list for the PKIS callable service R_PKIServ            * 22130001
*******************************************************************@0AA 22140001
*                                                                       22150001
                     ORG   COMP_SERVR_PARMS   Follows common plist @0AA 22160001
*                                                                       22170001
PKIS                 DS  0C     Mapping for PKIS                   @0AA 22180001
*                                                                       22190001
PKIS_NUM_PARMS@      DS  A      Address of a Four-Byte variable         22200001
*                               that contains the number of             22210001
*                               parameters that follow in the           22220001
*                               non-request specific portion of         22230001
*                               the R_PKIServ callable service          22240001
*                               Parameter List                     @0AA 22250001
*                                                                       22260001
PKIS_FUNC@           DS  A      Address of a Two-Byte variable          22270001
*                               that contains the code of the           22280001
*                               requested function.  Constants          22290001
*                               for the function codes codes            22300001
*                               are declared below                 @0AA 22310001
*                                                                       22320001
PKIS_ATTRIBUTES@     DS  A      Address of a Four-Byte variable         22330001
*                               that contains attribute flags           22340001
*                               for the service                    @0AA 22350001
*                                                                       22360001
PKIS_LOG_STRING@     DS  A      Address of a Variable-Length area       22370001
*                               that contains the LOG string to         22380001
*                               be passed to RACROUTE (1 byte for       22390001
*                               the length followed by up to 255        22400001
*                               bytes for the LOG string itself)   @0AA 22410001
*                                                                       22420001
PKIS_PARM_VER@       DS  A      Address of a Four-Byte variable         22430001
*                               that contains the version number        22440001
*                               of the Function Specific                22450001
*                               Parameter List (PKIS_FUNC_PARML@)  @0AA 22460001
*                                                                       22470001
PKIS_FUNC_PARML@     DS  A      Address of the FSPL -                   22480001
*                               Function Specific Parameter List        22490001
*                               (FSPL = the Parameter List that         22500001
*                                       corresponds to the              22510001
*                                       Function Code)             @0AA 22520001
*                                                                       22530001
PKIS_LAST_PARM  EQU X'80000000' Variable length parameter list          22540001
*                               This is the last parameter         @0AA 22550001
*                                                                       22560001
PKIS_LEN           EQU *-PKIS   Constant - fixed length of PKIS    @0AA 22570001
*                                                                       22580001
*---------------------------------------------------------------------* 22590001
*                                                                     * 22600001
*   PKIS Function Code Constants                                   @0AA 22610001
*                                                                     * 22620001
*---------------------------------------------------------------------* 22630001
*                                                                       22640001
PKIS_GENCERT       EQU X'0001'  GENCERT Function of RACDCERT            22650001
*                               Generates a basic X.509 V3              22660001
*                               digital certificate                @0AA 22670001
*                                                                       22680001
PKIS_EXPORT        EQU X'0002'  EXPORT  Function of RACDCERT            22690001
*                               Extracts a digital certificate          22700001
*                               by Certificate Request ID          @0AA 22710001
*                                                                       22720001
*******************************************************************@0AA 22730001
*                                                                       22740001
*                                                                       22750001
*------------------------------------------------------------------     22760001
*                                                                       22770001
* The following DSECTs, must be after the COMP dsect               @04C 22780001
*                                                                       22790001
*------------------------------------------------------------------     22800001
ADMN_RUNCOMD_MAP     DSECT                                         @04A 22810001
ADMN_RUNCOMD_LEN     DS  AL2    Length of command string           @04A 22820001
ADMN_RUNCOMD_CMD     DS  0C     Command string                     @04A 22830001
*                                                                       22840001
ADMN_USRADM_MAP      DSECT      Mapping for add/alt/del/list user  @04A 22850001
*                               and for connect/remove             @04A 22860001
ADMN_USRADM_USER_LEN DS  X      Length of User ID                  @04A 22870001
ADMN_USRADM_USER_ID  DS  CL8    User ID                            @04A 22880001
                     DS  CL1    Reserved                           @05C 22890001
ADMN_USRADM_ERROFF   DS  AL2    Offset to segment/field in error   @05A 22900001
ADMN_USRADM_SEG_NUM  DS  AL2    Number of segments to update       @04A 22910001
ADMN_USRADM_SEGSTRT  DS  0C     First segment entry                @04A 22920001
*                                                                       22930001
ADMN_USRADM_SEGENTRY DSECT      Use this for all function codes    @04A 22940001
ADMN_USRADM_SEG_NAME DS  CL8    Profile segment name               @04A 22950001
ADMN_USRADM_SEG_FLAG DS  CL1    Flag byte for segment              @05A 22960001
ADMN_USRADM_FLD_NUM  DS  AL2    Number of fields to update in seg. @04A 22970001
ADMN_USRADM_FLDSTRT  DS  0C     First field entry for segment      @04A 22980001
*                                                                       22990001
ADMN_USRADM_FLDENTRY DSECT      Use this for all function codes    @04A 23000001
ADMN_USRADM_FLD_NAME DS  CL8    Segment field name                 @04A 23010001
ADMN_USRADM_FLD_FLAG DS  CL1    Flag byte for field                @05A 23020001
ADMN_USRADM_FLD_LEN  DS  AL2    Field data length                  @04A 23030001
ADMN_USRADM_FLD_DATA DS  0C     Field data                         @04A 23040001
*                                                                       23050001
ADMN_GRPADM_MAP      DSECT      Mapping for add/alt/del/list group @07A 23060001
ADMN_GRPADM_GRP_LEN  DS  X      Length of Group ID                 @07A 23070001
ADMN_GRPADM_GRP_ID   DS  CL8    Group ID                           @07A 23080001
                     DS  CL1    Reserved                           @07A 23090001
ADMN_GRPADM_ERROFF   DS  AL2    Offset to segment/field in error   @07A 23100001
ADMN_GRPADM_SEG_NUM  DS  AL2    Number of segments to update       @07A 23110001
ADMN_GRPADM_SEGSTRT  DS  0C     First segment entry                @07A 23120001
*                                                                       23130001
ADMN_RESADM_MAP      DSECT      Mapping for add/alt/del/list       @08A 23140001
*                               resource, add/alt/del/list ds, and @08A 23150001
*                               permit                             @08A 23160001
ADMN_RESADM_CLAS_LEN DS  X      Length of Class Name               @08A 23170001
ADMN_RESADM_CLAS_NAM DS  CL8    Class Name                         @08A 23180001
                     DS  CL1    Reserved                           @08A 23190001
ADMN_RESADM_ERROFF   DS  AL2    Offset to segment/field in error   @08A 23200001
ADMN_RESADM_SEG_NUM  DS  AL2    Number of segments to update       @08A 23210001
ADMN_RESADM_SEGSTRT  DS  0C     First segment entry                @08A 23220001
*                                                                       23230001
ADMN_SETRADM_MAP     DSECT      Mapping for alter SETROPTS         @LBA 23240001
*                               information                        @LBA 23250001
                     DS  CL10   Reserved                           @LBA 23260001
ADMN_SETRADM_ERROFF  DS  AL2    Offset to segment/field in error   @LBA 23270001
ADMN_SETRADM_SEG_NUM DS  AL2    Number of segments to update       @LBA 23280001
ADMN_SETRADM_SEGSTRT DS  0C     First segment entry                @LBA 23290001
*                                                                       23300001
ADMN_OUTMSG_MAP      DSECT                                         @04A 23310001
ADMN_OUT_NEXT        DS  XL4    Addr of next block or 0            @04A 23320001
ADMN_OUT_EYE         DS  CL4    Eye catcher for output block       @04A 23330001
ADMN_OUT_SPID        DS  XL1    Subpool ID for block               @04A 23340001
ADMN_OUT_LEN         DS  AL3    Length of block                    @04A 23350001
ADMN_OUT_OFF         DS  F      Offset (from ADMN_OUTMSG_MAP) to   @04A+23360001
                                1st byte after last message        @04A 23370001
ADMN_OUT_STRT        DS  0C     Start of message data (see below)  @04A 23380001
*                                                                       23390001
ADMN_OUT_ENTRY       DSECT      Mapping for a message entry        @04A 23400001
ADMN_OUT_MLEN        DS  AL2    Length of message line             @04A 23410001
ADMN_OUT_MSTR        DS  0C     Variable length message string     @04A 23420001
*                                                                       23430001
ADMN_XTRUNL_MAP      DSECT      R_admin SETROPTS output mapping    @LBA 23440001
ADMN_XTRUNL_EYE      DS  CL4    Eye catcher for SETROPTS output    @LBA 23450001
ADMN_XTRUNL_OUTLEN   DS  AL4    Total length of output buffer      @LBA 23460001
                     DS  CL4    Reserved                           @LBA 23470001
ADMN_XTRUNL_NUM      DS  AL2    Number of segment entries for      @LBA 23480001
*                               ADMN_XTR_SETR or number of record  @LBA 23490001
*                               types for ADMN_UNL_SETR            @LBA 23500001
ADMN_XTRUNL_ENTRY    DS  0C     First segment or record entry      @LBA 23510001
*                                                                       23520001
ADMN_UNL_ENTRY       DSECT      Data mapping for ADMN_UNL_SETR     @LBA 23530001
ADMN_UNL_TYPE        DS  CL8    SMF Data Unload record type        @LBA 23540001
ADMN_UNL_LEN         DS  AL4    Length of a record of this type    @LBA 23550001
ADMN_UNL_NUM         DS  AL4    Number of records of this type     @LBA 23560001
                     DS  CL8    Reserved                           @LBA 23570001
ADMN_UNL_RECSTRT     DS  0C     Start of first record of this type @LBA 23580001
*                                                                       23590001
DINF_FIELD_LIST      DSECT                                         @01A 23600001
DINF_FIELD_LIST_LEN  DS  AL2    Length in bytes of field list      @01A 23610001
DINF_FIELD_LIST_CNT  DS  AL2    Number of fields in field list     @01A 23620001
DINF_FIELD_LIST_ST   DS  0C     Fields start here                  @01A 23630001
*                                                                       23640001
DINF_FIELDS          DSECT                                         @01A 23650001
DINF_FIELD_NAME      DS  CL8    Name of field                      @01A 23660001
DINF_FIELD_LEN       DS  AL2    Length of field                    @01A 23670001
DINF_FIELD_DATA      DS  0C     Field data                         @01A 23680001
*                                                                       23690001
DINF_OUTPUT_AREA     DSECT                                         @01A 23700001
DINF_OUTPUT_AREA_LEN DS  AL2    Length in bytes of output data     @01A 23710001
DINF_OUTPUT_AREA_CNT DS  AL2    Number of fields in output data    @01A 23720001
DINF_OUTPUT_AREA_ST  DS  0C     Start of output                    @01A 23730001
*                                                                       23740001
DINF_OUTPUT_FLD      DSECT                                         @01A 23750001
DINF_OUTPUT_FLD_NAME DS  CL8    Name of field                      @01A 23760001
DINF_OUTPUT_FLD_LEN  DS  AL2    Length of this output piece        @01A 23770001
DINF_OUTPUT_FLD_DATA DS  0C     Data retrieved                     @01A 23780001
*                                                                  @L7A 23790001
UMAP_CERTIFICATE DSECT          Digital certificate mapping        @L7A 23800001
*                               based on UMAP_CERTIFICATE@         @L7A 23810001
UMAP_DIGCERT_LEN     DS  F      Length of digital certificate      @L7A 23820001
UMAP_DIGCERT         DS  0C     Digital certificate                @L7A 23830001
*                                                                  @L7A 23840001
UMAP_USERID          DSECT      RACF Userid mapping                @L7A 23850001
*                               based on UMAP_RACFUSERID@          @L7A 23860001
UMAP_RACFID_LEN      DS  X      Length of RACF userid              @L7A 23870001
UMAP_RACFID          DS  CL8    RACF userid                        @L7A 23880001
*                                                                  @L7A 23890001
UMAP_APPL_USERID     DSECT      Application ID mapping             @L7A 23900001
*                               based on UMAP_APPL_USERID@         @L7A 23910001
UMAP_APPLID_LEN      DS  H      Length of RACF userid              @L7A 23920001
UMAP_APPLID          DS  CL246  Application ID                     @L7A 23930001
*                                                                  @L7A 23940001
*  function code values                                            @L7A 23950001
*                                                                  @L7A 23960001
UMAP_R_TO_L  EQU X'0001'  Return Lotus Notes ID for this RACF ID   @L7A 23970001
UMAP_L_TO_R  EQU X'0002'  Return RACF ID for this Lotus Notes ID   @L7A 23980001
UMAP_R_TO_N  EQU X'0003'  Return NDS ID for this RACF ID           @L7A 23990001
UMAP_N_TO_R  EQU X'0004'  Return RACF ID for this NDS ID           @L7A 24000001
UMAP_R_TO_K  EQU X'0005'  Return Kerb principal for this RACF ID   @LEA 24010001
UMAP_K_TO_R  EQU X'0006'  Return RACF ID for this Kerb principal   @LEA 24020001
*                                                                  @L7A 24030001
*                                                                  @L7A 24040001
*                                                                  @L7A 24050001
*---------------------------------------------------------------------* 24060001
*                                                                     * 24070001
*   CDDL Function Specific Parameter Lists                            * 24080001
*                                                                     * 24090001
*---------------------------------------------------------------------* 24100001
CDDL_ABORT           DSECT      Parameter list for DataAbortQuery  @L8A 24110001
CDDL_PREV_HANDLE     DS  A      Address of an input/output area         24120001
*                               from previous DataGetFirst or           24130001
*                               DataGetNext call                   @L8A 24140001
*                                                                       24150001
CDDL_GET_CERT        DSECT      Parameter list for DataGetFirst         24160001
*                               and DataGetNext                    @L8A 24170001
CDDL_RES_HANDLE      DS  A      Address of input/output area            24180001
*                               mapped by CDDL_HANDLE_MAP          @L8A 24190001
CDDL_CERT_USAGE      DS  CL4    4 byte output area containing           24200001
*                               certificate usage flags                 24210001
*                                x'00000000' - Usage is SITE            24220001
*                                x'00000002' - Usage is CERTAUTH        24230001
*                                x'00000008' - Usage is PERSONAL        24240001
*                                x'FFFFFFF5' - reserved bits must be    24250001
*                                              set to 0            @L8A 24260001
CDDL_CERT_DEFAULT    DS  F      output default indicator.  Zero         24270001
*                               value indicates not default certificate 24280001
*                               for ring, non-zero indicates this is    24290001
*                               the default certificate.           @L8A 24300001
CDDL_CERT_LEN        DS  F      On input, contains the length of the    24310001
*                               certificate area pointed to by          24320001
*                               CDDL_CERT_PTR. On output, contains the  24330001
*                               actual size of the certificate returned 24340001
*                               or 0 if no certificate returned.   @L8A 24350001
CDDL_CERT_PTR        DS  A      Input value specifying address of       24360001
*                               output certificate data area       @L8A 24370001
CDDL_PK_LEN          DS  F      On input, contains size of private      24380001
*                               key area pointed to by CDDL_PK_PTR.     24390001
*                               On output contains the length of the    24400001
*                               private returned at address             24410001
*                               CDDL_PK_PTR or 0 if no private key      24420001
*                               was returned.                      @L8A 24430001
CDDL_PK_PTR          DS  A      Input value specifying address of       24440001
*                               private key output data area       @L8A 24450001
CDDL_PK_TYPE         DS  F      Output value indicating type of private 24460001
*                               key. See constants below.          @L8A 24470001
CDDL_PK_BITSIZE      DS  F      Output value indicating the size        24480001
*                               of the private key modulus in bits @L8A 24490001
CDDL_LABEL_LEN       DS  F      On input, contains the length of the    24500001
*                               field pointed to by CDDL_LABEL_PTR,     24510001
*                               and must be at least 32.  On output,    24520001
*                               contains the length of the label        24530001
*                               returned at the address in              24540001
*                               CDDL_LABEL_PTR, and will be 32 or       24550001
*                               less.                              @L8A 24560001
CDDL_LABEL_PTR       DS  A      Input value specifying the address      24570001
*                               of output area to be used for the       24580001
*                               label name.                        @L8A 24590001
CDDL_RACF_USERID     DS  CL9    Input value containing a 1 byte length  24600001
*                               followed by the certificate owning      24610001
*                               userid. The combination of the output   24620001
*                               label and this field uniquely identify  24630001
*                               a certificate                      @L8A 24640001
                     DS  CL3    Reserved                           @L8A 24650001
CDDL_SDN_LEN         DS  F      On input, contains the length of the    24660001
*                               output buffer pointed to by             24670001
*                               CDDL_SDN_PTR.  On output, contains the  24680001
*                               length of the BER encoded Subject's     24690001
*                               Distinguished Name returned in          24700001
*                               CDDL_SDN_LEN.                      @L8A 24710001
CDDL_SDN_PTR         DS  A      Input value specifying the address of   24720001
*                               the output area to be used for the      24730001
*                               Subject's Distinguished Name.      @L8A 24740001
CDDL_RECID_LEN       DS  F      Output value containing the length of   24750001
*                               the record ID returned in area pointed  24760001
*                               to by CDDL_RECID_PTR, or 0 if no        24770001
*                               record returned.                   @LDC 24780001
CDDL_RECID_PTR       DS  A      Input value specifying address of a     24790001
*                               246 byte area to contain output         24800001
*                               record ID data.                    @LDC 24810001
CDDL_CRT_STATUS      DSECT      Parameter list for CheckStatus     @LAA 24820001
CDDL_CRT_LEN         DS  F      Input area containing the length of the 24830001
*                               certificate area pointed to by          24840001
*                               CDDL_CRT_PTR.                      @LAA 24850001
CDDL_CRT_PTR         DS  A      Input value specifying address of       24860001
*                               output certificate data area       @LAA 24870001
CDDL_GET_UPDATE      DSECT      Parameter list for                 @LCA 24880001
*                               GetUpdateCode                      @LCA 24890001
CDDL_RING_SEQN       DS  F      Ring sequence number               @LCA 24900001
*                                                                       24910001
CDDL_ISN             DSECT      Parm List for IncSerialNum              24920001
CDDL_ISN_CLEN        DS  F      Length of DER Encoded input             24930001
*                               Digital Certificate                @LFA 24940001
CDDL_ISN_CPTR        DS  A      Address of DER Encoded input            24950001
*                               Digital Certificate                @LFA 24960001
CDDL_ISN_SERNUM      DS  CL8    Output - Incremented Serial Number      24970001
*                                        of Digital Certificate    @LFA 24980001
*                                                                       24990001
*---------------------------------------------------------------------* 25000001
*                                                                       25010001
*   Private Key Type Constants returned in CDDL_PK_TYPE                 25020001
*                                                                       25030001
CDDL_PKCS10          EQU 1      Private key is PKCS#10 DER encoded @L8A 25040001
CDDL_ICSF            EQU 2      Private key is a ICSF token        @L8A 25050001
*---------------------------------------------------------------------* 25060001
*                                                                     * 25070001
*    Mapping of input/output area pointed to by CDDL_RES_HANDLE       * 25080001
*                                                                     * 25090001
*---------------------------------------------------------------------* 25100001
CDDL_HANDLE_MAP      DSECT      Mapping of area pointed to by           25110001
*                               CDDL_RES_HANDLE & CDDL_PREV_HANDLE @L9C 25120001
CDDL_TOKEN           DS  A      Reserved for use by the security        25130001
*                               server.  This value must be preserved   25140001
*                               for subsequent calls to DataGetNext     25150001
*                               and DataAbortQuery                 @L8A 25160001
CDDL_PREDICATES      DS  F      Input value specifying the selection    25170001
*                               criteria.  See constants below     @L8A 25180001
CDDL_ATTR_ID         DS  F      Input value specifying the attribute    25190001
*                               to query on.  Ignored if                25200001
*                               CDDL_PREDICATES is 0.  See constants    25210001
*                               below for possible values.         @L8A 25220001
CDDL_ATTR_LEN        DS  F      Input value containing the length       25230001
*                               of the attributes supplied in           25240001
*                               CDDL_ATTR_PTR                      @L8A 25250001
CDDL_ATTR_PTR        DS  A      Input value containing the address      25260001
*                               of query attribute data.  Type of       25270001
*                               data supplied determined by             25280001
*                               CDDL_ATTR_ID                       @L8A 25290001
*---------------------------------------------------------------------* 25300001
*                                                                       25310001
*   Input selection criteria constants supplied in CDDL_PREDICATES      25320001
*                                                                       25330001
CDDL_NONE            EQU 0      No selection criteria              @L8A 25340001
CDDL_ATTR            EQU 1      Query on a particular attribute    @L8A 25350001
*---------------------------------------------------------------------* 25360001
*                                                                       25370001
*   Input query attributes supplied in CDDL_ATTR_ID                @L8A 25380001
*                                                                       25390001
CDDL_LABEL           EQU 1      The certificate label, up to 32         25400001
*                               characters long                    @L8A 25410001
CDDL_DEFAULT         EQU 2      The default flag, a 4 byte field        25420001
*                               specified as 0 for NO, or a             25430001
*                               non-zero value for YES             @L8A 25440001
CDDL_SUBJECT         EQU 3      BER encoded subjects name          @L8A 25450001
*---------------------------------------------------------------------* 25460001
*                                                                       25470001
KERB_FLDDATA_MAP     DSECT      Mapping for Kerberos data area     @LEA 25480001
KERB_FLDDATA_LEN     DS  AL2    Length of data area                @LEA 25490001
KERB_FLD_NUM         DS  AL2    Number of fields present           @LEA 25500001
KERB_FLDSTRT         DS  0C     First field entry                  @LEA 25510001
*                                                                       25520001
KERB_FLDENTRY        DSECT      Mapping for Kerberos fields        @LEA 25530001
KERB_FLD_NAME        DS  CL8    Segment field name                 @LEA 25540001
KERB_FLD_LEN         DS  AL2    Field data length                  @LEA 25550001
KERB_FLD_DATA        DS  0C     Field data                         @LEA 25560001
*---------------------------------------------------------------------* 25570001
*                                                                       25580001
*******************************************************************@0AA 25590001
*                                                                       25600001
*---------------------------------------------------------------------* 25610001
*                                                                     * 25620001
*   PKIS Function Specific Parameter Lists                            * 25630001
*                                                                     * 25640001
*---------------------------------------------------------------------* 25650001
*                                                                       25660001
PKIS_GENCERT_MAP     DSECT      Function Specific Parameter List        25670001
*                               (FSPL) for GENCERT                 @0AA 25680001
*                                                                       25690001
PKIS_GENC_EYECATCH   DS  CL8    Eyecatcher for the GENCERT FSPL         25700001
*                               Left justified blank filled string      25710001
*                               containing the text 'GENCERT '     @0AA 25720001
*                                                                       25730001
PKIS_GENC_CERTPL_LEN DS  F      Length (in bytes) of the Digital        25740001
*                               Certificate generation PList       @0AA 25750001
*                                                                       25760001
PKIS_GENC_CERTPL@    DS  A      Address of the Digital                  25770001
*                               Certificate generation PList       @0AA 25780001
*                                                                       25790001
PKIS_GENC_CERTID@    DS  A      Address of a 57-Byte area that          25800001
*                               contains the Output Certificate         25810001
*                               Request ID (the first byte of this      25820001
*                               area contains the length of the         25830001
*                               Output Certificate Request ID)     @0AA 25840001
*                                                                       25850001
*------------------------------*                                        25860001
*                                                                       25870001
PKIS_CPL_ENTRY       DSECT      Certificate Request PList entry         25880001
*                               (a single GENCERT PList entry)     @0AA 25890001
*                                                                       25900001
PKIS_CPL_FIELD_NAME  DS  CL12   Certificate Request Field Name     @0AA 25910001
*                                                                       25920001
PKIS_CPL_FIELD_LEN   DS  F      Length (in bytes) of the                25930001
*                               Request Field Name value           @0AA 25940001
*                                                                       25950001
PKIS_CPL_FIELD_VALUE DS  0C     Request Field Name value           @0AA 25960001
*                                                                       25970001
*------------------------------*                                        25980001
*                                                                       25990001
PKIS_EXPORT_MAP      DSECT      Function Specific Parameter List        26000001
*                               (FSPL) for EXPORT                  @0AA 26010001
*                                                                       26020001
PKIS_EXP_EYECATCH    DS  CL8    Eyecatcher for the EXPORT FSPL          26030001
*                               Left justified blank filled string      26040001
*                               containing the text 'EXPORT  '     @0AA 26050001
*                                                                       26060001
PKIS_EXP_CERTAN_LEN  DS  F      Length (in bytes) of the                26070001
*                               preallocated Certificate Anchor         26080001
*                               area                               @0AA 26090001
*                                                                       26100001
PKIS_EXP_CERTAN@     DS  A      Address of the preallocated             26110001
*                               Certificate Anchor area            @0AA 26120001
*                                                                       26130001
PKIS_EXP_CERTID@     DS  A      Address of a 57-Byte area that          26140001
*                               contains the Input Certificate          26150001
*                               Request ID that will be used to         26160001
*                               locate the Digital Certificate          26170001
*                               to be EXPORTed (the first byte of       26180001
*                               this area contains the length of        26190001
*                               the Input Certificate Request ID)  @0AA 26200001
*                                                                       26210001
*******************************************************************@0AA 26220001
*                                                                       26230001
*                                                                       26240001
*---------------------------------------------------------------------* 26250001
                   MEND                                              */ 26260001
*                                                                       26270001
*                                                                       26280001
*                                                                       26290001
*                                                                       26300001
*                                                                       26310001
*                                                                       26320001
*                                                                       26330001
*/********************************************************************/ 26340001
*/********************************************************************/ 26350001
*/********************************************************************/ 26360001
*/*                                                                  */ 26370001
*/*                     COMP PL/X DECLARATIONS                       */ 26380001
*/*------------------------------------------------------------------*/ 26390001
*/*                                                                  */ 26400001
*/*   DECLARATION NAME = COMP                                        */ 26410001
*/*                                                                  */ 26420001
*/*   DESCRIPTIVE NAME =   OMVS  common SAF/RACF parameter list.     */ 26430001
*/*                                                                  */ 26440001
*/*   FUNCTION = Provides PL/X mapping of the common input parameter */ 26450001
*/*              list for the   OMVS  SAF/RACF routers.              */ 26460001
*/*                                                                  */ 26470001
*/********************************************************************/ 26480001
*                                                                       26490001
* DECLARE                                                               26500001
*  1 COMP  BASED BDY(WORD),      /* Common SAF/RACF plist.           */ 26510001
*                                                                       26520001
*   3 COMP_WORKA_STOR@ PTR(31),  /* Addr of 1024 byte work area.     */ 26530001
*                                                                       26540001
*   3 COMP_SAFRC_ALET@ PTR(31),  /* Addr of ALET for SAF RC.         */ 26550001
*                                                                       26560001
*   3 COMP_SAFRC_STOR@ PTR(31),  /* Addr of SAF Return Code.         */ 26570001
*                                                                       26580001
*   3 COMP_RACRC_ALET@ PTR(31),  /* Addr of ALET for RACF Return Code*/ 26590001
*                                                                       26600001
*   3 COMP_RACRC_STOR@ PTR(31),  /* Addr of RACF Return Code.        */ 26610001
*                                                                       26620001
*   3 COMP_RACSC_ALET@ PTR(31),  /* Addr of ALET for RACF Reason Code*/ 26630001
*                                                                       26640001
*   3 COMP_RACSC_STOR@ PTR(31),  /* Addr of RACF Reason Code.        */ 26650001
*                                                                       26660001
*   3 COMP_SERVR_PARMS CHAR(0);  /* Service routine parameter lists     26670001
*                                    begin here.                     */ 26680001
*                                                                       26690001
*                                                                       26700001
* DECLARE                                                               26710001
*  COMP_LEN FIXED(31) CONSTANT(LENGTH(COMP)); /* Constant COMP length*/ 26720001
*                                                                       26730001
*                                                                       26740001
*/********************************************************************/ 26750001
*/*                                                                  */ 26760001
*/*                     IUSP PL/X DECLARATIONS                       */ 26770001
*/*------------------------------------------------------------------*/ 26780001
*/*                                                                  */ 26790001
*/*   DECLARATION NAME = IUSP                                        */ 26800001
*/*                                                                  */ 26810001
*/*   DESCRIPTIVE NAME =   OMVS  INIT_USP input parameter list.      */ 26820001
*/*                                                                  */ 26830001
*/*   FUNCTION = Provides PL/X mapping of the input parameter list   */ 26840001
*/*              for the   OMVS  INIT_USP service routine.           */ 26850001
*/*                                                                  */ 26860001
*/********************************************************************/ 26870001
*                                                                       26880001
* DECLARE                                                               26890001
*  1 IUSP  BASED(ADDR(COMP_SERVR_PARMS)),                               26900001
*                                                                       26910001
*   3 IUSP_WORKA_ALET@ PTR(31),  /* Addr of ALET for the output area.*/ 26920001
*                                                                       26930001
*   3 IUSP_WORKA_STOR@ PTR(31);  /* Addr of the 4 byte output area.     26940001
*                                    The output area contains an addr   26950001
*                                    that points to data about a user*/ 26960001
*                                                                       26970001
*                                                                       26980001
* DECLARE                                                               26990001
*  IUSP_LEN FIXED(31) CONSTANT(LENGTH(IUSP)); /* Constant IUSP length*/ 27000001
*                                                                       27010001
*                                                                       27020001
*/********************************************************************/ 27030001
*/*                                                                  */ 27040001
*/*                     CSID PL/X DECLARATIONS                       */ 27050001
*/*------------------------------------------------------------------*/ 27060001
*/*                                                                  */ 27070001
*/* DECLARATION NAME = CSID                                          */ 27080001
*/*                                                                  */ 27090001
*/* DESCRIPTIVE NAME =   OMVS  RACF Common Set ID input parameter    */ 27100001
*/*                    list.                                         */ 27110001
*/*                                                                  */ 27120001
*/* FUNCTION = Provides the PL/X mapping of the input parameter      */ 27130001
*/*            list for the following   OMVS  RACF Service Routines: */ 27140001
*/*               Set Uid                                            */ 27150001
*/*               Set Effective Uid                                  */ 27160001
*/*               Set Gid                                            */ 27170001
*/*               Set Effective Gid                                  */ 27180001
*/*                                                                  */ 27190001
*/*                                                                  */ 27200001
*/********************************************************************/ 27210001
*                                                                       27220001
*                                                                       27230001
* DECLARE                                                               27240001
*  1 CSID  BASED(ADDR(COMP_SERVR_PARMS)),                               27250001
*                                                                       27260001
*   3 CSID_ID_ALET@     PTR  (31),  /* Addr of ALET for the Uid/Gid. */ 27270001
*                                                                       27280001
*   3 CSID_ID@          PTR  (31),  /* Addr of the Uid/Gid.          */ 27290001
*                                                                       27300001
*   3 CSID_IDOA_ALET@   PTR  (31),  /* Addr of ALET for output area. */ 27310001
*                                                                       27320001
*   3 CSID_IDOA@        PTR  (31);  /* Addr of a 3 word output area.    27330001
*                                      This area contains the new real, 27340001
*                                      effective and saved Uid/Gids. */ 27350001
*                                                                       27360001
* DECLARE                                                               27370001
*  CSID_LEN FIXED(31) CONSTANT(LENGTH(CSID)); /* Constant CSID length*/ 27380001
*                                                                       27390001
*                                                                       27400001
*/********************************************************************/ 27410001
*/*                                                                  */ 27420001
*/*                     EXID PL/X DECLARATIONS                       */ 27430001
*/*------------------------------------------------------------------*/ 27440001
*/*                                                                  */ 27450001
*/* DECLARATION NAME = EXID                                          */ 27460001
*/*                                                                  */ 27470001
*/* DESCRIPTIVE NAME =   OMVS  RACF Exec Set Uid/Gid input parameter */ 27480001
*/*                    list.                                         */ 27490001
*/*                                                                  */ 27500001
*/* FUNCTION = Provides the PL/X mapping of the input parameter      */ 27510001
*/*            list for the   OMVS  RACF EXEC Service Routine.       */ 27520001
*/*                                                                  */ 27530001
*/********************************************************************/ 27540001
*                                                                       27550001
* DECLARE                                                               27560001
*  1 EXID  BASED(ADDR(COMP_SERVR_PARMS)),                               27570001
*   3 EXID_FLAG_ALET@   PTR(31),/* Address of ALET for a byte flag.  */ 27580001
*                                                                       27590001
*   3 EXID_FLAG@        PTR(31),/* Address of a one byte flag that      27600001
*                                   indicates set Uid, Gid, or Both.    27610001
*                                     x'01' Set Uid.                    27620001
*                                     x'02' Set Gid.                    27630001
*                                     x'03' Set Both.                */ 27640001
*                                                                       27650001
*   3 EXID_UID_ALET@    PTR(31),/* Address of ALET for Uid to be set.*/ 27660001
*                                                                       27670001
*   3 EXID_UID@         PTR(31),/* Addr of the Uid to be set.        */ 27680001
*                                                                       27690001
*   3 EXID_GID_ALET@    PTR(31),/* Addr of ALET for Gid to be set.   */ 27700001
*                                                                       27710001
*   3 EXID_GID@         PTR(31),/* Addr of the Gid to be set.        */ 27720001
*                                                                       27730001
*   3 EXID_UIDO_ALET@   PTR(31),/* Addr of ALET for Uid output area. */ 27740001
*                                                                       27750001
*   3 EXID_UIDO@        PTR(31),/* Addr of Uid output area, which is    27760001
*                                   3 words filled in by IRRREX00 with  27770001
*                                   the real, effective and saved Uids  27780001
*                                                                    */ 27790001
*                                                                       27800001
*   3 EXID_GIDO_ALET@   PTR(31),/* Addr of ALET for Gid output area. */ 27810001
*                                                                       27820001
*   3 EXID_GIDO@        PTR(31);/* Addr of Gid output area, which is    27830001
*                                   3 words filled in by IRRREX00 with  27840001
*                                   the real, effective and saved Gids  27850001
*                                                                    */ 27860001
*                                                                       27870001
* DECLARE                                                               27880001
*  EXID_LEN FIXED(31) CONSTANT(LENGTH(EXID)); /* Constant EXID length*/ 27890001
*                                                                       27900001
*                                                                       27910001
*/********************************************************************/ 27920001
*/*                                                                  */ 27930001
*/*                     GETG PL/X DECLARATIONS                       */ 27940001
*/*------------------------------------------------------------------*/ 27950001
*/*                                                                  */ 27960001
*/* DECLARATION NAME = GETG                                          */ 27970001
*/*                                                                  */ 27980001
*/* DESCRIPTIVE NAME =   OMVS  RACF Get Supplemental Groups input    */ 27990001
*/*                    parameter list.                               */ 28000001
*/*                                                                  */ 28010001
*/* FUNCTION = Provides the PL/X mapping of the input parameter      */ 28020001
*/*            list for the   OMVS  RACF Get Supplemental Groups     */ 28030001
*/*            service routine.                                      */ 28040001
*/*                                                                  */ 28050001
*/********************************************************************/ 28060001
*                                                                       28070001
* DECLARE                                                               28080001
*  1 GETG  BASED(ADDR(COMP_SERVR_PARMS)),                               28090001
*   3 GETG_KEY_ALET@   PTR(31), /* Addr of ALET for the user's  key. */ 28100001
*                                                                       28110001
*   3 GETG_KEY@        PTR(31), /* Address of a byte that contains      28120001
*                                   the user's key. The key is in the   28130001
*                                   high order 4 bits of the byte.   */ 28140001
*                                                                       28150001
*   3 GETG_GCNT_ALET@  PTR(31), /* Addr of ALET for the Group Count. */ 28160001
*                                                                       28170001
*   3 GETG_GCNT@       PTR(31), /* Address of the group count. (A one   28180001
*                                   word area that contains the number  28190001
*                                   of GIDs in the Grouplist area.)  */ 28200001
*                                                                       28210001
*   3 GETG_GLST_ALET@  PTR(31), /* Addr of ALET for the Group List.  */ 28220001
*                                                                       28230001
*   3 GETG_GLST@       PTR(31), /* Addr of the Group List area in which 28240001
*                                  supplemental GIDs are returned.   */ 28250001
*                                                                       28260001
*   3 GETG_GNUM_ALET@  PTR(31), /* Addr of ALET for number of groups.*/ 28270001
*                                                                       28280001
*   3 GETG_GNUM@       PTR(31); /* Addr of the Number of Groups. (A     28290001
*                                   one word area in which the number   28300001
*                                   of supplemental group GIDs is       28310001
*                                   returned.)                       */ 28320001
* DECLARE                                                               28330001
*  GETG_LEN FIXED(31) CONSTANT(LENGTH(GETG)); /* Constant GETG length*/ 28340001
*                                                                       28350001
*/********************************************************************/ 28360001
*/*                                                                  */ 28370001
*/*                     CHKP PL/X DECLARATIONS                       */ 28380001
*/*------------------------------------------------------------------*/ 28390001
*/*                                                                  */ 28400001
*/* DECLARATION NAME = CHKP                                          */ 28410001
*/*                                                                  */ 28420001
*/* DESCRIPTIVE NAME =   OMVS  RACF Check Privilege input parameter  */ 28430001
*/*                    list.                                         */ 28440001
*/*                                                                  */ 28450001
*/* FUNCTION = Provides the PL/X mapping of the input parameter      */ 28460001
*/*            list for the   OMVS  RACF Check Privilege service     */ 28470001
*/*            routine.                                              */ 28480001
*/*                                                                  */ 28490001
*/********************************************************************/ 28500001
*                                                                       28510001
* DECLARE                                                               28520001
*  1 CHKP  BASED(ADDR(COMP_SERVR_PARMS)),                               28530001
*   3 CHKP_AUFC_ALET@  PTR(31), /* Addr of ALET for audit function      28540001
*                                   code.                            */ 28550001
*                                                                       28560001
*   3 CHKP_AUFC@       PTR(31); /* Addr of the audit function code.     28570001
*                                 (A full word containing the function  28580001
*                                  code that identifies the system      28590001
*                                  call being processed.)            */ 28600001
*                                                                       28610001
* DECLARE                                                               28620001
*  CHKP_LEN FIXED(31) CONSTANT(LENGTH(CHKP)); /* Constant CHKP length*/ 28630001
*                                                                       28640001
*/********************************************************************/ 28650001
*/*                                                                  */ 28660001
*/*                     GMAP PL/X DECLARATIONS                       */ 28670001
*/*------------------------------------------------------------------*/ 28680001
*/*                                                                  */ 28690001
*/* DECLARATION NAME = GMAP                                          */ 28700001
*/*                                                                  */ 28710001
*/* DESCRIPTIVE NAME =   OMVS  RACF Get Map Common input parameter   */ 28720001
*/*                    list.                                         */ 28730001
*/*                                                                  */ 28740001
*/* FUNCTION = Provides the PL/X mapping of the input parameter      */ 28750001
*/*            list for the   OMVS  RACF Get Group Map/Get User Map  */ 28760001
*/*            service routine.                                      */ 28770001
*/*                                                                  */ 28780001
*/*                                                                  */ 28790001
*/* Note: GMAP is a common declaration that is used with both Get    */ 28800001
*/*       Group Map and Get User Map. When requesting Get Group Map, */ 28810001
*/*       all fields pertain to group data. When requesting Get User */ 28820001
*/*       Map, all fields pertain to user data.                      */ 28830001
*/*                                                                  */ 28840001
*/*                                                                  */ 28850001
*/********************************************************************/ 28860001
*                                                                       28870001
* DECLARE                                                               28880001
*  1 GMAP  BASED(ADDR(COMP_SERVR_PARMS)),                               28890001
*                                                                       28900001
*   3 GMAP_FLAG_ALET@  PTR(31), /* Address of ALET for one byte flag */ 28910001
*                                                                       28920001
*   3 GMAP_FLAG@       PTR(31), /* Address of the one byte flag:        28930001
*                                    x'00' Search by Gid/Uid.           28940001
*                                    x'01' Search by Group ID/Userid.*/ 28950001
*                                                                       28960001
*   3 GMAP_ID_ALET@    PTR(31), /* Address of ALET for the Gid/Uid.  */ 28970001
*                                                                       28980001
*   3 GMAP_ID@         PTR(31), /* Address of a word containing the     28990001
*                                   input Uid/Gid or in which the       29000001
*                                   Uid/Gid is returned.             */ 29010001
*                                                                       29020001
*                                                                       29030001
*   3 GMAP_NAME_ALET@  PTR(31), /* Address of ALET for the Group Name   29040001
*                                   or Userid.                       */ 29050001
*                                                                       29060001
*   3 GMAP_NAME@       PTR(31); /* Address of 8 bytes that contain      29070001
*                                   an input Group Name or Userid       29080001
*                                   or in which the Group name or       29090001
*                                   Userid is returned. The name/id     29100001
*                                   left justified and padded with      29110001
*                                   blanks.                          */ 29120001
*                                                                       29130001
* DECLARE                                                               29140001
*  GMAP_LEN FIXED(31) CONSTANT(LENGTH(GMAP)); /* Constant GMAP length*/ 29150001
*                                                                       29160001
*/********************************************************************/ 29170001
*/*                                                                  */ 29180001
*/*                     CKPO PL/X DECLARATIONS                       */ 29190001
*/*------------------------------------------------------------------*/ 29200001
*/*                                                                  */ 29210001
*/* DECLARATION NAME = CKPO                                          */ 29220001
*/*                                                                  */ 29230001
*/* DESCRIPTIVE NAME =   OMVS  RACF Check Process Owner input        */ 29240001
*/*                    parameter list.                               */ 29250001
*/*                                                                  */ 29260001
*/* FUNCTION = Provides the PL/X mapping of the input parameter      */ 29270001
*/*            list for the   OMVS  Check Process Owner service      */ 29280001
*/*            routine.                                              */ 29290001
*/*                                                                  */ 29300001
*/********************************************************************/ 29310001
*                                                                       29320001
* DECLARE                                                               29330001
*  1 CKPO  BASED(ADDR(COMP_SERVR_PARMS)),                               29340001
*                                                                       29350001
*   3 CKPO_REQT_ALET@  PTR(31), /* Address of ALET for one byte Request 29360001
*                                   type.                            */ 29370001
*                                                                       29380001
*   3 CKPO_REQT@       PTR(31), /* Address of the one byte request      29390001
*                                   type:                               29400001
*                                   1 -  Audit only request from KILL   29410001
*                                     used when SIGCONT signal is being 29420001
*                                     sent.                             29430001
*                                   2 - KILL request.                   29440001
*                                   3 - GETPSENT request.               29450001
*                                   4 - OPEN Slave TTY request.      */ 29460001
*                                                                       29470001
*   3 CKPO_UIDS_ALET@  PTR(31), /* Address of ALET for Uids area.    */ 29480001
*                                                                       29490001
*   3 CKPO_UIDS@       PTR(31), /* Address of a 3 word area containing  29500001
*                                 real, effective, and saved Uids (in   29510001
*                                 that order) for the target process.*/ 29520001
*                                                                       29530001
*   3 CKPO_PID_ALET@   PTR(31), /* Address of ALET for target PID.   */ 29540001
*                                                                       29550001
*   3 CKPO_PID@        PTR(31), /* Address of the words containing the  29560001
*                                   target process's PID.            */ 29570001
*                                                                       29580001
*   3 CKPO_CODE_ALET@  PTR(31), /* Address of ALET for signal code.  */ 29590001
*                                                                       29600001
*   3 CKPO_CODE@       PTR(31); /* Address of word containing a code    29610001
*                                   identifying signal being sent.      29620001
*                                   This word is ignored for request    29630001
*                                   type 3.                          */ 29640001
*                                                                       29650001
* DECLARE                                                               29660001
*  CKPO_LEN FIXED(31) CONSTANT(LENGTH(CKPO)), /* Constant CKPO length*/ 29670001
*  CKPO_KILL_AUDIT FIXED(31) CONSTANT(1), /* KILL AUDIT Constant     */ 29680001
*  CKPO_KILL       FIXED(31) CONSTANT(2), /* Kill Verification.      */ 29690001
*  CKPO_GETPSENT   FIXED(31) CONSTANT(3), /* Caller is GETPSENT.     */ 29700001
*  CKPO_OPEN_STTY  FIXED(31) CONSTANT(4), /* Open Slave TTY.         */ 29710001
*  CKPO_MAX_REQ_TYPE FIXED(31) CONSTANT(4); /* Max Request Type.     */ 29720001
*/********************************************************************/ 29730001
*/*                                                                  */ 29740001
*/*               QRYS PL/X DECLARATIONS                             */ 29750001
*/*------------------------------------------------------------------*/ 29760001
*/*                                                                  */ 29770001
*/* DECLARATION NAME = QRYS                                          */ 29780001
*/*                                                                  */ 29790001
*/* DESCRIPTIVE NAME =   OMVS  RACF Query System Security options    */ 29800001
*/*                    input parameter list.                         */ 29810001
*/*                                                                  */ 29820001
*/* FUNCTION = Provides the PL/X mapping of the input parameter      */ 29830001
*/*            list for the   OMVS  Query System Security options    */ 29840001
*/*            service routine.                                      */ 29850001
*/*                                                                  */ 29860001
*/********************************************************************/ 29870001
*                                                                       29880001
* DECLARE                                                               29890001
*  1 QRYS  BASED(ADDR(COMP_SERVR_PARMS)),                               29900001
*                                                                       29910001
*   3 QRYS_OPTN_CODE_ALET@ PTR(31), /* Address of ALET for one word     29920001
*                                       requested option code        */ 29930001
*                                                                       29940001
*   3 QRYS_OPTN_CODE@  PTR(31), /* Address of the one word requested    29950001
*                                  option code. The defined codes are:  29960001
*                                x'00000001' - NGROUPS_MAX options@P8C  29970001
*                                x'00000002' - POSIX_SAVED_IDS op@P8C*/ 29980001
*                                                                       29990001
*                                                                       30000001
*   3 QRYS_OUTP_VAL_ALET@ PTR(31),  /* Address of ALET for one word     30010001
*                                       output value                 */ 30020001
*                                                                       30030001
*   3 QRYS_OUTP_VAL@   PTR(31);     /* Address of one word output       30040001
*                                       value                        */ 30050001
*                                                                       30060001
* DECLARE                                                               30070001
*  QRYS_LEN FIXED(31) CONSTANT(LENGTH(QRYS)); /* Constant QRYS length*/ 30080001
*                                                                       30090001
*/********************************************************************/ 30100001
*/*                                                                  */ 30110001
*/*               CMOD PL/X DECLARATIONS                             */ 30120001
*/*------------------------------------------------------------------*/ 30130001
*/*                                                                  */ 30140001
*/* DECLARATION NAME = CMOD                                          */ 30150001
*/*                                                                  */ 30160001
*/* DESCRIPTIVE NAME =   OMVS  RACF Change File Mode input parameter */ 30170001
*/*                    list.                                         */ 30180001
*/*                                                                  */ 30190001
*/* FUNCTION = Provides the PL/X mapping of the input parameter list */ 30200001
*/*            for the   OMVS  Change File Mode service routine.     */ 30210001
*/*                                                                  */ 30220001
*/********************************************************************/ 30230001
*                                                                       30240001
* DECLARE                                                               30250001
*  1 CMOD  BASED(ADDR(COMP_SERVR_PARMS)),                               30260001
*                                                                       30270001
*   3 CMOD_MODE_ALET@  PTR(31), /* Address of the ALET for the mode     30280001
*                                   structure.                       */ 30290001
*                                                                       30300001
*   3 CMOD_MODE@       PTR(31), /* Address of a one word mode           30310001
*                                   parameter.                       */ 30320001
*                                                                       30330001
*   3 CMOD_FSP_ALET@   PTR(31), /* Address of the ALET for the FSP      30340001
*                                   structure.                       */ 30350001
*                                                                       30360001
*   3 CMOD_FSP@        PTR(31), /* Address of the FSP structure.     */ 30370001
*                                                                       30380001
*   3 CMOD_FID_ALET@  PTR(31), /* Address of the ALET for the file id*/ 30390001
*                                                                       30400001
*   3 CMOD_FID@       PTR(31), /* Address of the File Id which is a 16  30410001
*                                  byte area that contains a unique     30420001
*                                  identifier of the file.           */ 30430001
*   3 CMOD_CRED_ALET@  PTR(31), /* Address of the ALET for the CRED     30440001
*                                   structure.                       */ 30450001
*                                                                       30460001
*   3 CMOD_CRED@       PTR(31); /* Address of the CRED structure.    */ 30470001
*                                                                       30480001
*                                                                       30490001
* DECLARE                                                               30500001
*  CMOD_LEN FIXED(31) CONSTANT(LENGTH(CMOD)); /* Constant CMOD length*/ 30510001
*                                                                       30520001
*/********************************************************************/ 30530001
*/*                                                                  */ 30540001
*/*               CLID PL/X DECLARATIONS                             */ 30550001
*/*------------------------------------------------------------------*/ 30560001
*/*                                                                  */ 30570001
*/* DECLARATION NAME = CLID                                          */ 30580001
*/*                                                                  */ 30590001
*/* DESCRIPTIVE NAME =   OMVS  RACF Clear Setid input parameter list */ 30600001
*/*                                                                  */ 30610001
*/* FUNCTION = Provides the PL/X mapping of the input parameter      */ 30620001
*/*            list for the   OMVS  Clear Setid service routine.     */ 30630001
*/*                                                                  */ 30640001
*/********************************************************************/ 30650001
*                                                                       30660001
* DECLARE                                                               30670001
*  1 CLID  BASED(ADDR(COMP_SERVR_PARMS)),                               30680001
*                                                                       30690001
*   3 CLID_FSP_ALET@  PTR(31), /* Address of the ALET for the FSP       30700001
*                                  structure.                        */ 30710001
*   3 CLID_FSP@       PTR(31), /* Address of the FSP structure.      */ 30720001
*                                                                       30730001
*   3 CLID_FID_ALET@  PTR(31), /* Address of the ALET for the file id*/ 30740001
*                                                                       30750001
*   3 CLID_FID@       PTR(31), /* Address of the File Id which is a 16  30760001
*                                  byte area that contains a unique     30770001
*                                  identifier of the file.           */ 30780001
*   3 CLID_CRED_ALET@ PTR(31), /* Address of the ALET for the CRED      30790001
*                                  structure.                        */ 30800001
*   3 CLID_CRED@      PTR(31); /* Address of the CRED structure.     */ 30810001
*                                                                       30820001
* DECLARE                                                               30830001
*  CLID_LEN FIXED(31) CONSTANT(LENGTH(CLID)); /* Constant CLID length*/ 30840001
*                                                                       30850001
*/********************************************************************/ 30860001
*/*                                                                  */ 30870001
*/*               CAUD PL/X DECLARATIONS                             */ 30880001
*/*------------------------------------------------------------------*/ 30890001
*/*                                                                  */ 30900001
*/* DECLARATION NAME = CAUD                                          */ 30910001
*/*                                                                  */ 30920001
*/* DESCRIPTIVE NAME =   OMVS  RACF Change File Audit Options input  */ 30930001
*/*                    parameter list.                               */ 30940001
*/*                                                                  */ 30950001
*/* FUNCTION = Provides the PL/X mapping of the input parameter      */ 30960001
*/*            list for the   OMVS  Change File Audit Options        */ 30970001
*/*            routine.                                              */ 30980001
*/*                                                                  */ 30990001
*/********************************************************************/ 31000001
*                                                                       31010001
* DECLARE                                                               31020001
*  1 CAUD  BASED(ADDR(COMP_SERVR_PARMS)),                               31030001
*                                                                       31040001
*   3 CAUD_AO_ALET@  PTR(31),/* Address of the ALET for the Audit       31050001
*                                Options.                            */ 31060001
*                                                                       31070001
*   3 CAUD_AO@   PTR(31),/* Addr of 4 bytes that contain an Audit       31080001
*                            Option for each type of access:            31090001
*                             Byte 1 - read access audit options.       31100001
*                             Byte 2 - write access audit options.      31110001
*                             Byte 3 - execute/search audit options.    31120001
*                               Each of the first three bytes contain   31130001
*                               an Audit Option:                   @P1C 31140001
*                               x'00' - don't audit any access attempts 31150001
*                               x'01' - audit successful access.        31160001
*                               x'02' - audit failed access attempts.   31170001
*                             Byte 4 - audit flag.                 @P1C 31180001
*                               In the last byte, the last bit     @P1A 31190001
*                               indicates:                         @P1A 31200001
*                               x'00' - set user audit options.    @P1A 31210001
*                               x'01' - set auditor audit options. @P1A 31220001
*                                                                    */ 31230001
*                                                                       31240001
*   3 CAUD_FSP_ALET@  PTR(31), /* Address of the ALET for the FSP       31250001
*                                  structure.                        */ 31260001
*                                                                       31270001
*   3 CAUD_FSP@       PTR(31), /* Address of the FSP structure.      */ 31280001
*                                                                       31290001
*   3 CAUD_FID_ALET@  PTR(31), /* Address of the ALET for the file id*/ 31300001
*                                                                       31310001
*   3 CAUD_FID@       PTR(31), /* Address of the File Id which is a 16  31320001
*                                  byte area that contains a unique     31330001
*                                  identifier of the file.           */ 31340001
*                                                                       31350001
*   3 CAUD_CRED_ALET@ PTR(31), /* Address of the ALET for the CRED      31360001
*                                  structure.                        */ 31370001
*                                                                       31380001
*   3 CAUD_CRED@      PTR(31); /* Address of the CRED structure.     */ 31390001
*                                                                       31400001
*                                                                       31410001
* DECLARE                                                               31420001
*  CAUD_LEN FIXED(31) CONSTANT(LENGTH(CAUD)); /* Constant CAUD length*/ 31430001
*                                                                       31440001
*/********************************************************************/ 31450001
*/*                                                                  */ 31460001
*/*               COWN PL/X DECLARATIONS                             */ 31470001
*/*------------------------------------------------------------------*/ 31480001
*/*                                                                  */ 31490001
*/* DECLARATION NAME = COWN                                          */ 31500001
*/*                                                                  */ 31510001
*/* DESCRIPTIVE NAME =   OMVS  RACF Change Owner and Group input     */ 31520001
*/*                    parameter list.                               */ 31530001
*/*                                                                  */ 31540001
*/* FUNCTION = Provides the PL/X mapping of the input parameter      */ 31550001
*/*            list for the   OMVS  Change Owner and Group service   */ 31560001
*/*            routine.                                              */ 31570001
*/*                                                                  */ 31580001
*/********************************************************************/ 31590001
*                                                                       31600001
* DECLARE                                                               31610001
*  1 COWN  BASED(ADDR(COMP_SERVR_PARMS)),                               31620001
*                                                                       31630001
*   3 COWN_UID_ALET@  PTR(31), /* Address of ALET for Uid to be set. */ 31640001
*                                                                       31650001
*   3 COWN_UID@       PTR(31), /* Addr of the Uid to be set as the      31660001
*                                  file owner Uid.                   */ 31670001
*                                                                       31680001
*   3 COWN_GID_ALET@  PTR(31), /* Addr of ALET for Gid to be set.    */ 31690001
*                                                                       31700001
*   3 COWN_GID@       PTR(31), /* Addr of the Gid to be set as the      31710001
*                                  file owner Gid.                   */ 31720001
*                                                                       31730001
*   3 COWN_FSP_ALET@  PTR(31), /* Address of the ALET for the FSP       31740001
*                                  structure.                        */ 31750001
*                                                                       31760001
*   3 COWN_FSP@       PTR(31), /* Address of the FSP structure.      */ 31770001
*                                                                       31780001
*   3 COWN_FID_ALET@  PTR(31), /* Address of the ALET for the file id*/ 31790001
*                                                                       31800001
*   3 COWN_FID@       PTR(31), /* Address of the File Id which is a 16  31810001
*                                  byte area that contains a unique     31820001
*                                  identifier of the file.           */ 31830001
*                                                                       31840001
*   3 COWN_CRED_ALET@ PTR(31), /* Address of the ALET for the CRED      31850001
*                                  structure.                        */ 31860001
*                                                                       31870001
*   3 COWN_CRED@      PTR(31); /* Address of the CRED structure.     */ 31880001
*                                                                       31890001
*                                                                       31900001
* DECLARE                                                               31910001
*  COWN_LEN FIXED(31) CONSTANT(LENGTH(COWN)); /* Constant COWN length*/ 31920001
*                                                                       31930001
*/********************************************************************/ 31940001
*/*                                                                  */ 31950001
*/*               UMSK PL/X DECLARATIONS                             */ 31960001
*/*------------------------------------------------------------------*/ 31970001
*/*                                                                  */ 31980001
*/* DECLARATION NAME = UMSK                                          */ 31990001
*/*                                                                  */ 32000001
*/* DESCRIPTIVE NAME =   OMVS  RACF Set File Mode Creation Mask      */ 32010001
*/*                    input parameter list.                         */ 32020001
*/*                                                                  */ 32030001
*/* FUNCTION = Provides the PL/X mapping of the input parameter      */ 32040001
*/*            list for the   OMVS  Set File Mode Creation Mask      */ 32050001
*/*            service routine.                                      */ 32060001
*/*                                                                  */ 32070001
*/********************************************************************/ 32080001
*                                                                       32090001
* DECLARE                                                               32100001
*  1 UMSK  BASED(ADDR(COMP_SERVR_PARMS)),                               32110001
*                                                                       32120001
*   3 UMSK_MODE_ALET@  PTR(31), /* Address of the ALET for the mode     32130001
*                                   structure.                       */ 32140001
*                                                                       32150001
*   3 UMSK_MODE@       PTR(31); /* Address of the mode parameter.    */ 32160001
*                                                                       32170001
* DECLARE                                                               32180001
*  UMSK_LEN FIXED(31) CONSTANT(LENGTH(UMSK)); /* Constant UMSK length*/ 32190001
*                                                                       32200001
*/********************************************************************/ 32210001
*/*                                                                  */ 32220001
*/*               KACC PL/X DECLARATIONS                             */ 32230001
*/*------------------------------------------------------------------*/ 32240001
*/*                                                                  */ 32250001
*/* DECLARATION NAME = KACC                                          */ 32260001
*/*                                                                  */ 32270001
*/* DESCRIPTIVE NAME =   OMVS  RACF Check Access input parameter     */ 32280001
*/*                    list.                                         */ 32290001
*/*                                                                  */ 32300001
*/* FUNCTION = Provides the PL/X mapping of the input parameter      */ 32310001
*/*            list for the   OMVS  Check Access service routine.    */ 32320001
*/*                                                                  */ 32330001
*/********************************************************************/ 32340001
*                                                                       32350001
* DECLARE                                                               32360001
*  1 KACC  BASED(ADDR(COMP_SERVR_PARMS)),                               32370001
*                                                                       32380001
*   3 KACC_ACODE_ALET@ PTR(31),/* Address of the ALET for the access    32390001
*                                   code.                            */ 32400001
*                                                                       32410001
*   3 KACC_ACODE@      PTR(31),/* Address of a 1 byte access code       32420001
*                                  that contains:                       32430001
*                                   x'01' - execute access.             32440001
*                                   x'02' - write access.               32450001
*                                   x'03' - write and execute access.   32460001
*                                   x'04' - read access.                32470001
*                                   x'05' - read and execute access.    32480001
*                                   x'06' - read and write access.      32490001
*                                   x'07' - read, write and execute     32500001
*                                            access.                    32510001
*                                   x'81' - directory search access.    32520001
*                                   x'87' - any access.              */ 32530001
*                                                                       32540001
*   3 KACC_FSP_ALET@   PTR(31),/* Address of the ALET for the FSP       32550001
*                                  structure.                        */ 32560001
*                                                                       32570001
*   3 KACC_FSP@        PTR(31),/* Address of the FSP structure.      */ 32580001
*                                                                       32590001
*   3 KACC_FID_ALET@   PTR(31),/* Address of the ALET for the file id*/ 32600001
*                                                                       32610001
*   3 KACC_FID@        PTR(31),/* Address of the File Id which is a 16  32620001
*                                  byte area that contains a unique     32630001
*                                  identifier of the file.           */ 32640001
*                                                                       32650001
*   3 KACC_CRED_ALET@  PTR(31),/* Address of the ALET for the CRED      32660001
*                                  structure.                        */ 32670001
*                                                                       32680001
*   3 KACC_CRED@       PTR(31),/* Address of the CRED structure.     */ 32690001
*                                                                       32700001
*   3 KACC_FLAG_ALET@  PTR(31),/* Address of the ALET for the name      32710001
*                                  flag byte.                        */ 32720001
*                                                                       32730001
*   3 KACC_FLAG@       PTR(31);/* Address of a byte flag that indicates 32740001
*                                  which name is being checked:         32750001
*                                   x'00' - Use the CRED_name_flag to   32760001
*                                           determine path name being   32770001
*                                           checked. Used by lookup.    32780001
*                                                                       32790001
*                                   x'01' - The old (or only) name is   32800001
*                                           being checked. Used by all  32810001
*                                           calls except lookup and     32820001
*                                           when rename and link are    32830001
*                                           checking for write access   32840001
*                                           to the parent directory of  32850001
*                                           the new path name file.     32860001
*                                                                       32870001
*                                   x'02' - The new name is being       32880001
*                                           checked. Used by rename     32890001
*                                           and link when checking for  32900001
*                                           write access to the parent  32910001
*                                           directory of the new path   32920001
*                                           name file.               */ 32930001
*                                                                       32940001
*                                                                       32950001
*                                                                       32960001
* DECLARE                                                               32970001
*  KACC_LEN FIXED(31) CONSTANT(LENGTH(KACC)); /* Constant KACC length*/ 32980001
*                                                                       32990001
*                                                                       33000001
*/********************************************************************/ 33010001
*/*                                                                  */ 33020001
*/*               QRYF PL/X DECLARATIONS                             */ 33030001
*/*------------------------------------------------------------------*/ 33040001
*/*                                                                  */ 33050001
*/* DECLARATION NAME = QRYF                                          */ 33060001
*/*                                                                  */ 33070001
*/* DESCRIPTIVE NAME =   OMVS  RACF Query File Security Options      */ 33080001
*/*                    input parameter list.                         */ 33090001
*/*                                                                  */ 33100001
*/* FUNCTION = Provides the PL/X mapping of the input parameter list */ 33110001
*/*            for the   OMVS  Query File Security Options service   */ 33120001
*/*            routine.                                              */ 33130001
*/*                                                                  */ 33140001
*/********************************************************************/ 33150001
*                                                                       33160001
* DECLARE                                                               33170001
*  1 QRYF  BASED(ADDR(COMP_SERVR_PARMS)),                               33180001
*                                                                       33190001
*   3 QRYF_OCODE_ALET@ PTR(31),/* Address of the ALET for the option    33200001
*                                  code.                             */ 33210001
*                                                                       33220001
*   3 QRYF_OCODE@      PTR(31),/* Address of a 1 word option code       33230001
*                                  that contains:                       33240001
*                                  x'00000001'-POSIX_CHOWN_RESTRICTED*/ 33250001
*                                                                       33260001
*   3 QRYF_OUTV_ALET@  PTR(31),/* Address of the ALET for the output    33270001
*                                  value.                            */ 33280001
*                                                                       33290001
*   3 QRYF_OUTV@       PTR(31);/* Address of the output value:          33300001
*                                   0 - POSIX_CHOWN_RESTRICTED.         33310001
*                                  -1 - Not POSIX_CHOWN_RESTRICTED.  */ 33320001
*                                                                       33330001
* DECLARE                                                               33340001
*  QRYF_LEN FIXED(31) CONSTANT(LENGTH(QRYF)); /* Constant QRYF length*/ 33350001
*                                                                       33360001
*                                                                       33370001
*/********************************************************************/ 33380001
*                                                            /* 6@P2D*/ 33390001
*/*                                                                  */ 33400001
*/*                    KFOW PL/X DECLARATIONS                        */ 33410001
*/*------------------------------------------------------------------*/ 33420001
*/*                                                                  */ 33430001
*/* DECLARATION NAME = KFOW                                          */ 33440001
*/*                                                                  */ 33450001
*/* DESCRIPTIVE NAME =   OMVS  RACF Check File Owner input parameter */ 33460001
*/*                    list.                                         */ 33470001
*/*                                                                  */ 33480001
*/* FUNCTION = Provides the PL/X mapping of the input parameter list */ 33490001
*/*            for the   OMVS  Check File Owner service routine.     */ 33500001
*/*                                                                  */ 33510001
*/********************************************************************/ 33520001
*                                                                       33530001
* DECLARE                                                               33540001
*  1 KFOW  BASED(ADDR(COMP_SERVR_PARMS)),                               33550001
*                                                                       33560001
*   3 KFOW_FSP_ALET@   PTR(31),/* Address of the ALET for the FSP       33570001
*                                  structure.                        */ 33580001
*                                                                       33590001
*   3 KFOW_FSP@        PTR(31),/* Address of the FSP structure.      */ 33600001
*                                                                       33610001
*   3 KFOW_FID_ALET@   PTR(31),/* Address of the ALET for the file id*/ 33620001
*                                                                       33630001
*   3 KFOW_FID@        PTR(31),/* Address of the File Id which is a 16  33640001
*                                  byte area that contains a unique     33650001
*                                  identifier of the file.           */ 33660001
*                                                                       33670001
*   3 KFOW_CRED_ALET@  PTR(31),/* Address of the ALET for the CRED      33680001
*                                  structure.                        */ 33690001
*                                                                       33700001
*   3 KFOW_CRED@       PTR(31);/* Address of the CRED structure.     */ 33710001
*                                                                       33720001
* DECLARE                                                               33730001
*  KFOW_LEN FIXED(31) CONSTANT(LENGTH(KFOW)); /* Constant KFOW length*/ 33740001
*                                                                       33750001
*/********************************************************************/ 33760001
*/*                                                                  */ 33770001
*/*                    MKRT PL/X DECLARATIONS                        */ 33780001
*/*------------------------------------------------------------------*/ 33790001
*/*                                                                  */ 33800001
*/* DECLARATION NAME = MKRT                                          */ 33810001
*/*                                                                  */ 33820001
*/* DESCRIPTIVE NAME =   OMVS  RACF Make Root FSP input parameter    */ 33830001
*/*                    list.                                         */ 33840001
*/*                                                                  */ 33850001
*/* FUNCTION =Provides the PL/X mapping of the input parameter list  */ 33860001
*/*            for the   OMVS  Make Root FSP service routine.        */ 33870001
*/*                                                                  */ 33880001
*/********************************************************************/ 33890001
*                                                                       33900001
* DECLARE                                                               33910001
*  1 MKRT  BASED(ADDR(COMP_SERVR_PARMS)),                               33920001
*                                                                       33930001
*   3 MKRT_MODE_ALET@  PTR(31), /* Address of the ALET for the mode     33940001
*                                   structure.                       */ 33950001
*                                                                       33960001
*   3 MKRT_MODE@       PTR(31), /* Address of the mode parameter.    */ 33970001
*                                                                       33980001
*   3 MKRT_OFSP_ALET@  PTR(31),/* Address of the ALET for the output    33990001
*                                  FSP.                              */ 34000001
*                                                                       34010001
*   3 MKRT_OFSP@       PTR(31),/* Address of the output FSP.         */ 34020001
*                                                                       34030001
*   3 MKRT_FID_ALET@   PTR(31),/* Address of the ALET for the file id*/ 34040001
*                                                                       34050001
*   3 MKRT_FID@        PTR(31),/* Address of the File Id which is a 16  34060001
*                                  byte area that contains a unique     34070001
*                                  identifier of the file.           */ 34080001
*                                                                       34090001
*   3 MKRT_DSN_ALET@   PTR(31),/* Address of the ALET for the dataset   34100001
*                                  name.                             */ 34110001
*                                                                       34120001
*   3 MKRT_DSN@        PTR(31);/* Address of an area that contains the  34130001
*                                  name of the PDSE/x data set being    34140001
*                                  created. (44 character length)    */ 34150001
*                                                                       34160001
* DECLARE                                                               34170001
*  MKRT_LEN FIXED(31) CONSTANT(LENGTH(MKRT)); /* Constant MKRT length*/ 34180001
*                                                                       34190001
*                                                                       34200001
*/********************************************************************/ 34210001
*/*                                                                  */ 34220001
*/*               PTRC PL/X DECLARATIONS                             */ 34230001
*/*------------------------------------------------------------------*/ 34240001
*/*                                                                  */ 34250001
*/* DECLARATION NAME = PTRC                                          */ 34260001
*/*                                                                  */ 34270001
*/* DESCRIPTIVE NAME =   OMVS  RACF Check PTRACE Authority input     */ 34280001
*/*                    parameter list.                               */ 34290001
*/*                                                                  */ 34300001
*/* FUNCTION = Provides the PL/X mapping of the input parameter list */ 34310001
*/*            for the   OMVS  Check PTRACE Authority service        */ 34320001
*/*            routine.                                              */ 34330001
*/*                                                                  */ 34340001
*/********************************************************************/ 34350001
*                                                                       34360001
* DECLARE                                                               34370001
*  1 PTRC  BASED(ADDR(COMP_SERVR_PARMS)),                               34380001
*                                                                       34390001
*   3 PTRC_TUID_ALET@ PTR(31),/* Address of ALET for the target UIDs    34400001
*                                  area.                             */ 34410001
*                                                                       34420001
*   3 PTRC_TUID@      PTR(31),/* Address of a 3 word area that contains 34430001
*                                  the REAL, EFFECTIVE, and SAVED UIDs  34440001
*                                  (in that order) for the target       34450001
*                                   process.                         */ 34460001
*                                                                       34470001
*   3 PTRC_TGID_ALET@ PTR(31),/* Address of ALET for the target GIDs    34480001
*                                 area.                              */ 34490001
*                                                                       34500001
*   3 PTRC_TGID@      PTR(31),/* Address of a 3 word area that contains 34510001
*                                 the REAL, EFFECTIVE, and SAVED GIDs   34520001
*                                 (in that order) for the target        34530001
*                                  process.                          */ 34540001
*   3 PTRC_TPID_ALET@ PTR(31),/* Address of ALET for the target PID. */ 34550001
*                                                                       34560001
*                                                                       34570001
*                                                                       34580001
*   3 PTRC_TPID@      PTR(31);/* Address of a word that contains the    34590001
*                                 PID of the target process.         */ 34600001
*                                                                       34610001
* DECLARE                                                               34620001
*  PTRC_LEN FIXED(31) CONSTANT(LENGTH(PTRC)); /* Constant PTRC length*/ 34630001
*                                                                       34640001
*/********************************************************************/ 34650001
*/*                                                                  */ 34660001
*/*               MFSP PL/X DECLARATIONS                             */ 34670001
*/*------------------------------------------------------------------*/ 34680001
*/*                                                                  */ 34690001
*/* DECLARATION NAME = MFSP                                          */ 34700001
*/*                                                                  */ 34710001
*/* DESCRIPTIVE NAME =   OMVS  RACF Make FSP input parameter list.   */ 34720001
*/*                                                                  */ 34730001
*/* FUNCTION = Provides the PL/X mapping of the input parameter list */ 34740001
*/*            for the   OMVS  Make FSP service routine.             */ 34750001
*/*                                                                  */ 34760001
*/********************************************************************/ 34770001
*                                                                       34780001
* DECLARE                                                               34790001
*  1 MFSP  BASED(ADDR(COMP_SERVR_PARMS)),                               34800001
*                                                                       34810001
*   3 MFSP_MODE_ALET@  PTR(31), /* Address of the ALET for the mode     34820001
*                                   structure.                       */ 34830001
*                                                                       34840001
*   3 MFSP_MODE@       PTR(31), /* Address of the mode parameter.    */ 34850001
*                                                                       34860001
*   3 MFSP_OFSP_ALET@  PTR(31),/* Address of the ALET for the output    34870001
*                                  FSP.                              */ 34880001
*                                                                       34890001
*   3 MFSP_OFSP@       PTR(31),/* Address of the output FSP.         */ 34900001
*                                                                       34910001
*   3 MFSP_ODFSP_ALET@ PTR(31),/* Address of the ALET for the owning    34920001
*                                  directory FSP.                    */ 34930001
*                                                                       34940001
*   3 MFSP_ODFSP@      PTR(31),/* Address of the owning directory FSP*/ 34950001
*                                                                       34960001
*   3 MFSP_FID_ALET@  PTR(31), /* Address of the ALET for the file id*/ 34970001
*                                                                       34980001
*   3 MFSP_FID@       PTR(31), /* Address of the File Id which is a 16  34990001
*                                  byte area that contains a unique     35000001
*                                  identifier of the file.           */ 35010001
*   3 MFSP_CRED_ALET@  PTR(31), /* Address of the ALET for the CRED     35020001
*                                   structure.                       */ 35030001
*                                                                       35040001
*   3 MFSP_CRED@       PTR(31); /* Address of the CRED structure.    */ 35050001
*                                                                       35060001
*                                                                       35070001
* DECLARE                                                               35080001
*  MFSP_LEN FIXED(31) CONSTANT(LENGTH(MFSP)); /* Constant MFSP length*/ 35090001
*                                                                       35100001
*/********************************************************************/ 35110001
*/*                                                                  */ 35120001
*/*               RAUD PL/X DECLARATIONS                             */ 35130001
*/*------------------------------------------------------------------*/ 35140001
*/*                                                                  */ 35150001
*/* DECLARATION NAME = RAUD                                          */ 35160001
*/*                                                                  */ 35170001
*/* DESCRIPTIVE NAME =   OMVS  RACF Audit input parameter list.      */ 35180001
*/*                                                                  */ 35190001
*/* FUNCTION = Provides the PL/X mapping of the input parameter list */ 35200001
*/*            for the   OMVS  Audit service routine.                */ 35210001
*/*                                                                  */ 35220001
*/********************************************************************/ 35230001
*                                                                       35240001
*                                                                       35250001
* DECLARE                                                               35260001
*  1 RAUD  BASED(ADDR(COMP_SERVR_PARMS)),                               35270001
*                                                                       35280001
*   3 RAUD_CRED_ALET@  PTR(31),/* Address of ALET for CRED structure.*/ 35290001
*                                                                       35300001
*   3 RAUD_CRED@       PTR(31),/* Address of the CRED structure.     */ 35310001
*                                                                       35320001
*   3 RAUD_OFID_ALET@  PTR(31),/* Address of ALET for the File Id of    35330001
*                                 the old (or only) file.            */ 35340001
*                                                                       35350001
*   3 RAUD_OFID@       PTR(31),/* Address of the File Id for the old    35360001
*                                  (or only) file. The File Id is a     35370001
*                                  16 byte area that contains a unique  35380001
*                                  identifier of the file.           */ 35390001
*                                                                       35400001
*   3 RAUD_OFSP_ALET@  PTR(31),/* Address of ALET for the FSP for the   35410001
*                                  old (or only) file.               */ 35420001
*                                                                       35430001
*   3 RAUD_OFSP@       PTR(31),/* Address of the FSP for the old        35440001
*                                  (or only) file.                   */ 35450001
*                                                                       35460001
*   3 RAUD_FLAG_ALET@  PTR(31),/* Address of ALET for the flag byte. */ 35470001
*                                                                       35480001
*   3 RAUD_FLAG@       PTR(31),/* Address of a flag byte that           35490001
*                                 indicates:                            35500001
*                                  x'00' - last link was not removed.   35510001
*                                  x'01' - last link was removed for    35520001
*                                          a file. The file is deleted. 35530001
*                                This parameter is used only on rename  35540001
*                                and unlink. On a rename, the new name  35550001
*                                is deleted. On unlink, the 'only'      35560001
*                                name was deleted.                   */ 35570001
*                                                                       35580001
*   3 RAUD_NFID_ALET@  PTR(31),/* Address of ALET for the File Id of    35590001
*                                  the NEW file. This parameter is      35600001
*                                  used only on a rename.            */ 35610001
*                                                                       35620001
*   3 RAUD_NFID@       PTR(31),/* Address of the File Id for the NEW    35630001
*                                 file. This parameter is used only     35640001
*                                 on a rename. The File Id is a         35650001
*                                 16 byte area that contains a unique   35660001
*                                 identifier of the file.            */ 35670001
*                                                                       35680001
*   3 RAUD_NFSP_ALET@ PTR(31),/* Address of ALET for the FSP for the    35690001
*                                 NEW file. This parameter is used      35700001
*                                 only on a rename.                  */ 35710001
*                                                                       35720001
*   3 RAUD_NFSP@      PTR(31);/* Address of the FSP for the NEW file.   35730001
*                                 This parameter is used only on a      35740001
*                                 rename.                            */ 35750001
*                                                                       35760001
* DECLARE                                                               35770001
*  RAUD_LEN FIXED(31) CONSTANT(LENGTH(RAUD)); /* Constant RAUD length*/ 35780001
*                                                                       35790001
*/********************************************************************/ 35800001
*/*                                                                  */ 35810001
*/*                     GUGP PL/X DECLARATIONS                       */ 35820001
*/*------------------------------------------------------------------*/ 35830001
*/*                                                                  */ 35840001
*/* DECLARATION NAME = GUGP                                          */ 35850001
*/*                                                                  */ 35860001
*/* DESCRIPTIVE NAME =   OMVS  RACF Get Supplemental Groups input    */ 35870001
*/*                    parameter list.                               */ 35880001
*/*                                                                  */ 35890001
*/* FUNCTION = Provides the PL/X mapping of the input parameter      */ 35900001
*/*            list for the   OMVS  RACF Get Supplemental Groups     */ 35910001
*/*            service routine.                                      */ 35920001
*/*                                                                  */ 35930001
*/********************************************************************/ 35940001
*                                                                       35950001
* DECLARE                                                               35960001
*  1 GUGP  BASED(ADDR(COMP_SERVR_PARMS)),                               35970001
*   3 GUGP_KEY_ALET@   PTR(31), /* Addr of ALET for the user's  key. */ 35980001
*                                                                       35990001
*   3 GUGP_KEY@        PTR(31), /* Address of a byte that contains      36000001
*                                   the user's key. The key is in the   36010001
*                                   high order 4 bits of the byte.   */ 36020001
*                                                                       36030001
*   3 GUGP_NLEN_ALET@  PTR(31), /* Address of ALET for the USERID       36040001
*                                   length                           */ 36050001
*                                                                       36060001
*   3 GUGP_NLEN@       PTR(31), /* Address of 1 byte USERID Length.  */ 36070001
*                                                                       36080001
*   3 GUGP_NAME_ALET@  PTR(31), /* Address of ALET for the USERID.   */ 36090001
*                                                                       36100001
*   3 GUGP_NAME@       PTR(31), /* Address of 8 byte USERID.         */ 36110001
*                                                                       36120001
*   3 GUGP_GCNT_ALET@  PTR(31), /* Addr of ALET for the Group Count. */ 36130001
*                                                                       36140001
*   3 GUGP_GCNT@       PTR(31), /* Address of the group count. (A one   36150001
*                                   word area that contains the number  36160001
*                                   of GIDs in the Grouplist area.)  */ 36170001
*                                                                       36180001
*   3 GUGP_GLST_ALET@  PTR(31), /* Addr of ALET for the Group List.  */ 36190001
*                                                                       36200001
*   3 GUGP_GLST@       PTR(31), /* Addr of the Group List area in which 36210001
*                                  supplemental GIDs are returned.   */ 36220001
*                                                                       36230001
*   3 GUGP_GNUM_ALET@  PTR(31), /* Addr of ALET for number of groups.*/ 36240001
*                                                                       36250001
*   3 GUGP_GNUM@       PTR(31); /* Addr of the Number of Groups. (A     36260001
*                                   one word area in which the number   36270001
*                                   of supplemental group GIDs is       36280001
*                                   returned.)                       */ 36290001
* DECLARE                                                               36300001
*  GUGP_LEN FIXED(31) CONSTANT(LENGTH(GUGP)); /* Constant GUGP length*/ 36310001
*                                                                       36320001
*                                                                       36330001
*/********************************************************************/ 36340001
*/*                                                                  */ 36350001
*/*               FORK PL/X DECLARATIONS                             */ 36360001
*/*------------------------------------------------------------------*/ 36370001
*/*                                                                  */ 36380001
*/* DECLARATION NAME = FORK                                          */ 36390001
*/*                                                                  */ 36400001
*/* DESCRIPTIVE NAME =   OMVS  RACF FORK Exit input parameter list.  */ 36410001
*/*                                                                  */ 36420001
*/* FUNCTION = Provides the PL/X mapping of the input parameter list */ 36430001
*/*            for the   OMVS  RACF FORK Exit service routine.       */ 36440001
*/*                                                                  */ 36450001
*/********************************************************************/ 36460001
*                                                                       36470001
* DECLARE                                                               36480001
*  1 FORK  BASED(ADDR(COMP_SERVR_PARMS)),                               36490001
*                                                                       36500001
*   3 FORK_FLAG_ALET@  PTR(31), /* Address of ALET for fork flag.    */ 36510001
*                                                                       36520001
*   3 FORK_FLAG@       PTR(31), /* Address of a word flag that          36530001
*                                   indicates the current type of       36540001
*                                   processing:                         36550001
*                                    x'00' - Fork Parent Processing.    36560001
*                                    x'02' - Fork Parent Processing     36570001
*                                            Extended Data              36580001
*                                    x'01' - Forked Child Processing.   36590001
*                                    x'03' - Forked Child Processing    36600001
*                                            Extended Data       @LGC*/ 36610001
*                                                                       36620001
*   3 FORK_DATAKEY_ALET@ PTR(31),/* Address of ALET for data's          36630001
*                                   storage key.                     */ 36640001
*                                                                       36650001
*   3 FORK_DATAKEY@    PTR(31), /* Address of a word that contains the  36660001
*                                   storage key from which the storage  36670001
*                                   for the data is to be obtained.  */ 36680001
*                                                                       36690001
*   3 FORK_DATALEN_ALET@ PTR(31), /* Address of ALET for data length.*/ 36700001
*                                                                       36710001
*   3 FORK_DATALEN@    PTR(31), /* Address of a word that contains the  36720001
*                                   data length.                     */ 36730001
*                                                                       36740001
*   3 FORK_DATA_ALET@  PTR(31), /* Address of the data's ALET.       */ 36750001
*                                                                       36760001
*   3 FORK_DATA@       PTR(31), /* Address of the data being passed     36770001
*                                   from the parent to the child via    36780001
*                                   FORK.                            */ 36790001
*                                                                       36800001
*   3 FORK_DATASP_ALET@ PTR(31),/* Address of ALET for data subpool. */ 36810001
*                                                                       36820001
*   3 FORK_DATASP@     PTR(31); /* Address of a word that contains the  36830001
*                                   subpool from which to obtain the    36840001
*                                   storage to hold the data.        */ 36850001
*                                                                       36860001
* DECLARE                                                               36870001
*  FORK_LEN FIXED(31) CONSTANT(LENGTH(FORK)), /* Constant FORK length*/ 36880001
*  FORK_PARENT FIXED(31) CONSTANT(0), /* Fork Parent Processing flag.*/ 36890001
*  FORK_PARENTX FIXED(31) CONSTANT(2), /* Fork Parent Processing        36900001
*                                         Extended Data flag.    @LGA*/ 36910001
*  FORK_CHILD  FIXED(31) CONSTANT(1), /* Fork Child Processing flag. */ 36920001
*  FORK_CHILDX  FIXED(31) CONSTANT(3); /* Fork Child Processing         36930001
*                                         Extended Data flag.    @LGA*/ 36940001
*                                                                       36950001
*/********************************************************************/ 36960001
*/*                                                                  */ 36970001
*/*               MISP PL/X DECLARATIONS                             */ 36980001
*/*------------------------------------------------------------------*/ 36990001
*/*                                                                  */ 37000001
*/* DECLARATION NAME = MISP                                          */ 37010001
*/*                                                                  */ 37020001
*/* DESCRIPTIVE NAME =   OMVS  RACF Make ISP input parameter list.   */ 37030001
*/*                                                                  */ 37040001
*/* FUNCTION = Provides the PL/X mapping of the input parameter list */ 37050001
*/*            for the   OMVS  Make ISP service routine.             */ 37060001
*/*                                                                  */ 37070001
*/********************************************************************/ 37080001
*                                                                       37090001
* DECLARE                                                               37100001
*  1 MISP  BASED(ADDR(COMP_SERVR_PARMS)),                               37110001
*                                                                       37120001
*   3 MISP_MODE_ALET@  PTR(31), /* Address of the ALET for the mode     37130001
*                                   structure.                   @L1A*/ 37140001
*                                                                       37150001
*   3 MISP_MODE@       PTR(31), /* Address of the mode parameter.@L1A*/ 37160001
*                                                                       37170001
*   3 MISP_OISP_ALET@  PTR(31),/* Address of the ALET for the output    37180001
*                                  ISP.                          @L1A*/ 37190001
*                                                                       37200001
*   3 MISP_OISP@       PTR(31),/* Address of the output ISP.     @L1A*/ 37210001
*                                                                       37220001
*   3 MISP_OIPC_ALET@  PTR(31),/* Address of the ALET for the output    37230001
*                                  IPCP.                         @L1A*/ 37240001
*                                                                       37250001
*   3 MISP_OIPC@       PTR(31),/* Address of the output IPCP.    @L1A*/ 37260001
*                                                                       37270001
*   3 MISP_CREI_ALET@  PTR(31), /* Address of the ALET for the CREDIPC  37280001
*                                   structure.                   @L1A*/ 37290001
*                                                                       37300001
*   3 MISP_CREI@       PTR(31); /* Address of the CREDIPC structure.    37310001
*                                                                @L1A*/ 37320001
*                                                                       37330001
*                                                                       37340001
* DECLARE                                                               37350001
*  MISP_LEN FIXED(31) CONSTANT(LENGTH(MISP)); /* Constant MISP length   37360001
*                                                                @L1A*/ 37370001
*                                                                       37380001
*/********************************************************************/ 37390001
*/*                                                                  */ 37400001
*/*               IACC PL/X DECLARATIONS                             */ 37410001
*/*------------------------------------------------------------------*/ 37420001
*/*                                                                  */ 37430001
*/* DECLARATION NAME = IACC                                          */ 37440001
*/*                                                                  */ 37450001
*/* DESCRIPTIVE NAME =   OMVS  RACF Check Access input parameter     */ 37460001
*/*                    list.                                         */ 37470001
*/*                                                                  */ 37480001
*/* FUNCTION = Provides the PL/X mapping of the input parameter      */ 37490001
*/*            list for the   OMVS  Check Access service routine.    */ 37500001
*/*                                                                  */ 37510001
*/********************************************************************/ 37520001
*                                                                       37530001
* DECLARE                                                               37540001
*  1 IACC  BASED(ADDR(COMP_SERVR_PARMS)),                               37550001
*                                                                       37560001
*   3 IACC_ACODE_ALET@ PTR(31),/* Address of the ALET for the access    37570001
*                                   code.                        @L1A*/ 37580001
*                                                                       37590001
*   3 IACC_ACODE@      PTR(31),/* Address of a 1 byte access code       37600001
*                                  that contains:                       37610001
*                                   x'00' - no access.                  37620001
*                                   x'02' - write access.               37630001
*                                   x'04' - read access.                37640001
*                                   x'06' - read and write access.      37650001
*                                                                @L1A*/ 37660001
*                                                                       37670001
*   3 IACC_ISP_ALET@   PTR(31),/* Address of the ALET for the ISP       37680001
*                                  structure.                    @L1A*/ 37690001
*                                                                       37700001
*   3 IACC_ISP@        PTR(31),/* Address of the ISP structure.  @L1A*/ 37710001
*                                                                       37720001
*                                                                       37730001
*   3 IACC_CREI_ALET@  PTR(31),/* Address of the ALET for the CREDIPC   37740001
*                                  structure.                    @L1A*/ 37750001
*                                                                       37760001
*   3 IACC_CREI@       PTR(31);/* Address of the CREDIPC structure.     37770001
*                                                                @L1A*/ 37780001
*                                                                       37790001
*                                                                       37800001
*                                                                       37810001
*                                                                       37820001
* DECLARE                                                               37830001
*  IACC_LEN FIXED(31) CONSTANT(LENGTH(IACC)); /* Constant IACC length   37840001
*                                                                @L1A*/ 37850001
*                                                                       37860001
*                                                                       37870001
*/********************************************************************/ 37880001
*/*                                                                  */ 37890001
*/*               IOWN PL/X DECLARATIONS                             */ 37900001
*/*------------------------------------------------------------------*/ 37910001
*/*                                                                  */ 37920001
*/* DECLARATION NAME = IOWN                                          */ 37930001
*/*                                                                  */ 37940001
*/* DESCRIPTIVE NAME =   OMVS  RACF Perform R_IPC_control Change     */ 37950001
*/*                    Owner and Group input parameter list.     @03C*/ 37960001
*/*                                                                  */ 37970001
*/* FUNCTION = Provides the PL/X mapping of the input parameter      */ 37980001
*/*            list for the   OMVS  R_IPC_control Change Owner and   */ 37990001
*/*            Group service routine.                                */ 38000001
*/*                                                                  */ 38010001
*/********************************************************************/ 38020001
*                                                                       38030001
* DECLARE                                                               38040001
*  1 IOWN  BASED(ADDR(COMP_SERVR_PARMS)),                               38050001
*                                                                       38060001
*   3 IOWN_CMD_ALET@  PTR(31), /* Address of ALET for cmd code.  @L1A*/ 38070001
*                                                                       38080001
*   3 IOWN_CMD@       PTR(31), /* Address of cmd code.           @L1A*/ 38090001
*                                                                       38100001
*   3 IOWN_UID_ALET@  PTR(31), /* Address of ALET for Uid to be set.    38110001
*                                                                @L1A*/ 38120001
*                                                                       38130001
*   3 IOWN_UID@       PTR(31), /* Addr of the Uid to be set as the      38140001
*                                  ISP owner Uid.                @L1A*/ 38150001
*                                                                       38160001
*   3 IOWN_GID_ALET@  PTR(31), /* Addr of ALET for Gid to be set.@L1A*/ 38170001
*                                                                       38180001
*   3 IOWN_GID@       PTR(31), /* Addr of the Gid to be set as the      38190001
*                                  ISP owner Gid.                @L1A*/ 38200001
*                                                                       38210001
*   3 IOWN_MODE_ALET@  PTR(31), /* Address of the ALET for the mode     38220001
*                                   structure.                   @L1A*/ 38230001
*                                                                       38240001
*   3 IOWN_MODE@       PTR(31), /* Address of the mode parameter.@L1A*/ 38250001
*                                                                       38260001
*   3 IOWN_ISP_ALET@  PTR(31), /* Address of the ALET for the ISP       38270001
*                                  structure.                    @L1A*/ 38280001
*                                                                       38290001
*   3 IOWN_ISP@       PTR(31), /* Address of the ISP structure.  @L1A*/ 38300001
*                                                                       38310001
*   3 IOWN_CREI_ALET@ PTR(31), /* Address of the ALET for the CREDIPC   38320001
*                                  structure.                    @L1A*/ 38330001
*                                                                       38340001
*   3 IOWN_CREI@      PTR(31); /* Address of the CREDIPC structure.     38350001
*                                                                @L1A*/ 38360001
*                                                                       38370001
*                                                                       38380001
* DECLARE                                                               38390001
*  IOWN_LEN FIXED(31) CONSTANT(LENGTH(IOWN)); /* Constant IOWN length   38400001
*                                                                @L1A*/ 38410001
*                                                                       38420001
*/********************************************************************/ 38430001
*/*                                                                  */ 38440001
*/*               CKO2 PL/X DECLARATIONS                             */ 38450001
*/*------------------------------------------------------------------*/ 38460001
*/*                                                                  */ 38470001
*/* DECLARATION NAME = CKO2                                          */ 38480001
*/*                                                                  */ 38490001
*/* DESCRIPTIVE NAME =   OMVS  RACF Check owner two files input      */ 38500001
*/*                    parameter list.                               */ 38510001
*/*                                                                  */ 38520001
*/* FUNCTION = Provides the PL/X mapping of the input parameter      */ 38530001
*/*            list for the OMVS Check Owner two files routine.      */ 38540001
*/*                                                                  */ 38550001
*/********************************************************************/ 38560001
*                                                                       38570001
* DECLARE                                                               38580001
*  1 CKO2  BASED(ADDR(COMP_SERVR_PARMS)),                               38590001
*                                                                       38600001
*   3 CKO2_FSP1_ALET@ PTR(31), /* Address of ALET for the first         38610001
*                                  FSP structure.               @L2A */ 38620001
*                                                                       38630001
*   3 CKO2_FSP1@      PTR(31), /* Addr of the first FSP structure.      38640001
*                                                               @L2A */ 38650001
*                                                                       38660001
*   3 CKO2_FSP2_ALET@ PTR(31), /* Addr of ALET for the second FSP       38670001
*                                  structure.                   @L2A */ 38680001
*                                                                       38690001
*   3 CKO2_FSP2@      PTR(31), /* Addr of the second FSP structure.     38700001
*                                                               @L2A */ 38710001
*                                                                       38720001
*   3 CKO2_FID1_ALET@ PTR(31), /* Address of the ALET for the first     38730001
*                                  file ID.                     @L2A */ 38740001
*                                                                       38750001
*   3 CKO2_FID1@      PTR(31), /* Address of the first file ID. @L2A */ 38760001
*                                                                       38770001
*   3 CKO2_FID2_ALET@ PTR(31), /* Address of the ALET for the second    38780001
*                                  file ID.                     @L2A */ 38790001
*                                                                       38800001
*   3 CKO2_FID2@      PTR(31), /* Address of the second file            38810001
*                                 ID.                          @L2A  */ 38820001
*                                                                       38830001
*   3 CKO2_CRED_ALET@ PTR(31), /* Address of the ALET for the CRED      38840001
*                                  structure.                   @L2A */ 38850001
*                                                                       38860001
*   3 CKO2_CRED@      PTR(31); /* Address of the CRED structure.     */ 38870001
*                                                                       38880001
*                                                                       38890001
* DECLARE                                                               38900001
*  CKO2_LEN FIXED(31) CONSTANT(LENGTH(CKO2)); /* Constant CKO2 length   38910001
*                                                                @L2A*/ 38920001
*                                                                       38930001
*/********************************************************************/ 38940001
*/*                                                                  */ 38950001
*/*               GETE PL/X DECLARATIONS                             */ 38960001
*/*------------------------------------------------------------------*/ 38970001
*/*                                                                  */ 38980001
*/* DECLARATION NAME = GETE                                          */ 38990001
*/*                                                                  */ 39000001
*/* DESCRIPTIVE NAME =   OMVS  RACF Get real, effective, saved       */ 39010001
*/*                    UIDs/GIDs and supplemental groups from the    */ 39020001
*/*                    USP parameter list.                           */ 39030001
*/*                                                                  */ 39040001
*/* FUNCTION = Provides the PL/X mapping of the input parameter      */ 39050001
*/*            list for the OMVS Get real,eff,saved UIDs/GIDs and    */ 39060001
*/*            supplemental groups routine.                          */ 39070001
*/*                                                                  */ 39080001
*/********************************************************************/ 39090001
*                                                                       39100001
* DECLARE                                                               39110001
*  1 GETE  BASED(ADDR(COMP_SERVR_PARMS)),                               39120001
*                                                                       39130001
*   3 GETE_WORKB_ALET@  PTR(31),  /* Address of ALET for 1024 byte      39140001
*                                    work area.                  @D1A*/ 39150001
*                                                                       39160001
*   3 GETE_WORKB@     PTR(31), /* Address of 1024 byte work area @D1A*/ 39170001
*                                                                       39180001
*   3 GETE_KEY_ALET@  PTR(31), /* Address of ALET for the               39190001
*                                  user's key                    @L3A*/ 39200001
*                                                                       39210001
*   3 GETE_KEY@       PTR(31), /* Address of a byte that contains the   39220001
*                                  user's key. The key is in the high   39230001
*                                  order 4 bits of the byte.     @L3A*/ 39240001
*                                                                       39250001
*   3 GETE_GCNT_ALET@ PTR(31), /* Address of ALET for the               39260001
*                                  Group Count.                  @L3A*/ 39270001
*                                                                       39280001
*                                                                       39290001
*   3 GETE_GCNT@      PTR(31), /* Address of the group count. A one     39300001
*                                 word area that contains the number    39310001
*                                 of GIDs in the Grouplist area. @L3A*/ 39320001
*                                                                       39330001
*   3 GETE_GLST_ALET@ PTR(31), /* Address of ALET for the Group List.   39340001
*                                                                @L3A*/ 39350001
*                                                                       39360001
*   3 GETE_GLST@      PTR(31), /* Address of the Group List area in     39370001
*                                  which supplemental GIDs are          39380001
*                                  returned.                     @L3A*/ 39390001
*                                                                       39400001
*   3 GETE_GNUM_ALET@ PTR(31), /* Address of ALET for the number of     39410001
*                                  groups.                       @L3A*/ 39420001
*                                                                       39430001
*   3 GETE_GNUM@      PTR(31), /* Address of the Number Of Groups.      39440001
*                                  A one word area in which the number  39450001
*                                  of supplemental group GIDs is        39460001
*                                  returned.                     @L3A*/ 39470001
*   3 GETE_UID_ALET@  PTR(31), /* Address of ALET for the UIDs.  @L3A*/ 39480001
*                                                                       39490001
*   3 GETE_UID@       PTR(31), /* Address of a 3 word output area.      39500001
*                                  This area contains the real,         39510001
*                                  effective and saved UIDs.     @P3C*/ 39520001
*                                                                       39530001
*   3 GETE_GID_ALET@  PTR(31), /* Address of ALET for the GIDs.  @L3A*/ 39540001
*                                                                       39550001
*   3 GETE_GID@       PTR(31); /* Address of a 3 word output area.      39560001
*                                  This area contains the real,         39570001
*                                  effective and saved GIDs.     @P3C*/ 39580001
*                                                                       39590001
* DECLARE                                                               39600001
*  GETE_LEN FIXED(31) CONSTANT(LENGTH(GETE)); /* Constant GETE length   39610001
*                                                                @L3A*/ 39620001
*                                                                       39630001
*/********************************************************************/ 39640001
*/*                                                                  */ 39650001
*/*               DKEY PL/X DECLARATIONS                             */ 39660001
*/*------------------------------------------------------------------*/ 39670001
*/*                                                                  */ 39680001
*/* DECLARATION NAME = DKEY                                          */ 39690001
*/*                                                                  */ 39700001
*/* DESCRIPTIVE NAME =   OMVS DCE  Retrieve or replace DCE Key       */ 39710001
*/*                                                                  */ 39720001
*/* FUNCTION = Provides the PL/X mapping of the input paramter       */ 39730001
*/*            list for the service to retrieve or replace the       */ 39740001
*/*            DPASSWDS within a RACF user profile.                  */ 39750001
*/********************************************************************/ 39760001
*                                                                       39770001
*                                                                       39780001
* DECLARE                                                               39790001
*  1 DKEY  BASED(ADDR(COMP_SERVR_PARMS)),                               39800001
*                                                                       39810001
*   3 DKEY_FUNC_ALET@   PTR(31),  /* Address of ALET for Function code  39820001
*                                                                @01A*/ 39830001
*   3 DKEY_FUNC@        PTR(31),  /* Address of 1 byte function code    39840001
*                                                                @01A*/ 39850001
*   3 DKEY_USERID_ALET@ PTR(31),  /* Address of ALET for the RACF       39860001
*                                    userid                      @01A*/ 39870001
*   3 DKEY_USERID@      PTR(31),  /* Address of 9 byte area that        39880001
*                                    contains a 1 byte length followed  39890001
*                                    by userid of up to 8 chars  @01A*/ 39900001
*                                                                       39910001
*   3 DKEY_KEY_ALET@    PTR(31),  /* Address of ALET for the DCE key    39920001
*                                                                @01A*/ 39930001
*                                                                       39940001
*   3 DKEY_KEY@         PTR(31),  /* Address of the output key area, if 39950001
*                                    retrieving the DCE key, or new key 39960001
*                                    if setting users DCE key    @01A*/ 39970001
*                                                                       39980001
*   3 DKEY_KEYL_ALET@   PTR(31),  /* Address of ALET for the DCE key    39990001
*                                    length                      @01A*/ 40000001
*                                                                       40010001
*   3 DKEY_KEYL@        PTR(31);  /* Address of fullword containing the 40020001
*                                    DCE key area length         @01A*/ 40030001
* DECLARE                                                               40040001
*  DKEY_LEN FIXED(31) CONSTANT(LENGTH(DKEY)), /* Constant DKEY length   40050001
*                                                                @01A*/ 40060001
*  DKEY_GET BIT(8) CONSTANT('01'X),/* Get the DPASSWDS           @01A*/ 40070001
*  DKEY_PUT BIT(8) CONSTANT('02'X);/* Put the DPASSWDS           @01A*/ 40080001
*                                                                       40090001
*/********************************************************************/ 40100001
*/*                                                                  */ 40110001
*/*               DINF PL/X DECLARATIONS                             */ 40120001
*/*------------------------------------------------------------------*/ 40130001
*/*                                                                  */ 40140001
*/* DECLARATION NAME = DINF                                          */ 40150001
*/*                                                                  */ 40160001
*/* DESCRIPTIVE NAME =   OMVS DCE  Retrieve or replace DCE Info      */ 40170001
*/*                                                                  */ 40180001
*/* FUNCTION = Provides the PL/X mapping of the input paramter       */ 40190001
*/*            list for the service to retrieve or replace the       */ 40200001
*/*            DCE UUID, DCENAME, or HOMECELL within a RACF user     */ 40210001
*/*            profile.                                              */ 40220001
*/********************************************************************/ 40230001
*                                                                       40240001
* DECLARE                                                               40250001
*  1 DINF  BASED(ADDR(COMP_SERVR_PARMS)),                               40260001
*                                                                       40270001
*   3 DINF_FUNC_ALET@   PTR(31),  /* Address of ALET for Function code  40280001
*                                                                @01A*/ 40290001
*   3 DINF_FUNC@        PTR(31),  /* Address of 1 byte function code    40300001
*                                                                @01A*/ 40310001
*   3 DINF_USERID_ALET@ PTR(31),  /* Address of ALET for the RACF       40320001
*                                    userid                      @01A*/ 40330001
*   3 DINF_USERID@      PTR(31),  /* Address of 9 byte area that        40340001
*                                    contains a 1 byte length followed  40350001
*                                    by userid of up to 8 chars  @01A*/ 40360001
*   3 DINF_FIELDL_ALET@ PTR(31),  /* Address of ALET for the Field list 40370001
*                                                                @01A*/ 40380001
*   3 DINF_FIELDL@      PTR(31),  /* Address of an area containing      40390001
*                                    the input Field_list        @01A*/ 40400001
*   3 DINF_OUTPUTA_ALET@ PTR(31), /* Address of ALET for the Output     40410001
*                                    area                        @01A*/ 40420001
*   3 DINF_OUTPUTA@     PTR(31),  /* Address of area which contains the 40430001
*                                    contents of data obtained   @01A*/ 40440001
*   3 DINF_OUTPUTL_ALET@ PTR(31), /* Address of ALET for the Output     40450001
*                                    area length                 @01A*/ 40460001
*   3 DINF_OUTPUTL@     PTR(31);  /* Address of fullword containing the 40470001
*                                    Output area length          @01A*/ 40480001
* DECLARE                                                               40490001
*  DINF_LEN FIXED(31) CONSTANT(LENGTH(DINF)),  /* Constant DINF length  40500001
*                                                                @01A*/ 40510001
*  DINF_GET BIT(8) CONSTANT('01'X),/* Get the DCE info           @01A*/ 40520001
*  DINF_PUT BIT(8) CONSTANT('02'X);/* Put the DCE info           @01A*/ 40530001
*                                                                       40540001
* DECLARE                                                               40550001
*  1 DINF_FIELD_LIST BASED,       /* List of fields to set/get   @01A*/ 40560001
*   3 DINF_FIELD_LIST_LEN    FIXED(16), /* Len in bytes of field list   40570001
*                                                                @01A*/ 40580001
*   3 DINF_FIELD_LIST_CNT    FIXED(16), /* Number fields in field list  40590001
*                                                                @01A*/ 40600001
*   3 DINF_FIELD_LIST_ST     CHAR(*);   /* Fields start here     @01A*/ 40610001
*                                                                       40620001
* DECLARE                                                               40630001
*  1 DINF_FIELDS BASED,           /* Fields passed from caller   @01A*/ 40640001
*   3 DINF_FIELD_NAME   CHAR(8),  /* Name of field               @01A*/ 40650001
*   3 DINF_FIELD_LEN    FIXED(16),/* Length of field             @01A*/ 40660001
*   3 DINF_FIELD_DATA   CHAR(*);  /* Field data                  @01A*/ 40670001
*                                                                       40680001
* DECLARE                                                               40690001
*  1 DINF_OUTPUT_AREA BASED,      /* Output area from caller     @01A*/ 40700001
*   3 DINF_OUTPUT_AREA_LEN FIXED(16), /* Length in bytes of output area 40710001
*                                                                @01A*/ 40720001
*   3 DINF_OUTPUT_AREA_CNT FIXED(16), /* Number fields in output data   40730001
*                                                                @01A*/ 40740001
*   3 DINF_OUTPUT_AREA_ST  CHAR(*);   /* Output starts here      @01A*/ 40750001
*                                                                       40760001
* DECLARE                                                               40770001
*  1 DINF_OUTPUT_FLD BASED,       /* Data returned for one field @01A*/ 40780001
*   3 DINF_OUTPUT_FLD_NAME CHAR(8),   /* Name of field           @01A*/ 40790001
*   3 DINF_OUTPUT_FLD_LEN  FIXED(16), /* Length of this output piece    40800001
*                                                                @01A*/ 40810001
*   3 DINF_OUTPUT_FLD_DATA CHAR(*);   /* Data retrieved          @01A*/ 40820001
*                                                                       40830001
*/********************************************************************/ 40840001
*/*                                                                  */ 40850001
*/*                DRUR PL/X DECLARATIONS                            */ 40860001
*/*------------------------------------------------------------------*/ 40870001
*/*                                                                  */ 40880001
*/*  DECLARATION NAME = DRUR                                         */ 40890001
*/*                                                                  */ 40900001
*/*  DESCRIPTIVE NAME =   RACF userid - DCE UUID mapping parameters  */ 40910001
*/*                                                                  */ 40920001
*/*  FUNCTION = Provides the PL/X mapping of the input paramter      */ 40930001
*/*             list for the service to map a RACF userid to a DCE   */ 40940001
*/*             principal UUID/home cell UUID pair                   */ 40950001
*/********************************************************************/ 40960001
*                                                                       40970001
* DECLARE                                                               40980001
*  1 DRUR  BASED(ADDR(COMP_SERVR_PARMS)),                               40990001
*                                                                       41000001
*   3 DRUR_FUNC_ALET@   PTR(31),  /* Address of ALET for Function code  41010001
*                                                                @02A*/ 41020001
*   3 DRUR_FUNC@        PTR(31),  /* Address of 1 byte function code    41030001
*                                                                @02A*/ 41040001
*   3 DRUR_PRIN_UUID_ALET@ PTR(31), /* Address of ALET for the DCE      41050001
*                                      principal UUID            @02A*/ 41060001
*   3 DRUR_PRIN_UUID@    PTR(31), /* Address of a 36 byte input/output  41070001
*                                    area for the principal UUID @02A*/ 41080001
*         ! The following two fields address the home cell UUID         41090001
*         ! which is optional.  Indicate no home cell UUID passed       41100001
*         ! by having the pointer and alet address a null byte.    @02A 41110001
*   3 DRUR_HOME_UUID_ALET@ PTR(31), /* Address of ALET for the DCE      41120001
*                                      home cell UUID            @02A*/ 41130001
*   3 DRUR_HOME_UUID@   PTR(31),  /* Address of a 36 byte input/output  41140001
*                                    area for the home cell UUID @02A*/ 41150001
*   3 DRUR_USERID_ALET@ PTR(31),  /* Address of ALET for the RACF       41160001
*                                    userid                      @02A*/ 41170001
*   3 DRUR_USERID@      PTR(31);  /* Address of a 9 byte input/output   41180001
*                                    area for the RACF userid (1 byte   41190001
*                                    for the length followed by up to   41200001
*                                    8 bytes for the RACF userid        41210001
*                                    itself)                     @02A*/ 41220001
* DECLARE                                                               41230001
*  DRUR_LEN FIXED(31) CONSTANT(LENGTH(DRUR)), /* Constant DRUR length   41240001
*                                                                @02A*/ 41250001
*  DRUR_GET_RACF_USERID BIT(8) CONSTANT('01'X),! UUID->RACF userid @02A 41260001
*  DRUR_GET_DCE_UUID BIT(8)    CONSTANT('02'X);! RACF userid->UUID @02A 41270001
*                                                                       41280001
*/********************************************************************/ 41290001
*/*                                                                  */ 41300001
*/*              DAUT PL/X DECLARATIONS                              */ 41310001
*/*------------------------------------------------------------------*/ 41320001
*/*                                                                  */ 41330001
*/*  DECLARATION NAME = DAUT                                         */ 41340001
*/*                                                                  */ 41350001
*/*  DESCRIPTIVE NAME =   RACF Authorization of a DCE Client         */ 41360001
*/*                                                                  */ 41370001
*/*  FUNCTION = Provides the PL/X mapping of the input paramter      */ 41380001
*/*           list for the service which allows MVS servers to       */ 41390001
*/*           verify the authority of a DCE Client (who is also      */ 41400001
*/*           a RACF user) to resources on the MVS system that are   */ 41410001
*/*           protected by RACF.                                     */ 41420001
*/*                                                                  */ 41430001
*/********************************************************************/ 41440001
* DECLARE                                                               41450001
*  1 DAUT  BASED(ADDR(COMP_SERVR_PARMS)),                               41460001
*                                                                       41470001
*   3 DAUT_ACEEP@       PTR(31),  /*  Address of a full word containing 41480001
*                                     the address of a previously       41490001
*                                     created ACEE (or 0)        @03A*/ 41500001
*                                                                       41510001
*   3 DAUT_ALET@        PTR(31),  /* Address of ALET for following      41520001
*                                    variables                   @03A*/ 41530001
*                                                                       41540001
*   3 DAUT_PRIN_UUID@   PTR(31),  /* Address of 36 byte area for the    41550001
*                                    DCE principle UUID          @03A*/ 41560001
*                                                                       41570001
*   3 DAUT_HOME_UUID@   PTR(31),  /* Address of 36 byte area for the    41580001
*                                    DCE home cell UUID.         @03A*/ 41590001
*                                                                       41600001
*   3 DAUT_USERID@      PTR(31),  /* Address of 9 byte area for the     41610001
*                                    RACF userid (1 byte for the        41620001
*                                    length followed by up to 8 bytes   41630001
*                                    for the RACF userid itself) @03A*/ 41640001
*                                                                       41650001
*   3 DAUT_CLASS_NAME@  PTR(31),  /* Address of an 8 byte area for      41660001
*                                    the RACF class name of a resource. 41670001
*                                    The class name must be left        41680001
*                                    justified and padded to the right  41690001
*                                    with blanks.                @03A*/ 41700001
*                                                                       41710001
*   3 DAUT_ENT_NAME@    PTR(31),  /* Address of an area for the RACF    41720001
*                                    resource profile name.      @03A*/ 41730001
*                                                                       41740001
*   3 DAUT_ENT_LEN@     PTR(31),  /* Address of a 2 byte area which     41750001
*                                    contains the length of the         41760001
*                                    resource profile name.      @03A*/ 41770001
*                                                                       41780001
*   3 DAUT_ACC_REQ@     PTR(31);  /* Address of a 1 byte area           41790001
*                                    containing the requested access    41800001
*                                    to the resource.            @03A*/ 41810001
*                                                                       41820001
* DECLARE                                                               41830001
*  DAUT_LEN FIXED(31) CONSTANT(LENGTH(DAUT)), /* Constant DAUT length   41840001
*                                                                @03A*/ 41850001
*  DAUT_READ       BIT(8) CONSTANT('02'X), /* READ    access req @03A*/ 41860001
*  DAUT_UPDATE     BIT(8) CONSTANT('04'X), /* UPDATE  access req @03A*/ 41870001
*  DAUT_CONTROL    BIT(8) CONSTANT('08'X), /* CONTORL access req @03A*/ 41880001
*  DAUT_ALTER      BIT(8) CONSTANT('80'X); /* ALTER   access req @03A*/ 41890001
*                                                                       41900001
*/********************************************************************/ 41910001
*/*                                                                  */ 41920001
*/*              INTA PL/X DECLARATIONS                              */ 41930001
*/*------------------------------------------------------------------*/ 41940001
*/*                                                                  */ 41950001
*/*  DECLARATION NAME = INTA                                         */ 41960001
*/*                                                                  */ 41970001
*/*  DESCRIPTIVE NAME =   RACF Initialize ACEE                       */ 41980001
*/*                                                                  */ 41990001
*/*  FUNCTION = Provides the PL/X mapping of the input paramter      */ 42000001
*/*      list for the service which will create/delete/manage ACEEs. */ 42010001
*/*                                                                  */ 42020001
*/*                                                              @L4A*/ 42030001
*/********************************************************************/ 42040001
* DECLARE                                                               42050001
*  1 INTA  BASED(ADDR(COMP_SERVR_PARMS)),                               42060001
*                                                                       42070001
*   3 INTA_FUNC@        PTR(31),  /* Address of 1 byte function code    42080001
*                                                                @L4A*/ 42090001
*   3 INTA_ATTRIBUTES@  PTR(31),  /* Address of a full word area        42100001
*                                    which contains the attribute flags 42110001
*                                    for the service             @L4A*/ 42120001
*   3 INTA_USERID@      PTR(31),  /* Address of 9 byte area for the     42130001
*                                    RACF userid (1 byte for the        42140001
*                                    length followed by up to 8 bytes   42150001
*                                    for the RACF userid itself) @L4A*/ 42160001
*                                                                       42170001
*   3 INTA_ACEEP@       PTR(31),  /* Address of a full word input/      42180001
*                                    output area for the ACEE address.  42190001
*                                                                @L4A*/ 42200001
*                                                                       42210001
*   3 INTA_APPL_ID@     PTR(31),  /* Address of an 9 byte area which    42220001
*                                    specifies the name of the          42230001
*                                    application being accessed by the  42240001
*                                    user. (1 byte for the length       42250001
*                                    followed by up to 8 bytes for the  42260001
*                                    application name itself) @L4A*/    42270001
*                                                                       42280001
*                                                                       42290001
*                                                                       42300001
*   3 INTA_PASSWORD@    PTR(31),  /* Address of an 9 byte area          42310001
*                                    containing the user's password or  42320001
*                                    pass ticket. (1 byte for the       42330001
*                                    length followed by up to 8 bytes   42340001
*                                    for the password itself) @L4A*/    42350001
*                                                                       42360001
*   3 INTA_LOGSTRING@   PTR(31),  /* Address of a variable length area  42370001
*                                    containing the log string to be    42380001
*                                    passed to RACROUTE (1 byte for the 42390001
*                                    length followed by up to 255 bytes 42400001
*                                    for the log string itself) @L4A*/  42410001
*                                                                       42420001
*     5 INTA_LAST_PARM_VER1 BIT(1), /* Variable length parameter list.  42430001
*                                    This was the last parameter for    42440001
*                                    plist version 1             @06A*/ 42450001
*                                                                       42460001
*   3 INTA_CERTIFICATE@ PTR(31),  /* Address of a variable length area  42470001
*                                    containing the X.509 certificate   42480001
*                                    identifying the user (fullword     42490001
*                                    length followed by the certificate 42500001
*                                    itself. Length of zero indicates   42510001
*                                    certificate not present)   @06A*/  42520001
*                                                                       42530001
*     5 INTA_LAST_PARM_VER2 BIT(1), /* Variable length parameter list.  42540001
*                                    This was the last parameter for    42550001
*                                    plist version 2             @L5C*/ 42560001
*                                                                       42570001
*   3 INTA_ENVR_IN@  PTR(31),     /* Address of an area containing      42580001
*                                    the data structure to recreate the 42590001
*                                    security environment.       @L5A*/ 42600001
*                                                                       42610001
*     5 INTA_LAST_PARM_ENVR_IN BIT(1), /* Variable length parameter list42620001
*                                    This is a valid last parameter for 42630001
*                                    the plist version 3.        @L5A*/ 42640001
*                                                                       42650001
*   3 INTA_ENVR_OUT@ PTR(31),     /* Address of an area containing      42660001
*                                    the data structure to retrieve the 42670001
*                                    security environment.       @L5A*/ 42680001
*                                                                       42690001
*     5 INTA_LAST_PARM_ENVR_OUT BIT(1), /* Variable length parameter    42700001
*                                    list.  This is a valid last        42710001
*                                    parameter for plist                42720001
*                                    version 3.                  @L6A*/ 42730001
*                                                                       42740001
*   3 INTA_OUTA_STOR@ PTR(31),    /* Address of an area containing an   42750001
*                                    OUSP                        @L6A*/ 42760001
*                                                                       42770001
*     5 INTA_LAST_PARM_OUTA_STOR BIT(1), /* Variable length parameter   42780001
*                                    list. This is a valid last         42790001
*                                    parameter for the plist            42800001
*                                    version 3.                  @L6A*/ 42810001
*                                                                       42820001
*   3 INTA_X500_NAME_PTR PTR(31), /* A word in which to store the       42830001
*                                    Address of the x500 name pair      42840001
*                                    structure.  The structure is a     42850001
*                                    4-byte structure length, followed  42860001
*                                    by 2 2-byte lengths, followed by   42870001
*                                    up to 255 bytes of issuers name    42880001
*                                    and to up 255 bytes of subjects    42890001
*                                    name.                       @LDA*/ 42900001
*                                                                       42910001
*     5 INTA_LAST_X500_NAME BIT(1), /* Variable length parameter        42920001
*                                    list. This could be the last       42930001
*                                    parameter for the plist            42940001
*                                    version 4.                  @LDA*/ 42950001
*                                                                       42960001
*   3 INTA_VARIABLE_LIST@ PTR(31), /* Address of an area containing a   42970001
*                                    criteria value data structure.     42980001
*                                    The structure is a 4-byte number   42990001
*                                    of entries, followed by 1 or more  43000001
*                                    entries. Each entry is an 8-byte   43010001
*                                    name, followed by a 4-byte value   43020001
*                                    length, followed by the value.     43030001
*                                                                @LDA*/ 43040001
*                                                                       43050001
*     5 INTA_LAST_PARM_VAR_LIST BIT(1), /* Variable length parameter    43060001
*                                    list. This could be the last       43070001
*                                    parameter for the plist            43080001
*                                    version 4.                  @LDA*/ 43090001
*                                                                       43100001
*       7 INTA_LAST_PARM BIT(1);  /* Variable length parameter          43110001
*                                    list.  This is the last            43120001
*                                    parameter                   @L6A*/ 43130001
*                                                                       43140001
* DECLARE                                                               43150001
*  INTA_LEN FIXED(31) CONSTANT(LENGTH(INTA)), /* Constant INTA length   43160001
*                                                                @L4A*/ 43170001
*      ! Function code values    @L4A                                   43180001
*  INTA_CREATE FIXED(8) CONSTANT(1),   /* Create an ACEE         @P6C*/ 43190001
*  INTA_DELETE FIXED(8) CONSTANT(2),   /* Delete the ACEE and USP if    43200001
*                                         applicable             @P6C*/ 43210001
*  INTA_PURGE FIXED(8) CONSTANT(3),    /* Purge space related ACEE      43220001
*                                         management resources   @09C*/ 43230001
*  INTA_REGSTR FIXED(8) CONSTANT(4),   /* Register certificate for      43240001
*                                         the current userid     @09A*/ 43250001
*  INTA_DEREGS FIXED(8) CONSTANT(5),   /* Deregister certificate for    43260001
*                                         the current userid     @09A*/ 43270001
*  INTA_QUERY  FIXED(8) CONSTANT(6);   /* Query a certificate for an    43280001
*                                         associated user ID     @09A*/ 43290001
*      ! Attribute flags                                                43300001
* DECLARE                                                               43310001
*   1 INTA_ATTRIBUTES_MAP BIT(32) BASED,                                43320001
*     3 INTA_MANAGED BIT(1),           /* ACEE should be managed        43330001
*                                         (CREATE only)   @L4A*/        43340001
*     3 INTA_USP     BIT(1),           /* Initialize a USP for the ACEE 43350001
*                                         (CREATE only)   @L4A*/        43360001
*     3 INTA_TASK_LVL BIT(1),          /* For CREATE,ON indicates chain 43370001
*                                         ACEE to the TCB.OFF indicates 43380001
*                                         return ACEE address via the   43390001
*                                         Acee_Ptr field.  For DELETE,  43400001
*                                         ON indicates get ACEE address 43410001
*                                         from the TCB. OFF indicates   43420001
*                                         ACEE address passed through   43430001
*                                         Acee_Ptr        @L4A*/        43440001
*     3 INTA_CLIENT   BIT(2),          /* ACEE client flags             43450001
*                                         (CREATE only)   @L4A*/        43460001
*       5 INTA_UNAUTH_CLNT BIT(1),     /* Unauthenticated Client @L4A*/ 43470001
*       5 INTA_AUTH_CLNT BIT(1),       /* Authenticated Client @L4A*/   43480001
*                                                                       43490001
*     3 INTA_MSG_SUPP BIT(1),          /* ON to suppress RACF messages  43500001
*                                         produced as a result of cre-  43510001
*                                         ating an ACEE           @L4A*/43520001
*                                                                       43530001
*     3 INTA_ENVR_RET BIT(1),          /* ON - return an ENVR object for43540001
*                                         the ACEE (CREATE only)  @L5A*/43550001
*     3 INTA_NO_TIMEOUT BIT(1),        /* ON to create a no timeout     43560001
*                                      managed ACEE (CREATE only)@L6A*/ 43570001
*     3 INTA_OUSP_RET   BIT(1),        /* ON to return an OUSP          43580001
*                                      (CREATE only)             @LDC*/ 43590001
*     3 INTA_X500_RET   BIT(1);        /* ON to return a X500           43600001
*                                      pair (QUERY only)         @LDA*/ 43610001
*                                                                       43620001
*/********************************************************************/ 43630001
*/*                                                                  */ 43640001
*/*              ADMN PL/X DECLARATIONS                              */ 43650001
*/*------------------------------------------------------------------*/ 43660001
*/*                                                                  */ 43670001
*/*  DECLARATION NAME = ADMN                                         */ 43680001
*/*                                                                  */ 43690001
*/*  DESCRIPTIVE NAME =   RACF Administration interface              */ 43700001
*/*                                                                  */ 43710001
*/*  FUNCTION = Provides the PL/X mapping of the input parameter     */ 43720001
*/*      list for the service which will create/delete/alter users   */ 43730001
*/*      and execute RACF commands.                                  */ 43740001
*/*                                                              @04A*/ 43750001
*/********************************************************************/ 43760001
* DECLARE                                                               43770001
*  1 ADMN  BASED(ADDR(COMP_SERVR_PARMS)),                               43780001
*                                                                       43790001
*   3 ADMN_FUNC@        PTR(31),  /* Address of 1 byte function code    43800001
*                                                                @04A*/ 43810001
*   3 ADMN_PARMLIST@    PTR(31),  /* Address of the function-specific   43820001
*                                    parameter list structure    @04A*/ 43830001
*   3 ADMN_USERID@      PTR(31),  /* Address of 9 byte area for the     43840001
*                                    RACF userid under whose authority  43850001
*                                    this service will execute (1 byte  43860001
*                                    for the length followed by up to 8 43870001
*                                    bytes for the userid itself)@04A*/ 43880001
*   3 ADMN_ACEEP@       PTR(31),  /* Address of a full word containing  43890001
*                                    the ACEE address under the auth-   43900001
*                                    ority of which this service        43910001
*                                    will execute                @04A*/ 43920001
*   3 ADMN_OUTPUT_SP@   PTR(31),  /* Address of a caller-supplied one   43930001
*                                    byte area containing the subpool   43940001
*                                    in which output messages should    43950001
*                                    be obtained                 @04A*/ 43960001
*   3 ADMN_OUTPUT_MSG@  PTR(31),  /* Address of a fullword containing   43970001
*                                    a pointer to the RACF command      43980001
*                                    ouput, which is mapped below.      43990001
*                                    The caller is responsible for      44000001
*                                    freeing this storage.       @04A*/ 44010001
*     5 ADMN_LAST_PARM BIT(1);    /* Variable length parameter list.    44020001
*                                    This is the last parameter  @04A*/ 44030001
*                                                                       44040001
* DECLARE                                                               44050001
*  ADMN_LEN FIXED(31) CONSTANT(LENGTH(ADMN)), /* Constant ADMN length   44060001
*                                                                @04A*/ 44070001
*/*                 Function code values                         @04A*/ 44080001
*  ADMN_ADD_USER  FIXED(8) CONSTANT(1), /* Add a user            @04A*/ 44090001
*  ADMN_DEL_USER  FIXED(8) CONSTANT(2), /* Delete a user         @04A*/ 44100001
*  ADMN_ALT_USER  FIXED(8) CONSTANT(3), /* Alter a user          @04A*/ 44110001
*  ADMN_LST_USER  FIXED(8) CONSTANT(4), /* List a user           @04A*/ 44120001
*  ADMN_RUN_COMD  FIXED(8) CONSTANT(5), /* Run a RACF command    @04A*/ 44130001
*  ADMN_ADD_GROUP FIXED(8) CONSTANT(6), /* Add a group           @07A*/ 44140001
*  ADMN_DEL_GROUP FIXED(8) CONSTANT(7), /* Delete a group        @07A*/ 44150001
*  ADMN_ALT_GROUP FIXED(8) CONSTANT(8), /* Alter a group         @07A*/ 44160001
*  ADMN_LST_GROUP FIXED(8) CONSTANT(9), /* List a group          @07A*/ 44170001
*  ADMN_CONNECT   FIXED(8) CONSTANT(10),/* Connect user to group @07A*/ 44180001
*  ADMN_REMOVE    FIXED(8) CONSTANT(11),/* Remove user from group @08C*/44190001
*  ADMN_ADD_GENRES FIXED(8) CONSTANT(12),/* Add a resource       @08A*/ 44200001
*  ADMN_DEL_GENRES FIXED(8) CONSTANT(13),/* Delete a resource    @08A*/ 44210001
*  ADMN_ALT_GENRES FIXED(8) CONSTANT(14),/* Alter a resource     @08A*/ 44220001
*  ADMN_LST_GENRES FIXED(8) CONSTANT(15),/* List a resource      @08A*/ 44230001
*  ADMN_ADD_DS    FIXED(8) CONSTANT(16),/* Add a dataset         @08A*/ 44240001
*  ADMN_DEL_DS    FIXED(8) CONSTANT(17),/* Delete a dataset      @08A*/ 44250001
*  ADMN_ALT_DS    FIXED(8) CONSTANT(18),/* Alter a dataset       @08A*/ 44260001
*  ADMN_LST_DS    FIXED(8) CONSTANT(19),/* List a dataset        @08A*/ 44270001
*  ADMN_PERMIT    FIXED(8) CONSTANT(20),/* Permit a user or group @LBC*/44280001
*  ADMN_ALT_SETR  FIXED(8) CONSTANT(21),/* Alter SETROPTS info   @LBA*/ 44290001
*  ADMN_XTR_SETR  FIXED(8) CONSTANT(22),/* SETROPTS R_admin ext  @LBA*/ 44300001
*  ADMN_UNL_SETR  FIXED(8) CONSTANT(23);/* SETROPTS SMF Unload ext      44310001
*                                                                @LBA*/ 44320001
*                                                                       44330001
*/*------------------------------------------------------------------*/ 44340001
*/*                                                                  */ 44350001
*/*  Following is the mapping of the input buffer for each of        */ 44360001
*/*  the function codes defined.                                     */ 44370001
*/*                                                              @04A*/ 44380001
*/********************************************************************/ 44390001
* DECLARE                            /* Function code 5              */ 44400001
*  1 ADMN_RUNCOMD_MAP BASED,         /* Mapping for running a command   44410001
*                                                                @04A*/ 44420001
*    3 ADMN_RUNCOMD_LEN FIXED(16),   /* Length of command string @04A*/ 44430001
*    3 ADMN_RUNCOMD_CMD CHAR(*);     /* Command string           @04A*/ 44440001
* DECLARE                            /* Function codes 1-4,10-11. Map*/ 44450001
*  1 ADMN_USRADM_MAP BASED,          /* for Add/Alter/Delete/List user  44460001
*                                       and for Connect/Remove   @07C*/ 44470001
*    3 ADMN_USRADM_USER,             /* User: For Delete user, this is  44480001
*                                       the only required field  @04A*/ 44490001
*      5 ADMN_USRADM_USER_LEN FIXED(8), /* Length of User ID     @04A*/ 44500001
*      5 ADMN_USRADM_USER_ID CHAR(8),   /* User ID               @04A*/ 44510001
*    3 * CHAR(1),                    /* reserved (for alignment) @05C*/ 44520001
*    3 ADMN_USRADM_ERROFF FIXED(16), /* Offset to segment/field in      44530001
*                                       error                    @05A*/ 44540001
*    3 ADMN_USRADM_SEG_NUM FIXED(16),/* Number of segments to update    44550001
*                                       or list                  @04A*/ 44560001
*    3 ADMN_USRADM_SEGSTRT CHAR(1);  /* First segment entry      @04A*/ 44570001
*/********************************************************************/ 44580001
*/* The segment data for all function codes requiring it is      @07C*/ 44590001
*/* mapped below.  Despite the .."USRADM".. naming of the        @07C*/ 44600001
*/* segment fields, they should be used for all function codes   @07C*/ 44610001
*/* requiring segment data to be specified.  The base RACF       @07C*/ 44620001
*/* segment is specified as "BASE    ".                          @07C*/ 44630001
*/*                                                                  */ 44640001
*/* Following are listed any special requirements for the        @07A*/ 44650001
*/* various function codes of IRRSEQ00:                          @07A*/ 44660001
*/*                                                                  */ 44670001
*/* - ADMN_LST_USER  - The field data will be ignored if         @07C*/ 44680001
*/*   ADMN_LST_GROUP   specified.  Set ADMN_USRADM_FLD_NUM to    @07C*/ 44690001
*/*                    0 to save space in the plist.  At a       @07C*/ 44700001
*/*                    minimum, the BASE segment must be         @07C*/ 44710001
*/*                    requested.  Specifying 0 segments on a    @07C*/ 44720001
*/*                    List request will result in a parameter       */ 44730001
*/*                    list error.                                   */ 44740001
*/* - ADMN_CONNECT   - Use the BASE segment in which to specify  @07A*/ 44750001
*/*   ADMN_REMOVE      your field data.  At a minimum, the       @07A*/ 44760001
*/*                    GROUP field must be provided.             @07A*/ 44770001
*/* - ADMN_ADD_GENRES- At a minimum, the PROFILE field must be   @LBA*/ 44780001
*/*   ADMN_DEL_GENRES  provided.                                 @LBA*/ 44790001
*/*   ADMN_ALT_GENRES                                            @LBA*/ 44800001
*/*   ADMN_LST_GENRES                                            @LBA*/ 44810001
*/*   ADMN_ADD_DS                                                @LBA*/ 44820001
*/*   ADMN_DEL_DS                                                @LBA*/ 44830001
*/*   ADMN_ALT_DS                                                @LBA*/ 44840001
*/*   ADMN_PERMIT                                                @LBA*/ 44850001
*/* - ADMN_ALT_SETR  - Use the BASE segment in which to specify  @LBA*/ 44860001
*/*                    your field data.                          @LBA*/ 44870001
*/*                                                                  */ 44880001
*/********************************************************************/ 44890001
* DECLARE                            /* Segment data             @07C*/ 44900001
*  1 ADMN_USRADM_SEGENTRY  BASED,    /* Mapping for Segment entry@04A*/ 44910001
*    3 ADMN_USRADM_SEG_NAME CHAR(8), /* Profile segment name     @04A*/ 44920001
*    3 ADMN_USRADM_SEG_FLAG CHAR(1), /* Flag byte for segment    @05A*/ 44930001
*    3 ADMN_USRADM_FLD_NUM FIXED(16) BDY(BYTE), /* Number of fields     44940001
*                                       within segment.  Set to 0 for   44950001
*                                       the List function        @04A*/ 44960001
*    3 ADMN_USRADM_FLDSTRT CHAR(1);  /* First field entry for segment   44970001
*                                                                @04A*/ 44980001
* DECLARE                                                               44990001
*  1 ADMN_USRADM_FLDENTRY   BASED,   /* Mapping for Field entry  @04A*/ 45000001
*    3 ADMN_USRADM_FLD_NAME CHAR(8), /* Segment field name       @04A*/ 45010001
*    3 ADMN_USRADM_FLD_FLAG CHAR(1), /* Flag byte for field      @05A*/ 45020001
*    3 ADMN_USRADM_FLD_LEN  FIXED(16) BDY(BYTE), /* Fld data len @04A*/ 45030001
*    3 ADMN_USRADM_FLD_DATA CHAR(*); /* Field data               @04A*/ 45040001
*                                                                       45050001
* DECLARE                            /* Function codes 6-9: Mapping  */ 45060001
*  1 ADMN_GRPADM_MAP BASED,          /* for Add/Alter/Delete/List group 45070001
*                                                                @07A*/ 45080001
*    3 ADMN_GRPADM_GROUP,            /* User: For Delete, this is       45090001
*                                       the only required field  @07A*/ 45100001
*      5 ADMN_GRPADM_GRP_LEN FIXED(8),  /* Length of Group ID    @07A*/ 45110001
*      5 ADMN_GRPADM_GRP_ID CHAR(8),    /* Group ID              @07A*/ 45120001
*    3 * CHAR(1),                    /* reserved (for alignment) @07A*/ 45130001
*    3 ADMN_GRPADM_ERROFF FIXED(16), /* Offset to segment/field in      45140001
*                                       error                    @07A*/ 45150001
*    3 ADMN_GRPADM_SEG_NUM FIXED(16),/* Number of segments to update    45160001
*                                                                @07A*/ 45170001
*    3 ADMN_GRPADM_SEGSTRT CHAR(1);  /* First segment entry      @07A*/ 45180001
*                                                                       45190001
* DECLARE                            /* Function codes 12-20:        */ 45200001
*  1 ADMN_RESADM_MAP BASED,          /* Mapping for add/alt/del/list    45210001
*                                       resource, add/alt/del/list      45220001
*                                       dataset, and permit      @08A*/ 45230001
*    3 ADMN_RESADM_CLASS,            /* Class: not required for         45240001
*                                       dataset functions        @08A*/ 45250001
*      5 ADMN_RESADM_CLAS_LEN FIXED(8), /* Length of Class Name  @08A*/ 45260001
*      5 ADMN_RESADM_CLAS_NAM CHAR(8),  /* Class Name            @08A*/ 45270001
*    3 * CHAR(1),                    /* reserved (for alignment) @08A*/ 45280001
*    3 ADMN_RESADM_ERROFF FIXED(16), /* Offset to segment/field in      45290001
*                                       error                    @08A*/ 45300001
*    3 ADMN_RESADM_SEG_NUM FIXED(16),/* Number of segments to update    45310001
*                                                                @08A*/ 45320001
*    3 ADMN_RESADM_SEGSTRT CHAR(1);  /* First segment entry      @08A*/ 45330001
*                                                                       45340001
* DECLARE                            /* Function code 21         @LBA*/ 45350001
*  1 ADMN_SETRADM_MAP BASED,         /* Mapping for alter SETROPTS      45360001
*                                       information              @LBA*/ 45370001
*    3 * CHAR(10),                   /* Reserved                 @LBA*/ 45380001
*    3 ADMN_SETRADM_ERROFF FIXED(16), /* Offset to segment/field in     45390001
*                                       error                    @LBA*/ 45400001
*    3 ADMN_SETRADM_SEG_NUM FIXED(16),/* Number of segments to update   45410001
*                                                                @LBA*/ 45420001
*    3 ADMN_SETRADM_SEGSTRT CHAR(0); /* First segment entry      @LBA*/ 45430001
*                                                                       45440001
*/*------------------------------------------------------------------*/ 45450001
*/*                                                                  */ 45460001
*/*  Following is the mapping of the output message buffer.          */ 45470001
*/*                                                              @04A*/ 45480001
*/********************************************************************/ 45490001
* DECLARE                                                               45500001
*  1 ADMN_OUTMSG_MAP BASED BDY(WORD), /* R_admin output mapping  @04A*/ 45510001
*    3 ADMN_OUT_NEXT PTR(31),         /* Addr of next block or 0 @04A*/ 45520001
*    3 ADMN_OUT_EYE CHAR(4),          /* Eye catcher: "RMSG"     @04A*/ 45530001
*    3 ADMN_OUT_SPID FIXED(8),        /* Subpool ID of this block@04A*/ 45540001
*    3 ADMN_OUT_LEN FIXED(24),        /* Total block length      @04A*/ 45550001
*    3 ADMN_OUT_OFF OFFSET,           /* Offset to first byte after the 45560001
*                                     last message. Offset value is     45570001
*                                     relative to ADMN_OUTMSG_MAP@04A*/ 45580001
*    3 ADMN_OUT_STRT CHAR(1);         /* First message in block  @04A*/ 45590001
* DECLARE                                                               45600001
*  1 ADMN_OUT_ENTRY BASED,            /* Individual message entry@04A*/ 45610001
*    3 ADMN_OUT_MLEN FIXED(15),       /* Length of this message  @04A*/ 45620001
*    3 ADMN_OUT_MSTR CHAR(*);         /* Variable message string @04A*/ 45630001
*                                                                       45640001
* DECLARE ADMN_OUT_RMSG CHAR(4) CONSTANT('RMSG'); /* eyecatcher in      45650001
*                                                   ADMN_OUT_EYE @04A*/ 45660001
*                                                                       45670001
*/*------------------------------------------------------------------*/ 45680001
*/*                                                                  */ 45690001
*/*  Following is the mapping of the SETROPTS output buffer.         */ 45700001
*/*  Note that ADMN_UNL_ENTRY is only used to map the output of      */ 45710001
*/*  an ADMN_UNL_SETR request.  For an ADMN_XTR_SETR request, the    */ 45720001
*/*  output buffer is formatted like the input buffer.               */ 45730001
*/*                                                              @LBA*/ 45740001
*/********************************************************************/ 45750001
* DECLARE                                                               45760001
*  1 ADMN_XTRUNL_MAP BASED BDY(WORD), /* R_admin SETROPTS output @LBA*/ 45770001
*    3 ADMN_XTRUNL_EYE CHAR(4),       /* Eye catcher: "RXTR"            45780001
*                                     or "RUNL"                  @LBA*/ 45790001
*    3 ADMN_XTRUNL_OUTLEN FIXED(32),  /* Total length of output buffer  45800001
*                                                                @LBA*/ 45810001
*    3 * CHAR(4),                     /* Reserved                @LBA*/ 45820001
*    3 ADMN_XTRUNL_NUM FIXED(16),     /* Number of segment entries for  45830001
*                                     ADMN_XTR_SETR or number of record 45840001
*                                     types for ADMN_UNL_SETR    @LBA*/ 45850001
*    3 ADMN_XTRUNL_ENTRY CHAR(0);     /* First segment or record entry  45860001
*                                                                @LBA*/ 45870001
* DECLARE                                                               45880001
*  1 ADMN_UNL_ENTRY BASED,            /* Data mapping for               45890001
*                                        ADMN_UNL_SETR           @LBA*/ 45900001
*    3 ADMN_UNL_TYPE CHAR(8),         /* SMF Data Unload record type    45910001
*                                                                @LBA*/ 45920001
*    3 ADMN_UNL_LEN FIXED(32),        /* Length of a record of this     45930001
*                                        type                    @LBA*/ 45940001
*    3 ADMN_UNL_NUM FIXED(32),        /* Number of records of this      45950001
*                                        type                    @LBA*/ 45960001
*    3 * CHAR(8),                     /* Reserved                @LBA*/ 45970001
*    3 ADMN_UNL_RECSTRT CHAR(0);      /* Start of first record of this  45980001
*                                        type                    @LBA*/ 45990001
*                                                                       46000001
* DECLARE ADMN_XTRUNL_RXTR CHAR(4) CONSTANT('RXTR');/* eyecatcher in    46010001
*                                               ADMN_XTRUNL_EYE  @LBA*/ 46020001
* DECLARE ADMN_XTRUNL_RUNL CHAR(4) CONSTANT('RUNL');/* eyecatcher in    46030001
*                                               ADMN_XTRUNL_EYE  @LBA*/ 46040001
*                                                                       46050001
*/****************************************************************@L7A* 46060001
*                                                                     * 46070001
*                UMAP PLX DECLARATIONS                                * 46080001
*---------------------------------------------------------------------* 46090001
*                                                                     * 46100001
*  DECLARATION NAME = UMAP                                            * 46110001
*                                                                     * 46120001
*  DESCRIPTIVE NAME =   RACF userid - R_UserMap                       * 46130001
*                                                                     * 46140001
*  FUNCTION = Provides the ASSEMBLER mapping of the input paramter    * 46150001
*             list for the service to map an application userid to    * 46160001
*             a RACF userid                                           * 46170001
*                                                                     * 46180001
****************************************************************@L7A */ 46190001
* declare                                                        !@L7A  46200001
*  1 UMAP based(addr(COMP_SERVR_PARMS)),                         !@L7A  46210001
*   3 UMAP_PARM_ALET@ ptr(31), ! Address of ALET for remaining    @L7A  46220001
*                            ! parameters                         @L7A  46230001
*   3 UMAP_FUNC@ ptr(31),    ! Address of 2-byte function code    @L7A  46240001
*   3 UMAP_OPTION_WORD@ ptr(31), ! Reserved for future use        @L7A  46250001
*   3 UMAP_USERID@ ptr(31),  ! Address of a 9-byte input/output   @L7A  46260001
*                            ! for the RACF userid.  The first    @L7A  46270001
*                            ! byte is the length followed by     @L7A  46280001
*                            ! 8 bytes for the RACF userid        @L7A  46290001
*   3 UMAP_CERTIFICATE@ ptr(31), ! Address of input area          @L7A  46300001
*                            ! for a digital certificate.  First  @L7A  46310001
*                            ! four bytes are a length followed   @L7A  46320001
*                            ! by the digital certificate.        @L7A  46330001
*   3 UMAP_APPL_USERID@ ptr(31),! Address of an input/output      @L7A  46340001
*                            ! area for an Application ID.  First @L7A  46350001
*                            ! two bytes contain the length       @L7A  46360001
*                            ! followed by 246 bytes for the      @L7A  46370001
*                            ! Application ID.                    @L7A  46380001
*                            ! If not specified on input, length  @L7A  46390001
*                            ! must be zero.                      @L7A  46400001
*    5 UMAP_LAST_PARM bit(1); ! Variable length parameter list    @L7A  46410001
*                                                                       46420001
* declare UMAP_LEN constant(length(UMAP)); ! fixed length of UMAP @L7A  46430001
*                                                                       46440001
*declare                                                                46450001
* 1 UMAP_CERTIFICATE based(UMAP_CERTIFICATE@),        !           @L7A  46460001
*                            ! Digital certificat mapping         @L7A  46470001
*  3 UMAP_DIGCERT_LEN fixed, ! Length of digital certificate      @L7A  46480001
*  3 UMAP_DIGCERT char(*);   ! Digital certificate                @L7A  46490001
*                                                                       46500001
*declare                                                                46510001
* 1 UMAP_USERID based(UMAP_USERID@),        ! RACF userid mapping @L7A  46520001
*  3 UMAP_RACFID_LEN fixed(8), ! Length of RACF userid            @L7A  46530001
*  3 UMAP_RACFID char(*);    ! RACF userid                        @L7A  46540001
*                                                                       46550001
*declare                     !                                    @L7A  46560001
* 1 UMAP_APPL_USERID based(UMAP_APPL_USERID@),! Application       @L7A  46570001
*                            ! ID mapping                         @L7A  46580001
*  3 UMAP_APPLID_LEN fixed(16), ! Length of Application ID        @L7A  46590001
*                            ! This is the last parameter         @L7A  46600001
*  3 UMAP_APPLID char(*);    ! Application ID                     @L7A  46610001
*                                                                       46620001
* ! function codes                                                @L7A  46630001
* declare                    !                                    @L7A  46640001
*  UMAP_R_TO_L  constant(1) fixed(16), ! Return Lotus Notes ID    @L7A  46650001
*                            ! for this RACF ID                   @L7A  46660001
*  UMAP_L_TO_R  constant(2) fixed(16), ! Return RACF ID for this  @L7A  46670001
*                            ! Lotus Notes ID                     @L7A  46680001
*  UMAP_R_TO_N  constant(3) fixed(16), ! Return NDS ID for this   @L7A  46690001
*                            ! RACF ID                            @L7A  46700001
*  UMAP_N_TO_R  constant(4) fixed(16), ! Return RACF ID for this  @LEC  46710001
*                            ! NDS ID                             @L7A  46720001
*  UMAP_R_TO_K  constant(5) fixed(16), ! Return Kerb principal    @LEA  46730001
*                            ! for this RACF ID                   @LEA  46740001
*  UMAP_K_TO_R  constant(6) fixed(16); ! Return RACF ID for this  @LEA  46750001
*                            ! Kerb principal                     @LEA  46760001
*/********************************************************************/ 46770001
*/*                                                                  */ 46780001
*/*                CDDL PL/X DECLARATIONS                            */ 46790001
*/*------------------------------------------------------------------*/ 46800001
*/*                                                                  */ 46810001
*/*  DECLARATION NAME = CDDL                                         */ 46820001
*/*                                                                  */ 46830001
*/*  DESCRIPTIVE NAME =   CDSA DataLib Service parameters            */ 46840001
*/*                                                                  */ 46850001
*/*  FUNCTION = Provides the ASSEMBLER mapping of the input paramter */ 46860001
*/*             list for the CDSA Datalib callable service           */ 46870001
*/***************************************************************@L8A*/ 46880001
* DECLARE                                                               46890001
*  1 CDDL  BASED(ADDR(COMP_SERVR_PARMS)), /* Mapping for CDDL        */ 46900001
*   3 CDDL_FUNC@       PTR(31),   /* Address of 1 byte input function   46910001
*                                    code.  Constants for the function  46920001
*                                    codes are supplied below        */ 46930001
*   3 CDDL_ATTRIBUTES@ PTR(31),   /* Address of full word of input      46940001
*                                    attributes */                      46950001
*   3 CDDL_USERID@     PTR(31),   /* Address of a 9 byte input area     46960001
*                                    for the RACF userid (1 byte for    46970001
*                                    the length followed by 8 bytes     46980001
*                                    for the RACF userid itself).       46990001
*                                    A length of 0 indicates the        47000001
*                                    current user is the ring owner  */ 47010001
*   3 CDDL_RING@       PTR(31),   /* Address of a variable length       47020001
*                                    input area for the ring name       47030001
*                                    (1 byte for the length followed    47040001
*                                    by up to 237 bytes for the ring    47050001
*                                    name).  Parameter ignored for      47060001
*                                    CheckStatus, AbortQuery, and       47070001
*                                    DataGetNext                     */ 47080001
*   3 CDDL_VERSION@    PTR(31),   /* Address of a 4 byte area           47090001
*                                    containing the input version       47100001
*                                    number for the function specific   47110001
*                                    specific parameter list pointed    47120001
*                                    to by CDDL_PARMLIST@.  Must be     47130001
*                                    set to 0.                       */ 47140001
*                                                                       47150001
*   3 CDDL_PARMLIST@   PTR(31),   /* Address of the input function      47160001
*                                    specific parameter list         */ 47170001
*    5 CDDL_LAST_PARM Bit(1);     /* Last parm in variable length parm  47180001
*                                    list                        @L8A*/ 47190001
* DECLARE                                                               47200001
*  CDDL_LEN FIXED(31) CONSTANT(LENGTH(CDDL)); /* Constant - length of   47210001
*                                    CDDL                        @L8A*/ 47220001
*                                                                       47230001
*/*------------------------------------------------------------------*/ 47240001
*/*                                                                  */ 47250001
*/*                 Function code constants                          */ 47260001
*/*                                                                  */ 47270001
*/*------------------------------------------------------------------*/ 47280001
* DECLARE                                                               47290001
*                                                                       47300001
*  CDDL_DATA_GET_FIRST FIXED(8) CONSTANT(1), /* DataGetFirst - locate   47310001
*                                    and return the first               47320001
*                                    certificate in the ring            47330001
*                                    matching the specified criteria */ 47340001
*  CDDL_DATA_GET_NEXT  FIXED(8) CONSTANT(2), /* DataGetNext -           47350001
*                                    locate and return the next         47360001
*                                    certificate in the ring            47370001
*                                    matching the same criteria         47380001
*                                    specified in the previous          47390001
*                                    DataGetFirst/DataGetNext           47400001
*                                    call                            */ 47410001
*  CDDL_DATA_ABORT     FIXED(8) CONSTANT(3), /* DataAbortQuery -        47420001
*                                    free resources from previous       47430001
*                                    DataGetFirst or DataGetNext        47440001
*                                    call                            */ 47450001
*  CDDL_CHECK_STATUS   FIXED(8) CONSTANT(4), /* CheckStatus - return    47460001
*                                    the TRUST/NOTRUST status for a     47470001
*                                    given certificate           @LCC*/ 47480001
*  CDDL_GET_UPDATE_CODE FIXED(8) CONSTANT(5), /* GetUpdateCode -        47490001
*                                    returns the sequence number for    47500001
*                                    for a ring                  @LFC*/ 47510001
*  CDDL_INC_SER_NUM     FIXED(8) CONSTANT(6); /* IncSerialNum -         47520001
*                                             Increments the Serial     47530001
*                              Number for a Digital Certificate  @LFA*/ 47540001
*                                                                       47550001
*/*------------------------------------------------------------------*/ 47560001
*/*                                                                  */ 47570001
*/* Function Specific Parameter Lists                                */ 47580001
*/*                                                                  */ 47590001
*/*------------------------------------------------------------------*/ 47600001
* DECLARE                         /* Function code CDDL_DATA_ABORT   */ 47610001
*  1 CDDL_ABORT BASED,            /* Parameter list for                 47620001
*                                    DataAbortQuery                  */ 47630001
*    3 CDDL_PREV_HANDLE PTR(31);  /* Address of an input/output area    47640001
*                                    from previous DataGetFirst or      47650001
*                                    DataGetNext call            @L8A*/ 47660001
* DECLARE                         /* Function codes                     47670001
*                                    CDDL_DATA_GET_FIRST and            47680001
*                                    CDDL_DATA_GET_NEXT              */ 47690001
*  1 CDDL_GET_CERT BASED,         /* Parameter list for DataGetFirst    47700001
*                                    and DataGetNext                 */ 47710001
*    3 CDDL_RES_HANDLE PTR(31),   /* Address of input/output area       47720001
*                                    mapped by CDDL_HANDLE_MAP       */ 47730001
*    3 CDDL_CERT_USAGE CHAR(4),   /* 4 byte output area containing      47740001
*                                    certificate usage flags            47750001
*                                    x'00000000' - Usage is SITE        47760001
*                                    x'00000002' - Usage is CERTAUTH    47770001
*                                    x'00000008' - Usage is PERSONAL    47780001
*                                    x'FFFFFFF5' - reserved bits must   47790001
*                                                 be set to zero @L8A*/ 47800001
*    3 CDDL_CERT_DEFAULT FIXED(32), /* Output default indicator.        47810001
*                                    Zero value indicates not           47820001
*                                    default certificate for ring,      47830001
*                                    non-zero indicates this is         47840001
*                                    the default certificate.        */ 47850001
*    3 CDDL_CERT_LEN    FIXED(32), /* On input, contains the length     47860001
*                                    of the certificate area pointed    47870001
*                                    to by CDDL_CERT_PTR. On output,    47880001
*                                    contains the actual size of the    47890001
*                                    certificate returned or 0 if no    47900001
*                                    certificate returned.           */ 47910001
*    3 CDDL_CERT_PTR PTR(31),     /* Input value specifying             47920001
*                                    address of output certificate      47930001
*                                    data area                       */ 47940001
*    3 CDDL_PK_LEN FIXED(32),     /* On input, contains size of         47950001
*                                    private key area pointed to by     47960001
*                                    CDDL_PK_PTR.  On output            47970001
*                                    contains the length of the         47980001
*                                    private key returned at            47990001
*                                    address CDDL_PK_PTR or 0 if no     48000001
*                                    private key was returned        */ 48010001
*    3 CDDL_PK_PTR PTR(31),       /* Input value specifying address     48020001
*                                    of private key output data         48030001
*                                    area                            */ 48040001
*    3 CDDL_PK_TYPE FIXED(32),    /* Output value indicating            48050001
*                                    type of private key. See           48060001
*                                    constants below.                */ 48070001
*    3 CDDL_PK_BITSIZE FIXED(32), /* Output value indicating the        48080001
*                                    size of the private key            48090001
*                                    modulus in bits                 */ 48100001
*    3 CDDL_LABEL_LEN FIXED(32),  /* On input, contains the length of   48110001
*                                    the field pointed to by            48120001
*                                    CDDL_LABEL_PTR, and must be at     48130001
*                                    least 32.  On output, contains     48140001
*                                    the length of the label returned   48150001
*                                    at the address in                  48160001
*                                    CDDL_LABEL_PTR, and will be 32     48170001
*                                    or less.                        */ 48180001
*    3 CDDL_LABEL_PTR PTR(31),    /* Input value specifying the         48190001
*                                    address of the output area         48200001
*                                    to be used for the label name   */ 48210001
*    3 CDDL_RACF_USERID CHAR(9),  /* Input value containing a           48220001
*                                    1 byte length followed by the      48230001
*                                    certificate owning userid. The     48240001
*                                    combination of the output          48250001
*                                    label and this field uniquely      48260001
*                                    identify a certificate          */ 48270001
*    3 *            CHAR(3),      /* Reserved                        */ 48280001
*    3 CDDL_SDN_LEN FIXED(32),    /* On input, contains the length of   48290001
*                                    the output buffer pointed to by    48300001
*                                    CDDL_SDN_PTR.  On output, contains 48310001
*                                    the length of the BER encoded      48320001
*                                    Subject's Distinguished Name       48330001
*                                    returned in CDDL_SDN_LEN.       */ 48340001
*    3 CDDL_SDN_PTR Ptr(31),      /* Input value specifying the         48350001
*                                    address of the output area to be   48360001
*                                    used for the Subjects's            48370001
*                                    Distinguished Name.             */ 48380001
*    3 CDDL_RECID_LEN FIXED(32),  /* Output value containing the        48390001
*                                    length of the record ID            48400001
*                                    returned in area pointed to by     48410001
*                                    CDDL_RECID_PTR, or 0 if no         48420001
*                                    record returned.                */ 48430001
*    3 CDDL_RECID_PTR PTR(31);    /* Input value specifying the         48440001
*                                    address of a 246 byte area to      48450001
*                                    contain output record ID data      48460001
*                                                                @L8A*/ 48470001
* DECLARE                         /* Function codes for CheckStatus  */ 48480001
*  1 CDDL_CRT_STATUS BASED,   /* Parameter list for CheckStatus  @LAA*/ 48490001
*    3 CDDL_CRT_LEN FIXED(32), /* Address of an input/output area       48500001
*                                 On input, contains the length of the  48510001
*                                 certificate area pointed to by        48520001
*                                 CDDL_CRT_PTR.                  @LAA*/ 48530001
*    3 CDDL_CRT_PTR   PTR(31); /* Input value specifying address of     48540001
*                              output certificate data area      @LAA*/ 48550001
* DECLARE                                                               48560001
*  1 CDDL_GET_UPDATE   BASED,    /* Parm list for GetUpdateCode  @LCA*/ 48570001
*    3 CDDL_RING_SEQN FIXED(32); /* Ring sequence number         @LCA*/ 48580001
*                                                                       48590001
* DECLARE                                                               48600001
*  1 CDDL_ISN   BASED,            /* Parm List for IncSerialNum  @LFA*/ 48610001
*    2 CDDL_ISN_CLEN   FIXED(32), /* Length of DER Encoded input        48620001
*                                    Digital Certificate         @LFA*/ 48630001
*    2 CDDL_ISN_CPTR   PTR(31),   /* Address of DER Encoded input       48640001
*                                    Digital Certificate         @LFA*/ 48650001
*    2 CDDL_ISN_SERNUM CHAR(8);   /* Output - Incremented Serial Number 48660001
*                                    of Digital Certificate      @LFA*/ 48670001
*                                                                       48680001
*/*------------------------------------------------------------------*/ 48690001
*/*                                                                  */ 48700001
*/*       Private Key Type Constants returned in CDDL_PK_TYPE        */ 48710001
*/*                                                                  */ 48720001
*/*------------------------------------------------------------------*/ 48730001
* DECLARE                                                               48740001
*  CDDL_PKCS10        FIXED(32) CONSTANT(1), /* Private key is          48750001
*                                     PKCS#10 DER encoded            */ 48760001
*  CDDL_ICSF10        FIXED(32) CONSTANT(2); /* Private key is          48770001
*                                     a ICSF token               @L8A*/ 48780001
*/*------------------------------------------------------------------*/ 48790001
*/*                                                                  */ 48800001
*/*  Mapping of input/output area pointed to by CDDL_RES_HANDLE      */ 48810001
*/*                                                                  */ 48820001
*/*------------------------------------------------------------------*/ 48830001
* DECLARE                                                               48840001
*  1 CDDL_HANDLE_MAP  BASED,      /* Mapping of area pointed to by      48850001
*                                    CDDL_RES_HANDLE & CDDL_PREV_HANDLE 48860001
*                                                                @L9C*/ 48870001
*    3 CDDL_TOKEN Ptr,            /* Reserved for use by the security   48880001
*                                    server.  This value must be        48890001
*                                    preserved for subsequent calls     48900001
*                                    to DataGetNext and                 48910001
*                                    DataAbortQuery                  */ 48920001
*    3 CDDL_PREDICATES FIXED(32), /* Input value specifying             48930001
*                                    the selection criteria.  See       48940001
*                                    constants below                 */ 48950001
*    3 CDDL_ATTR_ID FIXED(32),    /* Input value specifying             48960001
*                                    the attribute to query on.         48970001
*                                    Ignored if CDDL_PREDICATES is 0.   48980001
*                                    See constants below for possible   48990001
*                                    values.                         */ 49000001
*    3 CDDL_ATTR_LEN FIXED(32),   /* Input value containing the         49010001
*                                    length of the attributes           49020001
*                                    supplied in CDDL_ATTR_PTR       */ 49030001
*    3 CDDL_ATTR_PTR PTR(31);     /* Input value containing             49040001
*                                    the address of query               49050001
*                                    attribute data.  Type of data      49060001
*                                    supplied determined by             49070001
*                                    CDDL_ATTR_ID                @L8A*/ 49080001
*/*------------------------------------------------------------------*/ 49090001
*/*                                                                  */ 49100001
*/* Input selection criteria constants supplied in CDDL_PREDICATES   */ 49110001
*/*                                                                  */ 49120001
*/*------------------------------------------------------------------*/ 49130001
* DECLARE                                                               49140001
*  CDDL_NONE          FIXED(32) CONSTANT(0), /* No selection criteria*/ 49150001
*  CDDL_ATTR          FIXED(32) CONSTANT(1); /* Query on a              49160001
*                                    particular attribute        @L8A*/ 49170001
*/*------------------------------------------------------------------*/ 49180001
*/*                                                                  */ 49190001
*/* Input query attributes supplied in CDDL_ATTR_ID                  */ 49200001
*/*                                                                  */ 49210001
*/*------------------------------------------------------------------*/ 49220001
* DECLARE                                                               49230001
*  CDDL_LABEL FIXED(32) CONSTANT(1), /* The certificate label, up to    49240001
*                                       32 characters long           */ 49250001
*  CDDL_DEFAULT FIXED(32) CONSTANT(2), /* The default flag, a 4 byte    49260001
*                                    field specified as 0 for NO, or    49270001
*                                    a non-zero value for YES        */ 49280001
*  CDDL_SUBJECT FIXED(32) CONSTANT(3); /* BER encoded subject's name */ 49290001
*                                                                       49300001
*/********************************************************************/ 49310001
*/*                                                                  */ 49320001
*/*              KERB PL/X DECLARATIONS                              */ 49330001
*/*------------------------------------------------------------------*/ 49340001
*/*                                                                  */ 49350001
*/*  DECLARATION NAME = KERB                                         */ 49360001
*/*                                                                  */ 49370001
*/*  DESCRIPTIVE NAME =   RACF Kerberos information interface        */ 49380001
*/*                                                                  */ 49390001
*/*  FUNCTION = Provides the PL/X mapping of the input parameter     */ 49400001
*/*      list for the service which will update or retrieve Kerberos */ 49410001
*/*      information                                                 */ 49420001
*/*                                                              @LEA*/ 49430001
*/********************************************************************/ 49440001
* DECLARE                                                               49450001
*  1 KERB  BASED(ADDR(COMP_SERVR_PARMS)),  /*                    @LEA*/ 49460001
*                                                                       49470001
*   3 KERB_FUNC@        PTR(31),  /* Address of 1 byte function code    49480001
*                                                                @LEA*/ 49490001
*   3 KERB_RACF_NAME@   PTR(31),  /* Address of a 9 byte area           49500001
*                                    containing a RACF name preceded by 49510001
*                                    a one byte length. x'00' in first  49520001
                                     byte if not specified.      @LEA*/ 49530001
*   3 KERB_NAME@        PTR(31),  /* Address of 240 byte area for the   49540001
*                                    Kerberos Principal.  x'00' in the  49550001
*                                    first byte if not specified.@LEA*/ 49560001
*   3 KERB_DATA_AREA@   PTR(31),  /* Address of a caller-supplied area  49570001
*                                    for the field mappings.     @LEA*/ 49580001
*     5 KERB_LAST_PARM BIT(1);    /* Variable length parameter list.    49590001
*                                    This is the last parameter  @LEA*/ 49600001
*                                                                       49610001
* DECLARE                                                               49620001
*  KERB_LEN FIXED(31) CONSTANT(LENGTH(KERB)), /* Constant KERB length   49630001
*                                                                @LEA*/ 49640001
*/*                 Function code values                         @LEA*/ 49650001
*  KERB_GET_USER  FIXED(8) CONSTANT(1), /* Get user information  @LEA*/ 49660001
*  KERB_UPDATE_REVOKECT                                                 49670001
*                 FIXED(8) CONSTANT(2), /* Update revoke count   @LEA*/ 49680001
*  KERB_RESET_REVOKECT                                                  49690001
*                 FIXED(8) CONSTANT(3), /* Update revoke count   @LEA*/ 49700001
*  KERB_GET_REALM FIXED(8) CONSTANT(4); /* Get realm information @LEA*/ 49710001
*                                                                       49720001
*/********************************************************************/ 49730001
*/* field structure and field mapping                            @LEA*/ 49740001
*/********************************************************************/ 49750001
* DECLARE                                                               49760001
*  1 KERB_FLDDATA_MAP   BASED,       /* Mapping for Field entry  @LEA*/ 49770001
*    3 KERB_FLDDATA_LEN FIXED(16),   /* Length of field struct   @LEA*/ 49780001
*    3 KERB_FLD_NUM FIXED(16),       /* Number of fields to update      49790001
*                                       or list                  @LEA*/ 49800001
*    3 KERB_FLDSTRT CHAR(0);         /* First field entry        @LEA*/ 49810001
*                                                                       49820001
* DECLARE                                                               49830001
*  1 KERB_FLDENTRY   BASED,          /* Mapping for Field entry  @LEA*/ 49840001
*    3 KERB_FLD_NAME CHAR(8),        /* Field name               @LEA*/ 49850001
*    3 KERB_FLD_LEN  FIXED(16) BDY(BYTE), /* Field data length   @LEA*/ 49860001
*    3 KERB_FLD_DATA CHAR(*);        /* Field data               @LEA*/ 49870001
*                                                                       49880001
*/********************************************************************/ 49890001
*/*                                                                  */ 49900001
*/*              TKTS PL/X DECLARATIONS                              */ 49910001
*/*------------------------------------------------------------------*/ 49920001
*/*                                                                  */ 49930001
*/*  DECLARATION NAME = TKTS                                         */ 49940001
*/*                                                                  */ 49950001
*/*  DESCRIPTIVE NAME =  Parse or Extract from Kerberos Ticket       */ 49960001
*/*                                                                  */ 49970001
*/*  FUNCTION = Provides the PL/X mapping of the input parameter     */ 49980001
*/*             list for the R_ticketserv callable service           */ 49990001
*/*                                                              @LHA*/ 50000001
*/********************************************************************/ 50010001
* DECLARE                                                               50020001
*  1 TKTS  BASED(ADDR(COMP_SERVR_PARMS)),  /*                    @LHA*/ 50030001
*                                                                       50040001
*   3 TKTS_PARM_ALET@   PTR(31),  /* Address of ALET for remaining      50050001
*                                    parameters                  @LHA*/ 50060001
*   3 TKTS_FUNC@        PTR(31),  /* Address of 2 byte function code    50070001
*                                                                @LHA*/ 50080001
*   3 TKTS_OPTION_WORD@ PTR(31),  /* Address of a full word containing  50090001
*                                    binary zeros. The area pointed to  50100001
*                                    by this parameter is reserved for  50110001
*                                    future use.                 @LHA*/ 50120001
*   3 TKTS_CRED_AREA@   PTR(31),  /* Address of an area consisting of   50130001
*                                    a 2 byte length field followed by  50140001
*                                    a ticket.                   @LHA*/ 50150001
*   3 TKTS_OPTIONS@     PTR(31),  /* Address of an address containing   50160001
*                                    a binary bit string which          50170001
*                                    identifies the credential specific 50180001
*                                    processing to be performed. This   50190001
*                                    parameter is reserved for future   50200001
*                                    use.                        @LHA*/ 50210001
*   3 TKTS_PRIN_USERID@ PTR(31),  /* Address of a pre-allocated storage 50220001
*                                    area containing 242 bytes which is 50230001
*                                    the output principal name preceded 50240001
*                                    by a 2 byte length field.   @LHA*/ 50250001
*     5 TKTS_LAST_PARM BIT(1);    /* Variable length parameter list.    50260001
*                                    This is the last parameter  @LHA*/ 50270001
* DECLARE                                                               50280001
*  TKTS_LEN FIXED(31) CONSTANT(LENGTH(TKTS)), /* Constant TKTS length   50290001
*                                                                @LHA*/ 50300001
*/*                 Function code values                         @LHA*/ 50310001
*  TKTS_RETURN_NAME FIXED(16) CONSTANT(1); /* Parse and return Kerberos 50320001
*                                            principal name      @LHA*/ 50330001
*                                                                       50340001
*/***************************************************************@0AA*/ 50350001
*                                                                       50360001
*/********************************************************************/ 50370001
*/*                                                                  */ 50380001
*/*                PKIS PL/X DECLARATIONS                            */ 50390001
*/*------------------------------------------------------------------*/ 50400001
*/*                                                                  */ 50410001
*/* DECLARATION NAME = PKIS                                          */ 50420001
*/*                                                                  */ 50430001
*/* DESCRIPTIVE NAME = PKIS Service parameters                       */ 50440001
*/*                                                                  */ 50450001
*/* FUNCTION = Provides the PL/X mapping of the input parameter      */ 50460001
*/*            list for the PKIS callable service R_PKIServ          */ 50470001
*/***************************************************************@0AA*/ 50480001
*                                                                       50490001
* DECLARE                                                               50500001
*  1 PKIS   BASED(ADDR(COMP_SERVR_PARMS)), /* Mapping for PKIS   @0AA*/ 50510001
*   2 PKIS_NUM_PARMS@    PTR(31), /* Address of a Four-Byte variable    50520001
*                                    that contains the number of        50530001
*                                    parameters that follow in the      50540001
*                                    non-request specific portion of    50550001
*                                    the R_PKIServ callable service     50560001
*                                    Parameter List              @0AA*/ 50570001
*   2 PKIS_FUNC@         PTR(31), /* Address of a Two-Byte variable     50580001
*                                    that contains the code of the      50590001
*                                    requested function.  Constants     50600001
*                                    for the function codes codes       50610001
*                                    are declared below          @0AA*/ 50620001
*   2 PKIS_ATTRIBUTES@   PTR(31), /* Address of a Four-Byte variable    50630001
*                                    that contains attribute flags      50640001
*                                    for the service             @0AA*/ 50650001
*   2 PKIS_LOG_STRING@   PTR(31), /* Address of a Variable-Length area  50660001
*                                    that contains the LOG string to    50670001
*                                    be passed to RACROUTE (1 byte for  50680001
*                                    the length followed by up to 255   50690001
*                                    bytes for the LOG string itself)   50700001
*                                                                @0AA*/ 50710001
*   2 PKIS_PARM_VER@     PTR(31), /* Address of a Four-Byte variable    50720001
*                                    that contains the version number   50730001
*                                    of the Function Specific           50740001
*                                    Parameter List (PKIS_FUNC_PARML@)  50750001
*                                                                @0AA*/ 50760001
*   2 PKIS_FUNC_PARML@   PTR(31), /* Address of the FSPL -              50770001
*                                    Function Specific Parameter List   50780001
*                                    (FSPL = the Parameter List that    50790001
*                                            corresponds to the         50800001
*                                            Function Code)      @0AA*/ 50810001
*     3 PKIS_LAST_PARM     BIT(1); /* Variable length parameter list.   50820001
*                                  This is the last parameter    @0AA*/ 50830001
*                                                                       50840001
* DECLARE                                                               50850001
*  PKIS_LEN FIXED(31) CONSTANT(LENGTH(PKIS)); /* Constant - length of   50860001
*                                    PKIS                        @0AA*/ 50870001
*                                                                       50880001
*/*------------------------------------------------------------------*/ 50890001
*/*                                                                  */ 50900001
*/* PKIS Function Code Constants                                 @0AA*/ 50910001
*/*                                                                  */ 50920001
*/*------------------------------------------------------------------*/ 50930001
*                                                                       50940001
* DECLARE                                                               50950001
*  PKIS_GENCERT        FIXED(16) CONSTANT(1), /* GENCERT Function of    50960001
*                                             RACDCERT.  Generates a    50970001
*                                             basic X.509 V3 digital    50980001
*                                             certificate        @0AA*/ 50990001
*  PKIS_EXPORT         FIXED(16) CONSTANT(2); /* EXPORT  Function of    51000001
*                                             RACDCERT.  Extracts a     51010001
*                                             digital certificate by    51020001
*                                             Certificate Request ID    51030001
*                                                                @0AA*/ 51040001
*                                                                       51050001
*/*------------------------------------------------------------------*/ 51060001
*/*                                                                  */ 51070001
*/* PKIS Function Specific Parameter Lists                       @0AA*/ 51080001
*/*                                                                  */ 51090001
*/*------------------------------------------------------------------*/ 51100001
*                                                                       51110001
* DECLARE                                                               51120001
*  1 PKIS_GENCERT_MAP    BASED,     /* Function Specific Parameter List 51130001
*                                      (FSPL) for GENCERT        @0AA*/ 51140001
*   2 PKIS_GENC_EYECATCH   CHAR(8), /* Eyecatcher for the GENCERT FSPL  51150001
*                                   Left justified blank filled string  51160001
*                                   containing the text 'GENCERT '      51170001
*                                                                @0AA*/ 51180001
*   2 PKIS_GENC_CERTPL_LEN FIXED(32), /* Length (in bytes) of the       51190001
*                                        Digital Certificate            51200001
*                                        generation PList        @0AA*/ 51210001
*   2 PKIS_GENC_CERTPL@    PTR(31), /* Address of the                   51220001
*                                      Digital Certificate              51230001
*                                      generation PList          @0AA*/ 51240001
*   2 PKIS_GENC_CERTID@    PTR(31); /* Address of a 57-Byte area that   51250001
*                                   contains the Output Certificate     51260001
*                                   Request ID (the first byte of this  51270001
*                                   area contains the length of the     51280001
*                                   Output Certificate Request ID)      51290001
*                                                                @0AA*/ 51300001
*                                                                       51310001
*/*-------------------------------*/                                    51320001
*                                                                       51330001
* DECLARE                                                               51340001
*  1 PKIS_CPL_ENTRY      BASED,     /* Certificate Request PList entry  51350001
*                                      (a single GENCERT PList entry)   51360001
*                                                                @0AA*/ 51370001
*   2 PKIS_CPL_FIELD_NAME  CHAR(12), /* Certificate Request Field Name  51380001
*                                                                @0AA*/ 51390001
*   2 PKIS_CPL_FIELD_LEN   FIXED(32), /* Length (in bytes) of the       51400001
*                                     Request Field Name value   @0AA*/ 51410001
*   2 PKIS_CPL_FIELD_VALUE CHAR(*);   /* Request Field Name value       51420001
*                                                                @0AA*/ 51430001
*                                                                       51440001
*/*-------------------------------*/                                    51450001
*                                                                       51460001
* DECLARE                                                               51470001
*  1 PKIS_EXPORT_MAP     BASED,     /* Function Specific Parameter List 51480001
*                                      (FSPL) for EXPORT         @0AA*/ 51490001
*   2 PKIS_EXP_EYECATCH    CHAR(8), /* Eyecatcher for the EXPORT FSPL   51500001
*                                   Left justified blank filled string  51510001
*                                   containing the text 'EXPORT  '      51520001
*                                                                @0AA*/ 51530001
*   2 PKIS_EXP_CERTAN_LEN  FIXED(32), /* Length (in bytes) of the       51540001
*                                        preallocated Certificate       51550001
*                                        Anchor area             @0AA*/ 51560001
*   2 PKIS_EXP_CERTAN@     PTR(31), /* Address of the preallocated      51570001
*                                      Certificate Anchor area   @0AA*/ 51580001
*   2 PKIS_EXP_CERTID@     PTR(31); /* Address of a 57-Byte area that   51590001
*                                   contains the Input Certificate      51600001
*                                   Request ID that will be used to     51610001
*                                   locate the Digital Certificate      51620001
*                                   to be EXPORTed (the first byte of   51630001
*                                   this area contains the length of    51640001
*                                   the Input Certificate Request ID)   51650001
*                                                                @0AA*/ 51660001
*                                                                       51670001
*/***************************************************************@0AA*/ 51680001
*                                                                       51690001
