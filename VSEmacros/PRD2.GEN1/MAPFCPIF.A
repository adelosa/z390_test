*%GOTO MMAPFCP;                                                         00010099
*/* PL/X  COMMENT TO ISOLATE  ASSEMBLER VERSION                         00020099
         MACRO                                                          00030099
         MAPFCPIF                                                       00040099
.*       IBM DISK OPERATING SYSTEM                                      00041099
*        SUPERVISOR - MAPFCPIF - 5686-CF7                               00042099
*                                                                       00043099
         AGO   .ZZZ                                                     00044099
*        LICENSED MATERIALS - PROPERTY OF IBM                           00045099
*        "RESTRICTED MATERIALS OF IBM"                                  00046099
*        5686-CF7                                                       00047099
*        (C) COPYRIGHT IBM CORP. 2004                                   00048099
.ZZZ     ANOP                                                           00049099
.**** START OF SPECIFICATIONS ***************************************** 00050099
.*                                                                    * 00051099
.*01* MODULE-TYPE = MACRO                                             * 00052099
.*                                                                    * 00053099
.*01* DESCRIPTIVE NAME = This macro describes the layout of an        * 00054099
.*                       Interface Control Block used to communicate  * 00055099
.*                       with the FCP system task                     * 00056099
.*                                                                    * 00057099
.*  STATUS           =  NEW MACRO - FIRST RELEASE z/VSE 3.1           * 00058099
.*                                                                    * 00059099
.*  FUNCTION         =  SHOW LAYOUT                                   * 00059199
.*  NOTES            =  NONE                                          * 00059299
.*  DEPENDENCIES     =  NONE                                          * 00059399
.*  RESTRICTIONS     =  NONE                                          * 00059499
.*  REGISTER CONVENT.=  NONE                                          * 00059599
.*  PATCH LABEL      =  NONE                                          * 00059699
.*  MACRO TYPE       =  BILINGUAL                                     * 00059799
.*  PROCESSOR        =  ASM and PL/X                                  * 00059899
.*                                                                    * 00059999
.*  MACRO SIZE       =  SEE OUTPUT                                    * 00060099
.*  ATTRIBUTES       =  MAPPING DSECT                                 * 00060199
.*  ENTRY POINT      =                                                * 00060299
.*  PURPOSE          =  SEE FUNCTION                                  * 00060399
.*  LINKAGE          =  SEE INPUT                                     * 00060499
.*  CALLER           =  SUPERVISOR                                    * 00060599
.*  INPUT            =  NONE                                          * 00060699
.*  OUTPUT           =  DSECT                                         * 00060799
.*                                                                    * 00060899
.*  EXIT NORMAL      =  MACRO EXPANSION                               * 00060999
.*                                                                    * 00061099
.*  EXIT ERROR       =  NONE                                          * 00061199
.*                                                                    * 00061299
.*  EXTERNAL REFEREN.=  NONE                                          * 00061399
.*  EXTERNAL REFEREN.=  NONE                                          * 00061499
.*  ROUTINES         =  NONE                                          * 00061599
.*  DATA AREAS       =  NONE                                          * 00061699
.*  CONTROL BLOCKS   =  NONE                                          * 00061799
.*  TABLES           =  NONE                                          * 00061899
.*  MACROS           =  NONE                                          * 00061999
.*  CHANGE ACTIVITIES=  NEW MACRO   FIRST RELEASE z/VSE 3.1    @D68DDMZ 00062099
.*  MODIFIED REGISTER=  NONE                                          * 00062199
.*                                                                    * 00062299
.*  A000000-999999                                             @D68DDMZ 00062399
.** END OF SPECICATIONS *********************************************** 00062499
.*                                                                      00062599
ENQFCPCB DSECT                                                          00062699
EFCSCSIC DS    0Cl44             Describes SCSI connection              00062799
EFCSCCUU DS    H                 SCSI CUU                               00062899
EFCFCCUU DS    H                 FCP CUU                                00062999
EFC_FLAG DS    X                 Flag byte                              00063099
EFC_STG1 EQU   X'80'             IPL stage 1                            00064099
EFC_STG2 EQU   X'40'             IPL stage 2                            00065099
*                                if neither stage 1 nor stage 2 is set  00066099
*                                stage 3 is assumed                     00067099
EFC_NMSG EQU   X'20'             No WTOR usable to issue a message      00068099
EFC_DEV3 EQU   X'10'             IPL stage 2, end of 3 device system    00069099
EFC_TDMP EQU   X'08'             Tape SA dump                           00069199
*                                EFC_STG2 is also set                   00070099
         DS    XL3               Reserved for future use                00080099
EFCWWPN  DS    XL8               64 bit WWPN value                      00090099
EFCLUN   DS    XL8               64 bit LUN value                       00100099
EFCFCPP  DS    A                 Ptr to FCP card control block          00110099
EFCLUNP  DS    A                 Ptr to LUN control block               00120099
EFCQTCB  DS    A                 SEND_FCP QTCB ptr set by IJBFCP        00130099
EFCQTCBA DS    A                 Abort QTCB ptr set by IJBFCP           00140099
EFCSFCPL DS    A                 Addr of sendfcp parameterlist          00150099
EFCRETC  DS    A                 Return code set by IJBFCP              00160099
EFCRET0  EQU   0                 SCSI connection successfully opened    00170099
EFCRET4  EQU   4                 Device not operational                 00180099
EFCRET8  EQU   8                 Storage could not be allocated         00190099
EFCRET12 EQU   12                I/O error                              00200099
EFCRET16 EQU   16                Configuration problem                  00210099
EFCREAS  DS    A                 Reason code set by IJBFCP              00220099
***                                                                     00230099
EFCPREQB DS    0F                systemtask req control block           00240099
***                                                                     00250099
EFCPCPTR DS    0F                Enqueue FCP chain pointer(FCP task IF) 00260099
EFCSUBCH DS    0F                FCP subchannel word                    00270099
         DS    H                 0001                                   00280099
EFCSUBC1 DS    H                 Subchannel number                      00290099
EFCPIPTR DS    0F                Ptr to input for IJBFCP                00300099
EFCLPM   DS    X                 Logical path mask                      00310099
         DS    XL3                                                      00320099
EFCPFC   DS    X                 Function code to trigger IJBFCP action 00330099
EFCPSFCP EQU   0                 Send FCP command                       00340099
EFCPOPEN EQU   1                 Open SCSI connection (init)            00350099
EFCPAFCP EQU   2                 Abort FCP command                      00360099
EFCPREC  EQU   3                 Recovery request                       00370099
EFCPCLOS EQU   4                 Close FCP adapter (used by IPL)        00380099
EFCPSTRE EQU   5                 Start a status read request            00390099
EFCPMSG  EQU   6                 Write a message                        00400099
EFCPCLUN EQU   7                 Close a single LUN                     00410099
EFCPSREL EQU   8                 Send a release command                 00412099
EFCPDEL  EQU   9                 Delete a scsi connection               00413099
EFCPFLAG DS    X                 flag byte                              00420099
EFCFREQQ EQU   X'80'             element from req element queue         00430099
EFCFMSGQ EQU   X'40'             element from msg element queue         00431099
.****---------------------------> EFCFMSGQ is used absolute in ENQFCP   00432099
EFCPTID  DS    H                 TID of requestor                       00433099
EFCPECB  DS    0F                ECB posted by FCP task if caller is    00434099
*                                waiting on completion                  00435099
EFCPFSFR DS    F                 Fsfreq ptr if called by FCP I/R handl. 00436099
EFCPEND  DS    0F                                                       00437099
EFCPLNG  EQU   *-EFCSCSIC        Length of control block                00438099
EFCPLNG1 EQU   *-EFCPREQB        system task req cb                     00439099
*                                                                       00440099
SENDFCPL DSECT                                                          00450099
SFCPEYEC DS    CL4               Eye catcher                            00460099
SFCPFCUU DS    H                 Fcp cuu                                00470099
SFCPSCUU DS    H                 Scsi cuu                               00480099
SFCPSCWA DS    F                 Addr of SCSI work area                 00490099
SFCPUKEY DS    X                 Key of user's input/output area        00500099
         DS    X                 Reserved for future use                00510099
SFCPNLE  DS    H                 No of address/length pairs following   00520099
SFCP1ADR DS    0H                End of fixed part, first entry         00521099
SNDFCPLL EQU   *-SENDFCPL        Length of fixed part                   00531099
SFCPFC   EQU   EFCPSFCP          Send FCP function code                 00560099
*                                                                       00560199
SENDFLE  DSECT                   Send fcp list entry                    00561099
SFCPADR  DS    F                 Real address of data area              00562099
SFCPLEN  DS    F                 Length (max 4K) of data area           00563099
SFCPEAD  DS    F                 Real end address of area               00564099
SENDFLEL EQU   *-SENDFLE         Length of list entry                   00564199
*                                                                       00565099
FCPPARML DSECT                                                          00580099
FCPMDESC DS    H                 Message descriptor                     00590099
FCPTYP0  EQU   0                 type 0 message (unconditional)         00591099
FCPTYP0X EQU   X'8000'           type 0 message (only with debug=on)    00592099
FCPTYP1  EQU   1                 type 1 message (unconditional)         00593099
FCPTYP1X EQU   X'8001'           type 1 message (only with debug=on)    00594099
FCPTYP2  EQU   2                 type 2 message (unconditional)         00595099
FCPTYP2X EQU   X'8002'           type 2 message (only with debug=on)    00595199
FCPREASN DS    H                 Reason code                            00595299
FCPDMASK DS    0F                Parameter definition mask              00595399
FCPDMSK0 DS    X                 byte 0 of definition mask              00595499
funcind  equ   X'80'             calling function                       00595599
scsiind  equ   X'40'             CUU of SCSI device                     00595699
fcpind   equ   X'20'             CUU of FCP device                      00595799
ccswind  equ   X'10'             CCSW available                         00595899
snsind   equ   X'08'             sense data available                   00595999
fsfcind  equ   X'04'             last fsf command                       00596099
portind  equ   X'02'             port specified                         00596199
lunind   equ   X'01'             lun  specified                         00596299
FCPDMSK1 DS    X                 byte 1 of definition mask              00596399
qtcbpind equ   X'80'             qtcb protocol status specified         00596499
qtcbfind equ   X'40'             qtcb fsf status specified              00596599
nservind equ   X'20'             nserver request failed                 00596699
statind  equ   X'10'             unsoliceted status                     00596799
elsind   equ   X'08'             ELS payload (first 4 bytes)            00596899
erwind   equ   X'04'             erw from irb after channel prog chk    00596999
srbind   equ   X'02'             bit error threshold                    00597099
FCPDMSK2 DS    X                 byte 2 of definition mask              00597299
FCPDMSK3 DS    X                 byte 3 of definition mask              00597399
dowrite  equ   X'01'             on:  perform write                     00597499
***                              off: enqueue into system-task req chn  00597599
FCPPARAM DS    A(0)              addr of parameter 1                    00597699
FCPPAR02 DS    A(0)              addr of parameter 2                    00597799
FCPPAR03 DS    A(0)              addr of parameter 3                    00597899
FCPPAR04 DS    A(0)              addr of parameter 4                    00597999
FCPPAR05 DS    A(0)              addr of parameter 5                    00598099
FCPPAR06 DS    A(0)              addr of parameter 6                    00598199
FCPPAR07 DS    A(0)              addr of parameter 7                    00599099
FCPPLEN  EQU *-FCPPARML                                                 00599199
FCPDATA  DS    CL208             working space                          00599299
                                                                        00599399
         MEND                                                           00599499
* END OF PLX COMMENT */ %MMAPFCP: ;                                     00599599
*dcl 1 efcscsic based bdy(word),                                        00599699
*     2 enqfcpcb,                /* DSECT name in assembler version  */ 00599799
*       3 efcsccuu fixed(15),    /* SCSI cuu                         */ 00599899
*       3 efcfccuu fixed(15),    /* FCP  cuu                         */ 00599999
*       3 efc_flag bit(8),       /* Flag for controlling IPL process.*/ 00600099
*         4 efc_stg1 bit(1),     /* IPL stage 1                      */ 00610099
*         4 efc_stg2 bit(1),     /* IPL stage 2                      */ 00620099
*         4 efc_nmsg bit(1),     /* no WTOR usable to issue a msg    */ 00630099
*         4 efc_dev3 bit(1),     /* IPL stage 2, end of 3 dev. syst. */ 00640099
*                                /* efc_stg2 is also set             */ 00650099
*         4 efc_tdmp bit(1),     /* Tape SA dump                     */ 00660099
*         4 *        bit(3),     /* Reserved for future use          */ 00661099
*       3 *        char(3),      /* Reserved for future use          */ 00670099
*       3 efcwwpn  bit(64),      /* 64 bit WWPN value                */ 00680099
*       3 efclun   bit(64),      /* 64 bit LUN value                 */ 00690099
*       3 efcfcpp  ptr(31),      /* Ptr to FCP card control block    */ 00700099
*       3 efclunp  ptr(31),      /* Ptr to LUN control block         */ 00710099
*       3 efcqtcb  ptr(31),      /* SEND_FCP qtcb ptr set by ijbfcp  */ 00720099
*       3 efcqtcba ptr(31),      /* ABORT qtcb ptr set by ijbfcp     */ 00730099
*       3 efcsfcpl ptr(31),      /* Addr of sendfcp parameterlist    */ 00740099
*       3 efcretc  fixed(31),    /* return code set by ijbfcp        */ 00750099
*       3 efcreas  fixed(31),    /* reason code set by ijbfcp        */ 00760099
*       3 efcpunion union,       /*                                  */ 00770099
*       4 efciplstg1,            /* IPL stage 1 specific data        */ 00780099
*       5 efcsubch fixed(31),    /* fcp subchannel word              */ 00790099
*        6  *      fixed(15),    /* 0001                             */ 00800099
*        6 efcsubc1 fixed(15),   /* fcp subchannel number            */ 00810099
*       5 efclpm   fixed(8),     /* logical path mask                */ 00810199
*       5 *        char(3),      /* reserved                         */ 00810299
*       4 efcpreqb,              /* system task  req control block   */ 00810399
*         5 efcpcptr ptr(31),    /* fcp chain pointer                */ 00810499
*         5 efcpiptr ptr(31),    /* pointer to parameter list        */ 00810599
*         5 efcpfc   fixed(8),   /* fct code to trigger ijbfcp action*/ 00810699
*         5 efcpflag,            /* flag byte                        */ 00810799
*          6 efcfreqq bit(1),    /* element from req queue           */ 00810899
*          6 efcfmsgq bit(1),    /* element from msg queue           */ 00810999
*          6 *        bit(6),    /* reserved                         */ 00811099
*         5 efcptid  fixed(16),  /* TID of requestor                 */ 00811199
*         5 efcpecb  ptr(31),    /* used for various purposes        */ 00811299
*     2 efcpend char(0);         /* end label                        */ 00811399
*                                                                       00811499
*/* Valid function codes to call $IJBFCP (EFCPFC)                    */ 00811599
* DCL EFCPSFCP BIT(8) CONSTANT('00'X); /* Send FCP command           */ 00811699
* DCL EFCPOPEN BIT(8) CONSTANT('01'X); /* Open SCSI connection (init)*/ 00811799
* DCL EFCPAFCP BIT(8) CONSTANT('02'X); /* Abort FCP command          */ 00811899
* DCL EFCPREC  BIT(8) CONSTANT('03'X); /* Recovery request           */ 00811999
* DCL EFCPCLOS BIT(8) CONSTANT('04'X); /* Close request              */ 00812099
* DCL EFCPSTRE BIT(8) CONSTANT('05'X); /* Status read request        */ 00813099
* DCL EFCPMSG  BIT(8) CONSTANT('06'X); /* Write a message            */ 00814099
* DCL EFCPCLUN BIT(8) CONSTANT('07'X); /* Close a single LUN         */ 00815099
* DCL EFCPSREL BIT(8) CONSTANT('08'X); /* Send a release command     */ 00815199
* DCL EFCPDEL  BIT(8) CONSTANT('09'X); /* Delete a scsi connection   */ 00815299
*                                                                       00815399
*/* Return codes set by $IJBFCP on return from Open SCSI             */ 00815499
* DCL EFCRET0  BIT(8) CONSTANT('00'X); /* SCSI opened successfully   */ 00815599
* DCL EFCRET4  BIT(8) CONSTANT('04'X); /* Device not operational     */ 00815699
* DCL EFCRET8  BIT(8) CONSTANT('08'X); /* Storage could not be alloc.*/ 00815799
* DCL EFCRET12 BIT(8) CONSTANT('0C'X); /* I/O error                  */ 00815899
* DCL EFCRET16 BIT(8) CONSTANT('10'X); /* Configuration problem      */ 00815999
*                                                                       00816099
*dcl 1 sendfcpl based bdy(word), /* SENDFCP parameterlist            */ 00816199
*   2 sfcpeyec char(4),          /* Eye catcher                      */ 00816299
*   2 sfcpfcuu fixed(15),        /* Fcp cuu                          */ 00817099
*   2 sfcpscuu fixed(15),        /* Scsi cuu                         */ 00818099
*   2 sfcpscwa ptr(31),          /* Addr of SCSI work area           */ 00819099
*   2 sfcpukey bit(8),           /* key of user input/output area    */ 00820099
*   2 *        fixed(8),         /* reserved                         */ 00830099
*   2 sfcpnle  fixed(15),        /* no of 12-bytes list entries      */ 00840099
*   2 sfcp1adr char(0);          /* End of fixed part, first entry   */ 00861099
*                                                                       00862099
*dcl 1 sfcple based bdy(word),   /* Layout of a sfcp list entry      */ 00863099
*    2 sfcpadr  ptr(31),         /* real address of area             */ 00864099
*    2 sfcplen  fixed(31),       /* length of area (max 4K)          */ 00865099
*     3 *        char(2),        /*                                  */ 00866099
*     3 sfcplenu fixed(15),      /* two bytes length                 */ 00867099
*    2 sfcpead  ptr(31);         /* real end address of area         */ 00868099
*                                                                       00869099
*dcl 1 fcpparml based bdy(word), /* input to msg write routine       */ 00880099
*  2 fcpmsghdr char(36) bdy(word),/* message header                  */ 00890099
*   3 fcpmdesc fixed(16),        /* message descriptor               */ 00891099
*     4 fcpdbgsw bit(1),         /* debug switch                     */ 00892099
*     4 *        bit(15),                                               00893099
*   3 fcpreasn fixed(16),        /* reason code                      */ 00893199
*   3 fcpdmask,                  /* parameter definition mask        */ 00893299
*     4 funcind    bit(1),       /* calling function                 */ 00893399
*     4 scsiind    bit(1),       /* CUU of SCSI device               */ 00893499
*     4 fcpind     bit(1),       /* CUU of FCP device                */ 00893599
*     4 ccswind    bit(1),       /* CCSW available                   */ 00893699
*     4 snsind     bit(1),       /* sense data available             */ 00893799
*     4 fsfcind    bit(1),       /* last fsf command                 */ 00893899
*     4 portind    bit(1),       /* port specified                   */ 00893999
*     4 lunind     bit(1),       /* lun  specified                   */ 00894099
*     4 qtcbpind   bit(1),       /* qtcb protocol status specified   */ 00895099
*     4 qtcbfind   bit(1),       /* qtcb fsf status specified        */ 00896099
*     4 nservind   bit(1),       /* nserver request failed           */ 00896199
*     4 statind    bit(1),       /* unsoliceted status               */ 00896299
*     4 elsind     bit(1),       /* ELS payload (first 4 bytes)      */ 00896399
*     4 erwind     bit(1),       /* erw from irb after chan prog chk */ 00896499
*     4 srbind     bit(1),       /* bit error threshold              */ 00896599
*     4 *          bit(16),      /* reserved                         */ 00896799
*     4 dowrite    bit(1),       /* on:  perform write                  00896899
*                                   off: enqueue into system-task       00896999
*                                        request chain               */ 00897099
*   3 fcpparma(7) ptr(31),       /* pointer to parameters            */ 00897199
*  2 fcpworks char(208) union,   /* working space                    */ 00897299
*   3 fcpdata char(208),         /* working space                    */ 00897399
*    4 fcpd16    char(16),                                              00897499
*    4 *         char(192),                                             00897599
*   3 *        char(208),        /* working space                    */ 00897699
*    4 fcpdata1 char(40),        /* Used by IJBFCP                   */ 00897799
*     5 fcppstat char(20),       /* Prot. status / qualifier         */ 00897899
*     5 fcpfstat char(20),       /* FSF status / qualifier           */ 00897999
*    4 *        char(168);                                              00898099
* DCL fcptyp0  fixed(16) CONSTANT('0000'X); /* type 0 unconditionaly */ 00898199
* DCL fcptyp0x fixed(16) CONSTANT('8000'X); /* type 0 and debug=on   */ 00898299
* DCL fcptyp1  fixed(16) CONSTANT('0001'X); /* type 1 unconditionaly */ 00898399
* DCL fcptyp1x fixed(16) CONSTANT('8001'X); /* type 1 and debug=on   */ 00898499
* DCL fcptyp2  fixed(16) CONSTANT('0002'X); /* type 1 unconditionaly */ 00898599
* DCL fcptyp2x fixed(16) CONSTANT('8002'X); /* type 1 and debug=on   */ 00898699
*                                                                       00899099
