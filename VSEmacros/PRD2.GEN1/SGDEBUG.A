         MACRO                                                          00001000
         SGDEBUG                                                        00002000
*********************************************************************** 00003000
*                                                                     * 00004000
*        LICENSED MATERIALS - PROPERTY OF IBM                         * 00005000
*        THIS MACRO IS "RESTRICTED MATERIALS OF IBM"                  * 00006000
*        5686-066 (C) COPYRIGHT IBM CORP. 1992, 2005                  * 00007490
*        SEE COPYRIGHT INSTRUCTIONS                                   * 00008000
*                                                                     * 00009000
*********************************************************************** 00010000
         GBLB  &BGDEBUG                                                 00011000
         GBLB  &SGDEBUG           SGDEBUG PRINT CONTROL SWITCH          00012000
         GBLB  &VSE270            RELEASE CONTROL SWITCH       @D27XDAP 00017000
         GBLB  &VSE280            RELEASE CONTROL SWITCH       @DSCSI   00018000
         LCLC  &LRA               INTERNAL VARIABLE            @D41ADAP 00018300
&LRA     SETC  'LRA'              DEFAULT TO LRA INSTRUCTION   @D41ADAP 00018600
.* /* START OF SPECIFICATIONS ***************************************** 00019000
.*                                                                      00020000
.*01* MODULE-TYPE = SUPERVISOR GENERATION MACRO                         00021000
.*                                                                      00022000
.*01* DESCRIPTIVE NAME = VSE DEBUG TRACE                                00023000
.*                                                                      00024000
.*01* NOTES = CHANGE ACTIVITY                                           00025000
.*                                                                      00026000
.*      FED  AS THE RESULT OF A PASCOPE FOLLOWED BY PAGE FLT.  @DA44311 00027000
.*      SAVE LOW CORE BYTES 0-24 IN CASE OF A DEBUG STOP       @DA44738 00028000
.*      ENHANCEMENTS FOR SECURITY DEBUG TRACE                  @DA44841 00029000
.*      ENHANCEMENTS FOR SELECTIVE SVC  TRACE                  @DA44993 00030000
.*      CONSISTANY CHECK HAS BEEN EXTENDED                     @DA45062 00031000
.*      PROVIDE SAVE AREA ADDRESS IN EEEE0300 ENTRY            @DA45092 00032000
.*      USE CORRECT TEST FOR         EEEE0300 ENTRY            @DY45385 00033000
.*      PREVENT HARD WAIT DURING CONSISTANCY CHECK WHILE NP OFF@DY45385 00034000
.*      ENSURE DEBUG AREA SWITCH BEFORE ENTERING MATCH-STOP    @DAOM    00035000
.*      PREVENT STORAGE OVERLAY IN MP SYSTEM FOR DEBUG ID,ON   @DAMFB   00036000
.*      PREVENT WRONG REGISTER CONTENTS AFTER A MACHINE-CHECK  @DY45939 00037000
.*      PREVENT DEBUG AREA BE FILLED WITH SNS-TASK ENTRIES     @DY46299 00037200
.*      PREVENT CONSISTENCY CHECK FOR TASK SEL. ENTRIES        @DY46299 00037400
.*      PREVENT HARD WAIT WHEN CLEARING BSM TRACE DATA AREA    @DY46447 00037600
.*                                                                      00038000
.**** END OF SPECIFICATIONS ******************************************  00039000
         SPACE 3                                                        00040000
         AIF   (NOT &SGDEBUG).NPRT010                                   00041000
         PRINT GEN                                                      00042000
.NPRT010 ANOP                                                           00043000
         TITLE 'VSE/AF SUPERVISOR    SGDEBUG  DEBUGGING FACILITY'       00044000
         SPACE 2                                                        00045000
***************************************************************         00046000
*                                                                       00047000
*   D E B U G :  DOS/VS DEBUGGING FACILITY.                             00048000
*                                                                       00049000
*   OVERVIEW: THE DEBUG OPTION OF THE DOS/VS SUPERVISOR                 00050000
*             WAS WRITTEN FOR IBM INTERNAL USE ONLY AND IS              00051000
*             THEREFORE NOT DOCUMENTED IN AVAILABLE                     00052000
*             DOCUMENTATION.                                            00053000
*                                                                       00054000
*             DEBUG WILL BE ENABLED                                     00055000
*             VIA THE AR 'DEBUG ON' COMMAND AND DISABLED VIA THE        00056000
*             AR 'DEBUG OFF' COMMAND.                                   00057000
*             DEBUG, WHEN ACTIVE, ALLOWS SIMPLE EVENT TRACING           00058000
*             AND PROVIDES FACILITIES TO DO AN ADDRESS COMPARE STOP.    00059000
*             BELOW, ALL FACILITIES ARE DESCRIBED IN DETAIL.            00060000
         AIF   (NOT &BGDEBUG).NDBG010                                   00061000
*             IF THE SUPERVISOR WAS GENERATED WITH THE DEBUG=YES        00062000
*             OPTION, AN SUPERVISOR INTERNAL DEBUG AREA WILL BE         00063000
*             GENERATED AND DEBUG WILL AUTOMATICALLY BE ACTIVATED.      00064000
*                                                                       00065000
.NDBG010 ANOP                                                           00066000
*      FEATURE 1  TRACE PROGRAM FLOW:                                   00067000
*             TRACE ENTRIES ARE SET UP WHENEVER A MACHINE CHECK,        00068000
*             PROGRAM CHECK/PAGE FAULT, EXTERNAL INTERRUPT,             00069000
*             I/O INTERRUPT OR SVC INTERRUPT IS ENCOUNTERED; OR,        00070000
*             IN ADDITION, WHENEVER A SSCH INSTRUCTION IS ISSUED,       00071000
*             A TASK IS BEING DISPACHED, OR WHENEVER A TASK IS          00072000
*             BEING CANCELED. ADDITIONAL DEBUG ENTRIES CAN ALSO         00073000
*             BE SET UP ON BEHALF OF OF SUPERVISOR INTERNAL ROUTINES.   00074000
*                                                                       00075000
*      FEATURE 2  DATA STORE ADDRESS COMPARE STOP:                      00076000
*             FIXED STORAGE LOCATION X'270' CONTAINS THE ADDRESS        00077000
*             OF THE DEBUG CONTROL AREA. THE SECOND FULLWORD IN THIS    00078000
*             DEBUG CONTROL AREA CONTAINS THE ADDRESS OF                00079000
*             AN EVENT SELECTION PARAMETER LIST WHICH, AT               00080000
*             OFFSET 4 CONTAINS THE 2-BYTE ID OF THE PRIVATE SPACE      00081000
*                      THAT YOU WANT TO BE CHECKED. THIS FIELD          00082000
*                      MUST BE X'0000' FOR SHARED AREAS                 00083000
*             OFFSET 6 CONTAINS THE NUMBER OF BYTES (0 < N < 9)         00084000
*                      THAT YOU WANT TO BE COMARED AGAINST A            00085000
*                      GIVEN STRING                                     00086000
*             OFFSET 7 CONTAINS THE MASK, THAT, IF IT SATISFIES         00087000
*                      A CLC-INSTRUCTION WILL LEAD TO A HARD WAIT       00088000
*                      WITH AN INSTRUCTION ADDRESS OF X'0000EEEE'.      00089000
*                      A RESTART PSW HAS BEEN PREPARED AT LOCATION      00090000
*                      X'00000000'.                                     00091000
*             OFFSET 8 IS THE 4-BYTE ADDRESS OF A FIELD, THAT,          00092000
*                      IF ITS CONTENTS, COMPARED TO THE DATA STRING     00093000
*                      GIVEN AT OFFSET 12-19 MATCHES THE CONDITION      00094000
*                      SPECIFIED AT OFFSET 7 WILL LEAD TO A             00095000
*                      HARD WAIT (SEE ABOVE).                           00096000
*             BYTES 12-19 OF THE EVENT SELECTION PARAMETER LIST         00097000
*                      IS THE DATA STRING THAT IS TO BE COMPARED        00098000
*                      AGAINST THE DATA AT THE SPECIFIED LOCATION.      00099000
*                      (SEE OFFSET 8).                                  00100000
*             WEHENEVER THE CLC-INSTRUCTION MATCHES THE SPECIFIED       00101000
*             CONDITION, A HARD WAIT WILL BE ENFORCED.                  00102000
*             THE PSW ADDRESS PORTION WILL CONTAIN 0000EEEE TO          00103000
*             IDENTIFY THIS CONDITION. RESTARTING THE PROCESSOR         00104000
*             OR SPECIFYING "SYSTEM RESTART" UNDER VM WILL CAUSE        00105000
*             THE ADDRESS COMPARE STOP TO BE AUTOMATICAALY RESET        00106000
*             AND NORMAL PROCESSING TO BE RESUMED.                      00107000
*                                                                       00108000
*********************************************************************** 00109000
         SPACE 3                                                        00110000
*********************************************************************** 00111000
*                                                                       00112000
*   HOW TO GENERATE AND/OR USE THE DEBUG OPTION                         00113000
*        DEBUG ON (AR COMMAND)                                          00114000
*               FIXED LENGTH DEBUG AREA(S) WILL BE ALLOCATED WITHIN THE 00115000
*               SYSTEM GETVIS AREA AND ONE AREA AT A TIME WILL BE USED  00116000
*               IN WRAP AROUND MODE UNLESS CONDITIONS ARE ENCOUNTERED   00117000
*               WHICH WILL CAUSE A SWAP TO THE NEXT/FIRST DEBUG AREA    00118000
*               (DEPENDING ON THE NUMBER OF DEBUG AREAS AVAILABLE).     00119000
*               THE AREA SWAP WILL ALSO BE MADE WHEN DEBUG IS           00120000
*               REACTIVATED AFTER TEMPORARY DEACTIVATION (DEBUG OFF).   00121000
*                                                                       00122000
*        DEBUG OFF (AR COMMAND)                                         00123000
*               THE  'DEBUG OFF' COMMAND WILL SUSPEND TRACING OF ALL    00124000
*               DEBUG EVENTS UNTIL REACTIVATED AGAIN (DEBUG ON).        00125000
*                                                                       00126000
*        DEBUG END (AR COMMAND)                                         00127000
*               THE DEBUG END COMMAND CAUSES TRACING TO BE STOPPED      00128000
*               IMMEDIATELY AND ALL AREAS ALLOCATED FOR DEBUG (SEE      00129000
*               DEBUG ON) TO BE FREED AGAIN.                            00130000
*                                                                       00131000
         AIF   (NOT &BGDEBUG).NDBG020                                   00132000
*        DEBUG=YES IN THE FOPT MACRO                                    00133000
*               THREE TRACE-AREAS ARE CREATED WHICH ARE USED IN WRAP    00134000
*               AROUND MODE WHEN A CANCEL CONDITION OCCURS, UNLESS      00135000
*               THE SYSTEM OPERATOR DID SPECIFY IT DIFFERENTLY.         00136000
*               A LAST ENTRY IS MADE AND THE NEXT TRACE AREA IS USED.   00137000
*               EACH DEBUG AREA HAS A DEFAULT SIZE OF 4K.               00138000
*        DEBUG=XXK IN THE IOTAB MACRO                                   00139000
*               WHERE XX IS A INTEGER BETWEEN 4 AND 64.                 00140000
*               IT ENLARGES THE TRACE AREA TO XXK.                      00141000
*                                                                       00142000
.NDBG020 ANOP                                                           00143000
*        HOW TO FIND AND READ THE DEBUG TRACE AREA'S                    00144000
*                                                                       00145000
*        AT FIXED STORAGE LOCATION X'270' YOU WILL FIND AN ADDRESS OF   00146000
*        THE DEBUG CONTROL AREA. THE FIRST FULLWORD OF                  00147000
*        THE DEBUG CONTROL AREA WILL POINT TO A DEBUG AREA HEADER OR    00148000
*        IT WILL CONTAIN ZEROS IF NO DEBUG INFORMATION IS AVAILABLE.    00149000
*        EACH DEBUG AREA HEADER CONSISTS OF 16 BYTES (4 WORDS)          00150000
*         -> WORD 0 POINTS TO THE NEXT FREE ENTRY DEBUG ENTRY           00151000
*         -> WORD 1 POINTS TO THE NEXT DEBUG AREA HEADER                00152000
*         -> WORD 2 POINTS TO THE LAST DEBUG TRACE ENTRY IN THIS AREA   00153000
*         -> WORD 3 POINTS TO PREVIOUS DEBUG AREA HEADER                00154000
*                                                                       00155000
*        FORMAT OF THE TRACE ENTRIES                                    00156000
*                                                                       00157000
*        THE TRACE ENTRIES ARE ALWAYS MULTIPLE OF 16 BYTES IN LENGTH.   00158000
*        THE FIRST TWO BYTES OF EACH ENTRY CONTAINS X'EEEE'             00159000
*                                                                       00160000
*        FORMAT OF THE DEBUG MACRO IS :  DEBUG   PARAMETER,XXDBGMC      00161000
*                                                                       00162000
*        1) PROGRAM CHECK ENTRY                                         00163000
*                                                                       00164000
*        BYTES                                                          00165000
*         0- 3 ( 0- 3): X'EEEE00IC' (IC IS THE PROGRAM INTERRUPTION     00166000
*                                     CODE FROM LOCATION X'8F')         00167000
*         4-11 ( 4- B): PROGRAM CHECK OLD PSW                           00168000
*        12-13 ( C- D): TID (TASK ID)                                   00169000
*        14    ( E   ): RID (ROUTINE ID)                                00170000
*        15    ( F   ): CPU STATE                                       00171000
*        16-23 (10-17): TIME STAMP (TOD)                                00172000
*        24-25 (18-19): CPU-ID                                          00173000
*        26-27 (1A-1B): RESERVED                                        00174000
*        28-31 (1C-1F): PROGRAM CHECK INTERRUPTION CODE                 00175000
*        32-35 (20-23): TRANSL EXCEPT ADDR FOR PC INTERRUPT CODE        00176000
*                       IC  > X'0F' AND < X'1C' OR                      00177000
*        32-35 (20-23): CONTENTS OR REGISTER 0                          00178000
*        36-95 (24-5F): CONTENTS OF REGISTERS 1 TO 15                   00179000
*                                                                       00180000
*        2) ALL REGISTERS ENTRY OR                                      00181000
*           MACHINE CHECK ENTRY                                         00182000
*                                                                       00183000
*        BYTES                                                          00184000
*         0- 3 ( 0- 3): X'EEEE0200'                                     00185000
*         4-11 ( 4- B): CALLERS PSW                                     00186000
*        12-13 ( C- D): TID (TASK ID)                                   00187000
*        14    ( E   ): RID (ROUTINE ID)                                00188000
*        15    ( F   ): CPU STATE                                       00189000
*        16-23 (10-17): TIME STAMP (TOD)                                00190000
*        24-25 (18-19): CPU-ID                                          00191000
*        26-31 (1A-1F): RESERVED                                        00192000
*        32-95 (20-5F): REGISTERS 0 TO 15.                              00193000
*                                                                       00194000
*        3) DISPATCHER EXIT ENTRY                                       00195000
*                                                                       00196000
*        BYTES                                                          00197000
*         0- 3 ( 0- 3): X'EEEE0300'                                     00198000
*         4-11 ( 4- B): PSW OF SELECTED TASK                            00199000
*        12-13 ( C- D): TID (TASK ID)                                   00200000
*        14    ( E   ): RID (ROUTINE ID)                                00201000
*        15    ( F   ): CPU STATE                                       00202000
*        16-23 (10-17): TIME STAMP (TOD)                                00203000
*        24-25 (18-19): CPU-ID                                          00204000
*        26-27 (1A-1B): RESERVED                                        00205000
*        28-31 (1C-1F): SAVE AREA ADDRESS                               00206000
*        32-95 (20-5F): REGISTERS 0 TO 15.                              00207000
*                                                                       00208000
*        4) I/O INTERRUPT ENTRY                                         00209000
*                                                                       00210000
*        BYTES                                                          00211000
*         0- 3 ( 0- 3): X'EEEE0400'                                     00212000
*         4-11 ( 4- B): I/O INTERRUPT OLD PSW                           00213000
*        12-13 ( C- D): TID (TASK ID)                                   00214000
*        14    ( E   ): RID (ROUTINE ID)                                00215000
*        15    ( F   ): CPU STATE                                       00216000
*        16-23 (10-17): TIME STAMP (TOD)                                00217000
*        24-25 (18-19): CPU-ID                                          00218000
*        26-27 (1A-1B): RESERVED                                        00219000
*        28-31 (1C-1F): SUBCHANNEL-ID WORD                              00220000
*        32-33 (20-21): INTERRUPT ORIGIN CODE                           00221000
*        34-35 (22-23): INTERRUPTING DEVICE-ID (CUU)                    00222000
*        36-51 (24-33): IRB                                             00223000
*        52-59 (34-3B): CSW                                             00224000
*        60-63 (3C-3F): PUB ADDRESS                                     00225000
*                                                                       00226000
*        5) I/O INSTRUCTION ENTRY                                       00227000
*                                                                       00228000
*        BYTES                                                          00229000
*         0- 3 ( 0- 3): X'EEEE0500'                                     00230000
*         4-11 ( 4- B): CALLERS PSW                                     00231000
*        12-13 ( C- D): TID (TASK ID)                                   00232000
*        14    ( E   ): RID (ROUTINE ID)                                00233000
*        15    ( F   ): CPU STATE                                       00234000
*        16-23 (10-17): TIME STAMP (TOD)                                00235000
*        24-25 (18-19): CPU-ID                                          00236000
*        26-27 (1A-1B): RESERVED                                        00237000
*        28-31 (1C-1F): SUBCHANNEL-ID WORD                              00238000
*        32-43 (18-2B): ORB OPERATION REQUEST BLOCK                     00239000
*        44-47 (2C-2F): CHQIDS                                          00240000
*        48-63 (30-3F): REGISTERS 1 TO 4.                               00241000
*                       REGISTERS 1 CONTAINS CCB ADDR                   00242000
*                       REGISTERS 2 CONTAINS DEVICE ADDR                00243000
*                       REGISTERS 3 CONTAINS PUB ADDR                   00244000
*                       REGISTERS 4 CONTAINS PTR TO CHANNEL QUEUE ENTRY 00245000
*                                                                       00246000
*        6) EXTERNAL INTERRUPT ENTRY                                    00247000
*                                                                       00248000
*        BYTES                                                          00249000
*         0- 3 ( 0- 3): X'EEEE0600'                                     00250000
*         4-11 ( 4- B): EXTERNAL OLD PSW                                00251000
*        12-13 ( C- D): TID (TASK ID)                                   00252000
*        14    ( E   ): RID (ROUTINE ID)                                00253000
*        15    ( F   ): CPU STATE                                       00254000
*        16-23 (10-17): TIME STAMP (TOD)                                00255000
*        24-25 (18-19): CPU-ID                                          00256000
*        26-27 (1A-1B): RESERVED                                        00257000
*        28-31 (1C-1F): EXTERNAL INTERRUPTION CODE                      00258000
* --------------------------------------------------------------------- 00259000
*        32-39 (20-27):                      CLOCK COMPARATOR           00260000
*        40-47 (28-2F):                      CPU TIMER                  00261000
* --------------------------------------------------------------------- 00262000
*          OR                                                           00263000
*        32-63 (20-3F): EXT INT TYPE 4XXX ->  EXTERNAL INTERRUPT BUFFER 00264000
*                                                                       00265000
*                                                                       00266000
*        7) DISPATCHER-ENTRY (TASK SELECTION) ENTRY                     00267000
*                                                                       00268000
*        BYTES                                                          00269000
*         0- 3 ( 0- 3): X'EEEE0700'                                     00270000
*         4-11 ( 4- B): CALLERS PSW                                     00271000
*        12-13 ( C- D): TID (TASK ID)                                   00272000
*        14    ( E   ): RID (ROUTINE ID)                                00273000
*        15    ( F   ): CPU STATE                                       00274000
*        16-23 (10-17): TIME STAMP (TOD)                                00275000
*        24-25 (18-19): CPU-ID                                          00276000
*        26-31 (1A-1F): RESERVED                                        00277000
*        32-33 (20-21): LTID (TASK ID OF TASK OWNING THE LTA)           00278000
*        34-35 (22-23): MNEMONIC PARTITION ID                           00279000
*        36-39 (24-27): SYSTEM TASK WORKING FOR TASK IF ANY             00280000
*        40-43 (28-2B): TIB-ADDRESS                                     00281000
*        44-47 (2C-2F): TIBSCB                                          00282000
*        48-49 (30-31): TIBRTID                                         00283000
*        50-51 (32-33): TIBRPIK                                         00284000
*        52-53 (34-35): TIBRQPIK                                        00285000
*        54    (36   ): TIBFLAG1                                        00286000
*        55    (37   ): TIBFLAG                                         00287000
*        56    (38   ): TIBFLAG2                                        00288000
*        57    (39   ): TIBCNCL                                         00289000
*        58    (3A   ): TIBCNCL2                                        00290000
*        59    (3B   ): TIBCNCL3                                        00291000
*        60    (3C   ): TIBFLAG3                                        00292000
*        61    (3D   ): TIBDMFLG                                        00293000
*        62    (3E   ): PCEFLAG                                         00294000
*        63    (3F   ): PCEFLAG1                                        00295000
*                                                                       00296000
*        8) SUPERVISOR CALL ENTRY                                       00297000
*                                                                       00298000
*        BYTES                                                          00299000
*         0- 3 ( 0- 3): X'EEEE0800'                                     00300000
*         4-11 ( 4- B): SUPERVISOR CALL OLD PSW                         00301000
*        12-13 ( C- D): TID (TASK ID)                                   00302000
*        14    ( E   ): RID (ROUTINE ID)                                00303000
*        15    ( F   ): CPU STATE                                       00304000
*        16-23 (10-17): TIME STAMP (TOD)                                00305000
*        24-25 (18-19): CPU-ID                                          00306000
*        26-27 (1A-1B): RESERVED                                        00307000
*        28-31 (1C-1F): SVC INTERRUPT CODE                              00308000
*        32-47 (20-2F): REGISTERS 15 THROUGH 2                          00309000
*                                                                       00310000
*        9) TASK CANCEL ENTRY                                           00311000
*                                                                       00312000
*        BYTES                                                          00313000
*         0- 3 ( 0- 3): X'EEEE0900'                                     00314000
*         4-11 ( 4- B): CALLERS PSW                                     00315000
*        12-13 ( C- D): TID (TASK ID)                                   00316000
*        14    ( E   ): RID (ROUTINE ID)                                00317000
*        15    ( F   ): CPU STATE                                       00318000
*        16-23 (10-17): TIME STAMP (TOD)                                00319000
*        24-25 (18-19): CPU-ID                                          00320000
*        26-31 (1A-1F): RESERVED                                        00321000
*        32-33 (20-21): LTID (TASK ID OF TASK OWNING THE LTA)           00322000
*        34-35 (22-23): MNEMONIC PARTITION ID                           00323000
*        36-39 (24-27): SYSTEM TASK WORKING FOR TASK IF ANY             00324000
*        40-43 (28-2B): TIB-ADDRESS                                     00325000
*        44-47 (2C-2F): TIBSCB                                          00326000
*        48-49 (30-31): TIBRTID                                         00327000
*        50-51 (32-33): TIBRPIK                                         00328000
*        52-53 (34-35): TIBRQPIK                                        00329000
*        54    (36   ): TIBFLAG1                                        00330000
*        55    (37   ): TIBFLAG                                         00331000
*        56    (38   ): TIBFLAG2                                        00332000
*        57    (39   ): TIBCNCL                                         00333000
*        58    (3A   ): TIBCNCL2                                        00334000
*        59    (3B   ): TIBCNCL3                                        00335000
*        60    (3C   ): TIBFLAG3                                        00336000
*        61    (3D   ): TIBDMFLG                                        00337000
*        62    (3E   ): PCEFLAG                                         00338000
*        63    (3F   ): PCEFLAG1                                        00339000
*                                                                       00340000
*        10) DEBUG AREA SWAP ENTRY                                      00341000
*                                                                       00342000
*        BYTES                                                          00343000
*         0- 3 ( 0- 3): X'EEEE0A00'                                     00344000
*         4-11 ( 4- B): CALLERS PSW                                     00345000
*        12-13 ( C- D): TID (TASK ID)                                   00346000
*        14    ( E   ): RID (ROUTINE ID)                                00347000
*        15    ( F   ): CPU STATE                                       00348000
*        16-23 (10-17): TIME STAMP (TOD)                                00349000
*        24-25 (18-19): CPU-ID                                          00350000
*        26-31 (1A-1F): RESERVED                                        00351000
*        32-39 (20-27): PHASE NAME CURRENTLY IN LTA                     00352000
*        40-47 (28-2F): PHASE NAME CURRENTLY IN PTA                     00353000
*                                                                       00354000
*        11) DISPLAY DATA ENTRY                                         00355000
*                                                                       00356000
*        BYTES                                                          00357000
*         0- 3 ( 0- 3): X'EEEE0B00'                                     00358000
*         4-11 ( 4- B): CALLERS PSW                                     00359000
*        12-13 ( C- D): TID (TASK ID)                                   00360000
*        14    ( E   ): RID (ROUTINE ID)                                00361000
*        15    ( F   ): CPU STATE                                       00362000
*        16-23 (10-17): TIME STAMP (TOD)                                00363000
*        24-25 (18-19): CPU-ID                                          00364000
*        26-31 (1A-1F): RESERVED                                        00365000
*        32-47 (20-2F): DATA ADDRESSED BY ADDR IN XXUSAREA              00366000
*                                                                       00367000
*        12) MONITOR CALL ENTRY                                         00368000
*                                                                       00369000
*        BYTES                                                          00370000
*         0- 3 ( 0- 3): X'EEEE0FNN' (NN=MONITOR CALL CLASS)             00371000
*         4-11 ( 4- B): PROGRAM CHECK (MONITOR CALL) PSW                00372000
*        12-13 ( C- D): TID (TASK ID)                                   00373000
*        14    ( E   ): RID (ROUTINE ID)                                00374000
*        15    ( F   ): CPU STATE                                       00375000
*        16-23 (10-17): TIME STAMP (TOD)                                00376000
*        24-25 (18-19): CPU-ID                                          00377000
*        26-27 (1A-1B): RESERVED                                        00378000
*        28-31 (1C-1F): MONITOR CODE                                    00379000
*                                                                       00380000
*                                                                       00381000
*        13) MAKE OWN DEBUG ENTRIES                            @D61NDAP 00382000
*                                                              @D61NDAP 00383000
*        WITH          DEBUG USERDATA,XXDBGMC,A,B,C,D          @D61NDAP 00384000
*                                                              @D61NDAP 00385000
*                            WHERE   A(,B(,C(,D)))             @D61NDAP 00386000
*                            DEFINE ADDRESSES OF 16-BYTE FIELDS@D61NDAP 00387000
*                            THAT THE USER WANTS TO BE SAVED   @D61NDAP 00388000
*                            IN THE DEBUG ENTRY                @D61NDAP 00389000
*                                                              @D61NDAP 00390000
*                                                              @D61NDAP 00391000
*********************************************************************** 00392000
         EJECT                                                          00393000
*********************************************************************** 00394000
*  ENTRY POINT-  FROM PROGRAM CHECK FLIH                                00395000
*  INPUT- PROGRAM INTERRUPTION CODE (PGMINTC)                           00396000
*  EXITS NORMAL- PROGRAM CHECK FLIH                                     00397000
*                INTERRUPTED PROGRAM                                    00398000
*  ERROR EXITS-  HARDWAIT SYSERROR - CONTROL BLOCK INCONSISTENCY        00399000
*                                    (REG 5 CONTAINS THE ADDR WHERE     00400000
*                                    THE ERROR WAS DETECTED)            00401000
*********************************************************************** 00402000
         SPACE 3                                                        00403000
         DC    0H'0'                                                    00404000
         DC    CL8'SGDEBUG '     MODULE NAME                            00405000
         DC    CL8'DY46346 '     DEBUG ENHANCEMENTS            @DY46346 00406490
         SPACE 3                                                        00407000
         USING DEBUGBAL,RE       BAL INTERFACE BASE POINTER    @D61NDAP 00408000
.*                                                             @D61NDAP 00409000
.*       THE FOLLOWING INSTRUCTION WILL BE MODIFIED            @D61NDAP 00410000
.*       AS SOON AS DEBUG IS ACTIVATED/DEACTIVATED             @D61NDAP 00411000
.*                                                             @D61NDAP 00412000
         AIF   (&VSE270).Y270020                                        00413000
XXDBGSR2 EQU   X'D0'             ADDITIONAL SAVE AREA          @D67ADAP 00414000
.Y270020 ANOP                                                           00415000
DEBUGBAL NOPR  RF                RETURN IF DEBUG/TESTMON INACT @D61NDAP 00416000
         IPM   R0                SAVE CONDITION CODE           @D61NDAP 00417000
         TM    IJBFLG08,IJBDEBUG IS DEBUG ACTIVE               @D61NDAP 00418000
         BO    DBGFBASE          YES, REGULAR PROCESSING       @DY45817 00419000
.* NOTE                                                                 00420000
.*       THIS CODE MUST EXECUTE WITH DAT ON OR OFF                      00421000
.*                                                                      00422000
DBGFAST  STM   R2,R3,XXDBGSR2    SAVE MORE REGISTERS           @D67ADAP 00423000
         L     R2,ADBGMIHA       GET SGMIH BASE                @D68PGA  00423100
         USING MISINTAT,R2       SGMIH BASE ADDRESS            @D68PGA  00423200
         TM    EMWFLAG1,EMWF1SNS+EMWF1PVT  SENSE IS ACTIVE     @D68PGA  00423300
         BNZ   DBGFST40          YES, SKIP DEBUG ENTRIES       @D68PGA  00423400
         DROP  R2                RELEASE MISINTAT BASE         @D68PGA  00423500
         L     R1,XXARPTR        ADDRESS OF DEBUG CONTROL      @DY45817 00424000
         USING XXHEADER,R1       DEBUG CONTROL TABLE BASE      @DY45817 00425000
         AIF   (&BGDEBUG).YDBG020                              @DAOM102 00426000
         L     R1,XXDBGSAV       GET PERM. DEBUG AREA          @DY45817 00427000
         AGO   .NDBG030                                        @DAOM102 00428000
.YDBG020 ANOP                                                  @DAOM102 00429000
         L     R1,0(,R1)         GET DEBUG  HEADER ADDRESS     @DAOM102 00430000
.NDBG030 ANOP                                                  @DAOM102 00431000
         DROP  R1                RELEASE XXHEADER BASE         @DY45817 00432000
DBGFST10 L     R2,0(,R1)         NEXT ENTRY ADDRESS            @DY45817 00433000
         LA    R2,0(,R2)         RESET LOCK BIT                @DY45817 00434000
         LA    R3,80(,R2)        ADVANCE ENTRY POINTER         @DY45817 00435000
         C     R3,8(,R1)         END OF AREA                   @DY45817 00436000
         BNH   DBGFST20          NO,                           @DY45817 00437000
         LA    R3,16(,R1)        POINT TO FIRST ENTRY          @DY45817 00438000
DBGFST20 O     R3,BIT0OMSK       SET IN USE BIT                @DY45817 00439000
         CS    R2,R3,0(R1)       UPDATE ENTRY POINTER          @DY45817 00440000
         BNZ   DBGFST10          DIDN'T GET IT, TRY AGAIN      @DY45817 00441000
         STCK  0(R2)             SAVE TOD                      @DY45817 00442000
         MVC   0(2,R2),6(RF)     SAVE ENTRY CODE               @D28DR06 00443000
         MVC   8(2,R2),TID       PROVIDE TASK ID               @DY45817 00444000
         MVC   10(2,R2),RID      PROVIDE TASK ID               @DY45817 00445000
         ST    RF,12(,R2)        SAVE RETURN ADDRESS           @DY45817 00446000
         MVC   16+RE*4(8,R2),XXDBGSRE ORIGINAL RE-RF SETTING   @DY45817 00447000
         MVC   16+R0*4(8,R2),XXDBGSRE+8 ORIGINAL R0-R1 SETTING @DY45817 00448000
         MVC   16+R2*4(8,R2),XXDBGSR2 ORIGINAL R2-R3 SETTINGS  @D67ADAP 00449000
         STM   R4,RD,16+R4*4(R2) SAVE OTHER REGS CONTENTS      @DY45817 00450000
         LH    R4,0(R2)          GET INTERRUPTION CODE         @D28DR06 00451000
         N     R4,F15            LEAVE RELEVANT INFO ONLY      @D28DR06 00452000
         SLL   R4,2              MULTIPLY WITH FOUR            @D28DR06 00453000
         L     R4,DBGFTAB(R4)    ADD SUBROUTINE BASE           @D28DR06 00454000
         BR    R4                EXECUTE SPECIAL CODE          @D28DR06 00455000
DBGFST30 L     R4,16+R4*4(R2)    RESTORE R4                    @D28DR06 00456000
         LA    R2,0(,R3)         TURN OFF GATE                 @DY45817 00457000
         CS    R3,R2,0(R1)       FREE DEBUG AREA               @DY45817 00458000
DBGFST40 LM    R2,R3,XXDBGSR2    RESTORE CALLERS REGS          @D68PGA  00459490
         B     DEBUGEXA          NO, RETURN                    @D61MPAP 00460000
         SPACE 1                                                        00461000
DBGENDIT DS    0H'0'             CHECK IF RAS IS HOLDING LOCK           00462000
DBGFTAB  DC    A(DBGF0ACT)     0 PRORAMCHECK ACTION            @D28DR06 00463000
         DC    A(DBGFST30)     1 NO ACTION REQUIRED            @D28DR06 00464000
         DC    A(DBGFST30)     2 ALLREGS ACTION                @D28DR06 00465000
         DC    A(DBGFDISP)     3 DISP ACTION                   @D28DR06 00466000
         DC    A(DBGFINT)      4 INTERRUPT ACTION              @D28DR06 00467000
         DC    A(DBGFST30)     5 SIO ACTION                    @D28DR06 00468000
         DC    A(DBGFEXT)      6 EXTERNAL ACTION               @D28DR06 00469000
         DC    A(DBGFST30)     7 TASK-SELECTION ACTION         @D28DR06 00470000
         DC    A(DBGFSVC)      8 SVC ACTION                    @D28DR06 00471000
         DC    A(DBGFST30)     9 CANCEL ACTION                 @D28DR06 00472000
         DC    A(DBGFST30)     A SWITCH ACTION                 @D28DR06 00473000
         DC    A(DBGFST30)     B USER ACTION                   @D28DR06 00474000
         DC    A(DBGFST30)     C DATA ACTION                   @D28DR06 00475000
         DC    A(DBGFST30)     D NO ACTION REQUIRED            @D28DR06 00476000
         DC    A(DBGFST30)     E NO ACTION REQUIRED            @D28DR06 00477000
         DC    A(DBGFST30)     F NO ACTION REQUIRED            @D28DR06 00478000
DBGF0ACT DS    0H'0'           0 PRORAMCHECK ACTION            @D28DR06 00479000
         MVC   6(2,R2),PGMINTC   PROVIDE PROPRAM CHECK INFO    @D28DR06 00480000
         MVC   12(4,R2),PCKADR   PROVIDE PROGRAM CHECK ADDRESS @D28DR06 00481000
         B     DBGFST30          EXIT FAST DEBUG               @D28DR06 00482000
DBGFDISP DS    0H'0'           3 DISPATCHER ACTION             @D28DR06 00483000
         MVC   12(4,R2),ERA+4    PROVIDE PSW ADDRESS           @D28DR06 00484000
         B     DBGFST30          EXIT FAST DEBUG               @D28DR06 00485000
DBGFINT  DS    0H'0'           4 INTERRUPT ACTION              @D28DR06 00486000
         MVC   12(4,R2),IOOPSW+4 PROVIDE PSW ADDRESS           @D28DR06 00487000
         B     DBGFST30          EXIT FAST DEBUG               @D28DR06 00488000
DBGFEXT  DS    0H'0'           6 EXTERNAL ACTION               @D28DR06 00489000
         MVC   12(4,R2),EXOLDP+4 PROVIDE PSW ADDRESS           @D28DR06 00490000
         B     DBGFST30          EXIT FAST DEBUG               @D28DR06 00491000
DBGFSVC  DS    0H'0'           0 PRORAMCHECK ACTION            @D28DR06 00492000
         MVC   6(2,R2),SVCINTC   PROVIDE PROPRAM CHECK INFO    @D28DR06 00493000
         MVC   12(4,R2),SVOLDADR PROVIDE SVC ADDRESS           @D28DR06 00494000
         B     DBGFST30          EXIT FAST DEBUG               @D28DR06 00495000
         SPACE 1                                                        00496000
DBGFBASE BALR  RE,0              SET NEW BASE ADDRESS          @DAOM102 00497000
         USING DEBUGFUL,RE       DEBUGFUL BASE POINTER         @DAOM102 00498000
DEBUGFUL L     R1,ADBGMIHA       GET SGMIH BASE                @D68PGA  00499080
         USING MISINTAT,R1       SGMIH BASE ADDRESS            @D68PGA  00499160
         TM    EMWFLAG1,EMWF1SNS+EMWF1PVT  SENSE IS ACTIVE     @D68PGA  00499240
         BZ    DEBUGF00          NO, PROCEED NORMAL            @D68PGA  00499320
         CLC   6(2,RF),H7        IS THIS A TASK-SEL. ENTRY     @D68PGA  00499400
         BE    DEBUGEXA          YES, SKIP IT                  @D68PGA  00499480
         CLC   6(2,RF),H3        IS THIS A DISP ENTRY          @D68PGA  00499560
         BE    DEBUGEXA          YES, SKIP IT                  @D68PGA  00499640
         DROP  R1                RELEASE MISINTAT BASE         @D68PGA  00499720
DEBUGF00 TM    SCNPSW,SMDAT      IS DAT ALREADY ON             @DY45817 00499800
         BZ    DEBUGIPL          NO, STILL IN IPL PROCESS      @D61NDAP 00500000
         STOSM PSWMASK,SMDAT     SAVE CURRENT SETTING + DAT ON @D61NDAP 00501000
DEBUGB10 L     R1,TDCPUPTR       CPU CONTROL BLOCK             @D61MPAP 00502000
         L     R1,TCPUWRK-TCPUADR(,R1) WORK AREA ADDRESS       @D61MPAP 00503000
         USING TWCPADR,R1        TDWORK AREA BASE              @D61MPAP 00504000
         STM   R0,RF,TWDBGSAV    SAVE ALL REGISTERS            @D61MPAP 00505000
         LA    R9,TWDEBUGS       ADDRESS OF CPU SPECIFIC DEBUG @D61MPAP 00506000
         USING TWDBGADR,R9       DEBUG BUILD AREA BASE         @D61MPAP 00507000
         DROP  RE                RELEASE TEMP BASE             @D61CDAP 00508000
         LR    RD,RE             COMMON CODE BASE ADDRESS      @D61NDAP 00509000
         USING DEBUGFUL,RD       COMMON CODE BASE POINTER      @D61NDAP 00510000
         AIF   (NOT &BGDEBUG).NDBG040                          @D61NDAP 00511000
         OC    5(3,RF),5(RF)     IS THIS A PROGRAM CHECK TYPE  @D61NDAP 00512000
         BNZ   DEBUGB20          NO, NORMAL PROCESSING         @D61NDAP 00513000
         CLI   PGMINTC+1,X'40'   MC INSTRUCTION                @D61NDAP 00514000
         BE    XXMONRTN          YES,                          @D61CDAP 00515000
         CLI   PGMINTC+1,X'C0'   MC INSTRUCTION+PER            @D61NDAP 00516000
         BE    XXMONRTN          YES,                          @D61NDAP 00517000
DEBUGB20 TM    IJBFLG08,IJBDEBUG IS DEBUG ACTIVE               @D61NDAP 00518000
         BZ    DEBUGEXT          NO, RETURN                    @D61NDAP 00519000
.NDBG040 ANOP                                                  @D61NDAP 00520000
         MVI   TWDBGFLG,ZERO     CLEAR PROCESSING FLAG         @D61MPAP 00521000
         AGO   .NOPP020                                                 00522490
         OC    5(3,RF),5(RF)     IS THIS A PROGRAM CHECK TYPE  @D63XXAP 00523000
         BNZ   DEBUGB30          NO, NORMAL PROCESSING         @D63XXAP 00524000
         CLI   PGMINTC+1,X'04'   PROTECTION CHECK              @D63XXAP 00525000
         BE    DBGPPPRC          YES,                          @D63XXAP 00526000
         CLI   PGMINTC+1,X'84'   PROTECTION CHECK              @D63XXAP 00527000
         BE    DBGPPPRC          YES,                          @D63XXAP 00528000
DEBUGB30 DS    0H'0'                                                    00529490
.NOPP020 ANOP                                                           00529980
         L     RC,4(RF)          GET CALL IDENTIFIER           @DA44XXX 00530470
         ST    RC,TWDBGTYP       SAVE DEBUG INFORMATION        @DA44XXX 00531000
         ICM   RC,8,H0           CLEAR BYTE 0                  @DA44XXX 00532000
         CLI   TWDBGTYP,XXDBGMC  IS THIS A DEBUG CALL ENTRY    @D61MPAP 00533000
         BH    DEBUGSEC          NO, CHECK FOR OTHER REQUESTS  @DA44841 00534000
         BL    DEBUGEXT          NO, IGNORE                    @D61NDAP 00535000
         C     RC,XXMAXCAL       DO WE HAVE TO HANDLE THIS ONE @D61NDAP 00536000
         BH    DEBUGCHK          NO, CHECK FOR STOP OPTION     @D61NDAP 00537000
         XC    TWDBGPSW+1(3),TWDBGPSW+1 CLEAR FOR BAL INTERFACE@D61MPAP 00538000
         MVC   TWDBGPSW(1),PSWMASK SET MASK BYTE               @D61MPAP 00539000
         STCM  R0,8,TWDBGPSW+2   SET CONDITION CODE            @D61MPAP 00540000
DEBUGB40 ST    RF,TWDBGPSW+4     SAVE LINK ADDRESS             @D61MPAP 00541000
         BAL   RC,XXCOMMON       PROCESS THE CALL              @D61NDAP 00542000
         TM    TWDBGFLG,XXGOTNP  DID WE REQUEST NP STATE       @DAOM    00547000
         BZ    DEBUGEXT          NO, WE HAD IT ALREADY         @DAOM    00548000
         LA    RC,TWDBGPSW       PROVIDE PSW ADDRESS           @DAOM    00549000
*        TDLOCK FUNC=RELCOND,TYPE=NP,WR1=RB,INP=(RC)           @DAOM    00550000
         TDLOCK FUNC=RELCOND,TYPE=NP,WR1=RB,INP=(RC)           @DAOM    00551000
         MVC   PSWMASK(1),TWDBGPSW RESTORE PSW MASK            @DAOM123 00552000
         NI    TWDBGFLG,XFF-XXGOTNP INDICATE NP STATE RELEASED @DAOM    00553000
DEBUGEXT DS    0H'0'             DEBUG EXIT PROCESSING         @D41ADAP 00554290
         LM    R0,RF,TWDBGSAV    RESTORE ALL REGISTERS         @D61MPAP 00554580
         DROP  RD                RELEASE BALDEBUG BASE         @D61NDAP 00555000
         USING DEBUGFUL,RE       BAL INTERFACE BASE POINTER    @D61NDAP 00556000
         SSM   PSWMASK           RESTORE OLD SYSTEM MASK       @D61NDAP 00557000
DEBUGEXA SPM   R0                RESTORE CONDITION CODE        @D61MPAP 00558000
         BSM   0,RF              RETURN====================>>> @D61NDAP 00559000
         SPACE 3                                                        00560000
DEBUGIPL STOSM PSWMASK,ZERO      SAVE CURRENT SETTING          @D61NDAP 00561000
         B     DEBUGB10          BYPASS TDLOCK                 @D61NDAP 00562000
         SPACE 3                                                        00563000
         DROP  RE                RELEASE BALDEBUG BASE         @D63XXAP 00564000
         USING DEBUGFUL,RD       BAL INTERFACE BASE POINTER    @D63XXAP 00565000
DEBUGCHK TM    TWDBGTYP+3,X'10'  IS THIS A STOP FUNCTION       @D63XXAP 00566000
         BZ    DEBUGEXT          NO,                           @D63XXAP 00567000
         AGO   .NOPP040                                                 00568490
         TM    TWDBGTYP+3,X'01'  RETURN FROM PAGE PROTECTION   @D63XXAP 00569000
         BO    DBGPPRET          YES,                          @D63XXAP 00570000
.NOPP040 ANOP                                                           00571490
         NI    TWDBGTYP+3,X'02'  MAKE IT AN ALLREGS CALL       @D63XXAP 00572000
         B     XXCOM020          ENTER STOPPED STATE           @D61NDAP 00573000
DEBUGSEC L     RF,XXARPTR        ADDRESS OF DEBUG CONTROL      @DA44993 00574000
         L     RF,4(,RF)         GET DEBUG INFO ADDRESS        @DA44993 00575000
         CLI   TWDBGTYP,X'04'    IS THIS A DEBUG SECURITY CALL @DA44841 00576000
         BL    DEBUGVIS          NO, CHECK FOR LOCK CALL       @DA44841 00577000
         BNE   DEBUGEXT          EXIT, IGNORE                  @D41ADAP 00578490
         L     RE,ADBGSECP       ADDRESS OF SECURITY PROCESSING@D41ADAP 00578980
         B     0(,RE)                 =======================> @D41ADAP 00579470
DEBUGVIS CLI   TWDBGTYP,X'03'    IS THIS A DEBUG GETVIS CALL   @D61MPAP 00580000
         BL    DEBUGLCK          NO, IT IS A LOCK CALL         @DAOM092 00581000
         BNE   DEBUGEXT          EXIT                                   00582000
         L     RE,ADBGVISP       ADDRESS OF GETVIS PROCESSING  @D25IDAP 00583000
         B     0(,RE)                 =======================> @DY46299 00584490
DEBUGLCK TM    XXESIESE,XXESDOLC     LOCK   TRACE ACTIVE       @DAOM092 00585000
         BZ    DEBUGEXT              NO,  ===================> @DAOM092 00586000
         ICM   RF,15,XXLCKBUF        LOCK TRACE ACTIVE         @D61NDAP 00587000
         BZ    DEBUGEXT              NO,  ===================> @D61NDAP 00588000
         USING XCKHDMAP,RF           HEADER BLOCK BASE POINTER @D61NDAP 00589000
         L     RE,ADBGLCKP       ADDRESS OF LOCK  PROCESSING   @D25IDAP 00590000
         BR    RE                     =======================> @D61NDAP 00591000
         DROP  RD                RELEASE BALDEBUG BASE         @D61NDAP 00592190
         AGO   .NOPP060                                                 00592380
         USING DEBUGFUL,RD       BAL INTERFACE BASE POINTER    @D63XXAP 00592570
DBGPPPRC L     RE,ADBGPPPR       GET PROCESSING ROUTINE ADDRESS@D63XXAP 00593000
         LA    RA,XXESICTL       POINT TO DEBUG CONTROL TABLE  @D63XXAP 00594000
         B     0(,RE)                 =======================> @D63XXAP 00595000
DBGPPRET L     RE,ADBGPPPR       GET PROCESSING ROUTINE ADDRESS@D63XXAP 00596000
         LA    RA,XXESICTL       POINT TO DEBUG CONTROL TABLE  @D63XXAP 00597000
         B     4(,RE)                 =======================> @D63XXAP 00598000
         DROP  RD                RELEASE BALDEBUG BASE         @D61NDAP 00599000
ADBGPPPR DC    A(DBGPP000)       PAGE PROTECT PROCESSING       @D63XXAP 00600000
.NOPP060 ANOP                                                           00600500
ADBGVISP DC    A(DBGVISPR)       GETVIS TRACE PROCESSING       @D25IDAP 00601000
ADBGSECP DC    A(DBGSECPR)       SECURITY TRACE PROCESSING     @D41ADAP 00601500
ADBGLCKP DC    A(DBGLCKPR)       LOCK   TRACE PROCESSING       @DAOM092 00602000
AXXSYSTN DC    A(XXSYSTN)        SYSTEM TASK MAPPING TABLE     @DAOM123 00603000
ADBGMIHA DC    A(MISINTAT)       MIH BASE ADDRESS              @D68PGA  00603500
         SPACE 3                                                        00605000
TWDBGADR DSECT                    FOR DEBUGGING ONLY           @D61NDAP 00606000
TWDBGTOD DC    D'0'              CPU TIMER VALUE               @D61MPAP 00607000
TWDBGPSW DC    D'0'              PSW CONSTRUCTION AREA         @D61MPAP 00608000
TWDBGRET DC    F'0'              RETURN ADDRESS                @D61MPAP 00609000
TWDBGTYP DC    F'0'              DEBUG ENTRY TYPE              @D61MPAP 00610000
TWDBGCRD DC    F'0'              CONTROL REGISTER CONTENTS     @DA44364 00612000
TWDBGFLG DC    XL1'00'           PROCESSING FLAG BYTE          @D61MPAP 00617000
XXNOCHK  EQU   X'80'             BYPASS CONSISTENCY CHECK      @D61MPAP 00618000
XXGOTNP  EQU   X'40'             WE REQUESTED NP STATE         @DAOM    00619000
         DC    XL3'00'           RESERVED                      @D61MPAP 00620000
XXCHAIN  DS    1F                ENTRY-ID                      @D61NDAP 00621000
XXOPSW   DS    2F                CALLERS PSW                   @D61NDAP 00622000
XXTID    DS    XL2               TID                           @D66CDAP 00623000
XXRID    DS    XL1               RID                           @D61NDAP 00624000
XXCPUST  DS    XL1               CPU STATE                     @D61NDAP 00625000
XXSTAMP  DS    XL8               TIME STAMP                    @D61NDAP 00626000
XXCPUID  DS    XL2               CPU ADDRESS                   @D66CDAP 00627000
XXFIELD1 DS    XL2               FIELD 1                       @D66CDAP 00628000
XXFIELD2 DS    XL4               FIELD 2                       @D61NDAP 00629000
XXREG0   DS    F                                               @D61NDAP 00630000
XXLTA    EQU   XXREG0                                          @D61NDAP 00631000
XXREG1   DS    F                                               @D61NDAP 00632000
XXREG2   DS    F                                               @D61NDAP 00633000
XXPTA    EQU   XXREG2                                          @D61NDAP 00634000
XXREG3   DS    F                                               @D61NDAP 00635000
XXREG4   DS    F                                               @D61NDAP 00636000
XXREG5   DS    F                                               @D61NDAP 00637000
XXREG6   DS    F                                               @D61NDAP 00638000
XXREG7   DS    F                                               @D61NDAP 00639000
XXREG8   DS    F                                               @D61NDAP 00640000
XXREG9   DS    F                                               @D14ZDFG 00641000
XXREGA   DS    F                                               @D14ZDFG 00642000
XXREGB   DS    F                                               @D14ZDFG 00643000
XXREGC   DS    F                                               @D14ZDFG 00644000
XXREGD   DS    F                                               @D14ZDFG 00645000
XXREGE   DS    F                                               @D14ZDFG 00646000
XXREGF   DS    F                                               @D14ZDFG 00647000
         SPACE 3                                                        00648000
XXDBGHDR DSECT                   DEBUG HEADER DSECT            @D61MPAP 00649000
XXPTR    DS    F                 NEXT DEBUG ENTRY ADDRESS      @D61MPAP 00650000
XXNEXTHD DS    F                 NEXT DEBUG AREA HEADER        @D61MPAP 00651000
XXAREND  DS    F                 LAST ENTRY IN AREA ADDRESS    @D61MPAP 00652000
XXPCBADR DS    0F                PCBADR IF DEBUG=SYSLOGID      @DA44XXX 00653000
XXPREVHD DS    F                 PREVIOUS   AREA HEADER        @D61MPAP 00654000
XXARBEG  DS    0F                FIRST ENTRY IN AREA ADDRESS   @D61MPAP 00655000
         SPACE 3                                                        00656000
&SYSECT  CSECT                                                 @D61CDAP 00657000
*********************************************************************** 00658000
*                                                                     * 00659000
*  FUNCTIONS                                                          * 00660000
*    (1)     PERFORM EVENT SELECTION STOP                             * 00661000
*    (2)     WRITE TRACE ENTRIES INTO WRAP AROUND AREA FOR DEBUGGING. * 00662000
*  INPUT     RF POINTS TO THE DEBUG ENTRY TYPE                        * 00663000
*  EXITS NORMAL- BACK TO CALLER                                       * 00664000
*********************************************************************** 00665000
         SPACE 3                                                        00666000
         USING DEBUGFUL,RD       COMMON CODE BASE POINTER      @D61NDAP 00667000
XXCOMMON ST    RC,TWDBGRET        SAVE RETURN ADDRESS          @D61MPAP 00668000
         LA    RA,XXESIBEG        POINT TO START EVENT ENTRY   @DA43697 00669000
         USING XXESIMAP,RA        EVENT ENTRY MAP              @DA43697 00670000
         TM    XXESIFLG,XXESIACT  ANY EVENT SELECTION START    @DAOM092 00671000
         BZ    XXCOM010           NO,                          @DA43697 00672000
         BAL   RE,XXCOMSUB        YES, CHECK FOR MATCH         @DA43697 00673000
         B     XXDBGEND          0 NONE =====================> @DA43697 00674000
         NI    XXESIBEG+XXESIFLG-XXESIMAP,XFF-XXESIACT RESET   @DAOM092 00675000
XXCOM010 LA    RA,XXESISTP        POINT TO STOP  EVENT ENTRY   @DA43697 00676000
         TM    XXESIFLG,XXESIACT  ANY EVENT SELECTION STOP     @DAOM092 00677000
         BZ    XXNOSTOP           NO,                          @D14BDAP 00678000
         BAL   RE,XXCOMSUB        YES, CHECK FOR MATCH         @DA43697 00679000
         B     XXNOSTOP         0 NONE =====================>  @DA43697 00680000
XXCOM015 L     RC,BIT0OMSK      4 GET IN USE INDICATOR         @DA44311 00681000
         SLR   RB,RB              GET FREE INDICATOR           @DA44311 00682000
         CS    RB,RC,XXCOMFLG     IS COMPARE STOP ACTIVE       @DA44311 00683000
         BNZ   XXCOM015           YES, TRY AGAIN               @DA44311 00684000
         TM    XXESIFLG,XXESISUS  USER REQUESTED DEBUG SUSPEND @DAOM092 00685000
         BZ    XXCOM020           NO,                          @DAOM092 00686000
         NI    IJBFLG08,XFF-IJBDEBUG TURN DEBUG OFF            @DAOM092 00687000
         TM    SUPFLAG,TDACT      IS TURBO DISPATCHER ACTIVE   @DAOM092 00688000
         BZ    XXHALTED           NO,                          @DAOM092 00689000
         DISPMAC FUNC=DEBGOFF     TURN DEBUG OFF               @DAOM092 00690000
         B     XXHALTED           JOIN MAIN PATH               @DAOM092 00691000
         DROP  RA                 RELEASE EVENT TYPE BASE      @DA43697 00692000
XXCOM020 MVC   8(8),XXWTPSW       SET UP WAIT PSW AT X'08'     @D41ADAP 00693490
         LM    RB,RC,SVOLDP       SAVE SVC-OLD PSW SETTING     @DA43858 00694000
         STM   RB,RC,XXSVCOLD     SAVE SVC OLD-PSW             @DA43858 00695000
         L     RB,SVCINF          GET INTERRUPT INFORMATION    @DA43858 00696000
         ST    RB,XXSVCINF        SAVE SVC-INTERRUPT INFO.     @DA43858 00697000
         L     RA,AXXCOM30        CONTINUATION ADDRESS         @DA43858 00698000
         LM    RB,RC,SCNPSW       SAVE SVC-NEW PSW             @D61NDAP 00699000
         ST    RA,SCNPSW+4        UPDATE SVC-NEW PSW           @D61NDAP 00700000
         SVC   X'FF'              FORCE CURRENT PSW STORING    @D61NDAP 00701000
XXCOM030 STM   RB,RC,SCNPSW       RESTORE OLD SVC-NEW PSW      @D61NDAP 00702000
         MVC   0(8),SVOLDP        SET UP RESTART PSW AT X'00'  @D14CDAP 00703000
.*                                                                      00704000
.*       PRESERVE DEBUG INFORMATION BY SWITCHING DEBUG-AREA             00705000
.*                                                             @DAOM    00706000
         L     RE,XXARPTR         GET DEBUG ANCHOR ADDRESS     @DAOM    00707000
         L     RB,0(,RE)          GET DEBUG HEADER ADDRESS     @DAOM    00708000
         USING XXDBGHDR,RB        DEBUG HEADER BASE ADDRESS    @DAOM    00709000
         L     RB,XXNEXTHD        POINTER TO NEXT DEBUG AREA   @DAOM    00710000
         LA    RC,XXARBEG         FIRST ENTRY ADDRESS          @DAOM    00711000
         ST    RC,XXPTR           NEXT FREE ENTRY ADDRESS      @DAOM    00712000
         ST    RB,0(,RE)          SWITCH THE AREA              @DAOM    00713000
         DROP  RB                 RELEASE XXDBGHDR BASE        @DAOM    00714000
XXCOM040 LM    RB,RC,XXSVCOLD     GET  SVC OLD-PSW             @DA43858 00715000
         STM   RB,RC,SVOLDP       RESTORE OLD PSW INFO         @DA43858 00716000
         L     RB,XXSVCINF        GET SVC-INTERRUPT INFO.      @DA43858 00717000
         ST    RB,SVCINF          GET INTERRUPT INFORMATION    @DA43858 00718000
         L     RB,APG0SAVE        GET ADDRESS OF SAVE AREA     @DA44738 00719000
         MVC   0(24,RB),0         SAVE FIRST 24-BYTES          @DA44738 00720000
         L     RB,AXXHALTE        CONTINUATION ADDRESS         @DA43858 00721000
         ST    RB,4               SAVE ADDRESS IN RESTART PSW  @DA43697 00722000
         LPSW  8                  PUT SYSTEM INTO WAIT STATE   @D14CDAP 00723000
         SPACE 1                                                        00724000
APG0SAVE DC    A(HWSAVAR)         LOW CORE SAVE AREA           @DA44738 00725000
XXSVCINF DC    1F'0'              SAVED SVC INFORMATION        @DA43858 00729000
XXCRSAVE EQU   CRSAVE             USE LOW CORE AREA   X'1C0'   @D41ADAP 00730090
AXXHALTE DC    A(XXHALTED+X'80000000')                         @DA43858 00730180
AXXCOM30 DC    A(XXCOM030+X'80000000')                         @DA43858 00730270
XXSVCOLD DC    2F'0'              SAVED SVC-OLD PSW            @DA43858 00730360
XXWTPSW  DC    XL8'000A00000000EEEE'                           @D41ADAP 00730450
         SPACE 3                                                        00731000
         USING XXESIMAP,RA        EVENT ENTRY MAP              @DA43697 00732000
XXCOMSUB DC    0H'0'              ENTRY POINT                  @D25IDAP 00733000
         TM    SUPVFLAG,MPACT     MP-PROCESSING ONGOING        @DAOM    00734000
         BZ    XXCOMS00           NO,                          @DAOM    00735000
         L     RB,TDCPUPTR        GET ADDR OF CPU CB           @DAOM    00736000
         USING TCPUADR,RB                                      @DAOM    00737000
         TM    TCPFLAG1,TDCNPA    NP CODE ACTIVE               @DAOM    00738000
         BZR   RE                 NO,  ======================> @DAOM    00739490
         DROP  RB                                              @DAOM    00740000
XXCOMS00 L     RC,BIT0OMSK        GET IN USE INDICATOR         @DA43697 00741000
         SLR   RB,RB              GET FREE INDICATOR           @D61MPAP 00742000
         CS    RB,RC,XXCOMFLG     IS COMPARE STOP ACTIVE       @D61MPAP 00743000
         BNZ   XXCOMS00           YES, TRY AGAIN               @D61ADAP 00744000
XXCOMS05 CLI   XXESISID,ZERO      SPACE-ID GIVEN               @D51TDAP 00745490
         BE    XXCOMS10           NO,                          @D51TDAP 00746000
         L     RC,SCBPTR          GET SCB POINTER              @D51TDAP 00747000
         USING SCBADR,RC          SCB BASE POINTER             @D51TDAP 00748000
         CLC   SCBID,XXESISID     IS THIS THE WANTED SPACE     @D51TDAP 00749000
         BNE   XXCOMS20           NO,                          @D51TDAP 00750000
         DROP  RC                 RELEASE SCB BASE POINTER     @D51TDAP 00751000
XXCOMS10 L     RC,XXESIADR        GET THE COMPARE ADDRESS      @D51TDAP 00752000
         &LRA  RB,0(RC)           IS ADDR IN STORAGE           @D41ADAP 00753490
         BNE   XXCOMS20           NO,                          @DA43697 00754000
         NI    XXESIMSK,X'F0'     ENSURE A VALID MASK          @D51TDAP 00755000
         SLR   RB,RB              CLEAR REGISTER               @D14BDAP 00756000
         IC    RB,XXESILEN        GET NO. OF BYTES TO COMPARE  @D14BDAP 00757000
         N     RB,F15             TURN OFF UNUSED BITS         @DA43697 00758000
         BCTR  RB,0               ADJUST FOR EXECUTE INSTRUCT. @D14CDAP 00759000
         EX    RB,XXCOMXCL        COMPARE TO USER STRING       @D14CDAP 00760000
         IC    RB,XXESIMSK        GET MASK BYTE                @D51GDAP 00761000
         EX    RB,XXCOMXBR        MATCH RETURN                 @D51GDAP 00762000
         NI    XXESIFLG,XFF-XXESIHIT  INDICATE MISS            @DAOM092 00763000
.*                                                             @DA43697 00764000
.*       NO MATCH FOUND PROCESSING                             @DA43697 00765000
.*                                                             @DA43697 00766000
XXCOMS20 TM    XXESIFLG,XXESIHIT  HAVE WE HAD A HIT BEFORE     @DAOM092 00767000
         BO    XXCOMS60           YES,                         @DA43697 00768000
         TM    XXESIFLG,XXESIOR+XXESIAND ANY MORE ENTRIES      @DAOM092 00769000
         BZ    XXCOMS50           NO,                          @DA43697 00770000
         TM    XXESIFLG,XXESIAND  IS THIS AND RELATION         @DAOM092 00771000
         BZ    XXCOMS30           NO, ITS  OR RELATION         @DA43697 00772000
         OI    XXCOMFLG,XXCOMMIS  INDICATE RESULT IS MISS      @DA43697 00773000
         B     XXCOMS40           CHECK FOR OR RELATION        @DA43697 00774000
XXCOMS30 NI    XXCOMFLG,XFF-XXCOMMIS RESET MISS INDICATOR      @DA43697 00775000
XXCOMS40 LA    RA,L'XXESIBEG(,RA) POINT TO NEXT ENTRY          @DA43697 00776000
         B     XXCOMS05           CHECK NEW CONDITION          @DA43697 00777000
XXCOMS50 SLR   RB,RB              CLEAR REGISTER               @DA43697 00778490
         L     RC,XXCOMFLG        GET SEMAPHORE                @DA43697 00779000
         CS    RC,RB,XXCOMFLG     FREE THE SEMAPHORE           @DA43697 00780000
         BE    0(,RE)             MISS ======================> @DA43697 00781000
         BAL   R5,SYSERROR                                     @DA43697 00782000
.*                                                             @DA43697 00783000
.*          MATCH FOUND PROCESSING                             @DA43697 00784000
.*                                                             @DA43697 00785000
XXCOMS60 OI    XXESIFLG,XXESIHIT  INDICATE HIT                 @DAOM092 00786000
         TM    XXESIFLG,XXESIAND  ADDITIONAL TEST REQUIRED     @DAOM092 00787000
         BZ    XXCOMS70           NO,                          @DA43697 00788000
         LA    RA,L'XXESIBEG(,RA) POINT TO NEXT ENTRY          @DA43697 00789000
         B     XXCOMS05           CHECK NEXT ENTRY             @DA43697 00790000
XXCOMS70 TM    XXCOMFLG,XXCOMMIS  DID WE HAVE A MISS BEFORE    @DA43697 00791000
         BZ    XXCOMS80           NO,                          @DA43697 00792000
         TM    XXESIFLG,XXESIOR   ADDITIONAL TEST REQUIRED     @DAOM092 00793000
         BO    XXCOMS30           YES,                         @DA43697 00794000
         B     XXCOMS50           TAKE THE MISS EXIT           @DA43697 00795000
XXCOMS80 SLR   RB,RB                                           @DA43697 00796000
         L     RC,XXCOMFLG        GET SEMAPHORE                @DA43697 00797000
         CS    RC,RB,XXCOMFLG     FREE THE SEMAPHORE           @DA43697 00798000
         BE    4(,RE)             MATCH======================> @DA43697 00799000
         BAL   R5,SYSERROR                                     @DA43697 00800000
         SPACE 1                                               @DA43697 00801000
XXCOMXCL CLC   0(0,RC),XXESISTR   COMPARE UP TO MAX OF 8 BYTES @D14CDAP 00802000
XXCOMXBR NOP   XXCOMS60           MATCH FOUND                  @D14CDAP 00803000
         SPACE 1                                                        00804490
         DROP  RA                 RELEASE EVENT ENTRY BASE     @DA43697 00805000
         EJECT ,                                                        00806000
XXHALTED NI    XXESISTP+XXESIFLG-XXESIMAP,XFF-XXESIACT RESET   @DAOM092 00807000
         SLR   RB,RB                                           @DA44311 00808000
         L     RC,XXCOMFLG        GET SEMAPHORE                @DA44311 00809000
         CS    RC,RB,XXCOMFLG     FREE THE SEMAPHORE           @DA44311 00810000
         BE    XXNOSTOP           WAS O.K.                     @DA44311 00811000
         BAL   R5,SYSERROR        OUPS                         @DA44311 00812000
         DC    C'FORCESYS'        PROVIDE EYE-CATCHER          @D67ADAP 00813000
XXNOSTOP DS    0H'0'              SKIP SPECIAL TASKS           @D67ADAP 00814000
         SLR   RC,RC              CLEAR REGISTER               @DAOM092 00815000
         ICM   RC,3,TWDBGTYP+2    GET CALL IDENTIFIER          @DAOM092 00816000
         NOP   XXNST020           SET SWITCH IF WE NEED IT ALL @DAOM092 00817000
         TM    XXESISTP+XXESIFLG-XXESIMAP,XXESISUS SUSPEND     @DAOM092 00818000
         BO    XXNST040           YES, BUILD THIS ENTRY ANYWAY @DA0M092 00819000
         LA    RB,XXNOTIDS        NOT TO BE TRACED TIDS        @DAOM103 00820000
         LA    R0,8               MAXIMUM WE HANDLE            @DAOM103 00821000
XXNST000 OC    0(2,RB),0(RB)      ANY SKIP ENTRIES             @DAOM103 00822000
         BZ    XXNST010           NO,                          @DAOM103 00823000
         CLC   TID,0(RB)          THIS ONE TO BE SKIPPED       @DAOM103 00824000
         BE    XXDBGEND           YES,                         @DAOM103 00825000
         LA    RB,2(,RB)          POINT TO NEXT ENTRY          @DAOM103 00826000
         BCT   R0,XXNST000        CHECK NEXT ENTRY             @DAOM103 00827000
XXNST010 LA    RA,HCFTID          HCF TASK-ID 0013             @D67ADAP 00828000
         CH    RA,TID             DO WE WANT TO SKIP THIS ONE  @D66CDAP 00829000
         BL    XXNST020           NO, CERTAINLY NOT            @D67ADAP 00830000
         LA    RA,SVTTID          SVT TASK-ID 000F             @D67ADAP 00831000
         CH    RA,TID             IS THIS THE DSP,SPD,CST,HCF  @D66CDAP 00832000
         BNL   XXNST020           NO,                          @D68ADAP 00833000
         CH    RC,H6              IS IT AN EXTERNAL INTERRUPT  @D68ADAP 00834000
         BE    XXNST015           YES, CHECK FOR DSP           @D68ADAP 00835000
         CH    RC,H4              IS IT AN IO INTERRUPT        @D68ADAP 00836000
         BNE   XXDBGEND           NO, SKIP THE ENTRY           @D68ADAP 00837000
XXNST015 LA    RA,DSPTID          DISP-TASK ID                 @D68APAP 00838000
         CH    RA,TID             WAS IT A SOLICITED EXT.INT.  @D66CDAP 00839000
         BNE   XXDBGEND           NO, SKIP THE ENTRY           @D68ADAP 00840000
XXNST020 L     RA,XXESINFO        GET TRACE SELECTION INFO.    @D14CDAP 00841000
         SLL   RA,0(RC)           SHIFT UNTIL OUR BIT IS 1ST   @D14CDAP 00842000
         LTR   RA,RA              IS APPROPRIATE TRACE BIT ON  @D14CDAP 00843000
         BNM   XXDBGEND           NO, RETURN TO CALLER         @D61NDAP 00844000
XXNST040 STCK  TWDBGTOD           SAVE TOD                     @D61MPAP 00845000
XXNST060 MVC   XXCHAIN(4),EEEE0000 SET ENTRY IDENTIFIER        @D61MPAP 00846000
         MVC   XXTID,TID          SAVE TASK IDENTIFIER         @D66CDAP 00847000
         MVC   XXRID(1),RID+1     SAVE ROUTINE IDENTIFIER RID  @D149DAP 00848000
         L     RB,TDCPUPTR        POINT TO TCPU CONTR.BLOCK    @D61MPAP 00849000
         MVC   XXCPUST,TCPFLAG1-TCPUADR(RB) GET CPU STATE INFO @D61MPAP 00850000
         MVC   XXSTAMP(8),TWDBGTOD SET TIME STAMP              @D61MPAP 00851000
         MVC   XXCPUID,TCPUID-TCPUADR(RB) SET CPUID            @D66CDAP 00852000
         XC    XXFIELD1(6),XXFIELD1 CLEAR RESERVED INFO        @D66CDAP 00853000
         TM    SYSFLAG2,IPLBIT    IS IPL IN PROCESS            @D66ADAP 00855000
         BO    XXNST080           YES, SKIP THE TEST           @D66ADAP 00856000
         CLI   TWDBGTYP+3,X'03'   IS IT A DISP ENTRY           @DY45385 00857000
         BNE   XXNST080           NO,                          @DA44993 00858000
         CLC   TWSAVCR0(64),XXCRSAVE ANY CR CHANGES            @D41ADAP 00859490
         BE    XXNST080           NO, CONTINUE NORMAL          @DA44364 00860000
         MVI   XXCHAIN+2,X'02'    INDICATE ALLREG ENTRY        @DA44364 00861000
         MVC   XXFIELD2(4),XXCNCREG INDICATE CREG              @DA44364 00862000
         XC    XXOPSW(8),XXOPSW   DONT PROVIDE PSW INFO        @DA44364 00863000
         MVC   XXREG0(64),TWSAVCR0 SAVE CONTROL REGISTER       @DA44364 00864000
         MVC   XXCRSAVE(64),TWSAVCR0 SAVE INFO IN LOW CORE     @D41ADAP 00865490
         LA    RB,96              SET ENTRY LENGTH             @DA44364 00866000
         BAL   RC,XXSETUP         MAKE DEBUG ENTRY             @DA44364 00867000
         SLR   RC,RC              CLEAR REGISTER               @DA44364 00868000
         ICM   RC,3,TWDBGTYP+2    GET CALL IDENTIFIER          @DA44364 00869000
         B     XXNST060                                        @DA44364 00870000
XXNST080 STC   RC,XXCHAIN+2       SET UP CALL IDENTIFIER       @DA44364 00872000
         SLL   RC,2               MULTIPLY M.C. ID WITH 2      @D14CDAP 00873000
         L     RC,XXADRTAB(RC)    GET ROUTINE ADDRESS          @D61NDAP 00874000
         SLR   RB,RB              SET ENTRY LENGTH TO ZERO     @D61ADAP 00875000
         BR    RC                 BRANCH TO PROPER ROUTINE     @D61NDAP 00876000
         SPACE 1                                               @D51GDAP 00877000
         DROP  RD                 RELEASE DEBUGFUL BASE        @D61NDAP 00878000
         SPACE 3                                               @D51GDAP 00879000
XXHEADER DC    A(DEBUGBEG)        ACTIVE DEBUG AREA HEADER     @D61MPAP 00880000
XXCONTRL DC    A(XXESINFO)        DEBUG CONTROL INFORMATION    @D61CDAP 00881000
         DC    F'0'               RESERVED                     @D61CDAP 00882000
         DC    F'0'               RESERVED                     @D61CDAP 00883000
XXCOMFLG DC    F'0'               ADDRESS COMPARE PROCESSING   @DA43697 00884000
XXCOMACT EQU   X'80'              COMPARE STOP EXECUTING       @DA43697 00885000
XXCOMMIS EQU   X'40'              COMPARE WAS A MISS           @DA43697 00886000
XXESINFO DS    0D'0'              DEBUG TRACE INFORMATION      @D52VDAP 00887000
         MAPDBGIN                 TRACE INFO PARAMETER         @D61NDAP 00888000
         AIF   (NOT &BGDEBUG).NDBG050                          @D61NDAP 00889000
         TITLE 'VSE/AF SUPERVISOR    SGDEBUG  SPECIAL MC PROCESSING   ' 00890000
*                                                                       00891000
*        PROCESS MONITOR CALL PROGRAM CHECKS CAUSED BY TESTMON          00892000
*                                                              @D35EDJO 00893000
         SPACE 1                                                        00894000
         USING DEBUGFUL,RE       BAL INTERFACE BASE POINTER    @D61NDAP 00895000
XXMONRTN DS    0H                                              @D35CDFG 00896000
         CLI   MONCLASS+1,X'0E'   IS THIS A TESTMON CALL       @D61NDAP 00897000
         BL    DEBUGB20           NO, TREAT AS PROGRAM CHECK   @D61NDAP 00898000
         L     RA,IJBINSTR        ADDR OF COUNTERS             @D14CDOW 00899000
         LTR   RA,RA              TESTMON ACTIVE               @D14CDOW 00900000
         BNM   DEBUGB20           NO, TREAT AS PROGRAM CHECK   @D61NDAP 00901000
         L     RC,PCKADRS         GET MC-ADDRESS+4             @D14CDOW 00902000
         SL    RC,F4              POINT BACK TO INSTRUCTION    @D51TDAP 00903000
         TM    XXMONTST,X'80'     SINGLE EVENT PROCESSING      @D51TDAP 00904000
         BZ    XXMON010           NO, NORMAL EVENT PROCESSING  @D51TDAP 00905000
         MVI   1(RC),X'0E'        MODIFY THE MC CALL           @D51TDAP 00906000
XXMON010 CLI   MONCLASS+1,X'0E'   DID WE MODIFY THIS BEFORE    @D51TDAP 00907000
         BNE   XXMON020           NO, DONT TOUCH               @D51TDAP 00908000
         MVI   1(RC),X'0F'        GET IT BACK TO NORMAL WORK   @D51TDAP 00909000
XXMON020 ICM   RC,3,2(RC)         IDENTIFICATION CODE          @D51TDAP 00910000
         ICM   RC,12,H0           CLEAR UNUSED BYTES           @D51TDAP 00911000
         LTR   RC,RC              IS THIS A ZERO ID            @D51TDAP 00912000
         BZ    XXMONEXT           YES, DONT ACCEPT THIS        @D61NDAP 00913000
         SLL   RC,2               MULTIPLY WITH ENTRY LENGTH   @D14CDOW 00914000
         CL    RC,0(RA)           IS IT WITHIN LENGTH OF AREA  @D51TDAP 00915000
         BNL   XXMONEXT           NO, CERTAINLY NOT            @D61NDAP 00916000
         ALR   RA,RC              ADDR OF COUNTER              @DA43858 00917000
XXMON030 L     RC,0(,RA)          GET COUNTER                  @D14CDOW 00918000
         LR    RF,RC              COPY CONTENTS                @D62COAP 00919000
         AL    RF,F1              ADD 1                        @D62COAP 00920000
         LTR   RF,RF              DID IT OVERFLOW              @D51TDAP 00921000
         BZ    XXMONEXT           YES, LEAVE MAXIMUM           @D61NDAP 00922000
         CS    RC,RF,0(RA)        UPDATE POINTER               @D62COAP 00923000
         BNZ   XXMON030           CURRENTLY IN USE             @D62COAP 00924000
XXMONEXT LM    R0,RF,TWDBGSAV     RESTORE ALL REGISTERS        @D61MPAP 00925000
         LM    RE,R1,XXDBGSRE     RESTORE USERS REGISTERS      @D61CDAP 00926000
         LM    R9,RD,XXERA        RESTORE PROG.-CHECK REGS     @D61CDAP 00927000
         NI    PCKFLAG1,XFF-APINDIC RESET LOOP CONTROL FLAG    @DA44052 00928000
         LPSW  PCOLDP                  ====================>>> @D61CDAP 00929000
         DROP  RE                 RELEASE DEBUGFUL BASE        @D61CDAP 00930000
         DROP  R9                 RELEASE TWDBGADR BASE        @D61MPAP 00931000
         DROP  R1                 RELEASE TWCPADR BASE         @D61MPAP 00932000
         SPACE 3                                                        00933000
.NDBG050 ANOP                                                  @D61NDAP 00934000
         USING TWCPADR,R1         CPU WORK AREA BASE           @D61MPAP 00935000
         USING TWDBGADR,R9        TWDBGADR BASE                @D61MPAP 00936000
         USING DEBUGFUL,RD        COMMON CODE BASE POINTER     @D61NDAP 00937000
XXSETUP  L     RE,XXHEADER        POINTER TO DEBUG CONTROL AREA@D61MPAP 00938000
         USING XXDBGHDR,RE        DEBUG HEADER BASE            @D61MPAP 00939000
ARSET000 LA    RE,0(,RE)          RESET HIGH ORDER BIT         @D61MPAP 00940000
         LR    RF,RE              COPY ADDRESS                 @D61MPAP 00941000
         O     RF,BIT0OMSK        SET IN USE BIT               @D61MPAP 00942000
         CS    RE,RF,XXHEADER     IS AREA BEING UPDATED        @D61MPAP 00943000
         BNZ   ARSET000           YES, TRY AGAIN               @D61ADAP 00944000
         L     RA,XXPTR           POINTER TO NEXT FREE POSITION@D61MPAP 00945000
         BCTR  RB,0               ADJUST FOR EXECUTE           @D61MPAP 00946000
         EX    RB,XXSETMVC        COPY DATA TO DEBUG AREA      @D61MPAP 00947000
         LA    RA,1(RA,RB)        NEXT ENTRY ADDRESS           @D61MPAP 00948000
         C     RA,XXAREND         END OF AREA REACHED          @D36ZDFR 00949000
         BNH   XXSET020           NO,                          @D61MPAP 00950000
         LR    RF,RA              COPY NEXT ENTRY ADDRESS      @DA44XXX 00951000
         S     RF,XXAREND         NUMBER OF BYTES IN LAST ENTRY@DA44XXX 00952000
         LNR   RF,RF              PROVIDE FOR SUBTRACTION      @DA44XXX 00953000
         A     RF,XXMAX           NUMBER OF BYTES TO BE CLEARED@DA44XXX 00954000
         LTR   RF,RF              ANY BYTES TO CLEAR           @DA44XXX 00955000
         BNP   XXSET010           NO,                          @D61NDAP 00956000
         BCTR  RF,0               SUBTRACT 1 FOR EXECUTE       @DA44XXX 00957000
         EX    RF,XXCLRBUF        CLEAR UNUSED BYTES           @DA44XXX 00958000
XXSET010 LA    RA,XXARBEG         FIRST ENTRY IN AREA ADDRESS  @D61MPAP 00959000
         XC    XXCRSAVE(64),XXCRSAVE RESET CR SAVE AREA        @D41ADAP 00960990
         TM    XXESIESS+1,X'20'   AREAS TO BE SWITCHED         @DA44052 00963000
         BZ    XXSET060           NO, USE ALL BUFFERS          @DAMFB   00964000
XXSET020 ST    RA,XXPTR           NEXT FREE ENTRY ADDRESS      @D61MPAP 00965000
         LA    RA,0(,RE)          RESET IN USE INDICATOR       @D61MPAP 00966000
         CLI   XXCHAIN+2,X'0A'    DEBUG AREA SWITCH ENTRY      @D61MPAP 00967000
         BNE   XXSET040           NO, REUSE SAME AREA          @D61MPAP 00968000
         XC    XXCRSAVE(64),XXCRSAVE RESET CR SAVE AREA        @D41ADAP 00969990
XXSET030 L     RA,XXNEXTHD        POINTER TO NEXT DEBUG AREA   @D61MPAP 00972000
         LA    RF,XXARBEG-XXDBGHDR(RA) FIRST ENTRY ADDRESS     @DA44XXX 00973000
         ST    RF,XXPTR-XXDBGHDR(RA) NEXT FREE ENTRY ADDRESS   @DA44XXX 00974000
XXSET040 ICM   RF,15,XXPARBUF     PARTITION DEBUG REQUESTED    @DAMFB   00975000
         BNZ   XXSET100           YES,                         @DAMFB   00976000
XXSET050 O     RE,BIT0OMSK        SET IN USE BIT               @D61MPAP 00977000
         CS    RE,RA,XXHEADER     FREE DEBUG AREA USAGE        @DAMFB   00978000
         BNE   XXSET050           VERY STRANGE                 @DAMFB   00979000
         BR    RC                 NO,  ======================> @D61MPAP 00980000
XXSET060 ST    RA,XXPTR           NEXT FREE ENTRY ADDRESS      @DAMFB   00981000
         B     XXSET030           USE NEXT AREA                @DA44052 00982000
         DROP  RE                 RELEASE XXDBGHDR BASE        @D61MPAP 00983000
         USING XXDBGHDR,RF        PARTITION HEADER BASE        @DA44XXX 00984000
XXSET100 CLC   PCBPTR(4),XXPCBADR IS THIS THE RIGHT AREA       @DA44XXX 00985000
         BE    XXSET110           YES,                         @DA44XXX 00986000
         ICM   RF,15,XXNEXTHD     DOES ANOTHER AREA EXIST      @DA44XXX 00987000
         BZ    XXSET050           NO, FREE THE LOCK            @DAMFB   00988000
         B     XXSET100           CHECK THIS AREA                       00989000
XXSET110 DS    0H'0'              SET UP PARTITION TRACE ENTRY @DA44XXX 00990000
         LR    R2,RA              SAVE DEBUG HEADER ADDRESS    @DAMFB   00991000
         L     RA,XXPTR           POINTER TO NEXT FREE POSITION@DA44XXX 00992000
         EX    RB,XXSETMVC        COPY DATA TO DEBUG AREA      @DA44XXX 00993000
         LA    RA,1(RA,RB)        NEXT ENTRY ADDRESS           @DA44XXX 00994000
         ST    RA,XXPTR           NEXT FREE ENTRY ADDRESS      @DA44XXX 00995000
         C     RA,XXAREND         END OF AREA REACHED          @DA44XXX 00996000
         BNH   XXSET130           NO, RETURN TO MAIN LINE      @DAMFB   00997000
         LR    RB,RA              COPY NEXT ENTRY ADDRESS      @DA44XXX 00998000
         S     RB,XXAREND         NUMBER OF BYTES IN LAST ENTRY@DA44XXX 00999000
         LNR   RB,RB              PROVIDE FOR SUBTRACTION      @DA44XXX 01000000
         A     RB,XXMAX           NUMBER OF BYTES TO BE CLEARED@DA44XXX 01001000
         LTR   RB,RB              ANY BYTES TO CLEAR           @DA44XXX 01002000
         BNP   XXSET120           NO,                          @DA44XXX 01003000
         BCTR  RB,0               SUBTRACT 1 FOR EXECUTE       @DA44XXX 01004000
         EX    RB,XXCLRBUF        CLEAR UNUSED BYTES           @DA44XXX 01005000
XXSET120 LA    RA,XXARBEG         FIRST ENTRY IN AREA ADDRESS  @DA44XXX 01006000
         ST    RA,XXPTR           NEXT FREE ENTRY ADDRESS      @DA44XXX 01007000
XXSET130 LR    RA,R2              RESTORE DEBUG HEADER ADDRESS @DAMFB   01008000
         L     R2,TWDBGSAV+8      RESTORE REG-2 JUST IN CASE   @DAMFB   01009000
         B     XXSET050           FREE THE LOCK AND EXIT       @DAMFB   01010000
         DROP  RF                 RELEASE XXDBGHDR BASE                 01011000
         SPACE 1                                                        01012000
XXCLRBUF XC    0(0,RA),0(RA)      CLEAR UNUSED BYTES IN BUFFER @D61MPAP 01013000
XXSETMVC MVC   0(0,RA),XXCHAIN    FILL DEBUG ENTRY             @D61MPAP 01014000
         SPACE 3                                                        01015000
XXSETPSW TM    SCNPSW,SMDAT      CAN WE TURN DAT BIT ON        @D61NDAP 01016000
         BZ    XXSETP40          NO,                           @D61NDAP 01017000
         IAC   RE                GET ACCESS MODE CONTROL       @D61NDAP 01018000
         BZ    XXSETP40          PRIMARY SPACE MODE            @D61NDAP 01019000
         BO    XXSETP20          HOME SPACE MODE               @D61NDAP 01020000
         BL    XXSETP30          SECONDARY SPACE MODE          @D61NDAP 01021000
         OI    TWDBGPSW+2,X'40'  ACCESS REGISTER MODE          @D61MPAP 01022000
         B     XXSETP40                                        @D61NDAP 01023000
XXSETP20 OI    TWDBGPSW+2,X'40'                                @D61MPAP 01024000
XXSETP30 OI    TWDBGPSW+2,X'80'                                @D61MPAP 01025000
.*       THE NEXT INSTRUCTION CLOBBERS R2                               01026000
XXSETP40 IPK   0                 GET PSW KEY (USES R2)         @D61NDAP 01027000
         STC   R2,TWDBGPSW+1     SET PSW KEY                   @D61MPAP 01028000
         L     R2,TWDBGSAV+8     RESTORE REGISTER 2            @D61MPAP 01029000
         MVC   XXOPSW(8),TWDBGPSW                              @D61MPAP 01030000
         BR    RC                     =======================> @D61NDAP 01031000
         EJECT ,                                               @D349DJO 01032000
*                                                              @D35EDJO 01033000
XX1      MVC   XXOPSW(8),ERA      NORMAL DISP ENTRY   EEEE0300 @D61MPAP 01034000
         L     R8,TCBPTR          GET TCB POINTER              @DA45092 01035000
         USING TCBADR,R8          TCB BASE POINTER             @DA45092 01036000
         L     R8,TCBSAVE         POINT TO SAVE AREA           @DA45092 01037000
         ST    R8,XXFIELD2        PROVIDE SAVE AREA ADDRESS    @DA45092 01038000
         DROP  R8                 RELEASE TCB BASE POINTER     @DA45092 01039000
         TM    XXOPSW+1,X'02'     IS THIS THE ALLBOUND         @D62NDAP 01040000
         BZ    XX1ALL             NO, PROCEED NORMAL           @D62NDAP 01041000
         MVC   XXFIELD1(6),XXCNALB INDICATE ALLBOUND           @D66CDAP 01042000
         XC    XXREG0(80),XXREG0  CLEAR OUTPUT AREA            @D62NDAP 01043000
         L     RC,ATIBATAB        ADDRESS OF TIBATAB           @D62NDAP 01044000
         L     R8,IJBCLIM         CLIM BASE ADDRESS            @D62NDAP 01045000
         USING CLIM,R8            CLIM BASE POINTER            @D62NDAP 01046000
         LH    RB,IJBHMTID        NUMBER OF PARTITIONS         @D62NDAP 01047000
         AH    RB,CATASK          NUMBER OF ACTIVE TASKS       @D62NDAP 01048000
         STC   RB,XXREG0          SAVE NUMBER OF TASKS ACTIVE  @D62NDAP 01049000
         LA    R8,80              MAXIMUM WE CAN HANDLE        @D62NDAP 01050000
         CLR   R8,RB              MORE TASK THAN WE CAN SHOW   @D62NDAP 01051000
         BNH   XX1A010            YES                          @D62NDAP 01052000
         LR    R8,RB              LIMIT TO ACTIVE TASKS        @D62NDAP 01053000
         DROP  R8                 RELEASE CLIM BASE            @D62NDAP 01054000
XX1A010  SLR   RB,RB              INITIALIZE TASK ID REG       @D62NDAP 01055000
XX1A020  LA    RC,4(,RC)          POINT TO NEXT TIB ENTRY      @D62NDAP 01056000
         LA    RB,1(,RB)          NEXT TASK ID VALUE           @D62NDAP 01057000
         ICM   RE,15,0(RC)        TIB POINTER                  @D62NDAP 01058000
         BZ    XX1A030            COM                          @D62NDAP 01059000
         USING TIBADR,RE          TIB BASE POINTER             @D62NDAP 01060000
         IC    RE,TIBRQID         GET TASK STATUS              @D62NDAP 01061000
         DROP  RE                 RELEASE TIB BASE             @D62NDAP 01062000
         LA    RA,XXREG0(RB)      GET DEBUG ENTRY LOCATION     @D62NDAP 01063000
         STC   RE,0(,RA)          SAVE TIBRQID IN ENTRY        @D62NDAP 01064000
XX1A030  BCT   R8,XX1A020         PROCESS NEXT TIB             @D62NDAP 01065000
         SLR   RB,RB              CLEAR OFFSET POINTER         @D62NDAP 01066000
         B     XXEXIT96                                        @D61NDAP 01067000
XXCNALB  DC    CL6'ALLBND'        CONSTANT                     @D66CDAP 01068000
XX1A     BAL   RC,XXSETPSW        ALLREGS     ENTRY   EEEE0200 @D61NDAP 01069000
XX1ALL   MVC   XXREG0(8),XXDBGSRE+8 USE ORIGINAL R0-R1         @D61MPAP 01070000
         MVC   XXREG2(48),TWDBGSAV+8 USE ORIGINAL R2-RD        @D61MPAP 01071000
         MVC   XXREGE(8),XXDBGSRE USE ORIGINAL   RE-RF         @D61MPAP 01072000
         TM    XXOPSW+2,X'40'     ACCESS REGISTER MODE         @D52VDAP 01073000
         BZ    XXEXIT96           NO,                          @D52VDAP 01074000
         LA    RB,96              SET ENTRY LENGTH             @D61NDAP 01075000
         BAL   RC,XXSETUP         MAKE G-REG ENTRY             @D52VDAP 01076000
         MVI   XXCHAIN+2,X'02'    MAKE IT AN ALLREGS ENTRY     @D52VDAP 01077000
         MVC   XXFIELD2(4),XX1ACNAC INDICATE ACCESS REGISTER   @D61NDAP 01078000
         STAM  0,15,XXREG0        SAVE ACCESS REGISTER         @D52VDAP 01079000
         SLR   RB,RB              CLEAR LENGTH POINTER         @D61NDAP 01080000
         B     XXEXIT96                                        @D52VDAP 01081000
XX1ACNAC DC    C'AREG'            ACCESS REGISTER ID           @D52VDAP 01082000
XXCNCREG DC    C'CREG'            CONTROL REGISTER ID          @D64XDAP 01083000
*                                                              @D35EDJO 01084000
XXINTRTN DS    0H'0'              I/O INTERRUPT ENTRY EEEE0400 @D61NDAP 01085000
         TM    IOOPSW+1,X'02'     WAS SYSTEM IN ALLBOUND STATE @D64XDAP 01087000
         BZ    XXINT000           NO,                          @D64XDAP 01088000
         OI    TWDBGFLG,XXNOCHK   PREVENT CONSISTENCY CHECK    @D64XDAP 01089000
XXINT000 TM    XXINTLST,X'80'     SELECTED TRACE WANTED        @D61NDAP 01091000
         BO    XXINT020           NO, USER WANTS IT ALL        @D61CDAP 01092000
         LA    RC,XXINTLST        IOLIST ADDRESS               @D61CDAP 01093000
XXINT010 TM    0(RC),X'80'        IS THIS END OF LIST          @D61CDAP 01094000
         BO    XXDBGEND           YES                          @D61CDAP 01095000
         CH    R3,0(RC)           MATCHING ADDRESS             @D61CDAP 01096000
         BE    XXINT020           YES                          @D61CDAP 01097000
         LA    RC,2(,RC)          ADVANCE TO NEXT ENTRY        @D61CDAP 01098000
         B     XXINT010                                        @D61CDAP 01099000
XXINT020 MVC   XXOPSW(8),IOOPSW   SAVE I/O OLD PSW             @D61MPAP 01100000
         MVC   XXFIELD2(4),FLOGA+16 SAVE SUBCHANNEL ID WORD    @DAOM083 01101000
         MVC   XXREG0(4),FLOGA+20 GET INTERRUPT PARAMETER      @DAOM083 01102000
         L     RC,IRB$            GET IRB ADDRESS              @D52VDAP 01103000
         MVC   XXREG1(16),0(RC)   SAVE THE IRB                 @D61NDAP 01104000
         MVC   XXREG5(4),IOINF    GET CUU ADDRESS              @D28ADAP 01105000
         MVC   XXREG6(8),CSW      SAVE CSW                     @D61NDAP 01106000
         B     XXEXIT64                                        @D61NDAP 01107000
         DC    CL8'INT-LIST'     EYE-CATCHER                   @D61NDAP 01108000
XXINTLST DC    32XL2'FFFF'       IO INTERRUPT SELECTION LIST   @D61CDAP 01109000
         DC    XL2'FFFF'         END INDICATOR                 @D61CDAP 01110000
*                                                              @D52VDAP 01111000
XXSIORTN DS    0H'0'             SIO ENTRY            EEEE0500 @D61NDAP 01112000
         TM    XXSIOLST,X'80'    SELECTIVE PROCESSING WANTED   @D61NDAP 01113000
         BO    XXSIO020          NO, USER WANTS IT ALL         @D61CDAP 01114000
         LA    RC,XXSIOLST       SSCH LIST ADDRESS             @D61CDAP 01115000
XXSIO010 TM    0(RC),X'80'       IS THIS END OF LIST           @D61CDAP 01116000
         BO    XXDBGEND          YES                           @D61CDAP 01117000
         CH    R3,0(RC)          MATCHING ADDRESS              @D61CDAP 01118000
         BE    XXSIO020          YES                           @D61CDAP 01119000
         LA    RC,2(,RC)         ADVANCE TO NEXT ENTRY         @D61CDAP 01120000
         B     XXSIO010                                        @D61CDAP 01121000
XXSIO020 BAL   RC,XXSETPSW       CONSTRUCT THE PSW             @D61NDAP 01122000
         MVC   XXFIELD2(4),XASUBSCH SAVE SUBCHANNEL ID WORD    @D61NDAP 01123000
         L     R2,ORB$           GET ORB ADDRESS               @D52VDAP 01124000
         USING ORB,R2            ORB BASE POINTER              @DAOM123 01125000
         MVC   XXREG0(12),0(R2)  OPERATION REQUEST BLOCK       @D52VDAP 01126000
         LR    RC,R4             COPY CHANQ ADDRESS            @D61NDAP 01127000
         ICM   RC,8,H0           CLEAR HIGH ORDER BYTE         @D61NDAP 01128000
         MVC   XXREG3(4),4(RC)   SAVE CHANQ INFO               @D61NDAP 01129000
         MVC   XXREG4(4),XXDBGSRE+12 SAVE CONTENTS OF R1       @D61MPAP 01130000
         MVC   XXREG5(12),TWDBGSAV+8 CONTENTS OF R2-R4         @D61MPAP 01131000
*HERE                                                                   01132000
           AIF   (NOT &VSE280).N280040                                  01133000
           TM    XXSIOLST,X'80'     SELECTIVE PROCESSING WANTED         01134000
           BO    XXEXIT64           NO, SKIP ANY DETAILS                01135000
           LA    RB,64              SET ENTRY LENGTH                    01136000
           BAL   RC,XXSETUP         MAKE SIO ENTRY                      01137000
           MVI   XXCHAIN+2,X'0C'    MAKE NEXT A USERDATA ENTRY          01138000
           MVC   XXFIELD2(4),XXCNCCW INDICATE CCW MAPPING               01139000
           XC    XXREG0(64),XXREG0  CLEAR BUFFER FIRST                  01140000
           SLR   RB,RB              CLEAR CCW COUNTER                   01141000
           SLR   RC,RC              CLEAR REGISTER                      01142000
           ICM   RC,7,CAW+1         GET CCW ADDRESS                     01143000
           STNSM SIOMSKSET+1,XFF-SMDAT SAVE SETTING/TURN DAT OFF        01144000
XXSIO030   LA    R4,4(RC)           FLAG BYTE POINTER                   01145000
           TM    ORBB1,ORBF         IS THIS A FORMAT-1 CCB              01146000
           BZ    XXSIO040           NO                                  01147000
           LA    R4,1(RC)           FLAG BYTE POINTER                   01148000
XXSIO040   MVC   XXREG0(8),0(RC)    PROVIDE CCW DATA                    01149000
           LA    RB,1(,RB)          UPDATE CCW COUNTER                  01150000
           C     RB,F8              DID WE REACH OUR LIMIT              01151000
           BNL   XXSIO200           YES,                                01152000
           TM    0(R4),CC+DC        ANY CHAINING                        01153000
           BZ    XXSIO200           NO, DO END PROCESSING               01154000
XXSIO050   LA    R9,8(,R9)          ADVANCE BUFFER POINTER              01155000
XXSIO060   LA    RC,8(RC)           ADVANCE CCW POINTER                 01156000
.*                                                                      01157000
.*         TIC COMMAND PROCESSING                                       01158000
.*                                                                      01159000
XXSIO100   TM    0(RC),TIC          IS THIS A TIC COMMAND               01160000
           BZ    XXSIO030           NO                                  01161000
           TM    0(RC),XFF-TIC      SURE ITS A TIC                      01162000
           BNZ   XXSIO030           NO, ITS NOT A TIC                   01163000
           MVC   XXREG0(8),0(RC)    SAVE TIC CCW                        01164000
           LA    R9,8(,R9)          ADVANCE BUFFER POINTER              01165000
           LA    RB,1(,RB)          UPDATE CCW COUNTER                  01166000
           C     RB,F8              DID WE REACH OUR LIMIT              01167000
           BNL   XXSIO200           YES, TERMINATE IT HERE              01168000
           ICM   R3,15,4(RC)        ASSUME FORMAT-1 FOR NOW             01169000
           TM    ORBB1,ORBF         IS THIS A FORMAT-1 CCB              01170000
           BO    XXSIO120           YES                                 01171000
           SLR   R3,R3              CLEAR REGISTER                      01172000
           ICM   R3,7,1(RC)         GET ADDRESS                         01173000
XXSIO120   CLR   R3,RC              DOES IT TIC BACK                    01174000
           BNL   XXSIO140           NO, FOLLOW THE TIC                  01175000
           CL    R3,ORBCCW          IS IT A TIC BACK IN CHAIN           01176000
           BNL   XXSIO060           YES, CHECK NEXT CCW                 01177000
XXSIO140   LR    RC,R3              COPY NEW ADDRESS                    01178000
           B     XXSIO030           PROCESS NEXT CCW                    01179000
           SPACE 1                                                      01180000
XXSIO200   SLL   RB,3               MULTIPLY WITH CCW LENGTH            01181000
           LA    RB,15(,RB)         PROVIDE FOR BOUNDARY PROC.          01182000
           SRL   RB,4               PROVIDE                             01183000
           SLL   RB,4               FOR 16-BYTE BOUNDARY                01184000
SIOMSKSET  STOSM SIOMASK,0          RESTORE DAT BIT AS IT WAS           01185000
           LA    R9,TWDEBUGS        ADDR. OF CPU SPEC. DEBUG   @D61MPAP 01186000
           B     XXEXIT32           TAKE EXIT                           01187000
           B     XXSIO050                                               01188000
           SPACE 1                                                      01189000
XXCNCCW    DC    C'CCW '            CONSTANT                            01190000
XXSIOFLG   DC    XL1'00'            FLAG BYTE                           01191000
SIOMASK    DC    XL1'00'            PSW MASK                            01192000
.N280040 ANOP                                                           01193000
*HERE                                                                   01194000
         B     XXEXIT64                                        @D52VDAP 01195000
         DROP  R2                 RELEASE ORB BASE                      01196000
         DC    CL8'SIO-LIST'     EYE CATCHER                   @D61NDAP 01197000
XXSIOLST DC    32XL2'FFFF'       SSCH         SELECTION LIST   @D61CDAP 01198000
         DC    XL2'FFFF'         END INDICATOR                 @D61CDAP 01199000
*                                                              @D35EDJO 01200000
XXEXFLDS DS    0H'0'                                                    01201000
         TM    EXOLDP+1,X'02'     WAS SYSTEM IN ALLBOUND STATE @D64XDAP 01203000
         BZ    XXEXF000           NO,                          @D64XDAP 01204000
         OI    TWDBGFLG,XXNOCHK   PREVENT CONSISTENCY CHECK    @D64XDAP 01205000
XXEXF000 MVC   XXOPSW(8),EXOLDP   EXTERNAL INTERRUPT  EEEE0600 @D61MPAP 01207000
         MVC   XXFIELD2(4),EXTINF SAVE INTERRUPT INFO          @D61NDAP 01208000
         XC    XXREG0(32),XXREG0  CLEAR AREA                   @D51IDOW 01209000
         CLI   EXTINTC,X'10'      IS IT A TIMER INTERRUPT      @D51IDOW 01210000
         BNE   XXEXFLD1           NO,                          @D51IDOW 01211000
         STCKC XXREG0             CLOCK COMPARATOR             @D35EDJO 01212000
         STPT  XXREG2             CPU TIMER                    @D35EDJO 01213000
         B     XXEXIT48                                        @D61MPAP 01214000
XXEXFLD1 CLI   EXTINTC,X'40'      IS IT A APPC/VMCF INT        @D51IDOW 01215000
         BNE   XXEXIT32           NO,                          @D61NDAP 01216000
         L     RA,AEXTIBFR        GET ADDR OF EXT INT BUFFER   @D51IDOW 01217000
         L     RA,0(,RA)          GET BUFFER ADDRESS           @D51IDOW 01218000
         MVC   XXREG0(28),0(RA)   EXT INTERRUPT BUFFER         @D51IDOW 01219000
         B     XXEXIT64                                        @D51IDOW 01220000
*                                                              @D35EDJO 01221000
         USING TIBADR,R8          TIB BASE POINTER             @D51IDOW 01222000
XXRATIB  L     RA,PCBPTR          CANCEL ENTRY        EEEE0900 @D51IDOW 01223000
         B     XXDISP1                                         @D51IDOW 01224000
         DROP  R8                 RELEASE TIB BASE             @D51GDAP 01225000
         SPACE 3                                                        01226000
         USING TIBADR,R8          TIB BASE POINTER             @D51IDOW 01227000
XXDISP   LR    RA,R5              DISPATCHER ENTRY    EEEE0700 @D51IDOW 01228000
         USING PCBADR,RA          PCB BASE POINTER                      01229000
XXDISP1  BAL   RC,XXSETPSW        CONSTRUCT THE PSW            @D61NDAP 01230000
         MVC   XXREG0(2),LTID     B-TRANSIENT OWNER            @D51IDOW 01231000
         MVC   XXREG0+2(2),PCELID PARTITION ID                 @D51IDOW 01232000
         LA    RC,ARTID           GET HIGHEST SYTEM TASK ID    @D66CDAP 01233000
         CH    RC,TID             IS THIS A SYSTEM TASK        @D66CDAP 01234000
         BL    XXDISP2            YES,                         @D66CDAP 01235000
         SLR   RC,RC              CLEAR REGISTER               @D14CDAP 01236000
         B     XXDISP3                                         @D66CDAP 01237000
XXDISP2  LH    RC,TID             GET SYSTEM TASK-ID           @D66CDAP 01238000
         SLL   RC,2               MULTIPLY WITH FOUR           @D66CDAP 01239000
XXDISP3  A     RC,AXXSYSTN        ADDRESS OF SYSTEM TASK NAME  @DAOM123 01240000
         MVC   XXREG1(4),0(RC)    SYSTEM TASK IDENTIFICATION   @D51IDOW 01241000
         ST    R8,XXREG2          TIB ADDR                     @D51IDOW 01242000
         MVC   XXREG3(4),TIBSCB   ACTIVE SCB POINTER           @D51IDOW 01243000
         MVC   XXREG4(2),TIBRTID                               @D51IDOW 01244000
         MVC   XXREG4+2(2),TIBRPIK                             @D51IDOW 01245000
         MVC   XXREG5(2),TIBRQPIK                              @D51IDOW 01246000
         MVC   XXREG5+2(1),TIBFLAG1                            @D51IDOW 01247000
         MVC   XXREG5+3(1),TIBFLAG                             @D51IDOW 01248000
         MVC   XXREG6(1),TIBFLAG2                              @D51IDOW 01249000
         MVC   XXREG6+1(1),TIBCNCL                             @D51IDOW 01250000
         MVC   XXREG6+2(1),TIBCNCL2                            @D51IDOW 01251000
         MVC   XXREG6+3(1),TIBCNCL3                            @D51IDOW 01252000
         MVC   XXREG7(1),TIBFLAG3                              @D51IDOW 01253000
         MVC   XXREG7+1(1),TIBDMFLG                            @D51IDOW 01254000
         MVC   XXREG7+2(1),PCEFLAG                             @D51IDOW 01255000
         MVC   XXREG7+3(1),PCEFLAG1                            @D51IDOW 01256000
         B     XXEXIT64                                        @D51IDOW 01257000
         DROP  R8                 RELEASE TIB BASE             @D51IDOW 01258000
         DROP  RA                 RELEASE PCB BASE             @D61NDAP 01259000
*                                                              @D35EDJO 01260000
XXSVFLDS OC    XXSVCLST,XXSVCLST  SELECTIVE SVC       EEEE0800 @DA44364 01261000
         BZ    XXSVF000           NO,                          @DA44364 01262000
         SLR   RF,RF              CLEAR REGISTER               @DA44364 01263000
         LR    RE,RF              CLEAR REGISTER               @DA44364 01264000
         IC    RF,SVCINF+3        GET INTERRUPTION CODE        @DA44364 01265000
         D     RE,F8              GET OFFSET IN SVC-LIST       @DA44364 01266000
         LA    RF,XXSVCLST(RF)    GET PROPER BYTE ADDRESS      @DA44364 01267000
         LA    RC,X'80'           GET MASK BYTE                @DA44364 01268000
         SRL   RC,0(RE)           SET BIT MASK                 @DA44364 01269000
         EX    RC,XXSVCXTM        TEST IF SVC IS WANTED        @DA44364 01270000
         BZ    XXDBGEND           NO, EXIT                     @DA44364 01271000
XXSVF000 MVC   XXOPSW(8),SVOLDP   SVC ENTRY                    @D61MPAP 01272000
         MVC   XXFIELD2(4),SVCINF INTERRUPT INFORMATION        @D61ADAP 01273000
         CLI   SVCINF+3,131       IS THIS A SIMSVC VSELIB      @D61NDAP 01274000
         BE    XXSVF010           YES,                         @D61NDAP 01275000
         CLI   SVCINF+3,132       IS THIS A SIMSVC MVSLIB      @D61NDAP 01276000
         BNE   XXSVF020           NO,                          @D61NDAP 01277000
XXSVF010 MVI   XXFIELD2+2,XFF     INDICATE INVALID             @D61NDAP 01278000
         L     RC,XXOPSW+4        GET PSW ADDRESS              @D61NDAP 01279000
         &LRA  RE,4(,RC)          IS ADDRESS IN STORAGE        @D41ADAP 01280490
         BNZ   XXSVF020           NO,                          @D61NDAP 01281000
         MVC   XXFIELD2+2(1),5(RC) GET MVS-SVC CODE            @D61NDAP 01282000
XXSVF020 MVC   XXREG0(12),XXDBGSRE+4 SAVE CONTENTS OF RF-R1    @D61MPAP 01283000
         MVC   XXREG3(4),TWDBGSAV+8 CONTENTS OF R2             @D61MPAP 01284000
         B     XXEXIT48                                        @D61NDAP 01285000
XXSVCXTM TM    0(RF),0            TEST FOR ACTIVE SVC          @DA44364 01286000
         DC    CL8'SVC-LIST'      EYE CATCHER                  @DA44364 01287000
XXSVCLST DC    XL32'00'           SVC SELECTION LIST           @DA44616 01288000
*                                                              @D35EDJO 01289000
XXERR1   DS    0H'0'              CANCEL ENTRY        EEEE0A00 @DY45789 01290000
         CLC   PGMINTC,PGMPPROT   WAS IT A  PROTECTION CHECK   @DY45789 01291000
         BNE   XXERR010           NO,                          @DY45789 01292000
         L     RC,CRADDR          GET COMREG ADDRESS           @DY45062 01293000
         USING COMREG,RC          COMREG BASE POINTER          @DY45062 01294000
         CLC   COMNAME(8),TCPIPNAM IS THIS A TCP/IP PARTITION  @DY45789 01295000
         BNE   XXERR010           NO                           @DY45789 01296000
         B     XXDBGEND           ASSUME CAUSED BY TCPIP       @DY45789 01297000
         DROP  RC                 RELEASE COMREG BASE          @DY45789 01298000
XXERR010 BAL   RC,XXSETPSW        REPARE PSW                   @D61NDAP 01299000
         L     RC,ALTA                                         @D14CDAP 01300000
         MVC   XXLTA(L8),0(RC)    MOVE NAME OF LOGICAL TR.ROUT.@D14CDAP 01301000
         L     RC,APTA                                         @D14CDAP 01302000
         MVC   XXPTA(L8),0(RC)    MOVE NAME OF ERP PHASE       @D14CDAP 01303000
         MVC   XXPTA+8(4),EEEE0000 SET LAST ENTRY INDICATOR    @D14CDAP 01304000
         B     XXEXIT48                                        @D61MPAP 01305000
TCPIPNAM DC    CL8'IPNET'         PROGRAM NAME OF TCPIP        @DY45789 01306000
PGMPPROT EQU   H4                                              @DY45789 01307000
*                                                              @D35EDJO 01308000
XXDSPLY  BAL   RC,XXSETPSW        DISPLAY ENTRY       EEEE0B00 @D61NDAP 01309000
         L     RC,XXUSAREA                                     @D36ZDOW 01310000
         MVC   XXREG0(16),0(RC)                                @D36ZDOW 01311000
         B     XXEXIT48                                        @D36ZDOW 01312000
*                                                                       01313000
XXUSEP0  DC    0H'0'              USER DATA ENTRY     EEEE0C00 @DY45383 01314000
         BAL   RC,XXSETPSW        USER DATA ENTRY              @D61NDAP 01315000
         L     RC,TWDBGSAV+60     GET LINK ADDRESS (RF)        @D61MPAP 01316000
         LA    RC,4(,RC)          SKIP DEBUG IDENTIFIER        @D61NDAP 01317000
XXUSEP10 LA    RC,4(,RC)          POINT TO PARAMETER           @D61NDAP 01318000
         ICM   RA,15,0(RC)        GET ADDRESS                  @D61NDAP 01319000
         &LRA  RE,0(,RA)          IS BEGIN ADDR. IN CORE       @D41ADAP 01320490
         BNE   XXUSEP30           NO,                          @D61NDAP 01321000
         &LRA  RE,15(,RA)         IS END ADDRESS IN CORE       @D41ADAP 01322490
         BNE   XXUSEP30           NO,                          @D61NDAP 01323000
         MVC   XXREG0(16),0(RA)   SAVE USERS DATA              @D61NDAP 01324000
         LA    R9,16(,R9)         ADVANCE DEBUG ENTRY POINTER  @D61NDAP 01325000
XXUSEP20 LTR   RA,RA              WAS THIS LAST ENTRY          @D61NDAP 01326000
         BM    XXUSEP40           YES,                         @D61NDAP 01327000
         LA    RB,16(,RB)         UPDATE LENGTH COUNTER        @D61NDAP 01328000
         B     XXUSEP10                                        @D61NDAP 01329000
XXUSEP30 MVC   XXREG0(L'XXUS0MSG),XXUS0MSG MOVE DEFAULT ENTRY  @D61NDAP 01330000
         B     XXUSEP20                                        @D61NDAP 01331000
XXUSEP40 LA    R9,TWDEBUGS        RESTORE R9                   @D61MPAP 01332000
         B     XXEXIT48           TAKE PROPER EXIT             @D61NDAP 01333000
XXUS0MSG DC    CL16'DATA NOT AVAIL. '                          @D61NDAP 01334000
*                                                                       01335000
.*                                                                      01336000
.* N O T E:                                                             01337000
.*                                                                      01338000
.*             THE FOLLOWING INSTRUCTIONS MUST STICK TOGETHER!          01339000
.*             IT IS ASSUMED THAT ON ENTRY  RB IS PRELOADED             01340000
.*             WITH  X'00000000'.                                       01341000
.*                                                                      01342000
XXEXIT96 LA    RB,16(,RB)         SET ENTRY LENGTH TO 96       @D61NDAP 01343000
XXEXIT80 LA    RB,16(,RB)         SET ENTRY LENGTH TO 80       @D14CDAP 01344000
XXEXIT64 LA    RB,16(,RB)         SET ENTRY LENGTH TO 64       @D14CDAP 01345000
XXEXIT48 LA    RB,16(,RB)         SET ENTRY LENGTH TO 48       @D14CDAP 01346000
XXEXIT32 LA    RB,16(,RB)         SET ENTRY LENGTH TO 32       @D14CDAP 01347000
XXEXIT16 LA    RB,16(,RB)         SET ENTRY LENGTH TO 16       @D61NDAP 01348000
         BAL   RC,XXSETUP         UPDATE WRAP AROUND POINTER   @D149DAP 01349000
.*                                                             @D14BDAP 01350000
.*  DO SOME VALIDITY CHECKING FOR EARLY DETECTION              @D36ZDOW 01351000
.*  OF SYSTEM INCONSISTENCY                                    @D36ZDOW 01352000
.*                                                             @D36ZDOW 01353000
XXDBGEND CLC   ARUNTIME,AALBPCB   IS SYSTEM IN ALLBOUND STATE  @D61MPAP 01354000
         BE    XXCHKEND           YES, SKIP CONSISTENCY CHECK  @D61MPAP 01355000
         TM    TWDBGFLG,XXNOCHK   PREVENT CONSISTENCY CHECK    @D61MPAP 01360000
         BO    XXCHKEND           YES                          @D61NDAP 01361000
         TM    XXESINFO,X'40'     CONSISTANCY CHECK REQUIRED   @D61NDAP 01362000
         BZ    XXCHKEND           NO                           @D61NDAP 01363000
         TM    SCNPSW,SMDAT       IS DAT ON                    @D61NDAP 01364000
         BZ    XXCHKEND           NO, ASSUME RE-IPL IN PROGRESS@D61NDAP 01365000
         L     RE,TDCPUPTR        CPU CONTROL BLOCK            @DA43757 01366000
         USING TCPUADR,RE         TCPUADR BASE POINTER         @DA43757 01367000
         TM    TCPFLAG4,TCPDISP   LOW CORE SET UP PROPERLY     @DA43757 01368000
         BO    XXCHKEND           NO, BYPASS THE CHECK         @D61NDAP 01369000
         L     RE,TIBPTR          GET CURRENT TIB POINTER      @D61MPAP 01370000
         USING TIBADR,RE          TIB BASE POINTER             @D61MPAP 01371000
         LH    RC,TID             GET TASK ID                  @D36ZDOW 01372000
         SLL   RC,2               MULTIPLY WITH FOUR           @D66ADAP 01373000
         A     RC,ATIBATAB        ADDRESS OF TIB ADDRESS       @D66ADAP 01374000
         BALR  RA,0               SAVE H/W ORIGIN              @D37ZDOW 01375000
         C     RE,0(RC)           TIB MATCHES TIBPTR           @D61MPAP 01376000
         BNE   XXCHST28           NO,                          @D37ZDOW 01377000
         BALR  RA,0               SAVE H/W ORIGIN              @D37ZDOW 01378000
         CLC   TCBPTR+1(3),TIBTCB+1 TCBPTR MATCHES TIBTCB      @D36ZDOW 01379000
         BNE   XXCHST28           NO                           @D37ZDOW 01380000
         BALR  RA,0               SAVE H/W ORIGIN              @D37ZDOW 01381000
         CLC   PCBPTR+1(3),TIBPCB+1 PCBPTR MATCHES TIBPCB      @D36ZDOW 01382000
         BNE   XXCHST28          NO,                           @D37ZDOW 01383000
         L     RB,PCBPTR         GET CURRENT PCB POINTER       @D14NDOW 01384000
         USING PCBADR,RB         PCB BASE POINTER              @D14NDOW 01385000
         L     RC,PCBASCB        ADDRESS OF SCB                @D14NDOW 01386000
         LTR   RC,RC             SCBPTR IN PCB                 @D14NDOW 01387000
         BNZ   XXNOS010          YES, CHECK IF PRIVAT          @D14NDOW 01388000
         LA    RA,ARTID          HIGHEST SYSTEM TASK.ID        @D66CDAP 01389000
         CH    RA,TID            SYSTEM TASK ACTIVE            @D66CDAP 01390000
         BNL   XXNOS030          YES,                          @D66CDAP 01391000
         CLI   RID+1,USERTID     USER ROUTINE ACTIVE           @D14NDOW 01392000
         BNE   XXNOS030          NO, THEN SKIP THE TEST        @D14NDOW 01393000
XXNOS010 L     RE,TIBSCB         GET CURRENT SCB POINTER       @D61MPAP 01394000
         USING SCBADR,RE         SCB BASE POINTER              @D61MPAP 01395000
         LTR   RE,RE             SHARED SPACE                  @D61MPAP 01396000
         BNZ   XXNOS020          NO,                           @D61NDRP 01397000
         L     RE,SCBPTR         GET SCB ADDRESS FROM LOW CORE @D61MPAP 01398000
         TM    SCBFLG,SCBSHA     IS IT SCB FOR SHARED AREA     @D61NDRP 01399000
         BO    XXNOS030          YES, ALL O.K.                 @D61NDRP 01400000
         BAL   RA,XXCHST28       NO, ENTER HARD WAIT           @D61NDRP 01401000
XXNOS020 C     RE,SCBPTR         COMPARE TO SCB                @D61MPAP 01402000
         BE    XXNOS030          POINTERS DO MATCH             @D52VDAP 01403000
         BALR  RA,0                                            @D14NDOW 01404000
         TM    SCBFLG,SCBPMRSP   IS THIS PMR SPACE             @D52VDAP 01405000
         BZ    XXCHST28          NO, ERROR                     @D52VDAP 01406000
         LTR   RC,RC             IS THIS SHARED SPACE          @D52VDAP 01407000
         BZ    XXNOS030          YES,                          @D52VDAP 01408000
         BALR  RA,0                                            @D14NDOW 01409000
         C     RC,SCBPTR         POINTERS MATCH                @D52VDAP 01410000
         BNE   XXCHST28          NO,                           @D14NDOW 01411000
XXNOS030 EQU  *                                                @D61MPAP 01412000
         CLI   TWDBGTYP+3,X'07'  TASK SELECTION ENTRY          @DY46299 01412300
         BE    XXCHKEND          YES, SKIP SPACE TESTS         @DY46299 01412600
         L     RE,SCBPTR         GET SCB ADDRESS               @D61MPAP 01413000
         STCTL CRD,CRD,TWDBGCRD  IS SPACE SET UP CORRECTLY     @DA44364 01415000
         BALR  RA,0                                            @DA44364 01416000
         CLC   TWDBGCRD,SCBRSTO  IS SPACE SET UP CORRECTLY     @DA44364 01417000
         BNE   XXCHST28                                        @D61MPAP 01424000
         DROP  RE                RELEASE SCB BASE              @D52VDAP 01425000
         L     RE,PIBPTR2        GET CURRENT PIB EXTENSION PTR @D61MPAP 01426000
         USING PIB2ADR,RE        ESTABLISH ADDRESSABILITY      @D61MPAP 01427000
         BALR  RA,0                                            @D37ZDOW 01428000
         CLC   PIK,PIBPIK        MATCHING PIK                  @D36ZDOW 01429000
         BNE   XXCHST32          NO,                           @D37ZDOW 01430000
         LH    RC,PIK            GET PIK OF SERVICE OWNER      @D51IDOW 01431000
         SRL   RC,2              DISPLACEMENT INTO PCB TABLE   @D51IDOW 01432000
         A     RC,APCBATAB       ADDR(PCB ADDR)                @D51IDOW 01433000
         L     RB,0(,RC)         PCB ADDR OF SERVICE OWNER     @D51IDOW 01434000
         BALR  RA,0                                            @D37ZDOW 01435000
         CLC   CRADDR(4),PCECOMRA CHECK COMREG ADDR            @D51IDOW 01436000
         DROP  RE                RELEASE PIB BASE              @D51IDOW 01437000
         BNE   XXCHST32                                        @D37ZDOW 01438000
         BALR  RA,0                                            @D37ZDOW 01439000
         CLC   X'10'(4),XXACVT   CHECK CVT ADDRESS             @DA44311 01440000
         BNE   XXCHST32                                        @DA44311 01441000
         CLI   TWDBGTYP+3,X'03'  IS IT A DISP ENTRY            @DY45385 01442000
         BNE   XXCHKEND          NO, SKIP THE TEST             @DA45092 01443000
         LA    RE,ARTID          HIGHEST SYSTEM TASK-ID        @D66CDAP 01444000
         CH    RE,TID            SYSTEM TASK ACTIVE            @D66CDAP 01445000
         BNH   XXCHKEND          YES, SKIP THE TEST            @DA45092 01446000
         L     RE,TWDBGCRD       SAVE CRD FOR LATER USE        @DA45092 01448000
         STCTL CR1,CR1,TWDBGCRD  SAVE CR1                      @DA45092 01449000
         C     RE,TWDBGCRD       ARE WE IN CROSS MEMORY MODE   @DA45092 01450000
         BNE   XXCHKEND          YES, SKIP THE TEST            @DA45092 01451000
         L     RE,PCBPSCB        ALLOCATED SCB                 @DA45092 01453000
         C     RE,SCBPTR         WAS THERE A SPACE SWITCH      @DA45092 01454000
         BNE   XXCHKEND          YES, SKIP THE TEST            @DA45092 01455000
         DROP  RB                RELEASE PCB BASE              @DA45092 01456000
         L     RE,CRADDR         GET COMREG ADDRESS            @DA45062 01457000
         USING COMREG,RE         COMREG BASE POINTER           @DA45062 01458000
         TM    OPTNBYTE,ANCHTBIT DOES CONTROL INFORMATION EXIST@DA45062 01459000
         BZ    XXCHCICS          NO,                           @DA45062 01460000
         TM    IJBMSWB1,IJBCIINC ALLOC-/DEALLOCATION ONGOING   @DA45092 01461000
         BO    XXCHCICS          YES, SKIP THE TEST            @DA45092 01462000
         TM    SUPVFLAG,MPACT    MP-PROCESSING ONGOING         @DAOM    01463000
         BZ    XXNOS035          NO,                           @DAOM    01464000
         L     RB,TDCPUPTR       ADDRESS OF CPU CONTROL BLOCK  @DAOM    01465000
         USING TCPUADR,RB        CPUADR BASE                   @DAOM    01466000
         TM    TCPFLAG1,TDCNPA   NP CODE ACTIVE                @DAOM    01467000
         BZ    XXNOS050          NO,                           @DAOM    01468000
         DROP  RB                RELEASE TCPUADR BASE          @DAOM    01469000
XXNOS035 ICM   RB,15,IJBGVCTL    GET GETVIS CONTROL INFO       @DA45062 01470000
         BZ    XXNOS050          VERY STRANGE                  @D63IDAP 01471000
         DROP  RE                RELEASE COMREG BASE           @D41ADAP 01471500
         BALR  RA,0                                            @DA45062 01472000
         &LRA  RE,0(RB)          IS ADDRESS IN STORAGE         @D41ADAP 01473490
         BH    XXNOS050          NO,                           @DY45383 01474000
         BC    5,XXCHST32        IN ERROR                      @DY45383 01475000
         BALR  RA,0                                            @DA45062 01476000
         OC    4(4,RB),4(RB)     VALID BACKWARD POINTER        @DA45062 01477000
         BNZ   XXCHST32          GETVIS CONTROL AREA OVERLAYED @DA45062 01478000
XXNOS040 ICM   RC,15,0(RB)       GET FORWARD POINTER           @DA45062 01479000
         BZ    XXNOS050          WE ARE DONE                   @DA45062 01480000
         BALR  RA,0                                            @DA45062 01481000
         &LRA  RE,0(RC)          IS ADDRESS IN STORAGE         @D41ADAP 01482490
         BH    XXNOS050          NO,                           @DY45383 01483000
         BC    5,XXCHST32        IN ERROR                      @DY45383 01484000
         L     R5,4(,RC)         GET ITS BACKWARD POINTER      @DY45385 01485000
         BALR  RA,0                                            @DA45062 01486000
         CLR   R5,RB             DOES IT POINT TO PREVIOUS AREA@DY45385 01487000
         BNE   XXCHST32          NO, CONTROL AREA OVERLAYED    @DA45062 01488000
         LR    RB,RC             GET NEXT CNTL INFO HEADER     @DA45062 01489000
         B     XXNOS040          CHECK NEXT ENTRY              @DA45062 01490000
XXNOS050 DC    0H'0'                                           @D63IDAP 01491000
         B     XXCHCICS          NO,                           @D63IDAP 01492000
XXCHST28 MVI   IJBHWORG,HWORG028 UNIQUE HARD WAIT ORIGINATOR   @D31QDHB 01493000
         B     XXCHSTOP                                        @D51GDAP 01494000
XXCHST32 MVI   IJBHWORG,HWORG032 UNIQUE HARD WAIT ORIGINATOR   @D31QDHB 01495000
XXCHSTOP LR    R5,RA             PROVIDE SYSERROR DATA         @D51GDAP 01496590
         LA    RA,SYSERROR       SYSERROR EXIT ADDRESS         @D61MPAP 01497180
         ST    RA,TWDBGRET       SET PROPER EXIT ADDRESS       @D61MPAP 01498000
         MVC   XXCHAIN(4),EEEE0000 SET ENTRY IDENTIFIER        @D61MPAP 01499000
         MVC   XXOPSW(4),EEEE0000 INDICATE DEBUG ENTRY         @D71MPAP 01500000
         ST    R5,XXOPSW+4       SAVE ORIGIN ADDRESS           @D61MDAP 01501000
         MVC   XXREG0(8),XXDBGSRE+8 USER REGISTERS 0-1         @D61MPAP 01502000
         MVC   XXREG2(48),TWDBGSAV+8 USER REGISTERS 2-D        @D61MPAP 01503000
         MVC   XXREGE(8),XXDBGSRE   USER REGISTERS E-F         @D61MPAP 01504000
         OI    TWDBGFLG,XXNOCHK  PREVENT COMING HERE AGAIN     @D61MPAP 01505000
         SLR   RB,RB             SET LENGTH POINTER            @D61MPAP 01506000
         B     XXEXIT96                                        @D36ZDFR 01507000
         SPACE 1                                                        01508000
XXCHCICS DS    0H'0'             SPECIAL PROCESSING FOR CICS            01509000
         AGO   .SKIP020                                                 01510990
         B     XXCHKEND                                                 01512000
         L     RE,CRADDR         GET COMREG ADDRESS            @DA45062 01512300
         USING COMREG,RE         COMREG BASE POINTER           @DA45062 01512600
         ICM   RE,15,IJBAFCB     IS CICS ACTIVE                         01513000
         BZ    XXCHKEND          NO,  =======================>          01514000
         DROP  RE                RELEASE COMREG BASE                    01515000
         L     RE,8(,RE)         ADDRESS OF CSA                         01516000
         LA    RC,X'9C'(RE)      END OF SUSPEND DCAS                    01517000
         L     RF,X'AC'(RE)      ADDRESSES SUSPEND DCAS                 01518000
         BAL   RA,DCALOOP        CHECK ALL SUSPEND DCAS                 01519000
DCAACTIV LA    RC,X'A4'(RE)      END OF ACTIVE DCAS                     01520000
         L     RF,X'B4'(RE)      ADDRESSES ACTIVE DCAS                  01521000
         BAL   RA,DCALOOP        CHECK ALL ACTIVE DCAS                  01522000
         B     XXCHKEND                                                 01523000
DCALOOP  LA    RF,0(,RF)         GET FIRST/NEXT DCA ADDRESS             01524000
         CR    RF,RC             WAS THIS THE LAST ONE                  01525000
         BER   RA                YES, RETURN                            01526000
         BAL   R9,CHECKTCA       CHECK THE TCA NOW                      01527000
         L     RF,X'10'(RF)      GET NEXT LOW PRIORITY DCA              01528000
         B     DCALOOP           GET NEXT DCA ADDRESS                   01529000
CHECKTCA TM    X'36'(RF),X'80'   DOES DCA HAVE A TCA YET                01530000
         BNOR  R9                NO,                                    01531000
         ICM   R8,15,X'14'(RF)   DOES TCA EXIST                         01532000
         BZR   R9                NO                                     01533000
         L     R8,0(R8)          ADDRESS OF SYSTEM TCA                  01534000
         ICM   R7,15,X'7C'(R8)   DOES EIS EXIST                         01535000
         BNZR  R9                YES, CHECK NEXT TCA                    01536000
         ICM   R7,15,X'90'(R8)   ACC.STACK RTN FOR MACRO ENVNMT         01537000
         BNZR  R9                YES, CHECK NEXT TCA                    01538000
         BAL   RA,XXCHST32       CONTROL BLOCK OVERLAY                  01539000
         DC    C'DCA-OVLY'       DCA OVERLAID                           01540000
         SPACE 1                                                        01541000
.SKIP020 ANOP                                                           01542490
XXCHKEND DC    0H'0'             GENERAL DEBUG EXIT            @D61MPAP 01543000
         L     RC,TWDBGRET       RESTORE RETURN ADDRESS        @D61MPAP 01544000
         BR    RC                      ====================>>> @D61NDAP 01545000
         DROP  R9                RELEASE TWDBGADR BASE         @D61MPAP 01546000
XXACVT   DC    A(CVTMAP)         ADDRESS OF CVT MAP            @DA44311 01547000
EEEE0000 DC    X'EEEE0000'                                     @D35EDJO 01548000
SEC00000 DC    X'E2C5C340'                                     @D35EDJO 01549000
XXMAXLNG EQU   96        MAX.LENGTH OF A DEBUG ENTRY+16        @D36ZDFR 01550000
XXMAX    DC    A(XXMAXLNG) MAXIMUM DEBUG ENTRY LENGTH          @D61NDAP 01551000
*                                                              @D36ZDOW 01552000
PROGCHK  EQU   X'0000'   PROGRAM CHECK INFORMATION             @D61COAP 01553000
ALLREGS  EQU   X'0002'   SAVE GENERAL REGISTERS                @D14CDAP 01554000
ERAPSW   EQU   X'0003'   TASK SAVE AREA                        @D14CDAP 01555000
IOFIELDS EQU   X'0004'   I/O INTERRUPT INFORMATION             @D14CDAP 01556000
SIOFLDS  EQU   X'0005'   TCH AND SIO INFORMATION               @D14CDAP 01557000
EXFIELDS EQU   X'0006'   EXTERNAL INTERRUPT INFORMATION        @D14CDAP 01558000
DISPFLDS EQU   X'0007'   TASK SELECTION FIELDS                 @D14CDAP 01559000
SVFIELDS EQU   X'0008'   SVC INTERRUPT INFORMATION             @D14CDAP 01560000
RATIB    EQU   X'0009'   CANCEL INFORMATION                    @D14CDAP 01561000
XXDUMPNR EQU   X'000A'   SWITCH DEBUG AREA DUE TO DUMP         @D14CDAP 01562000
DSPLYDAT EQU   X'000B'   USER SPECIFIED INFORMATION            @D14CDAP 01563000
DSPLYUS0 EQU   X'000C'   DISPLAY 32 BYTES OF DATA              @D52VDAP 01564000
*        EQU   X'000D'   RESERVED                              @D52VDAP 01565000
*        EQU   X'000E'   RESERVED                              @D52VDAP 01566000
XXMCMAX  EQU   X'000F'   HIGHEST CALL NUMBER                   @D14CDAP 01567000
*                                                                       01568000
XXMAXCAL DC    A(XXMCMAX)                                               01569000
XXADRTAB DC    A(XXPCKRTN)          00                         @D61NDAP 01570000
         DC    A(XXDBGEND)          01                         @D61NDAP 01571000
         DC    A(XX1A)              02                         @D61NDAP 01572000
         DC    A(XX1)               03                         @D61NDAP 01573000
         DC    A(XXINTRTN)          04                         @D61NDAP 01574000
         DC    A(XXSIORTN)          05                         @D61NDAP 01575000
         DC    A(XXEXFLDS)          06                         @D61NDAP 01576000
         DC    A(XXDISP)            07                         @D61NDAP 01577000
         DC    A(XXSVFLDS)          08                         @D61NDAP 01578000
         DC    A(XXRATIB)           09                         @D61NDAP 01579000
         DC    A(XXERR1)            0A                         @D61NDAP 01580000
         DC    A(XXDSPLY)           0B                         @D61NDAP 01581000
         DC    A(XXUSEP0)           0C                         @D61NDAP 01582000
         DC    A(XXUSEP0)           0D                         @D61NDAP 01583000
         DC    A(XXUSEP0)           0E                         @D61NDAP 01584000
XXEND    DC    A(XXMCANY)           MAX CALL NUMBER                     01585000
*                                                                       01586000
.*                                                             @D61NDAP 01587000
.*       NORMAL PROGRAM CHECK PROCESSING                       @D61NDAP 01588000
.*                                                             @D61NDAP 01589000
         USING TWDBGADR,R9           TWDBGADR BASE             @D61MPAP 01590000
         USING XXMCANY,RC            XXMCANY BASE POINTER      @D41ADAP 01590500
XXMCANY  TM    XXESINFO+1,X'01'      MC ENTRY         EEEE0FNN @D61NDAP 01591000
         BZ    XXDBGEND              NO                        @D61NDAP 01592000
         MVI   XXCHAIN+2,X0F                                   @D61MPAP 01593000
         MVC   XXCHAIN+3,MONCLASS+1  M.C. CLASS                @D61MPAP 01594000
         B     XXEXIT32              MAKE ENTRY AND RETURN     @D61NDAP 01595000
         DROP  RC                    RELEASE XXMCANY BASE      @D41ADAP 01595500
         SPACE 3                                               @D61CDAP 01596000
         USING XXPCKRTN,RC           XXPCKRTN BASE POINTER     @D41ADAP 01596500
XXPCKRTN MVC   XXOPSW(8),PCOPSW      SET PC-OLD PSW            @D61NDAP 01597000
         MVC   XXFIELD2(4),PGMINF    SAVE INTERRUPT INFO       @D61NDAP 01598000
         CLI   PGMINTC+1,X'40'       IS THIS A MONITOR CALL    @D61NDAP 01599000
         BE    XXMCANY               YES,                      @D61NDAP 01600000
         CLI   PGMINTC+1,X'C0'       MONITOR CALL+PER          @D61NDAP 01601000
         BE    XXMCANY               YES,                      @D61NDAP 01602000
         AGO   .NOPP080                                                 01603490
         L     RE,ADBGPPPR           GET PAGE PROTECTION ADDR. @D63XXAP 01604000
         USING DBGPP000,RE           PAGE PROTECT BASE         @D63XXAP 01605000
         MVC   DBGPPPCO(8),PCOPSW    SAVE PC OLD PSW           @D63XXAP 01606000
         MVC   DBGPPPCI(8),PGMINF    SAVE INTERRUPT INFO       @D63XXAP 01607000
.NOPP080 ANOP                                                           01608490
         TM    XXESINFO,X'80'        PROG. CHECKS TO BE TRACED @D52VDAP 01609000
         BZ    XXDBGEND              NO,                       @D52VDAP 01610000
         MVC   XXCHAIN+2(2),PGMINTC  SAVE INTERRUPTION CODE    @D61MPAP 01611000
         MVC   XXREG0(8),XXDBGSRE+8  SAVE USERS REGISTER 0-1   @D61MPAP 01612000
         MVC   XXREG2(28),TWDBGSAV+8 SAVE USER REGISTERS 2-8   @D61MPAP 01613000
         MVC   XXREG9(20),XXERA      SAVE USERS REGISTER 9-D   @D61NDAP 01614000
         MVC   XXREGE(8),XXDBGSRE    SAVE USERS REGISTER E-F   @D61NDAP 01615000
         CLC   XXOPSW+4(4),DBGLOWAD  IS THIS MY OWN ROUTINE    @D61NDAP 01616000
         BL    XXPCK010              NO,                       @D61NDAP 01617000
         CLC   XXOPSW+4(4),DBGHIGAD  IS THIS MY OWN ROUTINE    @D61NDAP 01618000
         BH    XXPCK010              NO,                       @D61NDAP 01619000
         CL    RD,DBGLOWAD           CORRECT BASE POINTER      @DA43858 01620000
         BNE   XXPCK010              NO, ASSUME WRONG BRANCH   @DA43858 01621000
         BAL   R5,SYSERROR           YES,                      @D61NDAP 01622000
XXPCK010 CLI   PGMINTC+1,X'10'       SEGMENT TRANSLATION       @D52VDAP 01623000
         BE    XXPCK020              YES,                      @D52VDAP 01624000
         CLI   PGMINTC+1,X'90'       SEGMENT TRANSLATION+PER   @D61NDAP 01625000
         BE    XXPCK020              YES,                      @D61NDAP 01626000
         CLI   PGMINTC+1,X'11'       PAGE FAULT                @D52VDAP 01627000
         BE    XXPCK020              YES,                      @D52VDAP 01628000
         CLI   PGMINTC+1,X'91'       PAGE FAULT+PER            @D61NDAP 01629000
         BE    XXPCK020              YES,                      @D61NDAP 01630000
         CLI   PGMINTC+1,X'14'       PSEUDO PAGE FAULT         @D52VDAP 01631000
         BE    XXPCK020              YES,                      @D61NDAP 01632000
         CLI   PGMINTC+1,X'94'       PSEUDO PAGE FAULT+PER     @D61NDAP 01633000
         BNE   XXPCK030              NO,                       @D52VDAP 01634000
XXPCK020 MVC   XXREG0(4),TRADDR      PROVIDE PROBLEM ADDRESS   @D52VDAP 01635000
XXPCK030 B     XXEXIT96                                        @D35EDJO 01636000
         DROP  RC                    RELEASE XXPCKADR BASE     @D41ADAP 01637990
         SPACE 2                                               @D61NDAP 01640000
DBGLOWAD DC    A(DEBUGFUL+X'80000000') LOW DEBUG ADDRESS       @D61NDAP 01641000
DBGHIGAD DC    A(*+X'80000000')      HIGH SGDEBUG ADDRESS      @D61NDAP 01642000
         DROP  R9                    RELEASE TWDBGADR BASE     @D61MPAP 01643000
         EJECT ,                                               @D62NDAP 01644000
         USING TWDBGADR,R9           DEBUG BUILD AREA BASE     @DA44993 01645000
         USING DBGSECPR,RE           SECURITY TRACE PROCESSING @D41ADAP 01645500
         USING XXESINFO,RF           DEBUG TRACE INFO BASE     @DA44993 01646000
DBGSECPR DS    0H'0'                                           @DA44993 01647000
         TM    XXESIESE,XXESDOSM     SEC    TRACE ACTIVE       @DA44993 01648000
         BZ    DEBUGEXT              NO,  ===================> @DA44993 01649000
         DROP  RF                    RELEASE XXESINFO BASE     @DA44993 01650490
         ICM   RF,15,XXSECBUF        SECURITY TRACE ACTIVE     @DA44993 01651000
         BZ    DEBUGEXT              NO,  ===================> @DA44993 01652000
         USING SECHDMAP,RF           HEADER BLOCK BASE POINTER @DA44993 01653000
DBGSEC00 STCK  TWDBGTOD              STORE NEW CLOCK           @DA44993 01656000
         MVC   XXCHAIN(4),SEC00000   SET ENTRY IDENTIFIER      @DA44993 01657000
         MVC   XXTID,TID             SAVE TASK ID              @D66CDAP 01658000
         MVC   XXRID(1),RID+1        SAVE RID                  @DA44993 01659000
         L     RB,TDCPUPTR           ADDRESS OF TCPU CONTR.BLK @DA44993 01660000
         MVC   XXCPUST,TCPFLAG1-TCPUADR(RB) GET CPU STATE INFO @DA44993 01661000
         MVC   XXSTAMP(8),TWDBGTOD   SET TIME STAMP            @DA44993 01662000
         MVC   XXCPUID,TCPUID-TCPUADR(RB) SET CPUID            @D66CDAP 01663000
         XC    XXFIELD1(6),XXFIELD1  CLEAR RESERVED INFO       @D66CDAP 01664000
         MVC   TWDBGPSW,SVOLDP       SECURITY ENTRY PSW        @DA44993 01665000
         CH    RC,H1                 ENTERED FROM DISP         @DA44993 01666000
         BNE   DEBUGEXT              NO,  ===================> @DA44993 01667000
         L     RC,XXDBGSRE+8         GET LENGTH OF DATA        @DA44993 01668000
         L     RA,XXDBGSRE+12        GET ADDRESS OF PFIXED AREA@DA44993 01669000
         LA    RC,15(,RC)            FORCE HIGH MULTIPLE OF 16 @DA44993 01670000
         SRL   RC,4                  RESET UNUSED BITS         @DA44993 01671000
         CH    RC,H6                 MORE THAN SIX  LINES      @DA44993 01672000
         BNH   DBGSEC10              NO, THATS OK              @DA44993 01673000
         LA    RC,6                  LIMIT TO SIX  LINES       @DA44993 01674000
DBGSEC10 SLL   RC,4                  MULTIPLE OF 16            @DA44993 01675000
         BCTR  RC,0                  ADJUST FOR EXECUTE        @DA44993 01676000
         TM    SUPVFLAG,MPACT        MP-PROCESSING ONGOING     @DAOM    01677000
         BZ    DBGSEC15              NO,                       @DAOM    01678000
         L     RB,TDCPUPTR           GET ADDR OF CPU CB        @DAOM    01679000
         USING TCPUADR,RB                                      @DAOM    01680000
         TM    TCPFLAG1,TDCNPA       NP CODE ACTIVE            @DAOM    01681000
         BZ    DEBUGEXT              YES, SKIP REQUESTING IT   @DAOM    01682000
         DROP  RB                                              @DAOM    01683000
DBGSEC15 &LRA  RB,0(,RA)             IS THIS A REAL ADDRESS    @D41ADAP 01684490
         BNE   DEBUGEXT              NO, CAN'T ACCESS DATA     @DA44993 01685000
         LA    RB,0(RA,RC)           LAST BYTE ADDRESS         @DA44993 01686000
         &LRA  RB,0(RB)              IS END ADDRESS IN CORE    @D41ADAP 01687490
         BNE   DEBUGEXT              NO,                       @DA44993 01688000
         L     RA,SECCURR            NEXT ENTRY ADDRESS        @DA44993 01689000
DBGSEC20 LA    RA,0(,RA)             RESET HIGH ORDER BIT      @DA44993 01690000
         LR    R8,RA                 COPY SEC-AREA HEADER ADDR @DA44993 01691000
         O     RA,BIT0OMSK           SET IN USE BIT            @DA44993 01692000
         CS    R8,RA,SECCURR         IS AREA BEING UPDATED     @DA44993 01693000
         BNZ   DBGSEC20              YES, TRY AGAIN            @DA44993 01694000
         L     RA,XXDBGSRE+12        GET ADDRESS OF PFIXED AREA@DA44993 01695000
         MVC   0(32,R8),XXCHAIN      COPY COMMON PART          @DA44993 01696000
         DROP  R9                    RELEASE TWDBGADR BASE     @DA44993 01697000
         USING XXCHAIN,R8            USER DATA BASE POINTER    @DA44993 01698000
         EX    RC,DBGSECEX           MOVE DATA TO BUFFER       @DA44993 01699000
         LA    RB,32+1(,RC)          TOTAL   ENTRY LENGTH      @DA44993 01700000
         LA    R8,0(R8,RB)           NEXT ENTRY ADDRESS        @DA44993 01701000
         C     R8,SECLAST            END OF AREA REACHED       @DA44993 01702000
         BNH   DBGSEC50              NO,                       @DA44993 01703000
         LR    RB,R8                 COPY NEXT ENTRY ADDRESS   @DA44993 01704000
         S     RB,SECLAST            BYTES IN LAST ENTRY       @DA44993 01705000
         LNR   RB,RB                 PROVIDE FOR SUBTRACTION   @DA44993 01706000
         A     RB,F128               BYTES TO BE CLEARED       @DA44993 01707000
         LTR   RB,RB                 ANY BYTES TO CLEAR        @DA44993 01708000
         BNP   DBGSEC40              NO,                       @DA44993 01709000
         LR    RA,R8                 TO BE CLEARED AREA IN RA  @DY46447 01709500
         BCTR  RB,0                  SUBTRACT 1 FOR EXECUTE    @DA44993 01710000
         EX    RB,XXCLRBUF           CLEAR UNUSED BYTES        @DA44993 01711000
DBGSEC40 L     R8,XXSECBUF           SEC-AREA HEADER ADDRESS   @DA44993 01712000
         LA    R8,16(,R8)            FIRST ENTRY ADDRESS       @DA44993 01713000
DBGSEC50 ST    R8,SECCURR                                      @DA44993 01714000
         B     DEBUGEXT                   ===================> @DA44993 01715000
         DROP  RF                    RELEASE SECHDMAP BASE     @DA44993 01716000
         SPACE 1                                               @DA44993 01717000
DBGSECEX MVC   XXREG0(0),0(RA)       SAVE USERS DATA           @DA44993 01718000
         SPACE 1                                               @DA44993 01719000
         DROP  R8                    RELEASE TWDBGADR BASE     @DA44993 01720000
         DROP  RE                    RELEASE DBGSECPR BASE     @D41ADAP 01721490
SECHDMAP DSECT                                                 @DA44993 01722000
SECCURR  DS    F                     NEXT ENTRY ADDRESS        @DA44993 01723000
SECNEXT  DS    F                     NEXT AREA ADDRESS         @DA44993 01724000
SECLAST  DS    F                     LAST ENTRY ADDRESS        @DA44993 01725000
SECPREV  DS    F                     PREVIOUS AREA ADDRESS     @DA44993 01726000
         EJECT ,                                               @D61NDAP 01728000
XCKTRMAP DSECT                                                 @D66CDAP 01729000
XCKUTID  DS    XL2                   OWNERS TASK-ID            @D66CDAP 01730000
XCKTID   DS    XL2                   RUNNING TASK-ID           @D66CDAP 01731000
XCKPARM  DS    X                     FUNCTION CODE             @D66CDAP 01732000
XCKRC    DS    X                     RETURN CODE               @D66CDAP 01733000
         DS    XL2                   RESERVED                  @D66CDAP 01734000
XCKDTL   DS    XL4                   USERS DTL ADDRESS         @D66CDAP 01735000
XCKDTLF1 DS    X                     USERS DTL-FLAG1           @D66CDAP 01736000
XCKDTLF2 DS    X                     USERS DTL FLAG2           @D66CDAP 01737000
XCKSERVF DS    X                     LOCK MGR. SERVICE FLAG    @D61NDAP 01738000
         DS    X                     RESERVED                  @D66CDAP 01739000
XCKOWNER DS    XL2                   TID OF RESOURCE OWNER     @D61NDAP 01740000
         DS    XL2                   RESERVED                  @D66CDAP 01741000
XCKOWORK DS    X                     USED INTERNALLY           @D61NDAP 01742000
XCKREQ   DS    X                     USED INTERNALLY           @D61NDAP 01743000
XCKUNLFL DS    X                     INTERNAL PROCESSING FLAG  @D61NDAP 01744000
XCKDSHFL DS    X                     INTERNAL PROCESSING FLAG  @D61NDAP 01745000
XCKNAME  DS    XL12                  RESOURCE NAME             @D61NDAP 01746000
XCKPNTR  DS    XL4                   LOCKTAB ENTRY ADDRESS     @D61NDAP 01747000
         DS    XL8                   RESERVED                           01748000
.*                                                             @D61NDAP 01749000
.*       THE FOLLOWING FIELDS DEFINE OVERLAYS SET BY DEBUG     @D61NDAP 01750000
.*                                                             @D61NDAP 01751000
         ORG   XCKDTL                FORCE OVERLAY             @D61NDAP 01752000
XCKTIMST DS    XL4                   TIME STAMP                @D61NDAP 01753000
         ORG   XCKOWORK              FORCE OVERLAY             @D61NDAP 01754000
XCKLCKST DS    XL2                   CURRENT LOCK STATUS       @D61NDAP 01755000
         ORG   XCKPNTR               FORCE OVERLAY             @D61NDAP 01756000
XCKUNUSE DS    XL4                   RESERVED                  @D61NDAP 01757000
         ORG   ,                                               @D61NDAP 01758000
XCKFORWD DS    XL4                   FORWARD  CHAIN POINTER    @D61NDAP 01759000
XCKBAKWD DS    XL4                   BACKWARD CHAIN POINTER    @D61NDAP 01760000
         SPACE 3                                               @D61NDAP 01761000
XCKHDMAP DSECT                                                 @D61NDAP 01762000
XCKHDFRF DS    F                     FIRST  FREE CHAIN ENTRY   @D61NDAP 01763000
XCKHDFRL DS    F                     LAST   FREE CHAIN ENTRY   @D61NDAP 01764000
XCKHDUSF DS    F                     FIRST USED ENTRY          @D61NDAP 01765000
XCKHDUSL DS    F                     LAST ADDED ENTRY          @D61NDAP 01766000
&SYSECT  CSECT                                                 @D61CDAP 01767000
         EJECT ,                                               @D62NDAP 01768000
         USING TWDBGADR,R9           DEBUG BUILD AREA BASE     @D61MPAP 01769000
         USING XCKHDMAP,RF           HEADER BLOCK BASE POINTER @DAOM092 01770000
         USING DBGLCKPR,RE           ROUTINE BASE POINTER      @DAOM092 01771000
DBGLCKPR DS    0H'0'                                           @DAOM092 01772000
         L     R8,XXDBGSRE           GET INTERNAL LOCK ENTRY   @D61NDAP 01773000
         USING XCKTRMAP,R8           INTERNAL LOCK ENTRY BASE  @D61NDAP 01774000
         TM    XCKPARM,NEWLOCK       IS THIS LOCK/UNLOCK       @D61NDAP 01775000
         BZ    DEBUGEXT              NO,  ===================> @D61NDAP 01776000
         TM    XCKPARM,LOCKSVC       IS THIS UNLOCK REQUEST    @D61NDAP 01777000
         BZ    DBGLC100              YES,                      @D61NDAP 01778000
DBGLC005 ICM   RC,15,XCKHDFRF        GET NEXT FREE ENTRY       @D61NDAP 01779000
         BZ    DEBUGEXT              FULL ===================> @D61NDAP 01780000
         MVC   XCKHDFRF,XCKFORWD-XCKTRMAP(RC) FREE ENTRY ADDR. @D61NDAP 01781000
         MVC   0(48,RC),XCKUTID      SAVE DATA IN BUFFER       @D66CDAP 01782000
         STCK  TWDBGTOD              STORE NEW CLOCK           @D61MPAP 01783000
         MVC   XCKTIMST-XCKTRMAP(4,RC),TWDBGTOD     TIME STAMP @D61MPAP 01784000
         L     R7,XCKPNTR            POINT TO LOCKTAB ENTRY    @D61NDAP 01785000
         MVC   XCKLCKST-XCKTRMAP(2,RC),20(R7) SAVE USER DATA   @D61NDAP 01786000
         XC    XCKUNUSE-XCKTRMAP(4,RC),XCKUNUSE-XCKTRMAP(RC)   @D61NDAP 01787000
         DROP  R8                    RELEASE XCKTRMAP BASE     @D61NDAP 01788000
         DROP  R9                    RELEASE TWDBGADR BASE     @D61MPAP 01789000
         USING XCKTRMAP,RC           DEBUG    LOCK ENTRY BASE  @D61NDAP 01790000
         SLR   R8,R8                 SET PREV.ENTRY ADDR. TO 0 @D61NDAP 01791000
         ICM   R9,15,XCKHDUSF        FIRST IN USED CHAIN       @D61NDAP 01792000
         BNZ   DBGLC010              YES,                      @D61NDAP 01793000
         TM    XCKPARM,LOCKSVC       IS IT AN UNLOCK REQUEST   @D61NDAP 01794000
         BZ    DEBUGEXT              YES, ===================> @D61NDAP 01795000
.*                                                             @D61NDAP 01796000
.*       FIRST ENTRY PROCESSING (LOCK REQUEST)                 @D61NDAP 01797000
.*                                                             @D61NDAP 01798000
         ST    RC,XCKHDUSF           SET FIRST USED ENTRY      @D61NDAP 01799000
         ST    RC,XCKHDUSL           SET LAST  USED ENTRY      @D61NDAP 01800000
         ST    R9,XCKFORWD           INDICATE LAST IN CHAIN    @D61NDAP 01801000
         ST    R9,XCKBAKWD           INDICATE LAST IN BW CHAIN @D61NDAP 01802000
         B     DEBUGEXT              EXIT ===================> @D61NDAP 01803000
DBGLC010 TM    XCKPARM,LOCKSVC       IS THIS LOCK REQUEST      @D61NDAP 01804000
         BZ    DBGLC100              NO, ASSUME UNLOCK         @D61NDAP 01805000
         ST    RC,XCKHDUSL           SET LAST  USED ENTRY      @D61NDAP 01806000
         CLC   XCKNAME(12),XCKNAME-XCKTRMAP(R9) COMPARE NAMES  @D61NDAP 01807000
         BNH   DBGLC020              THIS IS THE POINT         @D61NDAP 01808000
         LR    R8,R9                 SAVE PREVIOUS ENTRY ADDR. @D61NDAP 01809000
         ICM   R9,15,XCKFORWD-XCKTRMAP(R9) NEXT CHAIN ENTRY    @D61NDAP 01810000
         BNZ   DBGLC010              DOES EXIST                @D61NDAP 01811000
.*                                                             @D61NDAP 01812000
.*       OUR ENTRY TO BE INSERTED INTO CHAIN                   @D61NDAP 01813000
.*                                                             @D61NDAP 01814000
DBGLC020 LTR   R8,R8                 IS OURS TO BECOME FIRST   @D61NDAP 01815000
         BZ    DBGLC030              YES,                      @D61NDAP 01816000
         ST    RC,XCKFORWD-XCKTRMAP(R8)   PREV. POINT TO OURS  @D61NDAP 01817000
         ST    R9,XCKFORWD           MAKE OURS POINT TO NEXT   @D61NDAP 01818000
         ST    R8,XCKBAKWD           MAKE OUR BW POINT TO PREV.@D61NDAP 01819000
         ST    RC,XCKBAKWD-XCKTRMAP(R9)   NEXT BW POINT TO OURS@D61NDAP 01820000
         B     DEBUGEXT                   ===================> @D61NDAP 01821000
.*                                                             @D61NDAP 01822000
.*       OUR ENTRY WILL BECOME THE VERY FIRST IN CHAIN         @D61NDAP 01823000
.*                                                             @D61NDAP 01824000
DBGLC030 ST    R8,XCKBAKWD           MAKE OURS BW THE LAST     @D61NDAP 01825000
         L     R8,XCKHDUSF           GET OLD FIRST             @D61NDAP 01826000
         ST    RC,XCKHDUSF           SET NEW FIRST             @D61NDAP 01827000
         ST    R8,XCKFORWD           MAKE OURS POINT TO OLD-1ST@D61NDAP 01828000
         ST    RC,XCKBAKWD-XCKTRMAP(R8)   OLD 1ST BW POINT OURS@D61NDAP 01829000
         B     DEBUGEXT                   ===================> @D61NDAP 01830000
         DROP  RC                    RELEASE XCKTRMAP          @D61NDAP 01831000
         EJECT ,                                               @D61NDAP 01832000
         USING XCKTRMAP,R8           INTERNAL LOCK ENTRY BASE  @D61NDAP 01833000
DBGLC100 SLR   R9,R9                 CLEAR PREV IN CHAIN PNTR  @D61NDAP 01834000
         ICM   RC,15,XCKHDUSF        FIRST IN USED CHAIN       @D61NDAP 01835000
         BZ    DEBUGEXT              NONE ===================> @D61CDAP 01836000
         CLI   XCKRC,ZERO            DID UNLOCK WORK           @D61NDAP 01837000
         BNE   DEBUGEXT              NO,  ===================> @D61NDAP 01838000
DBGLC110 L     RA,XCKFORWD-XCKTRMAP(RC) GET NEXT IN CHAIN PNTR.@D61NDAP 01839000
         TM    XCKPARM,UNLALL        IS THIS UNLOCK-ALL REQUEST@D61NDAP 01840000
         BO    DBGLC120              YES,                      @D61NDAP 01841000
         CLC   XCKNAME,XCKNAME-XCKTRMAP(RC) CORRECT LOCKNAME   @D61NDAP 01842000
         BNE   DBGLC140              NO,                       @D61NDAP 01843000
DBGLC120 CLC   XCKUTID,XCKUTID-XCKTRMAP(RC) LOCK FROM OUR TASK @D61NDAP 01844000
         BNE   DBGLC140              NO,                       @D61NDAP 01845000
         CLI   XCKUTID,ARTID         IS THIS SYSTEM REQUEST    @D61NDAP 01846000
         BNE   DBGLC130              NO,                       @D61NDAP 01847000
.*       CHECK FOR PARTITION SCOPE LOCK TO BE INSERTED HERE    @D61NDAP 01848000
DBGLC130 LA    RB,TWDEBUGS           CPU DEBUG AREA ADDRESS    @D61MPAP 01849000
         USING TWDBGADR,RB           TWDBGADR BASE POINTER     @D61MPAP 01850000
         XC    XCKFORWD-XCKTRMAP(4,RC),XCKFORWD-XCKTRMAP(RC)   @D61NDAP 01851000
         MVC   XCKBAKWD-XCKTRMAP(4,RC),TWDBGTOD UNLOCK TIME    @D61MPAP 01852000
         DROP  RB                    RELEASE TWDBGADR BASE     @D61MPAP 01853000
         L     RB,XCKHDFRL           LAST FREE ENTRY ADDRESS   @D61NDAP 01854000
         ST    RC,XCKFORWD-XCKTRMAP(RB) OUR ENTRY IS NOW LAST  @D61NDAP 01855000
         ST    RC,XCKHDFRL           OF FREE CHAIN             @D61NDAP 01856000
         OI    XCKUTID-XCKTRMAP(RC),X'80' SET ENTRY FREE       @D61NDAP 01857000
         LTR   R9,R9                 WAS THIS THE FIRST ENTRY  @D61NDAP 01858000
         BZ    DBGLC170              YES,                      @D61NDAP 01859000
         ST    RA,XCKFORWD-XCKTRMAP(R9) UPDATE FORWARD CHAIN   @D61NDAP 01860000
         LTR   RA,RA                 DOES NEXT ENTRY EXIST     @D61NDAP 01861000
         BZ    DBGLC150              NO, OURS WAS LAST         @D61NDAP 01862000
         ST    R9,XCKBAKWD-XCKTRMAP(RA) UPDATE BACKWARD POINTER@D61NDAP 01863000
         TM    XCKPARM,UNLALL        IS THIS UNLOCK-ALL REQUEST@D61NDAP 01864000
         BZ    DEBUGEXT              NO,  ===================> @D61NDAP 01865000
DBGLC140 LR    R9,RC                 MAKE CURRENT THE PREVIOUS @D61NDAP 01866000
         LTR   RC,RA                 MAKE NEXT THE CURRENT     @D61NDAP 01867000
         BP    DBGLC110              NEXT ENTRY EXISTS         @D61NDAP 01868000
         B     DEBUGEXT                   ===================> @D61NDAP 01869000
.*                                                             @D61NDAP 01870000
.*       OUR ENTRY WAS THE VERY LAST IN THE CHAIN              @D61NDAP 01871000
.*                                                             @D61NDAP 01872000
DBGLC150 LTR   R9,R9                 DOES PREVIOUS ENTRY EXIST @D61NDAP 01873000
         BZ    DBGLC160              NO,                       @D61NDAP 01874000
         ST    RA,XCKFORWD-XCKTRMAP(R9) SET END OF CHAIN       @D61NDAP 01875000
         B     DEBUGEXT                   ===================> @D61NDAP 01876000
DBGLC160 ST    R9,XCKHDUSF           SET FIRST USED TO ZERO    @D61NDAP 01877000
         ST    R9,XCKHDUSL           SET LAST  USED TO ZERO    @D61NDAP 01878000
         B     DEBUGEXT                   ===================> @D61NDAP 01879000
.*                                                             @D61NDAP 01880000
.*       OUR ENTRY WAS THE VERY FIRST IN THE CHAIN             @D61NDAP 01881000
.*                                                             @D61NDAP 01882000
DBGLC170 ST    RA,XCKHDUSF           THIS IS NOW USED FIRST    @D61NDAP 01883000
         LTR   RA,RA                 DOES NEXT     ENTRY EXIST @D61NDAP 01884000
         BZ    DBGLC180              NO,                       @D61NDAP 01885000
         ST    R9,XCKBAKWD-XCKTRMAP(RA) SET NEW CHAIN END      @D61NDAP 01886000
         B     DEBUGEXT                   ===================> @D61NDAP 01887000
DBGLC180 ST    RA,XCKHDUSL           SET 1ST BAKW TO ZERO      @D61NDAP 01888000
         B     DEBUGEXT                   ===================> @D61NDAP 01889000
         DROP  R8                    RELEASE XCKTRMAP BASE     @D61NDAP 01890000
         DROP  RE                    RELEASE ROUTINE BASE      @D61NDAP 01891000
         DROP  RF                    RELEASE HEADER BLOCK BASE @D61NDAP 01892000
         EJECT ,                                               @D61NDAP 01893000
VISHDMAP DSECT                                                 @D61NDAP 01894000
VISHDFRF DS    F                     FIRST  FREE CHAIN ENTRY   @D61NDAP 01895000
VISHDFRL DS    F                     LAST   FREE CHAIN ENTRY   @D61NDAP 01896000
VISHDUSF DS    F                     FIRST  USED ENTRY         @D61NDAP 01897000
VISHDUSL DS    F                     LAST   ADDED ENTRY        @D61NDAP 01898000
         SPACE 3                                               @D61NDAP 01899000
GVFVHENT DSECT                                                 @D61NDAP 01900000
GVFVHFWD DS    A                     NEXT SUBPOOL HEADER ENTRY @D61NDAP 01901000
GVFVHASP DS    A                     SUPPOOL ADDRESS           @D61NDAP 01902000
GVFVH1ST DS    A                     FIRST SUBPOOL ENTRY ADDRES@D61NDAP 01903000
GVFVHTOD DS    XL6                   LAST ACCESS TIME          @D61NDAP 01904000
GVFVHPUC DS    XL2                   PAGE USAGE COUNT          @D61NDAP 01905000
GVFVHAVG DS    XL4                   AVERAGE BUFFER LENGTH     @D61NDAP 01906000
GVFVHSID DS    CL8                   SUBPOOL NAME              @D61NDAP 01907000
         SPACE 3                                               @D61NDAP 01908000
GVFV#ENT DSECT                                                 @D61NDAP 01909000
GVFV#FWD DS    A                     FORWARD POINTER           @D61NDAP 01910000
GVFV#JOB DS    CL8                   JOB NAME                  @D61NDAP 01911000
GVFV#TOD DS    XL6                   TOD (FIRST SIX BYTES)     @D61NDAP 01912000
GVFV#TID DS    XL2                   TID OF OWNER              @D61NDAP 01913000
GVFV#BEG DS    A                     AREA BEGIN ADDRESS        @D61NDAP 01914000
GVFV#END DS    A                     AREA END   ADDRESS        @D61NDAP 01915000
GVFV#INC DS    H                     TIMES IT WAS INCREMENTED  @D61NDAP 01916000
GVFV#DEC DS    H                     TIMES IT WAS DECREMENTED  @D61NDAP 01917000
*        R9    ADDRESS OF PREVIOUS SUBPOOL ENTRY               @D62NDAP 01918000
*        RA    ADDRESS OF CURRENT  SUBPOOL ENTRY               @D62NDAP 01919000
*        RB    ADDRESS OF PREVIOUS DEBUG TRACE ENTRY           @D62NDAP 01920000
*        RC    ADDRESS OF CURRENT  DEBUG TRACE ENTRY           @D62NDAP 01921000
*        RD    ADDRESS OF NEXT     DEBUG TRACE ENTRY           @D62NDAP 01922000
&SYSECT  CSECT                                                 @D61CDAP 01923000
         SPACE 3                                               @DGETVIS 01924000
         USING DBGVISPR,RE           ROUTINE BASE              @D25IDAP 01925000
         USING XXESINFO,RF           DEBUG TRACE INFO BASE     @DGETVIS 01926000
DBGVISPR TM    XXESIESE,XXESDOGV     GETVIS TRACE ACTIVE       @DGETVIS 01927000
         BZ    DEBUGEXT              NO,  ===================> @DGETVIS 01928000
         DROP  RF                    RELEASE TRACE INFO BASE   @DGETVIS 01929000
         ICM   RF,15,XXVISBUF        GETVIS TRACE ACTIVE       @DGETVIS 01930000
         BZ    DEBUGEXT              NO,  ===================> @DGETVIS 01931000
         USING VISHDMAP,RF           GET/FREEVIS BUFFER BASE   @DGETVIS 01932000
         L     R1,TDCPUPTR           CPU CONTROL BLOCK         @DGETVIS 01933000
         L     R1,TCPUWRK-TCPUADR(,R1) WORK AREA ADDRESS       @DGETVIS 01934000
         USING TWCPADR,R1            TDWORK AREA BASE          @DGETVIS 01935000
         L     RD,TWDBGSAV+52        GET SAVE AREA ADDRESS     @DGETVIS 01936000
         USING SVEARA,RD             USER SAVE AREA BASE       @DGETVIS 01937000
         LA    R1,TWDEBUGS           CPU SPECIFIC DEBUG        @DGETVIS 01938000
         USING TWDBGADR,R1           DEBUG BUILD AREA BASE     @DGETVIS 01939000
         ICM   R8,15,XXDBGSRE+4      GETVIS/FREEVIS RETURN CODE@DGETVIS 01940000
         BNZ   DBGVISXT              NOT ZERO                  @DGETVIS 01941000
         TM    SVER0F+3,SVAIND       IS THIS SVA REQUEST       @DGETVIS 01942000
         BZ    DBGVISXT              NO,                       @DGETVIS 01943000
         MVC   #PARPOOL,XXDBGSRE+12  GET SUBPOOL ID ADDRESS    @DGETVIS 01944000
         MVC   #PARBEG,SVER01        GET AREA BEGIN ADDRESS    @DGETVIS 01945000
         MVC   #PAREND,SVER00        GET AREA LENGTH           @DGETVIS 01946000
         MVC   #PARTID,TID           GET USERS TID             @DGETVIS 01947000
         LA    RA,ARTID              HIGHEST SYSTEM TASK-ID    @D66ADAP 01948000
         CH    RA,TID                IS THIS A SYSTEM TASK     @D66ADAP 01949000
         BH    DBGVI020              NO,                       @DGETVIS 01950000
         L     RA,TCBPTR             GET TCB ADDRESS           @DGETVIS 01951000
         USING TCBADR,RA             TCB BASE POINTER          @DGETVIS 01952000
         L     RA,TCBSAVE            POINT TO SAVE AREA        @DGETVIS 01953000
         DROP  RA                    RELEASE TCB BASE POINTER  @DGETVIS 01954000
         B     DBGVI030              JOIN MAIN LINE            @DGETVIS 01955000
DBGVI020 L     RA,CRADDR             GET COMREG ADDRESS        @DGETVIS 01956000
         USING COMREG,RA             COMREG BASE POINTER       @DGETVIS 01957000
         LA    RA,COMNAME            POINT TO JOB NAME         @DGETVIS 01958000
         DROP  RA                    RELEASE COMREG BASE       @DGETVIS 01959000
DBGVI030 MVC   #PARJOB,0(RA)         GET USERS JOB/TASK NAME   @DGETVIS 01960000
         TM    SVER0F+3,FVSPID       WHOLE SUBPPOL TO BE FREED @DGETVIS 01961000
         BZ    DBGVI040              NO,                       @DGETVIS 01962000
         XC    #PARBEG(8),#PARBEG    CLEAR BEGIN AND END       @DGETVIS 01963000
DBGVI040 SLR   RA,RA                 CLEAR REGISTER            @DGETVIS 01964000
         IC    R8,#PAREND+3          GET LAST LENGTH BYTE      @DGETVIS 01965000
         N     R8,F15                BYTES WITHIN 16-BYTE BNDRY@DGETVIS 01966000
         BZ    DBGVI050              IS MULTIPLE OF 16 BYTES   @DGETVIS 01967000
         LA    RA,16                 LOAD CONSTANT             @DGETVIS 01968000
         SLR   RA,R8                 BYTES WASTED              @DGETVIS 01969000
DBGVI050 L     R8,#PAREND            GET LENGTH OPERAND        @DGETVIS 01970000
         ALR   R8,RA                 ADD WASTED BYTES          @DGETVIS 01971000
         A     R8,#PARBEG            ADD BEGIN ADDRESS         @DGETVIS 01972000
         ST    R8,#PARNXT            END OF GETVIS AREA+1      @DGETVIS 01973000
         BCTR  R8,0                  LAST BYTE OF GETVIS AREA  @DGETVIS 01974000
         ST    R8,#PAREND            GETVIS END ADDRESS        @DGETVIS 01975000
         L     RA,VISHDUSF           FIRST SUBPOOL HEADER ADDR.@DGETVIS 01976000
         STCK  TWDBGTOD              GET TOD                   @DGETVIS 01977000
         CLI   TWDBGTYP+3,X'02'      IS THIS A GETVIS REQUEST  @DGETVIS 01978000
         BNE   DBGFVFRI              NO, ASSUME FREEVIS        @DGETVIS 01979000
         DROP  RD                    RELEASE USERS SAVE AREA   @DGETVIS 01980000
         SLR   R9,R9                 NO PREVIOUS SUBPOOL PNTR. @DGETVIS 01981000
DBGGV020 LTR   RA,RA                 DOES ENTRY EXIST          @DGETVIS 01982000
         BZ    DBGGV040              NO,  CREATE A NEW ENTRY   @DGETVIS 01983000
         USING GVFVHENT,RA           SUBPOOL ENTRY BASE POINTER@DGETVIS 01984000
.*                                                             @DGETVIS 01985000
.*       FIND CORRECT SUBPOOL FIRST                            @DGETVIS 01986000
.*                                                             @DGETVIS 01987000
         CLC   GVFVHASP,#PARPOOL     CORRECT SUBPOOL ID        @DGETVIS 01988000
         BE    DBGGV100              YES,                      @DGETVIS 01989000
         LR    R9,RA                 SAVE PREVIOUS ENTRY ADDR. @DGETVIS 01990000
         L     RA,GVFVHFWD           GET NEXT SUBPOOL HEADER   @DGETVIS 01991000
         B     DBGGV020              CHECK NEXT ENTRY          @DGETVIS 01992000
.*                                                             @DGETVIS 01993000
.*       CREATE NEW SUBPOOL ENTRY                              @DGETVIS 01994000
.*                                                             @DGETVIS 01995000
DBGGV040 ICM   RA,15,VISHDFRF        GET FREE TRACE ENTRY ADDR.@DGETVIS 01996000
         BZ    DBGVISXT              RUN OUT OF GETVIS SPACE   @DGETVIS 01997000
         L     RC,GVFVHFWD           GET ITS CHAIN POINTER     @DGETVIS 01998000
         LTR   RC,RC                 IS ANOTHER ENTRY AVAILABLE@DGETVIS 01999000
         BZ    DBGVISXT              NO, BUT WE NEED TWO       @DGETVIS 02000000
         ST    RC,VISHDFRF           DEQUEUE FROM FREE CHAIN   @DGETVIS 02001000
         L     R8,#PARNXT            GET PAST AREA ADDRESS     @DGETVIS 02002000
         SL    R8,#PARBEG            LENGTH OF AREA            @DGETVIS 02003000
         ST    R8,GVFVHAVG           SAVE ALLOCATED LENGTH     @DGETVIS 02004000
         MVC   GVFVHTOD(6),TWDBGTOD  SAVE LAST ACCESS TIME     @DGETVIS 02005000
         MVC   GVFVHASP,#PARPOOL     SAVE SUBPOOL ADDRESS      @DGETVIS 02006000
         XC    GVFVHFWD,GVFVHFWD     INDICATE LAST HEADER ENTRY@DGETVIS 02007000
         L     R8,#PARPOOL           GET SUBPOOL IDENTIFIER    @DGETVIS 02008000
         USING SUBPINT,R8            SUBPOOL INDEX BASE        @DGETVIS 02009000
         MVC   GVFVHSID(6),SPITNAME  GET SUBPOOL NAME          @DGETVIS 02010000
         MVC   GVFVHPUC(2),SPITPUSC  GET USAGE COUNT           @DGETVIS 02011000
         MVC   GVFVHSID+6(2),SPITPIK COMPLETE THE NAME         @DGETVIS 02012000
         LTR   R9,R9                 IS THIS THE FIRST ENTRY   @DGETVIS 02013000
         BNZ   DBGGV060              NO,                       @DGETVIS 02014000
         ST    RA,VISHDUSF           SAVE FIRST ENTRY ADDRESS  @DGETVIS 02015000
         B     DBGGV080              NO PREV. CHAIN ENTRY      @DGETVIS 02016000
         DROP  R8                    RELEASE SUBPOOL INDEX BASE@DGETVIS 02017000
DBGGV060 ST    RA,GVFVHFWD-GVFVHENT(R9) CHAIN TO PREVIOUS      @DGETVIS 02018000
DBGGV080 SLR   RB,RB                 INDICATE NO PREV. ENTRY   @DGETVIS 02019000
         SLR   RD,RD                 INDICATE LAST IN CHAIN    @DGETVIS 02020000
         ST    RC,GVFVH1ST           SAVE FIRST ENTRY ADDRESS  @DGETVIS 02021000
         L     R8,#PARNXT            GET PAST AREA ADDRESS     @DGETVIS 02022000
         SL    R8,#PARBEG            LENGTH OF AREA            @DGETVIS 02023000
         AL    R8,GVFVHAVG           GET OLD AVERAGE           @DGETVIS 02024000
         SRL   R8,1                  DIVIDE BY 2               @DGETVIS 02025000
         ST    R8,GVFVHAVG           SAVE NEW AVERAGE          @DGETVIS 02026000
         MVC   GVFVHTOD(6),TWDBGTOD  SAVE LAST ACCESS TIME     @DGETVIS 02027000
         B     DBGGV160              CREATE DETAIL ENTRY       @DGETVIS 02028000
.*                                                             @DGETVIS 02029000
.*       FIND SUBPOOL INSERTION POINT                          @DGETVIS 02030000
.*                                                             @DGETVIS 02031000
DBGGV100 L     R8,#PARNXT            GET PAST AREA ADDRESS     @DGETVIS 02032000
         SL    R8,#PARBEG            LENGTH OF AREA            @DGETVIS 02033000
         AL    R8,GVFVHAVG           GET OLD AVERAGE           @DGETVIS 02034000
         SRL   R8,1                  DIVIDE BY 2               @DGETVIS 02035000
         ST    R8,GVFVHAVG           SAVE NEW AVERAGE          @DGETVIS 02036000
         MVC   GVFVHTOD(6),TWDBGTOD  SAVE LAST ACCESS TIME     @DGETVIS 02037000
         SLR   RB,RB                 INDICATE NO PREV ENTRY    @DGETVIS 02038000
         L     RD,GVFVH1ST           GET FIRST ENTRY ADDRESS   @DGETVIS 02039000
         USING GVFV#ENT,RD           GVFV#ENT BASE POINTER     @DGETVIS 02040000
DBGGV120 L     R8,GVFV#END           GET CURRENT END ADDRESS   @DGETVIS 02041000
         LA    R8,1(,R8)             NEXT FREE LOCATION        @DGETVIS 02042000
         CL    R8,#PARBEG            IS THIS THE INSERT POINT  @DGETVIS 02043000
         BNL   DBGGV180              YES, NEED SOME MORE CHECKS@DGETVIS 02044000
         LR    RB,RD                 SAVE PREV. ENTRY POINTER  @DGETVIS 02045000
         L     RD,GVFV#FWD           NEXT ENTRY ADDRESS        @DGETVIS 02046000
         LTR   RD,RD                 WAS THIS THE LAST ENTRY   @DGETVIS 02047000
         BNZ   DBGGV120              NO, ADVANCE TO NEXT ENTRY @DGETVIS 02048000
.*                                                             @DGETVIS 02049000
.*       WE NEED TO CREATE A NEW DETAIL ENTRY                  @DGETVIS 02050000
.*                                                             @DGETVIS 02051000
DBGGV160 ICM   RC,15,VISHDFRF        GET FIRST FREE ENTRY      @DGETVIS 02052000
         BZ    DBGVISXT              NONE,                     @DGETVIS 02053000
         MVC   VISHDFRF,GVFV#FWD-GVFV#ENT(RC) DEQUEUE FROM FREE@DGETVIS 02054000
         BAL   R7,VISSETUP           CREATE THE ENTRY          @DGETVIS 02055000
*SGLINK  VISSETUP,INPUT=(R7,RB,RC,RD)                          @DGETVIS 02056000
         B     DBGVISXT              EXIT                      @DGETVIS 02057000
.*                                                             @DGETVIS 02058000
.*       INSERT ENTRY INTO EXISTING CHAIN                      @DGETVIS 02059000
.*                                                             @DGETVIS 02060000
DBGGV180 DS    0H'0'                                           @DGETVIS 02061000
         CLC   GVFV#TID,#PARTID      SAME TASK-ID              @DGETVIS 02062000
         BNE   DBGGV160              NO, CREATE NEW ENTRY      @DGETVIS 02063000
         CLC   GVFV#JOB,#PARJOB      SAME JOB NAME             @DGETVIS 02064000
         BNE   DBGGV160              NO, CREATE NEW ENTRY      @DGETVIS 02065000
         CL    R8,#PARBEG            CONTIGUOUS GETVIS AREA    @DGETVIS 02066000
         BNE   DBGGV200              NO,                       @DGETVIS 02067000
         MVC   GVFV#END,#PAREND      INCREASE OLD AREA         @DGETVIS 02068000
         B     DBGGV220                                        @DGETVIS 02069000
DBGGV200 CLC   GVFV#BEG,#PARNXT      CONTIGUOUS GETVIS AREA    @DGETVIS 02070000
         BNE   DBGGV160              NO, CREATE NEW ENTRY      @DGETVIS 02071000
         MVC   GVFV#BEG,#PARBEG      SET NEW BEGIN ADDRESS     @DGETVIS 02072000
DBGGV220 LH    R8,GVFV#INC           GET USE COUNT             @DGETVIS 02073000
         LA    R8,1(,R8)             INCREMENT USE COUNT       @DGETVIS 02074000
         STH   R8,GVFV#INC           SAVE NEW VALUE            @DGETVIS 02075000
         B     DBGVISXT                                        @DGETVIS 02076000
         SPACE 3                                               @DGETVIS 02077000
*        RB    ADDRESS OF PREVIOUS GETVIS TRACE ENTRY          @DGETVIS 02078000
*        RC    ADDRESS OF NEW      GETVIS TRACE ENTRY          @DGETVIS 02079000
*        RD    ADDRESS OF NEXT     GETVIS TRACE ENTRY          @DGETVIS 02080000
         DROP  RD                    RELEASE TRACE ENTRY BASE  @DGETVIS 02081000
*SGLINK  VISSETUP,INPUT=(R7,RB,RC,RD)                          @DGETVIS 02082000
         USING GVFV#ENT,RC           GVFV BUFFER ENTRY BASE    @DGETVIS 02083000
VISSETUP DS    0H'0'                 CREATE AN TRACE ENTRY     @DGETVIS 02084000
         MVC   GVFV#TOD,TWDBGTOD     SAVE TOD VALUE            @DGETVIS 02085000
         MVC   GVFV#TID,#PARTID      SAVE TID OF ISSUER        @DGETVIS 02086000
         MVC   GVFV#BEG,#PARBEG      SAVE GETVIS BEGIN ADDRESS @DGETVIS 02087000
         MVC   GVFV#END,#PAREND      SAVE GETVIS END ADDRESS   @DGETVIS 02088000
         MVC   GVFV#JOB,#PARJOB      SAVE USERS JOB NAME       @DGETVIS 02089000
         LA    R8,1                  INDICATE USED ONCE        @DGETVIS 02090000
         STH   R8,GVFV#INC           SAVE NEW VALUE            @DGETVIS 02091000
         XC    GVFV#DEC,GVFV#DEC     CLEAR OLD COUNTER         @DGETVIS 02092000
         ST    RD,GVFV#FWD           SAVE  CHAIN POINTER       @DGETVIS 02093000
         LTR   RB,RB                 DOES PREV. ENTRY EXIST    @DGETVIS 02094000
         BZR   R7                    NO,                       @DGETVIS 02095000
         ST    RC,GVFV#FWD-GVFV#ENT(RB) CHAIN PREVIOUS TO NEW  @DGETVIS 02096000
         BR    R7                         ===================> @DGETVIS 02097000
         DROP  RC                    RELEASE GVFV#ENT BASE     @DGETVIS 02098000
         EJECT ,                                               @DGETVIS 02099000
         DC    C'FREEVIS '                                              02100000
DBGFVFRI DS    0H'0'                 FREEVIS PROCESSING        @DGETVIS 02101000
         L     RA,VISHDUSF           GET SUBPOOL CHAIN BEGIN   @DGETVIS 02102000
         SLR   R9,R9                 PREVIOUS SUBPOOL POINTER  @DGETVIS 02103000
DBGFV020 LTR   RA,RA                 DOES FURTHER ENTRY EXIST  @DGETVIS 02104000
         BZ    DBGVISXT              NO,                       @DGETVIS 02105000
         USING GVFVHENT,RA           SUBPOOL ENTRY BASE POINTER@DGETVIS 02106000
.*                                                             @DGETVIS 02107000
.*       FIND CORRECT SUBPOOL FIRST                            @DGETVIS 02108000
.*                                                             @DGETVIS 02109000
         CLC   GVFVHASP,#PARPOOL     IS IT CORRECT SUBPOOL     @DGETVIS 02110000
         BE    DBGFV040              YES,                      @DGETVIS 02111000
         LR    R9,RA                 SAVE PREV. SUBPOOL POINTER@DGETVIS 02112000
         L     RA,GVFVHFWD           GET NEXT SUBPOOL HEADER   @DGETVIS 02113000
         B     DBGFV020              CHECK NEXT ENTRY          @DGETVIS 02114000
.*                                                             @DGETVIS 02115000
.*       FIND CORRECT TRACE ENTRY                              @DGETVIS 02116000
.*                                                             @DGETVIS 02117000
DBGFV040 MVC   GVFVHTOD(6),TWDBGTOD  SAVE LAST ACCESS TIME     @DGETVIS 02118000
         SLR   RB,RB                 INDICATE NO PREV ENTRY    @DGETVIS 02119000
         L     RD,GVFVH1ST           GET FIRST ENTRY ADDRESS   @DGETVIS 02120000
         USING GVFV#ENT,RD           SUBPOOL ENTRY BASE POINTER@DGETVIS 02121000
         SLR   R8,R8                 CLEAR REGISTER            @DGETVIS 02122000
         BCTR  R8,0                  MAKE IT FFFFFFFF          @DGETVIS 02123000
         CL    R8,#PAREND            TOTAL SUBPOOL DELETION    @DGETVIS 02124000
         BE    DBGFV160              YES,                      @DGETVIS 02125000
DBGFV060 CLC   GVFV#END,#PARBEG      IS THIS ENTRY AFFECTED    @DGETVIS 02126000
         BNL   DBGFV080              YES, COULD BE             @DGETVIS 02127000
         LR    RB,RD                 SAVE PREV. ENTRY POINTER  @DGETVIS 02128000
         ICM   RD,15,GVFV#FWD        IS ANOTHER ENTRY PRESENT  @DGETVIS 02129000
         BNZ   DBGFV060              YES,                      @DGETVIS 02130000
         B     DBGVISXT              NO,                       @DGETVIS 02131000
.*                                                             @DGETVIS 02132000
.*       UPDATE OR DELETE CURRENT ENTRY                        @DGETVIS 02133000
.*                                                             @DGETVIS 02134000
DBGFV080 DS    0H'0'                                           @DGETVIS 02135000
         CLC   GVFV#BEG,#PAREND      IS THIS OUR ENTRY         @DGETVIS 02136000
         BH    DBGVISXT              NO, CERTAINLY NOT         @DGETVIS 02137000
         CLC   GVFV#END,#PAREND      MORE THAN 1 ENTRY AFFECTED@DGETVIS 02138000
         BL    DBGFV180              YES, IT IS                @DGETVIS 02139000
         CLC   GVFV#BEG,#PARBEG      BEGIN MATCHES BEGIN ADDR. @DGETVIS 02140000
         BNE   DBGFV100              NO, BUT COULD BE INSIDE   @DGETVIS 02141000
         CLC   #PAREND,GVFV#END      END MATCHES END ADDRESS   @DGETVIS 02142000
         BE    DBGFV140              YES, DELETE WHOLE ENTRY   @DGETVIS 02143000
         MVC   GVFV#BEG,#PARNXT      SHORTEN THE OCCUPIED AREA @DGETVIS 02144000
         B     DBGFV110                                        @DGETVIS 02145000
DBGFV100 CLC   GVFV#END,#PAREND      DOES IT MATCH END ADDRESS @DGETVIS 02146000
         BNE   DBGFV120              NO,                       @DGETVIS 02147000
         L     R8,#PARBEG            GET BEGIN ADDRESS         @DGETVIS 02148000
         BCTR  R8,0                  SUBTRACT 1                @DGETVIS 02149000
         ST    R8,GVFV#END           SHORTEN THE ASSIGNED AREA @DGETVIS 02150000
DBGFV110 LH    R8,GVFV#DEC           GET USE COUNT             @DGETVIS 02151000
         LA    R8,1(,R8)             INCREASE DECREMENT COUNT  @DGETVIS 02152000
         STH   R8,GVFV#DEC           SAVE NEW VALUE            @DGETVIS 02153000
         B     DBGVISXT                                        @DGETVIS 02154000
.*                                                             @DGETVIS 02155000
.*       WE NEED TO SPLIT THE CURRENT ENTRY                    @DGETVIS 02156000
.*                                                             @DGETVIS 02157000
         SPACE 3                                               @DGETVIS 02158000
DBGFV120 DS    0H'0'                                           @DGETVIS 02159000
         L     R8,GVFV#END           SAVE OLD END BOUNDARY     @DGETVIS 02160000
         L     R7,#PARBEG            GET BEGIN ADDRESS         @DGETVIS 02161000
         BCTR  R7,R0                 SUBTRACT 1                @DGETVIS 02162000
         ST    R7,GVFV#END           SET NEW END ADDRESS       @DGETVIS 02163000
         MVC   #PARBEG,#PARNXT       SET NEW BEGIN ADDRESS     @DGETVIS 02164000
         ST    R8,#PAREND            SET NEW END ADDRESS       @DGETVIS 02165000
         LA    R8,1(,R8)             POINT PAST LAST BYTE      @DGETVIS 02166000
         ST    R8,#PARNXT            SET NEW END ADDRESS + 1   @DGETVIS 02167000
         LH    R8,GVFV#DEC           GET USE COUNT             @DGETVIS 02168000
         LA    R8,1(,R8)             INCREASE DECREMENT COUNT  @DGETVIS 02169000
         STH   R8,GVFV#DEC           SAVE NEW VALUE            @DGETVIS 02170000
         MVC   #PARTID,GVFV#TID      PROPAGATE TID             @DGETVIS 02171000
         MVC   TWDBGTOD,GVFV#TOD     PROPAGATE TOD             @DGETVIS 02172000
         L     RC,VISHDFRF           GET FIRST FREE ENTRY      @DGETVIS 02173000
         LTR   RC,RC                 WAS THIS THE LAST FREE    @DGETVIS 02174000
         BZ    DBGVISXT              YES,                      @DGETVIS 02175000
         MVC   VISHDFRF,GVFV#FWD-GVFV#ENT(RC) DEQUEUE FROM FREE@DGETVIS 02176000
         LR    RB,RD                 MAKE CURRENT THE PREVIOUS @DGETVIS 02177000
         L     RD,GVFV#FWD           GET NEXT SUBPOOL ENTRY ADR@DGETVIS 02178000
         BAL   R7,VISSETUP           CREATE THE ENTRY          @DGETVIS 02179000
*SGLINK  VISSETUP,INPUT=(R7,RB,RC,RD)                          @DGETVIS 02180000
         B     DBGVISXT              EXIT                      @DGETVIS 02181000
.*                                                             @DGETVIS 02182000
.*       WE NEED TO DELETE THE WHOLE ENTRY                     @DGETVIS 02183000
.*                                                             @DGETVIS 02184000
         SPACE 3                                               @DGETVIS 02185000
DBGFV140 BAL   R7,VISFREIT           FREE THE CURRENT ENTRY    @DGETVIS 02186000
*SGLINK  VISFREIT,INPUT=(R7,RA,RB,RD,RE,RF),WORK=(R8,RC)       @DGETVIS 02187000
         B     DBGVISXT                                        @DGETVIS 02188000
.*                                                             @DGETVIS 02189000
.*       DELETE WHOLE SUBPOOL ENTRY                            @DGETVIS 02190000
.*                                                             @DGETVIS 02191000
         SPACE 3                                               @DGETVIS 02192000
DBGFV160 L     RD,GVFVH1ST           GET FIRST ENTRY ADDRESS   @DGETVIS 02193000
         BAL   R7,VISFREIT           FREE THE CURRENT ENTRY    @DGETVIS 02194000
*SGLINK  VISFREIT,INPUT=(R7,RA,RB,RD,RE,RF),WORK=(R8,RC)       @DGETVIS 02195000
         LTR   RB,RB                 ALL ENTRIES DELETED       @DGETVIS 02196000
         BNZ   DBGFV160                                        @DGETVIS 02197000
         B     DBGVISXT                                        @DGETVIS 02198000
.*                                                             @DGETVIS 02199000
.*       WE NEED TO MODIFY MORE ENTRY(S)                       @DGETVIS 02200000
.*                                                             @DGETVIS 02201000
         SPACE 3                                               @DGETVIS 02202000
DBGFV180 DS    0H'0'                                           @DGETVIS 02203000
         LH    R8,GVFV#DEC           GET DECREMENT COUNTER     @DGETVIS 02204000
         LA    R8,1(,R8)             INCREASE DECREMENT COUNTER@DGETVIS 02205000
         STH   R8,GVFV#DEC           SAVE UPDATED VALUE        @DGETVIS 02206000
         L     R8,#PARBEG            GET BEGIN ADDRESS         @DGETVIS 02207000
         BCTR  R8,0                  SUBTRACT 1                @DGETVIS 02208000
         ST    R8,GVFV#END           NEW END ADDRESS           @DGETVIS 02209000
         LA    R8,1(,R8)             NEXT BYTE ADDRESS         @DGETVIS 02210000
         LR    RB,RD                 ADJUST PREV ENTRY POINTER @DGETVIS 02211000
DBGFV200 ICM   RD,15,GVFV#FWD        GET NEXT ENTRY ADDRESS    @DGETVIS 02212000
         BZ    DBGVISXT              NONE,                     @DGETVIS 02213000
         CLC   GVFV#BEG,#PAREND      IS THIS ENTRY AFFECTED    @DGETVIS 02214000
         BH    DBGVISXT              NO, WE DONT HAVE THIS     @DGETVIS 02215000
         CLC   GVFV#END,#PAREND      IS THE END IN THIS AREA   @DGETVIS 02216000
         BNL   DBGFV220              YES,                      @DGETVIS 02217000
         BAL   R7,VISFREIT           FREE THE WHOLE ENTRY      @DGETVIS 02218000
*SGLINK  VISFREIT,INPUT=(R7,RA,RB,RD,RE,RF),WORK=(R8,RC)       @DGETVIS 02219000
         B     DBGFV200                                        @DGETVIS 02220000
DBGFV220 MVC   GVFV#BEG,#PARNXT      UPDATE THE BEGIN POINTER  @DGETVIS 02221000
         LH    R8,GVFV#DEC           GET USE COUNT             @DGETVIS 02222000
         LA    R8,1(,R8)             INCREASE DECREMENT COUNT  @DGETVIS 02223000
         STH   R8,GVFV#DEC           SAVE NEW VALUE            @DGETVIS 02224000
         B     DBGVISXT              NONE,                     @DGETVIS 02225000
         SPACE 3                                               @DGETVIS 02226000
*SGLINK  VISFREIT,INPUT=(R7,RA,RB,RD,RE,RF),WORK=(R8,RC)       @DGETVIS 02227000
VISFREIT L     RC,VISHDFRL           GET LAST FREE ENTRY       @DGETVIS 02228000
         ST    RD,VISHDFRL           MAKE OURS THE LAST        @DGETVIS 02229000
         L     R8,GVFV#FWD           SAVE OUR CHAIN POINTER    @DGETVIS 02230000
         XC    GVFV#FWD,GVFV#FWD     INDICATE LAST IN CHAIN    @DGETVIS 02231000
         LTR   RC,RC                 WAS THERE ANY FREE ENTRY  @DGETVIS 02232000
         BZ    VISFRE20              NO,                       @DGETVIS 02233000
         ST    RD,GVFV#FWD-GVFV#ENT(RC) UPDATE FREE-LIST       @DGETVIS 02234000
VISFRE20 C     RD,GVFVH1ST           WAS THIS THE FIRST ENTRY  @DGETVIS 02235000
         BNE   VISFRE80              NO,                       @DGETVIS 02236000
         LTR   R8,R8                 WAS THIS THE ONLY ENTRY   @DGETVIS 02237000
         BZ    VISFRE40              YES,                      @DGETVIS 02238000
         ST    R8,GVFVH1ST           SET NEW CHAIN BEGIN ADDR. @DGETVIS 02239000
         BR    R7                         ===================> @DGETVIS 02240000
VISFRE40 LR    RD,RA                 COPY HEADER ADDRESS       @DGETVIS 02241000
         LTR   R9,R9                 WAS THIS THE ONLY SUBPOOL @DGETVIS 02242000
         BNZ   VISFRE60              NO,                       @DGETVIS 02243000
         ST    R9,VISHDUSF           NO MORE SUBPOOL EXISTS    @DGETVIS 02244000
         B     VISFRE70                                        @DGETVIS 02245000
VISFRE60 MVC   GVFVHFWD-GVFVHENT(4,R9),GVFVHFWD MINE TO PREVIOUS GETVIS 02246000
VISFRE70 SLR   RB,RB                 NO PREV. ENTRY EXISTS     @DGETVIS 02247000
         XC    GVFVH1ST,GVFVH1ST     ENSURE NEXT TIME EXIT     @DGETVIS 02248000
         B     VISFREIT              FREE SUBPPOL HEADER INFO  @DGETVIS 02249000
VISFRE80 LTR   RB,RB                 PREV. ENTRY EXISTS        @DGETVIS 02250000
         BZR   R7                    NO,                       @DGETVIS 02251000
         ST    R8,GVFV#FWD-GVFV#ENT(RB) PREV POINT TO NEXT     @DGETVIS 02252000
         BR    R7                         ===================> @DGETVIS 02253000
DBGVISXT DS    0H'0'                 COMMON EXIT POINT         @DGETVIS 02254000
         L     RD,AVISEXIT           GET EXIT ADDRESS          @DGETVIS 02255000
         USING DEBUGFUL,RD           DEBUGFUL BASE POINTER     @DGETVIS 02256000
         L     R1,TDCPUPTR           CPU CONTROL BLOCK         @DGETVIS 02257000
         L     R1,TCPUWRK-TCPUADR(,R1) WORK AREA ADDRESS       @DGETVIS 02258000
         B     DEBUGEXT              EXIT ==================>> @DGETVIS 02259000
AVISEXIT DC    A(DEBUGFUL)           DEBUGEXT BASE ADDRESS     @DGETVIS 02260000
#PARPOOL DC    A(0)                  SUBPOOL IDENTIFIER        @DGETVIS 02261000
         DC    AL2(0)                RESERVED                  @DGETVIS 02262000
#PARTID  DC    AL2(0)                PARTITION ID              @DGETVIS 02263000
#PARBEG  DC    A(0)                  GETVIS BEGIN ADDRESS      @DGETVIS 02264000
#PAREND  DC    A(0)                  LAST BYTE OF GETVIS AREA  @DGETVIS 02265000
#PARJOB  DC    CL8' '                JOB NAME                  @DGETVIS 02266000
#PARNXT  DC    A(0)                  LAST BYTE OF GETVIS + 1   @DGETVIS 02267000
         SPACE 3                                               @DGETVIS 02268000
         DROP  R1                    RELEASE TWDBGADR BASE     @DGETVIS 02269000
         DROP  RA                    RELEASE GVFVHENT BASE     @DGETVIS 02270000
         DROP  RD                    RELEASE DEBUGFUL BASE     @DGETVIS 02271000
         DROP  RE                    RELEASE ROUTINE BASE      @DGETVIS 02272000
         DROP  RF                    RELEASE TRACE AREA HEADER @DGETVIS 02273000
         EJECT ,                                               @D63XXAP 02275000
         AGO   .NOPP100                                                 02275500
         USING TWCPADR,R1        TDWORK AREA BASE              @D63XXAP 02276000
         USING TWDBGADR,R9       DEBUG BUILD AREA BASE         @D63XXAP 02277000
         USING XXESICTL,RA       DEBUG CONTROL TABLE BASE      @D63XXAP 02278000
         USING DEBUGFUL,RD       COMMON CODE BASE POINTER      @D63XXAP 02279000
*        USING INPUT,RF          ENTRY PARAMETER ADDRESS       @D63XXAP 02280000
         USING DBGPP000,RE       ROUTINE BASE POINTER          @D63XXAP 02281000
DBGPP000 DS    0H'0'             PROTECTION CHECK PROCESS      @D63XXAP 02282000
         B     DBGPP005        0 ENTERED FROM PROTECTION CHECK @D63XXAP 02283000
         B     DBGPP100        4 SUCCESSFUL PAGE PROTECT RETURN@D63XXAP 02284000
DBGPP005 TM    XXESIFL1,XXESDOPP+XXESDOAP PROTECTION SET+ACTIVE@D63XXAP 02285000
         BZ    DEBUGB30          NO,  =======================> @D63XXAP 02286000
         BM    DBGPP200          SET, BUT INACTIVE             @D63XXAP 02287000
         MVC   XXEXINST(6),DBGPPXEX INITIALIZE INSTRUCTION FLD.@D63XXAP 02288000
         MVC   XXRETPSW(8),PCOLDP SAVE RETURN PSW              @D63XXAP 02289000
         SLR   RB,RB             CLEAR REGISTER                @D63XXAP 02290000
         IC    RB,PGMILC         GET INTERRUPTION LENGTH CODE  @D63XXAP 02291000
         L     R7,PCKADR         FAILING INSTRUCTION ADDRESS   @D63XXAP 02292000
         SLR   R7,RB             INSTRUCTION ADDRESS           @D63XXAP 02293000
         BCTR  RB,0              PROVIDE FOR EXECUTE           @D63XXAP 02294000
         EX    RB,DBGPPXMV       MOVE THE INSTRUCTION          @D63XXAP 02295000
DBGPP010 MVC   DBGOFFS+2(2),2(R7) SAVE OPERAND ADDRESS         @D63XXAP 02296000
         NC    DBGOFFS(4),PDISPMSK JUST LEAVE THE OFFSET       @D63XXAP 02297000
         SLR   RB,RB             CLEAR REGISTER                @D63XXAP 02298000
         CLI   0(R7),X'40'       IS THIS AN RX FORMAT INSTR.   @D63XXAP 02299000
         BNL   DBGPP025          YES, COULD BE                 @D63XXAP 02300000
         XC    DBGOFFS+2(2),DBGOFFS CLEAR OPERAND INFORMATION  @D63XXAP 02301000
         IC    RB,1(,R7)         GET RR INFORMATION            @D63XXAP 02302000
         SRL   RB,4              LEAVE TARGET REGISTER ONLY    @D63XXAP 02303000
DBGPP015 SH    RB,H8             REGISTER 0-7 BEING USED       @D63XXAP 02304000
         SH    RB,H1             REGISTER 0-8 BEING USED       @D63XXAP 02305000
         BNM   DBGPP020          NO,                           @D63XXAP 02306000
         LA    RB,16(,RB)        PROPER REGISTER POSITION      @D63XXAP 02307000
DBGPP020 SLL   RB,2              MULTIPLY WITH FOUR            @D63XXAP 02308000
         LA    RB,XXERA(RB)      POINT TO USERS REGISTER       @D63XXAP 02309000
         L     RB,0(,RB)         RR OR RX ADDRESS              @D63XXAP 02310000
         B     DBGPP040                                        @D63XXAP 02311000
DBGPP025 CLI   0(R7),X'80'       IS THIS AN RX FORMAT INSTR.   @D63XXAP 02312000
         BNL   DBGPP040          NO,                           @D63XXAP 02313000
         IC    RB,1(,R7)         GET INDEX REGISTER            @D63XXAP 02314000
         N     RB,F15            PURGE ALL EXCEPT INDEX REG    @D63XXAP 02315000
         LTR   RB,RB             INDEX REGISTER GIVEN          @D63XXAP 02316000
         BNZ   DBGPP015          YES,                          @D63XXAP 02317000
DBGPP040 SLR   RC,RC             CLEAR REGISTER                @D63XXAP 02318000
         CLI   0(R7),X'40'       IS THIS RR INSTRUCTION        @D63XXAP 02319000
         BL    DBGPP055          YES,                          @D63XXAP 02320000
         IC    RC,2(,R7)         GET TARGET BASE INFO          @D63XXAP 02321000
         SRL   RC,4              PURGE ALL EXCEPT BASE REG     @D63XXAP 02322000
         LTR   RC,RC             IS BASE R0 USED               @D63XXAP 02323000
         BZ    DBGPP050          YES, IT WAS R0                @D63XXAP 02324000
         SH    RC,H8             REGISTER 1-8 BEING USED       @D63XXAP 02325000
         SH    RC,H1             REGISTER 1-8 BEING USED       @D63XXAP 02326000
         BNM   DBGPP045          NO,                           @D63XXAP 02327000
         LA    RC,16(,RC)        PROPER REGISTER POSITION      @D63XXAP 02328000
DBGPP045 SLL   RC,2              MULTIPLY WITH FOUR            @D63XXAP 02329000
         LA    RC,XXERA(RC)      POINT TO USERS REGISTER       @D63XXAP 02330000
         L     RC,0(,RC)         TARGET ADDRESS BASE           @D63XXAP 02331000
DBGPP050 A     RC,DBGOFFS        ADD THE OFFSET                @D63XXAP 02332000
DBGPP055 ALR   RC,RB             ADD INDEX REGISTER            @D63XXAP 02333000
         CLI   0(R7),X'44'       IS THIS AN EXECUTE INSTRUCTION@D63XXAP 02334000
         BNE   DBGPP060          NO,                           @D63XXAP 02335000
         LR    R7,RC             COPY TARGET INSTRUCTION ADDR. @D63XXAP 02336000
         B     DBGPP010          TRY IT ALL OVER AGAIN         @D63XXAP 02337000
DBGPP060 L     R8,XXESISTR-XXESIMAP+XXESISTP+32 PAGE PROTECTED @DAOM092 02338000
         LR    RB,RC             COPY TARGET ADDRESS           @D63XXAP 02339000
         N     RB,PADDRMSK       FORCE LOWER PAGE BOUNDARY     @D63XXAP 02340000
         CLR   RB,R8             IS THIS OUR ADDRESS           @D63XXAP 02341000
         BL    DEBUGB30          NO,  =======================> @D63XXAP 02342000
         BE    DBGPP065          YES,                          @D63XXAP 02343000
         ICM   R8,15,XXESISTR-XXESIMAP+XXESISTP+36 NEXT PAGE   @DAOM092 02344000
         BZ    DEBUGB30          NO,  =======================> @D63XXAP 02345000
         CLR   RB,R8             IS IT WITHIN OUR 2ND PAGE     @D63XXAP 02346000
         BH    DEBUGB30          NO,  =======================> @D63XXAP 02347000
DBGPP065 SLR   R0,R0             FORCE PROTECTION TO BE RESET  @D63XXAP 02348000
         BAL   RC,DBGPPROT       FREE THE PAGES                @D63XXAP 02349000
*SGLINK  DBGPPROT,INPUT=(R0,R4,RA,RC,RD),WORK=(R4,R5,R8,R9,RE) @D63XXAP 02350000
DBGPP070 NI    XXESIFL1,XFF-XXESDOAP PROTECTION IS INACTIVE    @D63XXAP 02351000
         LA    RD,XXEXINST       ASSUME 24-BIT ADDRESSING      @D63XXAP 02352000
         NI    PCOLDP+1,XFF-X'01' FORCE SUPERVISOR STATE       @D63XXAP 02353000
         TM    PCKADR,X'80'      IN 31-BIT MODE                @D63XXAP 02354000
         BZ    DBGPP075          NO,                           @D63XXAP 02355000
         O     RD,BIT0OMSK       FORCE 31-BIT ADDRESSING       @D63XXAP 02356000
DBGPP075 ST    RD,PCKADR         NEW INSTRUCTION ADDRESS       @D63XXAP 02357000
         LM    R9,R8,XXERA       RESTORE USERS REGISTERS       @D63XXAP 02358000
         DROP  RE                RELEASE DBGPP000  BASE        @D63XXAP 02359000
         NI    PCKFLAG1,XFF-APINDIC RESET LOOP CONTROL FLAG    @D63XXAP 02360000
         NI    PCOLDP,DISABLE    DISABLE FOR INTERRUPTS        @D63XXAP 02361000
         LPSW  PCOLDP                 =====================>>> @D63XXAP 02362000
         DROP  RA                RELEASE XXESICTL BASE         @D63XXAP 02363000
         SPACE 3                                               @D63XXAP 02364000
         USING DEBUGFUL,RD       DEBUGFUL BASE POINTER         @D63XXAP 02365000
         USING DBGPP000,RE       DBGPP000 BASE POINTER         @D63XXAP 02366000
         USING XXESICTL,RA       EVENT ENTRY MAP               @D63XXAP 02367000
DBGPP100 DS    0H'0'             PAGE UNPROTECTED ENTRY        @D63XXAP 02368000
         LA    RA,XXESISTP       LOAD STOP ENTRY ADDRESS       @D63XXAP 02369000
         USING XXESIMAP,RA       STOP ENTRY BASE ADDRESS       @D63XXAP 02370000
         LR    R6,RE             SAVE DGBPP000 BASE            @D63XXAP 02371000
         DROP  RE                RELEASE DBGPP000 BASE         @D63XXAP 02372000
         BAL   RE,XXCOMSUB       CHECK FOR STOP MATCH          @D63XXAP 02373000
         USING *,RE              TEMP BASE                     @D63XXAP 02374000
         B     DBGPP105       0  NO CHANGE                     @D63XXAP 02375000
         B     DBGPP110       4  THERE WAS A CHANGE            @D63XXAP 02376000
DBGPP105 LR    RE,R6             RESTORE DBGPP000 BASE         @D63XXAP 02377000
         USING DBGPP000,RE       DBGPP000 BASE POINTER         @D63XXAP 02378000
         B     DBGPP120          THERE WAS NO CHANGE           @D63XXAP 02379000
         DROP  RE                RELEASE DBGPP000 BASE         @D63XXAP 02380000
DBGPP110 LR    RE,R6             RESTORE DBGPP000 BASE         @D63XXAP 02381000
         USING DBGPP000,RE       DBGPP000 BASE POINTER         @D63XXAP 02382000
         MVC   PCOLDP(8),XXRETPSW THIS IS THE CULPRIT          @D63XXAP 02383000
     NI XXESIFL1,XFF-XXESDOAP-XXESDOPP RESET PROTECTION        @D63XXAP 02384000
     XC XXESIADR-XXESIMAP+XXESISTP+32(12),XXESIADR-XXESIMAP+XXESISTP+32 02385000
         B     XXCOM015          HALT =======================> @D63XXAP 02386000
DBGPP120 LR    RE,R6             RESTORE DBGPP000 BASE         @D63XXAP 02387000
         USING DBGPP000,RE       DBGPP000 BASE POINTER         @D63XXAP 02388000
         MVC   PCOPSW(8),DBGPPPCO RESTORE PC-OLD PSW           @D63XXAP 02389000
         MVC   PGMINF(8),DBGPPPCI RESTORE INTERRUPT INFO       @D63XXAP 02390000
         LA    RA,XXESICTL       POINT TO DEBUG CONTROL TABLE  @D63XXAP 02391000
         LA    R0,1              SET PROT BIT ON               @D63XXAP 02392000
         BAL   RC,DBGPPROT       PROTECT THE PAGES             @D63XXAP 02393000
*SGLINK  DBGPPROT,INPUT=(R0,R4,RA,RC,RD),WORK=(R4,R5,R8,R9,RE) @D63XXAP 02394000
         OI    XXESIFL1,XXESDOAP PROTECTION IS ACTIVE          @D63XXAP 02395000
         LM    R9,R8,XXERA       RESTORE PROG.-CHECK REGS      @D63XXAP 02396000
         DROP  RA                RELEASE XXESICTL BASE         @D63XXAP 02397000
         DROP  RD                RELEASE DEBUGFUL BASE         @D63XXAP 02398000
         DROP  RE                RELEASE DBGPP000 BASE         @D63XXAP 02399000
         NI    PCKFLAG1,XFF-APINDIC RESET LOOP CONTROL FLAG    @D63XXAP 02400000
         LPSW  XXRETPSW               =====================>>> @D63XXAP 02401000
         SPACE 3                                                        02402000
         USING XXESICTL,RA       EVENT ENTRY MAP               @D63XXAP 02403000
         USING DEBUGFUL,RD       DEBUGFUL BASE POINTER         @D63XXAP 02404000
         USING DBGPP000,RE       DBGPP000 BASE POINTER         @D63XXAP 02405000
DBGPP200 LA    R0,1              SET PROT BIT ON               @D63XXAP 02406000
         BAL   RC,DBGPPROT       PROTECT THE PAGES             @D63XXAP 02407000
*SGLINK  DBGPPROT,INPUT=(R0,R4,RA,RC,RD),WORK=(R4,R5,R8,R9,RE) @D63XXAP 02408000
DBGPP210 OI    XXESIFL1,XXESDOAP PROTECTION IS ACTIVE          @D63XXAP 02409000
         LA    R9,TWDEBUGS       ADDRESS OF CPU SPECIFIC DEBUG @D63XXAP 02410000
         USING TWDBGADR,R9       DEBUG BUILD AREA BASE         @D63XXAP 02411000
         B     DEBUGB30               =======================> @D63XXAP 02412000
         DROP  RA                RELEASE XXESICTL BASE         @D63XXAP 02413000
         DROP  RD                RELEASE DEBUGFUL BASE         @D63XXAP 02414000
         SPACE 3                                               @D63XXAP 02415000
         USING XXESICTL,RA       EVENT ENTRY MAP               @D63XXAP 02416000
         USING DEBUGFUL,RD       DEBUGFUL BASE POINTER         @D63XXAP 02417000
*SGLINK  DBGPPROT,INPUT=(R0,R4,RC,RD),WORK=(R4,R5,R8,R9,RE)    @D63XXAP 02418000
DBGPPROT STM   RC,RE,DBGPPRGS    SAVE COMMON BASE              @D63XXAP 02419000
         LR    RC,RE             SAVE BASE                     @D63XXAP 02420000
         DROP  RD                RELEASE DEBUGFUL BASE         @D63XXAP 02421000
         DROP  RE                RELEASE DBGPP000 BASE         @D63XXAP 02422000
         USING DBGPP000,RC       SUBROUTINE BASE               @D63XXAP 02423000
         L     R4,XXESIADR-XXESIMAP+XXESISTP+32 GET SCB ADDR.  @DAOM092 02424000
         L     RD,XXESISTR-XXESIMAP+XXESISTP+32 PAGE ADDRESS   @DAOM092 02425000
         L     R9,APMGMDAT       BASE ADDRESS OF SGPDATA       @D63XXAP 02426000
         L     R9,APBITFNC-PMGMDATA(R9) SUBROUTINE BASE        @D63XXAP 02427000
         BASSM RE,R9             SET PROT BIT ON               @D63XXAP 02428000
*SGLINK  PBITPROT,INPUT=(R0,R4,R9,RD,RE),WORK=(R4,R5,R8,RD)    @D63XXAP 02429000
         ICM   RD,15,XXESISTR-XXESIMAP+XXESISTP+36 SECOND PAGE @DAOM092 02430000
         BZ    DBGPPR10          NO,                           @D63XXAP 02431000
         L     R4,XXESIADR-XXESIMAP+XXESISTP+32 GET SCB ADDR.  @DAOM092 02432000
         BASSM RE,R9             SET PROT BIT ON               @D63XXAP 02433000
*SGLINK  PBITPROT,INPUT=(R0,R4,R9,RD,RE),WORK=(R4,R5,R8,RD)    @D63XXAP 02434000
DBGPPR10 LM    RC,RE,DBGPPRGS    RELOAD COMMON BASE ADDRESS    @D63XXAP 02435000
         DROP  RC                RELEASE TEMP BASE             @D63XXAP 02436000
         BR    RC                RETURN======================> @D63XXAP 02437000
         DROP  RA                RELEASE XXESICTL BASE         @D63XXAP 02438000
DBGPPRGS DC    3F'0'             COMMON BASE SAVE AREA         @D63XXAP 02439000
         SPACE 3                                               @D63XXAP 02440000
DBGPPXEX DC    XL6'070007000700' EXECUTE INSTRUCTION           @D63XXAP 02441000
DBGPPXMV MVC   XXEXINST(0),0(R7) MOVE INSTRUCTION TO LOW CORE  @D63XXAP 02442000
DBGOFFS  DC    F'0'              OFFSET SAVE AREA              @D63XXAP 02443000
DBGPPPCO DC    XL8'00'           LAST PROGRAM CHECK PSW        @D63XXAP 02444000
DBGPPPCI DC    XL8'00'           LAST PROGRAM CHECK INFO       @D63XXAP 02445000
         SPACE 3                                               @D63XXAP 02446000
*        DROP  RF                RELEASE PARAMETER BASE        @D63XXAP 02446500
         DROP  R1                RELEASE TDWORK AREA BASE      @D63XXAP 02447000
         DROP  R9                RELEASE DEBUG BUILD AREA BASE @D63XXAP 02448000
.NOPP100 ANOP                                                           02449990
XXSYSTN  DS    0H                                              @D36ZDOW 02451000
         DC    C'----'                                         @D36ZDOW 02452000
         DC    C'-SNS'           01                            @D36ZDOW 02453000
         DC    C'-DSK'           02                            @D36ZDOW 02454000
         DC    C'-RAS'           03                            @D36ZDOW 02455000
         DC    C'-PMR'           04                            @D36ZDOW 02456000
         DC    C'-   '           05                            @D36ZDOW 02457000
         DC    C'-PGN'           06                            @D36ZDOW 02458000
         DC    C'-FCH'           07                            @D36ZDOW 02459000
         DC    C'-DIR'           08                            @D36ZDOW 02460000
         DC    C'-VTA'           09                            @D66ADAP 02461000
         DC    C'-AOM'           0A                            @D66ADAP 02462000
         DC    C'-ERP'           0B                            @D36ZDOW 02463000
         DC    C'-LCK'           0C                            @D36ZDOW 02464000
         DC    C'-REC'           0D                            @D68CDOW 02465000
         DC    C'-LOG'           0E                            @D14CDOW 02466000
         DC    C'-SVT'           0F                            @D36ZDOW 02467000
         DC    C'-DSP'           10                            @D51HDOW 02468000
         DC    C'-SPT'           11                            @D51HDOW 02469000
         DC    C'-CST'           12                            @D51HDOW 02470000
         DC    C'-HCF'           13                            @D51HDOW 02471000
         DC    C'-FCP'           14                            @D68CDOW 02472000
         DC    C'-VST'           15                            @D51HDOW 02473000
         DC    C'-VST'           16                            @D51HDOW 02474000
         DC    C'-VST'           17                            @D51HDOW 02475000
         DC    C'-VST'           18                            @D51HDOW 02476000
         DC    C'-VST'           19                            @D51HDOW 02477000
         DC    C'-VST'           1A                            @D51HDOW 02478000
         DC    C'-VST'           1B                            @D51HDOW 02479000
         DC    C'-VST'           1C                            @D51HDOW 02480000
         DC    C'-VST'           1D                            @D51HDOW 02481000
         DC    C'-VST'           1E                            @D51HDOW 02482000
         DC    C'-VST'           1F                            @D51HDOW 02483000
         SPACE 2                                                        02484000
         AIF   (NOT &SGDEBUG).NPRT020                          @D63XXAP 02485000
         PRINT NOGEN                                           @D63XXAP 02486000
.NPRT020 ANOP                                                  @D63XXAP 02487000
         MEND                                                           02488000
