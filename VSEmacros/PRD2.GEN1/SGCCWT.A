         MACRO                                                          00001000
         SGCCWT                                                         00002000
         GBLB  &VSE410      RELEASE CONTROL SWITCH             @D81RDAV 00002300
         GBLB  &VTAM31       VTAM-31 CHANGES                   @DY46396 00002600
***************************************************************         00003000
*                                                             *         00004000
*        LICENSED MATERIALS - PROPERTY OF IBM                 *         00005000
*        THIS MACRO IS "RESTRICTED MATERIALS OF IBM"          *         00006000
*        5686-CF7 (C) COPYRIGHT IBM CORP. 1977, 2004          *         00007000
*        SEE COPYRIGHT INSTRUCTIONS                           *         00008000
*                                                             *         00009000
***************************************************************         00010000
.*                                                                      00011000
.* CHANGE ACTIVITY = AS FOLLOWS                                         00012000
.* NO MORE FAST TRANSLATE FOR SYSTEM TASK REQUESTS             @DA33481 00013000
.* HARDWAITS WITH FASTTR=YES AFTER FREE COPY BLOCK QUEUE EMPTY @DA34984 00014000
.* CCW TRANSLATION SUPPORT FOR CHANNEL TO CHANNEL ADAPTER      @DA35276 00015000
.* 3800-3/8 AND AFP SUPPORT                                    @D21WDRP 00016000
.* SUPPORT OF X'F3' OPCODE FOR NEW DASDS                       @D21ODRP 00017000
.* SUPPORT NEW TAPE DEVICE                       (SPE DY37265) @D21FDRP 00018000
.* HANDLING OF AN INVALID DATA ADDRESS ON A READ BACKWARD CMD  @DA37152 00019000
.* SOFTWARE RE-IPL                                             @D31QDHB 00020000
.* NEW SYSTEM LAYOUT                                           @D51GDRP 00021000
.* 31-BIT REAL AND XA I/O SUPPORT                              @D51HDTP 00022000
.* MORE DEVICES SUPPORT WITH ESA 112                           @D51ODGL 00023000
.* PROCESS FORMAT 1 CCW'S (ALL MODES)                          @D52VDOW 00024000
.* @D52VDOW                                                    @KX40086 00025000
.* TRANSLATION FOR CCW WITH COMMAND CODE X'4B' INCORRECT       @DA41977 00026000
.* ACTIVE COPY BLOCKS IN FREE QUEUE                            @DA41850 00027000
.* REMOVE VM SUPPORT                                           @D61NDOW 00028000
.* SUPPORT AF 3590(TPA) DEVICE                                 @D61SDOW 00029000
.* REMOVE FAST-TRANSLATION                                     @D64YDOW 00030000
.* MORE THAN 255 TASKS                                         @D66ODOW 00031000
.* SUPPORT OF OSAX STATUS MODIFIER COMMANDS                    @DAOM    00032000
.* ACCEPT AND PROCESS 31-BIT CCB'S / CCW'S (VIRT.)             @D67EDAV 00033000
.* ENSURE PROPER CSW FOR XCPR ON PAGE BOUNDARY                 @DY46069 00034000
.* CHANGE WTM TO WRITE MARK IF IT IS LAST CCW AND WTM=NOSYNC   @DY46257 00034690
.*                                                                      00035000
***************************************************************@D348DJR 00036000
         GBLB  &BGDEBUG            DEBUG SUPPORT               @D35CDJR 00037000
         GBLB  &LOLEV              LOAD-LEVELLER MEASUREMENTS  @D35CDJR 00038000
         GBLB  &SGCCWT             FOR SUPPRINT                @D37ZDWK 00039000
         GBLA  &AG1                NUMBER OF PUBS              @D51ODGL 00040000
         SPACE 1                                                        00041000
         AIF   (NOT &BGDEBUG OR NOT &SGCCWT).NPRT010           @D37ZDWK 00042000
         PRINT GEN                                             @D37ZDWK 00043000
         SPACE 1                                                        00044000
.NPRT010 ANOP                                                  @D37ZDWK 00045000
         TITLE 'DOS SUPERVISOR    SGCCWT          C C W - TRANSLATION'  00046000
         DS    0F                                                       00047000
         DC    CL8'SGCCWT  '       MODULE NAME                          00048000
         AIF   (NOT &VSE410).N410000                                    00049550
         DC    CL10'DY46396   '    LAST APAR/DEVELOPMENT CHANGE@DY46396 00049610
         AGO   .COMN000                                                 00049670
.N410000 ANOP                                                           00049730
         DC    CL10'DY46396   '    LAST APAR/DEVELOPMENT CHANGE@DY46396 00049790
.COMN000 ANOP                                                           00049850
         USING CCWTADR,R9          SGCCWT COMMON BASE          @D36IDJR 00050000
CCWTADR  DS    0F                                              @D35CDJR 00051000
ACCBB    DC    A(0)                ADDRESS OF CCB COPY BLOCK QUEUE      00052000
.*       ACCBB HAS TO HAVE OFFSET 0 FROM CCWTADR THIS                   00053000
.*       IS USED BY 'STAND ALONE DUMP'                                  00054000
ABTMTCB  DC    A(BTMTCB-TCBFLAG+TCBADR) PTR(BTAM 2ND TIME TCB) @D36IDJR 00055000
ACCWT2   DC    A(CCWTADR+X'1000')  2ND BASE OF CCW TRANSL.     @D37ADWK 00056000
ACBQADR  DC    A(CBQADR)           ADDR OF BUFFER FRAGMENT TAB.@D51IDOW 00057000
         SPACE 1                                               @D35ADWK 00058000
CCWERA   DS    16F                 SAVE AREA FOR ENTRY REGS.   @D35CDJR 00059000
         TITLE 'DOS SUPERVISOR    SGCCWT          C C W - TRANSLATION  *00060000
               VALIDATE REQUEST'                                        00061000
*********************************************************************** 00062000
*   FUNCTION:                                                           00063000
*        BUILDING REAL CCB AND FORMAT 0 CHANNEL PROGRAM FROM I/O        00064000
*        REQUEST (370 & ESA; REAL & NONREAL) OR COPY CCB AND BUILD      00065000
*        FORMAT 0 CHANNEL PROGRAM FROM FORMAT 1 CHANNEL PROGRAM (VM &   00066000
*        VMESA).                                                        00067000
*                                                                       00068000
*        CCB AND USER SENSE CCW WILL BE COPIED. THE COPY WILL           00069000
*        CONSERVE THE CHANNEL PROGRAM STRUCTURE, BUT IN SOME CASES      00070000
*        TIC COMMANDS WILL BE INSERTED.                                 00071000
*        THE I/O ADDRESS IN A NONREAL PARTITION WILL BE TRANSLATED      00072000
*        INTO CORRESPONDING REAL ADDRESS. AN IDAL WILL BE BUILD IF AN   00073000
*        I/O AREA CROSSES PAGE BOUNDERY (370 AND ESA) OR IF THE DATA    00074000
*        ADDRESS IS LARGER 16M. THE IDAL WILL CONTAIN THE REAL          00075000
*        ADDRESS OF THE I/O AREA. THE IDAL BIT IN THE CORRESPONDING     00076000
*        CCW IS TURNED ON. ALL I/O AREAS NEEDED BY THE CHANNEL PROGRAM  00077000
*        HAVE TO BE IN REAL MEMORY UNTIL THE I/O REQUEST IS FINISHED.   00078000
*        PAGES ARE FIXED (370 AND ESA) AND NO PAGE FAULT WILL OCCUR.    00079000
*        IN THE COPIED CCB THE ADDRESS OF THE VIRTUAL CHANNEL           00080000
*        PROGRAM WILL BE REPLACED BY THE ADDRESS OF COPIED CHANNEL      00081000
*        PROGRAM. ALL VSE I/O ROUTINES WILL WORK ON THE COPY            00082000
*        (ERP, SERVICE TASK ETC)                                        00083000
*                                                                       00084000
*     ENTRY POINTS:                                                     00085000
*        CCWTRANS - SGIOS (EXCP PROCESSING ROUTINE)                     00086000
*        CCWTRBT2 - FROM I/O INT. HANDLER FOR BTAM 2ND TIME             00087000
*                                                                       00088000
*     INPUT:                                                            00089000
*        R1 -  POINTS TO VIRTUAL CCB                                    00090000
*        R3 -  PUB ADDR                                                 00091000
*        R8 -  RETURN ADDRESS                                           00092000
*        R9 -  FIRST BASE ADDRESS                                       00093000
*        RA -  TCB ADDR                                                 00094000
*        RB -  PIB ADDR                                                 00095000
*                                                                       00096000
*     OUTPUT:                                                           00097000
*        R1 -  POINTS TO COPIED CCB                                     00098000
*        R2-R0 UNCHANGED                                                00099000
*                                                                       00100000
*     REGISTER USAGE                                                    00101000
*        R1 -  POINTS TO COPIED CCB                                     00102000
*        R3 -  PUB / WORK                                               00103000
*        R9 -  FIRST BASE                                               00104000
*        R11-  SECOND BASE                                              00105000
*        R15-  TCB POINTER                                              00106000
*                                                                       00107000
*     EXTERNAL REFERENCES:                                              00108000
*        RWAIT   - ROUTINE TO GO INTO WAIT STATUS                       00109000
*                                                                       00110000
*     EXITS NORMAL:                                                     00111000
*        RETURN ADDRESS IN R8                                           00112000
*                                                                       00113000
*     EXITS ERROR:                                                      00114000
*        ERR11   - UNSUPPORTED DEVICE                                   00115000
*        ERR12   - INSUFFICIENT BUFFER SPACE                            00116000
*        ERR13   - CHANNEL PROGRAM IS ABOVE 16 MEG                      00117000
*        ERR14   - PAGE POOL TOO SMALL                                  00118000
*        ERR21   - USER IDAL LIST                                       00119000
*        ERR25   - INVALID ADDRESS                                      00120000
*        HARDWAIT- NOT ENOUGH COPY BUFFERS FOR BTAM 2ND TIME            00121000
*                  TRANSLATION, OR                                      00122000
*                - CORFIXIN SUBROUTINE FINDS PAGE THAT IS TO            00123000
*                  BE FREED IS NOT IN CORE                              00124000
*                                                                       00125000
*     SUBROUTINES:                                                      00126000
*        BLDCCW0                                                        00127000
*        CREAREPL                                                       00128000
*        FIXAREA                                                        00129000
*        GETBLOCK                                                       00130000
*        GETCCW                                                         00131000
*        GETTCB/GETTCB1                                                 00132000
*        LOCATE/LOCATE1                                                 00133000
*        RELBLOCK                                                       00134000
*        TESTIDAL                                                       00135000
*        TESTREPL                                                       00136000
*                                                                       00137000
*     TABLES:                                                           00138000
*        DEVTRTAB  - TRANSLATE TABLE FOR DEVICE TYPE                    00139000
*        DEVLIST   - LIST POINTS                                        00140000
*        DEVL1ST   - TABLE FOR TP STATUS MODIFIER COMMANDS              00141000
*        DEVL2ST   - TABLE FOR DASD STATUS MODIFIER COMMANDS            00142000
*        DEVLXCD   - (X=1,2,...9,) CONTROL COMMANDS WITH DATA           00143000
*        PCBREPQ   - REPLICA QUEUE HEADER       (FAST-TRANSLATE)        00144000
*                                                                       00145000
*********************************************************************** 00146000
         SPACE 1                                                        00147000
* ENTRY FROM I/O INTERRUPT HANDL. FOR BTAM 2ND TIME                     00148000
*                                                                       00149000
CCWTRBT2 DS    0H                                                       00150000
         STM   RE,RF,CCWERA        SAVE ENTRY REGISTERS                 00151000
         AMODESW SET,AMODE=31,WR=(RF) TO 31-BIT MODE           @D67EDAV 00152000
         L     RF,ABTMTCB          POINT TO BTAM TCB                    00153000
         BAL   RE,GETTCB1          INITIALIZE IT                        00154000
*SGLINK  GETTCB1,INPUT=(RE,RF),OUTPUT=(RB,RF)                           00155000
         USING TCBADR,RF           TCB BASE POINTER            @D66CDAP 00156000
         USING CCWTADR+X'1000',RB  CCWTADR SECOND BASE         @D66CDAP 00157000
         B     CCWTR020            JOIN MAIN PATH              @D14ZDWK 00158000
         DROP  RF                  RELEASE TCB BASE            @D66CDAP 00159000
         DROP  RB                  RELEASE CCWTADR 2ND BASE    @D66CDAP 00160000
         SPACE 1                                                        00161000
         AIF   (NOT &VTAM31).NV31010                           @DY46396 00161020
************************************************************** @DY46396 00161040
* ENTRY FROM SVC49 ROUTINE                                     @DY46396 00161060
* ENTRY FROM SVC53 ROUTINE                                     @DY46396 00161080
*                                                              @DY46396 00161100
         USING CCBADR,R1           CCB BASE POINTER            @DY46396 00161120
         USING PUBADR,R3           PUB BASE POINTER            @DY46396 00161140
*SGLINK  CCBVTRAN,INPUT=(R1,R3,R8,R9),OUTPUT=R1                @DY46396 00161160
CCBVTRAN DS    0H                                              @DY46396 00161180
*SGLINK  CCWVTRAN,INPUT=(R1,R3,R8,R9),OUTPUT=R1                @DY46396 00161200
CCWVTRAN EQU   CCBVTRAN                                        @DY46396 00161220
         STM   RE,RF,CCWERA        SAVE ENTRY REGISTERS        @DY46396 00161240
         AMODESW SET,AMODE=31,WR=(RF) TO 31-BIT MODE           @DVTAX31 00161260
         TM    CCBCLS,CCBCOPY      CCB ALREADY COPIED          @DY46396 00161280
         BNO   CCWTR010            NO, TRANSLATE CCB/CCW       @DY46396 00161300
         BAL   RE,GETTCB           GET AND INITIALIZE TCB BLOCK@DY46396 00161320
*SGLINK  GETTCB,INPUT=RE,OUTPUT=(RB,RF)                        @DY46396 00161340
         USING TCBADR,RF           TCB BASE POINTER            @DY46396 00161360
         USING CCWTADR+X'1000',RB  CCWTADR SECOND BASE         @DY46396 00161380
         MVC   DEVTYPE(1),PUBDEVTY MOVE DEV TYPE IN WORKB.2    @DY46396 00161400
         TR    DEVTYPE(1),DEVTRTAB TRANSLATE DEVICE TYPE       @DY46396 00161420
         CLI   DEVTYPE,NORMDEV     NORMAL DEVICE               @DY46396 00161440
         BE    CCWTR073            YES                         @DY46396 00161460
         CLI   DEVTYPE,TUNSP       UNSUPPORTED DEVICE          @DY46396 00161480
         BE    ERROR2              YES, ERROR                  @DY46396 00161500
         CLI   PUBDEVTY,T3725      DEVICE 3725/3745?           @DY46396 00161520
         BE    CCWVTR10            YES                         @DY46396 00161540
         CLI   PUBDEVTY,T3791L     LOCAL SNA CONTROLLER?       @DY46396 00161560
         BNE   CCWTR073            NO,                         @DY46396 00161580
CCWVTR10 LH    R2,DEVWORK          LOAD DISPLACEMENT           @DY46396 00161600
         LA    R2,DEVLIST(R2)      POINT TO THE LIST POINTERS  @DY46396 00161620
         MVC   DEVSTPTR(8),0(R2)   STORE POINTERS TO SPECIAL   @DY46396 00161640
*                                  COMMAND LISTS IN CCWTCB     @DY46396 00161660
         B     CCWTR073            JOIN MAIN PATH              @DY46396 00161680
         DROP  R3                  RELEASE PUB BASE            @DY46396 00161700
         DROP  RF                  RELEASE TCB BASE            @DY46396 00161720
         SPACE 2                                                        00161740
.NV31010 ANOP                                                  @DY46396 00161760
* ENTRY FROM EXCP PROCESSING ROUTINE                                    00162000
*                                                                       00163000
         USING CCBADR,R1           CCB BASE POINTER            @D35CDJR 00164000
         USING PUBADR,R3           PUB BASE POINTER            @D66ADAP 00165000
         USING TCBADR,RA           TCB BASE POINTER            @D66ADAP 00166000
         USING PIBADR,RB           PIB BASE POINTER            @D66ADAP 00167000
CCWTRANS DS    0H                                                       00168000
*SGLINK CCWTRANS,INPUT=(R1,R3,R8,R9,RA,RB),OUTPUT=R1                    00169000
         STM   RE,RF,CCWERA        SAVE ENTRY REGISTERS        @D67EDAV 00170000
         AMODESW SET,AMODE=31,WR=(RF) TO 31-BIT MODE           @D67EDAV 00171000
         DC    X'47000000'         91801006 TM CCBCLS,XCPR              00172000
         DC    X'0700'             0718     BOR R8                      00173000
         TM    CCBCLS,XCPR         EXCP-REAL REQUEST           @D67EDAV 00174000
         BNO   CCWTR005            NO, CHECK BOUNDARIES        @D67XXAV 00175000
         TM    CCBBY3,APPEN        CE APPENDAGE PRESENT        @D67EDAV 00176000
         BNO   CCWTR003            NO, CHECK FURTHER           @D68EDAV 00177000
         CLI   PUBDEVTY,TFBA       FBA DEVICE?                 @D68XXAV 00178000
         L     R6,DISPAD           GET DISPATCHER BASE         @D68XXAV 00179000
         USING DISP,R6                                         @D68XXAV 00180000
         BE    ERR21               YES, ILLEGAL SVC            @D68XXAV 00181000
         DROP  R6                  DROP DISP                   @D68XXAV 00182000
         B     XCWTREND            DON'T TRANSLATE             @D68XXAV 00183000
CCWTR003 TM    SYSFLAG2,IPLBIT     IPL PROCESSING              @D67EDAV 00184000
         BO    XCWTREND            YES, DON'T TRANSLATE        @D67EDAV 00185000
         L     RF,IJBSMCOM         ACCESS SPACE MANAGMENT AREA @D67EDAV 00186000
         USING SMCOM,RF            SPACE MANAGEMENT BASE PNTR. @D67EDAV 00187000
         CL    R1,SMCSUPND         CCB IN SUPERVISOR AREA      @D67EDAV 00188000
         BNH   XCWTREND            YES, DON'T TRANSLATE        @D67EDAV 00189000
         DROP  RF                                                       00190000
CCWTR005 TM    CCBBY3,CCBCCWF1     FORMAT 1 CCW USED           @KD40263 00191000
         BO    CCWTR010            YES, DO TRANSLATION         @KD40263 00192000
         L     RF,TCBSAVE          USERS SAVE AREA BASE ADDRESS@D52VDOW 00193000
         USING SVEARA,RF           USER SAVE AREA              @D52VDOW 00194000
         L     RE,SVEPSW2          ADDR FROM SVC OLD PSW       @D52VDOW 00195000
         DROP  RF                  RELEASE USER SAVE AREA BASE @D52VDOW 00196000
         N     RE,BIT0OFF          RESET HIGH ORDER BIT        @D52VDOW 00197000
         L     RF,IJBSMCOM         ACCESS SPACE MANAGMENT AREA @D52VDOW 00198000
         USING SMCOM,RF            SPACE MANAGEMENT BASE PNTR. @D52VDOW 00199000
.*       REAL PARTITION REQUESTS (EXEC REAL)                            00200000
.*       AND SYSTEM TASK REQUESTS                                       00201000
.*       ARE NORMALLY NOT TRANSLATED UNLESS THEY ARE ISSUED IN          00202000
.*       SVA LOW OR SVA HIGH                                            00203000
         CL    RE,SMCSVA           REQUEST FROM SVA LOW/HIGH   @D52VDOW 00204000
         BL    CCWTRTST            NO, REQ IS FROM SUPVR AREA  @D52VDOW 00205000
         CL    RE,SMCESVA          REALLY IN SVA LOW           @D52VDOW 00206000
         BNH   CCWTR010            YES, TRANSLATE              @D52VDOW 00207000
         CL    RE,SMCSVA31         REQUEST FROM BELOW SVA HIGH @KD40263 00208000
         BL    CCWTRTST            YES, REQ IS FROM PARTITION  @KD40263 00209000
         CL    RE,SMCESV31         REQUEST REALLY FROM SVA HIGH@KD40263 00210000
         BNH   CCWTR010            YES, TRANSLATE              @KD40263 00211000
         DROP  RF                  RELEASE SMCOM BASE          @KD40263 00212000
CCWTRTST CLC   TID,ARTIDH          IS IT A SYSTEM TASK REQUEST @D52VDOW 00213000
         BNL   CCWTR010            NO, TRANSLATE               @D67EDAV 00214000
XCWTREND DS    0H                                              @D67EDAV 00215000
         LM    RE,RF,CCWERA        RESTORE REGISTER            @D52VDOW 00216000
         BSM   0,R8                RETURN WITHOUT TRANSLATION  @D67EDAV 00217000
         SPACE 1                                                        00218000
         DROP  RA                  RELEASE TCB BASE POINTER    @D66ADAP 00219000
         DROP  RB                  RELEASE PIB BASE            @D66ADAP 00220000
         TITLE 'DOS SUPERVISOR    SGCCWT          C C W - TRANSLATION  *00221000
               CCWTRANS ROUTINE'                                        00222000
CCWTR010 DS    0H                  GET TCB BLOCK AND INITIALIZE IT      00223000
.*       TEST DEVICE TYPE FOR SPECIAL DEVICE (STATUS MODIFIER           00224000
.*       COMMANDS AND/OR CONTROL COMMANDS WITH DATA ADDRESSES).         00225000
         BAL   RE,GETTCB           GET TCB BLOCK AND INITIALIZE IT      00226000
*SGLINK  GETTCB,INPUT=RE,OUTPUT=(RB,RF)                                 00227000
         USING TCBADR,RF           TCB BASE POINTER            @D36IDJR 00228000
         USING CCWTADR+X'1000',RB  CCWTADR SECOND BASE         @D52VDOW 00229000
CCWTR020 MVC   DEVTYPE(1),PUBDEVTY MOVE DEV TYPE IN WORKB.2    @D14ZDWK 00230000
         TR    DEVTYPE(1),DEVTRTAB TRANSLATE DEVICE TYPE                00231000
         CLI   DEVTYPE,NORMDEV     NORMAL DEVICE                        00232000
         BE    CCWTR050            YES                         @D14ZDWK 00233000
         CLI   DEVTYPE,TUNSP       UNSUPPORTED DEVICE          @D36EDWK 00234000
         BE    ERROR2              YES, ERROR                           00235000
         CLI   PUBDEVTY,T1288      DEVICE 1287/1288            @D37ZDWK 00236000
         BE    CCWTR030            YES                         @D14ZDWK 00237000
         CLI   PUBDEVTY,T3890      DOCUMENT READER 3890        @D37ZDWK 00238000
         BNE   CCWTR040            NO, SKIP                    @D14ZDWK 00239000
         DROP  R3                  RELEASE PUB BASE            @D37ZDWK 00240000
CCWTR030 OI    TCBFLAG,CHKSTM      INDICATE STAT.MOD.CHECKING  @D14ZDWK 00241000
CCWTR040 LH    R2,DEVWORK          LOAD DISPLACEMENT           @D14ZDWK 00242000
         LA    R2,DEVLIST(R2)      POINT TO THE LIST POINTERS           00243000
         MVC   DEVSTPTR(8),0(R2)   STORE POINTERS TO SPECIAL            00244000
*                                  COMMAND LISTS IN CCWTCB              00245000
         SPACE 2                                                        00246000
*        COPY VIRTUAL CCB. INITIALIZE TRANSLATION PROCESS.              00247000
         SPACE                                                          00248000
CCWTR050 DS    0H                                                       00249000
         TM    CCBCLS,BTAM+CCBCOPY BTAM RETRANSLATION REQUEST  @D14ZDWK 00250000
         BZ    CCWREST             NO                          @D35CDJR 00251000
         BM    CCWTR070            BTAM INITIAL REQUEST        @D14ZDWK 00252000
         MVC   ADBTAMCB,TBTAMCB    TOTAL NUMBER OF COPY BLOCKS          00253000
         L     R4,CCBACB           POINT TO CCW COPY BLOCK QUEUE        00254000
         BAL   R3,RELBLOCK         RELEASE CCW COPY BLOCKS              00255000
*SGLINK  RELBLOCK INPUT=(R3,R4),WORK=R14                                00256000
         SR    R2,R2               CLEAR R2                    @D35CDJR 00257000
         ICM   R4,15,CCBICB        IDAL BLOCK ALLOCATED        @D37ADWK 00258000
         BZ    CCWTR060            NO,                         @D14ZDWK 00259000
         BAL   R3,RELBLOCK         RELEASE IDAL BLOCKS         @D37ADWK 00260000
*SGLINK  RELBLOCK INPUT=(R3,R4),WORK=R14                                00261000
         ST    R2,CCBICB           INDICATE NO IDAL BLOCKS     @D35CDJR 00262000
CCWTR060 ST    R2,CCBACB           INDICATE NO COPY BLOCKS     @D14ZDWK 00263000
         L     R2,CCBVA            VIRTUAL CCB ADDRESS         @D35CDJR 00264000
         MVC   CCBCCW+1(3),CCBCCW+1-CCBADR(R2) NEW CCW ADDRESS @D35CDJR 00265000
         B     CCWTR080            JOIN MAIN LINE              @D14ZDWK 00266000
         SPACE 2                                               @D35CDJR 00267000
CCWTR070 MVC   ADBTAMCB,CCBCNT+1   ADDITIONAL COPY-BLOCK COUNT @D14ZDWK 00268000
         EJECT ,                                               @D35CDJR 00269000
CCWREST  EQU   *                   AT THIS POINT CCWTRANSL IS  @D32XDRP 00270000
***                                RESTAR.AFTER IT WAS SET BACK@D32XDRP 00271000
***                                R1 POINTS TO VIRTUAL CCB             00272000
***                                RF POINTS TO CCWTCB                  00273000
         AIF   (NOT &LOLEV).NLOLEV1                            @DF02306 00274000
         L     R3,SVC0#            INCREASE NUMBER OF                   00275000
         AL    R3,F1               TRANSLATED                  @KD40263 00276000
         ST    R3,SVC0#            SVC 0                                00277000
.NLOLEV1 ANOP                                                           00278000
         BAL   R3,GETBLOCK         GET CCB COPY BLOCK                   00279000
         LR    R2,R1               LET R2 POINT TO VIRT. CCB   @D35CDJR 00280000
         LR    R1,R4               LET R1 POINT TO CCB COPY BL @D35CDJR 00281000
         MVC   CCBTID,TID          MOVE TID TO CCB COPY BLOCK  @D36IDJR 00282000
         MVC   CCBNEXT+1(3),ACCBB+1 ENQ. CCB ON TOP OF ACT.    @D37ADWK 00283000
         ST    R1,ACCBB            CCB QUEUE                   @D35CDJR 00284000
         ST    R2,CCBVA            SAVE ADDR. OF VIRTUAL CCB   @D35CDJR 00285000
         ST    R1,TCBACCB          SAVE ADDR. OF COPY CCB      @D35CDJR 00286000
         MVC   CCBADR(16),0(R2)    COPY CCB                    @D66ADAP 00287000
         OI    CCBCLS,CCBCOPY      MARK CCB AS COPIED ONE               00288000
CCWTR073 ICM   R3,15,CCBCCW        GET CCW ADDRESS             @DY46396 00288300
         BZ    CCWTR075            NOT SET YET                 @DY46396 00288600
         TM    CCBCLS,XCPR         EXCP-REAL REQUEST           @D67EDAV 00289000
         BNO   CCWTR075            NO, SKIP VIRTUAL CCW SETUP  @D67EDAV 00290000
         DROP  RF,R9               FREE RF,R9 FOR VIRTAD USAGE @D67EDAV 00291000
         LR    R8,R9               SAVE R9                     @D67EDAV 00293000
         LR    R9,R3               LOAD REAL CCW ADDRESS       @DY46396 00294290
         LR    R3,RF               SAVE RF                     @D67EDAV 00294580
*SGLINK  VIRTAD,INPUT=(R6,R9),OUTPUT=RF,WORK=R9                @D67EDAV 00295000
         BAS   R6,VIRTAD           TRANSLATE TO VIRTUAL        @D67EDAV 00296000
         ST    RF,CCBCCW           SETUP CCB WITH VIRTUAL CCW  @D67EDAV 00297000
         LR    RF,R3               REESTABLISH TCB REGISTER    @D67EDAV 00298000
         LR    R9,R8               REESTABLISH SGCCWT BASE     @D67EDAV 00299000
         USING TCBADR,RF                                       @D67EDAV 00300000
         USING CCWTADR,R9                                      @D67EDAV 00301000
CCWTR075 DS    0H                  CBB SETUP WITH VIRTUAL CCW  @D67EDAV 00302000
         LA    R3,CCBXINF          GET ADDRESS OF FIXLIST      @D14ADWK 00303000
         ST    R3,CCWTFREP         SET FREE ENTRY POINTER      @D14ADWK 00304000
         MVI   CCBXPTR,EOCL        SET END OF FIXLIST          @D14ADWK 00305000
CCWTR080 MVI   UBTAMCB,ZERO        INIT VALUE FOR USED COPYBLOC@D14ZDWK 00306000
         ICM   R3,15,CCBCCW        CCW ADDRESS PRESENT?        @DY46396 00306300
         BZ    CCWTR510            NO, DONE             ===>   @DY46396 00306600
         TM    CCBBY3,USENSE       TEST FOR USER SENSE CCW     @DF00882 00307000
         BZ    CCWTR100            NOT AVAILABLE               @D14ZDWK 00308000
         TM    CCBCLS,CCBIORB      IORB WITH EXTENSION?        @D35CDJR 00309000
         BO    CCWTR100            YES, DON'T COPY EXTENSION   @D14ZDWK 00310000
         MVC   CCBSENS,CCBSENS-CCBADR(R2) COPY USER SENSE CCW  @D35CDJR 00311000
PCKADR4  EQU   *                   ADDR. FOR PROGR. CHECK HANDLER       00312000
         LA    R5,CCBSENS          LOAD ADDRESS OF SENSE CCW            00313000
         BAL   R3,BLDCCW0          TRANSLATE CCW FORMAT 1 TO 0 @D52VDOW 00314000
*SGLINK BLDCCW0 INPUT=(R1,R3,R5),OUTPUT=RE,WORK=RD                      00315000
         OI    TCBFLAG,TCBRDS      INDICATE SENSE COMMAND      @D52VDOW 00316000
         BAL   R3,TESTIDAL         GOTO TESTIDAL TO TRANSLATE  @D52VDOW 00317000
*                                  DATA ADDR. OR BUILD IDAL    @D35CDJR 00318000
*SGLINK TESTIDAL INPUT=(R1,R3,R5,RE,RF),WORK=(RC,RD,RE)                 00319000
         NI    TCBFLAG,255-TCBRDS  RESET SENSE CMD INDICATION  @D52VDOW 00320000
         SPACE 2                                               @D35CDJR 00321000
CCWTR100 DS    0H                                                       00322000
         BAL   R3,GETBLOCK         GET 1ST CCW COPY BLOCK      @D14ZDWK 00323000
         ST    R4,CCBACB           ENQUEUE IN CCW COPY BLOCK QUEUE      00324000
         USING CCWBLOCK,R4         SET BASE FOR CCW COPY BLOCK @D35CDJR 00325000
         MVI   TIC1,EOCL           INITIALIZE                           00326000
         MVI   TIC2,EOCL+TIC                  CCW COPY BLOCK            00327000
         L     R6,CCBCCW           POINT TO 1ST VIRTUAL CCW    @D35CDJR 00328000
         TM    CCBBY3,CCWABOVE     USING CCW > 16M             @D68ADAP 00329000
         BNZ   CCWTR103            YES,                        @D67EDAV 00330000
         N     R6,ADDRMSK          CLEAR HIGH ORDER BYTE       @D67EDAV 00331000
         B     CCWTR106                                        @D67EDAV 00332000
CCWTR103 DS    0H                  CCW ABOVE 16M               @D67EDAV 00333000
         N     R6,ADDRMASK         CLEAR HIGH ORDER BIT        @D67EDAV 00334000
CCWTR106 DS    0H                                              @D67EDAV 00335000
         ST    R6,VBA              SET VIRTUAL BLOCK ADDRESS (VBA)      00336000
         STCM  R4,15,CCBCCW        STORE ADDRESS OF COPY BLOCK @DVTAX31 00337590
*                                  IN CCWADR OF COPIED CCB              00338180
         LR    R5,R4               POINT TO 1ST CCW COPY LOCATION       00339000
         EJECT                                                          00340000
*        SCANNING THROUGH THE VIRTUAL CHANNEL PROGRAM.IF A STATUS MOD.  00341000
*        COMMAND WITH A FOLLOWING TIC IS FOUND A NEW ENTRY FOR A LINE   00342000
*        CHAIN IS STACKED.THIS STACK IS HANDLED BY FIFO.IF A STATUS     00343000
*        MOD.COMMAND WILL BE COPIED INTO THE LAST COPY LOCATION OF A    00344000
*        COPY BLOCK,AN ENTRY FOR A BLOCK END IS STACKED.THIS IS A FIFO  00345000
*        STACK TOO.A NEW SCAN WILL START AT A POINT INDICATED BY AN     00346000
*        ENTRY FROM THE BLOCK END STACK WHEN ALL ENTRIES FROM THE LINE  00347000
*        STACK ARE PROCESSED.                                           00348000
         SPACE                                                          00349000
         USING CCWADR,R5           SET BASE FOR COPIED CCW     @D35CDJR 00350000
         USING VCCWADR,R6          SET BASE FOR VIRTUAL CCW    @D35CDJR 00351000
CCWTR110 BAL   R2,GETCCW           COPY CCW                    @D14ZDWK 00352000
*SGLINK GETCCW INPUT=(R1,R2,R5,R6,RF),WORK=(R3,R8,RA,RC,RD,RE)          00353000
         B     CCWTR210            TIC COMMAND COPIED          @D14ZDWK 00354000
*        B     *+4                 NO TIC COMMAND                       00355000
CCWTR120 DS    0H                                                       00356000
         TM    CCWCHAIN,DC+CC      DATA OR COMMAND CHAINING    @D14ZDWK 00357000
         BNZ   CCWTR130            YES                         @DY46257 00358060
         TM    IJBAIDID,X'40'      WTM=NOSYNC BUFFERED WTM?    @DY46257 00358090
         BZ    CCWTR200            NO                          @DY46257 00358120
         CLI   CCWCODE,WTM         WTM?                        @DY46257 00358150
         BNE   CCWTR200            NO                          @DY46257 00358180
         L     R7,SAVEREG2+4       GET PUB ADDRESS             @DY46257 00358210
         USING PUBADR,R7           PUB BASE                    @DY46257 00358240
         CLI   PUBDEVTY,TTPA       TPA?                        @DY46257 00358270
         BNE   CCWTR200            NO                          @DY46257 00358300
         SH    R7,YPUBTAB          OFFSET IN PUB TABLE         @DY46257 00358330
         SRL   R7,1                DIVIDE BY 2                 @DY46257 00358360
         A     R7,APBXAREA         ADDRESS OF PUBX TABLE       @DY46257 00358390
         L     R7,0(,R7)           ADDRESS OF PUBX             @DY46257 00358420
         USING PBXADR,R7           PUBX BASE POINTER           @DY46257 00358450
         TM    PBXABYT,X'20'       ASSGN BUFFERED WRITE?       @DY46257 00358480
         BO    CCWTR200            NO                          @DY46257 00358510
         MVC   CCWTOT,WRMKCCW      REPLACE WTM WRMK            @DY46257 00358540
         B     CCWTR200            LAST CCW PROCESSED          @DY46257 00358570
         DROP  R7                  RELEASE PUBX                @DY46257 00358600
WRMKCCW  CCW   X'4B',WRMKCCWD,32,8 WRITE MARK CCW              @DY46257 00358630
WRMKCCWD DC    XL8'0120000102000000'  WRITE MARK DATA          @DY46257 00358660
         DS    0H                                              @DY46257 00358690
CCWTR130 AL    R6,F8               POINT TO NEXT VIRTUAL CCW   @D52VDOW 00359000
         TM    CCBBY3,CCWABOVE     CCW ABOVE 16M               @D68ADAP 00360000
         BNZ   CCWTR135            YES,                        @D67EDAV 00361000
         CL    R6,ADDRMSK          16M BOUNDARY CROSSING?      @D67EDAV 00362000
         BH    ERROR7              YES, CANCEL                 @D67EDAV 00363000
CCWTR135 DS    0H                                              @D67EDAV 00364000
         LA    R5,CCWNEXT          POINT TO NEXT COPY LOCATION          00365000
         TM    TCBFLAG,TCBSM2      LAST COMMAND STATUS MODIFIER         00366000
         BO    CCWTR270            YES                         @D14ZDWK 00367000
CCWTR140 CLI   CCWCODE,ZERO        NEW COPY LOCATION FREE      @D14ZDWK 00368000
         BE    CCWTR110            YES                         @D14ZDWK 00369000
         CLI   CCWCODE,EOCL        END OF COPY BLOCK                    00370000
         BNE   CCWTR200            NO,END OF LINE              @D14ZDWK 00371000
         SPACE 2                                               @D35CDJR 00372000
* NEXT COPY LOCATION IS AT END OF COPYBLOCK.                   @D35CDJR 00373000
CCWTR150 LR    R7,R5               LOCATION INDICATED BY ENDTIC@D14ZDWK 00374000
         USING TICCCW,R7           SET BASE FOR TIC COMMAND    @D35CDJR 00375000
         OI    TICCODE,TIC         CHANGE BLOCKEND TO ENDTIC            00376000
         BAL   R2,LOCATE1          POINT TO 1ST COPY LOC OF NEXT BLOCK  00377000
*SGLINK LOCATE1 INPUT=(R1,R4,R6),OUTPUT=(R4,R5),WORK=(R8,RA,RC,RD,RE)   00378000
CCWTR160 CLI   CCWCODE,ZERO        NEW COPY LOCATION FREE      @D14ZDWK 00379000
         BNE   CCWTR170            NO                          @D14ZDWK 00380000
         BAL   R2,GETCCW           COPY CCW FROM VIRT.TO REAL LOC.      00381000
*SGLINK GETCCW INPUT=(R1,R2,R5,R6,RF),WORK=(R3,R8,RA,RC,RD,RE)          00382000
         B     CCWTR220            TIC COMMAND                 @D14ZDWK 00383000
*        B     *+4                 NO TIC COMMAND                       00384000
         STCM  R5,7,TICADR         SET UP ENDTIC ADDR.WITH VIRT.ADDR.   00385000
         B     CCWTR120                                        @D14ZDWK 00386000
         SPACE 2                                               @D35CDJR 00387000
CCWTR170 TM    CCWCODE,X'07'       ANY TIC IN COPY LOCATION    @D52VDOW 00388000
         BNZ   CCWTR180            NO                          @D14ZDWK 00389000
         TM    CCWCODE,TIC         REALLY A TIC                @D52VDOW 00390000
         BNO   CCWTR180            NO                          @D52VDOW 00391000
         L     R5,CCWBUF           LOAD ADDR FROM TIC                   00392000
CCWTR180 STCM  R5,7,TICADR         SET UP ENDTIC ADDR.         @D14ZDWK 00393000
         DROP  R7                  DROP BASE FOR TIC COMMAND   @D35CDJR 00394000
         SPACE 3                                                        00395000
*        END OF LINE HANDLING                                           00396000
         SPACE                                                          00397000
CCWTR200 L     R5,LINEPTR          LOAD/TEST                   @D14ZDWK 00398000
         LTR   R5,R5               POINTER TO NEXT LINE        @DF00882 00399000
         BZ    CCWTR240            LINEPTR=0                   @D14ZDWK 00400000
         USING TICCCW,R5                                                00401000
         MVC   LINEPTR,TICLINE     SET LINEPTR BACK                     00402000
         USING CCWADR,R5                                                00403000
         USING TICCCW,R7           SET BASE FOR TIC COMMAND    @D35CDJR 00404000
         SPACE 3                                               @D35CDJR 00405000
* USER TIC COMMAND HANDLING                                    @D35CDJR 00406000
         SPACE 1                                               @D35CDJR 00407000
CCWTR210 LR    R7,R5               POINT TO COPIED TIC         @D14ZDWK 00408000
CCWTR220 TM    CCWBUF+3,7          TARGET ON DW-BOUNDARY       @D14ZDWK 00409000
         BNZ   CCWTR230            NO                          @D14ZDWK 00410000
         L     R6,CCWCODE          SECURE 31 BIT ADDRESS       @D67EDAV 00411000
         MVI   CCWCODE,TIC         BUILD TIC CMD AND SETUP     @D67EDAV 00412000
         TM    CCBCLS,XCPR         EXCP-REAL REQUEST           @D67EDAV 00413000
         BNO   CCWTR225            NO, SKIP VIRTUAL CCW SETUP  @D67EDAV 00414000
         DROP  R9,RF               FREE REGS FOR VIRTAD CALL   @D67EDAV 00415000
         LR    R8,R9               SAVE CCWTADR                @D67EDAV 00416000
         LR    R9,R6               PROVIDE REAL ADDRESS IN R9  @D67EDAV 00417000
         LR    RA,RF               SAVE TCBADR                 @D67EDAV 00418000
*SGLINK  VIRTAD,INPUT=(R6,R9),OUTPUT=RF,WORK=R9                @D67EDAV 00419000
         BAS   R6,VIRTAD                                       @D67EDAV 00420000
         LR    R6,RF               PUT VIRTUAL ADDRESS IN R6   @D67EDAV 00421000
         LR    R9,R8               RESTORE CCWTADR             @D67EDAV 00422000
         LR    RF,RA               RESTORE TCBADR              @D67EDAV 00423000
         USING CCWTADR,R9                                      @D67EDAV 00424000
         USING TCBADR,RF                                       @D67EDAV 00425000
CCWTR225 DS    0H                                              @D67EDAV 00426000
         N     R6,ADDRMASK         ... VIRTUAL CCW             @D67EDAV 00427000
         BAL   R2,LOCATE           POINT TO TRUE COPY LOCATION @D35CDJR 00428000
*SGLINK LOCATE INPUT=(R1,R6),OUTPUT=(R4,R5),WORK=(R8,RA,RC,RD,RE)       00429000
         STCM  R5,7,TICADR         INSERT NEW COPY LOC.        @D35CDJR 00430000
         B     CCWTR140            GOTO CHECK NEW COPY LOC.    @D14ZDWK 00431000
         SPACE 2                                               @D35CDJR 00432000
* TARGET OF TIC NOT ON DW-BOUNDARY. DON'T FOLLOW TIC           @D35CDJR 00433000
CCWTR230 LA    R5,1(,R5)           STORE INVALID REAL          @D14ZDWK 00434000
         STCM  R5,7,TICADR         ADDRESS IN TIC              @D35CDJR 00435000
         B     CCWTR200            GOTO END-OF-LINE HANDLING   @D14ZDWK 00436000
         SPACE 2                                               @D35CDJR 00437000
CCWTR240 L     R7,BENDPTR          LOAD/TEST BLOCKEND POINTER  @D14ZDWK 00438000
         LTR   R7,R7                                           @DF00882 00439000
         BZ    CCWTR300            BLOCKEND PTR=0              @D14ZDWK 00440000
         MVC   BENDPTR+1(L3),TICADR SET BLOCK END POINTER BACK          00441000
         LA    R5,TICLINE          FIND ADDRESS OF NEXT BLOCK           00442000
CCWTR250 TM    0(R5),EOB           END OF BLOCK                @D52VDOW 00443000
         BO    CCWTR260            YES,FOUND                   @D14ZDWK 00444000
         LA    R5,CCWNEXT          POINT TO NEXT LOCATION               00445000
         B     CCWTR250                                        @D14ZDWK 00446000
CCWTR260 ICM   R4,7,1(R5)          LOAD ADDR OF NEXT BLOCK     @D67EDAV 00447000
         L     R6,VBA              GET VBA OF BLOCK                     00448000
         AL    R6,F8               POINT TO NEXT VIRT CCW      @D52VDOW 00449000
         TM    CCBBY3,CCWABOVE     CCW ABOVE 16M?              @D68ADAP 00450000
         BNZ   CCWTR265            YES,                        @D67EDAV 00451000
         CL    R6,ADDRMSK          CROSSING 16M BOUNDARY?      @D67EDAV 00452000
         BH    ERROR7              YES, CANCEL                 @D67EDAV 00453000
CCWTR265 DS    0H                                              @D67EDAV 00454000
         BAL   R2,LOCATE           POINT TO TRUE COPY LOCATION          00455000
*SGLINK LOCATE INPUT=(R1,R6),OUTPUT=(R4,R5),WORK=(R8,RA,RC,RD,RE)       00456000
         B     CCWTR160                                        @D14ZDWK 00457000
         DROP  R6                  DROP BASE FOR VIRTUAL CCW   @D35CDJR 00458000
         SPACE 3                                                        00459000
*        STATUS MODIFIER COMMAND HANDLING                               00460000
         SPACE                                                          00461000
CCWTR270 NI    TCBFLAG,X'FF'-TCBSM2  RESET STATUS MOD BIT      @D14ZDWK 00462000
         CLI   CCWCODE,ZERO        NEW COPY LOCATION FREE               00463000
         BE    CCWTR280            YES                         @D14ZDWK 00464000
         CLI   CCWCODE,EOCL        END OF COPY BLOCK                    00465000
         BNE   CCWTR130            NO                          @D14ZDWK 00466000
         LA    R7,CCWNEXT          SET NEW                              00467000
         MVC   TICADR,BENDPTR+1    BLOCKENDPTR TO                       00468000
         ST    R7,BENDPTR          END OF COPY BLOCK                    00469000
         OI    ANB,EOB             SET END OF BLOCK            @D37ADWK 00470000
         B     CCWTR150                                        @D14ZDWK 00471000
CCWTR280 BAL   R2,GETCCW           COPY CCW                    @D14ZDWK 00472000
*SGLINK GETCCW INPUT=(R1,R2,R5,R6,RF),WORK=(R3,R8,RA,RC,RD,RE)          00473000
         B     CCWTR290            TIC COMMAND COPIED          @D14ZDWK 00474000
         B     CCWTR130            NO TIC                      @D14ZDWK 00475000
         DROP  R7                                                       00476000
         USING TICCCW,R5                                                00477000
CCWTR290 DS    0H                                                       00478000
         MVC   TICLINE,LINEPTR     OLD LINEPTR TO TIC LOCATION @D14ZDWK 00479000
         USING CCWADR,R5                                                00480000
         ST    R5,LINEPTR          STORE NEW LINE POINTER               00481000
         B     CCWTR130                                        @D14ZDWK 00482000
CCWTR300 DS    0H                                              @D52VDOW 00483000
         SPACE 3                                                        00484000
*        TRANSLATE IDA WORDS AND FIX CORRESPONDING I/O AREAS            00485000
         SPACE                                                          00486000
         L     R4,CCBICB           POINT TO IDAL BLOCK QUEUE   @D14ZDWK 00487000
         LTR   R5,R4               TEST IF AVAILABLE           @D14ADWK 00488000
         BZ    CCWTR400            BRANCH IF NOT               @D14ZDWK 00489000
         TM    CCBCLS,XCPR         EXCP-REAL REQUEST           @D67EDAV 00490000
         BO    CCWTR400            YES, SKIP IDAL FIXING       @D67EDAV 00491000
         OI    CCWTFLG2,CCWTFIDA   INDICATE FIXING FOR IDAL    @D14ADWK 00492000
CCWTR310 TM    0(R5),EOB           LOGICAL END OF IDA BLOCK    @D14ADWK 00493000
         BO    CCWTR330            YES                         @D14ZDWK 00494000
         BAL   R3,FIXAREA          TRANSLATE IDA WORDS AND FIX          00495000
         LA    R5,4(,R5)           POINT TO NEXT IDA WORD OF BLOCK      00496000
         B     CCWTR310                                        @D14ZDWK 00497000
CCWTR330 L     R5,ANB              GET NEXT BLOCK IN CHAIN     @D14ZDWK 00498000
         TM    ANB,CCWBLUSE        IS THIS A DOUBLE COPY BLOCK @D14ZDWK 00499000
         BO    CCWTR340            NO, HANDLE NORMAL BLOCK     @D14ZDWK 00500000
         USING DCBLOCK,R4          SET DOUBLE BLOCK USE        @D37ADWK 00501000
         L     R5,DCBLFLG          GET NEXT BLOCK IN CHAIN     @D14ADWK 00502000
         USING CCWBLOCK,R4         RESET COPYBLOCK USING       @D37ADWK 00503000
CCWTR340 N     R5,ADDRMSK          CLEAR HIGH ORDER BYTE       @D67EDAV 00504000
         LTR   R4,R5               TEST IF AVAILABLE           @D14ADWK 00505000
         BNZ   CCWTR310            YES, HANDLE IDAL BLOCK      @D14ZDWK 00506000
         DROP  R5                  DROP BASE FOR COPIED CCW    @D35CDJR 00507000
         NI    CCWTFLG2,XFF-CCWTFIDA  RESET FIXING FOR IDAL    @D14ADWK 00508000
CCWTR400 EQU   *                                               @D14ZDWK 00509000
         SPACE 3                                                        00510000
*        TERMINATE CCW TRANSLATION AND RETURN                           00511000
         SPACE                                                          00512000
         TM    CCBCLS,BTAM         BTAM REQUEST?                        00513000
         BNO   CCWTR440            NO, BRANCH                  @D14ZDWK 00514000
*                                  YES,ENQUEUE ADDITIONAL COPY BLOCKS   00515000
         SR    RD,RD               CLEAR REGISTER                       00516000
         LR    RE,RD                                                    00517000
         IC    RE,UBTAMCB          NUMBER OF USED COPY BLOCKS           00518000
         ICM   RD,M1,ADBTAMCB      ADDITIONAL BLOCKS NEEDED BY BTAM?    00519000
         BZ    CCWTR420            NO                          @D14ZDWK 00520000
         AR    RE,RD               RE=TOTAL NUMBER OF COPY BLOCKS(BTAM) 00521000
CCWTR410 EQU   *                                               @D14ZDWK 00522000
         BAL   R3,GETBLOCK         GET RESERVED COPY BLOCKS FOR BTAM    00523000
         MVC   ANB+1(L3),CCBICB+1  ENQUEUE RESERVED COPY BLK   @D37ADWK 00524000
         ST    R4,CCBICB           STORE NEW POINTER                    00525000
         BCT   RD,CCWTR410         MORE BLOCKS ARE NEEDED      @D14ZDWK 00526000
CCWTR420 STC   RE,TBTAMCB          SAVE TOTAL NUMBER           @D14ZDWK 00527000
         TM    CCBFLAG,BTAM2       BTAM 2ND TIME?                       00528000
         BZ    CCWTR430            NO                          @D14ZDWK 00529000
.* BTAM CHANNEL PROGRAMS ARE ALWAYS FORMAT 0 CCW'S                      00530000
         LM    R2,RF,SAVEREG2      RELOAD ENTRY REGISTERS FROM BTMTCB   00531000
         L     R9,AINTER           LOAD ADDR OF I/O INTERRUPT HANDL.    00532000
         BR    R8                  RETURN TO I/O INTERRUPT HANDL.       00533000
CCWTR430 OI    CCBFLAG,BTAM2       SET BIT FOR BTAM 2ND TIME   @D14ZDWK 00534000
CCWTR440 EQU   *                                               @D14ZDWK 00535000
         TM    CCBFLAG,TTFIX       ANY PAGE FIXED?                      00536000
         BZ    CCWTR470            NO                          @D14ZDWK 00537000
         SPACE 2                                               @D36IDJR 00538000
CCWTR460 LH    RC,CNTCOM           INCREASE NUMBER             @D14ZDWK 00539000
         LA    RC,1(,RC)           OF COMPLETED TRANSLATIONS   @DF00882 00540000
         STH   RC,CNTCOM           WITH PAGES FIXED            @DF00882 00541000
         DROP  R4                  DROP BASE FOR CCW COPY BLK  @D35CDJR 00542000
         SPACE 2                                               @D35CDJR 00543000
CCWTR470 DS    0H                                              @D51ODGL 00544000
         OI    CCBFLAG,XCOMPL      INDICATE TRANSL. COMPLETE   @D52VDOW 00545000
CCWTR475 DS    0H                                              @D51ODGL 00546000
         AIF   (&AG1 LE 254).LOD0000                           @D51ODGL 00547000
         CLI   CHQFLPTR+1,NOTQUED  IS CHANQ ENTRY AVAILABLE    @D51ODGL 00548000
.LOD0000 AIF   (&AG1 GT 254).LOD0001                           @D51ODGL 00549000
         CLI   FLPTR,NOTQUED       IS CHANQ ENTRY AVAILABLE    @D51ODGL 00550000
.LOD0001 ANOP                                                  @D51ODGL 00551000
         BNE   CCWTR500            YES                         @D14ZDWK 00552000
         L     R5,ASRQTAB          ADDR(RESOURCE DESRIPTOR TAB)@D61RDOW 00553000
         LA    R5,SRQCHQ-SRQTAB(,R5) PTR TO CHANQ WAIT QUEUE   @D61RDOW 00554000
         BAL   RC,RWAIT            WAIT                        @D35CDJR 00555000
*SGLINK  RWAIT INPUT=(R5,RC)                                   @D369DWK 00556000
         B     CCWTR475            TEST CHANNEL QUEUE AGAIN    @D52VDOW 00557000
         SPACE 2                                               @D35CDJR 00558000
CCWTR500 NI    CCBBY3,X'FF'-CCBCCWF1 COPIED CCW'S ARE FORMAT 0 @D52VDOW 00559000
CCWTR510 LM    R2,RF,SAVEREG2      RESTORE REGISTERS           @DY46396 00560490
         SPACE 2                                               @D35CDJR 00561000
         BSM   0,R8                RETURN TO SVC 0 PROCESSOR   @D67EDAV 00562000
         DROP  R1                  DROP BASE FOR CCB           @D35CDJR 00563000
         DROP  RF                  DROP BASE FOR TCB           @D35CDJR 00564000
         TITLE 'DOS SUPERVISOR    SGCCWT          C C W - TRANSLATION  *00565000
               CSWTRANS ROUTINE'                                        00566000
************************************************************** @D32XDRP 00567000
* *                                                            @D32XDRP 00568000
* *                CCW - BACKTRANSLATION                       @D32XDRP 00569000
* *                                                            @D32XDRP 00570000
************************************************************** @D32XDRP 00571000
* *                                                            @D32XDRP 00572000
* *  GENERAL FUNCTION:                                         @D32XDRP 00573000
* *                                                            @D32XDRP 00574000
* *      THE RETRANSLATION IS PERFORMED INCLUDING THE FREEING  @D67EDAV 00575000
* *      OF DATA AREA PAGES AND THE RELEASE OF ALL OCCUPIED    @D67EDAV 00576000
* *      COPY BLOCKS.                                          @D67EDAV 00577000
* *                                                            @D32XDRP 00578000
* *  ENTRY POINTS:                                             @D32XDRP 00579000
* *      CSWTRANS - FROM I/O INTERRUPT HANDLER                 @D32XDRP 00580000
* *                                                            @D32XDRP 00581000
* *  INPUT:                                                    @D32XDRP 00582000
* *      R1 - POINTS TO COPIED CCB                             @D32XDRP 00583000
* *      R8 - RETURN ADDRESS                                   @D32XDRP 00584000
* *      RA - POINTS TO PIB OF REQUESTOR                       @D32XDRP 00585000
* *      R9 - FIRST BASE ADDRESS                               @D32XDRP 00586000
* *                                                            @D32XDRP 00587000
* *  OUTPUT:                                                   @D32XDRP 00588000
* *      R1 - POINTS TO VIRTUAL CCB, UNLESS THE PIB IS POSTED  @D32XDRP 00589000
* *             - INDICATING MAVECCB: THE R1 IS UNCHANGED      @D32XDRP 00590000
* *      R8 - UNCHANGED                                        @D32XDRP 00591000
* *      RA - UNCHANGED                                        @D32XDRP 00592000
* *      R9 - UNCHANGED                                        @D32XDRP 00593000
* *      RB - UNCHANGED                                        @D32XDRP 00594000
* *                                                            @D32XDRP 00595000
* *  EXTERNAL REFERENCES:                                      @D32XDRP 00596000
* *      RPOST   - POST WAITERS ON SPECIFIED RESOURCE          @D32XDRP 00597000
* *                                                            @D32XDRP 00598000
* *  EXITS NORMAL:                                             @D32XDRP 00599000
* *      RETURN ADDRESS IN R8                                  @D32XDRP 00600000
* *                                                            @D32XDRP 00601000
* *  EXITS ERROR:                                              @D32XDRP 00602000
* *      ERR14   - PAGE POOL TOO SMALL                         @D32XDRP 00603000
* *                                                            @D32XDRP 00604000
* *  SUBROUTINES:                                              @D32XDRP 00605000
* *      RELBLOCK                                                       00606000
* *      RELCCB                                                         00607000
* *      UNFIX                                                          00608000
* *      DEFIX                                                          00609000
* *      DELREPL                                                        00610000
* *      ENQCCB                                                         00611000
* *                                                            @D35CDJR 00612000
* *                                                            @D32XDRP 00613000
************************************************************** @D32XDRP 00614000
         AIF   (NOT &VTAM31).NV31020                           @DY46396 00614050
*SGLINK    CCWVFREE,INPUT=(R1,R3,R8,R9)                        @DY46396 00614100
         USING CCBADR,R1           SET BASE FOR CCB            @D35CDJR 00614150
         USING CCWBLOCK,R4         SET BASE FOR CCW COPY BLK   @D35CDJR 00614200
CCWVFREE DS    0H                                                       00614250
         STM   R1,RE,CCWERA        SAVE ENTRY REGISTERS        @D35CDJR 00614300
         SLR   R8,R8               INDICATE CCWVFREE CALLED    @DY46396 00614350
         L     RB,ACCWT2           LOAD 2ND BASE REGISTER      @D32XDRP 00614400
         AMODESW SET,AMODE=31,WR=(R2) TO 31-BIT MODE           @D67EDAV 00614450
* FUTURE: USE THIS TEST TO !!NOT!! FREE THE CCB IF NO CCW AVAIL         00614500
*        ICM   R2,7,CCBCSWW        GET CSW ADDR FROM COPIED CCB         00614550
*        BZ    CSWTR30             CSWADDR=0                            00614600
         ICM   R4,15,CCBACB        POINT TO 1ST CCW COPY BLOCK          00614650
         BNZ   CSWTR30             IT DOES EXIST               @DY46396 00614700
         BAL   R5,SYSERROR         ENTER HARD WAIT             @DY46396 00614750
*        BZ    CSWTR100            SHOULD NOT OCCUR                     00614800
.NV31020 ANOP                                                  @DY46396 00614850
************************************************************** @DY46396 00614900
         SPACE 2                                               @D32XDRP 00615000
         USING CCBADR,R1           SET BASE FOR CCB            @D35CDJR 00616000
         USING CCWBLOCK,R4         SET BASE FOR CCW COPY BLK   @D35CDJR 00617000
CSWTRANS DS    0H                                                       00618000
         STM   R1,RE,CCWERA        SAVE ENTRY REGISTERS        @D35CDJR 00619000
         L     RB,ACCWT2           LOAD 2ND BASE REGISTER      @D32XDRP 00620000
         AMODESW SET,AMODE=31,WR=(R2) TO 31-BIT MODE           @D67EDAV 00621000
         SR    R2,R2                                           @D32XDRP 00622000
         ICM   R2,7,CCBCSWW        GET CSW ADDR FROM COPIED CCB         00623000
         BZ    CSWTR30             CSWADDR=0                            00624000
         TM    CCBBY3,APPEN        APPENDAGE RTN PRESENT       @DM01788 00625000
         BO    CSWTR30             YES,DON'T TRANSLATE         @DM01788 00626000
         L     R4,CCBACB           POINT TO 1ST CCW COPY BLOCK          00627000
CSWTR10  CR    R2,R4               CSWADDR LESS BLOCKADDR               00628000
         BL    CSWTR20             YES                                  00629000
         LA    R5,MAXBL(,R4)                                            00630000
         CR    R2,R5               CSWADDR LESS OR EQUAL BLOCKADDR+72   00631000
         BH    CSWTR20             NO                                   00632000
         SR    R2,R4               GET NEW CSWADR                       00633000
         A     R2,VBA              ADD VIRTUAL BLOCK ADDR               00634000
         STCM  R2,7,CCBCSWW        STORE NEW CSWADDR                    00635000
         B     CSWTR30                                                  00636000
CSWTR20  ICM   R4,7,ANB+1          POINT TO NEXT CCW COPY BLOCK         00637000
         BNZ   CSWTR10             END OF QUEUE-NO-                     00638000
CSWTR30  EQU   *                                                        00639000
         BAL   RD,UNFIX            FREE PAGES                  @D32XDRP 00640000
         L     R4,CCBACB           POINT TO CCW COPY BLOCK QUEUE        00641000
         BAL   R3,RELBLOCK         RELEASE CCW COPY BLOCK               00642000
*SGLINK RELBLOCK INPUT=(R3,R4),WORK=R14                                 00643000
         L     R4,CCBICB           POINT TO IDAL BLOCK QUEUE   @D37ADWK 00644000
         LTR   R4,R4               CHECK IF AVAILABLE          @D37ADWK 00645000
         BZ    CSWTR40             SKIP IF NOT                 @D37ADWK 00646000
         BAL   R3,RELBLOCK         RELEASE BLOCKS              @D37ADWK 00647000
*SGLINK RELBLOCK INPUT=(R3,R4),WORK=R14                                 00648000
CSWTR40  EQU   *                                                        00649000
         LTR   R8,R8               CALLED FOR VTAM31           @DY46396 00650190
         BNZ   CSWTR41             NO,                         @DY46396 00650380
         ST    R8,CCBACB           RESET FIELDS FOR VTAM31     @DVTAX31 00650570
         ST    R8,CCBICB           AS CCB ITSELF IS NOT FREED  @DVTAX31 00650760
         B     CSWTR100            PROCEED FOR VTAM            @DVTAX31 00650950
CSWTR41  TM    CCBCLS,CCBIORB      IORB?                       @D35CDJR 00651140
         BNO   CSWTR42             NO                          @D35CDJR 00651330
         TM    CCBBY3,USENSE       IORB WITH USER EXTENSION?   @D35CDJR 00652000
         BO    CSWTR70             YES, GO REQ. DELAYED POST   @D35CDJR 00653000
CSWTR42  DS    0H                                                       00654490
         SPACE 2                                               @D35CDJR 00655000
         L     R5,CCBVA            GET ADDR OF VIRTUAL CCB     @D35CDJR 00656000
         LA    RD,15(,R5)          LOAD ENDADDRESS OF CCB      @D66ADAP 00657000
         LRA   R6,0(,R5)           CCB IN CORE                 @D14ZDWK 00658000
         BNZ   CSWTR70             NO                          @D52VDOW 00659000
         LRA   R6,0(,RD)           IN CORE                     @D51HDOW 00660000
         BNZ   CSWTR70             NO                          @D52VDOW 00661000
         SPACE 2                                                        00662000
*****    POST INFORMATION FROM REAL TO VIRTUAL CCB *****                00663000
         SPACE                                                          00664000
         LA    RD,ACCBB            POINT TO CCB BLOCK QUEUE    @D51HDOW 00665000
         N     R1,ADDRMSK          CLEAR HIGH ORDER BYTE       @D67EDAV 00666000
CSWTR50  L     R2,0(,RD)           LOAD ADDRESS OF NEXT CCB BLOCK       00667000
         N     R2,ADDRMSK          CLEAR HIGH ORDER BYTE       @D67EDAV 00668000
         CR    R2,R1               IS IT CCB BLOCK JUST IN USE?         00669000
         BE    CSWTR60             YES                                  00670000
         LA    RD,CCBNEXT-CCBADR(,R2) LOAD ADDR OF CHAIN POINTER        00671000
         B     CSWTR50             TEST NEXT CCB BLOCK                  00672000
CSWTR60  BAL   R2,RELCCB           MOVE PARTS OF CCB, RELEASE CCB BLOCK 00673000
         B     CSWTR79             RESTORE REGISTERS                    00674000
         SPACE 3                                                        00675000
CSWTR70  L     R3,TIBPTR           POINT TO TIB                @D36IDJR 00676000
         USING TIBADR,R3                                       @D36IDJR 00677000
         OI    TIBFLAG,TIBDELMV    INDICATE DELAYED MOVE REQ   @D14NDFG 00678000
         OI    TIBDMFLG,TIBCMVEX   REQUEST CCBMOVE INVOKATION  @D14NDFG 00679000
         DROP  R3                  DROP BASE FOR TIB           @D36IDJR 00680000
         SPACE 2                                               @D35CDJR 00681000
CSWTR79  ST    R1,CCWERA           SAVE PTR TO COPIED/ORIGINAL @D35CDJR 00682000
*                                  CCB                         @D35CDJR 00683000
         L     R6,DISPAD           GET DISPATCHER BASE         @D36IDJR 00684000
         USING DISP,R6                                         @D36IDJR 00685000
         L     R5,ASRQTAB          ADDR(RESOURCE DESRIPTOR TAB)@D61RDOW 00686000
         TM    RBCCW-SRQTAB(R5),FREEBIT ANY WAITER FOR CCWTR?  @D66ODOW 00687000
         BO    CSWTR83             NO, SKIP POSTING            @D66ODOW 00688000
         LA    R5,SRQCCW-SRQTAB(,R5) PTR TO CCW WAIT QUEUE     @D61RDOW 00689000
         BAL   RF,RPOST            ACT.TASKS WAITING FOR CCWTR @D36IDJR 00690000
*SGLINK  RPOST INPUT=(R5,R6,RF),WORK=(R5,RE)                   @D369DWK 00691000
CSWTR83  DS    0H                                                       00692000
         L     R5,ASRQTAB          ADDR(RESOURCE DESRIPTOR TAB)@D61RDOW 00693000
         TM    RBPFR-SRQTAB(R5),FREEBIT ANY TASK IN PFR WAIT Q @D66ODOW 00694000
         BO    CSWTR84             NO, SKIP POSTING            @D66ODOW 00695000
         LA    R5,SRQPFR-SRQTAB(,R5) PTR TO PFR WAIT QUEUE     @D61RDOW 00696000
         BAL   RF,RPOST            ACT.TASKS WAITING FOR PF'S  @D36IDJR 00697000
*SGLINK  RPOST INPUT=(R5,R6,RF),WORK=(R5,RE)                   @D369DWK 00698000
         CLC   CNTCOM,H1          ANY CCW TR COMPLETE WITH     @D35CDJR 00699000
*                                 PAGES FIXED?                 @D35CDJR 00700000
         BNL   CSWTR90            YES RETURN                   @D35CDJR 00701000
* NO CCW TRANSLATION WITH PAGES FIXED IS COMPLETE              @D35CDJR 00702000
CSWTR84  DS    0H                                              @D36IDWK 00703000
         L     R5,ASRQTAB          ADDR(RESOURCE DESRIPTOR TAB)@D61RDOW 00704000
         TM    RBPFG-SRQTAB(R5),FREEBIT ANY TASK IN PFG WAIT Q @D66ODOW 00705000
         BO    CSWTR90             NO, SKIP POSTING            @D66ODOW 00706000
         LA    R5,SRQPFG-SRQTAB(,R5) PTR TO PFG WAIT QUEUE     @D61RDOW 00707000
         BAL   RF,RPOST           ACT.TASKS WAITING FOR PF'S   @D36IDJR 00708000
*SGLINK  RPOST INPUT=(R5,R6,RF),WORK=(R5,RE)                   @D369DWK 00709000
         DROP  R6                                              @D36IDJR 00710000
         SPACE 2                                               @D35CDJR 00711000
CSWTR90  SLR   R1,R1               SUPPLY IDENTIFIER           @DY45037 00712000
*        DISPMAC FUNC=POST82       TAKE ALL TASKS OF CICS/TS PARTITION  00713000
***                                ...OUT OF WAIT STATE, MAY POSSIBLY   00714000
***                                ...WAIT ON ONE OF THE ECB'S, AND     00715000
         DISPMAC FUNC=POST82,INP1=R1                           @DY45037 00716000
CSWTR100 LM    R1,RF,CCWERA        RELOAD ENTRY REGISTERS      @DY45037 00717490
         L     R9,AINTER           LOAD ADDR I/O INTERR. HANDL.@D35CDJR 00718000
         BSM   0,R8                RETURN TO I/O INTERR. HANDL.@D67EDAV 00719000
         SPACE 2                                               @D35CDJR 00720000
         DROP  R1                  DROP BASE FOR CCB           @D35CDJR 00721000
         DROP  R4                  DROP BASE FOR CCW COPY BLK  @D35CDJR 00722000
         TITLE 'DOS SUPERVISOR    SGCCWT          C C W - TRANSLATION  *00723000
               CSWTRBTM ROUTINE'                                        00724000
***************************************************************@D35CDJR 00725000
*        FUNCTION:  IT WILL RETRANSLATE THE CCW.ADDR.IN CSW    @D32XDRP 00726000
*                                                              @D32XDRP 00727000
*        CALLED BY:                                            @D32XDRP 00728000
*                   BTAM APPEDNAGE ROUTINE                     @D32XDRP 00729000
*                   SVC 77                                     @D32XDRP 00730000
*        REGISTER USAGE                                        @D32XDRP 00731000
*          INPUT  : REG 1 POINTS TO COPIED CCB                 @D32XDRP 00732000
*                   REG 7 CONTAINS RETURN ADDRESS              @D32XDRP 00733000
*                   REG 9 BASE REGISTER                        @D32XDRP 00734000
*          OUTPUT : REG 9 ADDR OF I/O INTERRUPT HANDLER        @D32XDRP 00735000
*                 : REG F RETURNS THE VIRTUAL ADDRESS OF CCW   @D32XDRP 00736000
***************************************************************@D35CDJR 00737000
         SPACE 2                                                        00738000
CSWTRBTM DS    0H                  ENTRY FROM I/O INTERUPT HANDLER      00739000
         STM   R2,R5,CCWERA        SAVE ENTRY REGISTER                  00740000
         L     R2,CSW              GET PARAMETER               @DM02325 00741000
         USING CCBADR,R1           SET BASE FOR CCB            @D35CDJR 00742000
         USING CCWBLOCK,R4         SET BASE FOR CCW COPY BLK   @D35CDJR 00743000
CSWTRSVC DS    0H                  ENTRY FROM SVC 77                    00744000
         L     R4,ACSWTRS1         LOAD 31-BIT ADDRESS         @D67EDAV 00745000
         BSM   0,R4                ENTER 31-BIT ADDRESSING MODE@D67EDAV 00746000
ACSWTRS1 DC    A(CSWTRS1+X'80000000') 31-BIT CONT. ADDRESS     @D67EDAV 00747000
CSWTRS1  DS    0H                                              @D67EDAV 00748000
         N     R2,ADDRMSK          CLEAR HIGH ORDER BYTE       @D67EDAV 00749000
         LTR   R2,R2               ANY ADDRESS PASSED          @DM02325 00750000
         BZ    CSWBT3              CCWADDR=0                            00751000
         L     R4,CCBACB           POINT TO 1ST CCW COPY BLOCK          00752000
CSWBT1   CR    R2,R4               CCWADDR LESS BLOCKADDR               00753000
         BL    CSWBT2              YES                                  00754000
         LA    R5,MAXBL(,R4)                                            00755000
         CR    R2,R5               CCWADDR LESS OR EQUAL BLOCKADDR+72   00756000
         BH    CSWBT2              NO                                   00757000
         SR    R2,R4               GET NEW CSWADR                       00758000
         A     R2,VBA              ADD VIRTUAL BLOCK ADDR               00759000
         B     CSWBT3                                                   00760000
CSWBT2   ICM   R4,7,ANB+1          POINT TO NEXT CCW COPY BLOCK         00761000
         BNZ   CSWBT1              END OF QUEUE-NO-                     00762000
         SR    R2,R2               NO CORRESP.ADDR.FOUND       @DM02325 00763000
CSWBT3   LR    RF,R2               PASS RETURN VALUE IN REG F  @DM02325 00764000
         LM    R2,R5,CCWERA        RESTORE REGISTERS           @DM02325 00765000
         L     R9,AINTER           LOAD ADDR OF I/O INTER.HANDL@DM02325 00766000
         BSM   0,R7                RETURN                      @D67EDAV 00767000
         DROP  R1                  DROP BASE FOR CCB           @D35CDJR 00768000
         DROP  R4                  DROP BASE FOR CCW COPY BLK  @D35CDJR 00769000
         AIF   (NOT &VTAM31).NV31030                           @DY46396 00769010
         TITLE 'DOS SUPERVISOR    SGCCWT          C C W - TRANSLATION  *00769020
               CCWVRETR ROUTINE'                                        00769030
***************************************************************@DY46396 00769040
*        FUNCTION:  IT WILL RETRANSLATE THE CCW.ADDR.IN CSW    @DY46396 00769050
*                                                              @DY46396 00769060
*        CALLED BY:                                            @DY46396 00769070
*                   VTAM APPEDNAGE ROUTINE                     @DY46396 00769080
*        REGISTER USAGE                                        @DY46396 00769090
*          INPUT  : REG 0 CONTAINS THE REAL CSW                @DY46396 00769100
*                   REG 1 POINTS TO COPIED CCB                 @DY46396 00769110
*                   REG 3 POINTS TO PUB                        @DY46396 00769120
*                   REG 8 CONTAINS RETURN ADDRESS              @DY46396 00769130
*                   REG 9 BASE REGISTER                        @DY46396 00769140
*          OUTPUT : REG 0 CONTAINS THE 31BIT CSW / VIRTUEL     @DVTAX31 00769150
*                   REG 1 CONTAINS THE 31BIT CCB               @DY46396 00769160
***************************************************************@DY46396 00769170
         SPACE 2                                                        00769180
CCWVRETR DS    0H                  ENTRY FROM I/O INTERUPT HANDLER      00769190
         STM   R2,R5,CCWERA        SAVE ENTRY REGISTER         @DY46396 00769200
         USING CCBADR,R1           SET BASE FOR CCB            @DY46396 00769210
         USING CCWBLOCK,R4         SET BASE FOR CCW COPY BLK   @DY46396 00769220
         L     R4,ACCWVRTR         LOAD 31-BIT ADDRESS         @DY46396 00769230
         BSM   0,R4                ENTER 31-BIT ADDRESSING MODE@DY46396 00769240
ACCWVRTR DC    A(CCWVR010+X'80000000') 31-BIT CONT. ADDRESS    @DY46396 00769250
CCWVR010 DS    0H                                              @DY46396 00769260
         LTR   R0,R0               ANY ADDRESS PASSED          @DY46396 00769270
         BZ    CCWVR040            CCWADDR=0                   @DY46396 00769280
         L     R4,CCBACB           POINT TO 1ST CCW COPY BLOCK @DY46396 00769290
CCWVR020 CR    R0,R4               CCWADDR LESS BLOCKADDR      @DY46396 00769300
         BL    CCWVR030            YES                         @DY46396 00769310
         LA    R5,MAXBL(,R4)                                   @DY46396 00769320
         CR    R0,R5               CCWADDR LESS OR EQUAL BLOCKADDR+72   00769330
         BH    CCWVR030            NO                          @DY46396 00769340
         SR    R0,R4               GET NEW CSWADR              @DY46396 00769350
         A     R0,VBA              ADD VIRTUAL BLOCK ADDR      @DY46396 00769360
         B     CCWVR040                                        @DY46396 00769370
CCWVR030 ICM   R4,7,ANB+1          POINT TO NEXT CCW COPY BLOCK@DY46396 00769380
         BNZ   CCWVR020            END OF QUEUE-NO-            @DY46396 00769390
         SR    R0,R0               NO CORRESP.ADDR.FOUND       @DY46396 00769400
CCWVR040 L     R1,CCBVA            PROVIDE ORIGINAL/VIRT. CCB  @DY46396 00769410
*        TM    CCBCLS,XCPR         EXCP REAL SPECIFIED?        @DY46396 00769420
*        BNO   CCWVR050            NO, DONE                    @DY46396 00769430
*        LR    R2,R0               CIRCUMVENT R0 ADDRESSING    @DY46396 00769440
*        LRA   R0,0(,R2)           PROVIDE REAL CSW            @DY46396 00769450
CCWVR050 LM    R2,R5,CCWERA        RESTORE REGISTERS           @DY46396 00769460
         BSM   0,R8                RETURN                      @DY46396 00769470
         DROP  R1                  DROP BASE FOR CCB           @DY46396 00769480
         DROP  R4                  DROP BASE FOR CCW COPY BLK  @DY46396 00769490
.NV31030 ANOP                                                  @D31VTAM 00769500
         TITLE 'DOS SUPERVISOR    SGCCWT          C C W - TRANSLATION  *00770000
               MOVECCB ROUTINE'                                         00771000
***************************************************************@D35CDJR 00772000
*        FUNCTION:  IT WILL RELEASE THE COPY BUFFERS AND THE COPIED     00773000
*                   CCB AND RELEASE TCB CONTROL BLOCKS.                 00774000
*        INPUT: R6 DISPATCHER ADDRESS                                   00775000
*        MOVECCB WILL BE CALLED FROM   DISPATCHER                       00776000
*        AND WILL CALL                 GETTCB, RELCCB                   00777000
*        REGISTER USAGE  R1,R2,R8,R9,RC,RD,RE,RF                        00778000
***************************************************************@D35CDJR 00779000
         SPACE 2                                                        00780000
MOVECCB  DS    0H                                                       00781000
         L     R9,ACCWT            GET FIRST BASE REGISTER     @D14NDFG 00782000
         BAL   RE,GETTCB           GET TCB AND INITIALIZE IT            00783000
*SGLINK  GETTCB,INPUT=RE,OUTPUT=(RB,RF)                                 00784000
         USING TCBADR,RF           SET BASE FOR TCB            @D36IDJR 00785000
         LR    RE,R1               SAVE REGISTER                        00786000
MOVECCB0 LA    RD,ACCBB            SET POINTER TO CCB COPY BLOCK QUEUE  00787000
MOVECCB1 ICM   R1,7,1(RD)          LOAD/TEST ADDR.OF NEXT BLK  @D37ADWK 00788000
         BZ    MOVECCB5            BRANCH IF END OF QUEUE               00789000
         USING CCBADR,R1           SET BASE FOR CCB            @D14NDFG 00790000
MOVECCB2 CLC   CCBTID,TID          TID IN CCB = REQTR TID      @D36IDJR 00791000
         BNE   MOVECCB3            NO                                   00792000
         TM    CCBCOM1,TRABIT      IS CCB ALREADY POSTED?               00793000
         BO    MOVECCB4            YES                                  00794000
MOVECCB3 LA    RD,CCBNEXT          POINT TO CHAIN POINTER               00795000
         B     MOVECCB1            TEST NEXT BLOCK                      00796000
MOVECCB4 TM    CCBCLS,CCBIORB      IORB?                       @D35CDJR 00797000
         BO    MOVECCB7            YES                         @D35CDJR 00798000
         SPACE 2                                               @D35CDJR 00799000
MOVECCB6 BAL   R2,RELCCB           POST VIRT.CCB,REL.CCB-BLOCK @D35CDJR 00800000
         B     MOVECCB0            SCAN AGAIN                  @D35CDJR 00801000
         SPACE 2                                               @D35CDJR 00802000
MOVECCB7 TM    CCBBY3,USENSE       IORB WITH USER EXTENSION?   @D35CDJR 00803000
         BNO   MOVECCB6            NO                          @D35CDJR 00804000
* IORB WITH ECB DETECTED                                       @D35CDJR 00805000
         BAL   R2,RELCCB           POST VIRT CCB,REL.CCB-BLOCK @D35CDJR 00806000
PCKSTM8  ICM   R2,7,IORBEADR       GET ECB-POINTER             @D35CDJR 00807000
PCKADR8  EQU   PCKSTM8+L'PCKSTM8   PROGRAM CHECK ADDRESS       @D35CDJR 00808000
         LA    R2,2(,R2)           POINT TO BYTE 2 OF ECB      @D35CDJR 00809000
         LR    R1,R2               POINT TO BYTE 2 OF ECB      @D35CDJR 00810000
         L     R6,DISPAD           PREP. R6 FOR VALID RTN      @D35CDJR 00811000
         USING DISP,R6             SET BASE FOR DISPATCHER     @D36IDJR 00812000
         BAL   R8,VALID            VALIDATE BYTE 2 OF ECB      @D35CDJR 00813000
         DROP  R6                  DROP BASE FOR DISPATCHER    @D36IDJR 00814000
         OI    0(R1),TRABIT        POST ECB                    @D35CDJR 00815000
         B     MOVECCB0            SCAN AGAIN                  @D35CDJR 00816000
         SPACE 2                                                        00817000
MOVECCB5 DS    0H                                              @DY45037 00818000
         LA    R1,4                SUPPLY IDENTIFIER           @DY45037 00819000
*        DISPMAC FUNC=POST82       TAKE ALL TASKS OF CICS/TS PARTITION  00820000
***                                ...OUT OF WAIT STATE, MAY POSSIBLY   00821000
***                                ...WAIT ON ONE OF THE ECB'S, AND     00822000
         DISPMAC FUNC=POST82,INP1=R1                           @DY45037 00823000
         L     R6,DISPAD           EXIT TO                     @DY45037 00824000
         BR    R6                  ... DISPATCHER              @D14NDFG 00825000
         SPACE 2                                               @D35CDJR 00826000
         DROP  R1                  DROP BASE FOR CCB           @D35CDJR 00827000
         DROP  RF                  DROP BASE FOR TCB           @D35CDJR 00828000
         TITLE 'DOS SUPERVISOR    SGCCWT          C C W - TRANSLATION  *00829000
               ERROR EXIT ROUTINES'                                     00830000
*********************************************************************** 00831000
*********************************************************************** 00832000
*                                                                     * 00833000
*                                                                     * 00834000
*              CCW TRANSLATION SUBROUTINES                            * 00835000
*                                                                     * 00836000
*                                                                     * 00837000
*********************************************************************** 00838000
*********************************************************************** 00839000
         SPACE 3                                                        00840000
*********************************************************************** 00841000
*                                                                     * 00842000
*              ERROR EXIT ROUTINES                                    * 00843000
*                                                                     * 00844000
*********************************************************************** 00845000
         SPACE                                                          00846000
         USING DISP,R6             SET BASE FOR DISPATCHER     @D35CDJR 00847000
         USING TCBADR,RF           SET BASE FOR TCB            @D36IDJR 00848000
         AIF   (NOT &BGDEBUG).NODEB1                           @D35CDJR 00849000
*                                                              @D35CDJR 00850000
* CCWHW1: LRA FOR TFIXED ADDRESS NOT POSSIBLE.                 @D35CDJR 00851000
*         ERROR IN PAGE MANAGER.                               @D35CDJR 00852000
*                                                              @D35CDJR 00853000
CCWHW1   MVI   HWIDBYTE,HWPMRERR   SET HARD WAIT CODE          @D35CDJR 00854000
         LA    R5,CCWHW1           IND. HW CAUSED BY CCW TRANS @D35CDJR 00855000
         MVI   IJBHWORG,HWORG052   UNIQUE HARD WAIT ORIGINATOR @D31QDHB 00856000
         B     HARDWAIT            GOTO HARD WAIT              @D35CDJR 00857000
         SPACE 2                                               @D35CDJR 00858000
.NODEB1  ANOP                                                  @D35CDJR 00859000
*                                                              @D35CDJR 00860000
* CCWHW5: TFIX COUNT TOO HIGH                                  @D35CDJR 00861000
*                                                              @D35CDJR 00862000
CCWHW5   MVI   HWIDBYTE,HWTFXCNT   SET HARD WAIT CODE          @D35CDJR 00863000
         MVI   IJBHWORG,HWORG056   UNIQUE HARD WAIT ORIGINATOR @D31QDHB 00864000
         B     HARDWAIT            GOTO HARD WAIT              @D35CDJR 00865000
         SPACE 2                                               @D35CDJR 00866000
*                                                              @D35CDJR 00867000
* CCWCN: TASK CANCELLED DURING WAIT                            @D35CDJR 00868000
*                                                              @D35CDJR 00869000
CCWCN    DS    0H                                                       00870000
         BAL   R5,CORFIXIN         CORRECT FIXINFO,IF NECESSRY @D35CDJR 00871000
         BAL   RE,ERRREL           RELEASE RESOURCES           @D35CDJR 00872000
         BR    R6                  GOTO DISPATCHER FOR CANCEL  @D35CDJR 00873000
         SPACE 2                                               @D35CDJR 00874000
ERRREL   ST    RE,SAVEREGE         SAVE RETURN REGISTER                 00875000
         L     R1,TCBACCB          POINT TO CCB COPY BLOCK              00876000
         BAL   R2,RELALL           RELEASE ALL BLOCKS AND FREE          00877000
         L     R5,ASRQTAB          ADDR(RES DESCRIPTOR TAB)    @D61RDOW 00878000
         TM    RBCCW-SRQTAB(R5),FREEBIT ANY WAITER FOR CCWTR   @D66ODOW 00879000
         BO    ERRREL10            NO, SKIP POSTING            @D66ODOW 00880000
         LA    R5,SRQCCW-SRQTAB(,R5) PTR TO CCW WAIT QUEUE     @D61RDOW 00881000
         L     R6,DISPAD           LOAD DISPATCHERS BASE PTR   @D36IDJR 00882000
         LR    R2,RF               SAVE TCB POINTER            @D52VDOW 00883000
         BAL   RF,RPOST            ACT.TASKS WAITING FOR CCWTR @D36IDJR 00884000
*SGLINK  RPOST INPUT=(R5,R6,RF),WORK=(R5,RE)                   @D369DWK 00885000
         LR    RF,R2               RESTORE TCB POINTER         @D52VDOW 00886000
ERRREL10 LM    R2,RF,SAVEREG2      RESTORE REGISTERS           @D36IDWK 00887000
         BR    RE                  RETURN                      @D35CDJR 00888000
         SPACE 2                                               @D35CDJR 00889000
*                                                              @D35CDJR 00890000
* ERROR1: INVALID ADDRESS -> ENTERED FROM SGPCK                @D35CDJR 00891000
*                                                              @D35CDJR 00892000
ERROR1   BAL   RE,ERRREL           RELEASE RESOURCES           @D35CDJR 00893000
         B     ERR25               CANCEL INVALID ADDRESS      @D35CDJR 00894000
         SPACE 2                                               @D35CDJR 00895000
*                                                              @D35CDJR 00896000
* ERROR2: UNSUPPORTED DEVICE                                   @D35CDJR 00897000
*                                                              @D35CDJR 00898000
ERROR2   LM    R2,RF,SAVEREG2      RESTORE REGISTERS           @D36IDJR 00899000
         B     ERR11               UNSUPPORTED DEVICE          @D35CDJR 00900000
         SPACE 2                                               @D35CDJR 00901000
*                                                              @D35CDJR 00902000
* ERROR3: INSUFFICIENT BUFFER SPACE                            @D35CDJR 00903000
*                                                              @D35CDJR 00904000
ERROR3   DS    0H                                                       00905000
         BAL   R5,CORFIXIN         CORRECT FIXINF                       00906000
         BAL   RE,ERRREL           RELEASE RESOURCES           @D36IDJR 00907000
         B     ERR12               INSUFFICIENT BUFFER SPACE            00908000
         SPACE 2                                               @D149DWK 00909000
*                                                              @D149DWK 00910000
* ERROR4: USER IDAL LIST IN VIRTUAL CHANNEL PROGRAM            @D149DWK 00911000
*                                                              @D149DWK 00912000
ERROR4   BAL   RE,ERRREL           RELEASE COPY BLOCKS USED    @D14BDWK 00913000
         B     ERR21               ILLEGAL SVC                 @D14BDWK 00914000
         SPACE 2                                               @D149DWK 00915000
*                                                              @D35CDJR 00916000
* ERROR5: PAGE POOL TOO SMALL                                  @D35CDJR 00917000
*                                                              @D35CDJR 00918000
ERROR5   BAL   RE,ERRREL           RELEASE ALL                          00919000
         B     ERR14               PAGE POOL TOO SMALL                  00920000
         SPACE 2                                               @D35CDJR 00921000
*                                                              @D35CDJR 00922000
* ERROR6: INSUFFICIENT COPYBLOCKS FOR BTAM 2ND TIME TRANSL.    @D35CDJR 00923000
*                                                              @D35CDJR 00924000
ERROR6   MVI   HWIDBYTE,HWBTAMCB   SET HARD WAIT CODE          @D35CDJR 00925000
         MVI   IJBHWORG,HWORG060   UNIQUE HARD WAIT ORIGINATOR @D31QDHB 00926000
         B     HARDWAIT            GOTO HARD WAIT              @D14ZDWK 00927000
         SPACE 2                                               @D35CDJR 00928000
*                                                                       00929000
* ERROR7: CHANNEL PROGRAM CROSS 16 MEG BOUNDARY                         00930000
*                                                                       00931000
ERROR7   BAL   RE,ERRREL           RELEASE ALL                 @D52VDOW 00932000
         B     ERR13                                           @D52VDOW 00933000
         SPACE 2                                               @D149DWK 00934000
         DROP  R6                  DROP BASE FOR DISPATCHER    @D35CDJR 00935000
         DROP  RF                  DROP BASE FOR TCB           @D35CDJR 00936000
         TITLE 'DOS SUPERVISOR    SGCCWT          C C W - TRANSLATION  *00937000
               GETTCB ROUTINE'                                          00938000
***************************************************************@D35CDJR 00939000
*        FUNCTION:                                                      00940000
*                   SAVE REGISTER OF CCW-TRANSLATION CALLER             00941000
*                   INITIALIZE SOME REGISTERS                           00942000
*        CALLED BY:                                                     00943000
*                   CCWTRANS,MOVECCB                                    00944000
*        CALLS SUBROUTINES:                                             00945000
*                                                                       00946000
*        REGISTER USAGE:                                                00947000
*                   INPUT   RE         RETURN ADDR                      00948000
*                   OUTPUT  RB         SECOND BASE                      00949000
*                           RF         TCB OF CCB/CCW OWNER             00950000
***************************************************************@D35CDJR 00951000
         SPACE 2                                                        00952000
*SGLINK  GETTCB,INPUT=RE,OUTPUT=(RB,RF)                                 00953000
*SGLINK  GETTCB1,INPUT=(RE,RF),OUTPUT=(RB,RF)                           00954000
GETTCB   L     RF,TCBPTR           POINT TO TCB OF TASK        @D36IDJR 00955000
         USING TCBADR,RF           SET BASE FOR TCB            @D36IDJR 00956000
GETTCB1  XC    TCBFLAG(SAVEREG2-TCBFLAG),TCBFLAG  CLEAR CCWTCB          00957000
         STM   R2,RD,SAVEREG2      SAVE REGISTERS                       00958000
         MVC   SAVEREGE(8),CCWERA  SAVE ENTRY REGISTERS                 00959000
         L     RB,ACCWT2           LOAD 2ND BASE OF CCW TRANSL @D35CDJR 00960000
         BR    RE                  RETURN TO CALLER                     00961000
         DROP  RF                  DROP BASE FOR TCB           @D35CDJR 00962000
         TITLE 'DOS SUPERVISOR    SGCCWT          C C W - TRANSLATION  *00963000
               GETCCW ROUTINE'                                          00964000
***************************************************************@D35CDJR 00965000
*        FUNCTION:                                                      00966000
*            COPY VIRTUAL CCW TO REAL COPY LOCATION, AND DECIDE         00967000
*            WHETHER THE CHANNEL PROGRAM IS CONTINGUOUS. CCW'S          00968000
*            WITH INVALID COMMAND CODE WILL BE COPIED WITH THE          00969000
*            STANDARD OP-CODE X'F0'.TIC COMMANDS WILL BE IN THE         00970000
*            STANDARD FORM WITH OP-CODE X'08'(USER TIC).                00971000
*        CALLED BY:                                                     00972000
*            CCWTRANS                                                   00973000
*        CALL SUBROUTINES:                                              00974000
*            RELBLOCK                                                   00975000
*            SETFLAG                                                    00976000
*            TESTIDAL                                                   00977000
*        REGISTER USAGE:                                                00978000
*            INPUT : R1 - COPIED CCB ADDR                               00979000
*                    R2 - RETURN ADDR                                   00980000
*                    R5 - COPY LOCATION                                 00981000
*                    R6 - VIRTUAL CCW ADDR                              00982000
*                    R15- POINTER TO CCWTCB                             00983000
*            WORK  : R3, R8, R10, R12, R13, R14                         00984000
***************************************************************@D35CDJR 00985000
         SPACE 2                                                        00986000
         USING CCBADR,R1          SET BASE FOR CCB             @D35CDJR 00987000
         USING CCWADR,R5          SET BASE FOR COPIED CCW      @D35CDJR 00988000
         USING VCCWADR,R6         SET BASE FOR VIRTUAL CCW     @D35CDJR 00989000
         USING TCBADR,RF          SET BASE FOR TCB             @D36IDJR 00990000
GETCCW   DS    0H                                                       00991000
*SGLINK GETCCW INPUT=(R1,R2,R5,R6,RF),WORK=(R3,R8,RA,RC,RD,RE)          00992000
         TM    CCBBY3,CCWABOVE    CCW ABOVE 16M?               @D68ADAP 00993000
         BNZ   GETCCW20           YES,                         @D67EDAV 00994000
         CL    R6,ADDRMSK         16M BOUNDARY CROSSING?       @D67EDAV 00995000
         BH    ERROR7             YES, CANCEL                  @D67EDAV 00996000
GETCCW20 DS    0H                                              @D67EDAV 00997000
         MVC   CCWTOT,VCCWTOT     COPY VIRT CCW TO REAL LOCATIO@D32XDRP 00998000
PCKADR5  EQU   *                  ADDR. FOR PROGR. CHECK HANDLER        00999000
*                                                                       01000000
         BAL   R3,BLDCCW0         TRANSLATE CCW FORMAT 1 TO 0  @D52VDOW 01001000
*SGLINK BLDCCW0 INPUT=(R1,R3,R5),OUTPUT=RE,WORK=RD                      01002000
         DROP  R6                 DROP BASE FOR VIRTUAL CCW    @D35CDJR 01003000
         AIF   (NOT &LOLEV).NLOLEV2                            @DF02306 01004000
         BAL   R3,AVCCW           CALC. NUMBER OF CCW PER SVC 0         01005000
.NLOLEV2 ANOP                                                           01006000
         TM    CCWCODE,X'07'      ANY COMMAND OTHER THAN TIC?  @DF00882 01007000
         BNZ   GETCCW50           YES                                   01008000
         TM    CCWCODE,TIC        TIC COMMAND?                          01009000
         BZ    GETCCW40           NO,INVALID COMMAND                    01010000
         TM    CCBBY3,CCWABOVE    CCW ABOVE 16M?               @D68ADAP 01011000
         BNZ   GETCCW30           YES,                         @D67EDAV 01012000
         CL    RE,ADDRMSK         16M BOUNDARY CROSSING?       @D67EDAV 01013000
         BH    ERROR7             YES, CANCEL                  @D67EDAV 01014000
GETCCW30 DS    0H                                              @D67EDAV 01015000
         ST    RE,CCWCODE         USE TIC CMD FIELD TO SECURE  @D67EDAV 01016000
*                                 31-BIT ADDRESS                        01017000
         SR    R3,R3              CLEAR UNUSED PART OF         @D35CDJR 01018000
         ST    R3,CCWCHAIN        TIC COMMAND                  @D35CDJR 01019000
         BR    R2                 RETURN TO CCWTRANS TIC EXIT           01020000
         SPACE 2                                                        01021000
GETCCW40 TM    TCBFLAG,TCBDC      ARLREADY IN DATA CHAIN.      @DM02853 01022000
         BZ    4(,R2)             NO,RETURN TO CCWTRANS        @DM02853 01023000
GETCCW50 LA    R2,4(,R2)          SET RETURN ADDRESS TO NO-TIC EXIT     01024000
         TM    TCBFLAG,TCBDC      ARE WE ALREADY IN DATA CHAINING?      01025000
         BO    GETCCW60           YES,DON'T TEST CCW-CODE               01026000
         BAL   R3,SETFLAG         TEST CCW-CODE AND SET TCB FLAGS       01027000
*SGLINK SETFLAG INPUT=(R3,R5,RF),WORK=(R8,RA,RC,RD)                     01028000
         B     0(,R2)             RETURN TO CCWTRANS IF        @D52VDOW 01029000
*                                 CONTROL CMD WITHOUT DATA              01030000
*        B     *+4                CMD WITH DATA COPIED         @D52VDOW 01031000
         SPACE                                                          01032000
         OI    TCBFLAG,TCBDC      SET DATA CHAINING BIT IN TCB FLAGS.   01033000
*                                 IF NO DATA CHAINING IS SPECIFIED,     01034000
*                                 GETCCW WILL RESET THIS BIT LATER      01035000
GETCCW60 BAL   R3,TESTIDAL        TRANSLATE DATA ADDRESS OR BUILD IDAL  01036000
*SGLINK TESTIDAL INPUT=(R1,R3,R5,RE,RF),WORK=(RC,RD,RE)                 01037000
         TM    CCWCHAIN,DC        DATA CHAINING SPECIFIED?              01038000
         BOR   R2                 YES,RETURN TO CCWTRANS       @D367DWK 01039000
         TM    CCWCHAIN,CC        COMMAND CHAINING SPECIFIED?           01040000
         BZ    GETCCW70           NO                                    01041000
         TM    TCBFLAG,TCBSM1     WAS IT A STATUS MODIFIER COMMAND?     01042000
         BZ    GETCCW70           NO                                    01043000
         OI    TCBFLAG,TCBSM2     SET STAT.MOD.INDICATOR FOR CCWTRANS   01044000
GETCCW70 NI    TCBFLAG,X'0F'      RESET OTHER TCB FLAG BITS             01045000
         BR    R2                 RETURN TO CCWTRANS                    01046000
         SPACE 2                                               @D35CDJR 01047000
GETCCSAV DC    F'0'               REG 4 SAVE AREA              @D52VDOW 01048000
         DROP  R1                 DROP BASE FOR CCB            @D35CDJR 01049000
         DROP  R5                 DROP BASE FOR COPIED CCW     @D35CDJR 01050000
         DROP  RF                 DROP BASE FOR TCB            @D35CDJR 01051000
         TITLE 'DOS SUPERVISOR    SGCCWT          C C W - TRANSLATION  *01052000
               SETFLAG ROUTINE'                                         01053000
***************************************************************@D35CDJR 01054000
*        FUNCTION:                                                      01055000
*               IT WILL SET TEMPORARLY THE BITS IN THE FLAG BYTE        01056000
*               OF THE CCWTCB.                                          01057000
*        CALLED BY:                                                     01058000
*               GETCCW                                                  01059000
*        CALL SUBROUTINES:                                              01060000
*               DISPLRTN                                                01061000
*        REGISTER USAGE:                                                01062000
*               INPUT : R3 - RETURN ADDRESS                             01063000
*                            REG 3 + 4 --> IF CCW WITH DATA ADDR        01064000
*                            REG 3 + 0 --> IF CCW WITHOUT DATA ADDR     01065000
*                       R5 - COPY LOCATION                              01066000
*                       R15- POINTER TO CCWTCB                          01067000
*               WORK  : R8, R10, R12, R13                               01068000
***************************************************************@D35CDJR 01069000
         SPACE                                                          01070000
         USING CCWADR,R5           SET BASE FOR COPIED CCW     @D35CDJR 01071000
         USING TCBADR,RF           SET BASE FOR TCB            @D36IDJR 01072000
SETFLAG  DS    0H                                                       01073000
*SGLINK SETFLAG S,INPUT=(R3,R5,RF),WORK=(R8,RA,RC,RD)                   01074000
         SR    RC,RC               CLEAR REGISTER                       01075000
         TM    CCWCODE,WRITE       WRITE (OR CONTROL) COMMAND?          01076000
         BZ    SETFLAG2            NO,READ OR SENSE COMMAND             01077000
         TM    CCWCODE,CONTROL     CONTROL COMMAND?                     01078000
         BNO   SETFLAG1            NO,WRITE COMMAND                     01079000
         ICM   R8,15,DEVCDPTR      PTR TO CONTROL CMD LIST     @DF00882 01080000
         BZ    SETFLAGA            NO CONTROL COMMANDS WITH DATA        01081000
         IC    RC,CCWCODE          INSERT CCW-CODE                      01082000
         SRL   RC,2                SHIFT OUT TWO BITS                   01083000
         BAL   RA,DISPLRTN         GET BYTE AND BIT DISPLACEMENTS       01084000
*SGLINK DISPLRTN INPUT=RA,OUTPUT=(R8,RC),WORK=RD                        01085000
         EX    RC,DISPLTM          CNTRL COMMAND WITHOUT DATA? @D81RDAV 01086390
         BNO   SETFLAG0            NO, TEST FURTHER            @D81RDAV 01086780
*        EX    RC,DISPLTM          CONTROL COMMAND WITH DATA?           01087170
*        BO    SETFLAG0            YES, TEST FURTHER                    01087560
SETFLAGA STCM  R5,7,CCWBUF+1       NO, STORE A CORRECT REAL ADDR        01088000
         BR    R3                  RETURN NO DATA ADDR         @D52VDOW 01089000
         SPACE                                                          01090000
SETFLAG0 TM    TCBFLAG,CHKSTM      STATUS MODIFIER TO CHECK    @D36ZDWK 01091000
         BZ    4(,R3)              NO,RETURN TO GETCCW         @D52VDOW 01092000
SETFLAG1 TM    CCWCHAIN,DC+CC      ANY CHAINING SPECIFIED?     @D35CDJR 01093000
         BZ    4(,R3)              NO,RETURN TO GETCCW         @D52VDOW 01094000
         ICM   R8,15,DEVSTPTR      PTR TO STAT MOD CMD LIST    @DF00882 01095000
         BZ    4(,R3)              NO STATMOD LIST,--> GETCCW  @D52VDOW 01096000
         IC    RC,CCWCODE          INSERT CCW-CODE                      01097000
         BAL   RA,DISPLRTN         GET BYTE AND BIT DISPLACEMENTS       01098000
*SGLINK DISPLRTN INPUT=RA,OUTPUT=(R8,RC),WORK=RD                        01099000
         EX    RC,DISPLTM          STATUS MODIFIER COMMAND?             01100000
         BZ    4(,R3)              NO,RETURN TO GETCCW         @D52VDOW 01101000
         OI    TCBFLAG,TCBSM1      SET 1ST STAT.MOD. TCB FLAG BIT       01102000
         B     4(,R3)              RETURN TO GETCCW            @D52VDOW 01103000
         SPACE                                                          01104000
SETFLAG2 OI    TCBFLAG,TCBRDS      SET READ/SENSE FLAG BIT     @D35CDJR 01105000
         TM    CCWCODE,RDCOM       READ COMMAND?               @D35CDJR 01106000
         BO    SETFLAG1            YES                         @D35CDJR 01107000
         TM    CCWCODE,READB       READ BACKWARD COMMAND?      @D35CDJR 01108000
         BNO   SETFLAG1            NO,SENSE COMMAND            @D35CDJR 01109000
         OI    TCBFLAG,TCBRDB      SET READ BACKWARD FLAG BIT  @D35CDJR 01110000
         B     SETFLAG1            CHECK STATUS MODIFIER       @D35CDJR 01111000
         SPACE                                                          01112000
DISPLTM  TM    0(R8),ZERO          WILL BE USED BY EXECUTE INSTR        01113000
         DROP  R5                  DROP BASE FOR COPIED CCW    @D35CDJR 01114000
         DROP  RF                  DROP BASE FOR TCB           @D35CDJR 01115000
         TITLE 'DOS SUPERVISOR    SGCCWT          C C W - TRANSLATION  *01116000
               DISPLRTN ROUTINE'                                        01117000
***************************************************************@D35CDJR 01118000
*        PARAMETER: REG 8 POINTS TO A BIT FIELD                         01119000
*                   REG C CONTAINS THE NUMBER OF A BIT IN THIS FIELD    01120000
*                   REG A RETURN ADDRESS                                01121000
*        RESULT PARAMETER AFTER RETURN:                                 01122000
*                   REG 8 POINT TO THE BYTE WHICH CONTAINS THE BIT      01123000
*                   REG C CONTAINS A BIT IN THE CORRESPONDING POSITION  01124000
*        FUNCTION:                                                      01125000
*               IT WILL CALCULATE FROM A BIT NUMBER THE                 01126000
*               BYTE AND BIT ADDRESS IN A BIT FIELD.                    01127000
*        CALLED BY:                                                     01128000
*               SETFLAG                                                 01129000
*        REGISTER USAGE:                                                01130000
*               INPUT : RA - RETURN ADDRESS                             01131000
*               OUTPUT: R8 - POINTS TO A BIT FIELD                      01132000
*                       R12- CONTAINS THE # OF A BIT IN THIS FIELD      01133000
*               WORK  : R13                                             01134000
***************************************************************@D35CDJR 01135000
         SPACE 2                                                        01136000
DISPLRTN DS    0H                                                       01137000
*SGLINK DISPLRTN S,INPUT=RA,OUTPUT=(R8,RC),WORK=RD                      01138000
         LR    RD,RC                                           @DF00882 01139000
         N     RD,F7              GET BIT OFFSET IN RD         @D52VDOW 01140000
         SRL   RC,L3              CALCULATE BIT OFFSET IN RD   @DF00882 01141000
         AR    R8,RC              POINT TO TRUE BYTE IN BIT FIELD       01142000
         LA    RC,MSKBIT          LOAD MASK BIT IN RC                   01143000
         SRL   RC,0(RD)           SHIFT MASK BIT BY BIT OFFSET          01144000
         BR    RA                 RETURN TO CALLER                      01145000
         TITLE 'DOS SUPERVISOR    SGCCWT          C C W - TRANSLATION  *01146000
               BUILD FORMAT 0 CCW'                                      01147000
***************************************************************@D35CDJR 01148000
*    FUNCTION:                                                          01149000
*        FORMAT 1 CCW IS CHANGED TO A FORMAT 0 CCW. THE DATA ADDRESS    01150000
*        IS SAVED IN R14                                                01151000
*    CALLED BY:                                                         01152000
*        CCWTRANS                                                       01153000
*        GETCCW                                                         01154000
*    REGISTER USAGE:                                                    01155000
*        INPUT : R1  COPIED CCB                                         01156000
*                R3  CONTAINS RETURN ADDRESS                            01157000
*                R5  POINTS TO A COPIED CCW                             01158000
*        OUTPUT: R14 DATA ADDR FROM CCW                                 01159000
*        WORK  : R13                                                    01160000
***************************************************************@D35CDJR 01161000
         SPACE 2                                                        01162000
         USING CCBADR,R1           SET BASE FOR CCB            @D52VDOW 01163000
         USING CCWADR,R5           SET BASE FOR COPIED CCW     @D52DVOW 01164000
BLDCCW0  DS    0H                                              @D52VDOW 01165000
*SGLINK BLDCCW0 S,INPUT=(R1,R3,R5),OUTPUT=RE,WORK=RD                    01166000
         XR    RE,RE                                           @D52VDOW 01167000
         LR    RD,RE                                           @D52VDOW 01168000
         ICM   RE,7,CCWBUF+1       LOAD DATA ADDR (FORMAT 0 CCW@D52VDOW 01169000
         TM    CCBBY3,CCBCCWF1     FORMAT 1 CCW'S USED         @D52VDOW 01170000
         BNO   BLDCCW05            NO, --->                    @D52VDOW 01171000
         ICM   RD,3,CCWLNG1        GET DATA LENGTH FROM CCW    @D52VDOW 01172000
         L     RE,CCWBUF1          GET DATA ADDR FROM CCW      @D52VDOW 01173000
         MVC   CCWCHAIN,CCWFLAG1   MOVE FLAGS TO FORMAT 0 LOCAT@D52VDOW 01174000
         STCM  RD,7,CCWCHAIN+1     LENGTH TO FORMAT 0 LOCATION @D52VDOW 01175000
         STCM  RE,7,CCWBUF+1       SAVE IN CASE OF 3-BYTE ADDR @D52VDOW 01176000
BLDCCW05 TM    CCWCODE,X'07'       ANY COMMAND OTHER THAN TIC? @D52VDOW 01177000
         BNZ   BLDCCW06            YES                         @D52VDOW 01178000
         TM    CCWCODE,TIC         TIC COMMAND?                @D52VDOW 01179000
         BOR   R3                  YES, DON'T CHECK IDAL       @D52VDOW 01180000
BLDCCW06 TM    CCBCLS,XCPR         EXCP-REAL REQUEST           @D67EDAV 01181000
         BOR   R3                  YES, DON'T CHECK IDAL       @D67EDAV 01182000
         TM    CCWCHAIN,IDAL       USER IDAL                   @D52VDOW 01183000
         BO    ERROR4              YES, CANCEL WITH ILLEGAL SVC@D52VDOW 01184000
         BR    R3                  RETURN                      @D52VDOW 01185000
         DROP  R1                                              @D52VDOW 01186000
         DROP  R5                                              @D52VDOW 01187000
         TITLE 'DOS SUPERVISOR    SGCCWT          C C W - TRANSLATION  *01188000
               TESTIDAL ROUTINE'                                        01189000
***************************************************************@D35CDJR 01190000
*    FUNCTION:                                                          01191000
*        WHEN AN IDAL IS NEEDED, THIS ROUTINE FORMS THE IDAL BUT WITH   01192000
*        VIRTUAL ADDRESSES. IF THE USER HAS SPECIFIED THE IDAL BIT,     01193000
*        ONLY THE USERS IDAL WILL BE COPIED.IF NO IDAL IS NEEDED        01194000
*        THE DATA ADDRESS WILL BE TRANSLATED.                           01195000
*    CALLED BY:                                                         01196000
*        CCWTRANS,GETCCW                                                01197000
*    CALLS SUBROUTINES:                                                 01198000
*        GETBLOCK,GETDCBLK                                              01199000
*        GETDCBLK                                                       01200000
*        FIXAREA                                                        01201000
*    REGISTER USAGE:                                                    01202000
*        INPUT : R1  COPIED CCB                                         01203000
*                R3  CONTAINS RETURN ADDRESS                            01204000
*                R5  POINTS TO A COPIED CCW                             01205000
*                R14 DATA ADDRESS FROM CCW                              01206000
*                R15 POINTS TO CCWTCB                                   01207000
*        OUTPUT: -                                                      01208000
*        WORK  : R12,R13,R14                                            01209000
***************************************************************@D35CDJR 01210000
         SPACE 2                                                        01211000
         USING CCBADR,R1           SET BASE FOR CCB            @D35CDJR 01212000
         USING CCWADR,R5           SET BASE FOR COPIED CCW     @D35CDJR 01213000
         USING TCBADR,RF           SET BASE FOR TCB            @D36IDJR 01214000
TESTIDAL DS    0H                                              @D52VDOW 01215000
*SGLINK TESTIDAL S,INPUT=(R1,R3,R5,RE,RF),WORK=(RC,RD,RE)               01216000
         TM    CCBCLS,XCPR         EXCP-REAL REQUEST           @D67EDAV 01217000
         BNO   IDAL010             NO, CHECK FURTHER           @D31VTAX 01218190
         CL    RE,ADDRMSK          24 BIT ADDR                 @D31VTAX 01218380
         BNHR  R3                  YES, RETURN ==============> @D31VTAX 01218570
IDAL010  DS    0H'0'                                           @D31VTAX 01218760
         XR    RD,RD               CLEAR RD FOR INSERT         @D52VDOW 01219000
         ICM   RD,3,CCWLNG         CCWCOUNT                    @D52VDOW 01220000
         TM    TCBFLAG,TCBRDS      READ/SENSE COMMAND?         @D52VDOW 01221000
         BZ    IDAL020             NO,DONT TEST SKIP BIT       @D52VDOW 01222000
         TM    CCWCHAIN,SKIP       SKIPPING SPECIFIED?         @D52VDOW 01223000
         BZ    IDAL020             NO,                         @D14ZDWK 01224000
         STCM  R5,7,CCWBUF+1       STORE A CORRECT REAL ADDR            01225000
         BR    R3                  RETURN ===================>          01226000
IDAL020  LTR   RD,RD               CCWCOUNT ZERO               @D52VDOW 01227000
         BZR   R3                  RETURN IF ZERO ===========> @D14BDWK 01228000
         LR    RC,RE               DATA ADDR TO WORK REGISTER  @D52VDOW 01229000
         TM    TCBFLAG,TCBRDB      READ BACKWARD COMMAND       @D14BDWK 01230000
         BZ    IDAL030             NO                          @D14BDWK 01231000
         BCTR  RD,0                ADJUST COUNT TO GET         @DA37152 01232000
         SR    RC,RD                 LOW DATA AREA ADDRESS     @DA37152 01233000
         AR    RD,RC               CALCULATE HIGH DATA ADDRESS @DA37152 01234000
         LTR   RC,RC               LOW ADDRESS BELOW ZERO      @DA37152 01235000
         BNM   IDAL040             NO,                         @DA37152 01236000
         SLR   RC,RC               SET LOW DATA START          @DA37152 01237000
         B     IDAL040               ADDRESS TO ZERO           @DA37152 01238000
IDAL030  AR    RD,RC               GET HIGH ADDRESS OF I/O AREA@D14BDWK 01239000
         BCTR  RD,0                LAST BYTE OF I/O AREA       @D14BDWK 01240000
IDAL040  STM   R3,R4,DYNAREA1      SAVE REGISTERS              @D31QDRP 01241000
         CL    RE,ADDRMSK          24 BIT ADDR                 @KD40263 01242000
         BH    IDAL050             NO,  IDAL IS REQUIRED       @KD40263 01243000
         CLI   IJBEOR,X'00'        MORE THAN 16 MB REAL        @D51GDTP 01244000
         BNE   IDAL050             YES, --->                   @D51GDTP 01245000
         LR    R4,RC               GET LOW ADDRESS (LA)        @D31QDRP 01246000
         N     R4,PADDRMSK         SET IT ON PAGE BOUNDARY     @D31QDRP 01247000
         A     R4,PDISPMSK         *  DOES DATA AREA           @D31QDRP 01248000
         CR    R4,RD               *    CROSS PAGE BOUNDARY    @D31QDRP 01249000
         BL    IDAL050             YES, BUILD IDAL             @D31QDRP 01250000
         L     R4,DYNAREA2         RESTORE REGISTER            @D52VDOW 01251000
         B     FIXAREA             TRANSLATE DATA ADDRESS AND  @D52VDOW 01252000
***                                FIXAREA RETURNS WITH ADDRESS FROM    01253000
***                                R3 TO THE CALLER OF TESTIDAL         01254000
         SPACE 2                                                        01255000
*    CALCULATE NUMBER OF IDA ENTRIES REQUESTED                 @D31QDRP 01256000
IDAL050  DS    0H                                              @D52VDOW 01257000
         N     RC,PXADDR2K         SET LA TO 2K BOUNDARY       @D52VDOW 01258000
         N     RD,PXADDR2K         SET HA TO 2K BOUNDARY       @D52VDOW 01259000
         SR    RD,RC               CALCULATE NUMBER OF 2K BLKS @DA33314 01260000
         SRL   RD,IDALSHFT         OF I/O AREA                 @DA33314 01261000
         L     RC,IDALCNT          LOAD NUMBER OF FREE IDA WORDS        01262000
         L     R4,CCBICB           LOAD ADDRESS OF IDAL BLOCK           01263000
         USING CCWBLOCK,R4         SET BASE FOR CCW COPY BLK   @D37ADWK 01264000
         LA    RD,1(,RD)           CORRECT NEEDED IDAL WORDS            01265000
         CR    RD,RC               SUFFICIENT IDA WORDS IN BLOCK?       01266000
         BH    IDAL060             NO, GET NEW BLOCK           @D14ZDWK 01267000
         CLI   ANB,CCWBLUSE        IS IT A DOUBLE BLOCK                 01268000
         BE    IDAL090             NO                          @D14ZDWK 01269000
         B     IDAL070             YES                         @D14ZDWK 01270000
IDAL060  LA    RC,IDBLKNB          NORMAL IDAL BLOCK CAPACITY  @D14ZDWK 01271000
         CR    RD,RC               MORE THAN 32 K              @D37ADWK 01272000
         BNH   IDAL080             NO, HANDLE NORMAL BLOCK     @D14ZDWK 01273000
         LA    RC,IDBLKDB          DOUBLE IDAL BLOCK CAPACITY  @D37ADWK 01274000
         USING DCBLOCK,R4          BASE FOR DOUBLE COPY BLOCK  @D37ADWK 01275000
         BAL   R3,GETDCBLK         GET NEW IDAL BLOCK          @D37ADWK 01276000
         MVC   DCBLANB,CCBICB+1    ENQUEUE NEW BLOCK           @D37ADWK 01277000
         ST    R4,CCBICB           STORE NEW POINTER           @D37ADWK 01278000
IDAL070  LA    R4,DCBLRES          NEEDED TO CALC.1.FREE IDAW  @D14ZDWK 01279000
         B     IDAL100             CONTINUE                    @D14ZDWK 01280000
         USING CCWBLOCK,R4         SET BASE FOR CCW COPY BLK   @D37ADWK 01281000
IDAL080  BAL   R3,GETBLOCK         GET NEW IDAL BLOCK          @D14ZDWK 01282000
         MVC   ANB+1(3),CCBICB+1   ENQUEUE NEW BLOCK           @D37ADWK 01283000
         ST    R4,CCBICB           STORE NEW POINTER                    01284000
IDAL090  LA    R4,ANB              NEEDED TO CALC.1.FREE IDAW  @D14ZDWK 01285000
IDAL100  LR    R3,RC               COPY NUMBER OF FREE IDAW    @D14ZDWK 01286000
         SR    R3,RD               DECREASE IDAL COUNTER                01287000
         ST    R3,IDALCNT          STORE NEW IDAL COUNTER               01288000
         AR    RC,RC               CALC.NUMBER OF FREE BYTES            01289000
         AR    RC,RC               (MULTIPL. BY 4)                      01290000
         SR    R4,RC               POINT TO 1ST FREE IDA WORD           01291000
         ST    RE,0(,R4)           CCW-DATA ADDR TO 1ST IDAW   @D52VDOW 01292000
         STCM  R4,7,CCWBUF+1       INSERT ADDR OF IDAL IN CCW           01293000
         OI    CCWCHAIN,IDAL       SET IDAL BIT IN CCW                  01294000
         LR    R3,RE               LOAD 1ST DATA ADDR          @KD40263 01295000
         N     R3,PXADDR2K         CALC 2K PAGE ADDRESS        @D52VDOW 01296000
         L     RE,BLKSIZE          LOAD INCREMENT(=2K BLOCK)   @D52VDOW 01297000
         TM    TCBFLAG,TCBRDB      READ BACKWARD COMMAND                01298000
         BZ    IDAL110             NO                          @D14ZDWK 01299000
         BCTR  R3,0                POINT TO LAST               @D52VDOW 01300000
         AR    R3,RE               ...   BYTE IN I/O BLOCK     @D52VDOW 01301000
         LCR   RE,RE               LOAD NEGATIVE BLOCK SIZE             01302000
IDAL110  BCT   RD,IDAL120          DECREASE LOOP COUNTER       @D52VDOW 01303000
         B     IDAL125             ONLY ONE IDAL NECESSARY     @D52VDOW 01304000
IDAL120  LA    R4,4(,R4)           POINT TO NEXT IDAW LOCATION @D14BDWK 01305000
         AR    R3,RE               CALC NEXT IDAW                       01306000
         ST    R3,0(,R4)           STORE IN IDAW LOCATION               01307000
         BCT   RD,IDAL120          MORE IDAW                   @D14ZDWK 01308000
IDAL125  OI    4(R4),EOB           SET LOGICAL END OF BLOCK    @D51GDTP 01309000
         LM    R3,R4,DYNAREA1      RESTORE REGISTERS           @D14ZDWK 01310000
         BR    R3                  RETURN ===================> @D14BDWK 01311000
         SPACE 1                                               @D149DWK 01312000
         DROP  R1                  DROP BASE FOR CCB           @D35CDJR 01313000
         DROP  R4                  DROP BASE FOR CCW COPY BLK  @D35CDJR 01314000
         DROP  R5                  DROP BASE FOR COPIED CCW    @D35CDJR 01315000
         DROP  RF                  DROP BASE FOR TCB           @D35CDJR 01316000
         TITLE 'DOS SUPERVISOR    SGCCWT          C C W - TRANSLATION  *01317000
               LOCATE ROUTINE'                                          01318000
***************************************************************@D35CDJR 01319000
*        FUNCTION:                                                      01320000
*              CALCULATE FOR A VIRTUAL ADDR.THE TRUE COPY LOCATION      01321000
*              IN A CCW COPY BLOCK,BLOCK ALIGNEMENT WILL BE CALC.       01322000
*              THAT THE NEW BLOCK ADJOINS TO AN ALREADY EXISTING        01323000
*              BLOCK IF POSSIBLE,OR A SHORT BLOCK WILL BE CREATED.      01324000
*              THE BLOCK END TIC WILL BE MOVED BACKWARDS,THEREFORE      01325000
*              LESS THEN 7 COPY LOCATIONS ARE AVAILABL.                 01326000
*        CALLED BY:                                                     01327000
*              CCWTRANS                                                 01328000
*        ENTRY POINTS:                                                  01329000
*              LOCATE                                                   01330000
*              LOCATE1                                                  01331000
*        CALL SUBROUTINES:                                              01332000
*              GETBLOCK                                                 01333000
*        REGISTER USAGE: R1,R4,R5,R6,R8,R9,RC,RD,RE                     01334000
*              INPUT : R1 COPIED CCB                                    01335000
*                      R2 RETURN ADDRESS                                01336000
*                      R4 ADDR OF CCW COPY BLOCK (LOCATE1 ONLY)         01337000
*                      R6 VIRTUAL CCW ADDRESS                           01338000
*              OUTPUT: R4 ADDR OF CCW COPY BLOCK                        01339000
*                      R5 CCW COPY LOCATION                             01340000
*              WORK  : R8, R10, R12, R13, R14                           01341000
*                                                                       01342000
***************************************************************@D35CDJR 01343000
         SPACE 2                                               @D35CDJR 01344000
         USING CCBADR,R1           SET BASE FOR CCB            @D35CDJR 01345000
         USING CCWBLOCK,R4         SET BASE FOR CCW COPY BLK   @D35CDJR 01346000
LOCATE   DS    0H                                                       01347000
*SGLINK LOCATE S,INPUT=(R1,R6),OUTPUT=(R4,R5),WORK=(R8,RA,RC,RD,RE)     01348000
         LA    R4,CCBACB           POINT TO DUMMY LOW BLOCK             01349000
         SH    R4,CCWH68                                                01350000
         LM    RC,RE,LOCC1         LOAD(VBA,BA,VBA) OF DUMMY BLOCKS     01351000
         B     LOC1                                                     01352000
LOCATE1  DS    0H                                                       01353000
*SGLINK LOCATE1 S,INPUT=(R1,R4,R6),OUTPUT=(R4,R5),WORK=(R8,RA,RC,RD,RE) 01354000
         L     RC,VBA              SAVE VBA OF LOW BLOCK IN RC          01355000
         LM    RD,RE,LOCC2         LOAD BA AND VBA OF DUMMY HIGH BLOCK  01356000
LOC1     ICM   R5,7,ANB+1          POINT TO NEXT BLK           @D35CDJR 01357000
*                                      (=HIGH BLOCK)                    01358000
         BZ    LOC3                NO BLOCK AVAILABLE                   01359000
         L     R8,VBA-CCWBLOCK(,R5) LOAD VBA OF HIGH BLOCK              01360000
         CR    R6,R8               V LESS THEN VBA OF HIGH BLOCK?       01361000
         BL    LOC2                YES                                  01362000
         LR    R4,R5               LOAD BLOCK ADDR OF NEW LOW BLOCK     01363000
         LR    RC,R8               SAVE VBA OF NEW LOW BLOCK            01364000
         B     LOC1                TEST AGAIN                           01365000
LOC2     LR    RD,R5               SAVE BLOCK ADDR OF HIGH BLOCK        01366000
         LR    RE,R8               SAVE VBA OF HIGH BLOCK               01367000
LOC3     LH    R5,CCWTIC1L         COPY LOCATION               @KD40263 01368000
         ALR   R5,RC                                           @KD40263 01369000
         CR    R6,R5                   IN BLOCK?                        01370000
         BNL   LOC5                NO,CREATE AND ENQUEUE NEW BLOCK      01371000
LOC4     LR    R5,R4               CALC ADDR OF COPY LOCATION           01372000
         AR    R5,R6                  IN R5 BY THE FORMULA              01373000
         SR    R5,RC                     Z=BA+V-VBA                     01374000
         BR    R2                  RETURN TO CALLER                     01375000
*                                                                       01376000
LOC5     LR    RA,R4               SAVE BLOCK ADDR OF LOW BL   @D32XDRP 01377000
         BAL   R3,GETBLOCK         GET NEW CCW COPY BLOCK               01378000
         STCM  R4,7,ANBDISP(RA)    ENQUEUE NEW BLK BEHIND LOW  @D37ADWK 01379000
         STCM  RD,7,ANB+1          BLOCK AND BEFORE HIGH BLOCK @D37ADWK 01380000
         MVI   TIC1,EOCL           INITIALIZE NEW COPY BLOCK            01381000
         MVI   TIC2,EOCL+TIC                                            01382000
         LA    R5,112              IS ALIGNMENT                @KD40263 01383000
         ALR   R5,RC               ... TO LOW BLOCK POSSIBLE?  @KD40263 01384000
         CR    R6,R5                                                    01385000
         BNL   LOC6                NO,TEST ALIGNMENT TO HIGH BLOCK      01386000
         AH    RC,CCWTIC1L         CALC VBA OF NEW BLOCK       @KD40263 01387000
         ST    RC,VBA              AND STORE IT IN BLOCK                01388000
         CR    R5,RE               IS NEW BLOCK A SHORT BLOCK?          01389000
         BNH   LOC4                NO,CALC ADDR OF COPY LOCATION        01390000
         SR    RE,RC               CALC DISPLACEMENT OF ENDTIC LOC      01391000
         AR    RE,R4               ADD BLOCK ADDR                       01392000
         MVI   0(RE),EOCL          INITIALIZE SHORT BLOCK               01393000
         MVI   8(RE),EOCL+TIC                                           01394000
         B     LOC4                CALC ADDR OF COPY LOCATION           01395000
LOC6     LR    RC,RE               IS ALIGNMENT TO HIGH BLOCK POSSIBLE  01396000
         AH    RC,LOCC1+2                                               01397000
         CR    R6,RC                                                    01398000
         BNL   LOC7                YES,NEW VBA IS ALREADY IN RC         01399000
         LR    RC,R6               SET NEW VBA = V                      01400000
LOC7     ST    RC,VBA              STORE VBA IN BLOCK                   01401000
         B     LOC4                CALC ADDR OF COPY LOCATION           01402000
         SPACE 2                                               @D35CDJR 01403000
         DROP  R1                  DROP BASE FOR CCB           @D35CDJR 01404000
         DROP  R4                  DROP BASE FOR CCW COPY BLK  @D35CDJR 01405000
         TITLE 'DOS SUPERVISOR    SGCCWT          C C W - TRANSLATION  *01406000
               FIXAREA ROUTINE'                                         01407000
*--------------------------------------------------------------@D149DWK 01408000
*                                                              @D149DWK 01409000
*  FUNCTION:  IT WILL FIX THE REAL PAGE FRAME CORRESPONDING    @D149DWK 01410000
*             TO THE VIRTUAL ADDR.AND THEN REPLACE VIRTUAL BY  @D149DWK 01411000
*             REAL ADDR.TEMPORARY FIXING WILL BE DONE BY TFIX  @D149DWK 01412000
*             ROUTINE                                          @D149DWK 01413000
*  INPUT         : R3 - RETURN ADDRESS                         @D149DWK 01414000
*                  R5 - POINTER TO A FULLWORD, CONTAINING      @D149DWK 01415000
*                       THE VIRTUAL ADDRESS                    @D149DWK 01416000
*                  RF - POINTS TO CCWTCB                       @D149DWK 01417000
*  EXTERNAAL REFERENCES : VALWRITE                             @D149DWK 01418000
*  CALLED FROM   : CCWTRANS,TESTIDAL                           @D149DWK 01419000
*  WILL CALL     : VALWRITE,GETBLOCK,RELBLOCK,CCWFIX           @D149DWK 01420000
*  WORK REGISTER : R1,R2,R3,R4,R5,R6,R7,R8,RA,RC               @D149DWK 01421000
*                  R1 - R6 SAVED AND RESTORED                  @D149DWK 01422000
*                                                              @D149DWK 01423000
*--------------------------------------------------------------@D149DWK 01424000
         SPACE 1                                               @D149DWK 01425000
         USING CCBADR,R1           BASE FOR COPIED CCB         @D149DWK 01426000
         USING CCWADR,R5           BASE FOR COPIED CCW         @D149DWK 01427000
         USING TCBADR,RF           BASE FOR TCB                @D149DWK 01428000
FIXAREA  ST    R7,DYNAREA6         SAVE TIC ADDRESS            @D52VDOW 01429000
         L     R8,0(,R5)           LOAD VIRTUAL ADDRESS        @D14ZDWK 01430000
         TM    CCWTFLG2,CCWTFIDA   ARE WE FIXING FOR IDAL      @D51GDTP 01431000
         BO    FIXAR010            YES, --->                   @D51GDTP 01432000
         N     R8,ADDRMSK          CLEAR HIGH ORDER BYTE       @D67EDAV 01433000
FIXAR010 DS    0H                                              @D51GDTP 01434000
         LRA   R7,0(,R8)           GET REAL ADDRESS            @D14ZDWK 01435000
         BO    FIXAER25            LENGTH VIOLATION, DON'T FIX @D52VDOW 01436000
         BNZ   FIXAR060            NO REAL ADDRESS GIVEN       @D14ADWK 01437000
         CR    R7,R8               VIRTUAL=REAL?                        01438000
         BNE   FIXAR020            NO                          @D14ADWK 01439000
         L     R8,IJBSMCOM                                     @D51GDRP 01440000
         USING SMCOM,R8                                        @D51GDRP 01441000
         C     R7,SMCSSEND         ADDRESS WITHIN SUPERVISOR   @D51GDRP 01442000
         DROP  R8                                              @D51GDRP 01443000
         BL    FIXAR360            YES, DO NOT FIX             @D52VDOW 01444000
         TM    SUPFLAG,PMRINIT     PMR ALREADY INITIALIZED     @D61CDOW 01445000
         BNO   FIXAR360            NO, SKIP FIXING             @D61CDOW 01446000
FIXAR020 TM    CCBCLS,BTAM         BTAM REQUEST                @D14ADWK 01447000
         BO    FIXAR340            YES,SKIP DON'T FIX AND WAIT @D14ADWK 01448000
         SPACE 1                                               @D149DWK 01449000
*--------------------------------------------------------------@D149DWK 01450000
*        CHECK IF PAGE ALREADY FIXED                           @D149DWK 01451000
*--------------------------------------------------------------@D149DWK 01452000
         SPACE 1                                               @D149DWK 01453000
         LR    RC,R7               LOAD REAL ADDR              @D14ADWK 01454000
         SRL   RC,PNSHIFT          CALC REAL PAGE NUMBER       @D14ADWK 01455000
         LA    R8,CCBXINF          FIXLIST ADDR.IN COPIED CCB  @D14ADWK 01456000
         USING CCWFLBLK,R8         FIXLIST BLOCK BASE          @D14ADWK 01457000
FIXAR040 C     R8,CCWTFREP         FREE ENTRY ADDRESS          @D14ADWK 01458000
         BE    FIXAR060            YES, PAGE NOT FIXED         @D14ADWK 01459000
         C     RC,CCWFLENT         CHECK PAGE NUMBER           @D14ADWK 01460000
         BE    FIXAR340            PAGE IS ALREADY FIXED       @D64YDOW 01461000
         LA    R8,CCWFLNXE(,R8)    POINT TO NEXT ENTRY IN LIST @D14ADWK 01462000
         TM    CCWFLENT,EOCL       BLOCK END REACHED           @D14ADWK 01463000
         BNO   FIXAR040            NO, CHECK ENTRY             @D51IDOW 01464000
         ICM   R8,7,1(R8)          GET NEXT BLOCK ADDRESS      @D14ADWK 01465000
         BNZ   FIXAR040            AVAILABLE, CHECK ENTRY      @D14ADWK 01466000
         DROP  R8                  RELEASE FIXLIST BLOCK BASE  @D14ADWK 01467000
         SPACE 1                                               @D149DWK 01468000
*--------------------------------------------------------------@D149DWK 01469000
*        VALIDATE ADDRESS                                      @D149DWK 01470000
*--------------------------------------------------------------@D149DWK 01471000
         SPACE 1                                               @D149DWK 01472000
FIXAR060 TM    CCBCLS,BTAM         BTAM REQUEST                @D14ADWK 01473000
         BO    FIXAR360            YES, IGNORE ADDRESS         @D14ADWK 01474000
         STM   R1,R5,DYNAREA1      SAVE WORK REGISTERS         @D52VDOW 01475000
         LR    R4,R6               SAVE R6                     @D52VDOW 01476000
         L     R6,DISPAD           POINT TO DISPATCHER         @D14BDWK 01477000
         USING DISP,R6             DISPATCHER BASE             @D14BDWK 01478000
         L     R1,0(,R5)           GET AREA START ADDRESS      @D14BDWK 01479000
         TM    CCWTFLG2,CCWTFIDA   ARE WE FIXING IDAL          @D51GDTP 01480000
         BO    FIXAR070            YES, SKIP 1ST BYTE CLEAR    @D51GDTP 01481000
         N     R1,ADDRMSK          CLEAR HIGH ORDER BYTE       @D67EDAV 01482000
FIXAR070 LR    R2,R1               GET AREA END ADDRESS        @D51GDTP 01483000
         LH    R5,PIK              GET REQUESTORS PIK          @D14BDWK 01484000
         CLC   TID(2),ARTIDH       SYSTEM TASK REQUEST         @D51IDOW 01485000
         BH    FIXAR080            NO,                         @D14BDWK 01486000
         SLR   R5,R5               INDICATE SYSTEM TASK REQUEST@D14BDWK 01487000
FIXAR080 EQU   *                                               @D14BDWK 01488000
         SPACE 1                                               @D149DWK 01489000
         BAL   R8,VALWRITE         CHECK AREA                  @D14BDWK 01490000
*SGLINK  VALWRITE INPUT=(R1,R2,R6,R8),WORK=(R2,R5),OUTPUT=(R2) @D149DWK 01491000
         B     FIXAER10            INVALID ADDRESS             @D52VDOW 01492000
         B     FIXAER00            PROTECTION KEY CHANGE       @D14BDWK 01493000
         DROP  R6                  RELEASE DISPATCHER BASE     @D14BDWK 01494000
         LR    R6,R4               RESTORE R6                  @D52VDOW 01495000
         SPACE 1                                               @D149DWK 01496000
FIXAR120 LM    R1,R2,DYNAREA1      RELOAD REGISTER             @D52VDOW 01497000
         L     R5,DYNAREA5         RELOAD REGISTER             @D52VDOW 01498000
         SPACE 1                                               @D149DWK 01499000
*--------------------------------------------------------------@D149DWK 01500000
*        TFIX THE PAGE                                         @D149DWK 01501000
*--------------------------------------------------------------@D149DWK 01502000
         SPACE 1                                               @D149DWK 01503000
         OI    CCBFLAG,TTFIX       TFIX STARTED OR COMPLETE    @D14ADWK 01504000
         BAL   RA,CCWFIX           GOTO TFIX ONE PAGE          @D35CDJR 01505000
         SPACE 1                                               @D149DWK 01506000
*--------------------------------------------------------------@D149DWK 01507000
*        SAVE PAGE FRAME NUMBER IN FIXLIST                     @D149DWK 01508000
*--------------------------------------------------------------@D149DWK 01509000
         SPACE 1                                               @D149DWK 01510000
         MVC   DYNAREA1(8),DYNAREA3 REG 3 AND 4 TO PROP SAVEARE@D52VDOW 01511000
         LR    RC,R7               LOAD REAL ADDR              @D14ADWK 01512000
         SRL   RC,PNSHIFT          CALC REAL PAGE NUMBER       @D14ADWK 01513000
         L     R4,CCWTFREP         GET FREE ENTRY IN FIXLIST   @D14ADWK 01514000
         TM    0(R4),EOCL          FIXLIST CHAIN POINTER       @D14ADWK 01515000
         BNO   FIXAR140            NO                          @D51IDOW 01516000
         LR    RA,R4               COPY FIXLIST CHAIN POINTER  @D51IDOW 01517000
         OI    TCBFLAG,FXGETBL     IND. REQ. FOR FIXINF BLOCK  @D14ADWK 01518000
         BAL   R3,GETBLOCK         NO, GET A COPYBLOCK         @D14ADWK 01519000
         NI    TCBFLAG,XFF-FXGETBL RESET GET-FIXINF-BLK IND.   @D14ADWK 01520000
         STCM  R4,7,1(RA)          CHAIN NEW FIXLIST BLOCK     @D51IDOW 01521000
         USING CCWFLBLK,R4         FIXLIST BLOCK BASE          @D14ADWK 01522000
         OI    CCWFLANB,EOCL       SET BLOCK END               @D14ADWK 01523000
FIXAR140 ST    RC,CCWFLENT         STORE REAL PAGE NUMBER      @D14ADWK 01524000
         LA    R4,CCWFLNXE(,R4)    POINT TO NEXT ENTRY IN LIST @D14ADWK 01525000
         ST    R4,CCWTFREP         SET NEW FREE ENTRY ADDRESS  @D14ADWK 01526000
         DROP  R4                  FIXLIST BLOCK BASE          @D14ADWK 01527000
         SPACE 1                                               @D149DWK 01528000
FIXAR320 LM    R3,R4,DYNAREA1      RESTORE REGISTERS           @D52VDOW 01529000
         SPACE 1                                               @D149DWK 01530000
*--------------------------------------------------------------@D149DWK 01531000
*        STORE REAL ADDRESS IN COPIED CCW OR IDAL              @D149DWK 01532000
*--------------------------------------------------------------@D149DWK 01533000
         SPACE 1                                               @D149DWK 01534000
FIXAR340 TM    CCWTFLG2,CCWTFIDA   ARE WE FIXING IDAL          @D51GDTP 01535000
         BNO   FIXAR350            NO, IT IS CCW --->          @D51GDTP 01536000
         ST    R7,0(,R5)           SAVE 31 BIT REAL ADDRESS    @D51GDTP 01537000
         B     FIXAR360                                        @D51GDTP 01538000
FIXAR350 STCM  R7,7,CCWBUF+1       REPLACE VIRTUAL ADDRESS     @D51GDTP 01539000
FIXAR360 L     R7,DYNAREA6         RELOAD TIC ADDRESS          @D52VDOW 01540000
         BR    R3                  RETURN TO CCWTRANS                   01541000
         SPACE 1                                               @D149DWK 01542000
*--------------------------------------------------------------@D149DWK 01543000
*        HANDLE INVALID ADDRESS                                @D149DWK 01544000
*--------------------------------------------------------------@D149DWK 01545000
         SPACE 1                                               @D149DWK 01546000
FIXAER00 DS    0H                                                       01547000
         LR    R6,R4               RELOAD WORK REGISTER        @D52VDOW 01548000
         L     R8,IJBSMCOM                                     @D52VDOW 01549000
         USING SMCOM,R8                                        @D52VDOW 01550000
         CL    R1,SMCSVA           ADDRESS IN SVA              @D52VDOW 01551000
         BL    FIXAER20            NO, BRANCH                  @D51GDRP 01552000
         CL    R1,SMCESVA          ADDRESS IN SVA              @D51GDRP 01553000
         BNH   FIXAR120            YES                         @D64YDOW 01554000
         CL    R1,SMCSVA31         REQUEST FROM SVA HIGH       @KD40263 01555000
         BL    FIXAER20            NO,  REQ IS FROM PARTITION  @KD40263 01556000
         CL    R1,SMCESV31         REQUEST REALLY FROM SVA HIGH@KD40263 01557000
         BNH   FIXAR120            YES                         @D64YDOW 01558000
         DROP  R8                                              @KD40263 01559000
FIXAER20 LM    R1,R5,DYNAREA1      RELOAD REGISTER             @D52VDOW 01560000
FIXAER25 TM    CCWTFLG2,CCWTFIDA   IS IT MEMBER OF AN IDAL     @D52VDOW 01561000
         BZ    FIXAER30            NO                          @D14ADWK 01562000
         MVC   CCWBUF(4),CCWINVAD  END OF REAL ADDR.SPACE      @D52VDOW 01563000
         B     FIXAR360                                        @D14ADWK 01564000
FIXAER30 XC    CCWLNG,CCWLNG       CLEAR LENGTH IN COPIED CCW  @D14ADWK 01565000
         B     FIXAR360                                        @D14ADWK 01566000
*                                                                       01567000
FIXAER10 DS    0H                                                       01568000
         LR    R6,R4               RELOAD WORK REGISTER        @D52VDOW 01569000
         B     FIXAER20                                        @D52VDOW 01570000
*                                                                       01571000
         DROP  R1                  RELEASE COPIED CCB BASE     @D149DWK 01572000
         DROP  R5                  RELEASE COPIED CCW BASE     @D149DWK 01573000
         DROP  RF                  RELEASE TCB BASE            @D149DWK 01574000
         TITLE 'DOS SUPERVISOR    SGCCWT          C C W - TRANSLATION  *01575000
               CCWFIX ROUTINE'                                          01576000
************************************************************** @D35CDJR 01577000
*                                                              @D35CDJR 01578000
*        CCWFIX ROUTINE                                        @D35CDJR 01579000
*                                                              @D35CDJR 01580000
************************************************************** @D35CDJR 01581000
         SPACE 2                                               @D35CDJR 01582000
         USING CCWADR,R5           SET BASE FOR VIRT. ADDR.    @D35CDJR 01583000
         USING TCBADR,RF           SET BASE FOR TCB            @D36IDJR 01584000
CCWFIX   DS    0H                  REQUEST TFIXING OF ONE PAGE @D149DWK 01585000
*DEL     STOSM PSWMASK,ENABLE      ENABLE                      @D61RDOW 01586000
*DEL     STNSM PSWMASK,DISABLE     DISABLE                     @D61RDOW 01587000
         SR    R0,R0               IND. TFIX REQ. FROM CCW-TR. @D35CDJR 01588000
         ST    R1,DYNAREA1         SAVE CCB POINTER            @D52VDOW 01589000
         L     R1,0(,R5)           GET ADDRESS TO BE TFIXED    @D35CDJR 01590000
         TM    CCWTFLG2,CCWTFIDA   ARE WE FIXING IDAL          @D52VDOW 01591000
         BO    CCWFIX00            YES, SKIP 1ST BYTE CLEAR    @D52VDOW 01592000
         N     R1,ADDRMSK          CLEAR HIGH ORDER BYTE       @D67EDAV 01593000
CCWFIX00 ST    R1,FIXADDR          SAVE ADDR. TO BE TFIXED     @D35CDJR 01594000
         L     R8,APMGMDAT         GET BASE FOR PMR            @D35CDJR 01595000
         USING PMGMDATA,R8         SET BASE FOR PMR            @D35CDJR 01596000
         L     RE,ATFIXCCW         RE=ADDRESS OF TFIX          @D35CDJR 01597000
         BASR  R7,RE                                           @D67EDAV 01598000
*SGLINK  TFIXCCW INPUT=(R0,R1,R7,R8),WORK=(R1,RE)              @D369DWK 01599000
* TFIX SAVES REGISTERS R2-RD AND RF.IT RETURNS WITH OFFSET     @D369DWK 01600000
* 0, IF CURRENTLY NO PAGEFRAMES AVAILABLE                      @D35CDJR 01601000
* 4, IF TFIX-COUNT TOO HIGH                                    @D35CDJR 01602000
* 8, IF TFIX REQUEST WAS HANDLED SUCCESSFULLY                  @D35CDJR 01603000
         DROP  R8                  DROP BASE FOR PMR           @D35CDJR 01604000
*                                                                       01605000
         B     CCWFIX10            WAIT FOR FREE PAGEFRAMES    @D35CDJR 01606000
         B     CCWHW5              TFIX COUNT TOO HIGH         @D35CDJR 01607000
*        B     *+4                 TFIX HANDLED SUCCESSFULLY   @D35CDJR 01608000
*                                                                       01609000
         AIF   (NOT &LOLEV).NLOLEV3                            @D35CDJR 01610000
         BAL   R7,AVPGFIX          CALC. NUMBER OF PAGES FIXED @D35CDJR 01611000
.NLOLEV3 ANOP                                                  @D35CDJR 01612000
         L     R7,FIXADDR          LOAD VIRTUAL ADDRESS        @D14ZDWK 01613000
         LRA   R7,0(,R7)           RELOAD REAL ADDRESS         @D14ZDWK 01614000
         L     R1,DYNAREA1         RESTORE CCB POINTER         @D52VDOW 01615000
         BR    RA                  RETURN TO CALLER            @D35CDJR 01616000
         SPACE 2                                               @D35CDJR 01617000
* NO PAGEFRAMES AVAILABLE. NPSQE=MINPSQE                       @D35CDJR 01618000
CCWFIX10 L     R1,DYNAREA1         RESTORE CCB POINTER         @D52VDOW 01619000
         CLC   CNTCOM,H1           ANY TRANSL. COMPLETE WITH   @D35CDJR 01620000
*                                  PAGES FIXED?                @D35CDJR 01621000
         BL    CCWFIX20            NO                          @D35CDJR 01622000
* AT LEAST ONE CCW TRANSLATION IS COMPLETE AND HAS PAGES FIXED @D35CDJR 01623000
         LR    R0,R5               SAVE VIRT ADR OF CCW        @D36IDJR 01624000
         L     R5,ASRQTAB          ADDR(RES DESCRIPTOR TABLE)  @D61RDOW 01625000
         LA    R5,SRQPFG-SRQTAB(,R5) PTR TO PFG WAIT QUEUE     @D61RDOW 01626000
         BAL   RC,RWAIT            WAIT                        @D35CDJR 01627000
*SGLINK  RWAIT INPUT=(R5,RC)                                   @D369DWK 01628000
         LR    R5,R0               RESTORE VIRT ADR OF CCW     @D36IDJR 01629000
         B     CCWFIX              TRY AGAIN                   @D35CDJR 01630000
         SPACE 2                                               @D35CDJR 01631000
* NO CCW TRANSLATION COMPLETE                                  @D35CDJR 01632000
CCWFIX20 L     RD,ACCBB            RD POINTS TO ACTIVE CCB Q   @D35CDJR 01633000
         B     CCWFIX40            GOTO SCAN QUEUE             @D35CDJR 01634000
         SPACE 2                                               @D35CDJR 01635000
         USING CCBADR,RD           SET BASE FOR CCB            @D35CDJR 01636000
CCWFIX30 L     RD,CCBNEXT          GET NEXT CCB IN QUEUE       @D35CDJR 01637000
         N     RD,ADDRMSK          CLEAR HIGH ORDER BYTE       @D67EDAV 01638000
         LTR   RD,RD               END OF QUEUE?               @D35CDJR 01639000
         BZ    CCWFIX60            YES                         @D35CDJR 01640000
         SPACE 2                                               @D35CDJR 01641000
CCWFIX40 TM    CCBFLAG,TTFIX       TFIX ISSUED BY CCB?         @D35CDJR 01642000
         BNO   CCWFIX30            NO                          @D35CDJR 01643000
         CR    RD,R1               IS IT CURRENT TASK?         @D35CDJR 01644000
         BE    CCWFIX30            YES                         @D35CDJR 01645000
         DROP  RD                  DROP BASE FOR CCB           @D35CDJR 01646000
         SPACE 2                                               @D35CDJR 01647000
* AT LEAST ONE OTHER CCW TRANSLATION HAS TFIX REQUEST ISSUED   @D35CDJR 01648000
* OR COMPLETED. RESET THIS TRANSLATION.                        @D35CDJR 01649000
*                                                              @D35CDJR 01650000
CCWFIX50 BAL   R5,SETBACK          PREPARE RESET               @D35CDJR 01651000
         L     R5,ASRQTAB          ADDR(RES DESCRIPTOR TABLE)  @D61RDOW 01652000
         LA    R5,SRQPFR-SRQTAB(,R5) PTR TO PFR WAIT QUEUE     @D61RDOW 01653000
         BAL   RC,RWAIT            WAIT                        @D35CDJR 01654000
*SGLINK  RWAIT INPUT=(R5,RC)                                   @D369DWK 01655000
         BR    R2                  GOTO RESTART POINT          @D35CDJR 01656000
         SPACE 2                                               @D35CDJR 01657000
* NO OTHER CCW TRANSLATION FOUND WITH TTFIX ON.                @D35CDJR 01658000
CCWFIX60 CLC   TFIXIDEN,H1         HAS 'EXT TASK' PAGES TFIXED @D35CDJR 01659000
         BNL   CCWFIX50            YES                         @D35CDJR 01660000
         B     ERROR5              PAGE POOL TOO SMALL         @D35CDJR 01661000
         DROP  R5                  DROP BASE FOR VIRT. ADDR.   @D35CDJR 01662000
         DROP  RF                  DROP BASE FOR TCB           @D35CDJR 01663000
         TITLE 'DOS SUPERVISOR    SGCCWT          C C W - TRANSLATION  *01664000
               UNFIX ROUTINE'                                           01665000
************************************************************** @D32XDRP 01666000
*                                                              @D32XDRP 01667000
*      UNFIX ROUTINE                                           @D32XDRP 01668000
*                                                              @D32XDRP 01669000
************************************************************** @D32XDRP 01670000
*                                                              @D32XDRP 01671000
*    FUNCTION:                                                 @D32XDRP 01672000
*        FIXED DATA ARE PAGES, IF ANY, ARE FREED.              @D32XDRP 01673000
*        THE FIXINF BITSTRING IS USED AND THE BITS ARE RESET.  @D67EDAV 01674000
*    ENTRY POINTS:                                             @D32XDRP 01675000
*        UNFIX  -FROM CSWTRANS,DELREPL,DEFIXALL,DEFIXCON       @D35CDJR 01676000
*    INPUT:                                                    @D32XDRP 01677000
*        R1 - POINTS TO COPIED CCB                             @D32XDRP 01678000
*        RD - RETURN ADDRESS                                   @D32XDRP 01679000
*        R9 - FIRST BASE ADDRESS                               @D32XDRP 01680000
*        RB - SECOND BASE ADDRESS                              @D32XDRP 01681000
*    OUTPUT:                                                   @D32XDRP 01682000
*        R1 - UNCHANGED                                        @D32XDRP 01683000
*        RD - UNCHANGED                                        @D32XDRP 01684000
*        R9 - UNCHANGED                                        @D32XDRP 01685000
*        RB - UNCHANGED                                        @D32XDRP 01686000
*    EXTERNAL REFERENCES:                                      @D32XDRP 01687000
*        TFREE   - ROUTINE TO FREE A PAGE                      @D32XDRP 01688000
*    EXITS NORMAL:                                             @D32XDRP 01689000
*        RETURN ADDRESS IN RD                                  @D32XDRP 01690000
*    EXITS ERROR:                                              @D32XDRP 01691000
*        NONE                                                  @D32XDRP 01692000
*    SUBROUTINES:                                              @D32XDRP 01693000
*        FREED                                                 @D32XDRP 01694000
*    REGISTERS CHANGED:                                        @D32XDRP 01695000
*                                                              @D32XDRP 01696000
************************************************************** @D32XDRP 01697000
         USING CCBADR,R1           SET BASE FOR CCB            @D35CDJR 01698000
         USING CCWFLBLK,R4         FIXLIST BLOCK BASE          @D14ADWK 01699000
         SPACE 1                                               @D149DWK 01700000
UNFIX    TM    CCBFLAG,TTFIX       ANY PAGES TO BE FREED       @D68CDOW 01701000
         BNOR  RD                  NO, RETURN                  @D68CDOW 01702000
         LH    R3,CNTCOM           DECREASE NUMBER                      01703000
         BCTR  R3,R0               OF COMPLETED TRANSLATIONS            01704000
         STH   R3,CNTCOM           WITH PAGES FIXED                     01705000
UNFIX010 EQU   *                   ENTRY POINT FROM RELALL     @D14ADWK 01706000
         L     R8,APMGMDAT         GET BASE FOR PMR            @D35CDJR 01707000
         USING PMGMDATA,R8         SET BASE FOR PMR            @D35CDJR 01708000
         L     RE,ATFRECCW         RE=ADDRESS OF TFREE         @D35CDJR 01709000
         LR    R3,R1               SAVE CCB POINTER            @D14ADWK 01710000
         LA    R4,CCBXINF          POINT TO FIXLIST BLOCK      @D14ADWK 01711000
UNFIX020 L     R1,CCWFLENT         GET PAGE FRAME NUMBER       @D14ADWK 01712000
         LTR   R1,R1               PAGE NUMBER TO BE FREED     @D14ADWK 01713000
         BZ    UNFIX030            NO                          @D14ADWK 01714000
         BASR  R7,RE               CALL TFREE                  @D67EDAV 01715000
*SGLINK  TFREECCW INPUT=(R1,R7,R8)                             @D149DWK 01716000
         DROP  R8                  DROP BASE FOR PMR           @D35CDJR 01717000
         LA    R4,CCWFLNXE(,R4)    POINT TO NEXT ENTRY IN LIST @D14ADWK 01718000
         TM    CCWFLENT,EOCL       END OF FIXLIST              @D14ADWK 01719000
         BNO   UNFIX020            NO                          @D51IDOW 01720000
         ICM   R4,7,CCWFLENT+1     ADDRESS OF FIXLIST EXTENSION@D14ADWK 01721000
         BNZ   UNFIX020            AVAILABLE                   @D14ADWK 01722000
UNFIX030 LR    R1,R3               RESTORE CCB POINTER         @D14ADWK 01723000
         L     R4,CCBXPTR          POINT TO FIXLIST CHAIN      @D14ADWK 01724000
         N     R4,ADDRMSK          CLEAR HIGH ORDER BYTE       @D67EDAV 01725000
         LTR   R4,R4               DOES BLOCK CHAIN EXIST      @D14ADWK 01726000
         BZR   RD                  NO RETURN                   @D14ADWK 01727000
         BAL   R3,RELBLOCK         RELEASE BLOCKS              @D14ADWK 01728000
*SGLINK RELBLOCK INPUT=(R3,R4),WORK=R14                                 01729000
         XC    CCBXPTR,CCBXPTR     CLEAR POINTER               @D14ADWK 01730000
         BR    RD                  RETURN                      @D14ADWK 01731000
         DROP  R4                  RELEASE FIXLIST BASE        @D14ADWK 01732000
         SPACE 1                                               @D149DWK 01733000
         DROP  R1                  DROP BASE FOR CCB           @D35CDJR 01734000
         TITLE 'DOS SUPERVISOR    SGCCWT          C C W - TRANSLATION  *01735000
               GET DOUBLE BLOCK ROUTINE'                                01736000
***************************************************************@D379DWK 01737000
*        PARAMETER: REG 3 CONTAINS RETURN ADDRESS              @D379DWK 01738000
*                   REG 4 CONTAINS BLOCK ADDRESS ON RETURN     @D379DWK 01739000
*        FUNCTION:  IT WILL REMOVE TWO CONSECUTIVE COPY BLOCKS @D379DWK 01740000
*                   FROM THE FREE COPY BLOCK QUEUE.            @D379DWK 01741000
*                   TO LOCATE THOSE BLOCKS THE NEIGHBOUR AHEAD @D379DWK 01742000
*                   OF A BLOCK FROM THE FREE COPY BLOCK CHAIN  @D379DWK 01743000
*                   IN THE COPY BUFFER AREA IS CHECKED IF      @D379DWK 01744000
*                   IT IS FREE. IF IT IS NOT,                  @D379DWK 01745000
*                   THE NEIGHBOUR OF THE NEXT ENTRY IN         @D379DWK 01746000
*                   THE FREE COPY BLOCK CHAIN IS CHECKED.      @D379DWK 01747000
*                   IF NO CONSECUTIVE COPY BLOCKS ARE FOUND,   @D379DWK 01748000
*                   THE REQUESTING TASK WILL BE SET IN WAIT    @D379DWK 01749000
*                   STATE USING THE SAME ROUTINES AS FOR A     @D379DWK 01750000
*                   NORMAL GETBLOCK REQUEST.                   @D379DWK 01751000
*        NOTE :                                                         01752000
*                THE ROUTINE IS NOT INTERUPTABLE                        01753000
*        GETDCBLK WILL BE CALLED FROM    TESTIDAL              @D379DWK 01754000
*        GETDCBLK CALLS         WAITBLK                                 01755000
*        REGISTER USAGE  INPUT  R3 RETURN ADDR                 @D379DWK 01756000
*                               RF TCB POINTER                 @D379DWK 01757000
*                        OUTPUT R4 BLOCK ADDR                  @D379DWK 01758000
*                        WORK   R8                                      01759000
***************************************************************@D379DWK 01760000
         SPACE 2                                               @D379DWK 01761000
         USING TCBADR,RF           SET BASE FOR TCB            @D37ADWK 01762000
GETDCBLK STM   R5,R6,GETDCSAV      SAVE NEEDED REGISTERS       @D52VDOW 01763000
         LA    R5,AFCB-(ANB-CCWBL) ADDR DUMMY COPY BLOCK       @D51IDOW 01764000
         USING CCWBLOCK,R5                                     @D51IDOW 01765000
GETDCB00 ICM   R5,15,ANB           GET NEXT FREE COPY BLOCK    @D51IDOW 01766000
         BZ    GETDCB90            NO AVAILABLE --> GO TO WAIT @D51IDOW 01767000
         L     R4,ACBQADR          ADDR OF COPY BLOCK AREAS    @D51IDOW 01768000
GETDCB10 CLM   R5,7,1(R4)          FIRST ENTRY IN FRAGMENT     @D51IDOW 01769000
         BE    GETDCB00            YES, NOT USABLE             @D51IDOW 01770000
GETDCB20 TM    0(R4),X'80'         LAST COPY BLOCK FRAGMENT    @D51IDOW 01771000
         BO    GETDCB30            YES, CB HAS PREDESESSOR     @D51IDOW 01772000
         LA    R4,4(,R4)           GO TO NEXT FRAGMENT         @D51IDOW 01773000
         B     GETDCB10                                        @D51IDOW 01774000
GETDCB30 LR    R4,R5               GET PREDECESSOR ADDR        @D51IDOW 01775000
         LA    R6,CCWBLEND-CCWBL   LENGTH OF COPY BLOCK        @D51IDOW 01776000
         SR    R4,R6                                           @D51IDOW 01777000
         DROP  R5                                              @D51IDOW 01778000
         USING CCWBLOCK,R4                                     @D51IDOW 01779000
         TM    ANB,CCWBLUSE        PREDECESSOR IN USE?         @D51IDOW 01780000
         BO    GETDCB00            YES TRY NEXT FREE COPY BLK  @D51IDOW 01781000
         DROP  R4                                              @D51IDOW 01782000
         USING CCWBLOCK,R5                                     @D51IDOW 01783000
*        REMOVE BOTH COPY BLOCKS FROM FREE CHAIN                        01784000
GETDCB40 L     R8,ANB-4            GET PREDECESSOR             @D51IDOW 01785000
         L     R6,ANB              GET SUCCESSOR               @D51IDOW 01786000
         CR    R6,R8               BOTH EQUAL (I.E. BOTH ZERO)?@D51IDOW 01787000
         BE    GETDCB75            YES, FREE-Q IS EMPTY NOW    @D51IDOW 01788000
         LTR   R6,R6               LAST ENTRY IN FREE-CHAIN?   @D51IDOW 01789000
         BZ    GETDCB60            YES, --->                   @D51IDOW 01790000
         LTR   R8,R8               1ST IN FREE-CHAIN?          @D51IDOW 01791000
         BNZ   GETDCB50            NO, --->                    @D51IDOW 01792000
         ST    R6,AFCB             UPDATE FREE-CHAIN POINTER   @D51IDOW 01793000
         DROP  R5                                              @D51IDOW 01794000
         USING CCWBLOCK,R6                                     @D51IDOW 01795000
         ST    R8,ANB-4            CLEAR BACKWARD PTR          @D51IDOW 01796000
         B     GETDCB70                                        @D51IDOW 01797000
GETDCB50 ST    R8,ANB-4            BACKWARD PTR IN SUCCESSOR   @D51IDOW 01798000
         DROP  R6                                              @D51IDOW 01799000
         USING CCWBLOCK,R8                                     @D51IDOW 01800000
GETDCB60 ST    R6,ANB              FORWARD PTR IN PREDECESSOR  @D51IDOW 01801000
         DROP  R8                                              @D51IDOW 01802000
GETDCB70 CR    R4,R5               BOTH COPY BLOCKS PROCESSED  @D51IDOW 01803000
         BE    GETDCB80            YES, --->                   @D51IDOW 01804000
         LR    R5,R4                                           @D51IDOW 01805000
         B     GETDCB40                                        @D51IDOW 01806000
GETDCB75 ST    R6,AFCB             FREE CHAIN IS EMPTY NOW     @D51IDOW 01807000
         USING DCBLOCK,R4          USE DOUBLE BLOCK            @D37ADWK 01808000
GETDCB80 XC    DCBLLEN,DCBLLEN     CLEAR BLOCK                 @D37ADWK 01809000
         OI    DCBLFLG,CCWBLUSE+DCBLIN  INDICATE USED AS DCBLK @D37ADWK 01810000
         DROP  R4                                              @D37ADWK 01811000
         L     R5,IJBPTCOM         GET PT COMMUNICATION AREA   @D51IDOW 01812000
         L     R6,PTCPYAVL-VSEPTCOM(,R5) DECREASE FREE CB CNTR @D51IDOW 01813000
         BCTR  R6,0                                            @D51IDOW 01814000
         BCTR  R6,0                                            @D51IDOW 01815000
         C     R6,PTCPYHWM-VSEPTCOM(,R5) COMP MIN FREE CB CNTR @D52VDOW 01816000
         BNL   GETDCB85            NO, SKIP UPDATE             @D52VDOW 01817000
         ST    R6,PTCPYHWM-VSEPTCOM(,R5) NEW MIN FREE CB CNTR  @D52VDOW 01818000
GETDCB85 ST    R6,PTCPYAVL-VSEPTCOM(,R5) NEW FREE CB CNTR      @D51IDOW 01819000
         LM    R5,R6,GETDCSAV      RELOAD REGISTERS            @D52VDOW 01820000
         AIF   (NOT &LOLEV).NLOLEV4                            @D37ADWK 01821000
         BAL   R8,AVBLOCK          CALC. NUMBER OF COPY BLOCKS @D37ADWK 01822000
         BAL   R8,AVBLOCK          PER SVC 0                   @D37ADWK 01823000
.NLOLEV4 ANOP                                                  @D37ADWK 01824000
         BR    R3                  RETURN TO CALLER            @D37ADWK 01825000
GETDCB90 LM    R5,R6,GETDCSAV      RELOAD REGISTERS            @D52VDOW 01826000
         OI    TCBFLAG,GETDCBL     INDICATE REQUEST DOUBLE BLK @DA32198 01827000
         B     WAITBLK             GOTO HANDLE WAIT CONDITIONS @D37ADWK 01828000
         DROP  RF                                              @D52VDOW 01829000
GETDCSAV DC    2F'0'               LOCAL SAVE AREA             @D52VDOW 01830000
         TITLE 'DOS SUPERVISOR    SGCCWT          C C W - TRANSLATION  *01831000
               GETBLOCK ROUTINE'                                        01832000
***************************************************************@D35CDJR 01833000
*        FUNCTION:                                                      01834000
*                 IT WILL REMOVE A COPY BLOCK FROM THE FREE COPY        01835000
*                 BLOCK QUEUE.IF REQUEST CANNOT BE FULLFILLED,THE       01836000
*                 REQUESTING TASK WILL BE SET IN WAIT STATE.EVERY       01837000
*                 TIME A COPY BLOCK IS RELEASED TO THE FREE QUEUE       01838000
*                 ALL WAITING TASKS FOR THAT QUEUE ARE SET TO ACTIVE    01839000
*                 IF MORE COPY BLOCKS THEN TOTAL NUMBER OF BLOCKS       01840000
*                 ARE REQUESTED,THEN THIS TASK WILL BE ABNORMAL TERM    01841000
*        NOTE :                                                         01842000
*                THE ROUTINE IS NOT INTERUPTABLE                        01843000
*        CALLED BY:                                                     01844000
*                 CCWTRANS,LOCATE,TESTIDAL,                             01845000
*                 FIXAREA,CREAREPL                                      01846000
*        CALLS SUBROUTINES:                                             01847000
*                 WAITBLK                                               01848000
*        REGISTER USAGE:                                                01849000
*                 INPUT : R1 COPIED CCB                                 01850000
*                         R3 RETURN ADDR                                01851000
*                         RF TCB ADDRESS                                01852000
*                 OUTPUT: R4 ADDR OF COPY BLOCK                         01853000
*                 WORK  : R8                                            01854000
***************************************************************@D35CDJR 01855000
         SPACE 2                                                        01856000
         USING TCBADR,RF                                       @D52VDOW 01857000
GETBLOCK DS    0H                                                       01858000
*SGLINK GETBLOCK S,                                                     01859000
         L     R4,AFCB             GET ADDRESS OF FREE COPY BLK@D37ADWK 01860000
         LTR   R4,R4               FREE COPY BLK QUEUE EMPTY   @D37ADWK 01861000
         BZ    WAITBLK             YES, GO TO WAIT             @D37ADWK 01862000
         AIF   (NOT &LOLEV).NLOLEV5                            @DF02306 01863000
         BAL   R8,AVBLOCK          CALC. NUMBER OF COPY BLOCKS PER SVC0 01864000
.NLOLEV5 ANOP                                                           01865000
         USING CCWBLOCK,R4         SET BASE FOR CCW COPY BLK   @D35CDJR 01866000
         ICM   R8,15,ANB           DEQUEUE ONE BLOCK           @D51IDOW 01867000
         BZ    GETBL10             ... FROM FREE CHAIN         @D51IDOW 01868000
         DROP  R4                                              @D51IDOW 01869000
         USING CCWBLOCK,R8                                     @D51IDOW 01870000
         XC    ANB-4(4),ANB-4      ... CLEAR BACKWARD PTR      @D51IDOW 01871000
         DROP  R8                                              @D51IDOW 01872000
         USING CCWBLOCK,R4                                     @D51IDOW 01873000
GETBL10  ST    R8,AFCB             NEW FREE CHAIN HEADER       @D51IDOW 01874000
         XC    CCWBL,CCWBL         CLEAR COPY BLOCK                     01875000
         OI    ANB,CCWBLUSE        INDICATE BLOCK IN USE       @D37ADWK 01876000
         DROP  R4                  DROP BASE FOR CCW COPY BLK  @D35CDJR 01877000
         ST    R4,GETBLSAV         SAVE OUTPUT REGISTER        @D52VDOW 01878000
         L     R4,IJBPTCOM         GET PT COMMUNICATION AREA   @D51IDOW 01879000
         L     R8,PTCPYAVL-VSEPTCOM(,R4) DECREASE FREE CB CNTR @D51IDOW 01880000
         BCTR  R8,0                                            @D51IDOW 01881000
         C     R8,PTCPYHWM-VSEPTCOM(,R4) COMP MIN FREE CB CNTR @D52VDOW 01882000
         BNL   GETBL20             NO, SKIP UPDATE             @D52VDOW 01883000
         ST    R8,PTCPYHWM-VSEPTCOM(,R4) NEW MIN FREE CB CNTR  @D52VDOW 01884000
GETBL20  ST    R8,PTCPYAVL-VSEPTCOM(,R4) NEW FREE CB CNTR      @D51IDOW 01885000
         L     R4,GETBLSAV         RESTORE OUTPUT REGISTER     @D52VDOW 01886000
         USING CCBADR,R1           SET BASE FOR CCB            @D35CDJR 01887000
         TM    CCBCLS,BTAM+CCBCOPY BTAM & R1 POINTS TO COPIED CCB?      01888000
         BNOR  R3                  NO, RETURN                  @D367DWK 01889000
         IC    R8,UBTAMCB          INCREASE NUMBER OF                   01890000
         LA    R8,1(,R8)           USED COPY                            01891000
         STC   R8,UBTAMCB          BLOCKS                               01892000
         TM    CCBFLAG,BTAM2       BTAM 2ND TIME?              @DA08731 01893000
         BZR   R3                  NO, RETURN                  @D367DWK 01894000
         ICM   R8,M1,ADBTAMCB      DECREASE NUMBER             @DA00013 01895000
         BZR   R3                                              @D367DWK 01896000
         BCTR  R8,R0               OF ADDITIONAL COPY                   01897000
         STC   R8,ADBTAMCB         BLOCKS                               01898000
         BR    R3                  RETURN TO CALLER                     01899000
GETBLSAV DC    F'0'                LOCAL SAVE AREA             @D52VDOW 01900000
         DROP  RF                                              @D52VDOW 01901000
         SPACE 3                                                        01902000
*        HANDLING OF BUFFER EMPTY CONDITIONS                            01903000
***************************************************************@D35CDJR 01904000
*        FUNCTION:                                                      01905000
*                 IF NOT ENOUGH COPY BLOCKS AVAILABLE CHECK             01906000
*                 FOR DEADLOCK SITUATION. IF NO DEADLOCK SET TASK       01907000
*                 COPY-BUFFER-WAIT BOUND                                01908000
*        CALLED BY:                                                     01909000
*                 GETBLOCK,GETDCBLK                                     01910000
*        CALLS SUBROUTINES:                                             01911000
*                 SETBACK,CORFIXIN,ERROR                                01912000
*        EXTERNAL REFERENCES:                                           01913000
*                 RWAIT                                                 01914000
*        REGISTER USAGE:                                                01915000
*                 INPUT : R1 COPIED CCB                                 01916000
*                         RF TCB ADDRESS                                01917000
*                 OUTPUT: -                                             01918000
*                 WORK  : -                                             01919000
*        RETURNS TO:                                                    01920000
*                 GETBLOCK IF GETDCBL IN TCBFLAG OFF                    01921000
*                 GETDCBLK IF GETDCBL IN TCBFLAG ON                     01922000
***************************************************************@D35CDJR 01923000
         SPACE                                                          01924000
         USING TCBADR,RF                                       @D52VDOW 01925000
WAITBLK  DS    0H                                                       01926000
         TM    CCBCLS,BTAM+CCBCOPY REQUEST FOR BTAM CCB OR NO BTAM ? ** 01927000
         BNO   WBLK070             YES, BRANCH    *** ONLY FOR          01928000
         TM    CCBFLAG,BTAM2       BTAM 2ND TIME? *** TESTING           01929000
         BO    ERROR6              YES NO COPY BLOCKS AVAILABLE ***     01930000
         DROP  R1                  DROP BASE FOR CCB           @D35CDJR 01931000
WBLK070  EQU   *                          ***                           01932000
         ST    RC,DYNAREA3         SAVE RC                     @D35CDJR 01933000
         ST    R5,DYNAREA4         SAVE R5                     @D36IDWK 01934000
         USING CCBADR,R4           SET BASE FOR CCB            @D35CDJR 01935000
         L     R4,ACCBB            CALC. NUMB. OF COMPL. CCB'S @D37ADWK 01936000
         LTR   R4,R4               ANY CCB COMPLETE            @D37ADWK 01937000
         BZ    ERROR3              NO, INSUFF. BUFFER SPACE    @DM14590 01938000
         SPACE 2                                               @D35CDJR 01939000
WBLK210  TM    CCBFLAG,XCOMPL      TRANSLATION COMPLETE?       @D35CDJR 01940000
         BO    WBLK300             YES, SET TASK WAITING FOR BUFFER     01941000
         ICM   R4,7,CCBNEXT+1      NO, POINT TO NEXT CCB BLOCK @D37ADWK 01942000
         BNZ   WBLK210             TRY NEXT CCB                @D35CDJR 01943000
         SPACE 2                                               @D35CDJR 01944000
*        NO TRANSLATION COMPLETE                                        01945000
         L     R4,ACCBB            POINT TO ACTIVE Q AGAIN     @D36IDJR 01946000
         ICM   R5,7,CCBNEXT+1      MORE THAN 1 TASK OWNG BLKS? @D37ADWK 01947000
         BNZ   WBLK240             YES, WAIT FOR BLOCKS        @D36IDJR 01948000
* ONLY 1 REQUEST IN TRANSLATION.                               @D369DJR 01949000
         CLC   CCBTID,TID          IS IT CURRENT TASK?         @D36IDJR 01950000
         DROP  R4                  DROP BASE FOR CCB           @D36IDJR 01951000
         BNE   WBLK300             NO, WAIT FOR BLOCKS         @D36IDJR 01952000
         B     ERROR3              YES, THERE WILL NEVER BE    @D36IDJR 01953000
*                                  ENOUGH BLKS FOR THIS REQ.   @D36IDJR 01954000
         SPACE 2                                               @D35CDJR 01955000
         USING CCBADR,R1           SET BASE FOR CCB            @D35CDJR 01956000
WBLK240  TM    CCBCLS,CCBCOPY      REQ. FOR CCB COPY BL.       @D36IDJR 01957000
         DROP  R1                  DROP BASE FOR CCB           @D35CDJR 01958000
         BZ    WBLK300             YES, SET TASK IN WAIT                01959000
         SPACE 2                                               @D35CDJR 01960000
* NO CCW TRANSLATION COMPLETE. AT LEAST ONE OTHER TASK OWNS    @D35CDJR 01961000
* BLOCKS. SET REQUESTING TASK BACK AND WAIT FOR BLOCKS.        @D35CDJR 01962000
         BAL   R5,CORFIXIN         CORRECT FIX INFORMATION              01963000
         BAL   R5,SETBACK          SET TASK BACK TO RESTART TRANSL.     01964000
         L     R5,ASRQTAB          ADDR(RES DESCRIPTOR TABLE)  @D61RDOW 01965000
         LA    R5,SRQCCW-SRQTAB(,R5) PTR TO CCW WAIT QUEUE     @D61RDOW 01966000
         BAL   RC,RWAIT            WAIT                        @D35CDJR 01967000
*SGLINK  RWAIT INPUT=(R5,RC)                                   @D369DWK 01968000
         BR    R2                  GOTO RESTART POINT          @D35CDJR 01969000
         SPACE 2                                               @D35CDJR 01970000
WBLK300  DS    0H                                              @D36IDJR 01971000
         L     R5,ASRQTAB          ADDR(RES DESCRIPTOR TABLE)  @D61RDOW 01972000
         LA    R5,SRQBUF-SRQTAB(,R5) PTR TO COPYBL WAIT QUEUE  @D61RDOW 01973000
         BAL   RC,RWAIT            WAIT                        @D35CDJR 01974000
*SGLINK  RWAIT INPUT=(R5,RC)                                   @D369DWK 01975000
         L     RC,TIBPTR           POINT TO TIB                @D36IDJR 01976000
         USING TIBADR,RC           USE TIB DSECT               @D36IDJR 01977000
         TM    TIBFLAG,FETCHEOJ    TSK CANCELLED DURING WAIT?  @D36IDJR 01978000
         BO    CCWCN               YES                         @D35CDJR 01979000
         DROP  RC                                              @D36IDJR 01980000
         L     RC,DYNAREA3         RELOAD REGISTER C           @DA08901 01981000
         L     R5,DYNAREA4         RELOAD REGISTER 5           @D36IDWK 01982000
         TM    TCBFLAG,GETDCBL     DOUBLE BLOCK REQUEST        @D37ADWK 01983000
         BZ    GETBLOCK            NO, GET NORMAL BLOCK        @D37ADWK 01984000
         NI    TCBFLAG,X'FF'-GETDCBL  RESET DOUBLE BLOCK REQ.  @D37ADWK 01985000
         B     GETDCBLK            YES, GET DOUBLE BLOCK       @D37ADWK 01986000
         SPACE 2                                               @D35CDJR 01987000
         DROP  RF                  DROP BASE FOR TCB           @D35CDJR 01988000
         TITLE 'DOS SUPERVISOR    SGCCWT          C C W - TRANSLATION  *01989000
               RELBLOCK ROUTINE'                                        01990000
*********************************************************************** 01991000
*        FUNCTION:                                                      01992000
*                IT WILL ENQUEUE SINGLE OR CHAIN OF COPY BLOCKS BACK    01993000
*                TO THE FREE COPY BLOCK QUEUE AND SETS ALL TASKS        01994000
*                WAITING FOR A COPY BLOCK TO ACTIVE.                    01995000
*        NOTE :                                                         01996000
*                THE ROUTINE IS NOT INTERUPTABLE                        01997000
*        CALLED BY:                                                     01998000
*                CBUF                                                   01999000
*                CCWTRANS                                               02000000
*                CREAREPL                                               02001000
*                CSWTRANS                                               02002000
*                DELREPL                                                02003000
*                FIXAREA                                                02004000
*                GETCCW                                                 02005000
*                RELALL                                                 02006000
*                RELCCB                                                 02007000
*                UNFIX                                                  02008000
*                WAITBLK                                                02009000
*        CALLS SUBROUTINES:                                             02010000
*        REGISTER USAGE:                                                02011000
*               INPUT : R3 RETURN ADDRESS                               02012000
*                       R4 POINTER TO FIRST COPY BLK TO BE RELEASED     02013000
*               WORK  : R14                                             02014000
*               OUTPUT:                                                 02015000
*********************************************************************** 02016000
         SPACE 2                                               @D37ADWK 02017000
RELBLOCK DS    0H                                                       02018000
*SGLINK RELBLOCK INPUT=(R3,R4),WORK=R14                                 02019000
         STM   R3,R6,RELBLKSV      SAVE WORK REGISTERS         @D52VDOW 02020000
         L     R3,IJBPTCOM         GET PT COMMUNICATION AREA   @D52VDOW 02021000
         L     R3,PTCPYAVL-VSEPTCOM(,R3) NUMBER OF FREE CB'S   @D52VDOW 02022000
         N     R4,ADDRMSK          CLEAR HIGH ORDER BYTE       @D67EDAV 02023000
         LR    R5,R4               POINT TO FIRST COPY BLOCK   @D37ADWK 02024000
         AIF   (NOT &VSE410).N410010                           @D81RDAV 02024100
         L     RE,ALCB             INITIAL BACKWARD POINTER    @D68DMAV 02024200
         USING CCWBLOCK,RE         ADDRESS COPY BLOCK          @D68DMAV 02024300
         ST    R5,ANB              CHAIN CURRENT AFTER LAST    @D68DMAV 02024400
         DROP  RE                  DROP COPY BLOCK             @D68DMAV 02024500
         AGO .COMN010                                                   02024600
.N410010 ANOP                                                  @D81RDAV 02024700
         SLR   RE,RE               INITIAL BACKWARD POINTER    @D51IDOW 02025000
.COMN010 ANOP                                                           02025500
         USING CCWBLOCK,R5         ADDRESS COPY BLOCK          @D37ADWK 02026000
RELBLK10 TM    ANB,CCWBLUSE        IS IT A DOUBLE BLOCK        @D37ADWK 02027000
         BO    RELBLK20            NO, RESET IN USE INDICATOR  @D37ADWK 02028000
         TM    ANB+(CCWBLEND-CCWBL),CCWBLUSE+DCBLIN REALLY A   @DA41850 02029000
         BO    RELBLK15            ... DOUBBLE BLOCK           @DA41850 02030000
         MVI   IJBHWORG,HWORG228                               @DA41850 02031000
         BAL   R5,SYSERROR                                     @DA41850 02032000
RELBLK15 LA    R3,1(,R3)           INCREASE # OF FREE CB'S     @D51IDOW 02033000
         LA    R6,CCWBLEND         GET ADDRESS OF SECOND PART  @D37ADWK 02034000
         ST    R6,ANB              CHAIN TO FIRST PART         @D37ADWK 02035000
         ST    RE,ANB-4            INSERT BACKWARD POINTER     @D51IDOW 02036000
         LR    RE,R5               SAVE BACKWARD POINTER       @D51IDOW 02037000
         LR    R5,R6               POINT TO SECOND PART        @D37ADWK 02038000
RELBLK20 MVI   ANB,ZERO            RESET BLOCK INDICATOR       @D37ADWK 02039000
         LA    R3,1(,R3)           INCREASE # OF FREE CB'S     @D52VDOW 02040000
         L     R6,ANB              POINT TO NEXT BLOCK         @D37ADWK 02041000
         ST    RE,ANB-4            INSERT BACKWARD POINTER     @D51IDOW 02042000
         LR    RE,R5               ESTABLISH NEW BACKWARD PTR  @D51IDOW 02043000
         LTR   R6,R6               ANY BLOCK CHAINED           @D37ADWK 02044000
         BZ    RELBLK40            NO, FREE CHAIN              @D37ADWK 02045000
         LR    R5,R6               YES, SET TO CURRENT BLOCK   @D37ADWK 02046000
         B     RELBLK10            KEEP SCANNING               @D37ADWK 02047000
         SPACE 2                                                        02048000
RELBLK40 DS    0H'0'                                           @D37ADWK 02049090
         AIF   (NOT &VSE410).N410020                                    02049180
         ST    R5,ALCB             UPDATE LAST FREE COPY BLOCK @D68DMAV 02049270
         DROP  R5                  DROP COPY BLOCK             @D68DMAV 02049360
         AGO   .COMN020                                                 02049450
.N410020 ANOP                                                           02049540
         MVC   ANB,AFCB            LAST ON TOP OF FREE QUEUE   @D37ADWK 02049630
         L     R5,AFCB             COMPLETE                    @D51IDOW 02050000
         ST    RE,ANB-4            ... BACKWARD CHAIN          @D51IDOW 02051000
         DROP  R5                                              @D37ADWK 02052000
         ST    R4,AFCB             STORE NEW TOP OF FREE QUEUE @D37ADWK 02053000
.COMN020 ANOP                                                           02053500
         L     R4,IJBPTCOM         GET PT COMMUNICATION AREA   @D51IDOW 02054000
         ST    R3,PTCPYAVL-VSEPTCOM(,R4) NUMBER OF FREE CB'S   @D51IDOW 02055000
         L     R5,ASRQTAB          ADDR(RES DESCRIPTOR TABLE)  @D61RDOW 02056000
         TM    RBBUF-SRQTAB(R5),FREEBIT ANY TASK IN BUF WAIT Q @D66ODOW 02057000
         BO    RELBLK60            NO, RETURN                  @D66ODOW 02058000
         LA    R5,SRQBUF-SRQTAB(,R5) PTR TO COPYBL WAIT QUEUE  @D61RDOW 02059000
         LR    R3,RF               SAVE TCB POINTER            @D52VDOW 02060000
         L     R6,DISPAD           POINT TO DISPATCHER         @D36IDJR 02061000
         USING DISP,R6                                         @D36IDJR 02062000
         BAL   RF,RPOST            POST TASKS WAITING ON COPYBL@D36IDJR 02063000
*SGLINK  RPOST INPUT=(R5,R6,RF),WORK=(R5,RE)                   @D369DWK 02064000
         DROP  R6                                              @D36IDJR 02065000
         LR    RF,R3               RESTORE TCB POINTER         @D52VDOW 02066000
RELBLK60 LM    R3,R6,RELBLKSV      RESTORE WORK REGISTERS      @D52VDOW 02067000
         BR    R3                  RETURN                               02068000
RELBLKSV DC    4F'0'               SAVE AREA                   @D52VDOW 02069000
         SPACE 2                                               @D35CDJR 02070000
         AIF   (NOT &LOLEV).NLOLEV6                            @DF02306 02071000
         TITLE 'DOS SUPERVISOR    SGCCWT          C C W - TRANSLATION  *02072000
               STATISTICS'                                              02073000
AVBLOCK  STM   R4,R6,AVSAVE        SAVE REGISTERS                       02074000
         SR    R4,R4                                                    02075000
         L     R6,AVCCWST          POINT TO ADDRESS BLOCK               02076000
         L     R5,BLOCK#                                                02077000
         AL    R5,F1                                                    02078000
         ST    R5,BLOCK#                                                02079000
         D     R4,SVC0#                                                 02080000
         ST    R5,0(,R6)           STORE NEW AVERAGE                    02081000
         LM    R4,R6,AVSAVE        RELOAD REGISTERS                     02082000
         BR    R8                  RETURN                               02083000
AVCCW    STM   R4,R6,AVSAVE        SAVE REGISTERS                       02084000
         SR    R4,R4                                                    02085000
         L     R6,AVCCWST          POINT TO ADDRESS BLOCK               02086000
         L     R5,CCW#                                                  02087000
         AL    R5,F1                                                    02088000
         ST    R5,CCW#                                                  02089000
         D     R4,SVC0#                                                 02090000
         ST    R5,8(,R6)           STORE NEW AVERAGE                    02091000
         LM    R4,R6,AVSAVE        RELOAD REGISTERS                     02092000
         BR    R3                  RETURN                               02093000
AVPGFIX  STM   R4,R6,AVSAVE        SAVE REGISTERS                       02094000
         SR    R4,R4                                                    02095000
         L     R6,AVCCWST          POINT TO ADDRESS BLOCK               02096000
         L     R5,PAGE#                                                 02097000
         AL    R5,F1                                                    02098000
         ST    R5,PAGE#                                                 02099000
         D     R4,SVC0#                                                 02100000
         ST    R5,4(,R6)           STORE NEW AVERAGE                    02101000
         LM    R4,R6,AVSAVE        RELOAD REGISTERS                     02102000
         BR    R7                  RETURN                               02103000
AVCCWST  DC    A(VBLOCK#)          ADDR OF STATISTIC AREA      @D52VDOW 02104000
AVSAVE   DS    3F                  REGISTER SAVE AREA                   02105000
BLOCK#   DC    F'0'                NUMBER OF BLOCKS                     02106000
CCW#     DC    F'0'                NUMBER OF CCW'S                      02107000
PAGE#    DC    F'0'                NUMBER OF FIXED PAGES                02108000
SVC0#    DC    F'0'                NUMBER OF TRANSL. SVC 0              02109000
.NLOLEV6 ANOP                                                           02110000
         TITLE 'DOS SUPERVISOR    SGCCWT          C C W - TRANSLATION  *02111000
               RELCCB ROUTINE'                                          02112000
***************************************************************@D35CDJR 02113000
*        PARAMETER: REG 1 POINTS TO COPIED CCB                          02114000
*                   REG D POINTS TO CCBNEXT OF PREVIOUS CCB IN QUEUE    02115000
*                   REG 2 CONTAINS RETURN ADDRESS                       02116000
*        FUNCTION:  IT WILL MOVE PARTS OF THE COPIED CCB BACK TO THE    02117000
*                   THE ORIGINAL CCB.                                   02118000
*        RELCCB WILL BE CALLED FROM    CSWTRANS,MOVECCB                 02119000
*        AND WILL CALL                 RELBLOCK                         02120000
*        REGISTER USAGE  R1,R2,R3,R4,R9,RD                              02121000
***************************************************************@D35CDJR 02122000
         SPACE 2                                                        02123000
         USING CCBADR,R1           SET BASE FOR CCB            @D35CDJR 02124000
RELCCB   MVC   1(3,RD),CCBNEXT+1   DEQUEUE CCB COPY BLOCK      @D37ADWK 02125000
         LA    R4,0(,R1)           R4 POINTS TO COPIED CCB     @D37ADWK 02126000
         L     R1,CCBVA            GET ADDR OF VIRTUAL CCB              02127000
         MVC   CCBCNT(2),CCBCNT-CCBADR(R4) MOVE RESIDUAL COUNT @DY43557 02128000
         MVC   CCBCOM2(3),CCBCOM2-CCBADR(R4) ... STATUS BYTES  @DY43557 02129000
         TM    CCBBY3,APPEN       APPENDAGE RTN PRESENT        @DM02985 02130000
         BO    RELCCB1            YES,DON'T CHANGE APP.ADDRESS @DM02985 02131000
         MVC   CCBCSWW,CCBCSWW-CCBADR(R4) MOVE CSWADDR FROM CSW         02132000
         TM    CCBCLS,XCPR         EXCP-REAL REQUEST           @D67EDAV 02133000
         BNO   RELCCB1             NO, SKIP CSW CONVERSION     @D67EDAV 02134000
         SR    R3,R3                                           @D67EDAV 02135000
         ICM   R3,7,CCBCSWW        LOAD CSWADDR FOR ...        @D67EDAV 02136000
         SL    R3,F8               LAST EXECUTED CCW           @DY46069 02137000
         LRA   R3,0(,R3)           ... REAL CONVERSION         @D67EDAV 02138000
         AL    R3,F8               LAST EXECUTED CCW           @DY46069 02139000
         STCM  R3,7,CCBCSWW        SETUP REAL CCB - REAL CSW   @D67EDAV 02140000
RELCCB1  DS    0H                                              @D37ADWK 02141000
         MVC   CCBCOM1(1),CCBCOM1-CCBADR(R4) MOVE TRAFFIC BIT  @DY43557 02142000
***            ***   DO NOT TOUCH VIRT CCB FROM NOW ON    ***           02143000
         DROP  R1                  DROP BASE FOR CCB           @D35CDJR 02144000
         USING CCWBLOCK,R4         COPIED CCB BASE             @D35CDJR 02145000
         XC    ANB+1(3),ANB+1      CLEAR CHAIN POINTER         @D37ADWK 02146000
         DROP  R4                  RELEASE COPIED CCB BASE     @D35CDJR 02147000
         BAL   R3,RELBLOCK         RELEASE CCB COPY BLOCK               02148000
*SGLINK RELBLOCK INPUT=(R3,R4),WORK=R14                                 02149000
         BR    R2                  RETURN TO CALLER                     02150000
         TITLE 'DOS SUPERVISOR    SGCCWT          C C W - TRANSLATION  *02151000
               RELALL ROUTINE'                                          02152000
***************************************************************@D35CDJR 02153000
*        FUNCTIONS:                                                     02154000
*        RELEASE CCB-,CCW-, AND IDAL-BLOCKS                             02155000
*        FREE PAGES                                                     02156000
*        LINKAGE CONVENTIONS:                                           02157000
*        R1    POINTS TO A CCB COPY BLOCK OR ZERO                       02158000
*        RF    POINTS TO CCWTCB                                @D32XDRP 02159000
*        R2    RETURN REGISTER                                          02160000
*        RELALL WILL BE CALLED FROM    CCWTRANS,CCWRSVC,       @D32XDRP 02161000
*                                      SETBACK,ERRREL          @D32XDRP 02162000
*        AND WILL CALL               UNFIX0,RELBLOCK           @D379DWK 02163000
*        REGISTER USAGE  R1,R2,R3,R4,RB,RD                              02164000
***************************************************************@D35CDJR 02165000
         SPACE 2                                                        02166000
         USING CCBADR,R1           SET BASE FOR CCB            @D35CDJR 02167000
         USING CCWBLOCK,R4         SET BASE FOR CCW COPY BLK   @D35CDJR 02168000
         USING TCBADR,RF           SET BASE FOR TCB            @D36IDJR 02169000
RELALL   LTR   R1,R1               IS CCB AVAILABLE?                    02170000
         BZR   R2                  NO,RETURN                   @D367DWK 02171000
         LA    RD,ACCBB            POINT TO CCB COPY BLOCK              02172000
RELALL1  L     R4,0(,RD)           LOAD,                       @DF00882 02173000
         N     R4,ADDRMSK          CLEAR HIGH ORDER BYTE       @D67EDAV 02174000
         LTR   R4,R4               AND TEST NEXT BLOCK         @DF00882 02175000
         BZR   R2                  NO CCB COPY BLOCK FOUND,RET.@D367DWK 02176000
         CR    R1,R4               BLOCK FOUND                          02177000
         BE    RELALL2             YES                                  02178000
         LA    RD,ANB              POINT TO NEXT BLOCK                  02179000
         B     RELALL1                                                  02180000
RELALL2  MVC   1(L3,RD),CCBNEXT+1  DEQEUE CCB FROM ACT-CCB-Q   @D37ADWK 02181000
         XC    CCBNEXT+1(L3),CCBNEXT+1 CLEAR NEXT BLOCK PTR    @D37ADWK 02182000
         TM    CCBFLAG,TTFIX       ANY PAGE FIXED ?            @D32XDRP 02183000
         BNO   RELALL2A            NO, SKIP FREEING                     02184000
         ST    R2,DYNAREA1         SAVE RETURN REGISTER                 02185000
         BAL   RD,UNFIX010         FREE PAGES                  @D14ADWK 02186000
         L     R2,DYNAREA1         RELOAD RETURN REGISTER               02187000
         SPACE 2                                               @D36IDJR 02188000
RELALL2A EQU   *                                               @D36IDJR 02189000
         L     R4,CCBACB           LOAD POINTER TO CCW C BL CHA@D32XDRP 02190000
         LTR   R4,R4               TEST FOR ZERO               @D32XDRP 02191000
         BZ    RELALL3             BRANCH IF NO MORE BLOCKS ARE AVAIL.  02192000
         BAL   R3,RELBLOCK         RELEASE CCW COPY BLOCK               02193000
*SGLINK RELBLOCK INPUT=(R3,R4),WORK=R14                                 02194000
RELALL3  L     R4,CCBICB           LOAD/TEST IDAL BLOCK QUEUE  @D37ADWK 02195000
         LTR   R4,R4               TEST FOR                    @D37ADWK 02196000
         BZ    RELALL4             IDALS AVAILABLE?                     02197000
         BAL   R3,RELBLOCK         YES,RELEASE IDAL BLOCK      @D37ADWK 02198000
*SGLINK RELBLOCK INPUT=(R3,R4),WORK=R14                                 02199000
RELALL4  LR    R4,R1               LOAD BLOCK ADDRESS FOR RELBLOCK      02200000
         L     R1,CCBVA            POINT TO VIRTUAL CCB                 02201000
         BAL   R3,RELBLOCK         RELEASE CCB COPY BLOCK               02202000
*SGLINK RELBLOCK INPUT=(R3,R4),WORK=R14                                 02203000
         BR    R2                  RETURN                               02204000
         SPACE 2                                               @D35CDJR 02205000
         DROP  R1                  DROP BASE FOR CCB           @D35CDJR 02206000
         DROP  R4                  DROP BASE FOR CCW COPY BLK  @D35CDJR 02207000
         DROP  RF                  DROP BASE FOR TCB           @D35CDJR 02208000
         TITLE 'DOS SUPERVISOR    SGCCWT          C C W - TRANSLATION  *02209000
               SETBACK ROUTINE'                                         02210000
***************************************************************@D35CDJR 02211000
*        PARAMETER: REG F POINTS TO CCWTCB OF TASK TO BE SET BACK       02212000
*                   REG 5 CONTAINS RETURN ADDRESS                       02213000
*                   ON RETURN RA POINTS TO PIB OF TASK JUST SET BACK    02214000
*        FUNCTION:  IT WILL RELEASE ALL BLOCKS BELONGING TO A TASK      02215000
*                   AND SET THIS TASK BACK TO RESTART TRANSL.           02216000
*        SETBACK WILL BE CALLED FROM   GETBLOCK,CCWFIX         @D35CDJR 02217000
*        REGISTER USAGE  R1,R2,R4,R5,R8,R9,RA,RF                        02218000
***************************************************************@D35CDJR 02219000
         SPACE 2                                                        02220000
         USING CCBADR,R1           SET BASE FOR CCB            @D35CDJR 02221000
         USING TCBADR,RF           SET BASE FOR TCB            @D36IDJR 02222000
SETBACK  L     R4,CCBVA            LOAD ADDR OF VIRT. CCB      @D35CDJR 02223000
         STM   R4,R5,CCWERA        SAVE ADDR OF VIRT. CCB AND  @D35CDJR 02224000
*                                  RETURN ADDRESS              @D35CDJR 02225000
         BAL   R2,RELALL           RELEASE RESOURCES           @D35CDJR 02226000
         L     R5,CCWERA+4         RESTORE RETURN ADDRESS      @D35CDJR 02227000
         L     R1,CCWERA           LET R1 POINT TO VIRT. CCB   @D35CDJR 02228000
         MVI   TCBFLAG,ZERO        SET UP CORRECT CONT. OF TCB          02229000
         XC    LINEPTR(SAVEREG2-LINEPTR),LINEPTR FOR RESTART            02230000
         BR    R5                  RETURN TO CALLER            @D35CDJR 02231000
         SPACE 2                                               @D35CDJR 02232000
         DROP  R1                  DROP BASE FOR CCB           @D35CDJR 02233000
         DROP  RF                  DROP BASE FOR TCB           @D35CDJR 02234000
         TITLE 'DOS SUPERVISOR    SGCCWT          C C W - TRANSLATION  *02235000
               CORFIXIN ROUTINE'                                        02236000
***************************************************************@D35CDJR 02237000
*        FUNCTION                                                       02238000
*                FREES LAST TFIXED PAGE IN CASE TFIX IS                 02239000
*                COMPLETE BUT FIXINFORMATION CAN NOT BE                 02240000
*                SAVED DUE TO LACK OF COPY BLOCKS                       02241000
*        CALLED BY:                                                     02242000
*                CCWRSVC, WAITBLK, ERROR3                               02243000
*        CALLS SUBROUTINES:                                             02244000
*        EXTERNAL REFERENCES:                                           02245000
*                TFREE                                                  02246000
*        REGISTER USAGE:                                                02247000
*                INPUT : RF ADDRESS OF ACTUAL CCWTCB                    02248000
*                        R5 RETURN ADDRESS                              02249000
*                WORK  : R8, RE                                         02250000
***************************************************************@D35CDJR 02251000
         SPACE 2                                               @D35CDJR 02252000
         USING TCBADR,RF           SET BASE FOR TCB            @D36IDJR 02253000
CORFIXIN TM    TCBFLAG,FXGETBL     GETBLOCK CALLED FOR TFIX R. @D35CDJR 02254000
         BZR   R5                  NO, RETURN                  @D35CDJR 02255000
         L     R8,APMGMDAT         GET BASE FOR PMR            @D35CDJR 02256000
         USING PMGMDATA,R8         SET BASE FOR PMR            @D35CDJR 02257000
         L     RE,ATFRECCW         RE=ADDRESS OF TFREE         @D35CDJR 02258000
         L     R7,FIXADDR          GET ADDR TO BE TFREED       @D35CDJR 02259000
         LRA   R1,0(,R7)           GET REAL ADDRESS            @D14ZDWK 02260000
         AIF   (NOT &BGDEBUG).NODEB2                           @D35CDJR 02261000
         BH    CCWHW1              PAGE NOT IN CORE            @D35CDJR 02262000
.NODEB2  ANOP                                                  @D35CDJR 02263000
         SRL   R1,PNSHIFT          CALCULATE PAGE NUMBER       @D14ZDWK 02264000
         BASR  R7,RE               CALL TFREE                  @D67EDAV 02265000
*SGLINK  TFREECCW INPUT=(R1,R7,R8)                             @D67EDAV 02266000
         DROP  R8                  DROP BASE FOR PMR           @D68CDOW 02267000
         BR    R5                  RETURN TO CALLER            @D35CDJR 02268000
         SPACE 2                                               @D35CDJR 02269000
         DROP  RF                  DROP BASE FOR TCB           @D35CDJR 02270000
*                                                                       02271000
CCWINVAD DC    X'7FFFFFFF'         INVALID REAL ADDR           @D52VDOW 02272000
LOCC1    DC    F'-56'              VBA OF DUMMY LOW BLOCK               02273000
LOCC2    DC    F'0'                BA OF DUMMY HIGH BLOCK               02274000
         DC    X'7FFF0044'         VBA OF DUMMY HIGH BLOCK     @D67EDAV 02275000
*        ORG   *-4                 SAVE 4 BYTES                         02276000
CCWH544  DC    H'544'                                                   02277000
CCWH68   DC    H'68'                                                    02278000
CCWH192  DC    H'192'                                                   02279000
*                                                              @D35CDJR 02280000
CCWTIC1L DC    AL2(TIC1-CCWBLOCK)                              @KD40263 02281000
*                                                              @D35CDJR 02282000
CNTCOM   DC    H'0'                CNT OF COMPLETE TASKS WITH  @D35CDJR 02283000
*                                  PAGES FIXED                 @D35CDJR 02284000
*                                                                       02285000
         SPACE 1                                               @D149DWK 02286000
*--------------------------------------------------------------@D149DWK 02287000
*        DEVICE RELATED STATUS MODIFIER COMMANDS               @D149DWK 02288000
*        THE COMMAND CODE TAKEN AS BINARY VALUE IS USED AS     @D149DWK 02289000
*        BIT-OFFSET WITHIN THE STATUS MODIFIER COMMAND TABLE   @D149DWK 02290000
*--------------------------------------------------------------@D149DWK 02291000
         SPACE 1                                               @D149DWK 02292000
*                                                                       02293000
DEVL1ST  DC    X'0440000200000000' STAT MOD COMMANDS FOR TP    @DAOM    02294000
         DC    X'0000000000000000' 05,09,1E                             02295000
         DC    X'0000000000000000'                                      02296000
         DC    X'0000000000000000'                                      02297000
         SPACE                                                          02298000
DEVL2ST  DC    X'0000000004444440' 2311,2314,2319,2321,3330,            02299000
         DC    X'0444440004444400' 3380,ECKD                            02300000
         DC    X'0000000004444440' 25,29,2D,31,35,39,45,49..            02301000
         DC    X'0444440004444400'                                      02302000
         SPACE 1                                                        02303000
DEVLAST  DC    X'4000000000000000' 3895 STATUS MODIFIER CMNDS  @DA14857 02304000
         DC    X'0000000000000000'                             @DA14857 02305000
         DC    X'0000000000000000'                             @DA14857 02306000
         DC    X'0000000000000000'                             @DA14857 02307000
DEVLBST  DC    X'0000000010001000' 3890 STATUS MODIFIER CMDS   @D36CDWK 02308000
         DC    X'0000000000000000' (23,33)                     @D36CDWK 02309000
         DC    X'0000000000000000'                             @D36CDWK 02310000
         DC    X'0000000000000000'                             @D36CDWK 02311000
DEVLCST  DC    X'0040000000000000' CETI STATUS MODIFIER CMDS   @DY46396 02312290
         DC    X'0000000000000000' (09,C1,C2,C5)               @D21FDRP 02312580
         DC    X'0000000000000000'                             @D21FDRP 02313000
         DC    X'6400000000000000'                             @D21FDRP 02314290
DEVLDST  DC    X'0040000000000000' NCP/LOCAL SNA STAT.MOD.CMDS @DY46396 02314580
         DC    X'0000000000000000' (09)                        @DY46396 02314870
         DC    X'0000000000000000'                             @DY46396 02315160
         DC    X'0000000000000000'                             @DY46396 02315450
         SPACE 1                                                        02316000
*--------------------------------------------------------------*        02317000
*        DEVICE RELATED CONTROL COMMANDS WITHOUT DATA          *        02318490
*        THE 1ST 6 BITS OF THE COMMAND CODE ARE USED TO        *        02319000
*        DETERMINE TOGETHER WITH MASKTAB THE BIT OFFSET        *        02320000
*        WITHIN THE CONTROL-COMMAND-WITHOUT-DATA-TABLE         *        02321490
*        MULTIPLY THE BIT POSITION (0-63) BY FOUR,             *        02322000
*                 ADD 3 TO THE RESULT AND THEN CONVERT IT      *        02323000
*                 TO HEX AND YOU HAVE THE OP-CODE.             *        02324000
*--------------------------------------------------------------*        02325000
         SPACE 1                                                        02326000
DEVL1CD  DC    X'8000000000000000' 03                    TP    @D81RDAV 02327090
DEVL2CD  DC    X'8C00020000000080' 03,13,17,5B,E3        DASD  @D81RDAV 02327180
DEVL3CD  DC    X'AA8080222AAA8280' 03,0B,13,1B,23,43     PRT   @D81RDAV 02327270
***                                6B,7B,8B,93,9B,A3                    02327360
***                                AB,B3,BB,C3,DB,E3                    02327450
DEVL4CD  DC    X'EE04444E6EABAA80' 03,07,0B,13,17,1B     3800  @D81RDAV 02327540
***                                37,47,57,67,73,77     &              02327630
***                                7B,87,8B,93,97,9B     3800-3/8       02327720
***                                A3,AB,B3,BB,BF,B3                    02327810
***                                BB,C3,CB,E3                          02327900
DEVL7CD  DC    X'DD55800004008000' 03,07,0F,13,17,1F,27  TAPE  @D81RDAV 02327990
***                                2F,37,3F,43,97,C3                    02328080
DEVLACD  DC    X'8000000000000000' 03                    FBA   @D81RDAV 02328170
*                                                                       02328260
*EVL1CD  DC    X'00A0000000000000' 23,2B                 TP    @D149DWK 02328350
*EVL2CD  DC    X'73C0E8884010004C' 07,0B,0F,1B,1F,23,27  DASD  @D65CDOW 02328440
***                                43,47,4B,53,63,73,87                 02329000
***                                AF,E7,F3,F7                          02330000
*EVL3CD  DC    X'400800A00000000A' 07,33,63,6B,F3,FB     PRT   @D21DDWK 02331690
*EVL4CD  DC    X'0088888080000000' 23,33,43,53,63,83     3800  @D21WDRP 02332380
*EVL7CD  DC    X'02007805011472A0' 1B,47,4B,4F,53,77,7F, TAPE  @DAOM    02333070
***                                9F,AF,B7,C7,CB,CF,DB,                02334000
***                                E3,EB                                02335000
*EVLACD  DC    X'0000808000000008' 43,63,F3              FBA   @D149DWK 02336990
* BY USING INVERSE SELECTION 3800-3/8 IS INCLUDED IN 3800 BASE @D81RDAV 02337980
*EVLCCD  DC    X'1199999191101110' 0F,1F,23,2F,33,3F,43,4F,    @D21WDRP 02338970
*  PAGE AND COMPATIBILITY MODE     53,5F,63,6F,7F,83,8F,9F,             02341000
*  MIXED UP FOR 3800-3/8           AF,CF,DF,EF           3800-3/8       02342000
DEVL8CD  DC    X'0000088800000000' 53,63,73              3886  @D149DWK 02342200
DEVL9CD  DC    X'4410000000000000' 07,17,2F              3540  @D149DWK 02342400
DEVLBCD  DC    X'0088080000080008' 23,33,53,B3,F3        3890  @D149DWK 02342600
         SPACE 2                                                        02343000
DEVWORK  DC    Y(0)                                                     02344000
DEVTYPE  EQU   DEVWORK+1                                                02345000
DEVLIST  DS    0F                  ALIGN TO WORD BOUNDARY      @D35CDJR 02346000
DEVTP    EQU   *                                                        02347000
         DC    A(DEVL1ST)                                               02348000
         DC    A(DEVL1CD)                                      @DM02977 02349000
DEVDASD  EQU   *                                                        02350000
         DC    A(DEVL2ST)                                               02351000
         DC    A(DEVL2CD)                                               02352000
DEVPRINT EQU   *                                                        02353000
         DC    A(0)                                                     02354000
         DC    A(DEVL3CD)                                               02355000
DEV3800  EQU   *                                                        02356000
         DC    A(0)                NO STATUS MODIFIIER COMM.   @D34YDJR 02357000
         DC    A(DEVL4CD)          ADDR OF CWD-LIST FOR 3800   @D34YDJR 02358000
DEV38003 EQU   *                                                        02359000
         DC    A(0)                  NO STATUS MODIFIERS       @D21WDRP 02360000
         DC    A(DEVL4CD)            ADDRESS OF CWD. LIST      @D81RDAV 02361290
*        DC    A(DEVLCCD)            ADDRESS OF CWD. LIST      @D21WDRP 02361580
DEVTAPE  EQU   *                                                        02362000
         DC    A(0)                                            @DM00385 02363000
         DC    A(DEVL7CD)                                      @DM00385 02364000
DEV3886  EQU   *                                                        02365000
         DC    A(0)                                            @DM01553 02366000
         DC    A(DEVL8CD)                                      @DM01553 02367000
DEV3540  EQU   *                                                        02368000
         DC    A(0)                                            @DL29R01 02369000
         DC    A(DEVL9CD)                                      @DL29R01 02370000
DEV3890  EQU   *                                                        02371000
         DC    A(DEVLBST)         3890 STAT MOD CMD LIST ADDR  @D36CDWK 02372000
         DC    A(DEVLBCD)         CTRL CMDS WITH DATA          @D36CDWK 02373000
DEV3895  EQU   *                                                        02374000
         DC    A(DEVLAST)         3895 STAT MOD CMD LIST ADDR  @DA14857 02375000
         DC    A(0)               NO CTRL CMDS WITH DATA       @DA14857 02376000
DEVLSNA  EQU   *                                                        02376200
DEVNCP   EQU   *                                                        02376400
         DC    A(DEVLDST)         NCP/LOCAL SNA MOD CMD LISTADR@DY46396 02376600
         DC    A(0)               NO CTRL CMDS WITH DATA       @DY46396 02376800
DEVCETI  EQU   *                                                        02377000
         DC    A(DEVLCST)         CETI STAT MOD CMD LIST ADDR  @D21FDRP 02378000
         DC    A(0)               NO CTRL CMDS WITH DATA       @D21FDRP 02379000
DEVFBA   EQU   *                                                        02380000
         DC    A(0)                NO STATUS MOD. COMMANDS     @D35DDJR 02381000
         DC    A(DEVLACD)          ADDRESS OF CWD. LIST        @D35DDJR 02382000
         TITLE 'DOS SUPERVISOR    SGCCWT          C C W - TRANSLATION  *02383000
               TRANSLATE TABLES'                                        02384000
*                                                                       02385000
* FE= NO SPECIAL DEVICE                                                 02386000
* FF= NOT DEFINED                                                       02387000
*                                                                       02388000
DEVTRTAB DC    256X'FF'                                                 02389000
DEVTREND EQU   *                                               @D32XDRP 02390000
*                                                                       02391000
         ORG   DEVTRTAB+X'00'      CONSOLE PRINTER             @D35GDJR 02392000
         DC    X'FE'               1050A                       @D35GDJR 02393000
*                                                                       02394000
*   CARD READ/PUNCHES                                                   02395000
         ORG   DEVTRTAB+X'10'      CARD READERS                         02396000
         DC    3X'FE'              2501,2540R,3505                      02397000
         ORG   DEVTRTAB+X'20'      CARD PUNCHES                         02398000
         DC    4X'FE'              2520B2,2520B3,2540P,1442N2,3525P     02399000
         ORG   DEVTRTAB+X'30'      CARD READERS PUNCHES                 02400000
         DC    3X'FE'              1442N1,2596,2520B1,3525RP            02401000
*                                                                       02402000
*   PRINTERS                                                            02403000
         ORG   DEVTRTAB+X'40'      PRINTERS                             02404000
         DC    X'FE'                                                    02405000
         ORG   DEVTRTAB+X'42'      1403 WITH UCS                        02406000
         DC    2AL1(DEVPRINT-DEVLIST) 1403U,3211,PRT1          @D21DDWK 02407000
         ORG   DEVTRTAB+X'45'      3800 PRINTER                @D34YDJR 02408000
         DC    AL1(DEV3800-DEVLIST)                            @D34YDJR 02409000
         ORG   DEVTRTAB+X'46'      4248 PRINTER                @D21DDWK 02410000
         DC    AL1(DEVPRINT-DEVLIST)                           @D21DDWK 02411000
*                                                              @D35GDJR 02412000
*   MAGNETIC TAPE DEVICES                                               02413000
         ORG   DEVTRTAB+X'50'     MAGNETIC TAPE                @D351DJR 02414000
         DC    AL1(DEVTAPE-DEVLIST) 2400T7,2400T9              @D351DJR 02415000
         ORG   DEVTRTAB+X'5A'      MAGNETIC TAPE UNIT          @D35GDJR 02418000
         DC    X'FE'               9347                        @D35GDJR 02419000
         ORG   DEVTRTAB+X'52'     MAGNETIC TAPE 3410, 3420     @D351DJR 02419300
         DC    5AL1(DEVTAPE-DEVLIST) 3430, 3480, 9346, 3590    @D61SDOW 02419600
*                                                                       02420000
*   DASD                                                                02421000
         ORG   DEVTRTAB+X'6C'      3380                        @D131DWK 02424000
         DC    AL1(DEVDASD-DEVLIST)                            @D37ADWK 02425000
         ORG   DEVTRTAB+X'6E'      ECKD                        @D51IDOW 02426000
         DC    AL1(DEVDASD-DEVLIST)                            @D51IDOW 02427000
*                                                                       02428000
*   FBA                                                                 02428200
         ORG   DEVTRTAB+X'90'      FBA-DEVICE                  @D35DDJR 02428400
         DC    AL1(DEVFBA-DEVLIST) PICCOLO                     @D35DDJR 02428600
*                                                                       02429000
*                                                                       02429200
         ORG   DEVTRTAB+X'6B'      3375                        @D131DWK 02429400
         DC    AL1(DEVDASD-DEVLIST)                            @D37ADWK 02429600
         ORG   DEVTRTAB+X'78'      PAPER TAPE                           02430000
         DC    2X'FE'                                                   02431000
         ORG   DEVTRTAB+X'7C'      3886                        @DM01553 02432000
         DC    AL1(DEV3886-DEVLIST)                            @DM01553 02433000
         ORG   DEVTRTAB+X'7D'      3895 INSCRIBER              @D34AEJR 02434000
         DC    AL1(DEV3895-DEVLIST)                            @DA14857 02435000
         ORG   DEVTRTAB+X'7E'      3890 DOCUMENT READER/PROC.  @D36CDWK 02436000
         DC    AL1(DEV3890-DEVLIST)                            @D36CDWK 02437000
         ORG   DEVTRTAB+X'80'      3540  DISKETTE              @DM11561 02438000
         DC    AL1(DEV3540-DEVLIST)                            @DL29R01 02439000
*                                                                       02444000
*   COMMUNICATION DEVICES                                               02445000
         ORG   DEVTRTAB+X'B0'      3270 (LOCAL)                         02446000
         DC    X'FE'                                                    02447000
         ORG   DEVTRTAB+X'C0'      2260 (LOCAL)                         02448000
         DC    X'FE'                                                    02449000
         ORG   DEVTRTAB+X'D0'      TELEPROCESSING LINE                  02450000
         DC    AL1(DEVTP-DEVLIST)                              @D61SDOW 02451000
         ORG   DEVTRTAB+X'D2'      TELEPROCESSING LINE         @D61SDOW 02452000
         DC    AL1(DEVTP-DEVLIST)                              @D61SDOW 02453000
         ORG   DEVTRTAB+X'D5'      PAPER TAPE READER                    02454000
         DC    2X'FE'                                                   02455000
         ORG   DEVTRTAB+X'DC'      NCP (3745,3725,3720,3705)   @DY46396 02456790
         DC    AL1(DEVNCP-DEVLIST)                             @DY46396 02457580
         ORG   DEVTRTAB+X'DE'      3791L                       @DY46396 02458370
         DC    AL1(DEVLSNA-DEVLIST)                            @DY46396 02459160
         ORG   DEVTRTAB+X'DF'      CTCA  CHAN-TO-CHAN ADAPTER  @DA35276 02460000
         DC    AL1(DEVTP-DEVLIST)                              @DAOM    02461000
         ORG   DEVTRTAB+X'E0'      QDIO  COMMUNICATION DEVICE  @D66ADAP 02462000
         DC    X'FE'                                           @DA35276 02463000
*                                                                       02464000
*   ADVANCED FCT PRINTER                                                02465000
         ORG   DEVTRTAB+X'F0'        ADVANCED FUNCTION PRINTER @D21WDRP 02466000
         DC    AL1(DEV38003-DEVLIST) 3800-3/8(AFP)             @D21WDRP 02467000
         ORG   DEVTREND            RESTORE OLD LOCATION COUNTER@D21WDAP 02468000
         DROP  RB                  DROP 2ND BASE OF CCW TRANSL @D35CDJR 02469000
         DROP  R9                  DROP 1ST BASE OF CCW TRANSL @D35CDJR 02470000
         TITLE 'DOS SUPERVISOR    SGCCWT          C C W - TRANSLATION  *02471000
               GETCBUF FREECBUF ROUTINE'                                02472000
***************************************************************@D35CDJR 02473000
*                                                              @D35CDJR 02474000
*    SVC 72 PROCESSOR                                                   02475000
*                                                              @D35CDJR 02476000
*        ROUTINES GETCBUF, FREECBUF                            @D35CDJR 02477000
*                                                              @D35CDJR 02478000
*  INPUT R1 FUNCTION CODE                                               02479000
*           0               - GETCBUF                                   02480000
*           COPY BLOCK ADDR - FREECBUF                                  02481000
*        R0 PUB INDEX (ONLY FOR QDIO DEVICES)                           02482000
*  OUTPUT R15 BUFFER ADDR ON GETCBUF                                    02483000
***************************************************************@D35CDJR 02484000
         SPACE 2                                               @D35CDJR 02485000
         USING SVC72,RD            SVC72 BASE POINTER          @D66ODOW 02486000
         USING TIBADR,R8           TIB BASE POINTER            @D66ODOW 02487000
         USING DISP,R6             SET BASE FOR DISPATCHER     @D35CDJR 02488000
SVC72    DS    0H                  ENTRY FROM SVC 72           @D52VDOW 02489000
CBUF     DS    0H                                                       02490000
         L     R9,ACCWT            LOAD BASE REGISTER          @D34RDFG 02491000
         USING CCWTADR,R9          SET BASE FOR CCW TRANSL.    @D66ODOW 02492000
         L     RB,ACCWT2           LOAD 2ND BASE OF CCW TRANSL @D66ODOW 02493000
         USING CCWTADR+X'1000',RB  SET 2ND BASE                @D66ODOW 02494000
         L     R5,PCBPTR           GET TASKS PCB ADDR          @D66ODOW 02495000
         USING PCBADR,R5           PCB BASE POINTER            @D66ODOW 02496000
         L     R5,PCBAPCBX         GET PCBX ADDR               @D66ODAP 02497000
         LA    R2,1                ASSUME EOT REQUEST FOR NOW  @D66ODOW 02498000
         LA    R1,0(,R1)           RESET HIGHORDER BYTE        @D66ODOW 02499000
         L     RE,ASVC7210         LOAD 31-BIT ADDRESS         @D66ODAP 02500000
         BSM   0,RE                ENTER 31-BIT ADDRESSING MODE@D66ODAP 02501000
ASVC7210 DC    A(SVC72010+X'80000000') 31.BIT CONT. ADDRESS    @D66ODAP 02502000
SVC72010 DS    0H                                              @D66ODOW 02503000
         TM    TIBFLAG1,EOTINPR    IJBEOTSK IN PROCESS         @D66ODOW 02504000
         BO    FBUFEOT             YES--->                     @D66ODOW 02505000
         SLR   R2,R2               INDICATE ERP REQUEST        @D66ODOW 02506000
         CLC   TID,ERPTIDH         IS ERP-TASK REQUESTOR       @D66ODOW 02507000
         BNE   SVC72020            NO,--->                     @D66ODOW 02508000
         LTR   R4,R1               BUFFERS TO BE FREED                  02509000
         BNZ   FBUFRTN             YES, =====================>          02510000
         B     GBUFRTN             NO, GOTO RETRIEVE BUFFER    @D66ODOW 02511000
SVC72020 DS    0H                  CHECK FOR QDIO              @D66ODOW 02512000
         ICM   R2,3,IJBNDEV        GET NUMBER OF PUB ENTRIES   @D66ODOW 02513000
         BCTR  R2,0                HIGHEST PUB INDEX           @D66ODOW 02514000
         CLR   R2,R0               CHECK INPUT VALID PUB INDEX @D66ODOW 02515000
         BL    ERR21               NO,  ===================>>> @D66ODOW 02516000
         LR    R2,R0               COPY PUB INDEX              @D66ODOW 02517000
         SLL   R2,PUBSLEN          MULTIPLY WITH 8             @D66ODOW 02518000
         AH    R2,YPUBTAB          PUB ADDRESS                 @D66ODAP 02519000
         USING PUBADR,R2           PUB BASE POINTER            @D66ODOW 02520000
         CLI   PUBDEVTY,TQDIO      IS THIS A QDIO DEVICE       @D66ODOW 02521000
         BNE   ERR21               NO,  ===================>>> @D66ODOW 02522000
         USING PCBXADR,R5          PCBX BASE POINTER           @D66ODOW 02523000
         LTR   R4,R1               BUFFERS TO BE FREED         @D66ODOW 02524000
         BZ    SVC72060            NO --->                     @D66ODOW 02525000
         LA    R3,PCBXCBCH         ADDR OF ANCHOR              @D66ODOW 02526000
         ICM   RF,15,PCBXCBCH      ANY BUFFER RETRIEVED        @D66ODOW 02527000
         BZ    ERR21               NONE HAS BEEN USED          @D66ODOW 02528000
         USING CCWBLOCK,RF         COPY-BLOCK BASE POINTER     @D66ODOW 02529000
SVC72030 DS    0H                                              @D66ODOW 02530000
         CR    RF,R4               SPECIFIED COPY BLOCK        @D66ODOW 02531000
         BE    SVC72050            YES, --->                   @D66ODOW 02532000
         LA    R3,ANB              NEXT ANCHOR                 @D66ODOW 02533000
         ICM   RF,7,ANB+1          IS THERE ANOTHER COPY-BLOCK @D66ODOW 02534000
         BZ    ERR21               NO --->                     @D66ODOW 02535000
         B     SVC72030                                        @D66ODOW 02536000
SVC72050 DS    0H                                              @D66ODOW 02537000
         CH    R2,ANB-2            CB FOR OUR DEVICE           @D66ODOW 02538000
         BNE   ERR21               NO, --->                    @D66ODOW 02539000
         CLC   ANB-4(2),IJBTIK     IS THIS OWNING TASK         @D66ODOW 02540000
         BNE   ERR21               NO, --->                    @D66ODOW 02541000
         MVC   1(3,R3),ANB+1       REMOVE COPY-BLOCK FROM CHAIN@D66ODOW 02542000
         XC    ANB,ANB             IND RELEASE OF SINGLE COPY-B@D66ODOW 02543000
         DROP  RF                  COPY-BLOCK BASE POINTER     @D66ODOW 02544000
         B     FBUFRTN             GOTO FREE BUFFER            @D66ODOW 02545000
SVC72060 DS    0H                                              @D66ODOW 02546000
         ICM   RF,15,PCBXCBCH      1ST CBUF OWNED BY PART      @D66ODOW 02547000
         BZ    GBUFRTN             NONE HAS BEEN USED          @D66ODOW 02548000
         USING CCWBLOCK,RF         COPY-BLOCK BASE POINTER     @D66ODOW 02549000
SVC72080 CH    R2,ANB-2            DOES CURRENT DEVICE OWN CB  @D66ODOW 02550000
         BE    ERR21               YES, ===================>>> @D66ODOW 02551000
         ICM   RF,7,ANB+1          IS THERE ANOTHER COPY-BLOCK @D66ODOW 02552000
.*                                 ... BYTE 0 OF RF IS INITIALLY ZERO   02553000
         BNZ   SVC72080            YES,                        @D66ODOW 02554000
         DROP  RF                  RELEASE COPY-BLOCK BASE     @D66ODOW 02555000
         DROP  R2                  RELEASE PUB BASE            @D66ODOW 02556000
GBUFRTN  DS    0H                                              @D66ODOW 02557000
         ICM   R4,15,AFCB          FIRST FREE COPY-BLOCK       @D66ODOW 02558000
         BZR   R6                  NO,  ===================>>> @D367DWK 02559000
         SLR   RF,RF                                           @D66ODOW 02560000
         USING CCWBLOCK,R4         FREE COPY-BLOCK BASE        @D66ODOW 02561000
         ICM   RF,7,ANB+1          NEXT FREE COPY-BLOCK ADDRESS@D66ODOW 02562000
         BZ    GBUF010             THIS WAS THE LAST           @D51IDOW 02563000
         DROP  R4                  RELEASE COPY-BLOCK BASE     @D51IDOW 02564000
         USING CCWBLOCK,RF         NEW COPY-BLOCK BASE         @D51IDOW 02565000
         XC    ANB-4(4),ANB-4      CLEAR BACKWARD PTR          @D51IDOW 02566000
         DROP  RF                  RELEASE NEW COPY-BLOCK BASE @D51IDOW 02567000
         USING CCWBLOCK,R4         FREE COPY-BLOCK BASE        @D51IDOW 02568000
GBUF010  ST    RF,AFCB             NEW FREE CHAIN HEADER       @D51IDOW 02569000
         L     R3,IJBPTCOM         GET PT COMMUNICATION AREA   @D52VDOW 02570000
         L     RF,PTCPYAVL-VSEPTCOM(,R3) DECREASE FREE CB CNTR @D52VDOW 02571000
         BCTR  RF,0                SUBTRACT 1                  @D52VDOW 02572000
         C     RF,PTCPYHWM-VSEPTCOM(,R3) COMP MIN FREE CB CNTR @D52VDOW 02573000
         BNL   GBUF020             NO, SKIP UPDATE             @D52VDOW 02574000
         ST    RF,PTCPYHWM-VSEPTCOM(,R3) NEW MIN FREE CB CNTR  @D52VDOW 02575000
GBUF020  ST    RF,PTCPYAVL-VSEPTCOM(,R3) NEW FREE CB CNTR      @D52VDOW 02576000
         XC    CCWBL,CCWBL         CLEAR COPY BLOCK            @D34NEG1 02577000
         SLR   RF,RF                                           @D68CDOW 02578000
         ICM   RF,8,GBUFUSEB       INDICATE BUFFER IN USE      @D68CDOW 02579000
         LTR   R2,R2               CALLED FOR ERP PROCESSING   @D66ODOW 02580000
         BZ    GBUF050             YES,                        @D66ODOW 02581000
         ICM   RF,7,PCBXCBCH+1     SAVE COPY-BUFFER CHAIN ADDR.@D68CDOW 02582000
         STH   R2,ANB-2            SAVE PUB ADDR               @D66ODOW 02583000
         MVC   ANB-4(2),IJBTIK     SAVE TIK OF OWNER           @D66ODOW 02584000
         ST    R4,PCBXCBCH         SET NEW BEGIN ADDRESS       @D66ODOW 02585000
GBUF050  DS    0H                                              @D66ODOW 02586000
         ST    RF,ANB                                          @D68CDOW 02587000
         DROP  R4                  RELEASE FREE CHAIN BASE     @D68CDOW 02588000
         LR    RF,R4               CBUF ADDR. TO RET.CODE REG.          02589000
         LA    R1,SVER01-SVEARA    OFFSET FOR REG1 IN SAVE AREA         02590000
         B     RETCODE             DONE =====================>          02591000
GBUFUSEB DC    AL1(CCWBLUSE)                                   @D66ODOW 02592000
         SPACE 2                                               @D36IDJR 02593000
FBUFEOT  DS    0H                  FREE COPY BUFFER            @D66ODOW 02594000
         LA    R3,PCBXCBCH         PTR TO ANCHOR               @D66ODOW 02595000
         ICM   R4,15,PCBXCBCH      GET CB-CHAIN FOR CARD       @D66ODOW 02596000
         BZ    FBUFEOTR            DONE,===================>>> @D66ODOW 02597000
         USING CCWBLOCK,R4         COPY BUFFER BASE            @D66ODOW 02598000
         L     R6,AFBUEOTC         GET CONTINUATION ADDR       @D66ODOW 02599000
FBUFEOT2 DS    0H                  FREE COPY BUFFER            @D66ODOW 02600000
         CLC   ANB-4(2),IJBTIK     IS OUR TASK OWNER           @D66ODOW 02601000
         BE    FBUFEOT6                                        @D66ODOW 02602000
         LA    R3,ANB              NEW ANCHOR                  @D66ODOW 02603000
         ICM   R4,7,ANB+1          GET NEXT COPY BLOCK         @D66ODMZ 02604000
         BNZ   FBUFEOT2                                        @D66ODOW 02605000
FBUFEOTR L     R6,DISPAD           GET DISPATCHER ADDR         @D66ODOW 02606000
         BR    R6                  ALL COPY BLOCKS OF          @D66ODOW 02607000
***                                ...FOR CURRENT TASK RELEASED         02608000
FBUFEOT6 DS    0H                  FREE COPY BUFFER            @D66ODOW 02609000
         MVC   1(3,R3),ANB+1       REMOVE COPY BLOCK FROM CHAIN@D66ODMZ 02610000
         XC    ANB,ANB             RELEASE SINGLE COPY ONLY    @D66ODMZ 02611000
         SPACE 2                                               @D36IDJR 02612000
FBUFRTN  DS    0H                  FREE COPY BUFFER PROCESSING @D36IDJR 02613000
         MVI   ANB,CCWBLUSE        MARK BLOCK AS IN USE        @D37ADWK 02614000
         BAL   R3,RELBLOCK         EXECUTE RELBLOCK ROUTINE    @D67EDAV 02615000
*SGLINK RELBLOCK INPUT=(R3,R4),WORK=R14                                 02616000
         BSM   0,R6                ===================>>>      @D66ODOW 02617000
AFBUEOTC DC    A(FBUFEOT+X'80000000') 31.BIT CONT. ADDRESS     @D66ODMZ 02618000
         SPACE 2                                               @D35CDJR 02619000
         DROP  R4                  RELEASE COPY-BLOCK BASE     @D35CDJR 02620000
         DROP  R5                  RELEASE PCBXADR BASE        @D66ODOW 02621000
         DROP  R6                  RELEASE DISP BASE           @D66ODOW 02622000
         DROP  R8                  RELEASE TIB BASE            @D66ODAP 02623000
         DROP  R9                  RELEASE CCWTADR BASE        @D66ODOW 02624000
         DROP  RB                  RELEASE CCWTADR 2ND BASE    @D66ODOW 02625000
         DROP  RD                  RELEASE SVC72 BASE          @D66ODAP 02626000
         SPACE 3                                                        02627000
         AIF   (NOT &BGDEBUG OR NOT &SGCCWT).NPRT030           @D37ZDWK 02628000
         PRINT NOGEN                                           @D37ZDWK 02629000
.NPRT030 ANOP                                                  @D37ZDWK 02630000
         MEND                                                           02631000
