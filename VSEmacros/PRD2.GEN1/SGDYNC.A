         MACRO                                                          00010029
         SGDYNC                                                         00020029
***************************************************************         00030029
*                                                             *         00040029
.*       IBM DISK OPERATING SYSTEM                            *         00050029
*        SUPERVISOR - SGDYNC - 5686-066-06                    *         00060029
.*                                                            *         00070029
*        LICENSED MATERIALS - PROPERTY OF IBM                 *         00080029
*        "RESTRICTED MATERIALS OF IBM"                        *         00090029
*        5686-066                                             *         00100029
*        (C) COPYRIGHT IBM CORP. 1994, 2002                   *         00110038
*                                                             *         00120029
***************************************************************         00130029
         GBLA  &NPART             NUMB.PARTITIONS              @D51IDIS 00140029
         GBLA  &NCLASS            NUMB.DYNAMIC CLASSES         @D51IDIS 00150029
         GBLB  &SGDYNC            PRINT OPTION                 @D51IDIS 00160029
         GBLC  &P(13)             SYSLOG IDS                   @D61NDIS 00170029
         LCLA  &NUM               NUMB.OF STATIC PART.S+CLASSES@D51IDIS 00180029
         LCLA  &Y                                              @D51IDIS 00190029
         LCLC  &C                                              @D51IDIS 00200029
         ACTR  1000                                            @D51IDIS 00210029
.* /* START OF SPECIFICATIONS *********************************@D51IDIS 00220029
.*                                                                      00230029
.*01* MODULE-TYPE = SUPERVISOR GENERATION MACRO                         00240029
.*                                                                      00250029
.*01* DESCRIPTIVE NAME = PARTITION BALANCING, PRIORITY ROUTINES,        00260029
.*                       AND DYNAMIC CLASS SERVICES                     00270029
.*                                                                      00280029
.*01* NOTES = CHANGE ACTIVITY                                           00290029
.*                                                                      00300029
.* 31 BIT ADDRESSING ADAPTATIONS                               @D52VDIS 00310029
.* SET/RESET SECURITY INITIALIZATION BIT DURING PREPARE/CLEANUP@D52VDIS 00320029
.* PARTITION BALANCING TIME COUNTERS NOT RESET DURING          @DY41852 00330029
.* DYNAMIC CLASS DEACTIVATION                                  @DY41852 00340029
.* RESET TPBAL INDICATION AND DO TPOUT                         @KD40259 00350029
.* SET PCB TOKEN DURING PARTITION ACTIVATION FOR JOB ACCOUNTING@KD40376 00360029
.* DYNAMIC PARTITION CODE SEPARATED FROM SGTSLICE              @D....IS 00370029
.* COMPATIBILITY MODE PREPARATIONS                             @D61ADMZ 00380029
.* INITIALIZE CSPART AFTER ALLOCATION AND INIT. OF PCBATAB     @D61TDIS 00390029
.* MORE THAN 255 TASKS                                         @D66ODOW 00400029
.* DURING SVC 43 CLEANUP FREEVIS TO FREE SPACE REL. OS390 SUBP.@DY45712 00410030
.* GDTSTID SET TO ZERO LEADING TO NO TASKS FOUND WITH IJBXDBUG @DY45789 00411033
.* NAME/TOKEN SERVICE                                          @D67CDOW 00412038
.**** END OF SPECIFICATIONS ***************************************** / 00420029
         SPACE 2                                               @D51IDIS 00430029
         AIF   (NOT &SGDYNC).NPRT010                           @D61NDIS 00440029
         PRINT GEN                                             @D51IDIS 00450029
.NPRT010 ANOP                                                  @D51IDIS 00460029
&NUM     SETA  &NPART+&NCLASS    NUMBER OF CLASSES AND PART.S  @D51IDIS 00470029
         DC    CL8'SGDYNC'       MACRO NAME                    @D61NDIS 00480029
         DC    CL10'11/11/2002'                                         00500038
         TITLE 'VSE SUPERVISOR  SGDYNC SVC43: DYNCLASS SERVICES'        00510029
************************************************************** @D51IDIS 00520029
*                                                            * @D51IDIS 00530029
* SVC43 - DYNAMIC CLASS SERVICE ROUTINES (DYNCLASS)          * @D51IDIS 00540029
*         INPUT:                                             * @D51IDIS 00550029
*           R0, R1 - SEE ROUTINE DESCRIPTION                 * @D51IDIS 00560029
*           RA     - TCB ADDRESS                             * @D51IDIS 00570029
*           RB     - SAVE AREA ADDRESS                       * @D51IDIS 00580029
*           RF     - FUNCTION CODE                           * @D51IDIS 00590029
         DYNCLASS ID=EQU   GET FUNCTION CODE EQUATES           @D51IDIS 00600029
*         OUTPUT:                                            * @D51IDIS 00610029
*           R0  - LIBRARIAN FUNCTION CODE, IF APPLICABLE     * @D51IDIS 00620029
*           R1  - REQUESTED OUTPUT, IF APPLICABLE            * @D51IDIS 00630029
*           RF  - RETURN CODE                                * @D51IDIS 00640029
*                                                            * @D51IDIS 00650029
************************************************************** @D51IDIS 00660029
         USING SVC43,RC                                        @D51IDIS 00670029
         USING DISP,R6                                         @D51IDIS 00680029
         DC    CL8'SVC 43'        SVC43 EYE CATCHER            @D51IDIS 00690029
SVC43    DS    0F                                              @D51IDIS 00700029
         CH    RF,SV43HFCT       VALID FUNCTION CODE ?         @D51IDIS 00710029
         BH    ERR21             NO, ILLEGAL SVC               @D51IDIS 00720029
         L     R8,ATSSERV        GET BASE ADDRESS FOR CHECK    @D51IDIS 00730029
         LR    RE,RF             SAVE REGISTER                 @D51IDIS 00740029
         SLL   RE,2              MULTIPLIED BY 4               @D51IDIS 00750029
         L     RE,S43BRTAB(RE)   LOAD ADDRESS OF SERVICE ROUTIN@D51IDIS 00760029
         BSM   0,RE              CALL SERVICE ROUTINE          @D66ODOW 00770029
         EJECT ,                                               @D51IDIS 00780029
*------------------------------------------------------------* @D51IDIS 00790029
* S43BRTAB - DYNCLASS SERVICE ROUTINE TABLE                  * @D51IDIS 00800029
*------------------------------------------------------------* @D51IDIS 00810029
S43BRTAB DS    0F                                              @D51IDIS 00820029
         DC    A(S43CHECK+SX8) 0 VALIDATE A GIVEN DYNAMIC CLASS@D66ODOW 00830029
         DC    A(S43DISAB+SX8) 1 DISABLE  A GIVEN DYNAMIC CLASS@D66ODOW 00840029
         DC    A(S43DEF+SX8)   2 RETRIEVE SYSTEM DEFAULTS      @D66ODOW 00850029
         DC    A(S43GET+SX8)   3 GET CLASS INFO FROM LIB       @D66ODOW 00860029
         DC    A(S43INIT+SX8)  4 INITIALIZE SYSTEM             @D66ODOW 00870029
         DC    A(S43LOAD+SX8)  5 SET DYNAMIC CLASS TABLE ACTIVE@D66ODOW 00880029
         DC    A(S43SAVE+SX8)  6 SAVE CLASS TABLE INTO LIB     @D66ODOW 00890029
         DC    A(S43ENABL+SX8) 7 ENABLE A DYNAMIC CLASS        @D66ODOW 00900029
         DC    A(S43SVART+SX8) 8 RETURN FROM SVA ROUTINE       @D66ODOW 00910029
         DC    A(S43CLEAN+SX8) 9 PROCESS CLEAN UP REQUEST      @D66ODOW 00920029
         DC    A(S43PREP+SX8) 10 PROCESS PREPARE REQUEST       @D66ODOW 00930029
         DC    A(S43ACCT+SX8) 11 RETURN JOB ACCOUNTING INFO.   @D66ODOW 00940029
         DC    A(S43HOLD+SX8) 12 HOLD A PARTITON DURING CLEANUP@D66ODOW 00950029
         DC    A(S43FREE+SX8) 13 FREE A PARTITON DURING CLEANUP@D66ODOW 00960029
         DC    A(ERR21)       14 (S43PURGE) NO LONGER SUPPORTED@D66ODOW 00970029
         DC    A(S43ACPA+SX8) 15 RETURN PARTITIONS ACCOUNT.INFO@D66ODOW 00980029
S43BRTBE EQU   *-S43BRTAB      GET LENGTH OF TABLE             @D51IDIS 00990029
SX8      EQU   X'80000000'                                     @D66ODOW 01000029
         EJECT ,                                               @D51IDIS 01010029
*------------------------------------------------------------* @D51IDIS 01020029
* S43CHECK - VALIDATE A GIVEN DYNAMIC CLASS                    @D51IDIS 01030029
*            INPUT:                                            @D51IDIS 01040029
*              R0  - DYNAMIC CLASS TO BE CHECKED               @D51IDIS 01050029
*            OUTPUT:                                           @D51IDIS 01060029
*              R1  - FLAG IN LOW ORDER BYTE                    @D51IDIS 01070029
*                    X'80' - DYNAMIC CLASS ENABLED             @D51IDIS 01080029
*                    X'40' - DYNAMIC CLASS DISABLED            @D51IDIS 01090029
*                    X'20' - DYNAMIC PARTITIONS ALLOCATED      @D51IDIS 01100029
*                            WITHIN CLASS                      @D51IDIS 01110029
*              R15 - RETURN CODE                               @D51IDIS 01120029
*                    0 = SPECIFIED CLASS IS VALID              @D51IDIS 01130029
*                    8 = SPECIFIED CLASS IS INVALID            @D51IDIS 01140029
*------------------------------------------------------------* @D51IDIS 01150029
         USING TSSERV,R8                                       @D51IDIS 01160029
S43CHECK DS    0F                                              @D51IDIS 01170029
         BAS   R7,TSRVCLS        CHECK CLASSES                 @D66ODOW 01180031
*SGLINK TSRVCLS,INPUT=(R0,R7,R8),OUTPUT=(RF),WORK=(R4)         @D51IDIS 01190029
         LTR   RF,RF             INVALID CLASS SPECIFIED ?     @D51IDIS 01200029
         BNZ   S43ERRRT          YES, RETURN TO CALLER         @D51IDIS 01210029
         SLR   R0,R0             CLEAR REGISTER                @D51IDIS 01220029
         BAS   R7,TSRCHCL        LOOK FOR CLASS TABLE ENTRY    @D66ODOW 01230031
*SGLINK TSRCHCL,INPUT=(R7,R8),OUTPUT=(R4,R7)                   @D51IDIS 01240029
         B     S43RETR1          TABLE NOT ACTIVE              @D51IDIS 01250029
         B     S43RETR1          NOT FOUND IN TABLE            @D51IDIS 01260029
         LA    R0,X'80'          INDICATE CLASS ENABLED        @D51IDIS 01270029
         USING CLASSADR,R4                                     @D51IDIS 01280029
         TM    CLFLAG,CLACTIVE   CLASS ENABLED ?               @D51IDIS 01290029
         BO    S43RETR1          YES, RETURN TO CALLER         @D51IDIS 01300029
         LA    R0,X'40'          INDICATE CLASS DISABLED       @D51IDIS 01310029
         ICM   R4,15,CLAPCB      GET CLASS PCB, AVAILABLE ?    @D51IDIS 01320029
         BZ    S43RETR1          NO, RETURN TO CALLER          @D51IDIS 01330029
         USING CPCBADR,R4                                      @D51IDIS 01340029
         CLI   CPCBCNT+1,0       PARTITIONS ALLOCATED ?        @D51IDIS 01350029
         BE    S43RETR1          NO, RETURN TO CALLER          @D51IDIS 01360029
         LA    R7,X'20'          INDICATE ...                  @D51IDIS 01370029
         AR    R0,R7                      ... PARTITIONS ACTIVE@D51IDIS 01380029
         B     S43RETR1          RETURN TO CALLER              @D51IDIS 01390029
         DROP  R4                                              @D51IDIS 01400029
         DROP  R8                                              @D51IDIS 01410029
         EJECT ,                                               @D51IDIS 01420029
*------------------------------------------------------------* @D51IDIS 01430029
* S43DISAB - DISABLE THE GIVEN CLASS                           @D51IDIS 01440029
*            INPUT:                                            @D51IDIS 01450029
*              R0  - DYNAMIC CLASS TO BE DISABLED              @D51IDIS 01460029
*              R15 - FUNCTION CODE                             @D51IDIS 01470029
*            OUTPUT:                                           @D51IDIS 01480029
*              R15 - RETURN CODE                               @D51IDIS 01490029
*                    0 = SPECIFIED CLASS DISABLED              @D51IDIS 01500029
*                    4 = SPECIFIED CLASS ALREADY DISABLED      @D51IDIS 01510029
*                    8 = SPECIFIED CLASS NOT IN TABLE          @D51IDIS 01520029
*                   12 = CLASS TABLE NOT AVAILABLE             @D51IDIS 01530029
*------------------------------------------------------------* @D51IDIS 01540029
         USING TSSERV,R8                                       @D51IDIS 01550029
S43DISAB DS    0F                                              @D51IDIS 01560029
         L     R5,PCBPTR         GET CURRENT PCB POINTER       @D51IDIS 01570029
         USING PCBADR,R5                                       @D51IDIS 01580029
         TM    PCBSSFLG,PWR      REQUESTOR POWER ?             @D51IDIS 01590029
         BZ    ERR21             NO, ILLEGAL SVC               @D51IDIS 01600029
         DROP  R5                                              @D51IDIS 01610029
         BAS   R7,TSRVCLS        CLASS VALID                   @D66ODOW 01620031
*SGLINK TSRVCLS,INPUT=(R0,R7,R8),OUTPUT=(RF),WORK=(R4)         @D51IDIS 01630029
         LTR   RF,RF             CLASS FOUND ?                 @D51IDIS 01640029
         BNZ   S43ERRRT          NO, CLASS INVALID             @D51IDIS 01650029
         BAS   R7,TSRCHCL        LOOK FOR CLASS TABLE ENTRY    @D66ODOW 01660031
*SGLINK TSRCHCL,INPUT=(R7,R8),OUTPUT=(R4,R7)                   @D51IDIS 01670029
         B     S43ERR12          TABLE NOT ACTIVE              @D51IDIS 01680029
         B     S43ERR08          NOT FOUND IN TABLE            @D51IDIS 01690029
         USING CLASSADR,R4                                     @D51IDIS 01700029
         TM    CLFLAG,CLACTIVE   CLASS ENABLED ?               @D51IDIS 01710029
         BZ    S43ERR04          NO, RETURN TO CALLER          @D51IDIS 01720029
         NI    CLFLAG,XFF-CLACTIVE   CLASS ENABLED ?           @D51IDIS 01730029
         DROP  R4                                              @D51IDIS 01740029
         B     S43ERR00          RETURN TO CALLER              @D51IDIS 01750029
         DROP  R8                                              @D51IDIS 01760029
         EJECT ,                                               @D51IDIS 01770029
*------------------------------------------------------------* @D51IDIS 01780029
* S43DEF   - RETRIEVE SYSTEM DEFAULTS                          @D51IDIS 01790029
*            INPUT:                                            @D51IDIS 01800029
*              R1  - ADDRESS OF USER SUPPLIED AREA             @D51IDIS 01810029
*              R15 - FUNCTION CODE                             @D51IDIS 01820029
*            OUTPUT:                                           @D51IDIS 01830029
*              R15 - RETURN CODE                               @D51IDIS 01840029
*                    0 = SPECIFIED CLASS DISABLED              @D51IDIS 01850029
*------------------------------------------------------------* @D51IDIS 01860029
S43DEF   DS    0F                                              @D51IDIS 01870029
         USING TCBADR,RA                                       @D66ODOW 01880029
         TM    TCBEXFLG,TCBEXAM  CALLER IN 24 BIT MODE         @D66ODOW 01890029
         DROP  RA                                              @D66ODOW 01900029
         BO    S43DEF20          NO --->                       @D66ODOW 01910029
         ICM   R1,8,H0           CLEAR FIRST BYTE              @D66ODOW 01920029
S43DEF20 DS    0H                                              @D66ODOW 01930029
         LA    R2,CLENEQ-1       GET LENGTH OF LIMITS TABLE    @D51IDIS 01940029
         AR    R2,R1             GET END ADDRESS OF USER INPUT @D51IDIS 01950029
         BAS   R8,VALIDAD        VALIDATE USER AREA            @D66ODOW 01960031
*SGLINK  VALIDAD,INPUT=(R1,R2,R6,R8),WORK=(R2),OUTPUT=(R5)     @D51IDIS 01970029
         B     ERR25             INVALID ADDRESS               @D51IDIS 01980029
         B     ERR25             INVALID ADDRESS               @D51IDIS 01990029
         L     R2,IJBCLIM        GET LIMITS TABLE ADDRESS      @D51IDIS 02000029
         MVC   0(CLENEQ,R1),0(R2) COPY TABLE TO USER AREA      @D51IDIS 02010029
         B     S43ERR00          RETURN TO CALLER              @D51IDIS 02020029
         EJECT ,                                               @D51IDIS 02030029
*------------------------------------------------------------* @D51IDIS 02040029
* S43GET   - GET DYNAMIC CLASS TABLE FROM VSE/AF LIBRARY     * @D51IDIS 02050029
*            INPUT:                                            @D51IDIS 02060029
*              R0  - DYNAMIC CLASS OR NEGATIVE, IF             @D51IDIS 02070029
*                    'ALL' REQUEST                             @D51IDIS 02080029
*              R1  - ADDRESS OF USER SUPPLIED AREA             @D51IDIS 02090029
*              R15 - FUNCTION CODE                             @D51IDIS 02100029
*              FIRST CLASS TABLE ENTRY (LABEL CLCTMEM) CONTAINS@D52VDIS 02110029
*              THE ID CHARACTER OF THE TABLE TO BE RETURNED    @D52VDIS 02120029
*------------------------------------------------------------* @D51IDIS 02130029
S43GET   DS    0F                                              @D51IDIS 02140029
         L     R5,PCBPTR         GET CURRENT PCB POINTER       @D51IDIS 02150029
         USING PCBADR,R5                                       @D51IDIS 02160029
         TM    PCBSSFLG,PWR+SSX  REQUESTOR II OR POWER ?       @D51IDIS 02170029
         BZ    ERR21             NO, ILLEGAL SVC               @D51IDIS 02180029
         LTR   R0,R0             'ALL' REQUESTED               @D51IDIS 02190029
         BM    S43SVAGL          YES, PROCESS REQUEST          @D51IDIS 02200029
         LA    R2,CLASSLNG-1     GET END ADDRESS FOR ONE ENTRY @D51IDIS 02210029
         B     S43SVAIN          PROCESS REQUEST               @D51IDIS 02220029
         DROP  R5                                              @D51IDIS 02230029
         EJECT ,                                               @D51IDIS 02240029
*------------------------------------------------------------* @D51IDIS 02250029
* S43INIT  - INITIALIZE SYSTEM                                 @D51IDIS 02260029
*            INPUT:                                                     02270029
*              R1  - POINTER TO PARAMETERLIST CONTAINING                02280029
*                       MAX NUMBER OF PARTITIONS (HALFWORD)             02290029
*                       MAX NUMBER OF TASKS (HALFWORD)                  02300029
*------------------------------------------------------------* @D51IDIS 02310029
S43INIT  DS    0F                                              @D51IDIS 02320029
         TM    SYSFLAG2,IPLBIT   REQUESTOR IPL ?               @D51IDIS 02330029
         BZ    ERR21             NO, ILLEGAL SVC               @D51IDIS 02340029
         TM    SV43FLAG,SV43INIT SYSTEM ALREADY INITIALIZED ?  @D51IDIS 02350029
         BO    ERR21             NO, ILLEGAL SVC               @D51IDIS 02360029
*------------------------------------------------------------* @D51IDIS 02370029
*              GET SPACE FOR PCBATAB, SMCB TABLE, PCETAB,      @D51IDIS 02380029
*                            SCBATAB, CLASS PCBS, ETC.         @D51IDIS 02390029
*              REMARK: CURRENT STATIC SCBATAB CONTAINS         @D51IDIS 02400029
*                      13 ENTRIES (1-9, R, S AND 2 POINTERS)   @D51IDIS 02410029
*------------------------------------------------------------* @D51IDIS 02420029
         LH    R7,0(,R1)         GET MAX. ...                  @D66ODOW 02430029
         LR    R2,R7                 ... OF PARTITIONS ...     @D66ODOW 02440029
         SLL   R2,4              ... TIMES 16                  @D51IDIS 02450029
         STH   R2,IJBHPIK        SET HIGHEST PIK               @D51IDIS 02460029
         LA    R2,ARTID          GET AR TID                    @D51IDIS 02470029
         AH    R2,0(,R1)         ADD NUMBER OF PARTITIONS      @D66ODOW 02480029
         STH   R2,IJBHMTID       SET HIGHEST MAINTASK ID       @D51IDIS 02490029
         EJECT ,                                               @D51IDIS 02500029
*------------------------------------------------------------*          02510029
*          - CALCULATE SIZE OF ASN FIRST TABLE                          02520029
*              R1 = POINTER TO PARAMETERLIST                            02530029
*                   FIRST HALFWORD = HIGHEST ASN                        02540029
*                   ASN+1 = NO OF SECOND TABLE ENTRIES                  02550029
*------------------------------------------------------------* @D51IDIS 02560029
         LH    R4,0(,R1)         HIGHEST ASN                   @D66ODOW 02570029
         SRL   R4,6              64 ENTRIES PER 2ND TABLE      @D61ADMZ 02580029
         LA    R4,1(,R4)         NO OF ASN 1ST TABLE ENTRIES   @D61ADMZ 02590029
         STH   R4,S43ASN1E       SAVE IT                       @D61ADMZ 02600029
         SLL   R4,2              SIZE OF ASN 1ST TABLE         @D61ADMZ 02610029
         LR    R0,R4             R0= ACCUMULATED LENGTH        @D61ADMZ 02620029
*------------------------------------------------------------* @D51IDIS 02630029
*          - CALCULATE SIZE FOR TIBATAB                                 02640029
*              R0 = ACCUMULATED LENGTH                         @D61ADMZ 02650029
*              R1 = POINTER TO PARAMETER LIST                           02660029
*              R2 = HIGHEST MAINTASK TID                       @D51IDIS 02670029
*              R7 = NUMBER OF PARTITIONS                       @D51IDIS 02680029
*------------------------------------------------------------* @D51IDIS 02690029
         LH    R9,2(,R1)         GET MAX NUMBER OF TASKS       @D66ODOW 02700029
         L     R3,IJBCLIM        GET ADDR OF CLIM TABLE        @D66ODOW 02710029
         CH    R9,CDEFTASK-CLIM(,R3) SPECIFIED # OF TASKS      @D66ODOW 02720029
***                              LARGER THAN DEFAULT                    02730029
         BNH   S43IN000          NO --->                       @D66ODOW 02740029
         OI    SUPVFLAG,M255TASK INDICATE MORE TASKS           @D66ODOW 02750029
S43IN000 DS    0H                                              @D66ODOW 02760029
         LA    R3,1(,R9)         ADD 1 FOR END-INDICATOR       @D66ODOW 02770029
         L     R4,S43SDTID       UPDATE TID OF HIGHEST SUBTASK @D66ODOW 02780029
         STH   R9,0(,R4)         ...FOR SDAID                  @DY45789 02790033
         SH    R9,MAX#SYST       SUBTRACT NUMBER OF SYS-TASKS  @D66ODOW 02800029
         SH    R9,0(,R1)         SUBTRACT NUMBER OF MAINTASKS  @D66ODOW 02810029
         STH   R9,IJBNTASK       SAVE NUMBER OF SUBTASKS       @D51IDIS 02820029
         SLL   R3,2              CALCULATE LENGTH OF TIB-TABLE @D66ODOW 02830029
         AR    R0,R3             ACCUMULATE FOR SGETVIS        @D66ODOW 02840029
         SPACE 5                                                        02850029
*------------------------------------------------------------* @D51IDIS 02860029
* S43IN001 - CALCULATE LENGTH OF PCBATAB, SMCBTAB, PCEATAB              02870029
*              R1 = POINTER TO PARAMETER LIST                  @D51IDIS 02880029
*              R7 = NUMBER OF PARTITIONS                       @D51IDIS 02890029
*------------------------------------------------------------* @D51IDIS 02900029
S43IN001 DS    0H                                              @D51IDIS 02910029
         LA    R3,1(,R7)         ADD SYSTEM PARTITION          @D66ODOW 02920029
         SLL   R3,2              GET LENGTH OF NEW TABLE       @D51IDIS 02930029
         AR    R0,R3             ADD ...                       @D61ADMZ 02940029
         AR    R0,R3             TABLE LENGTH ...              @D61ADMZ 02950029
         AR    R0,R3                      ...  TIMES 3         @D61ADMZ 02960029
         A     R0,F4             ADD PCBATAB END INDICATOR LEN.@D61ADIS 02970029
         SLR   R5,R5             CLEAR CPCB LENGTH             @D51IDIS 02980029
         LA    R4,&NPART         GET NO. OF STATIC PARTITION   @D51IDIS 02990029
         CR    R7,R4             MORE THAN 12 PART.S SPECIFIED?@D66ODOW 03000029
         BNH   S43INIT0          NO, CONTINUE                  @D51IDIS 03010029
*------------------------------------------------------------* @D51IDIS 03020029
*          - CALCULATE LENGTH OF CPCBATAB                      @D51IDIS 03030029
*              R0 = ACCUMULATED LENGTH                         @D51IDIS 03040029
*              R1 = PTR TO PARAMETER LIST                               03050029
*              R3 = LENGTH OF PCBATAB, SMCBTAB, PCEATAB        @D51IDIS 03060029
*              R7 = NUMBER OF PARTITIONS                       @D51IDIS 03070029
*------------------------------------------------------------* @D51IDIS 03080029
         L     R5,CLSCPCBL       GET SIZE OF CLASS PCBS ...    @D64ADMS 03090029
         AR    R0,R5             AND ADD SIZE TO TOTAL SIZE    @D64ADMS 03100029
*------------------------------------------------------------* @D51IDIS 03110029
*          - CALCULATE LENGTH OF SCBATAB                       @D51IDIS 03120029
*              R0 = ACCUMULATED LENGTH                         @D51IDIS 03130029
*              R1 = PTR TO PARAMETER LIST                               03140029
*              R3 = LENGTH OF PCBATAB, SMCBTAB, PCEATAB        @D51IDIS 03150029
*              R5 = LENGTH OF CPCBATAB                         @D51IDIS 03160029
*              R7 = NUMBER OF PARTITIONS                       @D51IDIS 03170029
*------------------------------------------------------------* @D51IDIS 03180029
         LA    R2,&NPART         GET NUMBER OF STATIC PART.    @D51IDIS 03190029
         LR    R1,R7             COPY NUMBER OF PARTITIONS     @D66ODOW 03200029
         SR    R1,R2             CALC. NUMBER OF DYNAMIC PART. @D51IDIS 03210029
         L     R8,ASIDSTR        GET ADDRESS OF SID STRING     @D51IDIS 03220029
         USING SIDSTR,R8                                       @D51IDIS 03230029
         IC    R4,SIDM3          GET NUMBER OF SCBATAB ENTRIES @D51IDIS 03240029
         AR    R4,R1             CALC. NEW NUMBER              @D51IDIS 03250029
         STC   R4,SIDM3          AND SAVE IT                   @D51IDIS 03260029
         DROP  R8                                              @D51IDIS 03270029
         LR    R8,R1             CALC. NUMBER OF DYNAMIC PART. @D51IDIS 03280029
         SLL   R8,2              CALC. VARIABLE PART OF SCBATAB@D51IDIS 03290029
         LA    R8,SCBATABL(,R8)  + LENGTH OF STATIC SCBATAB    @D51IDIS 03300029
         ST    R8,SV43USAV       SAVE LENGTH                   @D51IDIS 03310029
         AR    R0,R8                      + LENGTH OF SCBATAB  @D51IDIS 03320029
         EJECT ,                                               @D61RDIS 03330029
*------------------------------------------------------------* @D51IDIS 03340029
*          - CALCULATE LENGTH OF PUBOWNERSHIP EXTENSION        @D51IDIS 03350029
*              R0 = ACCUMULATED LENGTH                         @D51IDIS 03360029
*              R1 = NUMBER OF DYNAMIC PARTITIONS               @D51IDIS 03370029
*              R3 = LENGTH OF PCBATAB, SMCBTAB, PCEATAB        @D51IDIS 03380029
*              R5 = LENGTH OF CPCBATAB                         @D51IDIS 03390029
*              R7 = NUMBER OF PARTITIONS                       @D51IDIS 03400029
*------------------------------------------------------------* @D51IDIS 03410029
         LR    R4,R1             SAVE NO. OF DYNAMIC PART.S    @D51IDIS 03420029
         SRL   R1,3              CALCULATE ...                 @D51IDIS 03430029
         LR    R8,R1                   ... LENGTH ...          @D51IDIS 03440029
         SLL   R8,3                        ...                 @D51IDIS 03450029
         CR    R8,R4                   ... OF ONE ...          @D51IDIS 03460029
         BE    S43INI00                ... PUB OWNERSHIP ...   @D51IDIS 03470029
         LA    R1,1(,R1)               ... EXTENSION ENTRY     @D51IDIS 03480029
S43INI00 DS    0H                                              @D51IDIS 03490029
         STH   R1,IJBPWNXL       STORE ENTRY LENGTH            @D51IDIS 03500029
         LH    R9,IJBNDEV        GET NUMBER OF DEVICES         @D51IDIS 03510029
         MR    R8,R1             CALC. PUBOWNX TABLE SIZE      @D51IDIS 03520029
         AR    R0,R9                      + LENGTH             @D51IDIS 03530029
         SPACE                                                          03540029
*------------------------------------------------------------*          03550029
*          - CALCULATE LENGTH OF ASVT                                   03560029
*              R0 = ACCUMULATED LENGTH                                  03570029
*              R3 = LENGTH OF PCBATAB, SMCBTAB, PCEATAB                 03580029
*              R5 = LENGTH OF CPCBATAB                                  03590029
*              R7 = NUMBER OF PARTITIONS                                03600029
*------------------------------------------------------------* @D61ADMZ 03610029
S43INIT0 DS    0H                                              @D61ADMZ 03620029
         LA    R4,1(,R7)         NO OF ASVT ENTRIES            @D61ADMZ 03630029
         SLL   R4,2              CALC. VARIABLE PART OF ASVT   @D61ADMZ 03640029
         LA    R4,ASVTHDRL(,R4)  + LENGTH OF ASVT HEADER       @D61ADMZ 03650029
         ST    R4,SV43ASVL       SAVE LENGTH OF ASVT           @D61ADMZ 03660029
         AR    R0,R4                      + LENGTH OF ASVT     @D61ADMZ 03670029
         EJECT ,                                               @D51IDIS 03680029
*------------------------------------------------------------* @D51IDIS 03690029
* S43INIT0 - ALLOCATE SPACE                                    @D51IDIS 03700029
*              R0 = ACCUMULATED LENGTH                         @D51IDIS 03710029
*              R3 = LENGTH OF PCBATAB, SMCBTAB, PCEATAB        @D51IDIS 03720029
*              R5 = LENGTH OF CPCBATAB                         @D51IDIS 03730029
*              R7 = NUMBER OF PARTITIONS                       @D51IDIS 03740029
*------------------------------------------------------------* @D51IDIS 03750029
         L     RA,TCBPTR         GET TCB POINTER               @D51IDIS 03760029
         LA    R1,SPINIT         GET ADDRESS OF SUBPOOL ID     @D61ADMZ 03770029
*------------------------------------------------------------* @D51IDIS 03780029
* THIS REQUEST MUST BE THE FIRST REQUEST FOR SUBPOOL SPINIT, SINCE      03790029
* ASN FIRST TABLE MUST START ON PAGE BOUNDARY. FIRST SUBPOOL REQUEST    03800029
* ALWAYS STARTS ON PAGE BOUNDARY. PAGE=YES IS NOT SUFFICIENT, SINCE     03810029
* FOR REQUESTS <= 2K A 2K BOUNDARY MAY BE RETURNED.                     03820029
*        SGETVIS PFIX=YES,ADDRESS=(1),LENGTH=(0),SPID=(1)      @D61ADMZ 03830029
*------------------------------------------------------------* @D51IDIS 03840029
         SGETVIS PFIX=YES,ADDRESS=(1),LENGTH=(0),SPID=(1)               03850029
         LTR   RF,RF             ERROR OCCURRED ?              @D51IDIS 03860029
         BNZ   S43SYSER          SYSTEM ERROR                  @D51IDIS 03870029
         LR    RF,R1             ALIGN RETURNED ..             @D61ADMZ 03880029
         SRL   RF,PNSHIFT        .. ADDRESS ..                 @D61ADMZ 03890029
         SLL   RF,PNSHIFT        .. ON PAGE BOUNDARY           @D61ADMZ 03900029
         CR    RF,R1             WAS IT ON PAGE BOUNDARY       @D61ADMZ 03910029
         BNE   S43SYSER          NO, HARDWAIT                  @D51IDIS 03920029
         EJECT ,                                               @D51IDIS 03930029
         OI    SV43FLAG,SV43INIT INDICATE INITIALIZATION IN PR.@D51IDIS 03940029
*------------------------------------------------------------*          03950029
*          - SAVE ADDRESS OF ASN FIRST TABLE                            03960029
*              R1 = ADDRESS OF ALLOCATED AREA                  @D61ADMZ 03970029
*------------------------------------------------------------*          03980029
         L     R2,IJBSMCOM                                     @D61ADMZ 03990029
         USING SMCOM,R2                                        @D61ADMZ 04000029
         ST    R1,SMCASN1        SAVE ADDR OF ASN 1ST TABLE    @D61ADMZ 04010029
         DROP  R2                RELEASE SMCOM                 @D61ADMZ 04020029
         LH    R2,S43ASN1E       NO OF ASN 1ST TABLE ENTRIES   @D61ADMZ 04030029
         SLL   R2,2              SIZE ASN 1ST TABLE            @D61ADMZ 04040029
         AR    R1,R2             BEGIN OF NEXT TABLE           @D61ADMZ 04050029
*------------------------------------------------------------*          04060029
*          - MOVE TIBATAB TO SVA                                        04070029
*            END INDICATOR FOR TIBATAB IS X'FFFFFFFF'                   04080029
*              R1 = ADDRESS OF NEW TIBATAB                              04090029
*              R7 = NUMBER OF PARTITIONS                                04100029
*------------------------------------------------------------*          04110029
         L     R2,ATIBATAB       GET ADDR OF TEMPORARY TIBATAB @D66ODOW 04120029
         LR    R4,R1             START OF                      @D66ODOW 04130029
         S     R4,F4             ... TIB ADDRESS TABLE         @D66ODOW 04140029
         ST    R4,ATIBATAB       SETUP FINAL TIB ADDR TABLE    @D66ODOW 04150029
         MVC   0((32+12)*4,R1),4(R2) MOVE TEMP TIB ADDR TABLE  @D66ODOW 04160029
         L     R4,S43STIBA       ADDR(TIBATAB)+4               @D66ODOW 04170029
         ST    R1,0(,R4)         .. TO SDAID                   @D66ODOW 04180029
         LA    R2,ARTID+1(,R7)   LOWEST SUBTASK TID            @D66ODOW 04190029
         SLL   R2,2              OFFSET INTO TIBATAB           @D66ODOW 04200029
         AL    R2,ATIBATAB       ADDR IN TIBATAB               @D66ODOW 04210029
         L     R4,S43SVC38       GET SVC38 BASE                @D66ODOW 04220029
         USING SVC38,R4                                        @D66ODOW 04230029
         ST    R2,AFRESLOT       SAVE FOR SVC38                @D66ODOW 04240029
         DROP  R4                                              @D66ODOW 04250029
         LA    R2,ARTID(,R7)     # OF SYSTEM TASKS + MAINTASKS @D66ODOW 04260029
         AH    R2,IJBNTASK       ADD NUMBER OF SUBTASKS        @D66ODOW 04270029
         SLL   R2,2              LENGTH OF TIBATAB             @D66ODOW 04280029
         SLR   R4,R4             PREPARE                       @D66ODOW 04290029
         BCTR  R4,0              ....... ENDINDICATOR          @D66ODOW 04300029
         ST    R4,0(R2,R1)       SETUP ENDINDICATOR            @D66ODOW 04310029
         LA    R1,4(R2,R1)       ADD LENGTH OF TIBATAB + LENGTH@D66ODOW 04320029
***                              OF END-INDICATOR = START OF NEXT TABLE 04330029
         SPACE 5                                                        04340029
*------------------------------------------------------------* @D51IDIS 04350029
*          - MOVE PCBATAB TO SVA                               @D51IDIS 04360029
*            END INDICATOR FOR PCBATAB IS X'FFFFFFFF'          @D51IDIS 04370029
*              R1 = ADDRESS OF NEW PCBATAB                     @D61ADMZ 04380029
*              R3 = LENGTH OF PCBATAB, SMCBTAB, PCEATAB        @D51IDIS 04390029
*              R5 = LENGTH OF CPCBATAB                         @D51IDIS 04400029
*              R7 = NUMBER OF PARTITIONS                       @D51IDIS 04410029
*------------------------------------------------------------* @D51IDIS 04420029
         L     R2,APCBATAB       GET CURRENT PCBATAB ADDRESS   @D51IDIS 04430029
         MVC   0(&NPART*4+4,R1),0(R2) MOVE PCB ADDRESSES       @D51IDIS 04440029
         ST    R1,APCBATAB       UPDATE PCBATAB POINTER        @D51IDIS 04450029
         SLL   R7,2              GET ADDRESS OF LAST ...       @D51IDIS 04460029
         AR    R7,R1             ... ENTRY IN PCBATAB ...      @D51IDIS 04470029
         L     RD,AEXTCPUT       GET BASE OF TIMER ROUTINES    @D51IDIS 04480029
         USING EXTCPUT,RD                                      @D51IDIS 04490029
         ST    R7,EPCBATAB       AND STORE IT                  @D51IDIS 04500029
         DROP  RD                                              @D51IDIS 04510029
         LR    R8,R1             SAVE PCB TABLE ADDRESS        @D51IDIS 04520029
         AR    R1,R3             GET FIELD FOR END INDICATOR   @D51IDIS 04530029
         SLR   R7,R7             SET ...                       @D51IDIS 04540029
         BCTR  R7,0                  ...                       @D51IDIS 04550029
         ST    R7,0(,R1)                   ... END INDICATOR   @D51IDIS 04560029
         LA    R1,4(,R1)         GET START OF NEXT TABLE       @D51IDIS 04570029
         LTR   R5,R5             SPACE FOR CPCB ALLOCATED ?    @D51IDIS 04580029
         BZ    S43INI11          NO, SKIP CPCB UPDATE          @D51IDIS 04590029
         AR    R5,R1             GET START OF PCE TABLE        @D51IDIS 04600029
         EJECT ,                                               @D51IDIS 04610029
*------------------------------------------------------------* @D51IDIS 04620029
*          - INITIALIZE CLASS PCBS AND ADD THEM TO             @D51IDIS 04630029
*              PPRTYOWN AND STATPOWN                           @D51IDIS 04640029
*              R2 = PRETABLE ADDRESS                           @D51IDIS 04650029
*              R3 = LENGTH OF PCBATAB, SMCBTAB, PCEATAB        @D51IDIS 04660029
*              R5 = PCEATAB ADDRESS                            @D51IDIS 04670029
*              R8 = PCBATAB ADDRESS                            @D51IDIS 04680029
*------------------------------------------------------------* @D51IDIS 04690029
         L     R4,APPRTYOW       GET ADDRESS OF PPRTYOWN       @D51IDIS 04700029
         LA    R4,&NPART*4(,R4)  GET LOWEST PPRTYOWN INDEX     @D51IDIS 04710029
         LA    R9,&NPART+1       SET CLASS INDEX               @D51IDIS 04720029
         L     RD,AEXTCPUT       GET BASE OF CPUTIMER ROUTINES @D51IDIS 04730029
         USING EXTCPUT,RD                                      @D51IDIS 04740029
         LA    RE,PCBCTAB        GET ADDRESS OF PCBCTAB        @D51IDIS 04750029
S43INIT1 DS    0H                                              @D51IDIS 04760029
         CR    R1,R5             ALL CLASS PCBS PROCESSED ?    @D51IDIS 04770029
         BNL   S43INIT2          YES, MOVE PPRTYOWN            @D51IDIS 04780029
         USING CPCBADR,R1                                      @D51IDIS 04790029
         OI    CPCBFLAG,PCBCLFLG SET FLAG BYTE                 @D51IDIS 04800029
         L     R7,0(,R4)         GET PCB/CPCB OF LOWEST PCB    @D51IDIS 04810029
         L     R7,CPCBPMSK-CPCBADR(,R7) GET CURR.LOW.PRTY MASK @D51IDIS 04820029
         SRL   R7,1              CALC. NEW PRIORITY MASK       @D51IDIS 04830029
         ST    R7,CPCBPMSK       SAVE PRIORITY MASK            @D51IDIS 04840029
         MVI   CPCBCLSS,XFF      SET FIRST  BYTE OF CLASS CHAR.@D51IDIS 04850029
         MVI   CPCBCLSS+1,XFF    SET SECOND BYTE OF CLASS CHAR.@D51IDIS 04860029
         STH   R9,CPCBID         SAVE CPCB ID                  @D51IDIS 04870029
         LA    R7,CPCBLNG        GET LENGTH OF CPCB            @D51IDIS 04880029
         STH   R7,CPCBLN         STORE LENGTH INTO CPCB        @D51IDIS 04890029
         LA    R7,CPCBDUM        GET ADDRESS OF DUMMY CPCB     @D51IDIS 04900029
         ST    R7,CPCBGRED       IDENTIFY BAL. GROUP END       @D51IDIS 04910029
         SLR   R7,R7             SET REGISTER ...              @D51IDIS 04920029
         BCTR  R7,0                           ... NEGATIVE     @D51IDIS 04930029
         ST    R7,CPCBCMSK       SAVE SYSLOG ID BIT STRING     @D51IDIS 04940029
         ST    R1,0(,RE)         STORE CPCB ADDRESS INTO TABLE @D51IDIS 04950029
         TM    SUPVFLAG,JAACT    JOB ACCOUNTING ACTIVE ?       @D51IDIS 04960029
         BO    S43INI01          YES, DO NOT RESET ACC. POINTER@D51IDIS 04970029
         MVC   CPCBJAPT,ASYSPCB  RESET ACCOUNTING POINTER      @D51IDIS 04980029
S43INI01 DS    0H                                              @D51IDIS 04990029
         ST    R1,4(,R4)         STORE CPCB INTO PPRTYOWN      @D51IDIS 05000029
         LA    R1,CPCBLNG(,R1)   GO TO NEXT CLASS PCB          @D51IDIS 05010029
         LA    R4,4(,R4)         INCREASE PPRTYOWN INDEX       @D51IDIS 05020029
         LA    RE,4(,RE)         INCREASE PCBCTAB  INDEX       @D51IDIS 05030029
         LA    R9,1(,R9)         INCREASE CPCB ID              @D51IDIS 05040029
         B     S43INIT1          PROCESS NEXT CLASS PCB        @D51IDIS 05050029
         DROP  R1                                              @D51IDIS 05060029
         DROP  RD                                              @D51IDIS 05070029
         EJECT ,                                               @D51IDIS 05080029
S43INI11 DS    0H                                              @D51IDIS 05090029
         LR    R5,R1             GET START OF PCE TABLE        @D51IDIS 05100029
*------------------------------------------------------------* @D51IDIS 05110029
* S43INIT2 - MOVE PPRTYOWN TO PRETABLE. PRETABLE NOW           @D51IDIS 05120029
*              CONTAINS THE STATIC PRIORITIES SET BY SVC 57.   @D51IDIS 05130029
*              ASTATPOW IS SET TO PRETABLE.                    @D51IDIS 05140029
*              R2 = PRETABLE ADDRESS                           @D51IDIS 05150029
*              R3 = LENGTH OF PCBATAB, SMCBTAB, PCEATAB        @D51IDIS 05160029
*              R5 = PCEATAB ADDRESS                            @D51IDIS 05170029
*              R8 = PCBATAB ADDRESS                            @D51IDIS 05180029
*------------------------------------------------------------* @D51IDIS 05190029
S43INIT2 DS    0H                                              @D51IDIS 05200029
&Y       SETA  &NUM+1           CLAC. NO. OF PPRTYOWN ENTRIES  @D51IDIS 05210029
         L     R1,APPRTYOW       GET ADDRESS OF PPRTYOWN       @D51IDIS 05220029
         MVC   0(&Y*4,R2),0(R1)  MOVE PPRTYOWN TABLE           @D51IDIS 05230029
         ST    R2,ASTATPOW       UPDATE STATIC PRTY POINTER    @D51IDIS 05240029
*------------------------------------------------------------* @D51IDIS 05250029
*              INITIALIZE SMCB TABLE AND PCETAB                @D51IDIS 05260029
*------------------------------------------------------------* @D51IDIS 05270029
         ST    R5,APCEATAB       SET NEW PCE  TABLE BEGIN      @D51IDIS 05280029
         LA    R9,0(R3,R5)       GET START OF SMCB TABLE       @D51IDIS 05290029
         ST    R9,ASMCB          SET NEW SMCB TABLE BEGIN      @D51IDIS 05300029
         SLR   R2,R2             INITIALIZE LOOP ...           @D51IDIS 05310029
         LA    R7,4*&NPART                   ... OVER PCB      @D51IDIS 05320029
S43CBLP  DS    0H                                              @D51IDIS 05330029
         L     R1,0(R2,R8)       GET FIRST/NEXT PCB            @D51IDIS 05340029
         USING PCBADR,R1                                       @D51IDIS 05350029
         LA    R4,SMAXPFIX       GET SMCB ADDRESS              @D51IDIS 05360029
         ST    R4,0(R2,R9)       STORE IT INTO TABLE           @D51IDIS 05370029
         LA    R4,PCEADR         GET PCE  ADDRESS              @D51IDIS 05380029
         ST    R4,0(R2,R5)       STORE IT INTO TABLE           @D51IDIS 05390029
         LA    R2,4(,R2)         INCREASE OFFSET               @D51IDIS 05400029
         CR    R2,R7             ALL ENTRIES PROCESSED ?       @D51IDIS 05410029
         BNH   S43CBLP           NO, PROCESS NEXT ENTRY        @D51IDIS 05420029
         DROP  R1                                              @D51IDIS 05430029
         SPACE                                                          05440029
         AR    R9,R3             GET START OF NEXT TABLE ..    @D61ADMZ 05450029
         ST    R9,SV43NTAB       .. AND SAVE IT                @D61ADMZ 05460029
         A     R9,SV43ASVL       ADD LENGHT ASVT=BEG. NEXT TAB.@D61ADMZ 05470029
         EJECT ,                                               @D51IDIS 05480029
*------------------------------------------------------------* @D51IDIS 05490029
*          - MOVE SCBATAB TO SVA                               @D51IDIS 05500029
*              R9 = START OF SCBATAB                                    05510029
*------------------------------------------------------------* @D51IDIS 05520029
         LH    R2,IJBPWNXL       GET LENGTH OF PUBOWNX         @D52VDIS 05530029
         LTR   R2,R2             DYNAMIC PARTITIONS AVAIL. ?   @D52VDIS 05540029
         BZ    S43INIT3          NO, SKIP DYN. PART. TABLES    @D61ADMZ 05550029
         L     R2,ASCBATAB       GET CURRENT SCBATAB ADDRESS   @D51IDIS 05560029
         MVC   0(SCBATABL,R9),0(R2)   MOVE SCB ADDRESSES       @D51IDIS 05570029
         ST    R9,ASCBATAB       UPDATE SCBATAB POINTER        @D51IDIS 05580029
         A     R9,SV43USAV       GET START OF PUBOWNX ADDR.    @D51IDMS 05590029
*------------------------------------------------------------* @D51IDIS 05600029
*          - SET PUB OWNERSHIP EXTENTION ADDRESS               @D51IDIS 05610029
*              R9 = BEGIN OF NEXT TABLE                        @D51IDIS 05620029
*------------------------------------------------------------* @D51IDIS 05630029
         ST    R9,IJBPOWNX       STORE IT TO SYSCOM            @D51IDIS 05640029
         SPACE                                                          05650029
*------------------------------------------------------------*          05660029
*          - ALLOCATE ASVT                                              05670029
*------------------------------------------------------------*          05680029
S43INIT3 DS    0H                                              @D61ADMZ 05690029
*------------------------------------------------------------*          05700029
*          - SET ASVT ADDRESS IN CVT AND INITIALIZE ASVT                05710029
*------------------------------------------------------------*          05720029
         L     R9,SV43NTAB       GET ADDR OF ASVT              @D61ADMZ 05730029
         L     R2,CVTPTR         STORE ASVT POINTER..          @D61ADMZ 05740029
         ST    R9,CVTASVT-CVTMAP(,R2) .. IN CVT                @D61ADMZ 05750029
         MVC   ASVTASVT-ASVT(,R9),SV43ASVT MOVE EYECATCHER     @D61ADMZ 05760029
         LH    R4,IJBHPIK        GET HIGHEST PIK               @D61ADMZ 05770029
         SRL   R4,4              HIGHEST ASN                   @D61ADMZ 05780029
         ST    R4,ASVTMAXU-ASVT(,R9)                           @D61ADMZ 05790029
         LA    R4,1(,R4)         NO OF ASN 2ND TABLE ENTRIES   @D61ADMZ 05800029
         EJECT ,                                               @D61RDIS 05810029
*------------------------------------------------------------*          05820029
*          - ALLOCATE ASN SECOND TABLE                                  05830029
*              R4 = NO ASN 2ND TABLE ENTRIES                            05840029
*------------------------------------------------------------*          05850029
         SPACE                                                          05860029
*  ONE ASN 2ND TABLE MAY NOT CROSS A PAGE BOUNARY SINCE THE REAL        05870029
*  PAGES MAY NOT BE CONTIGUOUS AND HARDWARE USES REAL ADDRESS.          05880029
         LR    R0,R4                                           @D61ADMZ 05890029
         SLL   R0,6              SIZE OF ASN 2ND TABLE         @D61ADMZ 05900029
         L     RA,TCBPTR         GET TCB POINTER               @D61ADIS 05910029
         LA    R1,SPINIT         GET ADDRESS OF SUBPOOL ID     @D61ADMZ 05920029
*        SGETVIS PFIX=YES,ADDRESS=(1),LENGTH=(0),SPID=(1),LOC=ANY,      05930029
*              PAGE=YES                                                 05940029
         SGETVIS PFIX=YES,ADDRESS=(1),LENGTH=(0),SPID=(1),LOC=ANY,     *05950029
               PAGE=YES                                                 05960029
         LTR   RF,RF             ERROR OCCURRED ?              @D61ADMZ 05970029
         BNZ   S43SYSER          SYSTEM ERROR                  @D61ADMZ 05980029
*------------------------------------------------------------*          05990029
*  -INITIALIZE ASN FIRST TABLE (ALL ENTRIES ARE VALID) AND SET CR 14    06000029
*              R1 = BEGIN OF ASN 2ND TABLE                              06010029
*              R4 = NO ASN 2ND TABLE ENTRIES                            06020029
*------------------------------------------------------------*          06030029
         LR    R7,R1             SAVE BEGIN ASN 2ND TABLE      @D61ADMZ 06040029
         LH    R2,S43ASN1E       NO OF ASN FIRST TABLE ENTRIES @D61ADMZ 06050029
         L     R3,IJBSMCOM                                     @D61ADMZ 06060029
         USING SMCOM,R3                                        @D61ADMZ 06070029
         ST    R1,SMCASN2        SAVE ADDR OF ASN 2ND TABLE    @D61ADMZ 06080029
         L     R3,SMCASN1        ADDR OF ASN FIRST TABLE       @D61ADMZ 06090029
         DROP  R3                RELEASE SMCOM                 @D61ADMZ 06100029
         STCTL CRE,CRE,SV43SCR   STORE CONTROL REGISTER 14     @D61ADMZ 06110029
         OI    SV43SCR+1,X'08'   SET BIT 12 ON                 @D61ADMZ 06120029
         L     RF,SV43SCR                                      @D61ADMZ 06130029
         SRL   RF,19             CLEAR BITS 13 - 31            @D61ADMZ 06140029
         SLL   RF,19                                           @D61ADMZ 06150029
         LRA   R5,0(,R3)         GET REAL ADDR OF ASN 1ST TABLE@D61ADMZ 06160029
         SRL   R5,12             DIVIDE BY 4096                @D61ADMZ 06170029
         OR    R5,RF             PREPARE VALUE FOR CRE         @D61ADMZ 06180029
         ST    R5,SV43SCR                                      @D61ADMZ 06190029
         LCTL  CRE,CRE,SV43SCR   LOAD CONTROL REGISTER 14      @D61ADMZ 06200029
S43INASN DS    0H                INITIALIZE ASN FIRST TABLE    @D61ADMZ 06210029
         LRA   R5,0(,R7)         GET REAL ADDR OF ASN 2ND TABLE@D61ADMZ 06220029
         ST    R5,0(,R3)         SET REAL ADDR OF ASN 2ND TABLE@D61ADMZ 06230029
         A     R7,F4096          NEXT ASN 2ND TABLE            @D61ADMZ 06240029
         LA    R3,4(,R3)         NEXT ASN 1ST ENTRY            @D61ADMZ 06250029
         BCT   R2,S43INASN       CONTINUE WITH ASN 1ST TABLE   @D61ADMZ 06260029
         EJECT ,                                               @D61RDIS 06270029
*------------------------------------------------------------*          06280029
*          - INITIALIZE ASN 2ND TABLE(S)                                06290029
*              R1 = BEGIN OF ASN 2ND TABLE                              06300029
*              R4 = NO ASN 2ND TABLE ENTRIES                            06310029
*------------------------------------------------------------*          06320029
         USING ASTE,R1                                         @D61ADMZ 06330029
         LA    RE,2              GET COUNT FOR AR AND BG ASTE  @D64ADIS 06340029
         L     R3,APCBATAB       ADDRESS OF PCB TABLE          @D61ADMZ 06350029
S43ASN2A DS    0H                INITIALIZE ASN FIRST TABLE    @D61ADMZ 06360029
         L     R5,0(,R3)         GET SYSTEM/BG PCB             @D64ADIS 06370029
         USING PCBADR,R5                                       @D61ADMZ 06380029
         ST    R1,PCBASTE        STORE A(ASTE) IN PCB          @D61ADMZ 06390029
         LRA   R9,0(,R1)         REAL ADDRESS OF ASTE          @D61ADMZ 06400029
         ST    R9,PCBASTER       STORE IT IN PCB               @D61ADMZ 06410029
         OI    ASTEATO,ASTEI     INDICATE INITIALIZATION NEEDED@D61ADMZ 06420029
* CALL SERVICE TO INITIALIZE ASTE                                       06430029
         LR    R8,R6             SAVE DISPATCHER ADDRESS       @D61ADMZ 06440029
         LA    R0,36             FC = INIT ASTE                @D61ADMZ 06450029
         L     R6,ADISPSER       DISPSERV ADDRESS              @D61ADMZ 06460029
*SGLINK  DISPSERV,INPUT=(R0,R5,R6,R7),WORK=(R0,R2,RF)          @D61ADMZ 06470029
*        AMODESW CALL,REGS=(R7,R6)                                      06480029
         AMODESW CALL,REGS=(R7,R6)                                      06490029
         LR    R6,R8             RESTORE DISP ADDRESS          @D61ADMZ 06500029
         L     R5,PCBAPCBX-PCBADR(,R5) GET SYS/BG PCBX         @D64XDMZ 06510029
         LA    R8,ASTEAT         GET ADDR OF AUTHORITY TABLE   @D64XDMZ 06520029
         ST    R8,PCBXVAT-PCBXADR(,R5) STORE IN IN PCBX        @D64XDMZ 06530029
         LA    R3,4(,R3)         POINTS TO ADDR OF NEXT PCB    @D61ADMZ 06540029
         LA    R1,ASTELEN(,R1)   POINT TO NEXT ASTE            @D61ADMZ 06550029
         BCTR  R4,0              REMAINING ASTES               @D61ADMZ 06560029
         BCT   RE,S43ASN2A       REPEAT LOOP                   @D64ADIS 06570029
         LA    R8,11             REMAINING NO OF STATIC PART.  @D61ADMZ 06580029
S43ASN2S DS    0H                STATIC PARTITION LOOP         @D61ADMZ 06590029
         OI    ASTEATO,ASTEI     SET ASTE INVALID              @D61ADMZ 06600029
         L     R5,0(,R3)         GET PCB ADDR                  @D61ADMZ 06610029
         ST    R1,PCBASTE                                      @D61ADMZ 06620029
         LRA   R9,0(,R1)         REAL ADDRESS OF ASTE          @D61ADMZ 06630029
         ST    R9,PCBASTER       STORE IT                      @D61ADMZ 06640029
         LA    R3,4(,R3)         POINT  TO ADDR OF NEXT PCB    @D61ADMZ 06650029
         LA    R1,ASTELEN(,R1)   POINT  TO NEXT ASTE           @D61ADMZ 06660029
         BCTR  R4,0              REMAINING ASTES               @D61ADMZ 06670029
         BCT   R8,S43ASN2S       REPEAT LOOP                   @D61ADMZ 06680029
         LTR   R4,R4             DYN. PARTITIONS AVAILABLE     @D61ADMZ 06690029
         BZ    S43ASN2E          NO                            @D61ADMZ 06700029
S43ASN2D DS    0H                DYN. PARTITION LOOP           @D61ADMZ 06710029
         OI    ASTEATO,ASTEI     SET ASTE INVALID              @D61ADMZ 06720029
         LA    R1,ASTELEN(,R1)   POINT TO ASTE                 @D61ADMZ 06730029
         BCT   R4,S43ASN2D       REPEAT LOOP                   @D61ADMZ 06740029
         DROP  R1                RELEASE ASTE                  @D61ADMZ 06750029
         DROP  R5                RELEASE PCB                   @D61ADMZ 06760029
         EJECT ,                                               @D61RDIS 06770029
S43ASN2E DS    0H                                              @D61ADMZ 06780029
         SPACE                                                          06790029
* SET CR 5 (ASTER) IN SYSTEM TASK AND BG CONTROL REGISTER SAVE AREA     06800029
         L     R4,APCBATAB                                     @D61ADMZ 06810029
         L     R4,0(,R4)         GET SYSTEM PCB                @D61ADMZ 06820029
         USING PCBADR,R4         ADDRESS PCB                   @D61ADMZ 06830029
         LH    R8,IJBHSTID        GET NO OF SYSTEM TASKS       @D61ADMZ 06840029
         LA    R3,1(,R8)          GET BG TIB                   @D61ADMZ 06850029
         L     R9,ATIBATAB        BEGIN OF TIBATAB             @D61ADMZ 06860029
S43UPCR0 DS    0H                                              @D61ADMZ 06870029
         LA    R9,4(,R9)          TIB ADDR OF NEXT TASK        @D61ADMZ 06880029
         ICM   R5,15,0(R9)        GET NEXT TIB PTR             @D61ADMZ 06890029
         USING TIBADR,R5          TIB OF FIRST TASK            @D61ADMZ 06900029
         BZ    S43UPCR1           SKIP IF NOT AVAILABLE        @D61ADMZ 06910029
         L     R5,TIBTCB          GET TCB PTR                  @D61ADMZ 06920029
         DROP  R5                 RELEASE TIB                  @D61ADMZ 06930029
         L     R5,TCBATCBE-TCBADR(,R5) GET TCB EXTENSION       @D61ADMZ 06940029
         MVC   TCBX1CR5-TCBXADR(4,R5),PCBASTER SET UP CR5      @D61ADMZ 06950029
         MVC   TCBX1CRE-TCBXADR(4,R5),SV43SCR  SET UP CRE      @D61ADMZ 06960029
S43UPCR1 DS    0H                                              @D61ADMZ 06970029
         BCT   R3,S43UPCR2                                     @D61ADMZ 06980029
         B     S43UPCR3                                        @D61ADMZ 06990029
S43UPCR2 DS    0H                                              @D61ADMZ 07000029
         BCT   R8,S43UPCR0                                     @D61ADMZ 07010029
         DROP  R4                 RELEASE SCB                  @D61ADMZ 07020029
         L     R4,APCBATAB                                     @D61ADMZ 07030029
         LA    R4,4(,R4)          ADDRESS BG PCB               @D61ADMZ 07040029
         L     R4,0(,R4)                                       @D61ADMZ 07050029
         B     S43UPCR0                                        @D61ADMZ 07060029
S43UPCR3 DS    0H                                              @D61ADMZ 07070029
         SPACE                                                          07080029
***************************************************************         07081034
* INITIALIZE NAME/TOKEN SERVICE                               *         07081134
***************************************************************         07081234
         L     RA,TCBPTR         GET CURRENT TCB ADDRESS       @D61RDIS 07081335
         USING TCBADR,RA                                       @D61RDIS 07081435
         STM   R0,RF,SVCWORK     SAVE REGISTER                 @D67CDOW 07081535
         L     RC,S43SVC79       GET BASE OF NAME/TOKEN SVC    @D67CDOW 07081635
         USING SVC79,RC                                        @D67CDOW 07081735
         LA    R8,NT_INIT                                      @D67CDOW 07081837
         O     R8,BIT0ON         FORCE 31 BIT MODE             @D67CDOW 07081936
         BASSM R8,R8             CALL NAME/TOKEN INITIALIZATION@D67CDOW 07082036
         LM    R0,RF,SVCWORK     RESTORE REGISTER              @D67CDOW 07082136
         USING SVC43,RC                                        @D67CDOW 07082236
         SPACE                                                          07083034
         L     RB,TCBSAVE        SET SAVE AREA ADRESS          @D61RDIS 07110029
         USING SVEARA,RB                                       @D61RDIS 07120029
         SLR   RF,RF             SET RETURN CODE ZERO          @D61RDIS 07130029
         ST    RF,SVER0F         STORE RETURN CODE             @D61RDIS 07140029
         L     R4,IJBCLIM        GET ADDRESS OF LIMITS TABLE   @D61TDIS 07150029
         USING CLIM,R4                                         @D61TDIS 07160029
         L     R1,SVER01         GET POINTER TO INPUT VALUES   @D61TDIS 07170029
         L     R1,0(,R1)         GET MAC NUMBER OF PART/TASKS  @D66ODOW 07180029
         STCM  R1,12,CSPART      SET MAX. NUMBER OF PARTITIONS @D66ODOW 07190029
         STH   R1,CSTASK         SET MAX. NUMBER OF TASKS      @D66ODOW 07200029
*        DISPMAC FUNC=INIT       INITIALIZE DISPATCHER C.BLOCKS@D61RDIS 07210029
         DISPMAC FUNC=INIT       INITIALIZE DISPATCHER C.BLOCKS@D61RDIS 07220029
*        DISPMAC SERVICE RETURNS TO DISPATCHER                 @D61RDIS 07230029
         DROP  R4                                              @D61TDIS 07240029
         DROP  RA                                              @D61RDIS 07250029
         DROP  RB                                              @D61RDIS 07260029
         SPACE 2                                                        07270029
S43SYSER DS    0F                                              @D51IDIS 07280029
         ST    RF,SV43ERC        STORE GETVIS RETRUN CODE      @D61ADMZ 07290029
         LA    R5,SV43ERGS       GET AREA FOR ERROR INDICATION @D51IDIS 07300029
         B     SYSERROR          HARDWAIT                      @D51IDIS 07310029
         SPACE 2                                               @D51IDIS 07320029
*------------------------------------------------------------*          07330029
* S43INIT WORK AREAS AND CONSTANTS                                      07340029
*------------------------------------------------------------*          07350029
SV43ERGS DS    0F                                              @D51IDIS 07360029
         DC    CL12'GETVIS ERROR'                              @D51IDIS 07370029
SV43ERC  DS    0F                                              @D61ADMZ 07380029
SV43ASVL DC    F'0'          SAVE LENGTH OF ASVT               @D61ADMZ 07390029
.* USED ALSO AS SAVE AREA FOR ASVT LENGTH                      @D61ADMZ 07400029
SV43ASVT DC    C'ASVT'       EYECATCHER                        @D61ADMZ 07410029
SV43SCR  DC    F'0'          SAVE AREA FOR CONTROL REG.        @D61ADMZ 07420029
S43ASN1E DC    H'0'          NO OF ASN 1ST TABLE ENTRIES       @D61ADMZ 07430029
S43SVC38 DC    A(SVC38)      ATTACH SVC BASE                   @D61RDIS 07440029
S43SVC79 DC    A(SVC79)      NAME/TOKEN SVC BASE               @D67CDOW 07441035
S43SDTID DC    A(GDTSTID)    SDAID - MAX NUMBER OF PARTITIONS  @D66ODOW 07450029
S43STIBA DC    A(GDTTIBA)    SDAID - ADDR OF SNS TIB           @D66ODOW 07460029
         EJECT ,                                               @D51IDIS 07470029
*------------------------------------------------------------* @D51IDIS 07480029
* S43LOAD  - SET DYNAMIC CLASS TABLE ACTIVE                    @D51IDIS 07490029
*            INPUT:                                            @D51IDIS 07500029
*              R1  - ADDRESS OF USER SUPPLIED AREA             @D51IDIS 07510029
*              R10 - ADDRESS OF TCB                            @D51IDIS 07520029
*              R15 - FUNCTION CODE                             @D51IDIS 07530029
*------------------------------------------------------------* @D51IDIS 07540029
S43LOAD  DS    0F                                              @D51IDIS 07550029
         L     R5,PCBPTR         GET CURRENT PCB POINTER       @D51IDIS 07560029
         USING PCBADR,R5                                       @D51IDIS 07570029
         TM    PCBSSFLG,PWR      REQUESTOR POWER ?             @D51IDIS 07580029
         BZ    ERR21             NO, ILLEGAL SVC               @D51IDIS 07590029
         DROP  R5                                              @D51IDIS 07600029
         L     R2,IJBCLIM        GET ADDRESS OF LIMITS TABLE   @D51IDIS 07610029
         USING CLIM,R2                                         @D51IDIS 07620029
         CLC   IJBNPART(2),CSPART MORE THAN 12 PARTITION SPEC.?@D51IDIS 07630029
         BE    S43ERR04          NO, RETURN TO CALLER          @D51IDIS 07640029
         DROP  R2                                              @D51IDIS 07650029
         USING TCBADR,RA                                       @D66ODOW 07660029
         TM    TCBEXFLG,TCBEXAM  CALLER IN 24 BIT MODE         @D66ODOW 07670029
         DROP  RA                                              @D66ODOW 07680029
         BO    S43LOA20          NO --->                       @D66ODOW 07690029
         ICM   R1,8,H0           CLEAR FIRST BYTE              @D66ODOW 07700029
S43LOA20 DS    0H                                              @D66ODOW 07710029
         LA    R2,CLASSLNG*&NCLASS-1 GET END ADDRESS ...       @D51IDIS 07720029
         AR    R2,R1                   ... OF USER INPUT       @D51IDIS 07730029
         BAS   R8,VALIDAD        VALIDATE USER AREA            @D66ODOW 07740031
*SGLINK  VALIDAD,INPUT=(R1,R2,R6,R8),WORK=(R2),OUTPUT=(R5)     @D51IDIS 07750029
         B     ERR25             INVALID ADDRESS               @D51IDIS 07760029
         B     ERR25             INVALID ADDRESS               @D51IDIS 07770029
         CLC   0(1,R1),CLASSLNG*&NCLASS-1(R1) TABLE IN STORAGE @D51IDIS 07780029
*------------------------------------------------------------* @D51IDIS 07790029
*          - CHECK IF CLASS TABLE END INDICATION MISSING       @D51IDIS 07800029
*------------------------------------------------------------* @D51IDIS 07810029
         SLR   R2,R2             CLEAR COUNT                   @D51IDIS 07820029
         LR    R3,R1             GET CLASS TABLE ADDRESS       @D51IDIS 07830029
         LA    RE,&NCLASS        GET MAX. CLASS TABLE ENTRY NO.@D51IDIS 07840029
         USING CLASSADR,R3                                     @D51IDIS 07850029
S43LOA0L DS    0H                                              @D51IDIS 07860029
         LA    R2,1(,R2)         INCREASE COUNT                @D51IDIS 07870029
         CR    R2,RE             MORE CLASS ENTRIES THAN POSS.?@D51IDIS 07880029
         BH    S43ERR12          YES, RETURN TO CALLER         @D51IDIS 07890029
         TM    CLFLAG,CLEOTAB     END OF TABLE ?               @D51IDIS 07900029
         LA    R3,CLASSLNG(,R3)  PROCESS NEXT ENTRY            @D51IDIS 07910029
         BZ    S43LOA0L          NO, LOOK FOR NEXT ENTRY       @D51IDIS 07920029
         DROP  R3                                              @D51IDIS 07930029
         EJECT ,                                               @D51IDIS 07940029
*------------------------------------------------------------* @D51IDIS 07950029
*          - CHECK IF CLASS TABLE ALREADY ALLOCATED            @D51IDIS 07960029
*------------------------------------------------------------* @D51IDIS 07970029
         L     R2,IJBCLTAB       GET POINTER IN SYSCOM         @D51IDIS 07980029
         LTR   R5,R2             CLASS TABLE ALREADY AVAILABLE?@D51IDIS 07990029
         BZ    S43LOAD0          NO, GET SPACE AND MOVE TABLE  @D51IDIS 08000029
         L     RD,AEXTCPUT       GET BASE OF PRTY ROUTINE      @D51IDIS 08010029
*------------------------------------------------------------* @D51IDIS 08020029
*          - CHECK IF CLASS TABLE LOAD IS POSSIBLE             @D51IDIS 08030029
*------------------------------------------------------------* @D51IDIS 08040029
         USING CLASSADR,R2                                     @D51IDIS 08050029
         SLR   R5,R5             CLEAR REGISTER                @D51IDIS 08060029
         BAS   R8,S43LOAD3       LOOK FOR ACTIVE CLASSES       @D66ODOW 08070031
* LOOP START                                                   @D51IDIS 08080029
         TM    CLFLAG,CLEOTAB    END OF TABLE ?                @D51IDIS 08090029
         BO    S43LOAD4          YES, CONTINUE                 @D51IDIS 08100029
         LA    R2,CLASSLNG(,R2)  PROCESS NEXT ENTRY            @D51IDIS 08110029
S43LOAD3 DS    0H                                              @D51IDIS 08120029
         L     R4,CLAPCB         GET CORRESPONDING CLASS PCB   @D51IDIS 08130029
         USING CPCBADR,R4                                      @D51IDIS 08140029
*        B     S43LOAD1          YES, CHECK IF CLASS SPECIFIED @D51IDIS 08150029
         EJECT ,                                               @D51IDIS 08160029
*------------------------------------------------------------* @D51IDIS 08170029
* S43LOAD1 - DYNAMIC CLASS IS ENABLED                          @D51IDIS 08180029
*            CHECK IF CLASS IS SPECIFED                        @D51IDIS 08190029
*            INPUT:                                            @D51IDIS 08200029
*              R2 = ACTIVE CLASS TABLE ENTRY                   @D51IDIS 08210029
*              R4 = CORRESPONDING CPCB ADDRESS                 @D51IDIS 08220029
*              R8 = RETURN REGISTER                            @D51IDIS 08230029
*------------------------------------------------------------* @D51IDIS 08240029
         USING CLASSADR,R2                                     @D51IDIS 08250029
S43LOAD1 DS    0H                                              @D51IDIS 08260029
         LR    R3,R1             GET CLASS TABLE ADDRESS       @D51IDIS 08270029
         BAS   R9,S43LOAD2       LOOK FOR CLASS IN ACT. TABLE  @D66ODOW 08280031
* LOOP START                                                   @D51IDIS 08290029
         TM    CLFLAG-CLASSADR(R3),CLEOTAB     END OF TABLE ?  @D51IDIS 08300029
         BO    S43LOA22          YES, CHECK IF ACTIVATION POSS.@D51IDIS 08310029
         LA    R3,CLASSLNG(,R3)  PROCESS NEXT ENTRY            @D51IDIS 08320029
S43LOAD2 DS    0H                                              @D51IDIS 08330029
         CLC   CLCLASS,CLCLASS-CLASSADR(R3) CLASS FOUND ?      @D51IDIS 08340029
         BNER  R9                NO, LOOP                      @D51IDIS 08350029
         USING CPCBADR,R4                                      @D51IDIS 08360029
         OI    CPCBFLG1,CPCBUSE  INDICATE CLASS PCB IN USE     @D51IDIS 08370029
         ST    R4,CLAPCB-CLASSADR(R3) SAVE CLASS PCB ADDR.     @D51IDIS 08380029
         SR    R3,R1             GET OFFSET INTO CLASS TABLE   @D51IDIS 08390029
         ST    R3,CPCBCLOF       STORE OFFSET INTO CLASS PCB   @D51IDIS 08400029
         BR    R8                PROCESS NEXT ACT.CLASS ENTRY  @D51IDIS 08410029
         SPACE 2                                               @D51IDIS 08420029
S43LOA22 DS    0H                                              @D51IDIS 08430029
         CH    R5,CPCBCNT        PARTITIONS ALLOCATED ?        @D51IDIS 08440029
         BER   R8                YES, PROCESS NEXT ENTRY       @D61NDIS 08450029
         B     S43ERR08          RETURN WITH RETURN CODE       @D51IDIS 08460029
         DROP  R2                                              @D51IDIS 08470029
         DROP  R4                                              @D51IDIS 08480029
         EJECT ,                                               @D51IDIS 08490029
*------------------------------------------------------------* @D51IDIS 08500029
* S43LOAD0 - ALLOCATE SYSTEM GETVIS SPACE AND                  @D51IDIS 08510029
*            MOVE DYNAMIC CLASS TABLE                          @D51IDIS 08520029
*------------------------------------------------------------* @D51IDIS 08530029
S43LOAD0 DS    0H                                              @D51IDIS 08540029
         LR    R4,R1             SAVE ADDRESS OF INPUT AREA    @D51IDIS 08550029
         LA    R0,CLASSLNG*&NCLASS   GET TOTAL LENGTH OF TABLE @D51IDIS 08560029
         L     RF,IJBSMCOM       GET SMCOM ADDRESS             @D52VDIS 08570029
         USING SMCOM,RF                                        @D52VDIS 08580029
         LA    RF,SMCSSPID       GET ADDRESS OF SUBPOOL ID     @D52VDIS 08590029
         DROP  RF                                              @D52VDIS 08600029
*        SGETVIS PFIX=YES,ADDRESS=(1),LENGTH=(0),SPID=(15)     @D52VDIS 08610029
         SGETVIS PFIX=YES,ADDRESS=(1),LENGTH=(0),SPID=(15)     @D52VDIS 08620029
         LTR   RF,RF             ERROR OCCURRED ?              @D51IDIS 08630029
         BNZ   S43SYSER          SYSTEM ERROR                  @D51IDIS 08640029
         ST    R1,IJBCLTAB       SET POINTER IN SYSCOM         @D51IDIS 08650029
         LR    R1,R4             RESTORE ADDR. OF INPUT AREA   @D51IDIS 08660029
         OI    SV43FLAG,SV43CLAL INDICATE FIRST LOAD REQUEST   @D51IDIS 08670029
         CLC   0(1,R1),CLASSLNG*&NCLASS-1(R1) TABLE IN STORAGE @D51IDIS 08680029
*        B     S43LOAD4          RETURN TO MAIN PATH           @D51IDIS 08690029
         EJECT ,                                               @D51IDIS 08700029
*------------------------------------------------------------* @D51IDIS 08710029
* S43LOAD4 - MOVE INPUT CLASS TABLE TO SVA                     @D51IDIS 08720029
*------------------------------------------------------------* @D51IDIS 08730029
S43LOAD4 DS    0H                                              @D51IDIS 08740029
         L     R2,IJBCLTAB       GET CLASS TABLE POINTER       @D51IDIS 08750029
         USING SVEARA,RB                                       @D51IDIS 08760029
         ST    R2,SVER01         STORE INFO. TO BE RETURNED    @D51IDIS 08770029
         SLR   R3,R3             SET RETURN CODE ZERO          @D51IDIS 08780029
         ST    R3,SVER0F         STORE RETURN CODE             @D51IDIS 08790029
         DROP  RB                                              @D51IDIS 08800029
         LA    R3,CLASSLNG*&NCLASS   GET TOTAL LENGTH OF TABLE @D51IDIS 08810029
         LR    R4,R1             SAVE ADDRESS OF INPUT AREA    @D51IDIS 08820029
         LR    R5,R3             SET LENGTH FOR MOVE           @D51IDIS 08830029
         MVCL  R2,R4             MOVE CLASS TABLE TO SVA       @D51IDIS 08840029
         L     RD,ASTATPOW       GET ADDR.OF STATIC PRTY TABLE @D51IDIS 08850029
         TM    SV43FLAG,SV43CLAL FIRST LOAD REQUEST ?          @D51IDIS 08860029
         BO    S43LOAD6          YES, SKIP PCB SHIFT           @D51IDIS 08870029
         EJECT ,                                               @D51IDIS 08880029
*------------------------------------------------------------* @D51IDIS 08890029
*          - MOVE UNUSED STATPOWN CLASS ENTRIES                @D51IDIS 08900029
*            TO END OF TABLE                                   @D51IDIS 08910029
*------------------------------------------------------------* @D51IDIS 08920029
         LA    R4,&NUM*4(,RD)    POINT TO LOWEST ENTRY IN TABLE@D51IDIS 08930029
         LA    R2,4(,RD)         SKIP SYSTEM PCB ENTRY         @D51IDIS 08940029
         SLR   R3,R3             CLEAR INDEX OF UNUSED ENTRIES @D51IDIS 08950029
*------------------------------------------------------------* @D51IDIS 08960029
* S43LOADM - MOVE UNUSED CLASS PCB ENTRIES TO END OF           @D51IDIS 08970029
*            STATPOWN TABLE                                    @D51IDIS 08980029
*------------------------------------------------------------* @D51IDIS 08990029
S43LOADM DS    0H                                              @D51IDIS 09000029
         L     R5,0(,R2)         GET PCB/CPCB OF ENTRY         @D51IDIS 09010029
         USING CPCBADR,R5                                      @D51IDIS 09020029
         TM    CPCBFLAG,PCBCLFLG  CLASS PCB ?                  @D51IDIS 09030029
         BZ    S43LOA1M          NO, DO USED ENTRY PROCESS     @D51IDIS 09040029
         TM    CPCBFLG1,CPCBUSE  CLASS PCB IN USE ?            @D51IDIS 09050029
         BO    S43LOA1M          YES, DO USED ENTRY PROCESS    @D51IDIS 09060029
         LTR   R3,R3             UNUSED ENTRY ALREADY FOUND ?  @D51IDIS 09070029
         BNZ   S43LOA0M          YES, PROCESS NEXT ENTRY       @D51IDIS 09080029
         LR    R3,R2             POINT TO UNUSED ENTRY         @D51IDIS 09090029
S43LOA0M DS    0H                                              @D51IDIS 09100029
         LA    R2,4(,R2)         POINT TO NEXT ENTRY           @D51IDIS 09110029
         CR    R2,R4             END OF TABLE ?                @D51IDIS 09120029
         BNH   S43LOADM          NO, PROCESS NEXT ENTRY        @D51IDIS 09130029
         B     S43LOAD6          YES, ASSGN CLASS TABELE ENTRY @D51IDIS 09140029
         SPACE 2                                               @D51IDIS 09150029
*------------------------------------------------------------* @D51IDIS 09160029
* S43LOA1M - MOVE USED ENTRIES OF STATPOWN, IF NECESSARY       @D51IDIS 09170029
*------------------------------------------------------------* @D51IDIS 09180029
S43LOA1M DS    0H                                              @D51IDIS 09190029
         LTR   R3,R3             UNUSED ENTRY ALREADY FOUND ?  @D51IDIS 09200029
         BZ    S43LOA0M          NO, PROCESS NEXT ENTRY        @D51IDIS 09210029
         L     RF,0(,R3)         GET ADDRESS OF UNUSED CPCB    @D51IDIS 09220029
         MVC   0(4,R3),0(R2)     MOVE USED ENTRY               @D51IDIS 09230029
         ST    RF,0(,R2)         MOVE UNUSED CPCB TO NEW POS.  @D51IDIS 09240029
         LA    R3,4(,R3)         POINT TO NEXT UNUSED ENTRY    @D51IDIS 09250029
         B     S43LOA0M          PROCESS NEXT ENTRY            @D51IDIS 09260029
         DROP  R5                                              @D51IDIS 09270029
         EJECT ,                                               @D51IDIS 09280029
*------------------------------------------------------------* @D51IDIS 09290029
* S43LOAD6 - SET UP PRIORITY MASKS                             @D51IDIS 09300029
*          - ASSIGN CPCBS TO CLASS TABLE ENTRIES               @D51IDIS 09310029
*------------------------------------------------------------* @D51IDIS 09320029
S43LOAD6 DS    0H                                              @D51IDIS 09330029
         L     R2,IJBCLTAB       GET CLASS TABLE POINTER       @D51IDIS 09340029
         L     RF,ASVC57         GET SVC57 BASE ADDRESS        @D51IDIS 09350029
         USING SVC57,RF                                        @D51IDIS 09360029
         LA    R4,&NUM*4(,RD)    POINT TO LOWEST PRTY IN TABLE @D51IDIS 09370029
         LA    R3,4(,RD)         POINT TO HIGHEST PRTY PART.   @D51IDIS 09380029
         L     R9,ATSSERV        GET SERVICES' BASE            @D51IDIS 09390029
         USING TSSERV,R9                                       @D51IDIS 09400029
         L     R7,TSRHIGHB       GET HIGHEST PRTY MASK         @D51IDIS 09410029
         DROP  R9                                              @D51IDIS 09420029
         BAS   R9,S43LOAD7       SCAN PPRTYOWN FOR UNUSED CPCBS@D66ODOW 09430031
* LOOP START                                                   @D51IDIS 09440029
         LR    RD,R3             SAVE PROCESSED ENTRY          @D51IDIS 09450029
         LA    R3,4(,R3)         POINT TO NEXT ENTRY           @D51IDIS 09460029
         CR    R3,R4             END OF TABLE ?                @D51IDIS 09470029
         BH    S43LOADB          YES, LEAVE LOOP               @D51IDIS 09480029
*SGLINK S43LOADB,INPUT=(R6,RC,RF)                                       09490029
S43LOAD7 DS    0H                                              @D51IDIS 09500029
         SRL   R7,1              SET MASK TO NEXT LOWER PRTY   @D51IDIS 09510029
         L     R5,0(,R3)         GET PCB/CPCB OF ENTRY         @D51IDIS 09520029
         USING PCBADR,R5                                       @D51IDIS 09530029
         TM    PCBFLAG,PCBCLFLG  CLASS PCB ?                   @D51IDIS 09540029
         BO    S43LOAD9          YES, DO CLASS PCB UPDATE      @D51IDIS 09550029
*------------------------------------------------------------* @D51IDIS 09560029
* S43LOADA - UPDATE PRIORITY MASK                              @D51IDIS 09570029
*            INPUT:                                            @D51IDIS 09580029
*              R5 - PCB ADDRESS                                @D51IDIS 09590029
*              R7 - NEW PRTY MASK                              @D51IDIS 09600029
*              R9 - RETURN ADDRESS                             @D51IDIS 09610029
*              RC - BASE ADDRESS                               @D51IDIS 09620029
*              RF - SVC 57 BASE ADDRESS                        @D51IDIS 09630029
*            OUTPUT: NONE                                      @D51IDIS 09640029
*            WORK: NONE                                        @D51IDIS 09650029
*------------------------------------------------------------* @D51IDIS 09660029
*SGLINK S43LOADA,S,INPUT=(R5,R7,R9,RC,RF)                      @D51IDIS 09670029
S43LOADA DS    0H                                              @D51IDIS 09680029
         CL    R7,PCBPMASK       SAME PRIORITY AS BEFORE ?     @D51IDIS 09690029
         BER   R9                YES, PROCESS NEXT PCB         @D51IDIS 09700029
         ST    R7,PCBPMASK       SET PRTY MASK                 @D51IDIS 09710029
         BR    R9                PROCESS NEXT PCB              @D51IDIS 09720029
         DROP  R5                                              @D51IDIS 09730029
         EJECT ,                                               @D51IDIS 09740029
*------------------------------------------------------------* @D51IDIS 09750029
* S43LOAD9 - UPDATE CLASS PCB, IF NECESSARY                    @D51IDIS 09760029
*          INPUT:                                              @D51IDIS 09770029
*             R2 = CLASS TABLE ADDRESS                         @D51IDIS 09780029
*             R5 = CLASS PCB                                   @D51IDIS 09790029
*------------------------------------------------------------* @D51IDIS 09800029
         USING CLASSADR,R2                                     @D51IDIS 09810029
         USING CPCBADR,R5                                      @D51IDIS 09820029
S43LOAD9 DS    0H                                              @D51IDIS 09830029
         TM    CPCBFLG1,CPCBUSE  CLASS PCB IN USE ?            @D51IDIS 09840029
         BZ    S43LOA01          NO, OCCUPY CPCB FOR CLASS     @D51IDIS 09850029
         NI    CPCBFLG1,XFF-CPCBUSE  RESET INDICATOR           @D51IDIS 09860029
         L     R8,CPCBCLOF       GET OFFSET INTO CLASS TABLE   @D51IDIS 09870029
         A     R8,IJBCLTAB       GET ADDRESS OF CLASS PCB      @D51IDIS 09880029
         ST    R8,CPCBCLPT       STORE IT INTO  CLASS PCB      @D51IDIS 09890029
S43LOA09 DS    0H                                              @D51IDIS 09900029
         SLR   R8,R8             CLEAR LENGTH OF ...           @D51IDIS 09910029
         STH   R8,CPCBFXL        ... FIXED CB PART             @D51IDIS 09920029
         B     S43LOADA          RETURN TO MAIN PATH           @D51IDIS 09930029
         SPACE 2                                               @D51IDIS 09940029
*------------------------------------------------------------* @D51IDIS 09950029
*          - FREE CPCB FOUND                                   @D51IDIS 09960029
*          - ALLOCATE A CLASS TABLE ENTRY                      @D51IDIS 09970029
*------------------------------------------------------------* @D51IDIS 09980029
S43LOA01 DS    0H                                              @D51IDIS 09990029
         MVI   CPCBFLG1,ZERO     CLEAR FLAG BYTE               @D51IDIS 10000029
         SLR   R8,R8             CLEAR REGISTER                @D51IDIS 10010029
         LTR   R2,R2             ALL CLASS TABLE ENTRIES PROC.?@D51IDIS 10020029
         BZ    S43LOA03          YES, RETURN TO MAIN PATH      @D51IDIS 10030029
S43LOA11 DS    0H                                              @D51IDIS 10040029
         L     R8,CLAPCB         GET  CLASS PCB ADDR.          @D51IDIS 10050029
         LTR   R8,R8             CPCB ALREADY AVAILABLE ?      @D51IDIS 10060029
         BZ    S43LOA12          NO, MAKE CPCB AVAILABLE       @D51IDIS 10070029
         TM    CLFLAG,CLEOTAB    END OF CLASS TABLE ?          @D51IDIS 10080029
         LA    R2,CLASSLNG(,R2)  PROCESS NEXT ENTRY            @D51IDIS 10090029
         BZ    S43LOA11          NO, CHECK NEXT ENTRY          @D51IDIS 10100029
         SLR   R2,R2             CLEAR REGISTER                @D51IDIS 10110029
         B     S43LOA03          RETURN TO MAIN PATH           @D51IDIS 10120029
         EJECT ,                                               @D51IDIS 10130029
*------------------------------------------------------------* @D51IDIS 10140029
* S43LOA12 - ALLOCATE CPCB FOR CLASS TABLE ENTRY               @D51IDIS 10150029
*          - INITIALIZE CPCB FIELDS                            @D51IDIS 10160029
*------------------------------------------------------------* @D51IDIS 10170029
S43LOA12 DS    0H                                              @D51IDIS 10180029
         ST    R5,CLAPCB         SET CLASS PCB INTO CLASS TABLE@D51IDIS 10190029
         MVI   CPCBFLAG,PCBCLFLG SET CLASS PCB INDICATION      @D51IDIS 10200029
         MVC   CPCBCLSS(1),CLCLASS MOVE CLASS CHARACTER        @D51IDIS 10210029
         ST    R8,CPCBRUNT       RESET RUNTIME VALUE           @D51IDIS 10220029
         ST    R8,CPCBTIME       RESET INITIAL VALUE FOR BALANC@D51IDIS 10230029
         ST    R8,CPCBPBAL       RESET BASIC VALUE FOR BALANC  @D51IDIS 10240029
         TM    SUPVFLAG,JAACT    JOB ACCOUNTING ACTIVE ?       @D51IDIS 10250029
         BO    S43LOA02          YES, DO NOT RESET ACC. POINTER@D51IDIS 10260029
         MVC   CPCBJAPT,ASYSPCB  RESET ACCOUNTING POINTER      @D51IDIS 10270029
S43LOA02 DS    0H                                              @D51IDIS 10280029
         ST    R2,CPCBCLPT       STORE CLASS ENT.ADDR. TO CPCB @D51IDIS 10290029
         TM    CLFLAG,CLEOTAB    END OF CLASS TABLE ?          @D51IDIS 10300029
         LA    R2,CLASSLNG(,R2)  PROCESS NEXT ENTRY            @D51IDIS 10310029
         BZ    S43LOA09          NO, RETURN TO MAIN PATH       @D51IDIS 10320029
         SLR   R2,R2             CLEAR REGISTER                @D51IDIS 10330029
         B     S43LOA09          RETURN TO MAIN PATH           @D51IDIS 10340029
         SPACE 2                                               @D51IDIS 10350029
S43LOA03 DS    0H                                              @D51IDIS 10360029
         MVI   CPCBCLSS,X'FF'    INDICATE CPCB IS FREE         @D51IDIS 10370029
         MVI   CPCBFLAG,PCBCLFLG SET CLASS PCB INDICATION      @D51IDIS 10380029
         SLR   R8,R8             CLEAR LENGTH OF ...           @D51IDIS 10390029
         STH   R8,CPCBFXL        ... FIXED CB PART             @D51IDIS 10400029
         B     S43LOADA          RETURN TO MAIN PATH           @D51IDIS 10410029
         DROP  R2                                              @D51IDIS 10420029
         DROP  R5                                              @D51IDIS 10430029
         DROP  RF                                              @D51IDIS 10440029
         EJECT ,                                               @D51IDIS 10450029
*------------------------------------------------------------* @D51IDIS 10460029
* S43LOADB - UPDATE SELECTION STRINGS, IF NECESSARY            @D51IDIS 10470029
*          - COPY STATPOWN TO PPRTYOWN                         @D51IDIS 10480029
*            INPUT:                                            @D51IDIS 10490029
*              R6 - DISPATCHER BASE                            @D51IDIS 10500029
*              RC - BASE ADDRESS                               @D51IDIS 10510029
*              RF - SVC 57 BASE ADDRESS                        @D51IDIS 10520029
*            OUTPUT: NONE                                      @D51IDIS 10530029
*            WORK: NONE                                        @D51IDIS 10540029
*------------------------------------------------------------* @D51IDIS 10550029
*SGLINK S43LOADB,S,INPUT=(R6,RC,RF)                                     10560029
S43LOADB DS    0H                                              @D51IDIS 10570029
         SLR   R9,R9             CLEAR REGISTER                @D61NDIS 10580029
         USING SVC57,RF                                        @D51IDIS 10590029
         L     R8,APMGMDAT       GET PAGE MANAGER BASE ADDRESS @KD40259 10600029
         USING PMGMDATA,R8                                     @KD40259 10610029
         L     R7,ATPOUT         GET ADDRESS OF TPOUT ROUTINE  @KD40259 10620029
*        AMODESW CALL,REGS=(R7,R7) PROCESS TPOUT REQUEST       @KD40259 10630029
         AMODESW CALL,REGS=(R7,R7)                             @KD40259 10640029
*SGLINK TPOUT,INPUT=(R7,R8)                                             10650029
         DROP  R8                                              @KD40259 10660029
         OI    SYSFLAG5,TPBINACT SET TPBAL INACTIVE            @KD40259 10670029
         STH   R9,IJBTPBAL       RESET TP  BALANCING INDICATOR @D51IDIS 10680029
         NI    SV43FLAG,XFF-SV43CLAL RESET FIRST LOAD IND.     @D51IDIS 10690029
         EJECT ,                                               @D61NDIS 10700029
*        DISPMAC FUNC=LOADDYN     PROCESS LOAD REQUEST         @D61RDIS 10710029
         DISPMAC FUNC=LOADDYN     PROCESS LOAD REQUEST         @D61RDIS 10720029
*        FUNCTION WILL NOT RETURN                              @D61RDIS 10730029
         EJECT ,                                               @D51IDIS 10740029
*------------------------------------------------------------* @D51IDIS 10750029
* S43ENABL - ENABLE A DYNAMIC CLASS                            @D51IDIS 10760029
*            INPUT:                                            @D51IDIS 10770029
*              R0  - DYNAMIC CLASS                             @D51IDIS 10780029
*              R15 - FUNCTION CODE                             @D51IDIS 10790029
*------------------------------------------------------------* @D51IDIS 10800029
         USING TSSERV,R8                                       @D51IDIS 10810029
         USING SVC43,RC                                        @D51IDIS 10820029
S43ENABL DS    0F                                              @D51IDIS 10830029
         L     R5,PCBPTR         GET CURRENT PCB POINTER       @D51IDIS 10840029
         USING PCBADR,R5                                       @D51IDIS 10850029
         TM    PCBSSFLG,PWR      REQUESTOR POWER ?             @D51IDIS 10860029
         BZ    ERR21             NO, ILLEGAL SVC               @D51IDIS 10870029
         DROP  R5                                              @D51IDIS 10880029
         BAS   R7,TSRVCLS        CHECK CLASSES                 @D66ODOW 10890031
*SGLINK TSRVCLS,INPUT=(R0,R7,R8),OUTPUT=(RF),WORK=(R4)         @D51IDIS 10900029
         LTR   RF,RF             INVALID CLASS SPECIFIED ?     @D51IDIS 10910029
         BNZ   S43ERRRT          YES, RETURN TO CALLER         @D51IDIS 10920029
         BAS   R7,TSRCHCL        LOOK FOR CLASS TABLE ENTRY    @D66ODOW 10930031
*SGLINK TSRCHCL,INPUT=(R7,R8),OUTPUT=(R4,R7)                   @D51IDIS 10940029
         B     S43ERR12          TABLE NOT ACTIVE              @D51IDIS 10950029
         B     S43ERR08          NOT FOUND IN TABLE            @D51IDIS 10960029
         USING CLASSADR,R4                                     @D51IDIS 10970029
         TM    CLFLAG,CLACTIVE   CLASS ENABLED ?               @D51IDIS 10980029
         BO    S43ERR04          YES, RETURN TO CALLER         @D51IDIS 10990029
         OI    CLFLAG,CLACTIVE       ENABLE CLASS              @D51IDIS 11000029
         B     S43ERR00          RETURN TO CALLER              @D51IDIS 11010029
         DROP  R4                                              @D51IDIS 11020029
         DROP  R8                                              @D51IDIS 11030029
         EJECT ,                                               @D51IDIS 11040029
*------------------------------------------------------------* @D51IDIS 11050029
* S43PURGE - PURGE CLASS TABLE INFORMATION IN LIBRARY        * @D51IDIS 11060029
*            INPUT:                                            @D51IDIS 11070029
*              R1  - ADDRESS OF USER SUPPLIED AREA             @D52VDIS 11080029
*              R15 - FUNCTION CODE                             @D51IDIS 11090029
*              FIRST CLASS TABLE ENTRY (LABEL CLCTMEM) CONTAINS@D52VDIS 11100029
*              THE ID CHARACTER OF THE TABLE TO BE SAVED       @D52VDIS 11110029
*------------------------------------------------------------* @D51IDIS 11120029
S43PURGE DS    0F                                              @D51IDIS 11130029
         L     R5,PCBPTR         GET CURRENT PCB POINTER       @D51IDIS 11140029
         USING PCBADR,R5                                       @D51IDIS 11150029
         LA    R2,CLASSLNG-1     GET END ADDRESS FOR ONE ENTRY @D52IDIS 11160029
         TM    PCBSSFLG,SSX      REQUESTOR II ?                @D51IDIS 11170029
         BO    S43SVAIN          YES, CALL IJBDJTL             @D52VDIS 11180029
         B     ERR21             NO, ILLEGAL SVC               @D51IDIS 11190029
         DROP  R5                                              @D51IDIS 11200029
         EJECT ,                                               @D51IDIS 11210029
*------------------------------------------------------------* @D51IDIS 11220029
* S43SAVE  - STORE DYNAMIC CLASS TABLE INTO LIBRARY          * @D51IDIS 11230029
*            INPUT:                                            @D51IDIS 11240029
*              R1  - ADDRESS OF USER SUPPLIED AREA             @D51IDIS 11250029
*              R15 - FUNCTION CODE                             @D51IDIS 11260029
*              FIRST CLASS TABLE ENTRY (LABEL CLCTMEM) CONTAINS@D52VDIS 11270029
*              THE ID CHARACTER OF THE TABLE TO BE SAVED       @D52VDIS 11280029
*------------------------------------------------------------* @D51IDIS 11290029
S43SAVE  DS    0F                                              @D51IDIS 11300029
         L     R5,PCBPTR         GET CURRENT PCB POINTER       @D51IDIS 11310029
         USING PCBADR,R5                                       @D51IDIS 11320029
         TM    PCBSSFLG,SSX      REQUESTOR II ?                @D51IDIS 11330029
         BZ    ERR21             NO, ILLEGAL SVC               @D51IDIS 11340029
         DROP  R5                                              @D51IDIS 11350029
*------------------------------------------------------------* @D51IDIS 11360029
* S43SVAGL - ENTRY POINT FOR GET 'ALL' REQUEST               * @D51IDIS 11370029
*------------------------------------------------------------* @D51IDIS 11380029
S43SVAGL DS    0H                                              @D51IDIS 11390029
         LA    R2,CLASSLNG*&NCLASS-1 GET END ADDRESS ...       @D51IDIS 11400029
*------------------------------------------------------------* @D51IDIS 11410029
* S43SVAIN - INITIATE SVA ROUTINE PROCESSING                 * @D51IDIS 11420029
*              R0, R1 - INPUT REGISTER AS DESCRIBED BY         @D51IDIS 11430029
*                       ID=GET AND ID=SAVE                     @D51IDIS 11440029
*              R2  - LENGTH OF AREA                            @D51IDIS 11450029
*              R10 - TCB ADDRESS                               @D51IDIS 11460029
*              R15 - FUNCTION CODE                             @D51IDIS 11470029
*------------------------------------------------------------* @D51IDIS 11480029
S43SVAIN DS    0H                                              @D51IDIS 11490029
         USING TCBADR,RA                                       @D66ODOW 11500029
         TM    TCBEXFLG,TCBEXAM  CALLER IN 24 BIT MODE         @D66ODOW 11510029
         DROP  RA                                              @D66ODOW 11520029
         BO    S43SVA20          NO --->                       @D66ODOW 11530029
         ICM   R1,8,H0           CLEAR FIRST BYTE              @D66ODOW 11540029
S43SVA20 DS    0H                                              @D66ODOW 11550029
         AR    R2,R1                   ... OF USER INPUT       @D51IDIS 11560029
         BAS   R8,VALIDAD        VALIDATE USER AREA            @D66ODOW 11570031
*SGLINK  VALIDAD,INPUT=(R1,R2,R6,R8),WORK=(R2),OUTPUT=(R5)     @D51IDIS 11580029
         B     ERR25             INVALID ADDRESS               @D51IDIS 11590029
         B     ERR25             INVALID ADDRESS               @D51IDIS 11600029
S43SVAP  DS    0H                                              @D51IDIS 11610029
         L     R2,ASVASVDL       GET SUP. SUBDIR. TABLE ADDRESS@D51IDIS 11620029
         USING SVASVDL,R2                                      @D51IDIS 11630029
         L     R2,AIJBDCTL       GET SVA PHASE ADDR.           @D51IDIS 11640029
         LTR   R2,R2             PHASE AVAILABLE ?             @D51IDIS 11650029
         BZ    S43ERR24          NO, SET RETURN CODE           @D51IDIS 11660029
         DROP  R2                                              @D51IDIS 11670029
         L     R5,ASRQTAB        GET ADDRESS OF SRQTAB         @D61MPIS 11680029
         LA    R5,SRQDYNC-SRQTAB(,R5) GET ADDR. OF RES.  DESCR.@D61MPIS 11690029
         USING RQADR,R5                                        @D51IDIS 11700029
S43SVAG  DS    0H                                              @D51IDIS 11710029
         TM    RSCDESC,FREEBIT   RESOURCE OCCUPIED ?           @D66ODOW 11720029
         BO    S43GO             NO OCCUPY RESOURCE            @D66ODOW 11730029
         LR    R3,RC             SAVE BASE REGISTER            @D51IDIS 11740029
         BAS   RC,RWAIT          WAIT TO BE POSTED             @D66ODOW 11750031
*SGLINK  RWAIT,INPUT=(R5,RC)                                   @D51IDIS 11760029
         LR    RC,R3             RESTORE BASE REGISTER         @D51IDIS 11770029
         B     S43SVAG           TRY IT AGAIN                  @D51IDIS 11780029
         EJECT ,                                               @D51IDIS 11790029
*------------------------------------------------------------* @D51IDIS 11800029
* S43GO    - OCCUPY RESOURCE AND DISPATCH SVA ROUTINE          @D51IDIS 11810029
*            INPUT TO SVA ROUTINE:                             @D51IDIS 11820029
*              R0, R1 - INPUT REGISTER AS DESCRIBED BY         @D51IDIS 11830029
*                       ID=GET AND ID=SAVE                     @D51IDIS 11840029
*              R2  - SERVICE ROUTINE ADDRESS                   @D51IDIS 11850029
*              R15 - FUNCTION CODE                             @D51IDIS 11860029
*------------------------------------------------------------* @D51IDIS 11870029
S43GO    DS    0H                                              @D51IDIS 11880029
         MVC   RSCDESC,TID       OCCUPY RESOURCE, IDENT OWNER  @D66ODOW 11890029
         DROP  R5                                              @D51IDIS 11900029
         L     R8,TIBPTR         GET CURRENT TIB POINTER       @D51IDIS 11910029
         USING TIBADR,R8                                       @D51IDIS 11920029
         OI    TIBFLAG1,SYSACT   SYSTEM CODE ACTIVE            @D51IDIS 11930029
         DROP  R8                                              @D51IDIS 11940029
         L     RE,ATSSERV        GET ADDRESS OF SERVICE ROUT.  @D51IDIS 11950029
         USING SVEARA,R2         UPDATE SAVE AREA OF SVA PHASE @D51IDIS 11960029
         ST    RF,SVER0F         ...  FUNCTION CODE            @D51IDIS 11970029
         ST    R0,SVER00         ...  INPUT REGISTER 0         @D51IDIS 11980029
         ST    R1,SVER01         ...  INPUT REGISTER 1         @D51IDIS 11990029
         ST    RE,SVER02         ...  SERV. ROUT. ADDRESS      @D51IDIS 12000029
         ST    RB,SV43USAV       SAVE USER'S SAVE AREA POINTER @D51IDIS 12010029
         USING TCBADR,RA                                       @D51IDIS 12020029
         ST    R2,TCBSAVE        SET NEW SAVE AREA             @D51IDIS 12030029
         OI    TCBDYNFL,TCBDACT  INDICATE DYNCLASS SERVICE ACT.@D51IDIS 12040029
         DROP  RA                                              @D51IDIS 12050029
         L     RB,APBASE         GET SGAP BASE ADDRESS         @D51IDIS 12060029
         USING SGAP,RB                                         @D51IDIS 12070029
         MVC   SVEPSW(4),PSWFRAME COPY STANDARD PSW FRAME      @D51IDIS 12080029
         DROP  RB                                              @D51IDIS 12090029
         L     R5,PCBPTR         GET CURRENT PCB POINTER       @D51IDIS 12100029
         USING PCBADR,R5                                       @D51IDIS 12110029
         TM    PCBFLAG,PERACT    PER BIT SET ?                 @D51IDIS 12120029
         BZ    S43NOPER          NO, CONTINUE                  @D51IDIS 12130029
         OI    SVEPSW,PERMASK    ENABLE PROGRAM EVENT RECORDING@D51IDIS 12140029
S43NOPER DS    0H                                              @D51IDIS 12150029
         LA    R3,SVEEND-SVEARA(,R2) GET START OF PROGRAM      @D51IDIS 12160029
         ST    R3,SVEPSW2        SET IJBDCTL ENTRY POINT       @D51IDIS 12170029
         ST    R3,SVER0C         STORE IT INTO REGISTER 12     @D51IDIS 12180029
         BR    R6                RETURN TO DISPATCHER          @D51IDIS 12190029
         DROP  R2                                              @D51IDIS 12200029
         EJECT ,                                               @D51IDIS 12210029
*------------------------------------------------------------* @D51IDIS 12220029
* S43SVART - RETURN FROM SVA ROUTINE PROCESSING                @D51IDIS 12230029
*            INPUT:                                            @D51IDIS 12240029
*              R0  - LIBRARIAN REASON CODE, IF APPLICABLE      @D51IDIS 12250029
*              R1  - RETURN CODE                               @D51IDIS 12260029
*              R10 - TCB ADDRESS                               @D51IDIS 12270029
*              R15 - FUNCTION CODE                             @D51IDIS 12280029
*------------------------------------------------------------* @D51IDIS 12290029
S43SVART DS    0F                                              @D51IDIS 12300029
         USING TCBADR,RA                                       @D51IDIS 12310029
         TM    TCBDYNFL,TCBDACT  CALLED BY SVA ROUTINE ?       @D51IDIS 12320029
         BZ    ERR21             NO, ILLEGAL SVC               @D51IDIS 12330029
         LR    RF,R6             RETURN TO DISP. AFTER RPOST   @D51IDIS 12340029
         L     R2,SV43USAV       GET USER'S SAVE AREA POINTER  @D51IDIS 12350029
         USING SVEARA,R2                                       @D51IDIS 12360029
         ST    R0,SVER00         STORE REASON CODE, IF AVAIL.  @D51IDIS 12370029
         ST    R1,SVER0F         STORE RETURN CODE             @D51IDIS 12380029
         DROP  R2                                              @D51IDIS 12390029
S43NOSAV DS    0H                                              @D51IDIS 12400029
         ST    R2,TCBSAVE        RESTORE SAVE AREA ADDRESS     @D51IDIS 12410029
         NI    TCBDYNFL,XFF-TCBDACT RESET ACTIVE INDICATOR     @D51IDIS 12420029
         DROP  RA                                              @D51IDIS 12430029
         L     R5,TIBPTR         GET CURRENT TIB POINTER       @D51IDIS 12440029
         USING TIBADR,R5                                       @D51IDIS 12450029
         NI    TIBFLAG1,XFF-SYSACT    RESET SYSTEM CODE ACTIVE @D51IDIS 12460029
         DROP  R5                                              @D51IDIS 12470029
         L     R5,ASRQTAB        GET ADDRESS OF SRQTAB         @D61MPIS 12480029
         LA    R5,SRQDYNC-SRQTAB(,R5) GET ADDR. OF RES.  DESCR.@D61MPIS 12490029
         USING RQADR,R5                                        @D51IDIS 12500029
         NC    RSCDESC,FREEVAL   CLEAR RESOURCE OWNER          @D66ODOW 12510029
         B     RPOST             POST ANY WAITERS              @D51IDIS 12520029
*SGLINK  RPOST,INPUT=(R5,R6,RF),WORK=(R5,RE)                   @D51IDIS 12530029
         DROP  R5                                              @D51IDIS 12540029
         SPACE 2                                               @D51IDIS 12550029
*------------------------------------------------------------* @D51IDIS 12560029
* S43SVACL - SVA ROUTINE CANCELLED. RESTORE TASK'S SAVE AREA   @D51IDIS 12570029
*            ADDRESS AND POST ANY WAITERS                      @D51IDIS 12580029
*            CALLED BY TERMINATION PROCESS (SGAP)              @D51IDIS 12590029
*            INPUT:                                            @D51IDIS 12600029
*              RA  - CURRENT TCB ADDRESS                       @D51IDIS 12610029
*              RC  - SVC 43 BASE ADDRESS                       @D51IDIS 12620029
*              RF  - RETURN ADDRESS                            @D51IDIS 12630029
*            WORK: R2,R5,RE                                    @D51IDIS 12640029
*------------------------------------------------------------* @D51IDIS 12650029
*SGLINK S43SVACL,S,INPUT=(RA,RC,RF),WORK=(R2,R5,RE)            @D51IDIS 12660029
S43SVACL DS    0F                                              @D51IDIS 12670029
         L     R2,SV43USAV       GET USER'S SAVE AREA POINTER  @D51IDIS 12680029
         B     S43NOSAV          RESTORE SAVE AREA ADDRESS ... @D51IDIS 12690029
*                                ... AND POST ANY WAITERS      @D51IDIS 12700029
         EJECT ,                                               @D51IDIS 12710029
*------------------------------------------------------------* @D51IDIS 12720029
* S43CLEAN - DO CLEAN UP PROCESS                               @D51IDIS 12730029
*            CALLED BY JOB CONTROL WHEN PCEDOCL IS SET.        @D51IDIS 12740029
*            INPUT:                                            @D51IDIS 12750029
*              R8  - SERVICE ROUTINE ADDRESS                   @D51IDIS 12760029
*              RF  - FUNCTION CODE                             @D51IDIS 12770029
*------------------------------------------------------------* @D51IDIS 12780029
S43CLEAN DS    0F                                              @D51IDIS 12790029
         L     R5,PCBPTR         GET CURRENT PCB ADDRESS       @D51IDIS 12800029
         USING PCBADR,R5                                       @D51IDIS 12810029
         TM    PCEFLAG1,PCEDOCL  PROCESS CLEAN UP REQUESTED    @D51IDIS 12820029
         BZ    ERR21             NO, ILLEGAL SVC               @D51IDIS 12830029
         L     R4,PCECOMRA       GET COMREG ADDRESS            @D51IDIS 12840029
         USING COMREG,R4                                       @D51IDIS 12850029
         TM    JCSW5,JCLACTIV    JOB CONTROL ACTIVE ?          @D51IDIS 12860029
         BZ    ERR21             NO, ILLEGAL SVC               @D51IDIS 12870029
         DROP  R4                                              @D51IDIS 12880029
         OI    PCEFLAG,PCEINIT+PCECLEAN INDICATE CLEAN UP IN PR@D51IDIS 12890029
         USING TSSERV,R8                                       @D51IDIS 12900029
         BAS   R7,TSRPER         CHECK FOR SDAID ROUTINE       @D66ODOW 12910031
*SGLINK TSRPER,INPUT=(R5,R7,R8,RB),WORK=(RE,RF)                @D51IDIS 12920029
         DROP  R8                                              @D51IDIS 12930029
         NI    PCEFLAG1,XFF-PCEPROK          RESET FLAG        @D52VDIS 12940029
         TM    PCEFLAG,PCEDYNP   DYNAMIC PARTITION ?           @D51IDIS 12950029
         BO    S43CLEA0          YES, CHECK IF HOLD            @D51IDIS 12960029
         NI    PCEFLAG,XFF-PCEINIT-PCECLEAN RESET FLAGS        @D51IDIS 12970029
         NI    PCEFLAG1,XFF-PCEDOCL  RESET PROCESS INDICATION  @D51IDIS 12980029
*        SFREEVIS SPACE=ROS390   FREE ROUTED OS390 SUBPOOLS             12990029
         SFREEVIS SPACE=ROS390                                 @DY45712 13000030
         L     RE,PCECOMRA       GET COMREG ADDRESS            @D51IDIS 13010029
         USING COMREG,RE                                       @D51IDIS 13020029
         TM    POWFLG1,POWUPART  POWER CONTROLLED PARTITION ?  @D51IDIS 13030029
         BZ    S43CLEA0          NO, DO NOT POST POWER MAINTASK@D51IDIS 13040029
         OI    PCEFLAG,PCEPWPST  POST CLEAN UP PROCESS COMPLETE@D51IDIS 13050029
         L     RE,APOWTB         GET POWER CONTROL BLOCK       @D51IDIS 13060029
         USING PADS,RE                                         @D51IDIS 13070029
         OI    PAEB+2,X'80'      POST POWER MAIN ECB           @D51IDIS 13080029
         LH    R8,CATI           GET POWER MAINTASK ID         @D51IDIS 13090029
         DROP  RE                                              @D51IDIS 13100029
         BAS   RF,IOPOST0        SET POWER MAINTASK READY      @D6ODSOW 13110031
*SGLINK IOPOST0,INPUT=(R6,R8,RF),WORK=(R8,RE)                  @D51IDIS 13120029
S43CLEA0 DS    0H                                              @D51IDIS 13130029
         TM    PCEFLAG1,PCEPHOLD DYNCLASS ID=HOLD ISSUED ?     @D51IDIS 13140029
         BZR   R6                NO, RETURN TO DISPATCHER      @D51IDIS 13150029
         OI    PCEFLAG1,PCEPWAIT SET WAIT INDICATION           @D51IDIS 13160029
         LA    R1,S43CLEAN       SET TIBSTATE INFORMATION      @D51IDIS 13170029
         L     R5,ASRQTAB        GET ADDRESS OF SRQTAB         @D64MPIS 13180029
         LA    R5,SRQWAIT-SRQTAB(,R5) GET ADDR. OF WAIT QUEUE  @D64MPIS 13190029
         LR    RF,R6             RET.TO DISPATCHER AFTER UNPOST@D51IDIS 13200029
         B     UNPOST            UNPOST PARTITION              @D51IDIS 13210029
*SGLINK UNPOST,INPUT=(R1,R5,R6,RF),WORK=(R5,RE)                @D51IDIS 13220029
         DROP  R5                                              @D51IDIS 13230029
         EJECT ,                                               @D51IDIS 13240029
*------------------------------------------------------------* @D51IDIS 13250029
* S43PREP  - DO PREPARE PROCESS                                @D51IDIS 13260029
*            CALLED BY JOB CONTROL WHEN PCEDOPR IS SET         @D51IDIS 13270029
*            AND FOR STATIC PARTITIONS ONLY.                   @D51IDIS 13280029
*            INPUT:                                            @D51IDIS 13290029
*              R8  - SERVICE ROUTINE ADDRESS                   @D51IDIS 13300029
*              RB  - SAVE AREA ADDRESS                         @D51IDIS 13310029
*              RF  - FUNCTION CODE                             @D51IDIS 13320029
*------------------------------------------------------------* @D51IDIS 13330029
S43PREP  DS    0F                                              @D51IDIS 13340029
         L     R5,PCBPTR         GET CURRENT PCB ADDRESS       @D51IDIS 13350029
         USING PCBADR,R5                                       @D51IDIS 13360029
         TM    PCEFLAG1,PCEDOPR  PROCESS PREPARE  REQUESTED    @D51IDIS 13370029
         BZ    ERR21             NO, ILLEGAL SVC               @D51IDIS 13380029
         L     R4,PCECOMRA       GET COMREG ADDRESS            @D51IDIS 13390029
         USING COMREG,R4                                       @D51IDIS 13400029
         TM    JCSW5,JCLACTIV    JOB CONTROL ACTIVE ?          @D51IDIS 13410029
         BZ    ERR21             NO, ILLEGAL SVC               @D51IDIS 13420029
         DROP  R4                                              @D51IDIS 13430029
         OI    PCEFLAG,PCEINIT+PCEPREP  INDICATE PREPARE IN PR.@D51IDIS 13440029
         BAS   R9,S43PREPE       DO SPECIAL PREPARATION        @D66ODOW 13450031
*SGLINK S43PREPE,INPUT=(R5,R6,R9,RB,RC),WORK=(R7,R8,RA,RD,RE,RF)        13460029
         NI    PCEFLAG,XFF-PCEINIT          RESET FLAG         @D51IDIS 13470029
         NI    PCEFLAG1,XFF-PCEDOPR         RESET FLAGS        @D51IDIS 13480029
         BR    R6                RETURN TO DISPATCHER          @D51IDIS 13490029
         EJECT ,                                               @D51IDIS 13500029
*------------------------------------------------------------* @D51IDIS 13510029
* S43PREPE - HANDLES SPECIAL PREPARATION                       @D51IDIS 13520029
*            CALLED BY: END OF TASK AND PREPARE SERVICE        @D51IDIS 13530029
*            INPUT:                                            @D51IDIS 13540029
*              R5  - PCB ADDRESS                               @D51IDIS 13550029
*              R6  - DISPATCHER BASE                           @D51IDIS 13560029
*              R9  - RETURN ADDRESS                            @D51IDIS 13570029
*              RB  - TASK'S SAVE AREA                          @D51IDIS 13580029
*              RC  - BASE REGISTER                             @D51IDIS 13590029
*            WORK:                                             @D51IDIS 13600029
*              R7, R8, RE, RF                                  @D51IDIS 13610029
*              RA, RD (FUTURE EXTENSION)                       @D51IDIS 13620029
*------------------------------------------------------------* @D51IDIS 13630029
*SGLINK S43PREPE,S,INPUT=(R5,R6,R9,RB,RC),WORK=(R7,R8,RA,RD,RE,RF)      13640029
S43PREPE DS    0H                                              @D51IDIS 13650029
         L     R8,ATSSERV        GET TSR ROUTINE BASE ADDRESS  @D51IDIS 13660029
         USING TSSERV,R8                                       @D51IDIS 13670029
         BAS   R7,TSRPER         CHECK FOR SDAID ROUTINE       @D66ODOW 13680031
*SGLINK TSRPER,S,INPUT=(R5,R7,R8,RB),WORK=(RE,RF)              @D51IDIS 13690029
         DROP  R8                                              @D51IDIS 13700029
         NI    PCEFLAG,XFF-PCEPREP  RESET FLAG                 @D51IDIS 13710029
         OI    PCEFLAG1,PCEPROK          SET PREPARATION DONE  @D52VDIS 13720029
         BR    R9                RETURN TO CALLER              @D51IDIS 13730029
         DROP  R5                                              @D51IDIS 13740029
         EJECT ,                                               @D51IDIS 13750029
*------------------------------------------------------------           13760029
* S43ACPA - RETURN JOB ACCOUNTING INFORMATION FOR ONE                   13770029
*            PARTITION                                                  13780029
*            INPUT:                                                     13790029
*              R0  - PIK OF PARTITION                                   13800029
*              R1  - ADDRESS OF USER SUPPLIED AREA                      13810029
*              R15 - FUNCTION CODE                                      13820029
*------------------------------------------------------------*          13830029
S43ACPA  DS    0F                                              @D52VDIS 13840029
         USING TCBADR,RA                                       @D66ODOW 13850029
         TM    TCBEXFLG,TCBEXAM  CALLER IN 24 BIT MODE         @D66ODOW 13860029
         DROP  RA                                              @D66ODOW 13870029
         BO    S43ACP20          NO --->                       @D66ODOW 13880029
         ICM   R1,8,H0           CLEAR FIRST BYTE              @D66ODOW 13890029
S43ACP20 DS    0H                                              @D66ODOW 13900029
         LA    R2,JACLNG-1       GET TOTAL LENGTH OF TABLE     @D52VDIS 13910029
         AR    R2,R1             GET END ADDRESS               @D52VDIS 13920029
         LR    R9,R2             SAVE END ADDRESS              @D52VDIS 13930029
         BAS   R8,VALIDAD        VALIDATE USER AREA            @D66ODOW 13940031
*SGLINK  VALIDAD,INPUT=(R1,R2,R6,R8),WORK=(R2),OUTPUT=(R5)     @D52VDIS 13950029
         B     ERR25             INVALID ADDRESS               @D52VDIS 13960029
         B     ERR25             INVALID ADDRESS               @D52VDIS 13970029
         CLC   0(1,R1),0(R9)     ENSURE AREA IN STORAGE        @D52VDIS 13980029
*------------------------------------------------------------*          13990029
*          - CHECK PIK AND GET PCB ADDRESS                   *          14000029
*------------------------------------------------------------*          14010029
         LR    R5,R0             GET CALLER'S PIK              @D52VDIS 14020029
         N     R0,F15            SUPPLIED INPUT MULT. X'10' ?  @D52VDIS 14030029
         BNZ   S43ERR08          NO, ERROR                     @D52VDIS 14040029
         CH    R5,IJBHPIK        PIK LARGER THAN MAX. PIK ?    @D52VDIS 14050029
         BH    S43ERR08          YES, ERROR                    @D52VDIS 14060029
         SRL   R5,2              CALCULATE ADDRESS OF ...      @D52VDIS 14070029
         A     R5,APCBATAB              ... PCBATAB ENTRY      @D52VDIS 14080029
         ICM   R5,15,0(R5)       GET PCB ADDRESS               @D52VDIS 14090029
         BZ    S43ERR04          PCB NOT ALLOCATED             @D52VDIS 14100029
         TM    SUPVFLAG,JAACT    JOB ACCOUNTING ACTIVE ?       @D52VDIS 14110029
         BZ    S43ACCP0          NO, CONTINUE                  @D52VDIS 14120029
         EJECT ,                                               @D52VDIS 14130029
*------------------------------------------------------------*          14140029
*          - INITIALIZE JOB ACCOUNTING DEPENDENT DATA        *          14150029
*------------------------------------------------------------*          14160029
         LR    R7,R1             SAVE REGISTER 1               @D52VDIS 14170029
         LR    R8,R5             SAVE REGISTER 5               @D52VDIS 14180029
         L     RD,AEXTCPUT       GET UPDJA BASE                @D52VDIS 14190029
         USING EXTCPUT,RD                                      @D52VDIS 14200029
         BAS   R9,UPDJA          UPDATE JA COUNTERS            @D66ODOW 14210031
*SGLINK  UPDJA,INPUT=(R6,R9,RD),WORK=(R0,R1,R2,R3,R4,R5)       @D52VDIS 14220029
         DROP  RD                                              @D52VDIS 14230029
         LR    R1,R7             RESTORE REGISTER 1            @D52VDIS 14240029
         LR    R5,R8             RESTORE REGISTER 5            @D52VDIS 14250029
*------------------------------------------------------------*          14260029
* S43ACCP0 - MOVE ACCOUNTING INFORMATION TO USER AREA        *          14270029
*------------------------------------------------------------*          14280029
         USING JACADR,R1                                       @D52VDIS 14290029
S43ACCP0 DS    0H                                              @D52VDIS 14300029
         BAS   R9,S43ACCPL       GET JA INFORMATION            @D66ODOW 14310031
         OI    JACFLAG,JACEOF    SET LAST ENTRY INDICATION     @D52VDIS 14320029
         B     S43ERR00          RETURN TO CALLER              @D52VDIS 14330029
         DROP  R1                                              @D52VDIS 14340029
         EJECT ,                                               @D52VDIS 14350029
*------------------------------------------------------------* @D51IDIS 14360029
* S43ACCT  - RETURN JOB ACCOUNTING INFORMATION FOR ONE CLASS * @D51IDIS 14370029
*            OR STATIC PARTITIONS AND DYNAMIC CLASSES        * @D51IDIS 14380029
*            INPUT:                                            @D51IDIS 14390029
*              R0  - DYNAMIC CLASS OR NEGATIVE, IF             @D51IDIS 14400029
*                    'ALL' REQUEST                             @D51IDIS 14410029
*              R1  - ADDRESS OF USER SUPPLIED AREA             @D51IDIS 14420029
*              R15 - FUNCTION CODE                             @D51IDIS 14430029
*------------------------------------------------------------* @D51IDIS 14440029
S43ACCT  DS    0F                                              @D51IDIS 14450029
         USING TCBADR,RA                                       @D66ODOW 14460029
         TM    TCBEXFLG,TCBEXAM  CALLER IN 24 BIT MODE         @D66ODOW 14470029
         DROP  RA                                              @D66ODOW 14480029
         BO    S43ACC20          NO --->                       @D66ODOW 14490029
         ICM   R1,8,H0           CLEAR FIRST BYTE              @D66ODOW 14500029
S43ACC20 DS    0H                                              @D66ODOW 14510029
         LA    R2,&NUM*JACLNG-1   GET TOTAL LENGTH OF TABLE    @D51IDIS 14520029
*                                 FOR 'ALL' REQUEST            @D51IDIS 14530029
         LTR   R0,R0             'ALL' REQUESTED ?             @D51IDIS 14540029
         BM    S43ACCT0           YES, USE LENGTH OF REG.2     @D51IDIS 14550029
         LA    R2,32*JACLNG-1     GET TOTAL LENGTH OF TABLE    @D51IDIS 14560029
S43ACCT0 DS    0H                                              @D51IDIS 14570029
         AR    R2,R1                   ... OF USER INPUT       @D51IDIS 14580029
         LR    R9,R2             SAVE END ADDRESS              @D51IDIS 14590029
         BAS   R8,VALIDAD        VALIDATE USER AREA            @D66ODOW 14600031
*SGLINK  VALIDAD,INPUT=(R1,R2,R6,R8),WORK=(R2),OUTPUT=(R5)     @D51IDIS 14610029
         B     ERR25             INVALID ADDRESS               @D51IDIS 14620029
         B     ERR25             INVALID ADDRESS               @D51IDIS 14630029
         CLC   0(1,R1),0(R9)     ENSURE AREA IN STORAGE        @D51IDIS 14640029
         TM    SUPVFLAG,JAACT    JOB ACCOUNTING ACTIVE ?       @D51IDIS 14650029
         BZ    S43ACC00          NO, CONTINUE                  @D51IDIS 14660029
*------------------------------------------------------------* @D51IDIS 14670029
*          - INITIALIZE JOB ACCOUNTING DEPENDENT DATA        * @D51IDIS 14680029
*------------------------------------------------------------* @D51IDIS 14690029
         LR    R7,R0             SAVE REGISTER 0               @D51IDIS 14700029
         LR    R8,R1             SAVE REGISTER 1               @D51IDIS 14710029
         L     RD,AEXTCPUT       GET UPDJA BASE                @D51IDIS 14720029
         USING EXTCPUT,RD                                      @D51IDIS 14730029
         BAS   R9,UPDJA          UPDATE JA COUNTERS            @D66ODOW 14740031
*SGLINK  UPDJA,INPUT=(R6,R9,RD),WORK=(R0,R1,R2,R3,R4,R5)       @D51IDIS 14750029
         DROP  RD                                              @D51IDIS 14760029
         LR    R0,R7             RESTORE REGISTER 0            @D51IDIS 14770029
         LR    R1,R8             RESTORE REGISTER 1            @D51IDIS 14780029
         EJECT ,                                               @D51IDIS 14790029
*------------------------------------------------------------* @D51IDIS 14800029
* S43ACC00 - INITIALIZE PCB/CPCB LOOP                        * @D51IDIS 14810029
*------------------------------------------------------------* @D51IDIS 14820029
S43ACC00 DS    0H                                              @D51IDIS 14830029
         LTR   R0,R0             'ALL' REQUESTED ?             @D51IDIS 14840029
         BM    S43ACCT1           YES, USE STATIC PRTY TABLE   @D51IDIS 14850029
         L     R8,ATSSERV        GET TSR ROUTINE BASE ADDRESS  @D51IDIS 14860029
         USING TSSERV,R8                                       @D51IDIS 14870029
         BAS   R7,TSRVCLS        CHECK CLASSES                 @D66ODOW 14880031
*SGLINK TSRVCLS,INPUT=(R0,R7,R8),OUTPUT=(RF),WORK=(R4)         @D51IDIS 14890029
         LTR   RF,RF             INVALID CLASS SPECIFIED ?     @D51IDIS 14900029
         BNZ   S43ERRRT          YES, RETURN TO CALLER         @D51IDIS 14910029
         BAS   R7,TSRCHCL        LOOK FOR CLASS TABLE ENTRY    @D66ODOW 14920031
*SGLINK TSRCHCL,INPUT=(R7,R8),OUTPUT=(R4,R7)                   @D51IDIS 14930029
         B     S43ERR12          TABLE NOT ACTIVE              @D51IDIS 14940029
         B     S43ERR08          NOT FOUND IN TABLE            @D51IDIS 14950029
         DROP  R8                                              @D51IDIS 14960029
         LR    R2,R4                                           @D51IDIS 14970029
         USING CLASSADR,R2                                     @D51IDIS 14980029
         L     R7,CLAPCB         GET CORRESP. CLASS PCB        @D51IDIS 14990029
         USING CPCBADR,R7                                      @D51IDIS 15000029
         ICM   R4,15,CPCBPLOW    AT LEAST ONE PCB AVAILABLE ?  @D51IDIS 15010029
         BZ    S43ERR04          NO, RETURN TO CALLER          @D51IDIS 15020029
         LA    R3,CPCBCBPT       GET POINTER TO FIRST PCB ADDR.@D51IDIS 15030029
         LA    R9,S43ACCD1       GET LOOP START ADDRESS        @D51IDIS 15040029
         B     S43ACCTL          LOOP FOR ALL ENTRIES          @D51IDIS 15050029
S43ACCT1 DS    0H                                              @D51IDIS 15060029
         L     R3,ASTATPOW       GET STATIC PRTY OWNER TABLE   @D51IDIS 15070029
         LA    R4,&NPART*4(,R3)  OFFSET TO LAST TABLE ENTRY    @D51IDIS 15080029
         LA    R3,4(,R3)         POINT TO HIGHEST PRTY PART.   @D51IDIS 15090029
         LA    R9,S43ACCD1       GET LOOP START ADDRESS        @D51IDIS 15100029
         L     R8,IJBCLIM        GET ADDRESS OF LIMITS TABLE   @D51IDIS 15110029
         USING CLIM,R8                                         @D51IDIS 15120029
         CLC   IJBNPART(2),CSPART MORE THAN 12 PART. SPECIFIED?@D51IDIS 15130029
         BE    S43ACCTL          NO, PROCESS PCBS              @D51IDIS 15140029
         DROP  R8                                              @D51IDIS 15150029
         LA    R4,&NCLASS*4(,R4) OFFSET TO LAST TABLE ENTRY    @D51IDIS 15160029
         B     S43ACCTL          LOOP FOR ALL ENTRIES          @D51IDIS 15170029
         EJECT ,                                               @D51IDIS 15180029
*------------------------------------------------------------* @D51IDIS 15190029
* S43ACCD1 - PCB/CPCB LOOP                                   * @D51IDIS 15200029
*            MOVE REQUESTED INFORMATION TO USER AREA         * @D51IDIS 15210029
*            R1 = USER AREA ADDRESS                          * @D51IDIS 15220029
*------------------------------------------------------------* @D51IDIS 15230029
* LOOP START                                                   @D51IDIS 15240029
         USING JACADR,R1                                       @D51IDIS 15250029
S43ACCD1 DS    0H                                              @D51IDIS 15260029
         LA    R1,JACLNG(,R1)    POINT TO NEXT RECORD          @D51IDIS 15270029
S43ACCD2 DS    0H                                              @D51IDIS 15280029
         LA    R3,4(,R3)         POINT TO NEXT PCB             @D51IDIS 15290029
         CR    R3,R4             ALL PCB'S PROCESSED ?         @D51IDIS 15300029
         BH    S43ACCT4          YES, RETURN TO CALLER         @D51IDIS 15310029
S43ACCTL DS    0H                                              @D51IDIS 15320029
         L     R5,0(,R3)         GET FIRST/NEXT PCB ADDRESS    @D51IDIS 15330029
S43ACCPL DS    0H                ENTRY POINT FOR PART. REQUEST @D52VDIS 15340029
         XC    0(JACLNG,R1),0(R1) CLEAR RECORD                 @D52VDIS 15350029
         USING PCBADR,R5                                       @D51IDIS 15360029
         SR    RF,RF             RESET REGISTER 15             @D61TDIS 15370029
*        DISPMAC FUNC=PARTST     RETRIEVE PARTITION STATUS     @D61TDIS 15380029
         DISPMAC FUNC=PARTST     RETRIEVE PARTITION STATUS     @D61TDIS 15390029
         STH   RF,JACBSHR        SAVE SHARE VALUE              @D61TDIS 15400029
         TM    PCBFLAG,PCBCLFLG  CLASS PCB ?                   @D51IDIS 15410029
         BO    S43ACCTC          YES, MOVE CPCB FIELDS         @D51IDIS 15420029
         MVC   JACPCBFL,PCBFLAG  MOVE PCB FLAG                 @D51IDIS 15430029
         MVC   JACMPFI2(16),SMAXPFIX MOVE PFIX LIMITS          @D52VDIS 15440029
         MVC   JACLID,PCELID     MOVE SYSLOG ID                @D51IDIS 15450029
         MVC   JACPIK,PCEPIK     MOVE PIK                      @D51IDIS 15460029
         MVC   JACPSTRT(4),SMVPBEG  MOVE PARTITION BEGIN ADDR. @D52VDIS 15470029
         TM    PCEFLAG,PCEDYNP   DYNAMIC PARTITION ?           @D51IDIS 15480029
         BZ    S43ACC0L          NO, SKIP SPACE GETVIS SIZE UPD@D51IDIS 15490029
         L     R7,PCBPSCB        GET ADDRESS OF PCB            @D51IDIS 15500029
         USING SCBADR,R7                                       @D51IDIS 15510029
         L     R8,SCBSPGVE       GET END OF SPACE GETVIS AREA  @D51IDIS 15520029
         S     R8,SCBSPGVB       GET BEGIN OF SPACE GETVIS AREA@D51IDIS 15530029
         LA    R8,1(,R8)         PLUS 1                        @D51IDIS 15540029
         SRL   R8,10             ... IN K BYTES                @D52VDIS 15550029
         STH   R8,JACDSGV        STORE RESULT INTO USER AREA   @D52VDIS 15560029
         DROP  R7                                              @D51IDIS 15570029
S43ACC0L DS    0H                                              @D51IDIS 15580029
         L     R7,SMVPEND        GET PARTITION END ADDRESS     @D51IDIS 15590029
         S     R7,SMVPBEG        MINUS PARTITION START         @D51IDIS 15600029
         SRL   R7,10             ... IN K BYTES                @D51IDIS 15610029
         ST    R7,JACALLOC       SET PARTITION ALLOCATION VALUE@D51IDIS 15620029
         L     R7,SMVPEND        GET PARTITION END ADDRESS     @D51IDIS 15630029
         S     R7,SMVGVIS        MINUS PART. GETVIS START      @D51IDIS 15640029
         SRL   R7,10             ... IN K BYTES                @D51IDIS 15650029
         ST    R7,JACPGVS        SET PARTITION GETVIS SIZE     @D51IDIS 15660029
         L     R7,PCEPIB         GET PIB ADDRESS               @D51IDIS 15670029
         USING PIBADR,R7                                       @D51IDIS 15680029
         MVC   JACPIBFL(1),PIBFLG MOVE PIB FLAG                @D51IDIS 15690029
         EJECT ,                                               @D51IDIS 15700029
*------------------------------------------------------------* @D51IDIS 15710029
*          - GATHER JOB RELATED INFORMATION                  * @D51IDIS 15720029
*------------------------------------------------------------* @D51IDIS 15730029
         L     R7,PCECOMRA       GET COMREG ADDRESS            @D51IDIS 15740029
         USING COMREG,R7                                       @D51IDIS 15750029
         L     R8,SMVPEND        GET PARTITION END ADDRESS     @D52VDIS 15760029
         S     R8,PPEND          MINUS GETVIS ...              @D52VDIS 15770029
         BCTR  R8,0              ... START                     @D52VDIS 15780029
         SRL   R8,10             ... = TEMP.GETVIS SIZE IN KB  @D52VDIS 15790029
         ST    R8,JACPGVST       SET TEM. GETVIS SIZE          @D52VDIS 15800029
         MVC   JACPOWF1(1),POWFLG1 MOVE POWER FLAG BYTE 1      @D51IDIS 15810029
         MVC   JACVNAME(8),COMNAME  MOVE VSE/AF JOB NAME       @D51IDIS 15820029
         MVC   JACPHASE(8),IJBPHNAM MOVE EXEC PHASE NAME       @D51IDIS 15830029
         MVC   JACJOBST(6),IJBJOBST MOVE JOB START TIME        @D51IDIS 15840029
         L     R7,PCBPSCB        GET SCB ADDRESS OF ALLOC.SPACE@D52VDIS 15850029
         USING SCBADR,R7                                       @D52VDIS 15860029
         MVC   JACSPID(2),SCBID    MOVE SPACE ID               @D52VDIS 15870029
         L     R7,PCEPOWJB       GET POWER JOB INFO ADDRESS    @D51IDIS 15880029
         USING PJBADR,R7                                       @D51IDIS 15890029
         MVC   JACPNAME(8),PJBPNAME MOVE VSE/POWER JOB NAME    @D51IDIS 15900029
         MVC   JACPNUM(2),PJBPNUM   MOVE VSE/POWER JOB NUMBER  @D51IDIS 15910029
         DROP  R7                                              @D51IDIS 15920029
         EJECT ,                                               @D51IDIS 15930029
*------------------------------------------------------------* @D51IDIS 15940029
*          - GATHER ACCOUNTING INFORMATION                   * @D51IDIS 15950029
*------------------------------------------------------------* @D51IDIS 15960029
         TM    SUPVFLAG,JAACT    JOB ACCOUNTING ACTIVE ?       @D51IDIS 15970029
         BZR   R9                NO, CONTINUE WITH NEXT PCB    @D51IDIS 15980029
         OI    JACFLAG,JACJAACT  INDICATE JOB ACCOUNTING ACTIVE@D51IDIS 15990029
         BAS   R8,S43ACCTP       GET TIMER VALUES              @D66ODOW 16000031
*SGLINK S43ACCTP,INPUT=(R5,R8),OUTPUT=(RA,RF),WORK=(RE)        @D51IDIS 16010029
         ST    RA,JACCTIME       STORE TIMER VALUE             @D51IDIS 16020029
         ST    RF,JACOTIME       STORE TIMER VALUE             @D51IDIS 16030029
         L     RF,PCBTSIO        GET SIO COUNT                 @D51IDIS 16040029
         S     RF,PCBASIO        CALC. SIO COUNT FOR INTERVAL  @D51IDIS 16050029
         ST    RF,JACSIO         STORE IT TO USER AREA         @D51IDIS 16060029
         BR    R9                CONTINUE WITH NEXT PCB        @D51IDIS 16070029
         DROP  R2                                              @D51IDIS 16080029
         DROP  R5                                              @D51IDIS 16090029
         SPACE 2                                               @D51IDIS 16100029
*------------------------------------------------------------* @D51IDIS 16110029
* S43ACCT4 - SET LAST RECORD INFORMATION                     * @D51IDIS 16120029
*------------------------------------------------------------* @D51IDIS 16130029
S43ACCT4 DS    0H                                              @D51IDIS 16140029
         LA    R8,JACLNG         GET LENGTH OF TABLE ENTRY     @D51IDIS 16150029
         SR    R1,R8             POINT TO LAST VALID ENTRY     @D51IDIS 16160029
         OI    JACFLAG,JACEOF    SET LAST ENTRY INDICATION     @D51IDIS 16170029
         B     S43ERR00          RETURN TO CALLER              @D51IDIS 16180029
         EJECT ,                                               @D51IDIS 16190029
*------------------------------------------------------------* @D51IDIS 16200029
* S43ACCTC - MOVE CLASS RELATED INFORMATION                  * @D51IDIS 16210029
*------------------------------------------------------------* @D51IDIS 16220029
         USING CPCBADR,R5                                      @D51IDIS 16230029
S43ACCTC DS    0F                                              @D51IDIS 16240029
         CLI   CPCBCLSS,XFF      CLASS PCB IN USE ?            @D51IDIS 16250029
         BE    S43ACCD2          NO, RETURN TO MAIN PATH       @D51IDIS 16260029
         MVC   JACPCBFL,CPCBFLAG MOVE PCB FLAG                 @D51IDIS 16270029
         MVC   JACLID(2),CPCBCLSS MOVE CLASS CHARACTER         @D51IDIS 16280029
         MVC   JACAPART(2),CPCBCNT MOVE NO. OF ALLOCATED PART.S@D51IDIS 16290029
         L     R2,CPCBCLPT       GET CLASS TABLE ADDRESS       @D51IDIS 16300029
         USING CLASSADR,R2                                     @D51IDIS 16310029
         TM    CLFLAG,CLACTIVE   CLASS ENABLED ?               @D51IDIS 16320029
         BZ    S43ACC0C          NO, DON'T SET CORRESP. FLAG   @D51IDIS 16330029
         OI    JACCLFLG,JACACTIV INDICATE CLASS ENABLED        @D51IDIS 16340029
S43ACC0C DS    0H                                              @D51IDIS 16350029
         CLC   CLERFLG1(2),H0    CLASS TABLE ENTRY IN ERROR ?  @D51IDIS 16360029
         BNE   S43ACC1C          YES, RETURN TO MAIN PATH      @D51IDIS 16370029
         MVC   JACMPART(2),CLMAXP  MOVE MAX. NO. OF PART./CLASS@D51IDIS 16380029
         LH    RE,CLDSGS         GET SPACE GETVIS SIZE         @D51IDIS 16390029
         STH   RE,JACDSGV        STORE SPACE GETVIS SIZE       @D51IDIS 16400029
         L     R7,CLALLOC        GET PARTITION ALLOCATION ...  @D51IDIS 16410029
         SLL   R7,10                   ... VALUE ...           @D51IDIS 16420029
         SR    R7,RE                             ... IN K BYTES@D51IDIS 16430029
         ST    R7,JACALLOC       STORE IT INTO TABLE           @D51IDIS 16440029
         SH    R7,CLSIZE         MINUS PARTITON SIZE           @D51IDIS 16450029
         ST    R7,JACPGVS        STORE GETVIS SIZE INTO TABLE  @D51IDIS 16460029
         DROP  R2                                              @D51IDIS 16470029
         ICM   R5,15,CPCBFPCB    FIRST PCB IN CHAIN AVAILABLE ?@D51IDIS 16480029
         BZR   R9                NO, RETURN TO MAIN LOOP       @D51IDIS 16490029
         USING PCBADR,R5                                       @D51IDIS 16500029
         MVC   JACPSTRT(4),PCBAPBEG MOVE PARTITION BEGIN ADDR. @D51IDIS 16510029
         TM    SUPVFLAG,JAACT    JOB ACCOUNTING ACTIVE ?       @D51IDIS 16520029
         BZR   R9                NO, CONTINUE WITH NEXT PCB    @D51IDIS 16530029
         OI    JACFLAG,JACJAACT  INDICATE JOB ACCOUNTING ACTIVE@D51IDIS 16540029
         SLR   R2,R2             INITIALIZE CPU TIME COUNT     @D51IDIS 16550029
         SLR   R7,R7             INITIALIZE OVERHEAD TIME COUNT@D51IDIS 16560029
         SLR   RD,RD             INITIALIZE SIO COUNT          @D51IDIS 16570029
         EJECT ,                                               @D51IDIS 16580029
*------------------------------------------------------------* @D51IDIS 16590029
* S43ACC2C - CALCULATE TOTAL CPU TIME, OVERHEAD TIME AND SIOS* @D51IDIS 16600029
*------------------------------------------------------------* @D51IDIS 16610029
S43ACC2C DS    0H                                              @D51IDIS 16620029
         BAS   R8,S43ACCTP       GET TIMER VALUES              @D66ODOW 16630031
*SGLINK S43ACCTP,INPUT=(R5,R8),OUTPUT=(RA,RF),WORK=(RE)        @D51IDIS 16640029
         AR    R2,RA             ADD CPU TIME VALUE            @D51IDIS 16650029
         AR    R7,RF             ADD OVERHEAD TIME VALUE       @D51IDIS 16660029
         L     RE,PCBTSIO        GET SIO COUNT                 @D51IDIS 16670029
         S     RE,PCBASIO        CALC. SIO COUNT FOR INTERVAL  @D51IDIS 16680029
         AR    RD,RE             ADD SIO COUNT                 @D51IDIS 16690029
         ICM   R5,15,PCBANPCB    POINT TO NEXT PCB, AVAILABLE ?@D51IDIS 16700029
         BNZ   S43ACC2C          YES, LOOP                     @D51IDIS 16710029
         ST    R2,JACCTIME       STORE CPU TIME VALUE          @D51IDIS 16720029
         ST    R7,JACOTIME       STORE OVERHEAD TIME VALUE     @D51IDIS 16730029
         ST    RD,JACSIO         STORE SIO COUNT               @D51IDIS 16740029
         BR    R9                RETURN TO MAIN LOOP           @D51IDIS 16750029
         DROP  R5                                              @D51IDIS 16760029
         SPACE 2                                               @D51IDIS 16770029
*------------------------------------------------------------* @D51IDIS 16780029
* S43ACC1C - INDICATE CLASS TABLE ENTRY IN ERROR             * @D51IDIS 16790029
*------------------------------------------------------------* @D51IDIS 16800029
S43ACC1C DS    0H                                              @D51IDIS 16810029
         OI    JACCLFLG,JACCLER  INDICATE CLASSTAB ENTRY ERROR @D51IDIS 16820029
         BR    R9                RETURN TO MAIN LOOP           @D51IDIS 16830029
         DROP  R1                                              @D51IDIS 16840029
         EJECT ,                                               @D51IDIS 16850029
*------------------------------------------------------------* @D51IDIS 16860029
* S43ACCTP - PROVIDE PCB TIMER VALUES                        * @D51IDIS 16870029
*            INPUT:                                            @D51IDIS 16880029
*              R5 - PCB ADDRESS                                @D51IDIS 16890029
*              R8 - RETURN ADDRESS                             @D51IDIS 16900029
*            OUTPUT:                                           @D51IDIS 16910029
*              RA - CPU TIME VALUE                             @D51IDIS 16920029
*              RF - OVERHEAD TIME VALUE                        @D51IDIS 16930029
*            WORK: RE                                          @D51IDIS 16940029
*------------------------------------------------------------* @D51IDIS 16950029
         USING PCBADR,R5                                       @D51IDIS 16960029
*SGLINK S43ACCTP,S,INPUT=(R5,R8),OUTPUT=(RA,RF),WORK=(RE)      @D51IDIS 16970029
S43ACCTP DS    0F                                              @D51IDIS 16980029
         LM    RE,RF,PCPUTIME    GET CPU TIME                  @D51IDIS 16990029
         D     RE,SV43CONV       CONVERT TO 1/300 SEC UNIT     @D51IDIS 17000029
         LR    RA,RF             SET OUTPUT REGISTER           @D51IDIS 17010029
         LM    RE,RF,POVHTIME    GET OVERHEAD TIME             @D51IDIS 17020029
         D     RE,SV43CONV       CONVERT TO 1/300 SEC UNIT     @D51IDIS 17030029
         BR    R8                RETURN TO CALLER              @D51IDIS 17040029
         DROP  R5                                              @D51IDIS 17050029
         EJECT ,                                               @D51IDIS 17060029
*------------------------------------------------------------* @D51IDIS 17070029
* S43HOLD  - HOLD A PARTITION DURING CLEAN UP                  @D51IDIS 17080029
*            WITH THIS SERVICE THE PARTITION CAN NOT BE        @D51IDIS 17090029
*            DEACTIVATED/DEALLOCATED UNTIL THE SYSTEM RECEIVES @D51IDIS 17100029
*            A DYNCLASS ID=FREE REQUEST                        @D51IDIS 17110029
*            INPUT:                                            @D51IDIS 17120029
*              R0  - PIK OF THE PARTITION TO BE HELD           @D51IDIS 17130029
*            OUTPUT:                                           @D51IDIS 17140029
*              R15 - RETURN CODE                               @D51IDIS 17150029
*                    0 = SPECIFIED PARTITION WILL BE HELD      @D51IDIS 17160029
*                    4 = REQUEST REJECTED, DYNCLASS ID=HOLD    @D51IDIS 17170029
*                        ALREADY ISSUED                        @D51IDIS 17180029
*                    8 = PIK IS INVALID OR PARTITION NOT       @D51IDIS 17190029
*                        AVAILABLE                             @D51IDIS 17200029
*                   12 = REQUEST REJECTED, PARTITION IS        @D51IDIS 17210029
*                        IN PREPARE OR CLEANUP PROCESS         @D51IDIS 17220029
*                   16 = HOLD REQUEST FOR CURRENT PARTITION    @D51IDIS 17230029
*------------------------------------------------------------* @D51IDIS 17240029
         USING TSSERV,R8                                       @D51IDIS 17250029
S43HOLD  DS    0F                                              @D51IDIS 17260029
         USING SVEARA,RB                                       @D51IDIS 17270029
         TM    SVOLDP+1,KEY0     HAS REQUESTOR KEY ZERO ?      @D51IDIS 17280029
         BNZ   ERR21             NO, ILLEGAL SVC               @D51IDIS 17290029
         DROP  RB                                              @D51IDIS 17300029
         LR    RF,R0             SAVE PIK                      @D51IDIS 17310029
         BAS   R4,TSRGPCB        GET THE PCB ADDRESS           @D66ODOW 17320031
*SGLINK TSRGPCB,INPUT=(R0,R4,R8),OUTPUT=(R4,R5),WORK=(R0)      @D51IDIS 17330029
         B     S43ERR08      +0  INVALID PIK OR PCB NOT AVAIL. @D51IDIS 17340029
*                            +4  PCB ADDRESS RETURNED          @D51IDIS 17350029
         DROP  R8                                              @D51IDIS 17360029
         LA    R2,S43ERRRT       GET RETURN AFTER PROCESS      @D51IDIS 17370029
*SGLINK S43HOLDI,S,INPUT=(R2,R5,RC),OUTPUT=(RF),WORK=(R8,RE)   @D51IDIS 17380029
S43HOLDI DS    0H                                              @D51IDIS 17390029
         LA    RF,4              SET RETURN CODE               @D51IDIS 17400029
         L     R8,TIBPTR         GET CURRENT TIB ADDRESS       @D51IDIS 17410029
         USING TIBADR,R8                                       @D51IDIS 17420029
         TM    TIBFLAG3,TIBPHRQ  DYNCLASS ID=HOLD ALREADY ISSED@D51IDIS 17430029
         BOR   R2                YES, RETURN WITH RETURN CODE  @D51IDIS 17440029
         DROP  R8                                              @D51IDIS 17450029
         USING PCBADR,R5                                       @D51IDIS 17460029
         LA    RF,16             SET RETURN CODE               @D51IDIS 17470029
         LH    RE,PCEPIK         GET PIK OF PARTITION          @D51IDIS 17480029
         CH    RE,PIK            CURRENT PARTITION TO BE HELD ?@D51IDIS 17490029
         BER   R2                YES, RETURN WITH RETURN CODE  @D51IDIS 17500029
         LA    RF,12             SET RETURN CODE               @D51IDIS 17510029
         TM    PCEFLAG,PCECLEAN+PCEPREP  CLEAN UP IN PROCESS ? @D61NDIS 17520029
         BNZR  R2                YES, RETURN WITH RETURN CODE  @D51IDIS 17530029
         EJECT ,                                               @D52VDIS 17540029
*------------------------------------------------------------*          17550029
*          - PROCESS HOLD REQUEST                                       17560029
*------------------------------------------------------------*          17570029
         SLR   R8,R8             CLEAR REGISTER                @D51IDIS 17580029
         IC    R8,PCEHCNT        GET HOLD COUNT                @D51IDIS 17590029
         LA    R8,1(,R8)         INCREASE COUNT                @D51IDIS 17600029
         STC   R8,PCEHCNT        STORE IT BACK                 @D51IDIS 17610029
         OI    PCEFLAG1,PCEPHOLD INDICATE WAIT NECESSARY       @D51IDIS 17620029
         L     R8,TIBPTR         GET CURRENT TIB ADDRESS       @D51IDIS 17630029
         USING TIBADR,R8                                       @D51IDIS 17640029
         OI    TIBFLAG3,TIBPHRQ  DYNCLASS ID=HOLD REQUESTED    @D51IDIS 17650029
         STH   RE,TIBRQPIK       STORE PIK OF HELD PARTITION   @D51IDIS 17660029
         SLR   RF,RF             SET RETURN CODE               @D51IDIS 17670029
         BR    R2                RETURN TO CALLER              @D51IDIS 17680029
         DROP  R5                                              @D51IDIS 17690029
         DROP  R8                                              @D51IDIS 17700029
         EJECT ,                                               @D51IDIS 17710029
*------------------------------------------------------------* @D51IDIS 17720029
* S43FREE  - FREE A PARTITION THAT WAS HELD DURING CLEAN UP    @D51IDIS 17730029
*            SERVICE HAS TO BE USED AFTER DYNCLASS ID=HOLD     @D51IDIS 17740029
*            INPUT:                                            @D51IDIS 17750029
*              NONE                                            @D51IDIS 17760029
*            OUTPUT:                                           @D51IDIS 17770029
*              R15 - RETURN CODE                               @D51IDIS 17780029
*                    0 = SPECIFIED PARTITION WILL BE HELD      @D51IDIS 17790029
*                    4 = NO DYNCLASS ID=HOLD ISSUED            @D51IDIS 17800029
*                    8 = PIK IS INVALID OR PARTITION NOT       @D51IDIS 17810029
*                        AVAILABLE                             @D51IDIS 17820029
*------------------------------------------------------------* @D51IDIS 17830029
         USING TSSERV,R8                                       @D51IDIS 17840029
S43FREE  DS    0F                                              @D51IDIS 17850029
         USING SVEARA,RB                                       @D51IDIS 17860029
         TM    SVOLDP+1,KEY0     HAS REQUESTOR KEY ZERO ?      @D51IDIS 17870029
         BNZ   ERR21             NO, ILLEGAL SVC               @D51IDIS 17880029
         DROP  RB                                              @D51IDIS 17890029
         LA    R2,S43ERRRT       GET RETURN AFTER PROCESS      @D51IDIS 17900029
*SGLINK S43FREEI,S,INPUT=(R2,R6,R8,RC),OUTPUT=(RF),                    X17910029
               WORK=(R0,R4,R5,R8,RE)                                    17920029
S43FREEI DS    0H                                              @D51IDIS 17930029
         L     R5,TIBPTR         GET CURRENT TIB ADDRESS       @D51IDIS 17940029
         USING TIBADR,R5                                       @D51IDIS 17950029
         LA    RF,4              SET RETURN CODE               @D51IDIS 17960029
         TM    TIBFLAG3,TIBPHRQ  DYNCLASS ID=HOLD ALREADY ISSED@D51IDIS 17970029
         BZR   R2                NO, RETURN WITH RETURN CODE   @D51IDIS 17980029
         LH    R0,TIBRQPIK       GET PIK OF HELD PARTITION     @D51IDIS 17990029
         DROP  R5                                              @D51IDIS 18000029
         LA    RF,8              SET RETURN CODE               @D51IDIS 18010029
         BAS   R4,TSRGPCB        GET THE PCB ADDRESS           @D66ODOW 18020031
*SGLINK TSRGPCB,INPUT=(R0,R4,R8),OUTPUT=(R4,R5),WORK=(R0)      @D51IDIS 18030029
         B     0(,R2)        +0  INVALID PIK OR PCB NOT AVAIL. @D51IDIS 18040029
*                            +4  PCB ADDRESS RETURNED          @D51IDIS 18050029
         DROP  R8                                              @D51IDIS 18060029
         USING PCBADR,R5                                       @D51IDIS 18070029
S43FRRE0 DS    0H                                              @D51IDIS 18080029
         SLR   R8,R8             CLEAR REGISTER                @D51IDIS 18090029
         IC    R8,PCEHCNT        GET HOLD COUNT                @D51IDIS 18100029
         S     R8,F1             DECREASE COUNT                @D51IDIS 18110029
         STC   R8,PCEHCNT        STORE IT BACK                 @D51IDIS 18120029
         BP    S43FREE0          NOT ZERO, RETURN TO CALLER    @D51IDIS 18130029
         NI    PCEFLAG1,XFF-PCEPHOLD RESET FLAG                @D51IDIS 18140029
         TM    PCEFLAG1,PCEPWAIT SPECIFIED PARTITION WAITING ? @D51IDIS 18150029
         BZ    S43FREE0          NO, RETURN TO CALLER          @D51IDIS 18160029
         NI    PCEFLAG1,XFF-PCEPWAIT RESET FLAG                @D51IDIS 18170029
         L     R8,PCEPIB2        GET MAINTASK'S ...            @D66ODOW 18180029
         LH    R8,PIBMTID-PIB2ADR(,R8) ...TASK ID              @D66ODOW 18190029
         BAS   RF,IOPOST0        POST WAITING TASK             @D66ODOW 18200031
*SGLINK IOPOST0,S,INPUT=(R6,R8,RF),WORK=(R8,RE)                @D51IDIS 18210029
         DROP  R5                                              @D51IDIS 18220029
         EJECT ,                                               @D51IDIS 18230029
*------------------------------------------------------------* @D51IDIS 18240029
* S43FREE0 - RESET "HOLD" INDICATIONS                          @D51IDIS 18250029
*------------------------------------------------------------* @D51IDIS 18260029
S43FREE0 DS    0H                                              @D51IDIS 18270029
         L     R8,TIBPTR         GET CURRENT TIB ADDRESS       @D51IDIS 18280029
         USING TIBADR,R8                                       @D51IDIS 18290029
         NI    TIBFLAG3,XFF-TIBPHRQ-TIBPHMO RESET HOLD INDIC.  @D51IDGL 18300029
         SLR   RF,RF             CLEAR ...                     @D51IDIS 18310029
         STH   RF,TIBRQPIK       STORE PIK OF HELD PARTITION   @D51IDIS 18320029
         BR    R2                RETURN TO CALLER              @D51IDIS 18330029
         DROP  R8                                              @D51IDIS 18340029
         SPACE 2                                               @D51IDIS 18350029
*------------------------------------------------------------* @D51IDIS 18360029
* S43FRRET - ENTERED FROM CNCLEXIT, WHEN TASK TERMINATES       @D51IDIS 18370029
*            INPUT:                                            @D51IDIS 18380029
*              R6 = DISPATCHER ADDRESS                         @D51IDIS 18390029
*              R8 = TIB ADDRESS                                @D51IDIS 18400029
*              RC = BASE REGISTER                              @D51IDIS 18410029
*            RETURN: TO DISPATCHER                             @D51IDIS 18420029
*------------------------------------------------------------* @D51IDIS 18430029
*SGLINK S43FRRET,S,INPUT=(R6,R8,RC)                            @D51IDIS 18440029
S43FRRET DS    0H                                              @D51IDIS 18450029
         USING TIBADR,R8                                       @D51IDIS 18460029
         LH    R0,TIBRQPIK       GET PIK OF HELD PARTITION     @D51IDIS 18470029
         LR    R2,R6             GET RETURN TO DISPATCHER      @D51IDIS 18480029
*                                AFTER PROCESSING              @D51IDIS 18490029
         L     R8,ATSSERV        GET BASE FOR SERVICE ROUTINE  @D51IDIS 18500029
         USING TSSERV,R8                                       @D51IDIS 18510029
         BAS   R4,TSRGPCB        GET THE PCB ADDRESS           @D66ODOW 18520031
*SGLINK TSRGPCB,INPUT=(R0,R4,R8),OUTPUT=(R4,R5),WORK=(R0)      @D51IDIS 18530029
         B     S43FREE0      +0  INVALID PIK OR PCB NOT AVAIL. @D51IDIS 18540029
*                            +4  PCB ADDRESS RETURNED          @D51IDIS 18550029
         B     S43FRRE0          FREE HELD PARTITION           @D51IDIS 18560029
         DROP  R8                                              @D51IDIS 18570029
         EJECT ,                                               @D51IDIS 18580029
*------------------------------------------------------------* @D51IDIS 18590029
* S43RESET - RELEASE THE CLASS TABLE STORAGE AND UPDATE        @D51IDIS 18600029
*            PPRTYOWN, STATPOWN AND PRTYLIST.                  @D51IDIS 18610029
*            INPUT:                                            @D51IDIS 18620029
*              R6 - DISPATCHER ADDRESS                         @D51IDIS 18630029
*              RC - BASE ADDRESS                               @D51IDIS 18640029
*            OUTPUT:                                           @D51IDIS 18650029
*              NONE                                            @D51IDIS 18660029
*------------------------------------------------------------* @D51IDIS 18670029
*SGLINK S43RESET,S,INPUT=(R6,RC)                               @D51IDIS 18680029
S43RESET DS    0F                                              @D51IDIS 18690029
         ICM   R1,15,IJBCLTAB    CLASS TABLE AVAILABLE ?       @D51IDIS 18700029
         BZR   R6                NO, RETURN TO DISPATCHER      @D51IDIS 18710029
         LA    R0,CLASSLNG*&NCLASS LENGTH OF CLASS TABLE       @D51IDIS 18720029
         L     RA,TCBPTR         GET CURRENT TCB POINTER       @D51IDIS 18730029
*        SFREEVIS ADDRESS=(1),LENGTH=(0)                       @D51IDIS 18740029
         SFREEVIS ADDRESS=(1),LENGTH=(0)                       @D51IDIS 18750029
         L     R8,ATSSERV        GET BASE FOR SERVICE ROUTINE  @D51IDIS 18760029
         USING TSSERV,R8                                       @D51IDIS 18770029
         SLR   R0,R0             CLEAR ...                     @D51IDIS 18780029
         ST    R0,IJBCLTAB             ... CLASS TABLE ADDRESS @D51IDIS 18790029
         L     R3,ASTATPOW       GET ADDR.OF STATIC PRTY TABLE @D51IDIS 18800029
         LA    R4,&NUM*4(,R3)    POINT TO LOWEST ENTRY IN TABLE@D51IDIS 18810029
         LA    R3,4(,R3)         POINT TO FIRST PARTITION ENTRY@D51IDIS 18820029
         EJECT ,                                               @D51IDIS 18830029
*------------------------------------------------------------* @D51IDIS 18840029
*          - UPDATE STATPOWN                                   @D51IDIS 18850029
*------------------------------------------------------------* @D51IDIS 18860029
         L     RF,ASVC57         GET ADDR.OF SVC 57 ROUTINE    @D51IDIS 18870029
         USING SVC57,RF                                        @D51IDIS 18880029
         MVC   PCBAWTAB(&NUM*4),0(R3) MOVE PCB ADDRESSES       @D51IDIS 18890029
         SLR   R2,R2             INITIALIZE INDEX              @D51IDIS 18900029
         L     RD,HIGPMASK       GET HIGHEST PART. PRTY MASK   @D51IDIS 18910029
         L     RE,LOWPMASK       GET LOWEST  PRTY MASK         @D51IDIS 18920029
         BAS   R9,S43RESEL       SCAN STATPOWN FOR CPCBS       @D66ODOW 18930031
* LOOP START                                                   @D51IDIS 18940029
         LA    R2,4(,R2)         INCREASE INDEX                @D51IDIS 18950029
         CR    R3,R4             ALL ENTRIES PROCESSED ?       @D51IDIS 18960029
         BH    S43LOADB          YES, UPDATE REMAINING TABLES  @D51IDIS 18970029
*SGLINK S43LOADB,INPUT=(R6,RC,RF)                                       18980029
S43RESEL DS    0H                                              @D51IDIS 18990029
         L     R5,PCBAWTAB(R2)   GET PCB/CPCB ADDRESS          @D51IDIS 19000029
         USING PCBADR,R5                                       @D51IDIS 19010029
         TM    PCBFLAG,PCBCLFLG  CLASS PCB ?                   @D51IDIS 19020029
         BO    S43RESE0          YES, INDICATE FREE CPCB       @D51IDIS 19030029
         ST    R5,0(,R3)         MOVE PCB ADDRESS TO STATPOWN  @D51IDIS 19040029
         LA    R3,4(,R3)         POINT TO NEXT ENTRY           @D51IDIS 19050029
         LR    R7,RD             SAVE MASK FOR S43LOADA        @D51IDIS 19060029
         SRL   RD,1              SET MASK TO NEXT LOWER PRTY   @D51IDIS 19070029
         B     S43LOADA          UPDATE PRTY MASK              @D51IDIS 19080029
*SGLINK S43LOADA,INPUT=(R5,R7,R9,RC,RF)                        @D51IDIS 19090029
         SPACE 2                                               @D51IDIS 19100029
S43RESE0 DS    0H                                              @D51IDIS 19110029
         USING CPCBADR,R5                                      @D51IDIS 19120029
         MVI   CPCBCLSS,XFF      INDICATE UNUSED CPCB          @D51IDIS 19130029
         ST    R5,0(,R4)         MOVE PCB ADDRESS TO STATPOWN  @D51IDIS 19140029
         S     R4,F4             POINT TO NEXT ENTRY           @D51IDIS 19150029
         LR    R7,RE             SAVE MASK FOR S43LOADA        @D51IDIS 19160029
         SLL   RE,1              SET MASK TO NEXT HIGHER PRTY  @D51IDIS 19170029
         B     S43LOADA          UPDATE PRTY MASK              @D51IDIS 19180029
*SGLINK S43LOADA,INPUT=(R5,R7,R9,RC,RF)                        @D51IDIS 19190029
         DROP  R5                                              @D51IDIS 19200029
         DROP  R8                                              @D51IDIS 19210029
         DROP  RF                                              @D51IDIS 19220029
         SPACE 2                                               @D64ADIS 19230029
LOWPMASK DC    FS(31-&NUM.)'1'                                 @D64ADIS 19240029
HIGPMASK DC    X'40000000'                                     @D64ADIS 19250029
         EJECT ,                                               @D51IDIS 19260029
*------------------------------------------------------------* @D51IDIS 19270029
* S43RET.. - RETURN INFORMATION ROUTINES                       @D51IDIS 19280029
*------------------------------------------------------------* @D51IDIS 19290029
         USING SVEARA,RB                                       @D51IDIS 19300029
S43RETR1 DS    0H                IJBDCTL NOT IN SVA            @D51IDIS 19310029
         ST    R0,SVER01         STORE INFO. TO BE RETURNED    @D51IDIS 19320029
*------------------------------------------------------------* @D51IDIS 19330029
* S43ERR.. - RETURN CODE ROUTINE                               @D51IDIS 19340029
*------------------------------------------------------------* @D51IDIS 19350029
S43ERR00 DS    0H                IJBDCTL NOT IN SVA            @D51IDIS 19360029
         SLR   RF,RF             SET RETURN CODE ZERO          @D51IDIS 19370029
S43ERRRT DS    0H                IJBDCTL NOT IN SVA            @D51IDIS 19380029
         ST    RF,SVER0F         STORE RETURN CODE             @D51IDIS 19390029
         BR    R6                RETURN TO DISPATCHER          @D51IDIS 19400029
         SPACE 2                                               @D51IDIS 19410029
S43ERR04 DS    0F                SET RETURN CODE 4             @D51IDIS 19420029
         LA    RF,4              GET RETURN CODE               @D51IDIS 19430029
         B     S43ERRRT          RETURN TO COMMON PASS         @D51IDIS 19440029
         SPACE 2                                               @D51IDIS 19450029
S43ERR08 DS    0F                SET RETURN CODE 8             @D51IDIS 19460029
         LA    RF,8              GET RETURN CODE               @D51IDIS 19470029
         B     S43ERRRT          RETURN TO COMMON PASS         @D51IDIS 19480029
         SPACE 2                                               @D51IDIS 19490029
S43ERR12 DS    0F                SET RETURN CODE 12            @D51IDIS 19500029
         LA    RF,12             GET RETURN CODE               @D51IDIS 19510029
         B     S43ERRRT          RETURN TO COMMON PASS         @D51IDIS 19520029
         SPACE 2                                               @D51IDIS 19530029
S43ERR16 DS    0F                SET RETURN CODE 16            @D51IDIS 19540029
         LA    RF,16             GET RETURN CODE               @D51IDIS 19550029
         B     S43ERRRT          RETURN TO COMMON PASS         @D51IDIS 19560029
         SPACE 2                                               @D51IDIS 19570029
S43ERR24 DS    0F                IJBDCTL NOT IN SVA            @D51IDIS 19580029
         LA    RF,24             GET RETURN CODE               @D51IDIS 19590029
         B     S43ERRRT          RETURN TO COMMON PASS         @D51IDIS 19600029
         DROP  RB                                              @D51IDIS 19610029
         DROP  R6                                              @D51IDIS 19620029
         EJECT ,                                               @D51IDIS 19630029
*------------------------------------------------------------* @D51IDIS 19640029
* WORK FIELDS                                                * @D51IDIS 19650029
*------------------------------------------------------------* @D51IDIS 19660029
         DS    0D                                              @D51IDIS 19670029
         DC    CL8'DYN SAVE'                                   @D51IDIS 19680029
ASVC57   DC    A(SVC57)          SVC57 BASE ADDRESS            @D51IDIS 19690029
ASVC117  DC    A(SVC117)         SVC117 BASE ADDRESS           @D51IDIS 19700029
SV43MOVE MVC   0(0,R3),4(R3)     MVC FOR PCB MOVE              @D51IDIS 19710029
SV43XC   XC    0(0,R3),0(R3)     INSTRUCTION TO CLEAR BYTES    @D51IDIS 19720029
SV43AND  NI    0(R4),0           INSTRUCTION TO CLEAR BITS     @D51IDIS 19730029
SV43MASK DC    X'7F3F1F0F07030100' MASK TO CLEAR BITS          @D51IDIS 19740029
SV43CONV DC    F'208'            TIMER CONVERSION VALUE        @D51IDIS 19750029
SV43CON  DC    F'13653333'       TIME CONVERSION FACTOR        @D51IDIS 19760029
SV43NTAB DC    F'0'              BEGIN OF NEXT TABLE           @D61ADMZ 19770029
SV43USAV DC    F'0'              USER'S SAVE AREA POINTER, ... @D51IDIS 19780029
*                                USED ALSO DURING ...          @D51IDIS 19790029
*                                INITIALIZATION AS WORK FIELD  @D51IDIS 19800029
SV43HFCT DC    AL2(S43BRTBE/4-1) HIGHEST FUNCTION CODE         @D51IDIS 19810029
SV43FLAG DC    X'00'             SVC 43 FLAG BYTE              @D51IDIS 19820029
*              X'80'               0 END OF BALANCING INDICATOR@D51IDIS 19830029
SV43INIT EQU   X'40'               1 SYSTEM INITIALIZED        @D51IDIS 19840029
SV43CLAL EQU   X'20'               2 FIRST LOAD REQUEST        @D51IDIS 19850029
CPCBDUM  EQU   SV43FLAG-2        DUMMY CPCB                    @D51IDIS 19860029
CLSCPCBL DC    A(&NCLASS*CPCBLNG) SIZE OF CLASS PCBS           @D64ADMS 19870029
         DROP  RC                                              @D51IDIS 19880029
         TITLE 'VSE SUPERVISOR  SGDYNC SYSTEM SERVICES'                 19890029
************************************************************** @D51IDIS 19900029
*                                                            * @D51IDIS 19910029
* TSSERV - SYSTEM SERVICE ROUTINES                           * @D51IDIS 19920029
*          CALLED FOR INITIALIZATION, VALIDATION AND         * @D51IDIS 19930029
*          DEACTIVATION BY INTERNAL ROUTINES                 * @D51IDIS 19940029
*         INPUT:                                             * @D51IDIS 19950029
*           R0 - R6 - SEE ROUTINE DESCRIPTION                * @D51IDIS 19960029
*           R7  - RETURN ADDRESS                             * @D51IDIS 19970029
*           R8  - TSSERV ADDRESS                             * @D51IDIS 19980029
*           R15 - FUNCTION CODE                              * @D51IDIS 19990029
*                      FC=0 - DYNAMIC PARTITION ALLOCATION   * @D51IDIS 20000029
*                      FC=1 - DYNAMIC PARTITION DEALLOCATION * @D51IDIS 20010029
*                      FC=2 - DYNAMIC PARTITION ACTIVATION   * @D51IDIS 20020029
*                      FC=3 - VALIDATE ALLOCATION VALUE      * @D51IDIS 20030029
*                      FC=4 - ALLOCATION IN ERROR            * @D51IDIS 20040029
*                      FC=5 - VALIDATE CLASS      VALUE      * @D51IDIS 20050029
*                      FC=6 - HOLD A PARTITION DURING CLEANUP* @D51IDIS 20060029
*                      FC=7 - FREE A HELD PARTITION          * @D51IDIS 20070029
*         OUTPUT:                                            * @D51IDIS 20080029
*           R0, R1 - SEE ROUTINE DESCRIPTION                 * @D51IDIS 20090029
*           R15 - RETURN CODE                                * @D51IDIS 20100029
*                                                            * @D51IDIS 20110029
************************************************************** @D51IDIS 20120029
         USING DISP,R6                                         @D51IDIS 20130029
         USING TSSERV,R8                                       @D51IDIS 20140029
TSSERV   DS    0F                                              @D51IDIS 20150029
         CH    RF,TSRHFCT        VALID FUNCTION CODE ?         @D51IDIS 20160029
         BH    TSRERR24          NO, NO VALID FUNCTION         @D51IDIS 20170029
         L     R6,DISPAD         GET DISPATCHER ADDRESS        @D51IDIS 20180029
         LR    RE,RF             SAVE REGISTER                 @D51IDIS 20190029
         SLL   RE,2              MULTIPLIED BY 4               @D51IDIS 20200029
         L     RE,TSRBRTAB(RE)   LOAD ADDRESS OF SERVICE ROUTIN@D51IDIS 20210029
         BR    RE                CALL SERVICE ROUTINE          @D51IDIS 20220029
         SPACE 4                                               @D51IDIS 20230029
*------------------------------------------------------------* @D51IDIS 20240029
* TSRBRTAB - SYSTEM SERVICE ROUTINE TABLE                    * @D51IDIS 20250029
*------------------------------------------------------------* @D51IDIS 20260029
TSRBRTAB DS    0F                                              @D51IDIS 20270029
         DC    A(TSRALLOC)  - DYNAMIC PARTITION ALLOCATION   * @D51IDIS 20280029
         DC    A(TSRDEALL)  - DYNAMIC PARTITION DEALLOCATION * @D51IDIS 20290029
         DC    A(TSRACT)    - DYNAMIC PARTITION ACTIVATION   * @D51IDIS 20300029
         DC    A(TSRVALL)   - VALIDATE ALLOCATION VALUE      * @D51IDIS 20310029
         DC    A(TSRALLER)  - ALLOCATION IN ERROR            * @D51IDIS 20320029
         DC    A(TSRVCLS)   - VALIDATE CLASS      VALUE      * @D51IDIS 20330029
         DC    A(TSRHOLD)   - HOLD A PART. DURING CLEAN UP   * @D51IDIS 20340029
         DC    A(TSRFREE)   - FREE A HELD PARTITION          * @D51IDIS 20350029
TSRBRTBE EQU   *-TSRBRTAB      GET LENGTH OF TABLE             @D51IDIS 20360029
         EJECT ,                                               @D51IDIS 20370029
*------------------------------------------------------------* @D51IDIS 20380029
* TSRALLOC - DYNAMIC PARTITION ALLOCATION REQUEST              @D51IDIS 20390029
*            INPUT:                                            @D51IDIS 20400029
*              R0  - DYNAMIC CLASS TO BE CHECKED               @D51IDIS 20410029
*              R7  - RETURN ADDRESS                            @D51IDIS 20420029
*              R8  - SERVICE ROUTINE ADDRESS                   @D51IDIS 20430029
*              R15 - FUNCTION CODE                             @D51IDIS 20440029
*            OUTPUT:                                           @D51IDIS 20450029
*              R0  - SYSLOG ID                                 @D51IDIS 20460029
*              R1  - DYNAMIC CLASS PCB                         @D51IDIS 20470029
*              R2  - MASK TO GET SECOND BYTE OF SYSLOG ID      @D51IDIS 20480029
*              R15 - RETURN CODE                               @D51IDIS 20490029
*                    RC= 0 - REQUESTED VALUES RETURNED         @D51IDIS 20500029
*                    RC= 8 - SPECIFIED CLASS INVALID           @D51IDIS 20510029
*                    RC=12 - SPECIFIED CLASS DISABLED          @D51IDIS 20520029
*                    RC=16 - NO PARTITION AVAIL. WITHIN CLASS  @D51IDIS 20530029
*                    RC=20 - NO PARTITION AVAIL. WITHIN SYSTEM @D51IDIS 20540029
*------------------------------------------------------------* @D51IDIS 20550029
TSRALLOC DS    0F                                              @D51IDIS 20560029
         LR    R1,R7             SAVE RETURN REGISTER          @D51IDIS 20570029
         STC   R0,CLASSWRK       SAVE CLASS CHARACTER          @D51IDIS 20580029
         BAS   R7,TSRCHCL        LOOK FOR CLASS TABLE ENTRY    @D66ODOW 20590031
*SGLINK TSRCHCL,INPUT=(R7,R8),OUTPUT=(R4,R7)                   @D51IDIS 20600029
         B     TSRALLR8          TABLE NOT ACTIVE              @D51IDIS 20610029
         B     TSRALLR8          NOT FOUND IN TABLE            @D51IDIS 20620029
         LR    R7,R1             RESTORE RETURN REGISTER       @D51IDIS 20630029
         LA    RF,12             INDICATE CLASS DISABLED       @D51IDIS 20640029
         USING CLASSADR,R4                                     @D51IDIS 20650029
         TM    CLFLAG,CLACTIVE   CLASS ENABLED ?               @D51IDIS 20660029
         BZR   R7                NO, RETURN TO CALLER          @D51IDIS 20670029
         LA    RF,16             INDICATE NO MORE PARTITIONS   @D51IDIS 20680029
*                                ALLOWED WITHIN CLASS          @D51IDIS 20690029
         L     R1,CLAPCB         GET CLASS PCB                 @D51IDIS 20700029
         USING CPCBADR,R1                                      @D51IDIS 20710029
         CLC   CPCBCNT,CLMAXP    MAX. PARTITIONS ALLOCATED ?   @D51IDIS 20720029
         BNLR  R7                YES, RETURN TO CALLER         @D51IDIS 20730029
         DROP  R4                                              @D51IDIS 20740029
         LA    RF,20             INDICATE NO MORE PARTITIONS   @D51IDIS 20750029
*                                ALLOWED WITHIN SYSTEM         @D51IDIS 20760029
         CLC   CAPART,CSPART     MAX. PARTITIONS ALLOCATED ?   @D51IDIS 20770029
         BNLR  R7                YES, RETURN TO CALLER         @D51IDIS 20780029
         EJECT ,                                               @D51IDIS 20790029
*------------------------------------------------------------* @D51IDIS 20800029
*          - GET SYSLOG ID                                     @D51IDIS 20810029
*------------------------------------------------------------* @D51IDIS 20820029
         SLR   RF,RF             CLEAR COUNT                   @D51IDIS 20830029
         L     R2,TSRHIGHB       GET BIT STRING (FIRST BIT ON) @D51IDIS 20840029
         L     R5,CPCBCMSK       GET BIT STRING (ALL AVAIL.IDS)@D51IDIS 20850029
         BAS   R9,TSRALL00       FIND A VALID SYSLOG ID        @D66ODOW 20860031
* START OF LOOP                                                @D51IDIS 20870029
         LA    RF,1(,RF)         INCREASE COUNT                @D51IDIS 20880029
         SRL   R2,1              SHIFT BIT POSITION            @D51IDIS 20890029
TSRALL00 DS    0H                                              @D51IDIS 20900029
         LR    R4,R5             GET ORIGINAL BIT STRING       @D51IDIS 20910029
         NR    R4,R2             LOOK FOR FREE SYSLOG ID       @D51IDIS 20920029
         BZR   R9                NO, LOOP                      @D51IDIS 20930029
         XR    R5,R2             RESET BIT CORRESP TO SYSLOG ID@D51IDIS 20940029
         ST    R5,CPCBCMSK       SAVE UPDATED BIT STRING       @D51IDIS 20950029
         IC    R4,TSRSLG2(RF)    GET 2. CHARACTER              @D51IDIS 20960029
         STC   R4,CLASSWR2       SAVE IT IN WORK FIELD         @D51IDIS 20970029
         SLR   RF,RF             SET RETURN CODE               @D51IDIS 20980029
         LH    R0,CLASSWRK       RETURN SYSLOG ID IN REG. 0    @D51IDIS 20990029
         LH    R4,CAPART         GET ACTIVE PARTITION COUNT    @D51IDIS 21000029
         LA    R4,1(,R4)         INCREASE COUNT                @D51IDIS 21010029
         STH   R4,CAPART         SAVE UPDATED VALUE            @D51IDIS 21020029
         LH    R5,CACTPA         GET MAX. ACTIVE DYN.PART.S    @D51IDIS 21030029
         LA    R9,&NPART.(,R5)   ADD STATIC PARTITIONS         @D51IDIS 21040029
         SR    R4,R9             MORE THAN CURRENT MAX. COUNT ?@D51IDIS 21050029
         BNPR  R7                NO, RETURN TO CALLER          @D51IDIS 21060029
         LA    R5,1(,R5)         INCREASE COUNT                @D51IDIS 21070029
         STH   R5,CACTPA         SAVE UPDATED VALUE            @D51IDIS 21080029
         BR    R7                RETURN TO CALLER              @D51IDIS 21090029
         DROP  R1                                              @D51IDIS 21100029
         SPACE 2                                               @D51IDIS 21110029
*------------------------------------------------------------* @D51IDIS 21120029
* TSRALLR8 - DYNAMIC CLASS NOT FOUND                           @D51IDIS 21130029
*------------------------------------------------------------* @D51IDIS 21140029
TSRALLR8 DS    0F                                              @D51IDIS 21150029
         LR    R7,R1             RESTORE RETURN REGISTER       @D51IDIS 21160029
         LA    RF,8              SET RETURN CODE               @D51IDIS 21170029
         BR    R7                RETURN TO CALLER              @D51IDIS 21180029
         EJECT ,                                               @D51IDIS 21190029
*------------------------------------------------------------* @D51IDIS 21200029
* TSRALLER - DYNAMIC PARTITION ALLOCATION IN ERROR             @D51IDIS 21210029
*            WILL BE CALLED INSTEAD OF TSRDEALL,               @D51IDIS 21220029
*            IF ALLOCATION DETECTS AN ERROR                    @D51IDIS 21230029
*            INPUT:                                            @D51IDIS 21240029
*              R1  - DYNAMIC CLASS PCB                         @D51IDIS 21250029
*              R2  - MASK TO GET SECOND BYTE OF SYSLOG ID      @D51IDIS 21260029
*              R7  - RETURN ADDRESS                            @D51IDIS 21270029
*              R8  - SERVICE ROUTINE ADDRESS                   @D51IDIS 21280029
*              R15 - FUNCTION CODE                             @D51IDIS 21290029
*            OUTPUT:                                           @D51IDIS 21300029
*              R15 - RETURN CODE                               @D51IDIS 21310029
*                    RC= 0 - ALWAYS                            @D51IDIS 21320029
*------------------------------------------------------------* @D51IDIS 21330029
TSRALLER DS    0F                                              @D51IDIS 21340029
         USING CPCBADR,R1                                      @D51IDIS 21350029
         O     R2,CPCBCMSK       SET CORRESPONDING BIT         @D51IDIS 21360029
         ST    R2,CPCBCMSK       SAVE UPDATED BIT STRING       @D51IDIS 21370029
         LH    R2,CAPART         GET ACTIVE PARTITION COUNT    @D51IDIS 21380029
         BCTR  R2,0              DECREASE COUNT                @D51IDIS 21390029
         STH   R2,CAPART         SAVE UPDATED VALUE            @D51IDIS 21400029
         SLR   RF,RF             SET RETURN CODE 0             @D51IDIS 21410029
         BR    R7                RETURN TO CALLER              @D51IDIS 21420029
         DROP  R1                                              @D51IDIS 21430029
         EJECT ,                                               @D51IDIS 21440029
*------------------------------------------------------------* @D51IDIS 21450029
* TSRDEALL - DYNAMIC PARTITION DEALLOCATION REQUEST            @D51IDIS 21460029
*            - DEQUEUE PCB FROM PCB CHAIN                      @D51IDIS 21470029
*            - UPDATE CLASS PCB                                @D51IDIS 21480029
*            INPUT:                                            @D51IDIS 21490029
*              R0  - PIK                                       @D51IDIS 21500029
*              R7  - RETURN ADDRESS                            @D51IDIS 21510029
*              R8  - SERVICE ROUTINE ADDRESS                   @D51IDIS 21520029
*              R15 - FUNCTION CODE                             @D51IDIS 21530029
*            OUTPUT:                                           @D51IDIS 21540029
*              R15 - RETURN CODE                               @D51IDIS 21550029
*                    RC= 0 - SUCCESSFULLY COMPLETED            @D51IDIS 21560029
*                    RC= 8 - SPECIFIED PIK INVALID             @D51IDIS 21570029
*------------------------------------------------------------* @D51IDIS 21580029
TSRDEALL DS    0F                                              @D51IDIS 21590029
         LA    RF,8              SET RETURN CODE               @D51IDIS 21600029
         BAS   R4,TSRGPCB        GET THE PCB ADDRESS           @D66ODOW 21610031
*SGLINK TSRGPCB,INPUT=(R0,R4,R8),OUTPUT=(R4,R5),WORK=(R0)      @D51IDIS 21620029
         B     0(,R7)        +0  INVALID PIK OR PCB NOT AVAIL. @D51IDIS 21630029
*                            +4  PCB ADDRESS RETURNED          @D51IDIS 21640029
         USING PCBADR,R5                                       @D51IDIS 21650029
         TM    PCEFLAG,PCEDYNP   DYNAMIC PARTITION ?           @D51IDIS 21660029
         BZR   R7                NO,  INVALID PIK              @D51IDIS 21670029
         L     R4,PCBACPCB       GET CLASS PCB                 @D51IDIS 21680029
         USING CPCBADR,R4                                      @D51IDIS 21690029
         L     R2,PCBCMASK       GET SYSLOG ID POSITION        @D51IDIS 21700029
         O     R2,CPCBCMSK       UPDATE BIT STRING             @D51IDIS 21710029
         ST    R2,CPCBCMSK       SAVE UPDATED BIT STRING       @D51IDIS 21720029
         LH    R2,CPCBCNT        GET COUNT OF PART.S WITHIN CL.@D51IDIS 21730029
         BCTR  R2,0              DECREASE COUNT                @D51IDIS 21740029
         STH   R2,CPCBCNT        SAVE UPDATED VALUE            @D51IDIS 21750029
         EJECT ,                                               @D61RDIS 21760029
*------------------------------------------------------------*          21770029
*          - CHECK NUMBER OF PARTITIONS WITHIN CLASS                    21780029
*------------------------------------------------------------*          21790029
         SLR   RD,RD             INDICATE CLASS BAL. WANTED    @D51IDIS 21800029
         CH    R2,H1             ONLY ONE PARTITION ACTIVE ?   @D51IDIS 21810029
         BE    TSRDEALT          YES, RESET CPCB FIELDS        @D51IDIS 21820029
         BL    TSRDEAL0          NO MORE PARTITION WITHIN CLASS@D51IDIS 21830029
*------------------------------------------------------------* @D51IDIS 21840029
* TSRDEALR - DEQUEUE PCB FROM CLASS PCB CHAIN                  @D51IDIS 21850029
*------------------------------------------------------------* @D51IDIS 21860029
TSRDEALR DS    0H                                              @D51IDIS 21870029
         ICM   R3,15,PCBAPPCB    ADDR. OF PREV. PCB = FIRST ?  @D51IDIS 21880029
         BZ    TSRDEAL1          YES, UPDATE CPCB FIELD        @D51IDIS 21890029
         MVC   PCBANPCB-PCBADR(4,R3),PCBANPCB UPDATE PREV. PCB @D51IDIS 21900029
TSRDEAL2 DS    0H                                              @D51IDIS 21910029
         ICM   R2,15,PCBANPCB    ADDR. OF NEXT PCB = LAST ?    @D51IDIS 21920029
         BZ    TSRDEA01          YES, DO NOT UPDATE NEXT PCB   @D51IDIS 21930029
         MVC   PCBAPPCB-PCBADR(4,R2),PCBAPPCB UPDATE NEXT PCB  @D51IDIS 21940029
*------------------------------------------------------------* @D51IDIS 21950029
* TSRDEA01 - REMOVE PCB FROM CURRENT CLASS PRIORITY TABLE      @D51IDIS 21960029
*------------------------------------------------------------* @D51IDIS 21970029
TSRDEA01 DS    0H                                              @D51IDIS 21980029
         SLR   R1,R1             CLEAR REGISTER                @D51IDIS 21990029
         LR    R2,R1             CLEAR REGISTER                @D51IDIS 22000029
         TRT   PCBPMASK,PREXTTAB GET OFFSET INTO PRTY TABLE    @D51IDIS 22010029
         LA    R0,PCBPMASK       DETERMINE ...                 @D51IDIS 22020029
         SR    R1,R0             ... DISPLACEMENT ...          @D51IDIS 22030029
         SLL   R1,5              ... TO PARTITIONS      ...    @D51IDIS 22040029
         LA    R2,0(R1,R2)       ...      PCB POINTER   ...    @D51IDIS 22050029
         LA    R3,CPCBCBPT-4(R2) GET POINTER TO PCB ADDRESS    @D51IDIS 22060029
         C     R3,CPCBPLOW       LOWEST PRTY WITHIN CLASS ?    @D51IDIS 22070029
         BE    TSRDEAL4          YES, NO NEED TO CHANGE TABLE  @D51IDIS 22080029
         LR    R2,R3             SAVE PCB LOCATION             @D51IDIS 22090029
         L     R3,CPCBPLOW       GET ADDRESS OF ...            @D51IDIS 22100029
         L     R1,0(,R3)         ... LOWEST PCB AND STORE IT   @D51IDIS 22110029
         ST    R1,0(,R2)         ... TO REMOVED PCB'S POSITION @D51IDIS 22120029
         L     R2,PCBPMASK       UPDATE PRTY ...               @D51IDIS 22130029
         ST    R2,PCBPMASK-PCBADR(,R1)    ... OF INSERTED PCB  @D51IDIS 22140029
         DROP  R5                                              @D51IDIS 22150029
         EJECT ,                                               @D51IDIS 22160029
*------------------------------------------------------------* @D51IDIS 22170029
* TSRDEAL4 - PCB HAS LOWEST PRIORITY WITHIN CLASS              @D51IDIS 22180029
*------------------------------------------------------------* @D51IDIS 22190029
TSRDEAL4 DS    0H                                              @D51IDIS 22200029
         S     R3,F4             SET NEW LOWEST PRIORITY ...   @D51IDIS 22210029
         ST    R3,CPCBPLOW       ... AND STORE IT              @D51IDIS 22220029
         LTR   RD,RD             RESET BAL. IN FIRST PART.?    @D51IDIS 22230029
         BZ    TSRDEAL3          NO, DECREASE ACT.COUNT        @D51IDIS 22240029
         L     R3,0(,R3)         GET PCB ADDRESS OF LAST PCB   @D61RDIS 22250029
         USING PCBADR,R3                                       @D61RDIS 22260029
         NI    PCBFLAG,XFF-BALANCED RESET PART. BALANCING      @D51IDIS 22270029
         DROP  R3                                              @D61RDIS 22280029
*------------------------------------------------------------* @D51IDIS 22290029
* TSRDEAL3 - DECREASE PARTITION COUNT                          @D51IDIS 22300029
*------------------------------------------------------------* @D51IDIS 22310029
TSRDEAL3 DS    0H                                              @D51IDIS 22320029
         LH    R2,CAPART         GET ACTIVE PARTITION COUNT    @D51IDIS 22330029
         BCTR  R2,0              DECREASE COUNT                @D51IDIS 22340029
         STH   R2,CAPART         SAVE UPDATED VALUE            @D51IDIS 22350029
         SLR   RF,RF             SET RETURN CODE 0             @D51IDIS 22360029
         USING PCBADR,R5                                       @D61RDIS 22370029
*        DISPMAC FUNC=DEALLOC,INP1=R5 DEALLOCATION REQUEST     @D61RDIS 22380029
         DISPMAC FUNC=DEALLOC,INP1=R5 DEALLOCATION REQUEST     @D61RDIS 22390029
         BR    R7                RETURN TO CALLER              @D51IDIS 22400029
         DROP  R5                                              @D61RDIS 22410029
         EJECT ,                                               @KX40387 22420029
*------------------------------------------------------------* @D51IDIS 22430029
* TSRDEAL0 - NO MORE PARTITIONS WITHIN CLASS                   @D51IDIS 22440029
*            RESET CPCB FIELDS                                 @D51IDIS 22450029
*------------------------------------------------------------* @D51IDIS 22460029
TSRDEAL0 DS    0H                                              @D51IDIS 22470029
         ST    R2,CPCBFPCB       CLEAR PCB FORWARD POINTER     @D51IDIS 22480029
         ST    R2,CPCBRUNT       CLEAR RUNTIME VALUE           @D51IDIS 22490029
         ST    R2,CPCBTIME       CLEAR INITIAL VALUE FOR BALANC@DY41852 22500029
         ST    R2,CPCBPBAL       CLEAR BASIC VALUE FOR BALANC  @DY41852 22510029
         ST    R2,CPCBPLOW       CLEAR LOWEST PRTY PCB         @D51IDIS 22520029
         ST    R2,CPCBCBPT       CLEAR PCB ADDRESS TABLE ENTRY @D51IDIS 22530029
         TM    CPCBFLAG,SUPPRPFH IS CLASS DEACTIVATED ?        @D51IDIS 22540029
         BO    TSRDEALC          YES, DECREASE DEACT. COUNT    @KX40387 22550029
         LH    R2,IJBAPNO        DECREASE ...                  @KX40387 22560029
         BCTR  R2,0                   ... STATIC/CLASS ...     @KX40387 22570029
         STH   R2,IJBAPNO                          ... COUNT   @KX40387 22580029
         B     TSRDEAL3          RETURN TO MAIN PATH           @KX40387 22590029
         SPACE 2                                               @D51IDIS 22600029
*------------------------------------------------------------*          22610029
* TSRDEALC - DECRASE DEACT. STATIC PARTITION / DYNAMIC CLASS COUNT      22620029
*------------------------------------------------------------*          22630029
TSRDEALC DS    0H                                              @KX40387 22640029
         NI    CPCBFLAG,XFF-SUPPRPFH RESET DEACT INDICATION    @D51IDIS 22650029
         IC    R2,NDEACTP        DECREMENT NUMBER ...          @D51IDIS 22660029
         BCTR  R2,0              ... OF DEACTIVATED ...        @D51IDIS 22670029
         STC   R2,NDEACTP        ... PARTITIONS/CLASSES        @D51IDIS 22680029
         B     TSRDEAL3          RETURN TO MAIN PATH           @D51IDIS 22690029
         SPACE 2                                               @D51IDIS 22700029
*------------------------------------------------------------* @D51IDIS 22710029
* TSRDEAL1 - PCB TO BE DEQUEUED IS FIRST IN CHAIN              @D51IDIS 22720029
*------------------------------------------------------------* @D51IDIS 22730029
         USING PCBADR,R5                                       @D51IDIS 22740029
TSRDEAL1 DS    0H                                              @D51IDIS 22750029
         MVC   CPCBFPCB,PCBANPCB DEQUEUE PCB                   @D51IDIS 22760029
         B     TSRDEAL2          RETURN TO MAIN PATH           @D51IDIS 22770029
         DROP  R4                                              @D51IDIS 22780029
         DROP  R5                                              @D51IDIS 22790029
         EJECT ,                                               @D51IDIS 22800029
*------------------------------------------------------------* @D51IDIS 22810029
* TSRDEALT - DECREASE ACTIVE BAL. COUNT                        @D51IDIS 22820029
*            CHECK, IF PBAL TO BE RESET                        @D51IDIS 22830029
*            OUTPUT:                                           @D51IDIS 22840029
*              RD = NOT ZERO, INDICATES RESET BALANCED IN      @D51IDIS 22850029
*                   FIRST PARTITION                            @D51IDIS 22860029
*------------------------------------------------------------* @D51IDIS 22870029
TSRDEALT DS    0H                                              @D51IDIS 22880029
         LH    RD,TSRCLACT       GET COUNT OF BAL. CLASSES     @D51IDIS 22890029
         BCTR  RD,0              DECREASE COUNT                @D51IDIS 22900029
         STH   RD,TSRCLACT       STORE COUNT                   @D51IDIS 22910029
         LTR   RD,RD             MORE BAL. CLASSES ACTIVE ?    @D51IDIS 22920029
         BP    TSRDEALR          YES, RETURN TO MAIN PATH      @D51IDIS 22930029
         L     RD,AEXTCPUT       GET TIMER ROUTINE BASE        @D51IDIS 22940029
         USING EXTCPUT,RD                                      @D51IDIS 22950029
         B     TSRDEALR          RETURN TO MAIN PATH           @D51IDIS 22960029
         DROP  RD                                              @D51IDIS 22970029
         EJECT ,                                               @D51IDIS 22980029
*------------------------------------------------------------* @D51IDIS 22990029
* TSRACT   - DYNAMIC PARTITION ACTIVATION REQUEST              @D51IDIS 23000029
*            - ENQUEUE PCB INTO PCB CHAIN                      @D51IDIS 23010029
*            - UPDATE PART.BALANCING FIELDS                    @D51IDIS 23020029
*            - UPDATE CLASS PCB                                @D51IDIS 23030029
*            INPUT:                                            @D51IDIS 23040029
*              R1  - DYNAMIC PARTITION PCB ADDRESS             @D51IDIS 23050029
*              R7  - RETURN ADDRESS                            @D51IDIS 23060029
*              R8  - SERVICE ROUTINE ADDRESS                   @D51IDIS 23070029
*              RF  - FUNCTION CODE                             @D51IDIS 23080029
*            OUTPUT:                                           @D51IDIS 23090029
*              NONE                                            @D51IDIS 23100029
*------------------------------------------------------------* @D51IDIS 23110029
TSRACT   DS    0F                                              @D51IDIS 23120029
         USING PCBADR,R1                                       @D51IDIS 23130029
         L     R4,TSRACNT        GET AND ...                   @KD40376 23140029
         A     R4,F1             ... INCREASE ALLOCATION COUNT @KD40376 23150029
         ST    R4,TSRACNT        SAVE UPDATED COUNT            @KD40376 23160029
         ST    R4,PCBTOKEN       STORE IT INTO PCB             @KD40376 23170029
         L     R4,PCBACPCB       GET CLASS PCB                 @D51IDIS 23180029
         USING CPCBADR,R4                                      @D51IDIS 23190029
         L     R2,CPCBFPCB       GET PCB FORWARD POINTER       @D51IDIS 23200029
         LTR   R2,R2             CHAIN EMPTY                   @D51IDIS 23210029
         BZ    TSRACT0           YES, QUEUE FIRST ENTRY        @D51IDIS 23220029
         ST    R1,PCBAPPCB-PCBADR(,R2) UPDATE FORMER FIRST ENT.@D51IDIS 23230029
         L     R3,CPCBPLOW       GET ADDRESS OF LOWEST PCB     @D51IDIS 23240029
         L     R2,0(,R3)         GET PCB ADDRESS               @D51IDIS 23250029
         L     R5,PCBPMASK-PCBADR(,R2) GET PCB PRTY MASK       @D51IDIS 23260029
         SRL   R5,1              CALC. NEW LOWEST PRTY MASK ...@D51IDIS 23270029
         LA    R3,4(,R3)         POINT TO NEW LOWEST PCB SLOT  @D51IDIS 23280029
         ST    R1,PCBJAPTR       SET TIME ACCOUNTING POINTER   @D51IDIS 23290029
         OI    PCBFLAG,BALANCED  SET BALANCING INDICATION      @D51IDIS 23300029
         LH    R9,CPCBCNT        GET COUNT OF PART.S WITHIN CL.@D51IDIS 23310029
         CH    R9,H1             ONE PARTITION ACTIVE ?        @D51IDIS 23320029
         BE    TSRACTT           YES, CHECK IF BAL. ACTIVE     @D51IDIS 23330029
*------------------------------------------------------------* @D51IDIS 23340029
* TSRACT1  - UPDATE CLASS PCB FIELDS                           @D51IDIS 23350029
*------------------------------------------------------------* @D51IDIS 23360029
TSRACT1  DS    0H                                              @D51IDIS 23370029
         LA    R9,1(,R9)         INCREASE COUNT                @D51IDIS 23380029
         STH   R9,CPCBCNT        SAVE UPDATED VALUE            @D51IDIS 23390029
         ST    R1,0(,R3)         ADD PCB ADDR. TO PRTY TABLE   @D51IDIS 23400029
         ST    R3,CPCBPLOW       SET LOWEST PRTY POINTER       @D51IDIS 23410029
         EJECT ,                                                        23420029
*------------------------------------------------------------* @D51IDIS 23430029
*          - UPDATE PARTITION'S PCB FIELDS                     @D51IDIS 23440029
*------------------------------------------------------------* @D51IDIS 23450029
         MVC   PCBANPCB,CPCBFPCB ENQUEUE PCB ...               @D51IDIS 23460029
         ST    R1,CPCBFPCB               ... INTO CHAIN        @D51IDIS 23470029
         ST    R5,PCBPMASK       STORE PRTY MASK  INTO PCB     @D51IDIS 23480029
         MVC   PCBID,CPCBID      MOVE CLASS ID                 @D51IDIS 23490029
*        DISPMAC FUNC=ALLOC,INP1=R1 PROCESS ALLOCATION REQUEST @D61RDIS 23500029
         DISPMAC FUNC=ALLOC,INP1=R1 PROCESS ALLOCATION REQUEST @D61RDIS 23510029
         BR    R7                RETURN TO CALLER              @D51IDIS 23520029
         SPACE 2                                               @KD40376 23530029
TSRACNT  DC    F'0'              ALLOCATION COUNT              @KD40376 23540029
         EJECT ,                                               @D51IDIS 23550029
*------------------------------------------------------------* @D51IDIS 23560029
* TSRACT0  - PROCESS FIRST PCB ENTRY IN CHAIN                  @D51IDIS 23570029
*------------------------------------------------------------* @D51IDIS 23580029
TSRACT0  DS    0H                                              @D51IDIS 23590029
         LH    R9,IJBAPNO        INCREASE ...                  @D51IDIS 23600029
         LA    R9,1(,R9)              ... STATIC/CLASS ...     @D51IDIS 23610029
         STH   R9,IJBAPNO                          ... COUNT   @D51IDIS 23620029
         SLR   R9,R9             CLEAR PARTITION COUNTER       @D51IDIS 23630029
         LA    R3,CPCBCBPT       POINT TO FIRST ADDR.TAB.ENTRY @D51IDIS 23640029
         L     R5,TSRHIGHB       GET HIGHEST PRTY MASK         @D51IDIS 23650029
         ST    R1,PCBJAPTR       SET TIME ACCOUNTING POINTER   @D51IDIS 23660029
         B     TSRACT1           RETURN TO MAIN PATH           @D51IDIS 23670029
         DROP  R1                                              @D51IDIS 23680029
         SPACE 2                                               @D51IDIS 23690029
*------------------------------------------------------------* @D51IDIS 23700029
* TSRACTT  - CHECK, IF PARTITION BALANCING ALREADY ACTIVE      @D51IDIS 23710029
*            INPUT:                                            @D51IDIS 23720029
*              R2 = PCB ADDRESS OF FIRST PCB IN CLASS          @D51IDIS 23730029
*------------------------------------------------------------* @D51IDIS 23740029
TSRACTT  DS    0H                                              @D51IDIS 23750029
         L     RD,AEXTCPUT       GET TIMER ROUTINE BASE        @D51IDIS 23760029
         USING EXTCPUT,RD                                      @D51IDIS 23770029
         MVC   CPCBTSLI,MSECS    SET INITIAL TIME SLICE VALUE  @D51IDIS 23780029
         DROP  RD                                              @D51IDIS 23790029
         LH    RD,TSRCLACT       GET COUNT OF BAL. CLASSES     @D51IDIS 23800029
         LA    RD,1(,RD)         INCREASE COUNT                @D51IDIS 23810029
         STH   RD,TSRCLACT       STORE COUNT                   @D51IDIS 23820029
         USING PCBADR,R2                                       @D51IDIS 23830029
         OI    PCBFLAG,BALANCED  BALANCE FIRST PARTITION       @D51IDIS 23840029
         MVC   PBALTIME,RUNTIME  INITIALZE BAL. VALUE          @D51IDIS 23850029
         MVC   CPCBPBAL(4),CPCBRUNT INITIALIZE BAL. TIME COUNT @D51IDIS 23860029
         B     TSRACT1           RETURN TO MAIN PATH           @D51IDIS 23870029
         DROP  R2                                              @D51IDIS 23880029
         DROP  R4                                              @D51IDIS 23890029
         EJECT ,                                               @D51IDIS 23900029
*------------------------------------------------------------* @D51IDIS 23910029
* TSRVALL  - VALIDATE ALLOCATION, SIZE AND DYNAMIC GETVIS      @D51IDIS 23920029
*            SPACE VALUE                                       @D51IDIS 23930029
*            INPUT:                                            @D51IDIS 23940029
*              R0  - PRIVATE SPACE ALLOCATION VALUE IN MBYTE   @D51IDIS 23950029
*              R1  - SIZE       VALUE IN KBYTE                 @D51IDIS 23960029
*              R2  - DYNAMIC SPACE GETVIS SIZE VALUE IN KBYTE  @D51IDIS 23970029
*              R7  - RETURN ADDRESS                            @D51IDIS 23980029
*              R8  - SERVICE ROUTINE ADDRESS                   @D51IDIS 23990029
*              R15 - FUNCTION CODE                             @D51IDIS 24000029
*            OUTPUT:                                           @D51IDIS 24010029
*              R0  - ROUNDED PART. ALLOCATION VALUE IN KBYTE   @D51IDIS 24020029
*              R1  - ROUNDED SIZE       VALUE IN KBYTE         @D51IDIS 24030029
*              R15 - RETURN INFORMATION IN LOW ORDER BYTE      @D51IDIS 24040029
*                    RC= 0 - REQUESTED VALUE RETURNED          @D51IDIS 24050029
*                    X'80' - ALLOCATION VALUE INVALID          @D51IDIS 24060029
*                    X'40' - SIZE VALUE INVALID                @D51IDIS 24070029
*                    X'20' - DYNAMIC GETVIS SIZE INVALID       @D51IDIS 24080029
*            WORK: DO NOT DESTROY REGISTER 13                  @D51IDIS 24090029
*------------------------------------------------------------* @D51IDIS 24100029
TSRVALL  DS    0F                                              @D51IDIS 24110029
*------------------------------------------------------------* @D51IDIS 24120029
*   MAX. DYN.GETVIS < DYN.GETVIS < MIN. DYN.GETVIS --> ERROR   @D51IDIS 24130029
*------------------------------------------------------------* @D51IDIS 24140029
         MVI   TSRVAFLG,0        CLEAR INVALID INDICATOR       @D51IDIS 24150029
         SLL   R0,10             VALUE IN K BYTE               @D51IDIS 24160029
         SLL   R0,10             VALUE IN BYTE                 @D51IDIS 24170029
         SLL   R1,10             VALUE TIMES 1024              @D51IDIS 24180029
         SLL   R2,10             VALUE TIMES 1024              @D51IDIS 24190029
         L     R3,IJBPMCOM       GET ADDR. TO PAGE MGMT AREA   @D51IDIS 24200029
         USING PMCOM,R3                                        @D51IDIS 24210029
         A     R1,PMDISMSK       ALIGN TO ...                  @D51IDIS 24220029
         N     R1,PMPAGMSK          ... PAGE BOUNDARY          @D51IDIS 24230029
         A     R2,PMDISMSK       ALIGN TO ...                  @D51IDIS 24240029
         N     R2,PMPAGMSK          ... PAGE BOUNDARY          @D51IDIS 24250029
         L     R3,IJBSMCOM       GET SMCOM ADDRESS             @D51IDIS 24260029
         USING SMCOM,R3                                        @D51IDIS 24270029
         LR    R4,R0             SAVE PRIV. SPACE ALLOC        @D51IDIS 24280029
         LR    RF,R2             GET DYN. GETVIS SIZE          @D51IDIS 24290029
         SRL   RF,10             CALC VALUE IN K               @D51IDIS 24300029
         CH    RF,CDSGL          DYN.GETVIS BELOW MINIMUM ?    @D51IDIS 24310029
         BL    TSRVIDGL          YES, INDICATE VALUE INVALID   @D51IDIS 24320029
         CH    RF,CDSGH          DYN.GETVIS GREATER MAXIMUM ?  @D51IDIS 24330029
         BH    TSRVIDGH          YES, INDICATE VALUE INVALID   @D51IDIS 24340029
         EJECT ,                                               @D51IDIS 24350029
*------------------------------------------------------------* @D51IDIS 24360029
*   SMCPRPND < SMCPRPBG + DYN.GETVIS + ALLOC - 1  --> ERROR    @D51IDIS 24370029
*------------------------------------------------------------* @D51IDIS 24380029
TSRVI0GV DS    0H                                              @D51IDIS 24390029
         SR    R0,R2             CALC. PARTITION ALLOC. VALUE  @D51IDIS 24400029
         BNP   TSRVIALS          NOT POS. --> INVALID          @D51IDIS 24410029
         L     RF,SMCPRPND       GET END OF PRIV. SPACE        @D51IDIS 24420029
         S     RF,SMCPRPBG       CALCULATE MAX. PRIVATE        @D51IDIS 24430029
         A     RF,F1                   ... SPACE               @D52VDIS 24440029
         CR    R4,RF             ALLOCATION FITS INTO AREA ?   @D51IDIS 24450029
         BNH   TSRVCSIZ          YES, CHECK SIZE VALUE         @D51IDIS 24460029
         LR    R0,RF             GET MAX. PRIV.SPACE ALLOC     @D51IDIS 24470029
         SR    R0,R2             USE MAX. PART. ALLOC. ...     @D51IDIS 24480029
*                                    ... FOR SIZE VALIDATION   @D51IDIS 24490029
         OI    TSRVAFLG,TSRVAALL INDICATE ALLOCATION ERROR     @D51IDIS 24500029
TSRVCSIZ DS    0H                                              @D51IDIS 24510029
         SRL   R0,10             CALC VALUE IN K               @D51IDIS 24520029
         SRL   R1,10             CALC VALUE IN K               @D51IDIS 24530029
*------------------------------------------------------------* @D51IDIS 24540029
*   SMINPVSZ > SIZE  --> ERROR                                 @D51IDIS 24550029
*------------------------------------------------------------* @D51IDIS 24560029
         CH    R1,SMINPVSZ       SIZE BELOW MINIMUM ?          @D51IDIS 24570029
         BNL   TSRVCALL          NO, CHECK ALLOC VALUE         @D51IDIS 24580029
         LH    R1,SMINPVSZ       USE MIN SIZE VALUE            @D51IDIS 24590029
         OI    TSRVAFLG,TSRVASIZ INDICATE SIZE ERROR           @D51IDIS 24600029
*------------------------------------------------------------* @D51IDIS 24610029
*   SMINPART > ALLOC --> ERROR                                 @D51IDIS 24620029
*------------------------------------------------------------* @D51IDIS 24630029
TSRVCALL DS    0H                                              @D51IDIS 24640029
         CH    R0,SMINPART       ALLOCATION BELOW MINIMUM ?    @D51IDIS 24650029
         BL    TSRVIALS          YES, INDICATE ERROR           @D51IDIS 24660029
         EJECT ,                                               @D51IDIS 24670029
*------------------------------------------------------------* @D51IDIS 24680029
*   SMINPVGV > ALLOC - SIZE  --> ERROR                         @D51IDIS 24690029
*------------------------------------------------------------* @D51IDIS 24700029
TSRVCALS DS    0H                                              @D51IDIS 24710029
         LR    R4,R0             GET ALLOCATION VALUE          @D52VDIS 24720029
         SR    R4,R1                 - SIZE                    @D52VDIS 24730029
         CH    R4,SMINPVGV       BELOW MINIMUM GETVIS ?        @D52VDIS 24740029
         BNL   TSRVCS24          NO, IF SIZE FITS IN RMODE 24  @D52VDIS 24750029
TSRVIALS DS    0H                                              @D51IDIS 24760029
         OI    TSRVAFLG,TSRVAALL+TSRVASIZ INDICATE INVALID     @D51IDIS 24770029
*------------------------------------------------------------* @D51IDIS 24780029
* TSRVSRET - SET RETURN INFORMATION                            @D51IDIS 24790029
*------------------------------------------------------------* @D51IDIS 24800029
TSRVSRET DS    0H                                              @D51IDIS 24810029
         SLR   RF,RF             RETURN INVALID INDICATIONS ...@D51IDIS 24820029
         IC    RF,TSRVAFLG         ... IF ANY                  @D51IDIS 24830029
         BR    R7                RETURN TO CALLER              @D51IDIS 24840029
         SPACE 2                                               @D51IDIS 24850029
*------------------------------------------------------------*          24860029
*   16 MB <  SMCPRPBG + SIZE + SMINPVGV + DYN.GETVIS --> ERROR          24870029
*------------------------------------------------------------*          24880029
TSRVCS24 DS    0H                                              @D52VDIS 24890029
         TM    TSRVAFLG,TSRVASIZ SIZE ALREADY INVALID ?        @D52VDIS 24900029
         BO    TSRVSRET          YES, SET RETURN INFORMATION   @D52VDIS 24910029
         L     R4,SMCPRPBG       GET PRIVATE SPACE BEGIN ADDR. @D52VDIS 24920029
         SRL   R4,10             IN K BYTE                     @D52VDIS 24930029
         AR    R4,R1             + SPECIFIED SIZE              @D52VDIS 24940029
         AH    R4,SMINPVGV       + MINIMUM GETVIS SIZE         @D52VDIS 24950029
         SRL   R2,10             + DYNAMIC SPACE GETVIS ...    @D52VDIS 24960029
         AR    R4,R2                    ... SIZE IN K BYTES    @D52VDIS 24970029
         S     R4,TSR16MB        - 16 MB <= 0 ?                @D52VDIS 24980029
         BNP   TSRVSRET          YES, SET RETURN INFORMATION   @D52VDIS 24990029
         OI    TSRVAFLG,TSRVASIZ INDICATE INVALID              @D52VDIS 25000029
         B     TSRVSRET          SET RETURN INFORMATION        @D52VDIS 25010029
         SPACE 2                                               @D52VDIS 25020029
TSR16MB  DC    A(16*1024)        16 MB = 16386 K BYTE          @D52VDIS 25030029
         SPACE 2                                               @D52VDIS 25040029
         DROP  R3                                              @D51IDIS 25050029
         EJECT ,                                               @D52VDIS 25060029
*------------------------------------------------------------* @D51IDIS 25070029
* TSRVIDGV - DYNAMIC SPACE GETVIS VALUE IN ERROR               @D51IDIS 25080029
*------------------------------------------------------------* @D51IDIS 25090029
TSRVIDGH DS    0H                                              @D51IDIS 25100029
         LH    R2,CDSGH          USE MAX DYN.GETVIS SIZE       @D51IDIS 25110029
         B     TSRVIDG0          CALC. VALUE IN BYTES          @D51IDIS 25120029
         SPACE 2                                               @D51IDIS 25130029
TSRVIDGL DS    0H                                              @D51IDIS 25140029
         LH    R2,CDSGL          USE MIN DYN. GETVIS SIZE      @D51IDIS 25150029
TSRVIDG0 DS    0H                                              @D51IDIS 25160029
         SLL   R2,10             CALC VALUE IN BYTE            @D51IDIS 25170029
         OI    TSRVAFLG,TSRVADGS INDICATE DYN.SPACE GETVIS ERR.@D51IDIS 25180029
         B     TSRVI0GV          YES, CHECK SIZE VALUE         @D51IDIS 25190029
         SPACE 2                                               @D51IDIS 25200029
*------------------------------------------------------------* @D51IDIS 25210029
* TSRVAFLG - INFORMATION TO BE RETURNED TO CALLER              @D51IDIS 25220029
*------------------------------------------------------------* @D51IDIS 25230029
TSRVAFLG DC    X'00'            VALIDATION INFORMATION         @D51IDIS 25240029
TSRVAALL EQU   X'80'            ALLOCATION VALUE INVALID       @D51IDIS 25250029
TSRVASIZ EQU   X'40'            SIZE VALUE INVALID             @D51IDIS 25260029
TSRVADGS EQU   X'20'            DYNAMIC SPACE GETVIS SIZE INVAL@D51IDIS 25270029
         EJECT ,                                               @D51IDIS 25280029
*------------------------------------------------------------* @D51IDIS 25290029
* TSRVCLS  - VALIDATE DYNAMIC CLASS                            @D51IDIS 25300029
*            INPUT:                                            @D51IDIS 25310029
*              R0  - VALUE TO BE CHECKED                       @D51IDIS 25320029
*              R7  - RETURN ADDRESS                            @D51IDIS 25330029
*              R8  - SERVICE ROUTINE ADDRESS                   @D51IDIS 25340029
*              R15 - FUNCTION CODE                             @D51IDIS 25350029
*            OUTPUT:                                           @D51IDIS 25360029
*              R15 - RETURN CODE                               @D51IDIS 25370029
*                    RC= 0 - SPECIFIED DYNAMIC CLASS IS VALID  @D51IDIS 25380029
*                    RC= 8 - SPECIFIED DYNAMIC CLASS IS INVALID@D51IDIS 25390029
*            WORK: DO NOT DESTROY REGISTER 13                  @D51IDIS 25400029
*------------------------------------------------------------* @D51IDIS 25410029
*SGLINK TSRVCLS,S,INPUT=(R0,R7,R8),OUTPUT=(RF),WORK=(R4)       @D51IDIS 25420029
TSRVCLS  DS    0F                                              @D51IDIS 25430029
         SLR   RF,RF             SET RETURN CODE ZERO          @D51IDIS 25440029
         STC   R0,CLASSWRK       SAVE CLASS CHARACTER          @D51IDIS 25450029
         LA    R4,CLASSDEE       GET END + 1 OF TABLE          @D51IDIS 25460029
TSRVCL0  DS    0H                                              @D51IDIS 25470029
         BCTR  R4,0               ... MINUS ONE                @D51IDIS 25480029
         CLC   0(1,R4),CLASSWRK  CLASS FOUND ?                 @D51IDIS 25490029
         BER   R7                YES, RETURN TO CALLER         @D51IDIS 25500029
         C     R4,ACLASSDF       ALL CLASSES CHECKED ?         @D51IDIS 25510029
         BH    TSRVCL0           NO, LOOP                      @D51IDIS 25520029
         LA    RF,8              SET RETURN CODE               @D51IDIS 25530029
         BR    R7                RETURN TO CALLER              @D51IDIS 25540029
         SPACE 4                                               @D51IDIS 25550029
*------------------------------------------------------------* @D51IDIS 25560029
* TSRERR24 - RETURN CODE ROUTINE                               @D51IDIS 25570029
*------------------------------------------------------------* @D51IDIS 25580029
TSRERR24 DS    0F                IJBDCTL NOT IN SVA            @D51IDIS 25590029
         LA    RF,24             GET RETURN CODE               @D51IDIS 25600029
         BR    R7                RETURN TO CALLER              @D51IDIS 25610029
         DROP  R6                                              @D51IDIS 25620029
         EJECT ,                                               @D51IDIS 25630029
*------------------------------------------------------------* @D51IDIS 25640029
* TSRCHCL  - LOOK FOR CLASS IN DYNAMIC CLASS TABLE             @D51IDIS 25650029
*            INPUT:                                            @D51IDIS 25660029
*              R7  - RETURN ADDRESS                            @D51IDIS 25670029
*              R8  - SERVICE ROUTINES' BASE ADDRESS            @D51IDIS 25680029
*            OUTPUT:                                           @D51IDIS 25690029
*              R4  - ADDRESS OF CLASS TABLE ENTRY, WHEN FOUND  @D51IDIS 25700029
*              R7  - RETURN ADDRESS                            @D51IDIS 25710029
*                    + 0 - NO CLASS TABLE AVAILABLE            @D51IDIS 25720029
*                    + 4 - CLASS NOT IN CLASS TABLE            @D51IDIS 25730029
*                    + 8 - CLASS FOUND IN CLASS TABLE          @D51IDIS 25740029
*------------------------------------------------------------* @D51IDIS 25750029
*SGLINK TSRCHCL,S,INPUT=(R7,R8),OUTPUT=(R4,R7)                 @D51IDIS 25760029
TSRCHCL  DS    0F                                              @D51IDIS 25770029
         L     R4,IJBCLTAB       GET CLASS TABLE ADDRESS       @D51IDIS 25780029
         LTR   R4,R4             CLASS TABLE AVAILABLE ?       @D51IDIS 25790029
         BZR   R7                NO, RETURN                    @D51IDIS 25800029
         USING CLASSADR,R4                                     @D51IDIS 25810029
TSRCHCLL DS    0H                                              @D51IDIS 25820029
         CLC   CLCLASS,CLASSWRK  CLASS FOUND IN TABLE ?        @D51IDIS 25830029
         BE    8(,R7)            YES, RETURN TO CALLER         @D51IDIS 25840029
         TM    CLFLAG,CLEOTAB    LAST ENTRY IN TABLE ?         @D51IDIS 25850029
         LA    R4,CLASSLNG(,R4)          PROCESS NEXT ENTRY    @D51IDIS 25860029
         BZ    TSRCHCLL          NO, LOOP                      @D51IDIS 25870029
         B     4(,R7)            RETURN TO CALLER              @D51IDIS 25880029
         DROP  R4                                              @D51IDIS 25890029
         EJECT ,                                               @D51IDIS 25900029
*------------------------------------------------------------* @D51IDIS 25910029
* TSRICNCL - INITIALIZATION CANCELLED                          @D51IDIS 25920029
*            INPUT:                                            @D51IDIS 25930029
*              R8  - SERVICE ROUTINE ADDRESS                   @D51IDIS 25940029
*              RF  - RETURN CODE (WHEN CALLED BY INVPART)      @D51IDIS 25950029
*            OUTPUT:                                           @D51IDIS 25960029
*              NONE                                            @D51IDIS 25970029
*------------------------------------------------------------* @D51IDIS 25980029
*SGLINK TSRICNCL,S,INPUT=(R7,R8,RF)                            @D51IDIS 25990029
TSRICNCL DS    0F                                              @D51IDIS 26000029
         L     R6,DISPAD         GET DISPATCHER BASE           @D51IDIS 26010029
         L     R5,PCBPTR         GET CURRENT PCB ADDRESS       @D51IDIS 26020029
         USING PCBADR,R5                                       @D51IDIS 26030029
         OI    PCEFLAG,PCEICNCL  INDICATE INITIALIZATION CANCEL@D51IDIS 26040029
         OI    PCEFLAG1,PCEDOCL  PROCESS CLEAN UP              @D51IDIS 26050029
         L     R4,PCECOMRA       GET COMREG ADDRESS            @D51IDIS 26060029
         USING COMREG,R4                                       @D51IDIS 26070029
         L     R3,IJBJCWA        GET JCL WORK AREA ADDRESS     @D51IDIS 26080029
         LTR   R3,R3             ALREADY INITIALIZED ?         @D51IDIS 26090029
         BNZR  R6                NO, RETURN TO DISPATCHER      @D51IDIS 26100029
         DROP  R4                                              @D51IDIS 26110029
         L     R4,TIBPTR         GET TIB ADDRESS               @D51IDIS 26120029
         USING TIBADR,R4                                       @D51IDIS 26130029
         TM    TIBFLAG1,EOTACT   END OF TASK ACTIVE ?          @D51IDIS 26140029
         BZ    TSRICNC3          NO, PROCESS UNBATCH           @D51IDIS 26150029
         DROP  R4                                              @D51IDIS 26160029
         NI    PCEFLAG,XFF-PCEPREP RESET PREPARATION INDICATION@D51IDIS 26170029
         L     RD,APBASE         GET SGAP BASE ADDRESS         @D51IDIS 26180029
         USING SGAP,RD                                         @D51IDIS 26190029
         L     R9,ATERMBAS       GET EOT ROUTINE'S BASE        @D51IDIS 26200029
         USING TERMBASE,R9                                     @D51IDIS 26210029
         LR    R8,R4             GET TIB ADDRESS               @D51IDIS 26220029
         L     RA,TCBPTR         GET TCB ADDRESS               @D51IDIS 26230029
         LA    R7,EOTRTRNB       CALL 'RETURN FROM EOT-ROUTINE'@D66ODOW 26240029
         BASSM R7,R7             ...IN 24BIT MODE              @D66ODOW 26250029
*SGLINK EOTRTRNB,INPUT=(R6,R7,R8,R9,RA,RD),WORK=(R5,RE,RF)     @D51IDIS 26260029
         L     R7,TSRICNC1A      BACK                          @D66ODOW 26270029
         BSM   0,R7              .... TO 31BIT MODE            @D66ODOW 26280029
TSRICNC1A DC   A(TSRICNC1+SX8)                                 @D66ODOW 26290029
TSRICNC1 DS    0H                                              @D66ODOW 26300029
         DROP  R9                                              @D51IDIS 26310029
         DROP  RD                                              @D51IDIS 26320029
         L     R8,ATSSERV        RESTORE BASE REGISTER         @D51IDIS 26330029
         L     R5,PCBPTR         GET CURRENT PCB ADDRESS       @D51IDIS 26340029
TSRICNC3 DS    0H                                              @D51IDIS 26350029
         OI    PCEFLAG,PCECLEAN  INDICATE CLEAN UP IN PROGRESS @D51IDIS 26360029
         OI    PCEFLAG1,PCESGERR INDICATE SYSTEM ERROR         @D51IDIS 26370029
         L     RC,FSVCBASE       GET SGTINF BASE ADDRESS       @D51IDIS 26380029
         USING SGTINF,RC                                       @D51IDIS 26390029
         L     RD,FSVCBAS2       GET 2. SGTINF BASE ADDRESS    @D51IDIS 26400029
         B     TINFTWIC          DEACTIVATE PARTITION          @D51IDIS 26410029
         DROP  R5                                              @D51IDIS 26420029
         DROP  RC                                              @D52GDIS 26430029
         EJECT ,                                               @D51IDIS 26440029
*------------------------------------------------------------* @D51IDIS 26450029
* TSRGPCB  - VALIDATE PIK                                      @D51IDIS 26460029
*          - GET PCB ADDRESS FOR A GIVEN PIK                   @D51IDIS 26470029
*            INPUT:                                            @D51IDIS 26480029
*              R0  - PIK                                       @D51IDIS 26490029
*              R4  - RETURN ADDRESS                            @D51IDIS 26500029
*              R8  - BASE ADDRESS                              @D51IDIS 26510029
*            OUTPUT:                                           @D51IDIS 26520029
*              R5  - PCB ADDRESS                               @D51IDIS 26530029
*              R4  - RETURN CODE                               @D51IDIS 26540029
*                      R4+0 = INVALID PIK OR PCB NOT AVAIL.    @D51IDIS 26550029
*                      R4+4 = PCB ADDRESS RETURNED             @D51IDIS 26560029
*            WORK: R0                                          @D51IDIS 26570029
*------------------------------------------------------------* @D51IDIS 26580029
*SGLINK TSRGPCB,S,INPUT=(R0,R4,R8),OUTPUT=(R4,R5),WORK=(R0)    @D51IDIS 26590029
TSRGPCB  DS    0H                                              @D51IDIS 26600029
         LR    R5,R0             GET PIK                       @D51IDIS 26610029
         N     R0,F15            CHECK LOW ORDER BITS          @D51IDIS 26620029
         BNZR  R4                IF ANY ON, INVALID PIK        @D51IDIS 26630029
         CH    R5,IJBHPIK        MAX. PIK SUPPORTED ?          @D51IDIS 26640029
         BHR   R4                YES, INVALID PIK              @D51IDIS 26650029
         SRL   R5,2              CALC. INDEX INTO PCBATAB      @D51IDIS 26660029
         A     R5,APCBATAB       ADD BASE OF PCBATAB           @D51IDIS 26670029
         ICM   R5,15,0(R5)       GET PCB ADDRESS, AVAILABLE ?  @D51IDIS 26680029
         BNZ   4(,R4)            YES, RETURN OK                @D51IDIS 26690029
         BR    R4                NO,  RETURN NOT OK            @D51IDIS 26700029
         EJECT ,                                               @D51IDIS 26710029
*------------------------------------------------------------* @D51IDIS 26720029
* TSRPER   - MODIFY SDAID INFORMATION                          @D51IDIS 26730029
*            INPUT:                                            @D51IDIS 26740029
*              R5  - PCB ADDRESS                               @D51IDIS 26750029
*              R7  - RETURN ADDRESS                            @D51IDIS 26760029
*              R8  - BASE ADDRESS                              @D51IDIS 26770029
*              RB  - SAVE AREA ADDRESS                         @D51IDIS 26780029
*            WORK: RE ,RF                                      @D51IDIS 26790029
*------------------------------------------------------------* @D51IDIS 26800029
         USING PCBADR,R5                                       @D51IDIS 26810029
         USING SVEARA,RB                                       @D51IDIS 26820029
*SGLINK TSRPER,S,INPUT=(R5,R7,R8,RB),WORK=(RE,RF)              @D51IDIS 26830029
TSRPER   DS    0H                                              @D51IDIS 26840029
         ICM   RF,15,IJBSDPPR    GET SDAID ROUTINE ADDRESS     @D51IDIS 26850029
         BZR   R7                RETURN, IF NOT AVAILABLE      @D51IDIS 26860029
         LA    RF,0(,RF)         CALL ROUTINE                  @D66ODOW 26870029
         BASSM RE,RF             ...IN 24BIT MODE              @D66ODOW 26880029
         L     RE,TSRPER1A       BACK                          @D66ODOW 26890029
         BSM   0,RE              .... TO 31BIT MODE            @D66ODOW 26900029
TSRPER1A DC    A(TSRPER10+SX8)                                 @D66ODOW 26910029
TSRPER10 DS    0H                                              @D66ODOW 26920029
         LTR   RF,RF             CHECK RETURN CODE             @D51IDIS 26930029
         BZR   R7                RC=0 -> RETURN TO CALLER      @D51IDIS 26940029
         NI    PCBFLAG,XFF-PERACT RESET PERACT                 @D51IDIS 26950029
         NI    SVEPSW,XFF-PERMASK RESET PER BIT IN PSW         @D51IDIS 26960029
         C     RF,F4             RC=4 -> PER BIT TO BE SET ?   @D51IDIS 26970029
         BNER  R7                NO, RETURN TO CALLER          @D51IDIS 26980029
         OI    PCBFLAG,PERACT    SET PERACT                    @D51IDIS 26990029
         OI    SVEPSW,PERMASK    SET PER BIT IN PSW            @D51IDIS 27000029
         BR    R7                RETURN TO CALLER              @D51IDIS 27010029
         DROP  R5                                              @D51IDIS 27020029
         DROP  RB                                              @D51IDIS 27030029
         EJECT ,                                               @D51IDIS 27040029
*------------------------------------------------------------* @D51IDIS 27050029
* TSRHOLD  - HOLD A PARTITION DURING CLEAN UP                  @D51IDIS 27060029
*            WITH THIS SERVICE THE PARTITION CAN NOT BE        @D51IDIS 27070029
*            DEACTIVATED/DEALLOCATED UNTIL THE SYSTEM RECEIVES @D51IDIS 27080029
*            A TSRFREE REQUEST                                 @D51IDIS 27090029
*            INPUT:                                            @D51IDIS 27100029
*              R5  - PCB ADDRESS OF PARTITION                  @D51IDIS 27110029
*              R7  - RETURN ADDRESS                            @D51IDIS 27120029
*              R8  - BASE ADDRESS                              @D51IDIS 27130029
*              RF  - FUNCTION CODE                             @D51IDIS 27140029
*            OUTPUT:                                           @D51IDIS 27150029
*              RF  - RETURN CODE                               @D51IDIS 27160029
*                    0 = SPECIFIED PARTITION TO BE HELD        @D51IDIS 27170029
*                    4 = REQUEST REJECTED, HOLD ALREADY ISSUED @D51IDIS 27180029
*                   12 = REQUEST REJECTED, PARTITION IS IN     @D51IDIS 27190029
*                        PREPARATION OR CLEANUP                @D51IDIS 27200029
*                   16 = REQUEST REJECTED,                     @D51IDIS 27210029
*                        HOLD REQUEST FOR CURRENT PARTITION    @D51IDIS 27220029
*            WORK: R2, R8, RC, RE                              @D51IDIS 27230029
*------------------------------------------------------------* @D51IDIS 27240029
TSRHOLD  DS    0H                                              @D51IDIS 27250029
         LR    R2,R7         GET RETURN ADDRESS OF SERVICE     @D51IDIS 27260029
         L     RC,TSRS43     GET SVC43 BASE ADDRESS            @D51IDIS 27270029
         USING SVC43,RC                                        @D51IDIS 27280029
         B     S43HOLDI      PROCESS REQUEST                   @D51IDIS 27290029
*SGLINK S43HOLDI,INPUT=(R2,R5,RC),OUTPUT=(RF),WORK=(R8,RE)     @D51IDIS 27300029
         DROP  RC                                              @D51IDIS 27310029
         EJECT ,                                               @D51IDIS 27320029
*------------------------------------------------------------* @D51IDIS 27330029
* TSRFREE  - FREE A PARTITION THAT WAS HELD DURING CLEAN UP    @D51IDIS 27340029
*            SERVICE HAS TO BE USED AFTER DYNCLASS ID=HOLD     @D51IDIS 27350029
*            INPUT:                                            @D51IDIS 27360029
*              R7  - RETURN ADDRESS                            @D51IDIS 27370029
*              R8  - BASE ADDRESS                              @D51IDIS 27380029
*              RF  - FUNCTION CODE                             @D51IDIS 27390029
*            OUTPUT:                                           @D51IDIS 27400029
*              R15 - RETURN CODE                               @D51IDIS 27410029
*                    0 = SPECIFIED PARTITION WILL BE HELD      @D51IDIS 27420029
*                    4 = NO DYNCLASS ID=HOLD ISSUED            @D51IDIS 27430029
*                    8 = PIK IS INVALID OR PARTITION NOT       @D51IDIS 27440029
*                        AVAILABLE                             @D51IDIS 27450029
*            WORK: R0, R2, R4, R5, R6, R8, RC, RE              @D51IDIS 27460029
*------------------------------------------------------------* @D51IDIS 27470029
         SPACE 2                                               @D51IDIS 27480029
TSRFREE  DS    0H                                              @D51IDIS 27490029
         LR    R2,R7         GET RETURN ADDRESS OF SERVICE     @D51IDIS 27500029
         L     R6,DISPAD     GET DISPATCHER BASE ADDRESS       @D51IDIS 27510029
         L     RC,TSRS43     GET SVC43 BASE ADDRESS            @D51IDIS 27520029
         USING SVC43,RC                                        @D51IDIS 27530029
         B     S43FREEI      PROCESS REQUEST                   @D51IDIS 27540029
*SGLINK S43FREEI,INPUT=(R2,R6,R8,RC),OUTPUT=(RF),                      X27550029
               WORK=(R0,R4,R5,R8,RE)                                    27560029
         DROP  RC                                              @D51IDIS 27570029
         SPACE 4                                               @D51IDIS 27580029
*------------------------------------------------------------* @D51IDIS 27590029
* WORK FIELDS                                                * @D51IDIS 27600029
*------------------------------------------------------------* @D51IDIS 27610029
CLASSDEF DS    0D            TABLE OF VALID CLASSES            @D51IDIS 27620029
         DC    C'CDEGHIJKLMNOPQRSTUVWXYZ'                      @D51IDIS 27630029
CLASSDEE EQU   *             END OF VALID CLASSES              @D51IDIS 27640029
         DC    X'FF'         END INDICATOR                     @D51IDIS 27650029
TSRSLG2  DC    C'123456789ABCDEFGHIJKLMNOPQRSTUVW'             @D51IDIS 27660029
         DC    X'FF'         END INDICATOR                     @D51IDIS 27670029
         DS    0F                                              @D51IDIS 27680029
TSRS43   DC    A(SVC43)      SVC 43 BASE ADDRESS               @D51IDIS 27690029
TSRWORK  DC    F'0'          WORK FIELD                        @D51IDIS 27700029
ACLASSDF DC    A(CLASSDEF)   ADDRESS OF CLASS STRING           @D51IDIS 27710029
TSRHFCT  DC    AL2(TSRBRTBE/4-1) HIGHEST FUNCTION CODE         @D51IDIS 27720029
CLASSWRK DC    C' '          WORK FIELD (CLASS CHARACTER)      @D51IDIS 27730029
CLASSWR2 DC    C' '          WORK FIELD (2. PART OF SYSLOG ID) @D51IDIS 27740029
TSRHIGHB DC    X'80000000'   BIT STRING (FIRST BIT ON)         @D51IDIS 27750029
TSRCLACT DC    H'0'          NO. OF CLASSES WITH BAL. ACTIVE   @D51IDIS 27760029
         EJECT ,                                               @D51IDIS 27770029
         DC    CL4'CLIM'                                       @D51IDIS 27780029
         MAPCLIM                                               @D51IDIS 27790029
         EJECT ,                                               @D51IDIS 27800029
*------------------------------------------------------------* @D51IDIS 27810029
* PRETABLE - ADDRESSED BY APCBATAB DURING GENERATION AND IPL,  @D51IDIS 27820029
*            THAT IS THE TABLE HOLDS THE PCB POINTERS IN PIK/4 @D51IDIS 27830029
*            ORDER. AFTER DYNCLASS ID=INIT CALLED DURING IPL   @D51IDIS 27840029
*            THE APCBATAB POINTS TO THE PCB ADDRESS TABLE      @D51IDIS 27850029
*            ALLOCATED IN THE SVA. THE  PRETABLE IS FREE FOR   @D51IDIS 27860029
*            OTHER USAGE.                                      @D51IDIS 27870029
*------------------------------------------------------------* @D51IDIS 27880029
PRETABLE DS    0F                                              @D51IDIS 27890029
         DC    A(SYSPCB)     ADDRESS OF SYSTEM PCB             @D51IDIS 27900029
&Y       SETA  0             INITIALIZE LOOP                   @D51IDIS 27910029
.PCBLP   ANOP                                                  @D51IDIS 27920029
&Y       SETA  &Y+1                                            @D51IDIS 27930029
&C       SETC  '&P(&Y)'      GET SYSLOG ID                     @D51IDIS 27940029
         DC    A(&C.PCB)     GENERATE PCB POINTER              @D51IDIS 27950029
         AIF   (&Y LT &NPART).PCBLP DO IT FOR ALL STATIC PART.S@D51IDIS 27960029
PRETABLC EQU   *                                               @D51IDIS 27970029
         DC    &NCLASS.F'0'  DEFINE CLASS SLOTS                @D51IDIS 27980029
         DC    X'FFFFFFFF'   END INDICATOR OF TABEL DURING IPL @D52VDIS 27990029
         DROP  R8                                              @D51IDIS 28000029
.MEXIT   AIF   (NOT &SGDYNC).NPRT020                           @D61NDIS 28010029
         PRINT NOGEN                                           @D37ZDFG 28020029
.NPRT020 ANOP                                                  @D37ZDFG 28030029
         MEND                                                           28040029
