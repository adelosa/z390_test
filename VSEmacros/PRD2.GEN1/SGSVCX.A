         MACRO                                                          00001000
         SGSVCX                                                         00002000
*********************************************************************** 00003000
*                                                                     * 00004000
*        LICENSED MATERIALS - PROPERTY OF IBM                         * 00005000
*        "RESTRICTED MATERIALS OF IBM"                                * 00006000
*        5686-CF7                                                     * 00007000
*        (C) COPYRIGHT IBM CORP. 1977, 2004                           * 00008000
*                                                                     * 00009000
*********************************************************************** 00010000
         GBLA  &NPART         NUMBER OF STATIC PARTITIONS      @D61NDOW 00011000
         GBLB  &BGDEBUG       DEBUG OPTION                     @D37ZDFG 00012000
         GBLB  &SGSVCX        COMPONENT NAME FOR PRINT OPTION  @D37ZDOW 00013000
.* /* START OF SPECIFICATIONS ***************************************** 00014000
.*                                                             @D35EDJO 00015000
.*01* MODULE-TYPE = MACRO                                      @D35EDJO 00016000
.*                                                             @D35EDJO 00017000
.*01* DESCRIPTIVE NAME = MISCELLANEOUS SVC''S'                 @D35EDJO 00018000
.*                                                                      00019000
.*   ENTRY POINTS: SVC10                                       @D35EDJO 00020000
.*                 SVC24                                       @D35EDJO 00021000
.*                 SVC34                                       @D35EDJO 00022000
.*                 SVC52                                       @D35EDJO 00023000
.*                 SVC79                                                00024000
.*                 SVC113                                      @D14NDOW 00025000
.*                 SVC117                                      @D61RDOW 00026000
.*                 SVC120                                      @D51KDOW 00027000
.*                 SVC140                                               00028000
.*                                                             @D35EDJO 00029000
.*01* CHANGE ACTIVITY = AS FOLLOWS                             @D35EDJO 00030000
.*                                                                      00031000
.*    SOFTWAIT, PUB QUEUED FOR RECOVERY AFTER ERP COMPLETE     @DA34415 00032000
.*    PHO INTERFACE CHANGE                                     @DA35398 00033000
.*    WAITFF5 DUE TO REG4 HAVING SCB INSTEAD OF CCW POINTER    @DA35908 00034000
.*    ACTIVATION OF VTAM'S ISTAPCKU APPENDAGE                  @DA36477 00035000
.*    WAITFED ON SVC10 FROM SYSTEM TASK                        @DA36760 00036000
.*    WAITFFB AFTER SVC 44 WHEN EOT OWNER RUNS REAL            @DA37045 00037000
.*    SPE DY37265                                              @D21YDOW 00038000
.*    NEW SYSTEM LAYOUT                                        @D51GDRP 00039000
.*    SVC95 MOVED TO SGEXIT                                    @D51HDOW 00040000
.*    VTAM TO PRIVATE SPACE                                    @D51KDOW 00041000
.*    NEW INTERFACE TO PERFORMANCE MONITOR                     @D51MDKH 00042000
.*    APAR DY40242 PREVENT INCORRECT USAGE OF MIDNIGHT VALUE   @DA40242 00043000
.*    WAITFFF IN XMMOVE DUE TO INCORRECT PAGE 0 HANDLING       @DA40703 00044000
.*    WAITFFF/LOOP IN XPCC HANDLING IN ESA MODE                @DA41316 00045000
.*    WAITFFF BECAUSE CR-CB USED ALTHOUGH ALREADY FREEVISED    @DA41661 00046000
.*    LOOP IN XMMOVE ROUTINE WHEN PMGR CANCEL AFTER GENPGQX    @DA42133 00047000
.*    PROG CHECK BECAUSE 31 BIT MODE STOLEN         @D52VDOW   @KX40251 00048000
.*    MSG0P36I P NO REC FND FOR LABEL AREA DEVICE              @DA42144 00049000
.*    SVC44 MOVED TO SGERP                                     @D61NDOW 00050000
.*    VSE/AF 2.3  FAMILY API                                   @D64ADVB 00051000
.*    REMOVE PARALLEL LOCK SUPPORT                             @D66ODOW 00052000
.*    MORE THAN 255 TASKS                                      @D66ODOW 00053000
.*    PROG CHK IN TIMER EXIT RTN DUE TO INCORRECT REG 1        @DY45785 00054000
.*    THIN INTERRUPT HANDLER                                   @D67BDOW 00055000
.*    NAME/TOKEN SERVICE                                       @D67CDOW 00056000
.*    THIN INTERRUPTS FOR HIPERSOCKETS/OSA EXPRESS/FCP DEVICES @D68EDMZ 00057000
.*    ALLOW XMOVE DURING TASK TERMINATION                      @D68IDMZ 00057500
.*    OSAX SDAID TRACE                                         @DY46370 00057700
.*    SUPPORT DB2 AUTOCOMMIT IN BATCH APPLICATIONS             @DY46455 00057800
.*    SWITCH TO AMODE 31 TO ADDRESS TCBX                       @DY46493 00057900
.*    ALEN translation exception x'29' in svc 120(XMOVE)       @DY46535 00057950
.*                                                                      00058000
.** END OF SPECIFICATIONS ************************************          00059000
         AIF   (NOT &SGSVCX).NOPRINT                           @D37ZDOW 00060000
         PRINT GEN                                             @D37ZDOW 00061000
.NOPRINT ANOP                                                  @D37ZDOW 00062000
         DS    0F                                                       00063000
         DC    CL8'SGSVCX  '      MODULE NAME                           00064000
         DC    CL10' DY46535  '   LAST APAR/DEVELOPMENT CHANGE @DY46535 00065680
         SPACE                                                          00066000
SGSVCX   DS    0H                                              @D35EDJO 00067000
         BR    RC                      GO TO SVC ROUTINE       @D34RDFG 00068000
         USING TCBADR,RA                                       @D36IDFG 00069000
         USING SGSVCX,RD               DECLARE BASE            @D35EDJO 00070000
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 00071000
*                                                                     * 00072000
*   SVC 24: STORE THE ADDRESS OF THE USER'S TECB                      * 00073000
*           AND SETUP A TIMER INTERVAL.                        @D35EDJO 00074000
*                                                              @D35EDJO 00075000
*           THE ROUTINE TO SET UP A TIMER INTERVAL IS COMMON   @D35EDJO 00076000
*           TO SVC 10 PROCESSING AND SVC 24 PROCESSING         @D35EDJO 00077000
*                                                                     * 00078000
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 00079000
         SPACE 1                                                        00080000
SVC24    EQU   *                                               @D34RDFG 00081000
         USING DISP,R6                                         @D35EDJO 00082000
         USING TIBADR,R8                                       @D64ADOW 00083000
         TM    TCBABEX,EXITACT    AB ROUTINE IN PROGRESS       @D64ADMK 00084000
         BO    ERR21              YES,ILLEGAL SVC              @D33DDJO 00085000
         TM    TCBEXFLG,TCBEXAM   CALLER IN 31-BIT MODE        @D52VDOW 00086000
         BZ    SVC24L10           NO, --->                     @D52VDOW 00087000
***                               YES, R0 MAY BE A 4-BYTE ADDR          00088000
         L     R2,SVC24A10                                     @D64ADOW 00089000
         BSM   0,R2               ENTER 31 BIT MODE            @D64ADOW 00090000
SVC24A10 DC    A(SVC24L10+X'80000000')                         @D64ADOW 00091000
SVC24L10 LR    R3,R1              SAVE INTERVAL VALUE                   00092000
         LR    R1,R0              SET UP R1 FOR TECB VALIDATION         00093000
         LA    R1,0(,R1)          CLEAR FIRST BYTE/BIT         @D52VDOW 00094000
         LR    R0,R1              ALSO IN REG 0                @D52VDOW 00095000
         LA    R2,3(,R1)          POINT R2 TO END OF TECB               00096000
         CLC   TID(2),ARTIDH      CALLING FROM SYSTEM TASK     @D65CDOW 00097000
         BNH   SVC24L15           YES, TRUST SYSTEM TASK       @D65CDOW 00098000
         BAS   R8,VALID           VALIDATE TECB ADDRESS                 00099000
*SGLINK VALID,INPUT=(R1,R2,R6,R8),WORK=(R2),OUTPUT=(R5)        @D36ZDOW 00100000
SVC24L15 DS    0H                                              @D65CDOW 00101000
         L     R8,TIBPTR          RELOAD TIB POINTER           @D64ADOW 00102000
         L     R2,SVC24A20                                     @D64ADOW 00103000
         BSM   0,R2               ENTER 31 BIT MODE            @D64ADOW 00104000
SVC24A20 DC    A(SVC24L20+X'80000000')                         @D64ADOW 00105000
SVC24L20 DS    0H                                              @D64ADOW 00106000
         NI    2(R1),XFF-TRABIT   RESET TRAFFIC BIT            @D68CDOW 00107000
         L     R2,TCBATCBE                                     @DY45037 00108000
         USING TCBXADR,R2                                      @DY45037 00109000
         ICM   R2,B'1111',TCBXTQCA INHIBIT OVERWRITE OF IT-EXIT@DY45037 00110000
***                               BLOCK IF IT-EXIT ACTIVE               00111000
         USING EXITBLK,R2                                      @DY45037 00112000
         BZ    SVC24L30           NOT IN TIMER-CHAIN --->      @DY45037 00113000
         TM    EXITADR,EXITACT    EXIT CURRENTLY ACTIVE        @DY45037 00114000
         BO    ERR21              YES, ILLEGAL SVC             @DY45037 00115000
         NI    EXITFLG,XFF-DELINT SKIP IT EXIT IF ALREADY      @DY45037 00116000
***                               ... SCHEDULED                         00117000
         DROP  R2                                              @DY45037 00118000
SVC24L30 DS    0H                                              @DY45037 00119000
         USING CCBADR,R1                                       @D35EDJO 00120000
         NI    CCBCOM1,XFF-TRABIT RESET TRAFFIC BIT                     00121000
         DROP  R1                                              @D35EDJO 00122000
         USING SVEARA,RB          SET BASE FOR SA              @D64ADVB 00123000
         ST    R0,SVER01          PASS TECB ADDRESS TO USER             00124000
         DROP  RB                                              @D64ADVB 00125000
         SLR   R1,R1                                           @D64ADOW 00126000
         STM   R0,R1,SVCWORKB     INDICATE SVC24, SAVE TECB ADR@D64ADVB 00127000
         LR    R1,R3              RESTORE R1                            00128000
         B     SVC10L20                                        @D61NDOW 00129000
*                                                              @D35EDJO 00130000
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  @D35EDJO 00131000
*   SVC 10: SET UP A TIMER INTERVAL.                           @D35EDJO 00132000
*           AT ENTRY TO SVC 10 AND SVC 24 REGISTER 1 CONTAINS  @D35EDJO 00133000
*           THE SPECIFIED TIME INTERVAL IN SECONDS MULTIPLIED  @D35EDJO 00134000
*           BY 76800.                                          @D35EDJO 00135000
*                                                              @D35EDJO 00136000
*           THE FOLLOWING CALCULATIONS ARE PERFORMED TO ADJUST @D35EDJO 00137000
*           THE TIME INTERVAL TO THE REQUIREMENTS OF THE       @D35EDJO 00138000
*           TIME-OF-DAY CLOCK.                                 @D35EDJO 00139000
*           DIVIDE TIME INTERVAL BY 256,                       @D35EDJO 00140000
*           MULTIPLY RESULT BY 2**12*10**6/300                 @D35EDJO 00141000
*                                                              @D35EDJO 00142000
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *@D35EDJO 00143000
SVC10    DS    0H                                              @D34RDFG 00144000
         TM    TCBABEX,EXITACT    AB ROUTINE IN PROGRESS       @D64ADMK 00145000
         BO    ERR21              YES,ILLEGAL SVC              @D33DDJO 00146000
         XC    SVCWORKB(8),SVCWORKB INDICATE SVC 10            @D64ADOW 00147000
         L     R2,SVC10A20                                     @D64ADOW 00148000
         BSM   0,R2               ENTER 31 BIT MODE            @D64ADOW 00149000
SVC10A20 DC    A(SVC10L20+X'80000000')                         @D64ADOW 00150000
SVC10L20 DS    0H                                              @D61NDOW 00151000
         LR    RC,R6             COPY EXIT ADDR                @D61RDOW 00152000
*                                                                       00153000
*   CALCULATE THE TARGET TIME.                                 @D35EDJO 00154000
*   TARGET TIME IS PRESENT VALUE OF TOD CLOCK                  @D35EDJO 00155000
*   PLUS SPECIFIED TIMER VALUE (CONTAINED IN R1).              @D35EDJO 00156000
*                                                                       00157000
         SRL   R1,8               DIVIDE BY 256,  MAKE POSITIVE@D35EDJO 00158000
         SR    R0,R0                                           @D35EDJO 00159000
         L     R2,MICSEC          MULTIPLIER                   @D35EDJO 00160000
         MR    R0,R2              TRANSFER TO TOD FORMAT       @D35EDJO 00161000
SVC10L30 DS    0H                                              @D61RDOW 00162000
         STCK  CLOCK              ACTUAL VALUE OF TOD CLOCK    @D35EDJO 00163000
         BNE   ERR15              TOD-CLOCK IN ERROR           @D35EDJO 00164000
         SR    R4,R4                                           @D35EDJO 00165000
         L     R5,CLOCK+4                                      @D35EDJO 00166000
         ALR   R5,R1              ADD RIGHT 32 BITS            @D35EDJO 00167000
         BC    12,SVC10L40        BR.IF NO CARRY OUT OF POS.32 @D35EDJO 00168000
         LA    R4,1               CARRY TO LEFT PART OF CLOCK  @D35EDJO 00169000
SVC10L40 A     R4,CLOCK           LEFT PART OF CLOCK VALUE     @D35EDJO 00170000
         AR    R4,R0              ADD LEFT PART OF MULT.       @D35EDJO 00171000
         STM   R4,R5,SVCWORKB+8   SAVE EXPIRATION TIME         @D64ADOW 00172000
         L     RE,TCBATCBE        GET TCBX ADDR                @D64ADOW 00173000
         USING TCBXADR,RE                                      @D64ADOW 00174000
         ICM   R7,B'1111',TCBXTAVS GET VSE TIQE                @D64ADOW 00175000
         BNZ   SVC10L50                                        @D64ADOW 00176000
         LA    R0,EXTILEN         GET LENGTH OF VSE TIQE       @D64ADOW 00177000
         SLR   RF,RF              SET FCT CODE                 @D64ADOW 00178000
         LR    R4,RC              SAVE RETURN ADDRESS          @D64ADOW 00179000
         L     RC,ASGEXIT         ADDR OF SGETVIS SUBROUTINE   @D64ADOW 00180000
         L     RC,AEXITGVI-SGEXIT(,RC) ...                     @D64ADOW 00181000
         BASSM R8,RC              RETRIEVE STORAGE             @D64ADOW 00182000
*SGLINK EXITGVIS,INPUT=(R0,R8,RA,RC),OUTPUT=(R1,RF),WORK=R0             00183000
         LR    RC,R4              RESTORE RETURN ADDR          @D64ADOW 00184000
         LTR   RF,RF              STORAGE RETRIEVED            @D64ADOW 00185000
         BNZ   SVC10ER1           NO, NO SPACE TO BUILD TIQE   @D64ADOW 00186000
         LR    R7,R1              COPY EXITBLK ADDR            @D64ADOW 00187000
         USING EXITBLK,R7         PROVIDE ADDR TO TIQE         @D64ADVB 00188000
         ST    R7,TCBXTAVS        ADDR OF VSE TIQE             @D64ADVB 00189000
SVC10L50 DS    0H                                              @D64ADOW 00190000
         MVI   EXITFLG1,EXTITYPE  ITS A TIQE                   @DY45785 00191000
         MVI   TIQTYPE,TIQVSE     ... ITS A VSE TIQE           @DY45785 00192000
         LM    R4,R5,SVCWORKB     CALLED BY SVC24              @D64ADOW 00193000
         LTR   R4,R4              ...                          @D64ADOW 00194000
         BZ    SVC10L60           NO, --->                     @D64ADOW 00195000
         STM   R4,R5,EXITADR      SAVE TECB ADDR               @D64ADOW 00196000
SVC10L60 DS    0H                                              @D64ADOW 00197000
         MVC   TIQOUTT,SVCWORKB+8 SAVE EXPIRATION TIME         @D64ADVB 00198000
         L     R3,ASGEXIT                                      @D64ADOW 00199000
         L     R3,ASGTIMX-SGEXIT(,R3)                          @D64ADOW 00200000
         ICM   R5,B'1111',TCBXTQCA GET TIMER EXIT RESPONSIBLE  @D64ADOW 00201000
***                               WHY TASK IN TIMER CHAIN               00202000
         BZ    SVC10L80           NOT IN CHAIN --->            @D64ADOW 00203000
         TM    EXITADR-EXITBLK(R5),EXITACT IS EXIT ACTIVE      @D64ADOW 00204000
         BO    SVC10L90           YES, --->                    @D64ADOW 00205000
         CR    R5,R7              IS IT OUR TIQE               @D64ADOW 00206000
         BE    SVC10L70           YES, DEQ FROM TIMER CHAIN    @D64ADOW 00207000
         TM    EXITFLG-EXITBLK(R5),DELINT EXIT PROCESSING DELAY@D64ADOW 00208000
         BO    SVC10L90           YES, --->                    @D64ADOW 00209000
         CLC   TIQOUTT,TIQOUTT-EXITBLK(R5) SPECIFIED EXPIRATION@D64ADOW 00210000
***                               TIME SMALLER THAN CURRENT SETUP       00211000
         BNL   SVC10L90           NO, --->                     @D64ADOW 00212000
SVC10L70 DS    0H                                              @D64ADOW 00213000
         NI    EXITFLG,XFF-DELINT RESET DELAYED INTERRUPT BIT  @D64ADOW 00214000
***                               IN OUR TIQE                           00215000
         DROP  RD                                              @D64ADOW 00216000
         LR    RD,R3              SETUP BASE                   @D64ADOW 00217000
         USING SGTIMERX,RD                                     @D64ADOW 00218000
         BAS   R9,DEQTICHN        REMOVE TASK FROM TIMER CHAIN @D64ADOW 00219000
*SGLINK DEQTICHN,INPUT=(R9,RA,RD)                                       00220000
         BAS   R9,FNDTILOW        FIND TIQE WITH LOWEST EXP TIM@D64ADOW 00221000
*SGLINK FNDTILOW,INPUT=(R9,RA,RD),OUTPUT=(R7)                           00222000
SVC10L80 DS    0H                                              @D64ADOW 00223000
         LR    RD,R3              SETUP BASE                   @D64ADOW 00224000
         BAS   R9,ENQTICHN        ENQUEUE TASK IN TIMER CHAIN  @D64ADOW 00225000
*SGLINK ENQTICHN,INPUT=(R7,R9,RA,RD)                                    00226000
SVC10L90 DS    0H                                              @D64ADOW 00227000
         BR    RC                                              @D61RDOW 00228000
*                                                              @D35EDJO 00229000
MICSEC   DC    F'13653333'                                     @D35EDJO 00230000
*                                                              @DA09160 00231000
         DROP  R6                  RELEASE DISP BASE           @D35EDJO 00232000
         DROP  R7                  RELEASE TIQE BASE           @D64ADVB 00233000
         DROP  RE                                              @D64ADOW 00234000
         SPACE 3                                                        00235000
         USING SGSVCX,RD                                       @D64ADOW 00236000
SVC10DSP DS    0H                SPECIAL ENTRY FROM DSP TASK   @D61RDOW 00237000
*SGLINK SVC10DSP,S,INPUT=(R1,R6,RA,RC)                                  00238000
         L     RD,ASVCX          GET BASE ADDR                 @D61RDOW 00239000
         SLR   R0,R0             CLEAR WORK REGISTER           @D61RDOW 00240000
         SLDA  R0,16             APPROXIMATELY MILLI SECONDS   @D61RDOW 00241000
         L     R8,TIBPTR                                       @D64ADOW 00242000
         XC    SVCWORKB(8),SVCWORKB INDICATE SVC 10            @D64ADOW 00243000
         B     SVC10L30                                        @D61RDOW 00244000
         SPACE 2                                                        00245000
SVC10ER1 DS    0H                                              @D64ADVB 00246000
         L     R1,S10ERR06        GET CANCEL INFORMATION       @D64ADOW 00247000
         L     RB,TCBSAVE         GETSAVE AREA ADDR            @D64ADOW 00248000
         USING SVEARA,RB                                       @D64ADOW 00249000
         ST    RF,SVER0F          SAVE SGETVIS RETURN CODE     @D64ADOW 00250000
***      B     SVC10ERR                                                 00251000
         DROP  RB                                              @D64ADOW 00252000
SVC10ERR DS    0H                                              @D64ADVB 00253000
         L     RC,ASGEXIT         BASE OF ERROR EXIT           @D64ADOW 00254000
         L     RC,ACOMEREX-SGEXIT(,RC) ...                     @D64ADOW 00255000
         BSM   0,RC               CANCEL WITH ERR47            @DY45175 00256000
         SPACE                                                          00257000
S10ERR06 DC    A(NUCRSN06)        NO SGETVIS AVAILABLE TO      @D64ADOW 00258000
***                               CREATE EXIT BLK. SGETVIS RETC IN R15  00259000
         SPACE                                                          00260000
         DROP  R8                                              @D64ADOW 00261000
         DROP  RA                  RELEASE TCB BASE            @D36ZDFG 00262000
         DROP  RD                      DROP BASE               @D35EDJO 00263000
         EJECT                                                          00264000
*************************************************************           00265000
*                                                                       00266000
*        SVC52 - TTIMER (CANCEL) MACRO                                  00267000
*                                                                       00268000
*************************************************************           00269000
*                                                                       00270000
         USING SVC52,RD                                        @D35EDJO 00271000
         USING DISP,R6                                         @D35EDJO 00272000
         USING TCBADR,RA                                       @D36ZDFG 00273000
         USING TIBADR,R8                                       @D36IDFR 00274000
         USING SVEARA,RB                                       @D36ZDOW 00275000
SVC52    DS    0H                 ENTRY POINT                  @D64ADVB 00276000
*        AMODESW SET,AMODE=31,WR=(R2)                          @D52VDOW 00277000
         AMODESW SET,AMODE=31,WR=(R2)                          @D52VDOW 00278000
         TM    TCBMVSIS,TCBMVSSA  MVS SVC = TTIMER/STIMERM TEST@D64ADVB 00279000
         BNO   SVC52L10           NO, --- >                    @D64ADOW 00280000
         L     RC,ASGEXIT         GET BASE FOR MVS TIMER SERVIC@D64ADOW 00281000
         L     RD,ASGTIMX-SGEXIT(,RC) ...                      @D64ADOW 00282000
         USING SGTIMERX,RD                                     @D64ADOW 00283000
         B     STIMCANC           CANCEL MVS TIMER             @D64ADVB 00284000
         USING SVC52,RD                                        @D64ADOW 00285000
SVC52L10 DS    0H                                              @D64ADVB 00286000
         L     RC,TCBATCBE        GET ADDR OF TCBX             @D64ADVB 00287000
         USING TCBXADR,RC         PROVIDE ADDR TO TCBX         @D64ADVB 00288000
         L     R7,TCBXTAVS        ADDR VSE-TIQE                @D64ADVB 00289000
         USING EXITBLK,R7         PROVIDE ADDR TO TIQE         @D64ADVB 00290000
         LTR   R7,R7              TIQE AVAILABLE AT ALL        @D64ADVB 00291000
         BZ    SVC52L20           NO,  --------->              @D64ADOW 00292000
         OC    TIQOUTT,TIQOUTT    INTERVAL DEFINED (IS ZERO    @D64ADOW 00293000
***                               WHEN TIMER ALREADY EXPIRED)           00294000
         BNZ   SVC52L30           YES, --------->              @D64ADVB 00295000
SVC52L20 DS    0H                                              @D64ADVB 00296000
         SLR   RF,RF                                           @D64ADVB 00297000
         ST    RF,SVER00          INDICATE NO INTERVAL PENDING @D36ZDFR 00298000
         LTR   R0,R0              CANCEL SPECIFIED             @D33DDJO 00299000
         BZ    SVC52EXT           NO,EXIT --------->           @D33DDJO 00300000
         LTR   R7,R7              TIQE AVAILABLE               @D64ADVB 00301000
         BZ    SVC52EXT           NO,  --------->              @D64ADOW 00302000
         NI    EXITFLG,XFF-DELINT  RESET TIMER PENDING BIT     @D64ADVB 00303000
         B     SVC52L70                   --------->           @D64ADOW 00304000
         SPACE 1                                                        00305000
SVC52L30 DS    0H                 INTERVAL NOT EXPIRED         @D64ADVB 00306000
         STCK  CLOCK              GET CORRECT TOD              @D35EDJO 00307000
         BNE   ERR15              TOD-CLOCK IN ERROR           @D35EDJO 00308000
         CLC   CLOCK,TIQOUTT      CLOCK H/EQ THAN CLOCK COMP.  @D64ADVB 00309000
         BL    SVC52L40           NO                           @D35EDJO 00310000
         SR    R5,R5              NO REMAINDER                 @D35EDJO 00311000
         B     SVC52L60           PASS THIS TO USER            @D35EDJO 00312000
*                                                              @D35EDJO 00313000
SVC52L40 LM    R2,R3,CLOCK        CLOCK VALUE                  @D35EDJO 00314000
         LM    R4,R5,TIQOUTT      CLOCK COMPARATOR VALUE       @D64ADVB 00315000
         SLR   R5,R3              LOW ORDER PART OF DIFFERENCE @D35EDJO 00316000
         BNM   SVC52L50           BRANCH IF NO BORROW          @DA28086 00317000
         BCTR  R4,0               PROPAGATE BORROW             @DA28086 00318000
SVC52L50 SLR   R4,R2              HIGH ORDER PART OF DIFFERENCE@DA28086 00319000
         SRDL  R4,12              MICRO SECONDS TO BIT 63      @DA28086 00320000
         D     R4,S52DCONV        CONVERT TO 1/100 SECONDS     @DA28086 00321000
S52PCK00 DS    0H                 PROGRAM CHECK ADDR           @DY45175 00322000
SVC52L60 ST    R5,SVER00          PASS REMAINDER TO USER       @D35EDJO 00323000
*                                                              @D35EDJO 00324000
         LTR   R0,R0              CANCEL SPECIFIED                      00325000
         BZ    SVC52EXT           NO,  --------->              @D64ADVB 00326000
         XC    TIQOUTT,TIQOUTT    INDICATE INTERVAL CANCELED   @D64ADOW 00327000
SVC52L70 DS    0H                                              @D64ADVB 00328000
         L     R1,TCBXTQCA        GET TIQE USED IN TIMER CHAIN @D64ADOW 00329000
         CR    R1,R7              IS IT OUR TIQE               @D64ADOW 00330000
         BNE   SVC52L80           NO --->                      @D64ADOW 00331000
         TM    EXITADR,EXITACT    IS OUR TIQE ACTIVE           @D64ADOW 00332000
         BO    SVC52EXT           YES, --->                    @D64ADOW 00333000
         LR    R5,R7              SAVE TIQE ADDR               @D64ADOW 00334000
         LR    R3,RD              SAVE SVC52 BASE              @D64ADOW 00335000
         DROP  RD                                              @D64ADOW 00336000
         L     RD,ASGEXIT                                      @D64ADOW 00337000
         L     RD,ASGTIMX-SGEXIT(,RD)                          @D64ADOW 00338000
         USING SGTIMERX,RD                                     @D64ADOW 00339000
         LR    R4,RD              SAVE BASE OF SGTIMERX        @D64ADOW 00340000
         BAS   R9,DEQTICHN        REMOVE TASK FROM TIMER CHAIN @D64ADOW 00341000
*SGLINK DEQTICHN,INPUT=(R9,RA,RD)                                       00342000
         BAS   R9,FNDTILOW        FIND TIQE WITH LOWEST EXP TIM@D64ADOW 00343000
*SGLINK FNDTILOW,INPUT=(R9,RA,RD),OUTPUT=(R7)                           00344000
         LR    RD,R3              SET SVC52 BASE               @D64ADOW 00345000
         USING SVC52,RD                                        @D64ADOW 00346000
         LTR   R7,R7              ANY TIQE FOUND               @D64ADOW 00347000
         BZ    SVC52L75           NO, --->                     @D64ADOW 00348000
         LR    RD,R4              SET BASE TO SGTIMERX         @D64ADOW 00349000
         USING SGTIMERX,RD                                     @D64ADOW 00350000
         BAS   R9,ENQTICHN        ENQUEUE TASK IN TIMER CHAIN  @D64ADOW 00351000
*SGLINK ENQTICHN,INPUT=(R7,R9,RA,RD)                                    00352000
         LR    RD,R3              SET SVC52 BASE               @D64ADOW 00353000
         USING SVC52,RD                                        @D64ADOW 00354000
SVC52L75 DS    0H                                              @D64ADVB 00355000
         LR    R7,R5              RESTORE TIQE ADDR            @D64ADOW 00356000
SVC52L80 DS    0H                                              @D64ADVB 00357000
         LM    R1,R2,EXITADR      GET IT EXIT ADDRESSES        @D64ADOW 00358000
         LTR   R2,R2              WAS TECB POSSIBLE            @D52VDOW 00359000
         BNZ   SVC52EXT           NO,                          @D64ADOW 00360000
         LTR   R1,R1              TECB AVAILABLE               @D52VDOW 00361000
         BZ    SVC52EXT           NO,                          @D64ADOW 00362000
         USING CCBADR,R1                                       @D35EDJO 00363000
         OI    CCBCOM1,TRABIT     POST TECB                             00364000
         DROP  R1                                              @D35EDJO 00365000
         XC    EXITADR,EXITADR    CLEAR TECB PTR               @D64ADOW 00366000
SVC52EXT DS    0H                                              @D64ADVB 00367000
         B     EXIT               RETURN =========> DISPATCHER @D64ADVB 00368000
         SPACE 1                                                        00369000
S52ERRTN DS    0H                                              @DY45175 00370000
         LM    R9,R8,ERA          RESTORE REGISTER             @DY45175 00371000
         L     R1,S52ERR00        GET CANCEL INFORMATION       @DY45175 00372000
         L     RC,ASGEXIT         BASE OF ERROR EXIT           @DY45175 00373000
         L     RC,ACOMEREX-SGEXIT(,RC) ...                     @DY45175 00374000
         BSM   0,RC               CANCEL WITH ERR47            @DY45175 00375000
         SPACE 1                                                        00376000
S52ERR00 DC    A(NUCRSN60)        DIVIDES EXCEPTION BECAUSE    @DY45190 00377000
***                               TOD-CLOCK MODIFIED WITH AR-TIME-CMD   00378000
*                                                              @D35EDJO 00379000
S52DCONV DC    F'10000'           10000 FOR DIVIDE             @DA28086 00380000
         DROP  R6                 DISP,R6                      @D35EDJO 00381000
         DROP  R7                 TIQE,R7                      @D64ADVB 00382000
         DROP  R8                                              @D64ADOW 00383000
         DROP  RB                 SVEARA,R8                    @D35EDJO 00384000
         DROP  RA                                              @D35EDJO 00385000
         DROP  RC                                              @D64ADOW 00386000
         DROP  RD                 BASE REGISTER                @D35EDJO 00387000
         EJECT                                                          00388000
*********************************************************************** 00389000
*                                                                       00390000
*        SVC 34 : GETIME MACRO                                          00391000
*                                                                       00392000
*********************************************************************** 00393000
         USING DISP,R6                 DECLARE BASE            @D36ZDOW 00394000
         USING SVC34,RD                DECLARE BASE            @D14CDOW 00395000
SVC34    DS    0H                      GETIME SVC              @D350DOW 00396000
         USING TCBADR,RA               DECLARE BASE            @D36ZDOW 00397000
         L     R8,TCBSAVE         GET PROPER SAVE AREA ADDRESS @D36ZDOW 00398000
         USING SVEARA,R8                                       @D35EDJO 00399000
         L     R2,SVEPSW2         LOAD ADDR FROM OLD PSW                00400000
         AMODESW SET,AMODE=31,WR=(R5) GET TO 31 BIT MODE       @D52VDOW 00401000
         MVC   PARIND(L1),D1(R2)  MOVE PARAMETER LIST                   00402000
         CLI   D0(R2),NEWMACRO    TEST FOR NEW GETIME                   00403000
         BE    SVC34A10           BRANCH IF NEW GETIME                  00404000
         AL    R2,F8              UPDATE RETURN ADDR           @KX40251 00405000
         MVI   PARIND,ZERO        CREATE DEFAULT PARAM.                 00406000
SVC34A10 DS    0H                                                       00407000
         AL    R2,F2              UPDATE RETURN ADDR           @KX40251 00408000
*        AFTER THIS POINT NO PF MUST OCCUR                              00409000
         AMODESW SET,AMODE=24,WR=(R5) BACK TO 24 BIT MODE      @D52VDOW 00410000
         ST    R2,SVEPSW2         STORE UPDATED ADDR                    00411000
         L     R5,CRADDR          PICK UP ADDR OF COMREG                00412000
         USING COMREG,R5          DECLARE BASE                 @DM11453 00413000
         TM    PARIND,CLOCKVAL    CLOCK VALUE GIVEN            @D3CZDOW 00414000
         BNO   TSTTODBT                                        @D3CZDOW 00415000
         SRDL  R0,L12             CLOCK IN MICRO-SECONDS       @D3CZDOW 00416000
         STM   R0,R1,CLOCK                                     @D3CZDOW 00417000
         CLC   CLOCK,TEMPMIDN     CLOCK LOWER THAN LAST TEMP   @DA40242 00418000
         BL    PROCESS2           MIDNIGHT? IF YES DONT USE    @DA40242 00419000
         LM    R2,R3,TEMPMIDN     GET OLD TEMPORARY MIDNIGHT   @DA40242 00420000
         B     PROCESS1                                        @DA40242 00421000
TSTTODBT DS    0H                 ENTRY FOR MVS-TIME MACRO     @D64ADVB 00422000
*                                 PROCESSING                            00423000
*SGLINK TSTTODBT,S,INPUT=(R5:COMREG,R6:RETURN,R8:SA,RA:TCB,RD:BASE),   *00424000
               OUTPUT=(R0,R1:TIME,RE,RF:DATE),WORK=(R0-R5,R9,RE,RF)     00425000
         SPACE                                                          00426000
*********************************************************************** 00427000
* T.O.D SUPPORT IS ACTIVE. STORE THE T.O.D CLOCK                      * 00428000
*********************************************************************** 00429000
STCLOCK  STCK  CLOCK              STORE CLOCK                           00430000
         BE    PROCESS            GO ON IF CLOCK IN SET STATE           00431000
         SPACE                                                          00432000
*********************************************************************** 00433000
* T.O.D SUPPORT IS DORMANT. RETURN WITH ZEROES                        * 00434000
*********************************************************************** 00435000
NOTODEX  EQU   *                                                        00436000
         SR    R1,R1              ZERO REGISTER                         00437000
         B     EXITTOD            EXIT IF NO TOD SUPPORT                00438000
         SPACE                                                          00439000
*********************************************************************** 00440000
* CALCULATE T.O.D FOR GREENWICH MEAN TIME (GMT) IN MICROSECONDS       * 00441000
* CALCULATE THE DAY DIFFERENCE FROM THE LATEST DATE                   * 00442000
*********************************************************************** 00443000
PROCESS  LM    R0,R1,CLOCK        LOAD CLOCK INTO 2 REGS                00444000
         STM   R0,R1,XSAVCLCK     SAVE CLOCK VALUE             @D64ADVB 00445000
         SRDL  R0,L12             CLOCK IN MICRO-SECONDS                00446000
         STM   R0,R1,CLOCK        STORE CLOCK                           00447000
PROCESS2 EQU   *                                               @D3CZDOW 00448000
         LM    R2,R3,MIDNIGHT     LOAD MIDNIGHT-VALUE                   00449000
         CLC   CLOCK,MIDNIGHT     CLOCK LOWER THAN MIDNIGHT?   @DA40242 00450000
         BNL   PROCESS1           NO, GO TO CALCULATE TIME/DATE@DA40242 00451000
         SLR   R2,R2              YES, CLEAR REGS TO PREVENT   @DA40242 00452000
         LR    R3,R2              INCORR USAGE OF MIDNIGHT VAL @DA40242 00453000
PROCESS1 EQU   *                                               @D3CZDOW 00454000
         STM   R2,R3,MIDSAVE      MIDNIGHT INPUT FOR DATEGEN   @D3CZDOW 00455000
         SLR   R1,R3              CALCULATE THE                         00456000
         BC    CARRY,SUBMIDHI     * TIME-OF-DAY                         00457000
         BCTR  R0,R0              * IN MICRO-SECONDS                    00458000
SUBMIDHI SR    R0,R2              * FOR GMT (MODULO DAY)                00459000
         LM    R2,R3,DAYVALUE     LOAD VALUE OF 1 DAY                   00460000
         SR    R4,R4              CLEAR COUNTER                         00461000
LOOPTOD  SLR   R1,R3              CALCULATE THE                         00462000
         BC    CARRY,SUBDAYHI     * TIME-OF-DAY BY                      00463000
         BCTR  R0,R0              * SUBTRACTING                         00464000
SUBDAYHI SR    R0,R2              * 1 DAY-VALUE                         00465000
         LA    R4,D1(R4)          UPDATE DAY-COUNT                      00466000
         BNL   LOOPTOD            LOOP IF POSITIVE                      00467000
         BCTR  R4,R0              CALCULATE DAY DIFF                    00468000
         ALR   R1,R3              TIME DIFFERENCE                       00469000
         BC    NOCARRY,ADDAYHI    * PLUS DAY-VALUE                      00470000
         AH    R0,H1              * GIVES TOD FOR GMT          @D34SDAP 00471000
ADDAYHI  AR    R0,R2              * IN MICRO SECONDS                    00472000
         SPACE                                                          00473000
*********************************************************************** 00474000
*   - CALCULATE NEW MIDNIGHT VALUE (GMT ONLY)                         * 00475000
*   - CALCULATE T.O.D FOR GMT IN TU'S                                 * 00476000
*   - CALCULATE SYSTEM LOCAL T.O.D IN TU'S OR                         * 00477000
*   - JOB LOCAL T.O.D IN TU'S (IF // ZONE)                            * 00478000
*   - UPDATE SYSTEM DATE (LOCAL)                                      * 00479000
*   - UPDATE JOB DATE (IF NO // DATE)                                 * 00480000
*   - UPDATE GREENWICH DATE                                           * 00481000
*********************************************************************** 00482000
UPDMIDN  ST    R4,SAVEDAY         SAVE DAY DIFFERENCE                   00483000
         LM    R2,R3,CLOCK        LOAD CLOCK IN MICROSEC                00484000
         SLR   R3,R1              CALCULATE THE NEW GMT                 00485000
         BC    CARRY,SUBCLKHI     * MIDNIGHT-VALUE                      00486000
         BCTR  R2,R0              * BY SUBTRACTING TOD                  00487000
SUBCLKHI SR    R2,R0              * FROM CLOCK-VALUE                    00488000
         SPACE                                                          00489000
*********************************************************************** 00490000
*        IN ORDER TO GET THE TIME-OF-DAY IN TIMER UNITS IN REGISTERS  * 00491000
*        R0 AND R1 THE CURRENT VALUE IS MULTIPLIED FIRST              * 00492000
*        BY 3 AND THEN DIVIDED BY 10000 INSTEAD OF DIVIDED BY 3333    * 00493000
*        WHICH SHOULD HAVE GIVEN A LESS ACCURATE RESULT.              * 00494000
*********************************************************************** 00495000
         SPACE                                                          00496000
         STM   R0,R1,CLOCK        SAVE ELLAPSED TOD IN MICRO SEC        00497000
         STM   R2,R3,TEMPMIDN     SAVE MIDNIGHT IN MICRO SEC   @D3CZDOW 00498000
         LA    RF,D2              INITIALIZE REG                        00499000
CALTULP  AL    R1,CLOCK+4         ADD RIGHT PART OF CLOCK VAL           00500000
         BC    NOCARRY,ADDCLHI    BRANCH IF NO CARRY                    00501000
         AH    R0,H1              ADJUST BY 1                  @D34SDAP 00502000
ADDCLHI  A     R0,CLOCK           ADD LEFT PART OF CLOCK VAL            00503000
         BCT   RF,CALTULP         LOOP UNTIL ZERO                       00504000
         D     R0,DIVCONS2        CONVERT TOD TO TU'S                   00505000
         D     R2,DIVCONS1        DIVIDE BY MICRO SECONDS OF ..         00506000
         D     R2,DIVCONS2           ..... ONE DAY                      00507000
         BAS   R9,DATEGMT         CONVERT GMT DATE                      00508000
         MVC   GMTSAVEA,WDATEFLD  SAVE SYSTEMDATE (GMT)        @DY45190 00509000
         TM    PARIND,CLOCKVAL    CLOCK VALUE INPUT PARAMETER  @D3CZDOW 00510000
         BO    GMTSKIP                                         @D3CZDOW 00511000
         MVC   GMTDATE(6),WDATEFLD MOVE SYSTEM DATE            @DY45190 00512000
         MVC   GMTDATE+6(3),WDATEFDD MOVE DDD TO DATE          @DY45190 00513000
         MVC   SYSTEMCC(2),WDATEFLC MOVE CENTURY               @DY45190 00514000
GMTSKIP  EQU   *                                               @D3CZDOW 00515000
         ICM   RF,M12,SYSTEMZN    LOAD SYSTEM ZONE                      00516000
         BAS   R9,ZONECORR        PERFORM ZONE CORRECTION               00517000
         ST    RF,LOCTODTU        STORE LOCAL TOD IN TU'S               00518000
*********************************************************************** 00519000
* UPDATE THE SYSTEM DATE IN THE COMMUNICATION REGION                  * 00520000
*********************************************************************** 00521000
         BAS   R9,DATEGEN         CONVERT MIDNIGHT TO DATE     @D3CZDOW 00522000
         BAS   R9,SETSYSDT        SET SYSTEM DATE              @D3CZDOW 00523000
         CLC   SYSTEMZN(2),JOBZON BRANCH IF                    @D3CZDOW 00524000
         BNE   JOBZNCOR           * JOBZONE NE SYSTEM ZONE     @D3CZDOW 00525000
         TM    JCSW4,DATEBIT      // DATE STATEMENT READ       @D3CZDOW 00526000
         BO    TESTPARM           BRANCH IF YES                @D3CZDOW 00527000
         B     SETJOBDT           GO TO UPDATE JOBDATE         @D3CZDOW 00528000
JOBZNCOR EQU   *                                               @D3CZDOW 00529000
         L     R4,SAVEDAY         LOAD DAY DIFFERENCE          @D3CZDOW 00530000
         ICM   RF,M12,JOBZON      LOAD JOBZONE                 @DM11453 00531000
         BAS   R9,ZONECORR        PERFORM ZONE CORRECTION               00532000
         ST    RF,LOCTODTU        SAVE AND OVERWRITE TOD                00533000
         TM    JCSW4,DATEBIT      // DATE STATEMENT READ       @DM11453 00534000
         BO    TESTPARM           BRANCH IF YES                         00535000
         BAS   R9,DATEGEN         CONVERT MIDNIGHT TO DATE              00536000
SETJOBDT EQU   *                                                        00537000
         TM    PARIND,CLOCKVAL    CLOCK VALUE INPUT PARAMETER  @D3CZDOW 00538000
         BO    TESTPARM           SKIP UPDATE OF JCL FIELDS    @D3CZDOW 00539000
         MVC   JOBDATE(2),WDATEFL1  INSERT THE UPDATED         @DY45190 00540000
         MVC   JOBDATE+3(2),WDATEFL2    * JOBDATE IN FORMAT    @DY45190 00541000
         MVC   JOBDATE+6(2),WDATEFLY    * MMDDYY OR DDMMYY     @DY45190 00542000
         MVI   JOBDATE+8,C'/'           * DELIMITER            @D61NDOW 00543000
         MVC   JOBDATE+9(2),WDATEFLC    * AND CENTURY          @DY45190 00544000
         SPACE                                                          00545000
*********************************************************************** 00546000
* EXIT FROM SVC34 ROUTINE                                             * 00547000
*********************************************************************** 00548000
TESTPARM EQU   *                                                        00549000
         LM    RE,RF,GMTSAVEA     DATE (GMT) INTO R14/R5       @DY45190 00550000
         TM    PARIND,MICROSEC    ELLAPSED TOD (GMT) WANTED    @D3CZDOW 00551000
         BO    EXITMSEC                                        @D3CZDOW 00552000
         TM    PARIND,GMT         TEST FOR GMT                          00553000
         BO    TESTPRM3           BRANCH IF YES TO EXIT        @D3CZDOW 00554000
         LM    RE,RF,WDATEFLD     DATE (LOCAL) INTO R14/R15    @DY45190 00555000
         SLR   R0,R0              SPECIAL INTERFACE TO GET     @D52VDOW 00556000
         ICM   R0,7,WDATEFDD      ... DDD FOR $$RAST01(ILVRAS01@DY45190 00557000
         L     R1,LOCTODTU        GET LOCAL TOD                         00558000
TESTPRM3 EQU   *                                               @D3CZDOW 00559000
         TM    PARIND,CLOCKVAL    CLOCK VALUE INPUT PARAMETER  @D3CZDOW 00560000
         BO    TESTPRM1                                        @D3CZDOW 00561000
         MVC   MIDNIGHT,TEMPMIDN  SET MIDNIGHT                          00562000
         B     EXITTOD                                         @D3CZDOW 00563000
TESTPRM1 EQU   *                                               @D3CZDOW 00564000
         STM   RE,R0,SVER0E                                    @D52VDOW 00565000
EXITTOD  ST    R1,SVER01          OVERRIDE  REG 1 IN SAVE-AREA          00566000
         BR    R6                 RETURN                                00567000
EXITMSEC EQU   *                                               @D3CZDOW 00568000
         LM    R0,R1,CLOCK        ELLAPSED TOD IN MIC SEC      @D3CZDOW 00569000
         SLDL  R0,L12             MICRO SEC TO BIT POS 51      @D3CZDOW 00570000
         TM    PARIND,CLOCKVAL    CLOCK VALUE INPUT PARAMETER  @D3CZDOW 00571000
         BNO   EXITMSC1                                        @D3CZDOW 00572000
         STM   RE,RF,SVER0E                                    @D3CZDOW 00573000
         B     EXITMSC2                                        @D3CZDOW 00574000
EXITMSC1 EQU   *                                               @D3CZDOW 00575000
         MVC   MIDNIGHT,TEMPMIDN  SET MIDNIGHT                 @D3CZDOW 00576000
EXITMSC2 EQU   *                                               @D3CZDOW 00577000
         STM   R0,R1,SVER00                                    @D3CZDOW 00578000
         BR    R6                                              @D3CZDOW 00579000
         DROP  R5                 DROP STANDARD USING          @D35EDJO 00580000
         DROP  RA                                              @D35EDJO 00581000
         SPACE 2                                                        00582000
*                     ***********************                         * 00583000
*                     * S U B R O U T I N E *                         * 00584000
*********************************************************************** 00585000
*   - PUTS THE SYSTEM DATE INTO THE COMM REG (MMDDYYDDD OR DDMMYYDDD) * 00586000
*********************************************************************** 00587000
SETSYSDT EQU   *                                               @DA09594 00588000
         TM    PARIND,CLOCKVAL    CLOCK VALUE INPUT PARAMETER  @D31BDOW 00589000
         BOR   R9                 SKIP COMREG UPDATE           @D31BDOW 00590000
         LA    R3,&NPART          GET NUMBER OF STATIC PARTITIO@D61NDOW 00591000
         TM    SYSFLAG2,IPLBIT    IPL IN PROCESS               @D61NDOW 00592000
         BO    SETSYS05           YES, UPDATE ONLY STAT PART'S @D61NDOW 00593000
         L     R3,IJBCLIM         GET LIMITS TABLE             @D51IDOW 00594000
         USING CLIM,R3                                         @D51IDOW 00595000
         LH    R3,CSPART          NUMBER OF PARTITIONS         @D51IDOW 00596000
         DROP  R3                                              @D51IDOW 00597000
SETSYS05 DS    0H                                              @D61NDOW 00598000
         SLL   R3,2                                            @D51IDOW 00599000
         A     R3,APCBATAB        GET LAST PCB ADDR            @D51IDOW 00600000
SETSYS10 L     R4,0(,R3)          GET PCB ADDR                 @D51IDOW 00601000
         LTR   R4,R4              PARTITION DEFINED            @D51IDOW 00602000
         BZ    SETSYS30           NO, GO TO NEXT PCBATAB ENTRY @D51IDOW 00603000
         USING PCBADR,R4                                       @D51IDOW 00604000
         L     R4,PCECOMRA        GET COMREG ADDRESS           @D51IDOW 00605000
         USING COMREG,R4          DEFINE BASE                  @DA09594 00606000
         MVC   SYSDATE(6),WDATEFLD SET SYSTEM DATE             @DY45190 00607000
         MVC   SYSDATE+6(3),WDATEFDD ... AND DAY VALUE         @DY45190 00608000
         MVC   SYSCENT(2),WDATEFLC ... AND CENTURY             @DY45190 00609000
         DROP  R4                                              @D51IDOW 00610000
SETSYS30 S     R3,F4                                           @DA09594 00611000
         C     R3,APCBATAB        ALL PARTITIONS PROCESSED     @DA09594 00612000
         BNL   SETSYS10           NO, PROCESS NEXT ONE         @D61NDOW 00613000
         BR    R9                 RETURN                                00614000
         SPACE                                                          00615000
*                     ***********************                         * 00616000
*                     * S U B R O U T I N E *                         * 00617000
*********************************************************************** 00618000
*   - CONVERTS T.O.D FOR GMT INTO T.O.D FOR THE ZONE GIVEN IN RF      * 00619000
*   - CALCULATES THE DAY DIFFERENCE FROM LATEST DATE FOR THAT ZONE    * 00620000
*********************************************************************** 00621000
ZONECORR SRA   RF,D16             SHIFT TO GET ZONE LOW                 00622000
         M     RE,MINTU           IGNORE EVEN REG - VALUE IS 0 OR -1    00623000
         AR    RF,R1              ADD TOD (GMT) TO ZONE                 00624000
         L     RE,DAYTU           DAY VALUE IN TU'S                     00625000
         LTR   RF,RF              TEST IF ZONE NEGATIVE                 00626000
         BL    NEGZONE            BRANCH IF SO                          00627000
         LA    R4,D1(R4)          UPDATE DAY DIFFERENCE                 00628000
         SR    RF,RE              SUBTRACT DAY VALUE                    00629000
         BNLR  R9                 RETURN IF NOT MINUS          @D367DOW 00630000
NEGZONE  AR    RF,RE              ADD DAY VALUE TO GET TOD              00631000
         BCTR  R4,R0              UPDATE DAY DIFFERENCE                 00632000
         BR    R9                 RETURN                                00633000
         SPACE                                                          00634000
*                     ***********************                         * 00635000
*                     * S U B R O U T I N E *                         * 00636000
*********************************************************************** 00637000
*   - CONVERTS THE OLD GMT MIDNIGHT VALUE INTO THE ACTUAL DATE        * 00638000
*     IN THE FORM DDMMYY OR MMDDYY UNPACKED FORMAT                    * 00639000
*   - SAVES THE BINARY VALUE OF YYDDD IN THE FIELD 'DDDYYFLD'         * 00640000
*********************************************************************** 00641000
DATEGEN  EQU   *                                                        00642000
         LM    R2,R3,MIDSAVE      LOAD MIDNIGHT VALUE          @D3CZDOW 00643000
         D     R2,DIVCONS1        DIVIDE BY 100 DAYS IN SECONDS         00644000
         D     R2,DIVCONS2        AND BY 10000 TO GET NUMBER OF DAYS    00645000
*              DIVCONS1 IS 100 TIMES 86400 (NUMBER OF SECONDS IN 1 DAY) 00646000
* THIS CONSTANT IS USED TO GET QUOTIENT IN REG R3                       00647000
* REG R2 WILL CONTAIN ZEROES (MIDNIGHT IS WHOLE NUMBER OF DAYS)         00648000
* THEN THESE REGISTERS ARE DIVIDED BY 10000 (DIVCONS2) TO GET           00649000
* TOTAL NUMBER OF DAYS IN REG R3 IN THE FORM DDDDD, WHICH IS            00650000
* CONVERTED INTO YYDDD IN THE ROUTINE BELOW                             00651000
*                                                                       00652000
         AR    R3,R4              ADJUST BY DAY DIFFERENCE              00653000
DATEGMT  DS    0H                                                       00654000
         C     R3,DAYCORR         DATE EALIER MARCH 1, 1900    @D64ADOW 00655000
         BL    DATEGMT1           YES, --->                    @D64ADOW 00656000
         LA    R3,D1(R3)          SIMULATE 1900 LEAP YEAR               00657000
DATEGMT1 DS    0H                                                       00658000
         D     R2,FOURYEAR        DIVIDE BY DAYS IN 4 YEARS             00659000
         SLL   R3,D2              MULTIPLY YEARS BY 4                   00660000
         LA    R2,D1(R2)          ADD 1 TO GET VALID DATE               00661000
         LA    RF,LEAPYEAR        INITIALIZE REG BY 366                 00662000
LOOPDAYS CR    R2,RF              BRANCH IF NOT MORE DAYS               00663000
         BNH   DAYSEXIT           * THAN 366 (OR 365 LATER)             00664000
         LA    R3,D1(R3)          ADD 1 TO YEAR VALUE                   00665000
         SR    R2,RF              SUBTRACT 366 OR 365                   00666000
         LA    RF,NOLPYEAR        INITIALIZE REG BY 365                 00667000
         B     LOOPDAYS           RETURN TO LOOP (MAX 3 TIMES)          00668000
DAYSEXIT MVC   WDATEFLC,JH19      INIT 19TH CENTURY            @DY45190 00669000
         CLM   R3,3,SECITEM       # OF YEARS LARGER 100        @D67QDOW 00670000
         BL    YEAROK             NO,                          @D31LDOW 00671000
         SH    R3,SECITEM         SIGNFICANT LAST TWO CHARACTER@D31LDOW 00672000
         MVC   WDATEFLC,JH20      20TH CENTURY                 @DY45190 00673000
YEAROK   STM   R2,R3,DDDYYFLD     SAVE YY AND DDD              @D31LDOW 00674000
         SR    RF,RF              CLEAR WORK REGISTER                   00675000
         MVI   FEBRUARY,FEBNOLP   SET FEBRUARY TO 28                    00676000
         TM    YYFLD,LEAP         BRANCH TO SKIP SETTING 29             00677000
         BNZ   INITOK             * IF NOT LEAP YEAR                    00678000
         MVI   FEBRUARY,FEBLEAP   SET FEBRUARY TO 29                    00679000
INITOK   LA    RE,ONE             INITIALIZE MONTH REGISTER             00680000
LOOPMONT IC    RF,MONTHTAB(RE)    PICK UP DAY VALUE                     00681000
         CR    R2,RF              COMPARE WITH DDD                      00682000
         BNH   MONTHEXT           BRANCH IF MONTH FOUND                 00683000
         SR    R2,RF              SUBTRACT DAY VALUE                    00684000
         LA    RE,D1(RE)          INCREASE MONTH VALUE                  00685000
         B     LOOPMONT           BRANCH TO LOOP                        00686000
MONTHEXT L     R3,DDDYYFLD+4      PICK UP YEAR VALUE                    00687000
         USING COMREG,R5          DEFINE BASE                  @D351DOW 00688000
         TM    LTACT,DDMMYY       IS IT DMY                    @D14CDOW 00689000
         DROP  R5                 DROP STANDARD USING          @D351DOW 00690000
         BO    DMYDATE                                         @D351DOW 00691000
         MH    RE,DIVCONSH        MAKE VALUE MM0000                     00692000
         MH    R2,SECITEM         MAKE VALUE DD00                       00693000
         B     MDYDATE                                         @D351DOW 00694000
DMYDATE  EQU   *                                               @D351DOW 00695000
         MH    R2,DIVCONSH        MAKE VALUE DD0000                     00696000
         MH    RE,SECITEM         MAKE VALUE MM00                       00697000
MDYDATE  EQU   *                                               @D351DOW 00698000
         AR    R3,RE              VALUE IS MM00YY / 00MMYY              00699000
         AR    R3,R2              VALUE IS MMDDYY / DDMMYY              00700000
         CVD   R3,CONVERTD        CONVERT TO DECIMAL                    00701000
         OI    CONVERTD+7,FSIGN   CORRECT SIGN                          00702000
         UNPK  WDATEFLX,CONVERTD  MAKE CHARACTER IMAGE         @DY45190 00703000
         L     R2,DDDYYFLD        LOAD NUMBER OF DAYS          @DY45190 00704000
         CVD   R2,CONVERTD        CONVERT TO CHARACTER-IMAGE   @DY45190 00705000
         OI    CONVERTD+7,FSIGN   CORRECT SIGN                 @DY45190 00706000
         UNPK  WDATEFDD,CONVERTD  SAVE NUMBER OF DAYS          @DY45190 00707000
         BR    R9                 RETURN                                00708000
         SPACE 3                                               @D36ZDJO 00709000
*   CONSTANTS FOR THE GETIME SVC                               @D36ZDJO 00710000
*                                                              @D36ZDJO 00711000
MIDNIGHT DC    D'0' .             MIDNIGHT IN MICROSECS.(GMT)           00712000
CONVERTD DC    D'0' .             CONVERT DATE TO DECIMAL               00713000
XSAVCLCK DC    D'0' .             SAVED CLOCK VALUE            @D64ADVB 00714000
DAYVALUE DC    FL8E9'86.4' .      DAY VALUE IN MICRO SECS.              00715000
TEMPMIDN DC    D'0' .             TEMPORARY MIDNIGHT FIELD              00716000
MIDSAVE  DC    D'0' .             MIDNIGHT FROM LATEST SVC34   @D3CZDOW 00717000
DDDYYFLD DC    D'0'               DAYNUMBER AND YEARNUMBER              00718000
YYFLD    EQU   DDDYYFLD+7 .       BYTE TO TEST LEAP YEAR                00719000
JH19     DC    C'19'              19TH CENTURY                 @D52VDOW 00720000
JH20     DC    C'20'              20TH CENTURY                 @D52VDOW 00721000
SECITEM  DC    H'100' .           DIVISOR VALUE                         00722000
DAYCORR  DC    A(59)              DAY CORRECTION BECAUSE 1900  @D64ADOW 00723000
***                               IS NO LEAP YEAR                       00724000
LOCTODTU DC    F'0' .             LOCAL TIME OF DAY IN TU'S             00725000
MINTU    DC    FE3'18' .          TIMER UNITS PER MINUTE                00726000
DAYTU    DC    FE4'2592' .        TIMER UNITS PER DAY                   00727000
DIVCONS1 DC    FE5'86.4' .        SECONDS IN 100 DAYS                   00728000
FOURYEAR DC    F'1461' .          DAYS PER BLOCK OF 4 YEARS             00729000
SAVEDAY  DC    F'0' .             SAVE FLD FOR DAY DIFF. (GMT)          00730000
TUDIVSOR DC    F'3333' .          DIVISOR TO GET TU'S FROM MICROSECONDS 00731000
***                                                                     00732000
DIVCONS2 DC    F'10000'   ***     DIVISOR VALUE OF 10000                00733000
         ORG   *-2        |||     * RESET LOCATION CNTR TO GET          00734000
DIVCONSH DC    H'10000'   VVV     * SAME VALUE IN A HALFWORD            00735000
***                                                                     00736000
MONTHTAB DC    AL1(0,31,28,31,30,31,30,31,31,30,31,30,31) DAYS/MONT     00737000
FEBRUARY EQU   MONTHTAB+2 .       OFFSET IN TABLE                       00738000
PARIND   DC    X'00'              GETIME PARAMETER CODE STORED          00739000
GMT      EQU   X'01'              INDICATES GMT                @D3CZDOW 00740000
CLOCKVAL EQU   X'08'              INPUT IS A CLOCK VALUE       @D3CZDOW 00741000
MICROSEC EQU   X'04'              RETURN ELLAPSED TOD IN MICSEC@D3CZDOW 00742000
         EJECT                                                          00743000
DATEAREA DSECT                    COMMON LAYOUT OF LOCAL AND   @DY45190 00744000
***                               ... GMT DATE                          00745000
DATEFLD1 DS    CL2                MM OR DD                     @DY45190 00746000
DATEFLD2 DS    CL2                DD OR MM                     @DY45190 00747000
DATEFLDY DS    CL2                YEAR                         @DY45190 00748000
DATEFLDC DS    CL2                CENTURY                      @DY45190 00749000
DATEFLDD DS    CL3                DAYS                         @DY45190 00750000
IJBSUP50 CSECT                    RESUME CSECT                 @DY45190 00751000
         DS    0F                 SAME LAYOUT AS DSECT DATEAREA         00752000
GMTSAVEA DS    0CL11              SAVE GMT DATE                @D51IDOW 00753000
GMTSAVE1 DC    XL2'0000'          MM OR DD                     @DY45190 00754000
GMTSAVE2 DC    XL2'0000'          DD OR MM                     @DY45190 00755000
GMTSAVEY DC    XL2'0000'          YEAR                         @DY45190 00756000
GMTSAVEC DC    XL2'0000'          CENTURY                      @DY45190 00757000
GMTSAVDD DC    XL3'000000'        DAYS IN CHARACTER IMAGE      @DY45175 00758000
         DS    0F                 SAME LAYOUT AS DSECT DATEAREA         00759000
WDATEFLD DS    0CL11              TEMP SAVE FOR SYSTEM DATE    @DY45190 00760000
WDATEFLX DS    0CL6               MMDDYY OR DDMMYY             @DY45190 00761000
WDATEFL1 DC    XL2'0000'          MM|DD IN CHARACTER IMAGE     @DY45190 00762000
WDATEFL2 DC    XL2'0000'          DD|MM IN CHARACTER IMAGE     @DY45190 00763000
WDATEFLY DC    XL2'0000'          YEAR IN CHARACTER IMAGE      @DY45190 00764000
WDATEFLC DC    XL2'0000'          CENTURY IN CHARACTER IMAGE   @DY45190 00765000
WDATEFDD DC    XL3'000000'        DAYS IN CHARACTER IMAGE      @DY45190 00766000
         DS    0H                                                       00767000
         SPACE 2                                               @D36ZDJO 00768000
         DROP  R6                                              @D36ZDJO 00769000
         DROP  R8,RD                                           @D36ZDJO 00770000
         EJECT                                                          00771000
*---------------------------------------------------------------------* 00772000
*  ROUTINE NAME: MVS TIME SERVICE - VSE/ESA VERSION 2 RELEASE 2         00773000
*  FUNCTION:                                                            00774000
*     -  MVS-TIME FUNCTION                                              00775000
*        PROVIDES CURRENT TOD                                           00776000
*                                                                       00777000
*  AMODE: PRIMARY ONLY                                                  00778000
*  ENTRY POINTS                                                         00779000
*     -  MVSPCTIM  (LINKAGE=SYSTEM)                                     00780000
*     -  MVSGTIME  (LINKAGE=SVC)                                        00781000
*  INPUT:                                                               00782000
*     LINKAGE = SYSTEM                                                  00783000
*        R1  - ADDR OF PARAMETER LIST                                   00784000
*              PARAMETER LIST:                                          00785000
*              BYTE   0        RESERVED                                 00786000
*                     1        RESERVED                                 00787000
*                     2        DATE FORMAT                              00788000
*                              B'......00'  : YYYYDDD                   00789000
*                              B'......01'  : MMDDYYYY                  00790000
*                              B'......10'  : DDMMYYYY                  00791000
*                              B'......11'  : YYYYMMDD                  00792000
*                     3        TIME FORMAT                              00793000
*                              B'1.......'  : GMT SPECIFIED             00794000
*                              B'.1......'  : ERRET SPECIFIED           00795000
*                              B'.....000'  : TU                        00796000
*                              B'.....001'  : BIN (UNITS 0.01)          00797000
*                              B'.....010'  : DEC (HHMMSS....)          00798000
*                              B'.....011'  : MIC                       00799000
*                              B'.....100'  : STCK (TOD OUTPUT)         00800000
*                     4 - 11   RESERVED                                 00801000
*                    12 - 19   OUTPUT TIME                              00802000
*                    20 - 27   OUTPUT DATE                              00803000
*        R4  - BASE OF ROUTINE                                          00804000
*     LINKAGE = SVC                                                     00805000
*        R0  - BYTE 0-2        RESERVED                                 00806000
*              BYTE 3          TIME FORMAT                              00807000
*        R1  -                 OUTPUT AREA (MIC AND STCK)               00808000
*---------------------------------------------------------------------* 00809000
*                                                                       00810000
         USING DISP,R6                                         @D64ADVB 00811000
         USING TCBADR,RA          ESTABLISH ADDR TO TCB        @D64ADVB 00812000
         USING SVEARA,RB          ESTABLISH ADDR TO USER'S SA  @D64ADVB 00813000
MVSGTIME DS    0H                 ENTRY POINT FOR LINKAGE=SVC  @D64ADVB 00814000
         BASR  RD,0               GET BASE                     @D64ADVB 00815000
         USING *,RD                                            @D64ADOW 00816000
         L     RD,MVSSVC34                                     @D64ADOW 00817000
         USING SVC34,RD           ESTABLISH ADDR OF ROUTINE    @D64ADVB 00818000
         TM    SVEPSW,X03         ENABLED FOR EXT AND I/O INTER@D64ADOW 00819000
         BNO   MVSERR06           NO, ---> CANCEL              @D64ADOW 00820000
         TM    SVEPSW+2,X40       IS IT ACC REG MODE           @D64ADOW 00821000
         BO    MVSERR04           YES, ---> CANCEL             @D64ADOW 00822000
         LA    RC,SVCWORKA        SET PTR TO A                 @D64ADOW 00823000
***                               ... TEMPORARY PARAMETER LIST          00824000
         L     R1,SVER01          PUT TIME FORMAT TO INTERNAL  @D64ADVB 00825000
         ST    R1,0(,RC)          ... PARAMETER LIST           @D64ADOW 00826000
         TM    SVER01+3,X07       CLOCK FORMAT = TU            @D64ADVB 00827000
         BZ    MVSERR02           YES, ---------> NOT SUPPORTED@D64ADVB 00828000
         TM    SVER01+3,X03       CLOCK FORMAT = STCK OR MIC   @D64ADOW 00829000
         BM    MVSGTI40           NO, SKIP VALIDATION          @D64ADOW 00830000
         TM    TCBEXFLG,TCBEXAM   CALLER IN 31-BIT MODE        @D64ADOW 00831000
         BZ    MVSGTI20           NO,                          @D64ADOW 00832000
         LA    R1,MVSGTI20                                     @D64ADOW 00833000
         O     R1,BIT0OMSK        FORCE 31 BIT MODE            @D64ADOW 00834000
         BSM   0,R1               ...                          @D64ADOW 00835000
MVSGTI20 DS    0H                                              @D64ADOW 00836000
         L     R1,SVER00          GET ADDR OF OUTPUT AREA      @D64ADOW 00837000
         LA    R2,7(,R1)          ... END OF OUTPUT AREA       @D64ADOW 00838000
         LH    R5,PIK             RESQUESTORS PIK              @D64ADOW 00839000
         BAS   R8,VALWRITE        VALIDATE ADDR                @D64ADOW 00840000
*SGLINK VALWRITE,INPUT=(R1,R2,R5,R6,R8),OUTPUT=R5,WORK=(R2)             00841000
         B     MVSERR01           ADDRESS INVALID              @D64ADOW 00842000
         B     MVSERR01           ADDRESS INVALID              @D64ADOW 00843000
*        B     *+4                ADDRESS VALID                @D64ADOW 00844000
*END OF BRANCH TABLE                                                    00845000
         DROP  R6                                              @D64ADOW 00846000
MVSGTI40 DS    0H                                              @D64ADVB 00847000
         SLR   RF,RF              INPUT NO ERROR               @D64ADOW 00848000
         L     R5,MVSMSKSV        GET UNUSED BITS IN WORKREG   @D64ADOW 00849000
         L     R7,AMVSXTIM        CALL COMMON ROUTINE          @D64ADVB 00850000
***                               ... AND ENTER 31 BIT MODE             00851000
         BASSM R7,R7                                           @D64ADVB 00852000
*SGLINK MVSTIMRT,INPUT=(R5,R7,RA,RC,RD,RF),OUTPUT=(R0,R1,RF),          *00853000
               WORK=(R2-R6,R8,R9,RE)                                    00854000
*                                 R0, R1 CONTAINS TIMER VALUE           00855000
         LTR   RF,RF              ANY ERROR                    @D64ADVB 00856000
         BNZ   MVSERR01           YES , INVALID ADDR           @D64ADVB 00857000
         ST    RF,SVER0F          SET RETC TO ZERO             @DY45037 00858000
         L     R3,SVER00          ADDR OF RETURN AREA          @D64ADVB 00859000
         USING XTIMPLST,RC                                     @D64ADVB 00860000
         TM    XTIMFCLO,X03       CLOCK FORMAT = STCK  OR MIC  @D64ADOW 00861000
         BM    MVSGTI60           NO,  --------->              @D64ADOW 00862000
         STM   R0,R1,0(R3)        PROVIDE CLOCK IN USER'S AREA @D64ADVB 00863000
         B     MVSGTI80           --------->                   @D64ADVB 00864000
MVSGTI60 DS    0H                                              @D64ADVB 00865000
         ST    R0,SVER00          PROVIDE CLOCK IN R0          @D64ADVB 00866000
MVSGTI80 DS    0H                                              @D64ADVB 00867000
         LM    R0,R1,XTIMDATE     GET DATE FORMAT=0YYYYDDD     @D64ADVB 00868000
         SRDL  R0,24              ISOLATE MILLENMIUM           @D64ADVB 00869000
         BCTR  R0,0                                            @D64ADVB 00870000
         SLL   R1,4               CLEAR CENTURY                @D64ADVB 00871000
         SRDL  R0,8                                            @D64ADVB 00872000
         O     R1,F15             MAKE BYTE 3 'XF'             @D64ADVB 00873000
         ST    R1,SVER01          PROVIDE DATE IN R1           @D64ADVB 00874000
         L     R6,DISPAD          LOAD DISPATCHER ADDR         @D64ADOW 00875000
         USING DISP,R6                                         @D64ADVB 00876000
         LA    RF,DISPMVS                                      @D64ADVB 00877000
         BR    RF                                              @D64ADOW 00878000
         SPACE 2                                                        00879000
         DROP  RA                 RESET ADDR OF TCB            @D64ADVB 00880000
         DROP  RB                 RESET ADDR OF SA             @D64ADVB 00881000
         DROP  RC                 RESET ADDR OF PARAMETER LIST @D64ADVB 00882000
         DROP  RD                 RESET ADDR OF ROUTINE        @D64ADVB 00883000
         EJECT                                                          00884000
MVSPCTIM DS    0H                 ENTRY POINT LINKAGE=SYSTEM   @D64ADVB 00885000
*SGLINK MVSPCTIM,S,INPUT=(R1,R4),OUTPUT(RF)                            *00886000
               WORK=(R0-RE)                                             00887000
         L     RD,LPPARM-LPA(,R4) GET BASE FROM PC'S           @D64ADVB 00888000
***                               ... LATENT AREA                       00889000
         USING SVC34,RD           ESTABLISH ADDR OF ROUTINE    @D64ADVB 00890000
         L     R6,DISPAD                                       @D64ADVB 00891000
         USING DISP,R6                                         @D64ADVB 00892000
         L     R6,ADISPSER        ADDR OF DISPSERV             @D64ADVB 00893000
         LA    R0,8               FCT CODE FOR SVC-LIKE STATE  @D64ADVB 00894000
         BASSM R7,R6                                           @D64ADVB 00895000
*SGLINK DISPSERV,INPUT=(R0,R6,R7),WORK=(R2,R3,R4)                       00896000
         L     RA,TCBPTR          ADDR CURRENT TCB             @D64ADVB 00897000
         USING TCBADR,RA          ESTABLISH ADDR TO TCB        @D64ADVB 00898000
         L     RB,TCBSAVE         ADDR OF SAVE AREA            @D64ADVB 00899000
         USING SVEARA,RB                                       @D64ADVB 00900000
         TM    SVEPSW2,SVEPAM31   CALLER IN 31-BIT MODE        @D64ADOW 00901000
         BZ    MVSPCT20           NO,                          @D64ADOW 00902000
         LA    R2,MVSPCT20                                     @D64ADOW 00903000
         O     R2,BIT0OMSK        FORCE 31 BIT MODE            @D64ADOW 00904000
         BSM   0,R2               ...                          @D64ADOW 00905000
MVSPCT20 DS    0H                                              @D64ADOW 00906000
         TM    SVEPSW+2,X40       CALLER IN AR-MODE            @D64ADOW 00907000
         BNO   MVSPCT40           NO                           @D64ADOW 00908000
         L     RF,TCBARSAV        GET ACCESS REGISTER SAVE AREA@D64ADOW 00909000
         OC    15*4(4,RF),15*4(RF) AR15 ZERO?                  @D64ADOW 00910000
         BNZ   MVSERR05           NO, CANCEL                   @D64ADOW 00911000
MVSPCT40 DS    0H                                              @D64ADOW 00912000
         SLR   RF,RF              INPUT NO ERROR               @D64ADOW 00913000
         LA    R2,15(,R1)         ADDR LIMITS OF OUTPUT AREA   @D64ADOW 00914000
         LH    R5,PIK             RESQUESTORS PIK              @D64ADOW 00915000
         L     R6,DISPAD                                       @D64ADVB 00916000
         BAS   R8,VALWRITE        VALIDATE ADDR                @D64ADOW 00917000
*SGLINK VALWRITE,INPUT=(R1,R2,R5,R6,R8),OUTPUT=R5,WORK=(R2)             00918000
         NOP   *                  ADDRESS INVALID - RC = 16    @D64ADOW 00919000
         LA    RF,16              ADDRESS INVALID - RC = 16    @D64ADOW 00920000
*        B     *+4                ADDRESS VALID                @D64ADOW 00921000
*END OF BRANCH TABLE                                                    00922000
         L     RC,SVER01          ADDR TO PARMLIST             @D64ADVB 00923000
         L     R5,MVSMSKPC        GET UNUSED BITS IN WORKREG   @D64ADOW 00924000
         L     R7,AMVSXTIM        GET ADDR OF COMMON ROUTINE   @D64ADVB 00925000
***                               ... AND ENTER 31 BIT MODE             00926000
         BASSM R7,R7                                           @D64ADVB 00927000
*SGLINK MVSTIMRT,INPUT=(R5,R7,RA,RC,RD,RF),OUTPUT=(R0,R1,RF),          *00928000
               WORK=(R2-R6,R8,R9,RE)                                    00929000
         LM    R0,R1,SVER00       ORIGINAL R0 , R1             @D64ADVB 00930000
         STM   RF,R1,ERARF        PROVIDE REGS 0, 1, F         @D64ADVB 00931000
         L     R6,ADISPSER        ADDR OF DISPSERV             @D64ADVB 00932000
         LA    R0,12              FCT CODE FOR SVC-LIKE RELEASE@D64ADVB 00933000
         SLR   R1,R1              ... AND                      @D64ADVB 00934000
         BASSM R7,R6              ... RETURN TO PC ISSUER      @D64ADVB 00935000
         SPACE                                                          00936000
         DROP  R6                 RESET ADDR OF DISP           @D64ADOW 00937000
         DROP  RA                 RESET ADDR OF TCB            @D64ADOW 00938000
         DROP  RB                 RESET ADDR OF SA             @D64ADOW 00939000
         DROP  RD                                              @D64ADOW 00940000
         EJECT                                                          00941000
         USING SVC34,RD                                        @D64ADOW 00942000
MVSERR06 DS    0H                                              @D64ADOW 00943000
         LA    R1,D2C5R421        CALLER NOT ENABLED FOR       @D64ADOW 00944000
***                               ... EXTERNAL AND I/O INTERRUPTS       00945000
         B     MVSERROR           --------->                   @D64ADOW 00946000
         SPACE                                                          00947000
MVSERR05 DS    0H                                              @D64ADOW 00948000
         LA    R1,D2C5R41E        PAR LIST NOT IN PRIM SPACE   @D64ADOW 00949000
         B     MVSERROR           --------->                   @D64ADOW 00950000
         SPACE                                                          00951000
MVSERR04 DS    0H                                              @D64ADOW 00952000
         LA    R1,D2C5R41D        CALLER IS IN ACC REG MODE    @D64ADOW 00953000
         B     MVSERROR           --------->                   @D64ADOW 00954000
         SPACE                                                          00955000
MVSERR02 DS    0H                                              @D64ADOW 00956000
         LA    R1,D2C5R53F        TU NOT SUPPORTED             @D64ADOW 00957000
         B     MVSERROR           --------->                   @D64ADOW 00958000
         SPACE                                                          00959000
MVSERR01 DS    0H                                              @D64ADVB 00960000
         LA    R1,D10BRNO         GET SYSTEM COMPL CODE 10B    @D64ADOW 00961000
         SPACE                                                          00962000
MVSERROR DS    0H                                              @D64ADVB 00963000
         LM    R2,R3,MVSGTIMN     GET MACRO NAME               @D64ADOW 00964000
         SLR   R6,R6              INDICATE NO SUBREASON CODE   @D64ADOW 00965000
         L     RC,ASGEXIT         CANCEL                       @D64ADOW 00966000
         L     RC,ACOMER48-SGEXIT(,RC) ... USER WITH           @D64ADOW 00967000
         BSM   0,RC               ... ERR48                    @D64ADOW 00968000
*SGLINK COMERR48,INPUT=(R1,R2,R3,RC)                                    00969000
         DROP                     RD                                    00970000
         EJECT                                                          00971000
         USING SVC34,RD                                        @D64ADOW 00972000
MVSTIMRT DS    0H                                              @D64ADVB 00973000
*SGLINK MVSTIMRT,S,INPUT=(R5,R7,RA,RC,RD,RF),OUTPUT=(R0,R1,RF),        *00974000
               WORK=(R2-R6,R8,R9,RE)                                    00975000
         USING XTIMPLST,RC        ESTABLISH ADDR TO PARM LIST  @D64ADVB 00976000
         USING TCBADR,RA          ESTABLISH ADDR TO TCB        @D64ADVB 00977000
         LTR   RF,RF              PARAMETER LIST INVALID       @D64ADOW 00978000
         BNZ   MVSTIRC10          YES, --->                    @D64ADOW 00979000
         N     R5,XTIMPLST        CHECK VALID INPUT IN PAR LIST@D64ADOW 00980000
         BNZ   MVSTIRC10          NOT ZERO, --->               @D64ADVB 00981000
         L     R3,TCBSAVE         GET SAVE AREA ADDR           @D64ADOW 00982000
         USING SVEARA,R3                                       @D64ADOW 00983000
         TM    SVEPSWMK,SVEHSMOD  CALLER IN PRIMARY MODE       @D64ADOW 00984000
         BZ    MVSTIM10           YES --->                     @D64ADOW 00985000
         DROP  R3                                              @D64ADOW 00986000
         L     R2,TCBARSAV        ADDR OF ACC REG SAVE AREA    @D64ADOW 00987000
         OC    4(4,R2),4(R2)      LINKAGE = SVC : OUTPUT AREA  @D64ADOW 00988000
***                                       = SYSTEM : PARAMETER LIST     00989000
***                               MUST RESIDE IN PRIMARY ADDR SPACE     00990000
         BNZ   MVSTIRC10          NO ---> RC = 16              @D64ADOW 00991000
MVSTIM10 DS    0H                                              @D64ADVB 00992000
         XC    XTIMDATE(8),XTIMDATE                            @D64ADVB 00993000
         XC    XTIMCLOC(8),XTIMCLOC                            @D64ADVB 00994000
         SPACE 1                                                        00995000
***                               SET UP INTERFACE TO CALL              00996000
***                               GETIME ROUTINE                        00997000
         SPACE 1                                                        00998000
         L     R5,CRADDR          CURRENT COMREG               @D64ADVB 00999000
         USING COMREG,R5          ESTABLISH ADDR TO COMREG     @D64ADVB 01000000
         MVI   PARIND,X00                                      @D64ADVB 01001000
         TM    XTIMFCLO,XTIMFGMT  GMT REQUESTED                @D64ADVB 01002000
         BZ    MVSTIM20           NO,  --------->              @D64ADVB 01003000
         MVI   PARIND,GMT                                      @D64ADVB 01004000
MVSTIM20 DS    0H                                              @D64ADVB 01005000
         L     R6,TCBATCBE        ADDRESS OF TCBX              @D64ADVB 01006000
         USING TCBXADR,R6         ESTABLISH ADDRESS TO TCBX    @D64ADVB 01007000
         TM    TCBXSAUS,TCBXXSAU+TCBXXSBU SAVE AREA'S FREE     @D64ADOW 01008000
         BZ    MVSTIM30           YES, --->                    @D64ADOW 01009000
         STCM  R5,B'1111',*+8                                  @D64ADOW 01010000
         BAS   R5,SYSERROR                                     @D64ADOW 01011000
         DC    X'00000000'                                     @D64ADOW 01012000
MVSTIM30 DS    0H                                              @D64ADOW 01013000
         OI    TCBXSAUS,TCBXXSAU+TCBXXSBU SAVE AREAS USED      @D64ADOW 01014000
         LA    R8,TCBXXSA         ...                          @D64ADOW 01015000
         DROP  R6                 RESET ADDR OF TCBX           @D64ADVB 01016000
         BAS   R6,TSTTODBT        CALL GETIME ROUTINE          @D64ADOW 01017000
*SGLINK TSTTODBT,INPUT=(R5:COMREG,R6:RETURN,R8:SA,RA:TCB,RD:BASE),     *01018000
               OUTPUT=(R1:TIME,RE,RF:DATE),WORK=(R0-R5,R9,RE,RF)        01019000
         L     RF,TCBATCBE        ADDRESS OF TCBX              @D64ADOW 01020000
         NI    TCBXSAUS-TCBXADR(RF),XFF-TCBXXSAU-TCBXXSBU      @D64ADOW 01021000
***                               INDICATE SAVE AREA'S FREE             01022000
         SPACE 1                                                        01023000
         LA    R6,WDATEFLD        GET ADDR OF LOCAL TIME       @DY45190 01024000
         CLI   PARIND,GMT         GMT REQUIRED                 @DY45175 01025000
         BNE   MVSTIM35           NO,                          @DY45175 01026000
         LA    R6,GMTSAVEA        GET ADDR OF GMT              @DY45190 01027000
MVSTIM35 DS    0H                                              @DY45175 01028000
         USING DATEAREA,R6                                     @DY45190 01029000
         MVC   XTIMCLO1(2),DATEFLDC     YY (CENTURY)           @DY45190 01030000
         MVC   XTIMCLO1+2(2),DATEFLDY   YY                     @DY45190 01031000
         CLI   XTIMFDAT,XTIMDYDD  DATE FORMAT = YYYYDDD        @D64ADVB 01032000
         BE    MVSTIM60           YES, --------->              @D64ADVB 01033000
         CLI   XTIMFDAT,XTIMDYMD  DATE FORMAT = YYYYMMDD       @D64ADVB 01034000
         BE    MVSTIM50           YES, --------->              @D64ADVB 01035000
***                               DATE FORMAT = MMDDYYYY/DDMMYYYY       01036000
         MVC   XTIMCLO2(2),DATEFLDC     YY (CENTURY)           @DY45190 01037000
         MVC   XTIMCLO2+2(2),DATEFLDY   YY                     @DY45190 01038000
         MVC   XTIMCLO1(4),DATEAREA     DDMM / MMDD            @DY45190 01039000
         CLI   XTIMFDAT,XTIMDMDY  DATE FORMAT = MMDDYYYY       @D64ADVB 01040000
         BNE   MVSTIM40           NO , --------->              @DY45037 01041000
         TM    LTACT,DDMMYY       FORMAT IN COMREG  DMY        @D64ADVB 01042000
         BZ    MVSTIM70           NO,  --------->   ALL DONE   @D64ADVB 01043000
         MVC   XTIMCLO1(2),DATEFLD2     MM                     @DY45190 01044000
         MVC   XTIMCLO1+2(2),DATEFLD1   DD                     @DY45190 01045000
         B     MVSTIM70           ALL DONE                     @D64ADVB 01046000
MVSTIM40 DS    0H                                              @D64ADVB 01047000
         TM    LTACT,DDMMYY       FORMAT IN COMREG DMY         @D64ADVB 01048000
         BO    MVSTIM70           YES ---------->   ALL DONE   @D64ADVB 01049000
         MVC   XTIMCLO1(2),DATEFLD2     DD                     @DY45190 01050000
         MVC   XTIMCLO1+2(2),DATEFLD1   MM                     @DY45190 01051000
         B     MVSTIM70           ALL DONE                     @D64ADVB 01052000
MVSTIM50 DS    0H                                              @D64ADVB 01053000
         MVC   XTIMCLO2(4),DATEAREA     MMDD                   @DY45190 01054000
         TM    LTACT,DDMMYY       FORMAT IN COMREG DMY         @D64ADVB 01055000
         BZ    MVSTIM70           NO,  --------->   ALL DONE   @D64ADVB 01056000
         MVC   XTIMCLO2(2),DATEFLD2     MM                     @DY45190 01057000
         MVC   XTIMCLO2+2(2),DATEFLD1   DD                     @DY45190 01058000
         B     MVSTIM70                                        @D64ADVB 01059000
MVSTIM60 DS    0H                                              @D64ADVB 01060000
         L     R0,XTIMCLO1                                     @D64ADVB 01061000
         STCM  R0,B'1111',XTIMCLO1+1                           @D64ADVB 01062000
         MVI   XTIMCLO1,X'F0'                                  @D64ADVB 01063000
         MVC   XTIMCLO2+1(3),DATEFLDD   DDD                    @D64ADVB 01064000
         DROP  R6                                              @DY45190 01065000
MVSTIM70 DS    0H                                              @D64ADVB 01066000
         PACK  XTIMDATE(5),XTIMCLOC(9) PACK DATE               @D64ADVB 01067000
         XC    XTIMDAT2(4),XTIMDAT2                            @D64ADVB 01068000
         SPACE 1                                                        01069000
***                               R1 CONTAINS VSE TU (LOCAL OR GMT)     01070000
         NI    XTIMFCLO,XFF-XTIMFGMT-XTIMFERR                  @D64ADVB 01071000
         CLI   XTIMFCLO,XTIMFSTC  CLOCK FORMAT = STCK          @D64ADVB 01072000
         BNE   MVSTIM80           YES, --------->              @D64ADVB 01073000
         LM    R0,R1,XSAVCLCK     GET CLOCK VALUE              @D64ADVB 01074000
         B     MVSTIRC00          --------->                   @D64ADVB 01075000
MVSTIM80 DS    0H                                              @D64ADVB 01076000
         CLI   XTIMFCLO,XTIMFMIC  CLOCK FORMAT = MIC           @D64ADVB 01077000
         BNE   MVSTIM90           NO,  --------->              @D64ADVB 01078000
         SLR   R0,R0                                           @D64ADVB 01079000
         D     R0,MVSF3           HUNDREDTH OF SECONDS         @D64ADVB 01080000
         SLR   R0,R0                                           @D64ADVB 01081000
         M     R0,DIVCONS2        MICRO SECONDS                @D64ADVB 01082000
         SLDL  R0,12              MICRO SECONDS ON RIGHT       @D64ADVB 01083000
***                               PLACE (2**12)                         01084000
         B     MVSTIRC00          --------->                   @D64ADVB 01085000
MVSTIM90 DS    0H                                              @D64ADVB 01086000
         CLI   XTIMFCLO,XTIMFBIN  CLOCK FORMAT = BIN           @D64ADVB 01087000
         BNE   MVSTIMA0           NO,  --------->              @D64ADVB 01088000
         SLR   R0,R0                                           @D64ADVB 01089000
         D     R0,MVSF3           HUNDRED OF SECONDS           @D64ADVB 01090000
         LR    R0,R1                                           @D64ADVB 01091000
         SLR   R1,R1                                           @D64ADVB 01092000
         B     MVSTIRC00          --------->                   @D64ADVB 01093000
MVSTIMA0 DS    0H                                              @D64ADVB 01094000
***                               CLOCK FORMAT IS DEC -                 01095000
*                                 CONVERT BIN FORMAT IN HHMMSSTH FORMAT 01096000
         SLR   R4,R4                                           @D64ADVB 01097000
         LR    R5,R1              R5: UNITS ARE TU             @D64ADVB 01098000
         D     R4,MVSF3           HUNDREDTH                    @D64ADVB 01099000
         SLR   R4,R4              ... OF                       @D64ADVB 01100000
         D     R4,MVSF10          ... ...                      @D64ADVB 01101000
         LR    R0,R4              ... SECONDS                  @D64ADVB 01102000
         SLR   R4,R4                                           @D64ADVB 01103000
         D     R4,MVSF10          TENTH OF SECONDS             @D64ADVB 01104000
         SLL   R4,4                                            @D64ADVB 01105000
         ALR   R0,R4              ......TH                     @D64ADVB 01106000
         SLR   R4,R4                                           @D64ADVB 01107000
         D     R4,MVSF60          SECONDS                      @D64ADVB 01108000
         CVD   R4,MVSDWORD                                     @D64ADVB 01109000
         MVO   MVSDWORD(2),MVSDWORD+6(2)                       @D64ADVB 01110000
         ICM   R0,B'0010',MVSDWORD  ....SSTH                   @D64ADVB 01111000
         SLR   R4,R4                                           @D64ADVB 01112000
         D     R4,MVSF60          MINUTES                      @D64ADVB 01113000
         CVD   R4,MVSDWORD                                     @D64ADVB 01114000
         MVO   MVSDWORD(2),MVSDWORD+6(2)                       @D64ADVB 01115000
         ICM   R0,B'0100',MVSDWORD  ..MMSSTH                   @D64ADVB 01116000
         CVD   R5,MVSDWORD        HOURS                        @D64ADVB 01117000
         MVO   MVSDWORD(2),MVSDWORD+6(2)                       @D64ADVB 01118000
         ICM   R0,B'1000',MVSDWORD  HHMMSSTH                   @D64ADVB 01119000
         SLR   R1,R1                                           @D64ADVB 01120000
MVSTIRC00 DS   0H                                              @D64ADVB 01121000
         SLR   RF,RF              RC = 0                       @D64ADVB 01122000
MVSTIRET DS    0H                                              @D64ADVB 01123000
         STM   R0,R1,XTIMCLOC     PROVIDE TIME IN PARMLIST     @D64ADVB 01124000
         L     R6,DISPAD          RELOAD DISP ADDR             @D64ADVB 01125000
         BSM   0,R7               RETURN TO CALLER             @D64ADVB 01126000
         SPACE 1                                                        01127000
MVSTIRC10 DS   0H                                              @D64ADVB 01128000
         LA    RF,X'10'           RC = 16 INVALID PARAMETER LIS@D64ADVB 01129000
         B     MVSTIRET           --------->                   @D64ADVB 01130000
         SPACE 1                                                        01131000
MVSSVC34 DC    A(SVC34)                                        @D64ADOW 01132000
MVSGTIMN DC    CL8'TIME'                                       @D64ADVB 01133000
AMVSXTIM DC    A(MVSTIMRT+X'80000000')                         @D64ADVB 01134000
MVSF3    DC    A(3)                                            @D64ADVB 01135000
MVSF10   DC    A(10)                                           @D64ADVB 01136000
MVSF60   DC    A(60)                                           @D64ADVB 01137000
MVSDWORD DC    D'0'                                            @D64ADVB 01138000
MVSMSKSV DC    X'FFFFFF78'                                     @D64ADOW 01139000
MVSMSKPC DC    X'FFFFFC78'                                     @D64ADOW 01140000
         DROP  R5                 RESET ADDR TO COMREG         @D64ADVB 01141000
         DROP  RA                 RESET ADDR TO TCB            @D64ADVB 01142000
         DROP  RC                                              @D64ADVB 01143000
         DROP  RD                 RESET BASE OF ROUTINE        @D64ADVB 01144000
         EJECT                                                          01145000
*********************************************************************** 01146000
*                                                                       01147000
*        DISPATCHER EXIT ROUTINE FOR XPCC                               01148000
*                                                                       01149000
*********************************************************************** 01150000
*        INPUT REGISTERS                                                01151000
*            R6 - DISPATCHER ADDRESS                                    01152000
*            RA - CURRENT TCB ADDR                                      01153000
*        OUTPUT REGISTERS TO DISPATCHER EXIT SVA RTN                    01154000
*            R2 - FUNCTION CODE (0 = DISP EXIT, 4 = SVC)                01155000
*            R6 - DISPATCHER ADDRESS                                    01156000
*            R7 - ADDR OF COMMUNICATION TABLE                           01157000
*            RA - CURRENT TCB ADDR                                      01158000
*            RD - BASE-REGISTER OF SVA ROUTINE                          01159000
XPCCEXIT DS    0H                                              @D14NDOW 01160000
         BASR  R4,0                                            @D14NDOW 01161000
         USING *,R4                                            @D14NDOW 01162000
         LA    RD,SVC113           BASE OF SVC 113             @D31BDOW 01163000
         LA    R2,0                GET FUNCTION CODE           @D14NDOW 01164000
         B     XPCROUT                                         @D31BDOW 01165000
         DROP  R4                                              @D14NDOW 01166000
         SPACE 3                                                        01167000
*********************************************************************** 01168000
*                                                                       01169000
*        EXIT FROM PC HANDLER                                           01170000
*                                                                       01171000
*********************************************************************** 01172000
S113PCK  DS    0H                                              @D52VDOW 01173000
         BASR  R2,0                                            @D52VDOW 01174000
         USING *,R2                                            @D52VDOW 01175000
         LA    RD,SVC113           BASE OF SVC 113             @D52VDOW 01176000
         DROP  R2                                              @D52VDOW 01177000
         USING SVC113,RD                                       @D52VDOW 01178000
         LA    R2,4                GET FUNCTION CODE           @D52VDOW 01179000
         MVI   RID+1,REENTRID      RESTORE RID                 @D64ADOW 01180000
         B     XPCROUT                                         @D52VDOW 01181000
         SPACE 3                                                        01182000
*********************************************************************** 01183000
*                                                                       01184000
*        SVC 113 : ANCHOR TO XPCC ROUTINES                              01185000
*                                                                       01186000
*********************************************************************** 01187000
*                                                                       01188000
*        INPUT REGISTERS TO SVC                                         01189000
*            R1 - POINTER TO XPCCB                                      01190000
*            R6 - DISPATCHER ADDRESS                                    01191000
*            R8 - ADDR OF CURRENT TIB                                   01192000
*            RA - ADDR OF CURRENT TCB                                   01193000
*            RB - ADDR OF CURRENT SAVE AREA                             01194000
*            RD - BASE-REGISTER OF SVC                                  01195000
*            RF - FUNCTION CODE                                         01196000
*        OUTPUT REGISTERS TO CROSS-PARTITION CONTROL SVA ROUTINE        01197000
*            R1 - POINTER TO XPCCB                                      01198000
*            R2 - FUNCTION CODE (0 = DISP EXIT, 4 = SVC)                01199000
*            R6 - DISPATCHER ADDRESS                                    01200000
*            R7 - ADDR TO COMMUNICATION TABLE                           01201000
*            R8 - ADDR OF CURRENT TIB                                   01202000
*            RA - ADDR OF CURRENT TCB                                   01203000
*            RB - ADDR OF CURRENT SAVE AREA                             01204000
*            RD - BASE-REGISTER OF SVA ROUTINE                          01205000
*            RF - FUNCTION CODE                                         01206000
*                                                                       01207000
         USING SVC113,RD                                       @D14NDOW 01208000
         USING TIBADR,R8                                       @D14NDOW 01209000
         USING DISP,R6                                         @D14NDOW 01210000
SVC113   EQU   *                                                        01211000
         LTR   RF,RF               ZERO MEANS EOT PROC REQ'ED  @D14NDOW 01212000
         BZ    SVC113A             ZERO -->                    @D52VDOW 01213000
         USING TCBADR,RA                                       @D52VDOW 01214000
         TM    TCBEXFLG,TCBEXAM    CALLER IN 31-BIT MODE       @D52VDOW 01215000
         BO    SVC113G             YES, R1 IS A 4-BYTE ADDR    @D52VDOW 01216000
         DROP  RA                                              @D52VDOW 01217000
         LA    R1,0(,R1)           CLEAR FIRST BYTE            @D52VDOW 01218000
         B     SVC113G                                         @D52VDOW 01219000
SVC113A  L     R2,CRADDR           GET COMMUNICATION REG ADDR  @D51IDOW 01220000
         USING COMREG,R2                                                01221000
         TM    JCSW5,JCLACTIV      REQUEST FROM JOB-CNTL       @D51IDOW 01222000
         BO    SVC113C             YES,                        @D51IDOW 01223000
         DROP  R2                                                       01224000
         TM    TIBFLAG1,EOTACT     REQUEST FROM EOT            @D14NDOW 01225000
         DROP  R8                                              @D14NDOW 01226000
         BNO   SVC113E             FORCE RETURN CODE BAD FCT   @D14NDOW 01227000
SVC113C  L     R7,XPYIDH           GET FIRST ID-CB             @D14NDOW 01228000
         LTR   R7,R7               ANY XPCC REQ ONGOING        @D14NDOW 01229000
         BZR   R6                  NO EXIT TO DISP             @D14NDOW 01230000
         B     SVC113G                                         @D31BDOW 01231000
SVC113E  EQU   *                                               @D14NDOW 01232000
         BCTR  RF,0                SET INVALID FCT CODE        @D31BDOW 01233000
SVC113G  EQU   *                                               @D31BDOW 01234000
         LA    R2,8                GET FUNCTION CODE           @D52VDOW 01235000
XPCROUT  EQU   *                                               @D14NDOW 01236000
         LA    R7,XPYCOMTB         ADDR TO COMMUNICATION TABLE @D14NDOW 01237000
         L     RD,ASVASVDL         ADDR OF SVA ROUTINE TABLE   @D14NDOW 01238000
         USING SVASVDL,RD                                      @D14NDOW 01239000
         L     RD,AIJBSXPC         GET ENTRY/BASE OF SVA RTN   @D14NDOW 01240000
         BSM   0,RD                                            @D65CDOW 01241000
         DROP  R6                                              @D14NDOW 01242000
         DROP  RD                                              @D14NDOW 01243000
         SPACE 3                                                        01244000
*************************************************************           01245000
*                                                           *           01246000
*        XPCC TIMER APPENDAGE FOR TIMEOUT FUNCTION          *           01247000
*                                                           *           01248000
*        INPUT  CLOCK  CONTAINS NEXT INTERVAL TO BE SET     *           01249000
*               R6     DISPATCHER ADDR                      *           01250000
*               R13    BASE ADDR                            *           01251000
*               R12    RETURN ADDR                          *           01252000
*        WORK   R5 R8 R9 R14 R15                            *           01253000
*************************************************************           01254000
XPYTMOUT DS    0H                                              @D52VDOW 01255000
         USING *,RD                                            @D52VDOW 01256000
         ICM   R9,15,XPYTIMCH     GET START OF TIMEOUT WAITER  @D52VDOW 01257000
         BZ    XPYTM010           NO ONE IS WAITING            @D61RDOW 01258000
         USING XPZCRCB,R9                                      @D52VDOW 01259000
         STCK  CLOCK                                           @D61RDOW 01260000
         CLC   CLOCK(8),XPZTIVAL  INTERVAL OF CRCB ELLAPSED    @D61RDOW 01261000
         BNL   XPYTM020           YES, --->                    @D52VDOW 01262000
XPYTM010 DS    0H                                              @D52VDOW 01263000
*        AMODESW RETURN,REG=(RC)  RETURN TO EXT FLIH                    01264000
         AMODESW RETURN,REG=(RC)                               @D61RDOW 01265000
XPYTM020 DS    0H                                              @D52VDOW 01266000
         L     R5,XPZTIFWP        GET NEXT CRCB                @D52VDOW 01267000
         ST    R5,XPYTIMCH        THIS IS NOW FIRST IN CHAIN   @D52VDOW 01268000
         LTR   R5,R5              ANY AVAILABLE                @D52VDOW 01269000
         BZ    XPYTM030           NO,                          @D52VDOW 01270000
         XC    XPZTIBWP-XPZCRCB(4,R5),XPZTIBWP-XPZCRCB(R5)     @D52VDOW 01271000
XPYTM030 OI    XPZFLG2,XPTIMOCD   INDICATE TIMEOUT             @D52VDOW 01272000
         LH    R5,XPZTID          TASK ID OF CRCB OWNER        @D52VDOW 01273000
         SLL   R5,2               DISPL INTO TIBATAB           @D66ODOW 01274000
         L     R8,ATIBATAB                                     @D52VDOW 01275000
         L     R8,0(R5,R8)        TIB OF CRCB OWNER            @D52VDOW 01276000
         USING TIBADR,R8                                       @D52VDOW 01277000
         OI    XPZFLG1,XPCINTIB   INDICATE IN TIB CHAIN        @D52VDOW 01278000
         L     R5,TIBCRCBC        INSERT IT IN CHAIN           @D52VDOW 01279000
         ST    R9,TIBCRCBC                                     @D52VDOW 01280000
         ST    R5,XPZTIBC                                      @D52VDOW 01281000
         OI    TIBFLAG,TIBDELMV   SET UP DISPATCHER EXIT FLAGS @D52VDOW 01282000
         OI    TIBDMFLG,TIBXPCEX                               @D52VDOW 01283000
         USING DISP,R6                                         @D52VDOW 01284000
         BAS   RF,IOPOST1         POST CRCB OWNER READY        @D52VDOW 01285000
*SGLINK  IOPOST1,INPUT=(R6,R8,RF),WORK=(RE)                             01286000
         B     XPYTMOUT           CHECK NEXT CRCB              @D52VDOW 01287000
         DROP  R6                                              @D52VDOW 01288000
         DROP  R8                                              @D52VDOW 01289000
         DROP  R9                                              @D52VDOW 01290000
         DROP  RD                                              @D52VDOW 01291000
         SPACE 3                                                        01292000
         DC    CL10'XPCCANCHOR'                                @D64ADOW 01293000
         MAPXPTAB                  ,                           @D31BDOW 01294000
         EJECT                                                          01295000
*************************************************************           01296000
*                                                                       01297000
*        CROSS PARTITION MOVE ROUTINE                                   01298000
*                                                                       01299000
*************************************************************           01300000
*                                                                       01301000
*        INPUT REGISTERS                                                01302000
*             R0 LENGTH OF DATA TO BE MOVED                             01303000
*             R1 SCB-PTR OF FROM-DATA-AREA                              01304000
*             R2 ADDR OF FROM-DATA-AREA                                 01305000
*             R3 SCB-PTR OF TO-DATA-AREA                                01306000
*             R4 ADDR OF TO-DATA-AREA                                   01307000
*             R8 BASE OF ROUTINE                                        01308000
*             RE RETURN ADDR                                            01309000
*        WORK REGISTERS                                                 01310000
*             R5 R7 R9 RA RB RC RF                                      01311000
*        OUTPUT REGISTERS                                               01312000
*             R4 ADDR OF NEXT FREE POSITION IN TO-DATA-AREA             01313000
*                                                                       01314000
* MUST BE CALLED IN SUPERVISOR STATE                                    01315000
*                   DISABLED                                            01316000
*                   NP CODE ACTIVE                                      01317000
*                   31 BIT MODE                                         01318000
*                   SCB MUST BE OF AN ADDRESS SPACE                     01319000
*************************************************************           01320000
         USING *,RF                                            @D14NDOW 01321000
XMMOVE   DS    0H                                              @D14NDOW 01322000
         STNSM PSWMASK,DISABLE    DISABLE CALLER               @D64ADOW 01323000
***                 ---> PROG CHK IF CALLER NOT IN SUPVR STATE          01324000
         LR    RF,R8              SET BASE                     @D14NDOW 01325000
         TM    PSWMASK,X03        WAS CALLER DISABLED          @D64ADOW 01326000
         BZ    XMMOV00            YES, --> OK                  @D64ADOW 01327000
         DC    H'0'               NO ---> FORCE PROG CHECK     @D64ADOW 01328000
XMMOV00  DS    0H                                              @D64ADOW 01329000
         BSM   R8,0               GET CALLERS ADDR MODE        @D64ADOW 01330000
         LTR   R8,R8              31 BIT MODE                  @D64ADOW 01331000
         BM    XMMOV02            YES --->                     @D64ADOW 01332000
         DC    H'0'               NO ---> FORCE PROG CHECK     @D64ADOW 01333000
XMMOV02  DS    0H                                              @D64ADOW 01334000
         L     R8,TDCPUPTR        GET ADDR OF CPU CB           @D64ADOW 01335000
         USING TCPUADR,R8                                      @D64ADOW 01336000
         TM    TCPFLAG1,TDCNPA    NP CODE ACTIVE               @D64ADOW 01337000
         DROP  R8                                              @D64ADOW 01338000
         BO    XMMOV04            YES, --> OK                  @D64ADOW 01339000
         DC    H'0'               NO ---> FORCE PROG CHECK     @D64ADOW 01340000
XMMOV04  DS    0H                                              @D64ADOW 01341000
         IAC   R8                 GET CALLERS                  @DY44889 01342000
         STCM  R8,B'0010',XMMSAVE ... ASC MODE                 @DY44889 01343000
         TM    XMMSAVE,X03        IS CALLER IN PRIMARY ASC MODE@DY44889 01344000
         BZ    XMMOV06            YES, --> OK                  @DY44889 01345000
         DC    H'0'               NO ---> FORCE PROG CHECK     @DY44889 01346000
XMMOV06  DS    0H                                              @DY44889 01347000
         USING SCBADR,R1                                       @DY45037 01348000
         TM    SCBFLG,SCBASP      IS THIS AN ADDRESS SPACE     @DY45037 01349000
         BNO   XMMOV07            NO ---> FORCE PROG CHECK     @DY45037 01350000
         DROP  R1                                              @DY45037 01351000
         USING SCBADR,R3                                       @DY45037 01352000
         TM    SCBFLG,SCBASP      IS THIS AN ADDRESS SPACE     @DY45037 01353000
         BO    XMMOV08            YES, OK --->                 @DY45037 01354000
         DROP  R3                                              @DY45037 01355000
XMMOV07  DS    0H                                              @DY45037 01356000
         DC    H'0'               NO ---> FORCE PROG CHECK     @DY45037 01357000
XMMOV08  DS    0H                                              @DY45037 01358000
         LA    R2,0(,R2)          CLEAR HIGH ORDER BIT         @D14NDOW 01359000
         LA    R4,0(,R4)          CLEAR HIGH ORDER BIT         @D14NDOW 01360000
XMMOV10  DS    0H                                              @D14NDOW 01361000
         LR    R8,R2              ADDRESS IN FIRST PAGE        @DA40703 01362000
         C     R8,F4096                                        @DA40703 01363000
         BL    XMMOV20            YES, --->                    @DA40703 01364000
         STCTL CR1,CR1,XMMSAVE    SAVE CONTROL REGISTER 1      @D64ADOW 01365000
         LCTL  CR1,CR1,SCBRSTO-SCBADR(R1) POINT TO FROM-SPACE  @D64ADOW 01366000
         LRA   R8,0(R2)           GET REAL ADDRESS             @D64ADOW 01367000
         LCTL  CR1,CR1,XMMSAVE    RESTORE CONTROL REGISTER     @D64ADOW 01368000
         BC    8,XMMOV20          RETURN REAL ADDRESS          @D64ADOW 01369000
         BC    5,XMERR1           INVALID VIRTUAL ADDRESS      @D64ADOW 01370000
         STNSM PSWMASK,XFF-SMDAT  DAT OFF                      @D64ADOW 01371000
         TM    PTESTAT-PTE(R8),PTEINVAD INVALID PAGE ?         @D64ADOW 01372000
         STOSM PSWMASK,SMDAT      DAT ON                       @D64ADOW 01373000
         BO    XMERR1             IF NOT, TAKE SPECIF. EXIT    @D64ADOW 01374000
         ST    R2,TRADDR          PROVIDE VIRTUAL ADDRESS      @DA35398 01375000
         LR    R7,R1              PROVIDE RELATED SCB ADDRESS  @DA35908 01376000
         B     XMPFEX                                          @DA35398 01377000
XMMOV20  LR    RA,R4              ADDRESS IN FIRST PAGE        @DA40703 01378000
         C     RA,F4096                                        @DA40703 01379000
         BL    XMMOV30            YES, --->                    @DA40703 01380000
         STCTL CR1,CR1,XMMSAVE    SAVE CONTROL REGISTER 1      @D64ADOW 01381000
         LCTL  CR1,CR1,SCBRSTO-SCBADR(R3) POINT TO TO-SPACE    @D64ADOW 01382000
         LRA   RA,0(R4)           GET REAL ADDRESS             @D64ADOW 01383000
         LCTL  CR1,CR1,XMMSAVE    RESTORE CONTROL REGISTER     @D64ADOW 01384000
         BC    8,XMMOV30          RETURN REAL ADDRESS          @D64ADOW 01385000
         BC    5,XMERR2           INVALID VIRTUAL ADDRESS      @D64ADOW 01386000
         STNSM PSWMASK,XFF-SMDAT  DAT OFF                      @D64ADOW 01387000
         TM    PTESTAT-PTE(RA),PTEINVAD INVALID PAGE ?         @D64ADOW 01388000
         STOSM PSWMASK,SMDAT      DAT ON                       @D64ADOW 01389000
         BO    XMERR2             IF NOT, TAKE SPECIF. EXIT    @D64ADOW 01390000
         ST    R4,TRADDR          PROVIDE VIRTUAL ADDRESS      @DA35398 01391000
         LR    R7,R3              PROVIDE RELATED SCB ADDRESS  @DA35908 01392000
         B     XMPFEX                                          @DA35398 01393000
XMMOV30  LR    R7,R2              GET FROM-ADDR                @D52VDOW 01394000
         A     R7,PAGESIZE        GET PAGE-END MINUS FROM-ADDR @D14NDOW 01395000
         N     R7,PADDRMSK                                     @D14NDOW 01396000
         SR    R7,R2                                           @D14NDOW 01397000
         LR    RC,R4              GET TO-ADDR                  @D14NDOW 01398000
         A     RC,PAGESIZE        GET PAGE-END MINUS TO-ADDR   @D14NDOW 01399000
         N     RC,PADDRMSK                                     @D14NDOW 01400000
         SR    RC,R4                                           @D14NDOW 01401000
         LR    R5,R0              GET MIN(R0,R7,RC)            @D14NDOW 01402000
         CLR   R0,R7                                           @D14NDOW 01403000
         BH    XMMOV40                                         @D14NDOW 01404000
         CLR   R0,RC                                           @D14NDOW 01405000
         BNH   XMMOV50                                         @D14NDOW 01406000
XMMOV40  DS    0H                                              @D14NDOW 01407000
         LR    R5,R7                                           @D14NDOW 01408000
         CLR   R7,RC                                           @D14NDOW 01409000
         BNH   XMMOV50                                         @D14NDOW 01410000
         LR    R5,RC                                           @D14NDOW 01411000
XMMOV50  DS    0H                                              @D14NDOW 01412000
         LR    R9,R5                                           @D14NDOW 01413000
         LR    RB,R5                                           @D14NDOW 01414000
         STNSM PSWMASK,XFF-SMDAT  DAT OFF                      @D64ADOW 01415000
         MVCL  RA,R8                                           @D14NDOW 01416000
         STOSM PSWMASK,SMDAT      DAT ON                       @D64ADOW 01417000
         AR    R2,R5              GO TO NEXT DATA NOT MOVED    @D14NDOW 01418000
         AR    R4,R5              NEXT FREE BUFFER ADDR        @D14NDOW 01419000
         SR    R0,R5              REMAINING # OF BYTES         @D14NDOW 01420000
         BNZ   XMMOV10            CONTINUE MOVING              @D52VDOW 01421000
         SLR   RF,RF              MOVE FINISHED, RETC 0        @D52VDOW 01422000
         BSM   0,RE               RETURN                       @D64ADOW 01423000
         SPACE 2                                                        01424000
XMPFEX   DS    0H                                              @D14NDOW 01425000
         NC    TRADDR,PADDRMSK    FORCE PAGE BOUNDARY          @DA41316 01426000
         USING SCBADR,R7                                       @DY44889 01427000
         SLR   RB,RB              ASN OF SPACE                 @DY44889 01428000
         ICM   RB,B'0011',SCBPSTR ... FOR WHICH PAGE           @DY44889 01429000
         SRL   RB,4               ... FAULT IS GENERATED       @DY44889 01430000
         DROP  R7                                              @DY44889 01431000
         L     R8,APMGMDAT                                     @D14NDOW 01432000
         USING PMGMDATA,R8                                     @D14NDOW 01433000
         ICM   RB,B'1000',F255+3  INDICATE INPUT FROM XMMOVE   @DY44889 01434000
         ST    RB,GENPGADR        INPUT FOR EPACNVRT ROUTINE   @DY44889 01435000
         LR    RB,R4              SAVE R4                      @DY44889 01436000
         LR    R4,R7              R4 SCB PTR                   @DY44889 01437000
         L     RC,AGENPGQX        GET BASE FOR PGQUI           @D52VDOW 01438000
         BASR  RC,RC              GENERATE PGQUI ENTRY         @D52VDOW 01439000
         DROP  R8                                              @D52VDOW 01440000
         LR    R4,RB              RESTORE R4                   @DY44889 01441000
         L     R8,TIBPTR          GET CURRENT TIB POINTER      @DA42133 01442000
         USING TIBADR,R8                                       @DA42133 01443000
         TM    TIBFLAG,FETCHEOJ   CANCEL INITIATED BY PMGR     @DA42133 01444000
         DROP  R8                                              @DA42133 01445000
         BNO   XMMOV10            NO, CONTINUE MOVE            @DA42133 01446000
         B     EXIT               YES, DO CANCEL               @D64ADOW 01447000
         SPACE 2                                                        01448000
XMERR1   LA    RF,4               FROM-ADDR INCORRECT          @D51IDOW 01449000
         BR    RE                 RETURN                       @D52VDOW 01450000
XMERR2   LA    RF,8               TO-ADDR INCORRECT            @D51IDOW 01451000
         BR    RE                 RETURN                       @D52VDOW 01452000
***                                                                     01453000
XMMSAVE  DS    A(0)               CR1 SAVE AREA                @D64ADOW 01454000
***                                                                     01455000
         DROP  RF                                              @D14NDOW 01456000
         EJECT                                                          01457000
*********************************************************************** 01458000
*                                                                       01459000
*        SVC 120 : ACCESS REG SIMULATION IN 370 MODE                    01460000
*                                                                       01461000
*********************************************************************** 01462000
*                                                                       01463000
*        INPUT REGISTERS TO SVC                                         01464000
*            R0 - FC 0 : NOT USED .                                     01465000
*                 FC 1 : TID                                            01466000
*            R1 - FC 0 : POINTER TO PARAMETER LIST                      01467000
*                 FC 1 : ECB ADDR                                       01468000
*            R6 - DISPATCHER ADDRESS                                    01469000
*            RA - ADDR OF CURRENT TCB                                   01470000
*            RD - BASE-REGISTER OF SVC                                  01471000
*            RF - FUNCTION CODE (FC)                                    01472000
*                 0 -> MOVE FUNCTION                                    01473000
*                 1 -> POST FUNCTION                                    01474000
*                                                                       01475000
         USING SVC120,RD           ROUTINE BASE                @D51KDOW 01476000
         USING TCBADR,RA           CURRENT TCB                 @D51KDOW 01477000
         USING DISP,R6             ADDRESSABILITY TO DISPATCHER@D51KDOW 01478000
SVC120   DS    0H                                              @D51HDOW 01479000
         CLM   RF,3,XMVMAX         FUNCTION CODE CORRECT       @D67QDOW 01480000
         BH    XMVRC24             SET PROPER RETURN CODE      @D51HDOW 01481000
         AR    RF,RF                                           @D51HDOW 01482000
         AR    RF,RF                                           @D51HDOW 01483000
         B     XMVBRTAB(RF)        CONTINUE WITH CORRECT FCT   @D51KDOW 01484000
XMVMAX   DC    H'1'                MAX FCT CODE                @D51HDOW 01485000
XMVBRTAB B     XMVMOVE             MOVE FUNCTION               @D51KDOW 01486000
*        B     XMVPOST             POST FUNCTION               @D51KDOW 01487000
         SPACE                                                          01488000
**************************************************************          01489000
*                                                            *          01490000
*        FUNCTION CODE 1 ---> POST FUNCTION                  *          01491000
*                                                            *          01492000
**************************************************************          01493000
XMVPOST  LA    RE,XMVPOSTR         GET RETURN ADDR             @D52VDOW 01494000
         B     XMVCAUTH            CHECK AUTHORIZATION AND     @D52VDOW 01495000
***                                ... ENTER A-MODE OF CALLER           01496000
XMVPOSTR LA    R7,XMVHLNG                                      @D51KDOW 01497000
         SLR   RC,R7               INPUT TO SOME ERROR EXITS   @D51KDOW 01498000
         LA    R8,0(,R1)           CLEAR 1ST BYTE/BIT OF ECB   @D64ADOW 01499000
***                                AND COPY TO CORRECT REGISTER         01500000
         BAS   RE,XMVCHK           COMMON CHECK RTN            @D51KDOW 01501000
*SGLINK XMVCHK,INPUT=(R0,RA,RC,RE),OUTPUT=(R1,R9),WORK=(RB)             01502490
         B     XMVRC14             TASK IS INVALID             @D51KDOW 01503000
         B     XMVRC1C             TASK IS IN TERMINATION      @D51KDOW 01504000
*        B     *+4                 CHECK OK                    @D51KDOW 01505000
         SPACE                                                          01506000
         USING TIBADR,R9                                       @D51KDOW 01507000
         L     RE,XMVPA010         GOTO 31 BIT MODE            @D64ADOW 01508000
         BSM   0,RE                                            @D64ADOW 01509000
XMVPL010 DS    0H                                              @D64ADOW 01510000
         L     R6,ADISPSER         ADDR OF DISP SERVICES       @D64ADOW 01511000
         LA    R0,16               SETUP FCT CODE              @D64ADOW 01512000
         BASSM R7,R6               SETUP SYSTEM ACC LIST       @D64ADOW 01513000
*SGLINK DISPSERV,INPUT=(R0,R1,R6,R7),WORK=(R2,R3,R4),OUTPUT=(R1,R15)    01514000
         SAR   AR2,R1              SET ACCESS REGISTER 2       @D67CDOW 01515000
         SAR   AR8,R1              SET ACCESS REGISTER 8       @D64ADOW 01516000
         SR    R2,R2               ZERO ACCESS                 @DY46535 01516300
         SAR   ARD,R2              *** REGISTER D (RTN BASE)   @DY46535 01516600
         SAC   512                                             @D64ADOW 01517000
         LR    RF,R8               COPY ECB ADDR               @D67CDOW 01518000
         LR    R2,R8               COPY ECB ADDR               @D67CDOW 01519000
         N     RF,F3               KEEP LAST 2 BITS            @D67CDOW 01520000
         SLL   RF,3                GET TABLE ENTRY             @D67CDOW 01521000
         L     RE,XMVMASKT(RF)     GET POST MASK               @D67CDOW 01522000
         A     R2,XMVMASKT+4(RF)   RELEVANT PART OF ECB AS FW  @D67CDOW 01523000
XMVPL020 DS    0H                                              @D64ADOW 01524000
         L     R6,0(,R2)                                       @D67ODOW 01525000
PCKS120A DS    0H                  POSSIBLE PROG CHECK         @D67ODOW 01526000
         LR    R7,R6                                           @D67ODOW 01527000
         OR    R7,RE               SET TRAFFIC BIT ON          @D67ODOW 01528000
         CS    R6,R7,0(R2)         ... ALSO IN ECB             @D67ODOW 01529000
         BNE   XMVPL020                                        @D67ODOW 01530000
         SAC   0                                               @D64ADOW 01531000
         L     R6,DISPAD           RELOAD DISPATCHER ADDR      @D64ADOW 01532000
         L     R7,TIBPCB           GET PCB ADDRESS             @D51KDOW 01533000
         DROP  R9                                              @D51KDOW 01534000
         USING PCBADR,R7                                       @D51KDOW 01535000
         LR    R1,R8               COPY ECB ADDR TO CORRECT REG@D64ADOW 01536000
         TM    PCBSSFLG,PWR        IS THIS THE POWER PARTITION @D51KDOW 01537000
         BZ    XMVNOPOW            NO, -->                     @D51KDOW 01538000
         L     R8,APOWTB           GET POWER MECB ADDR         @D51KDOW 01539000
         SAC   512                                             @D64ADOW 01540000
         OI    PAEB+2-PADS(R8),TRABIT POST IT                  @D51KDOW 01541000
         SAC   0                                               @D64ADOW 01542000
         L     RF,PCEPIB2          GET PIB2 POINTER            @D66ODOW 01543000
         USING PIB2ADR,RF                                      @D66ODOW 01544000
         LH    R8,PIBMTID          GET MAINTASK ID             @D66ODOW 01545000
         DROP  RF                                              @D66ODOW 01546000
         BAS   RF,IOPOST0          POST POWER MAINTASK         @D51KDOW 01547000
*SGLINK IOPOST0,INPUT=(R6,R8,RF),WORK=(R8,RE)                           01548000
XMVNOPOW DS    0H                                              @D51KDOW 01549000
         LR    RE,R7               PCB PTR TO CORRECT INPUT REG@D51KDOW 01550000
         DROP  R7                                              @D51KDOW 01551000
         BAS   RF,RPOSTIOP         POST TASKS WAITING ON ECB   @D64ADOW 01552000
*SGLINK RPOSTIOP,INPUT=(R1,R6,RE,RF),WORK=(R5,RE)                       01553000
         B     XMVRC00                                         @D64ADOW 01554000
         SPACE                                                          01555000
XMVPA010 DC    A(XMVPL010+X'80000000')                         @D64ADOW 01556000
XMVMASKT DC    X'00008000',A(0)                                @D67ODOW 01557000
         DC    X'00000080',A(-1)                               @D67ODOW 01558000
         DC    X'80000000',A(2)                                @D67ODOW 01559000
         DC    X'00800000',A(1)                                @D67ODOW 01560000
         SPACE                                                          01561000
**************************************************************          01562000
*                                                            *          01563000
*        FUNCTION CODE 0 ---> MOVE FUNCTION                  *          01564000
*                                                            *          01565000
**************************************************************          01566000
XMVMOVE  DS    0H                                              @D51KDOW 01567000
         B     ERR21               ILLEGAL SVC                 @D61NDOW 01568000
         SPACE 3                                                        01569000
**************************************************************          01570000
*                                                            *          01571000
*        CHECK SUBROUTINE                                    *          01572000
*                                                            *          01573000
**************************************************************          01574000
*        INPUT  R0  TIK                                                 01575000
*               RA  CURRENT TCB (TCB OF SVC ISSUER)                     01575500
*               RC  LIST ADDR (FOR ERROR EXITS)                         01576000
*               RE  RETURN ADDR                                         01577000
*        OUTPUT R1  TIBRPIK                                             01578000
*               R9  TIBADDR                                             01579000
*                                                                       01580000
XMVCHK   DS    0H                                              @D51KDOW 01581000
*SGLINK XMVCHK,S,INPUT=(R0,RA,RC,RE),OUTPUT=(R1,R9),WORK=(RB)           01582490
         L     RB,IJBCLIM                                      @D66ODOW 01583000
         USING CLIM,RB                                         @D66ODOW 01584000
         LH    RB,CSTASK           GET HIGHEST VALID TID       @D66ODOW 01585000
         DROP  RB                                              @D66ODOW 01586000
         CR    RB,R0               GIVEN TIK CORRECT           @D51KDOW 01587000
         BLR   RE                  NO, --->                    @D51KDOW 01588000
         LTR   RB,R0               ZERO TIK                    @D61NDOW 01589000
         BZR   RE                  YES, --->                   @D61NDOW 01590000
         SLL   RB,2                INDEX INTO TIBATAB          @D66ODOW 01591000
         AL    RB,ATIBATAB         TIB ADDR OF                 @D66ODOW 01592000
         ICM   R9,B'1111',0(RB)    ... OF OUR TASK AVAILABLE   @D66ODOW 01593000
         BZR   RE                  NO, --->                    @D51KDOW 01594000
         USING TIBADR,R9                                       @D51KDOW 01595000
         CLI   TIBRQID,NOTACT      TIB CURRENTLY USED          @D64ADOW 01596000
         BER   RE                  NO --->                     @D64ADOW 01597000
         TM    TIBFLAG,FETCHEOJ    TASK TERMINATING REQUIRED   @D51KDOW 01598000
         BO    XMVCHK2             YES, DO ADDITIONAL CHECK    @D68IDMZ 01599490
         TM    TIBFLAG1,EOTINPR+EOTACT TASK TERMINATING        @D51KDOW 01600000
         BNZ   XMVCHK2             YES, DO ADDITIONAL CHECK    @D68IDMZ 01601490
         L     RB,TIBTCB           GET TCB ADDR                @D51KDOW 01602000
         USING TCBADR,RB                                       @D51KDOW 01603000
         TM    TCBABEX,EXITACT     AB-EXIT ACTIVE              @D64ADMK 01604000
         DROP  RB                                              @D51KDOW 01605000
         BO    4(,RE)              YES, --->                   @D51KDOW 01606000
XMVCHK1  DS    0H                  AMODE 31 OK AT OFFSET 8     @DY46493 01606690
         LH    R1,TIBRPIK          PIK OF TARGET TASK          @D64ADOW 01607000
         B     8(,RE)                                          @D51KDOW 01609000
XMVCHK2  DS    0H                  CHECK IF EZA/DB2 CLEANUP ACT@DY46493 01609120
         LA    RB,XMVCHK3          SWITCH IN AMODE 31 ..       @DY46493 01609150
         O     RB,BIT0OMSK         .. BECAUSE OF TCBX          @DY46493 01609180
         BSM   0,RB                SWITCH IN AMODE 31          @DY46493 01609210
XMVCHK3  DS    0H                  CHECK IF EZA CLEANUP ACTIVE @DY46493 01609240
         L     RB,TIBTCB           GET TCB ADDR OF TARGET      @DY46493 01609270
         L     RB,TCBATCBE-TCBADR(,RB) GET TCB EXTENSION       @DY46493 01609300
         USING TCBXADR,RB                                      @D68IDMZ 01609450
         TM    TCBXFLG2,TCBXEZAC+TCBXDB2C EZA OR DB2 CLEAN. ACT@DY46455 01609590
         BNZ   XMVCHK1             YES, ALLOWED DURING EOT     @DY46455 01609640
         DROP  RB                  RELEASE TCBX                @D68IDMZ 01609720
*        CHECK IF SVC WAS GIVEN IN AMODE 31 THEN NO SWITCH BACK         01609730
         TM    TCBEXFLG,TCBEXAM    NO SWITCH TO AMODE 24       @DY46493 01609740
         BO    4(,RE)              FUNCTION NOT ALLOWED        @DY46493 01609750
         LA    RB,XMVCHK5                                      @DY46493 01609760
         BSM   0,RB                SWITCH TO AMODE 24          @DY46493 01609770
XMVCHK5  DS    0H                                              @D68IDMZ 01609780
         B     4(,RE)              FUNCTION NOT ALLOWED        @D68IDMZ 01609810
         DROP  R9                  RELEASE TCB                 @D51KDOW 01609900
         SPACE 3                                                        01610000
**************************************************************          01611000
*                                                            *          01612000
*        CHECK AUTHORIZATION                                 *          01613000
*                                                            *          01614000
**************************************************************          01615000
*        INPUT  R1  POINTER TO PARAMETER LIST                           01616000
*               RA  TCB ADDRESS                                         01617000
*               RE  RETURN ADDR                                         01618000
*        OUTPUT RC  POINTER TO PARAMETER LIST                           01619000
*        WORK   R5                                                      01620000
*                                                                       01621000
XMVCAUTH DS    0H                                              @D51KDOW 01622000
         L     R5,TCBEXFLG         GET CALLERS ADDRESSING MODE @D52VDOW 01623000
         AMODESW SET,AMODE=(5),WR=(12) ... AND ENTER IT        @D52VDOW 01624000
         L     R5,PCBPTR           GET PCB POINTER             @D51KDOW 01625000
         LA    R1,0(,R1)           CLEAR FIRST BYTE/BIT        @D52VDOW 01626000
         LR    RC,R1               PAR LIST ADDR BASE REGISTER @D51KDOW 01627000
         USING PCBADR,R5                                       @D51KDOW 01628000
         TM    PCBSSFLG,VTAM       REQUESTOR VTAM?             @D51KDOW 01629000
         DROP  R5                                              @D51KDOW 01630000
         BOR   RE                  YES, RETURN                 @D51KDOW 01631000
         TM    TCBFLAG3,VSPT       REQUESTOR VSE/PT?           @D51KDOW 01632000
         BOR   RE                  YES, RETURN                 @D51KDOW 01633000
         TM    TCBFLAG3,TCBVEND    REQUESTOR AUTHORIZED VENDOR @D52VDOW 01634000
         BOR   RE                  YES, RETURN                 @D52VDOW 01635000
         B     XMVRC04             NO, RETURN CODE 4           @D51KDOW 01636000
         SPACE 3                                                        01637000
**************************************************************          01638000
*                                                            *          01639000
*        EXIT ROUTINES                                       *          01640000
*                                                            *          01641000
**************************************************************          01642000
XMVRC00  LA    RF,XMVRTC00         RETURNCODE IS ZERO          @D51KDOW 01643000
         B     XMVEXIT                                         @D51KDOW 01644000
XMVRC04  LA    RF,XMVRTC04         AUTHORIZATION FAILURE       @D51KDOW 01645000
         B     XMVEXIT                                         @D51KDOW 01646000
S120PCK  DS    0H                                              @D64ADOW 01647000
         MVI   RID+1,REENTRID      RESTORE RID                 @D64ADOW 01648000
         LM    R9,R8,ERA           RELOAD REGISTER FROM TIME   @D64ADOW 01649000
***                                OF PROGRAM CHECK                     01650000
XMVRC0C  DS    0H                                              @D51KDOW 01651000
         LA    RF,XMVRTC0C         TO-ADDR INCORRECT           @D51KDOW 01652000
         B     XMVEXIT                                         @D51KDOW 01653000
XMVRC14  LA    RF,XMVRTC14         TO-TIK INVALID              @D51KDOW 01654000
         B     XMVEXIT                                         @D51KDOW 01655000
XMVRC1C  LA    RF,XMVRTC1C         TO-TASK IN TERMINATION      @D51KDOW 01656000
         B     XMVEXIT                                         @D51KDOW 01657000
XMVRC24  LA    RF,XMVRTC24         INVALID FUNCTION CODE       @D51KDOW 01658000
*        B     XMVEXIT                                         @D51KDOW 01659000
XMVEXIT  DS    0H                                              @D51KDOW 01660000
         L     RB,TCBSAVE          GET USER SAVE AREA          @D51KDOW 01661000
         USING SVEARA,RB                                       @D51KDOW 01662000
         ST    RF,SVER0F           PASS RET-CODE TO REQUESTOR  @D51KDOW 01663000
         DROP  RB                                              @D51KDOW 01664000
         B     EXIT                EXIT TO DISPATCHER          @D51KDOW 01665000
***                                ... BACK TO TASKS DUAL               01666000
         SPACE                                                          01667000
         DROP  R6                                              @D51KDOW 01668000
         DROP  RA                                              @D51KDOW 01669000
         DROP  RD                                              @D51KDOW 01670000
         SPACE  3                                                       01671000
         MAPXMOVE ,                                            @D51KDOW 01672000
         EJECT                                                          01673000
IJBSUP50 CSECT    ,                                            @D51KDOW 01674000
*********************************************************************** 01675000
*                                                                       01676000
*        SVC 117 : TDSERV FUNCTIONS                                     01677000
*                                                                       01678000
*********************************************************************** 01679000
*                                                                       01680000
*        INPUT REGISTERS TO SVC                                         01681000
*            R6 - DISPATCHER BASE                                       01682000
*            RA - ADDR OF CURRENT TCB                                   01683000
*            RB - ADDR OF CURRENT SAVE AREA                             01684000
*            RC - BASE-REGISTER OF SVC                                  01685000
*            RF - FUNCTION CODE                                         01686000
*                                                                       01687000
         USING SVC117,RC         ROUTINE BASE                  @D61RDOW 01688000
         USING TCBADR,RA         CURRENT TCB                   @D61RDOW 01689000
         USING SVEARA,RB         CURRENT SAVE AREA             @D61RDOW 01690000
         USING DISP,R6           DISPATCHER BASE               @D61RDOW 01691000
SVC117   DS    0H                                              @D61RDOW 01692000
         C     RF,S117FC52       IS FCT ATTACH SYSTEM TASK     @D61RDOW 01693000
         BE    S117ATT           YES, --->                     @D61RDOW 01694000
         C     RF,S117FC56       FCT RETRIEVE TURBO DISP INFO  @D61RDOW 01695000
         BE    S117INFO          YES, --->                     @D61RDOW 01696000
         C     RF,S117FC60       FCT EXECUTE USER CODE AS SVC  @D67BDOW 01697000
         BE    S117USVC          YES, --->                     @D67BDOW 01698000
         TM    S117FLAG,S117IUSE OTHER TASK ALREADY IN SVC 117 @D61RDOW 01699000
         BO    S117RC4           YES GIVE RETURN CODE          @D61RDOW 01700000
         OI    S117FLAG,S117IUSE SVC 117 IS IN USE NOW         @D61RDOW 01701000
         L     R9,IJBTDATB       GET CPU VECTOR TABLE ADDRESS  @D61RDIS 01702000
         L     RD,ASVASVDL       ADDR OF SVA ROUTINE TABLE     @D61RDOW 01703000
         USING SVASVDL,RD                                      @D61RDOW 01704000
         ICM   RD,15,AIJBTD      GET ENTRY/BASE OF SVA RTN     @D61RDOW 01705000
         DROP  RD                                              @D61RDOW 01706000
         BZ    S117ERR3          PHASE NOT LOADED              @D61RDOW 01707000
         DROP  RC                                              @D61RDOW 01708000
*        AMODESW CALL,REGS=(RE,RD) CALL PROCESSING ROUTINE              01709000
         AMODESW CALL,REGS=(RE,RD)                             @D61RDOW 01710000
         USING *,RE                                            @D61RDOW 01711000
         NI    S117FLAG,XFF-S117IUSE SVC 117 IS FREE           @D61RDOW 01712000
         B     EXIT                                            @D61RDIS 01713000
         DROP  RE                                              @D61RDOW 01714000
         USING SVC117,RC         ROUTINE BASE                  @D61RDOW 01715000
         SPACE                                                          01716000
S117RC4  DS    0H                                              @D61RDOW 01717000
         LA    RF,4              SVC 117 IN USE                @D61RDOW 01718000
         B     S117ERR7                                        @D61RDOW 01719000
S117RC12 DS    0H                                              @D61RDOW 01720000
         LA    RF,12             INVALID ADDR                  @D61RDOW 01721000
         B     S117ERR7                                        @D61RDOW 01722000
S117ERR1 DS    0H                                              @D61RDOW 01723000
         LA    R1,TDREAS12       REASON CODE TD NOT ACTIVE     @D61RDOW 01724000
         B     S117ERR5                                        @D61RDOW 01725000
S117ERR3 DS    0H                                              @D61RDOW 01726000
         LA    R1,TDREAS04       REASON CODE IJBTDSRV NOT LOADE@D61RDOW 01727000
S117ERR5 DS    0H                                              @D61RDOW 01728000
         ST    R1,SVER01         PASS REG 1 TO USER            @D61RDOW 01729000
S117RC8  DS    0H                                              @D61RDOW 01730000
         LA    RF,8              RETURN CODE 8                 @D61RDOW 01731000
S117ERR7 DS    0H                                              @D61RDOW 01732000
         ST    RF,SVER0F         PASS REG 15 TO USER           @D61RDOW 01733000
         B     EXIT              RETURN TO DISPATCHER          @D61RDOW 01734000
*                                                                       01735000
S117ATT  DS    0H                                              @D61RDOW 01736000
*        AMODESW SET,AMODE=31,WR=(R3)                                   01737000
         AMODESW SET,AMODE=31,WR=(R3)                          @D61RDOW 01738000
         LR    R3,R1             SAVE PARAMETER LIST ADDR      @D61RDOW 01739000
         LA    R2,VNDLEN-1(,R1)  GET END ADDR OF PARAMETER LIST@D61RDOW 01740000
         USING VNDINATT,R3                                     @D61RDOW 01741000
         TM    VNDFLAG,VNDSVNAR  SAVE AREA NAME FIELD SPECIFIED@D61RDOW 01742000
PCKS117X DS    0H                PROGRAM CHECK MAY OCCUR       @D61RDOW 01743000
         BNO   S117ATT2          NO, --->                      @D61RDOW 01744000
         LA    R2,VNDLENX1-1(,R1) GET END ADDR OF EXT'D PAR LST@D61RDOW 01745000
S117ATT2 DS    0H                                              @D61RDOW 01746000
         BAS   R8,VALIDSVA       VALIDATE PARAMETER LIST       @D61RDOW 01747000
*SGLINK VALIDSVA,INPUT=(R1,R2,R6,R8),WORK=(R2,R5)                       01748000
         ICM   R1,15,VNDCANCE    ADDR OF CANCEL EXIT           @D61RDOW 01749000
         BZ    S117ATT4          NOT AVAILABLE --->            @D61RDOW 01750000
         LA    R2,1(,R1)         VALIDATE MINIMUM LENGTH       @D61RDOW 01751000
         BAS   R8,VALIDSVA       VALIDATE ENTRY POINT          @D61RDOW 01752000
*SGLINK VALIDSVA,INPUT=(R1,R2,R6,R8),WORK=(R2,R5)                       01753000
S117ATT4 DS    0H                                              @D61RDOW 01754000
         ICM   R1,15,VNDEOTEX    ADDR OF EOT EXIT              @D61RDOW 01755000
         BZ    S117ATT6          NOT AVAILABLE --->            @D61RDOW 01756000
         LA    R2,1(,R1)         VALIDATE MINIMUM LENGTH       @D61RDOW 01757000
         BAS   R8,VALIDSVA       VALIDATE ENTRY POINT          @D61RDOW 01758000
*SGLINK VALIDSVA,INPUT=(R1,R2,R6,R8),WORK=(R2,R5)                       01759000
S117ATT6 DS    0H                                              @D61RDOW 01760000
         ICM   R1,15,VNDENTRY    ADDR OF SYSTEM TASK ENTRY     @D61RDOW 01761000
         BZ    ERR25             NOT AVAILABLE ---> CANCEL     @D61RDOW 01762000
         LA    R2,1(,R1)         VALIDATE MINIMUM LENGTH       @D61RDOW 01763000
         BAS   R8,VALIDSVA       VALIDATE ENTRY POINT          @D61RDOW 01764000
*SGLINK VALIDSVA,INPUT=(R1,R2,R6,R8),WORK=(R2,R5)                       01765000
         DROP  R3                                              @D61RDOW 01766000
         LR    R1,R3             RESTORE PARAMETER LIST ADDR   @D61RDOW 01767000
*        DISPMAC FUNC=ATTSTASK,INP1=R1 ATTACH SYSTEM TASK               01768000
         DISPMAC FUNC=ATTSTASK,INP1=R1                         @D61RDOW 01769000
***                              DISPMAC RETURNS TO DISPATCHER          01770000
*                                                                       01771000
S117INFO DS    0H                                              @D61RDOW 01772000
*        AMODESW SET,AMODE=31,WR=(R2)                                   01773000
         AMODESW SET,AMODE=31,WR=(R2)                          @D61RDOW 01774000
         USING TUCOMMON,R1                                     @D61RDOW 01775000
         LH    R2,TUCOMLEN       GET LENGTH OF PARAMETER LIST  @D61RDOW 01776000
PCKS117A DS    0H                PROGRAM CHECK POSSIBLE        @D61RDOW 01777000
         LA    R3,TUINFLEN       GET MINIMUM LENGTH FOR ALL    @D61RDOW 01778000
         C     R0,F0             ALL INFORMATION DATA REQUIRED @D61RDOW 01779000
         BE    S117I010          YES, --->                     @D61RDOW 01780000
         C     R0,F1             ONLY COMMON REQUIRED          @D61RDOW 01781000
         BNE   S117RC12          NO, ERROR                     @D61RDOW 01782000
         LA    R3,TUCOMLNE       GET MINIMUM LENGTH FOR COMMON @D61RDOW 01783000
S117I010 DS    0H                                              @D61RDOW 01784000
         CR    R2,R3             IS LENGTH SUFFICIENT          @D61RDOW 01785000
         BL    S117RC12          NO RETURN WITH ERROR          @D61RDOW 01786000
         BCTR  R2,0              GET END ..                    @D61RDOW 01787000
         AR    R2,R1             ... ADDRESS                   @D61RDOW 01788000
         USING TIBADR,R8         ADDRESSABILITY TO TIB         @D61RDOW 01789000
         L     R5,TIBPCB         GET PCB ADDR                  @D61RDOW 01790000
         USING PCBADR,R5                                       @D61RDOW 01791000
         LH    R5,PCEPIK         GET PIK OF REQUESTOR          @D61RDOW 01792000
         DROP  R1                                              @D61RDOW 01793000
         DROP  R5                                              @D61RDOW 01794000
         DROP  R8                                              @D61RDOW 01795000
         BAS   R8,VALWRITE       VALIDATE PARAMETER LIST       @D61RDOW 01796000
*SGLINK VALWRITE,INPUT=(R1,R2,R5,R6,R8),OUTPUT=(R5),WORK=(R2,R8)        01797000
         B     S117RC12                                        @D61RDOW 01798000
         B     S117RC12                                        @D61RDOW 01799000
*        B     *+4                                             @D61RDOW 01800000
***      END OF BRANCH TABLE                                   @D61RDOW 01801000
*        DISPMAC FUNC=TDINFO,INP1=R1 RETRIEVE TURBO DISP INFORMATION    01802000
         DISPMAC FUNC=TDINFO,INP1=R1                           @D61RDOW 01803000
***                              DISPMAC RETURNS TO DISPATCHER          01804000
*                                                                       01805000
S117USVC DS    0H                                              @D67BDOW 01806000
         LA    RF,16             PREPARE BAD RETURN CODE       @D67BDOW 01807000
         TM    TCBAUTHF,TCBVEND  TASK AUTHORIZED               @D67BDOW 01808000
         BNO   S117URET          NO RETURN WITH BAD RETC       @D67BDOW 01809000
         MVI   RID+1,SYSTEMID    DON'T ALLOW PF/PROG CHECKS    @D67BDOW 01810000
         LM    R0,R8,SVER00      RELOAD                        @D67BDOW 01811000
         LM    R9,RA,SVER09      ...... USER                   @D67BDOW 01812000
         LM    RC,RF,SVER0C      ........... REGISTER          @D67BDOW 01813000
         L     RB,SVER0B         ....................          @D67BDOW 01814000
         BASSM RE,R1             CALL SVC APPENDAGE            @D67BDOW 01815000
         L     R6,DISPAD         RESTORE DISPATCHER ADDR       @D67BDOW 01816000
         L     RA,TCBPTR         RESTORE TCB PTR               @D67BDOW 01817000
         L     RB,TCBSAVE        RESTORE SAVEAREA ADDR         @D67BDOW 01818000
         SLR   RF,RF             PREPARE GOOD RET CODE         @D67BDOW 01819000
S117URET DS    0H                                              @D67BDOW 01820000
         ST    RF,SVER0F         PASS RETURN CODE TO CALLER    @D67BDOW 01821000
         BR    R6                                              @D67BDOW 01822000
*                                                                       01823000
S117PCK  DS    0H                ENTRY FROM PROG CHECK HANDLER @D61RDOW 01824000
         MVI   RID+1,REENTRID    RESTORE RID                   @D64ADOW 01825000
         LM    R9,R8,ERA         RESTORE REGISTER              @D61RDOW 01826000
         B     S117RC8           RETURN TO CALLER              @D61RDOW 01827000
*                                                                       01828000
S117FC52 DC    F'52'             FCT CODE - ATTACH SYSTEMTASK  @D61RDOW 01829000
S117FC56 DC    F'56'             FCT CODE - RETRIEVE TURBO DISP@D61RDOW 01830000
S117FC60 DC    F'60'             FCT CODE - USER SVC           @D67BDOW 01831000
S117FLAG DC    X'00'             FLAG BYTE                     @D61RDOW 01832000
S117IUSE EQU   X'80'             SVC 117 CURRENTLY EXECUTING   @D61RDOW 01833000
*                                                                       01834000
         DROP  R6                                              @D61RDOW 01835000
         DROP  RA                                              @D61RDOW 01836000
         DROP  RB                                              @D61RDOW 01837000
         DROP  RC                                              @D61RDOW 01838000
         SPACE 2                                                        01839000
TDSRVTEM DS    0H                DUMMY RTN FOR SA SUPERVISOR   @D61RDOW 01840000
         USING *,RD                                            @D61RDOW 01841000
         LA    RF,0(,RF)         MAKE FCT CODE POSITIV         @D61RDOW 01842000
         C     RF,F8             IS FCT=STOPRQ                 @D61RDOW 01843000
         BE    TDSRV020          YES, IGNORE REQUEST           @D61RDOW 01844000
         C     RF,F24            IS FCT=RESTART                @D61RDOW 01845000
         BE    TDSRV020          YES, IGNORE REQUEST           @D61RDOW 01846000
         USING SVC117,RC         ROUTINE BASE                  @D61RDOW 01847000
         BH    S117RC8           YES, SET UP RETURN CODE       @D61RDOW 01848000
         DROP  RC                                              @D61RDOW 01849000
         C     RF,F20            IS FCT=SENSE                  @D61RDOW 01850000
         USING SVC117,RC         ROUTINE BASE                  @D61RDOW 01851000
         BNE   S117ERR1          NO, PASS RETURN CODE          @D61RDOW 01852000
         DROP  RC                                              @D61RDOW 01853000
         SLR   RF,RF                                           @D61RDOW 01854000
TDSRV020 DS    0H                                              @D61RDOW 01855000
         BSM   0,R14             RETURN TO CALLER              @D61RDOW 01856000
*                                                                       01857000
         DROP  RD                                              @D61RDOW 01858000
         SPACE 2                                                        01859000
         TDSERV FUNC=RSNCODE                                   @D61RDOW 01860000
         SPACE 2                                                        01861000
VNDINATT TDSERV FUNC=DSECT                                     @D61RDOW 01862000
         SPACE 2                                                        01863000
         TDSERV FUNC=TDIDSECT                                  @D61RDOW 01864000
&SYSECT  CSECT                                                 @D61RDOW 01865000
         EJECT                                                          01866000
*********************************************************************** 01867000
*                                                                       01868000
*        SVC 79  : VARIOUS FUNCTIONS                                    01869000
*                  ALLOWED IN CROSS MEMORY MODE (NOT ALL FCT'S)         01870000
*                                                                       01871000
*********************************************************************** 01872000
*                                                                       01873000
*        INPUT REGISTERS TO SVC                                         01874000
*            R6 - DISP                                                  01875000
*            RA - TCB ADDR                                              01876000
*            RB - SAVE AREA ADDR                                        01877000
*            RC - BASE-REGISTER OF SVC                                  01878000
*            RF - FUNCTION CODE                                         01879000
*                 0 : RETRY/PERCOLATE FROM ESTEAX-TYPE EXIT             01880000
*                 1 : RETURN FROM ETXR EXIT                             01881000
*                     NOT ALLOWED IN CROSS MEMORY MODE                  01882000
*                 2 : RETURN FROM ETXR EXIT                             01883000
*                     NOT ALLOWED IN CROSS MEMORY MODE                  01884000
*                 3 : DEFINE DISABLED TIMER EXIT ROUTINE                01885000
*                     (APPENDAGE TO CLOCK COMPARATOR INTERRUPT HANDLER) 01886000
*                 4 : NAME/TOKEN SERVICE                                01887000
*                                                                       01888000
         USING DISP,R6                                         @D67CDOW 01889000
         USING TCBADR,RA                                       @D64ADOW 01890000
         USING SVEARA,RB                                       @D64ADOW 01891000
         USING SVC79,RC          ROUTINE BASE                  @D64ADOW 01892000
SVC79    DS    0H                                              @D64ADOW 01893000
         L     R7,SVC79A10       GOTO 31 BIT MODE              @D64ADOW 01894000
         BSM   0,R7              ...                           @D64ADOW 01895000
SVC79A10 DC    A(SVC79L10+X'80000000')                         @D64ADOW 01896000
SVC79L10 DS    0H                ...                           @D64ADOW 01897000
         L     R2,TCBATCBE       GET TCBX ADDR                 @D64ADOW 01898000
         C     RF,SVC79MAX       FUNCTION CODE VALID?          @D64ADMK 01899000
         BH    S79C47E0          NO                            @D64ADMK 01900000
         SLL   RF,2              MULTIPLY 4                    @D64ADMK 01901000
         B     SVC79TAB(RF)                                    @D64ADMK 01902000
SVC79TAB B     SVC79EST       0  EXIT FROM ESTAEX              @D64ADMK 01903000
         B     SVC79ETX       1  EXIT FROM ETXR                @D64ADMK 01904000
         B     SVC79PST       2  EXIT FROM POST EXIT           @D64ADMK 01905000
         B     SVC79CLK       3  DEFINE TIMER APPENDAGE        @D67QDOW 01906000
         B     SVC79NTE       4  NAME/TOKEN SERVICES           @D67CDOW 01907000
SVC79END DS    0H                                              @D64ADOW 01908000
SVC79MAX DC    A((SVC79END-SVC79TAB)/4)                        @D64ADOW 01909000
***END OF BRANCH TABLE                                                  01910000
         SPACE 3                                                        01911000
***************************************************************         01912000
*        RETURN FROM ESTAEX TYPE EXIT ROUTINE                 *         01913000
***************************************************************         01914000
         SPACE                                                          01915000
         USING TCBXADR,R2                                      @D67CDOW 01916000
SVC79EST DS    0H                ...                           @D64ADOW 01917000
         TM    TCBABEX,EXITACT   ANY AB-TYPE EXIT ACTIVE       @D64ADOW 01918000
         BNO   S79C47E1          NO ---> CANCEL                @D64ADOW 01919000
         CLI   TCBEXIFL,TCBEXIEX ESTAEX TYPE EXIT ACTIVE       @D64ADOW 01920000
         BNE   S79C47E1          NO ---> CANCEL                @D64ADOW 01921000
         ICM   R3,B'1111',TCBFREX FRR STACK AVAILABLE          @D64ADOW 01922000
         BZ    SVC79L20          NO --->                       @D64ADOW 01923000
         USING FRRS,R3                                         @D64ADOW 01924000
         CLC   FRRSCURR,FRRSEMP  IS FRR STACK EMPTY            @D64ADOW 01925000
         BE    SVC79L20          YES, --->                     @D64ADOW 01926000
         OI    TCBXFLG1,TCBXFRRA INDICATE FRR STILL DEFINED    @D64ADOW 01927000
         DROP  R3                                              @D64ADOW 01928000
SVC79L20 DS    0H                                              @D64ADOW 01929000
         L     RF,SVER0E         RELOAD RETRY/PERCOL INDICATOR @D64ADOW 01930000
         ST    RF,SVER0F         ...                           @D64ADOW 01931000
         L     RD,ASGEXIT        GET BASE FOR SUBROUTINES      @D67QDOW 01932000
         L     RD,ABROUTAD-SGEXIT(,RD) GET BASE OF RETURN FROM @D67QDOW 01933000
         USING ABROUT,RD         ...                           @D67QDOW 01934000
         LA    R7,ABRETURN       ... ESTAEX-TYPE EXIT          @D64ADOW 01935000
         O     R7,BIT0OMSK       ... FORCE 31 BIT MODE         @D64ADOW 01936000
         BSM   0,R7              ENTER SUBROUTINE              @D64ADOW 01937000
         DROP  R2                                              @D67QDOW 01938000
         DROP  RD                                              @D67QDOW 01939000
         EJECT                                                 @D64ADOW 01940000
***************************************************************         01941000
*        RETURN FROM ETXR                                     *         01942000
***************************************************************         01943000
         SPACE                                                          01944000
         USING TCBXADR,R2                                      @D67CDOW 01945000
SVC79ETX DS    0H                                              @D64ADMK 01946000
         TM    TCBXFLG3,TCBXSVCX SVC WITH FCT CODE 1 NOT       @D64ADOW 01947000
         BO    S79ERRXM          ... ALLOWED IN X-MEM MODE     @D64ADOW 01948000
         L     R9,SVEPSW2        GET CONTINUATION ADDRESS      @D64ADMK 01949000
         LA    R9,0(,R9)                                       @D64ADMK 01950000
         C     R9,AS79ETXR       SVC ONLY ALLOWED WITHIN       @D64ADMK 01951000
         BNE   ERR21             ... THE SUPERVISOR            @D64ADMK 01952000
         O     R9,BIT0OMSK       FORCE 31 BIT MODE             @D64ADMK 01953000
         BSM   0,R9              CONTINUE IN ETXREXIT(ATETXR40)@D64ADMK 01954000
AS79ETXR DC    A(ATETXR41)        ADDR BEHIND SVC79 FCT CODE 1 @D64ADMK 01955000
         DROP  R2                                              @D67QDOW 01956000
         SPACE 2                                               @D64ADMK 01957000
***************************************************************         01958000
*        RETURN FROM POST EXIT                                *         01959000
***************************************************************         01960000
         SPACE                                                          01961000
         USING TCBXADR,R2                                      @D67CDOW 01962000
SVC79PST DS    0H                                              @D64ADMK 01963000
         TM    TCBXFLG3,TCBXSVCX SVC WITH FCT CODE 2 NOT       @D64ADOW 01964000
         BO    S79ERRXM          ... ALLOWED IN X-MEM MODE     @D64ADOW 01965000
         L     R9,SVEPSW2        GET CONTINUATION ADDRESS      @D64ADMK 01966000
         LA    R9,0(,R9)                                       @D64ADMK 01967000
         C     R9,AS79POST       SVC ONLY ALLOWED WITHIN       @D64ADMK 01968000
         BNE   ERR21             ... THE SUPERVISOR            @D64ADMK 01969000
         O     R9,BIT0OMSK       FORCE 31 BIT MODE             @D64ADMK 01970000
         BSM   0,R9              CONTINUE IN POSTEXIT          @D64ADMK 01971000
AS79POST DC    A(PSTEX41)         ADDR BEHIND SVC79 FCT CODE 2 @D64ADMK 01972000
         DROP  R2                                              @D67QDOW 01973000
         EJECT                                                          01974000
***************************************************************         01975000
*        SETUP DISABLED CLOCK COMPARATOR FLIH APPENDAGE       *         01976000
*              AND RELATED TOD VALUE                          *         01977000
***************************************************************         01978000
         SPACE                                                          01979000
SVC79CLK DS    0H                                              @D67QDOW 01980000
         LA    RF,S79_RETC04    PREPARE WITH RETURN CODE       @D67QDOW 01981000
         CLI   SVEPSWKY,X0C     PSW KEY 0 AND SUPVR STATE REQ'S@D67QDOW 01982000
         BNE   S79CLKR9         RETURN                         @D67QDOW 01983000
         L     RE,AEXTRTN       GET SMICR BASE                 @D67QDOW 01984000
         USING EXTRTN,RE                                       @D67QDOW 01985000
         LTR   R1,R1            SET OR RESET FUNCTION          @D67QDOW 01986000
         BZ    S79CLKRS         ZERO ---> RESET FUNCTION       @D67QDOW 01987000
****************************************************************        01988000
***      SET DIE APPENDAGE                                   ***        01989000
****************************************************************        01990000
S79CLKSE DS    0H                                              @D67QDOW 01991000
         LA    RF,S79_RETC08    PREPARE WITH RETURN CODE       @D67QDOW 01992000
         LA    R7,DIE_TAB       GET FIRST ENTRY OF DIE TABLE   @D67QDOW 01993000
S79CLKS1 DS    0H   ----------> SET FUNCTION                   @D67QDOW 01994000
         ICM   R3,15,DIE_ADEQ(R7) IS ENTRY FREE                @D67QDOW 01995000
         BZ    S79CLKS2         YES, ---> TAKE ENTRY           @D67QDOW 01996000
         LA    R7,16(,R7)       GOTO NEXT ENTRY                @D67QDOW 01997000
         C     R7,DIE_TABE                                     @D67QDOW 01998000
         BL    S79CLKS1                                        @D67QDOW 01999000
         B     S79CLKR9         RETURN WITH RETURN CODE        @D67QDOW 02000000
S79CLKS2 DS    0H   ----------> SET FUNCTION                   @D67QDOW 02001000
         LA    RF,S79_RETC0C    PREPARE WITH RETURN CODE       @D67QDOW 02002000
         L     R5,IJBSMCOM      GET SMCOM ADDR                 @D67QDOW 02003000
         USING SMCOM,R5                                        @D67QDOW 02004000
         C     R1,SMCSVA        BELOW SVA-LOW                  @D67QDOW 02005000
         BL    S79CLKR9         YES, RETURN WITH ERROR         @D67QDOW 02006000
         C     R1,SMCESVA       WITHIN SVA-LOW                 @D67QDOW 02007000
         BL    S79CLKS3         YES, ---> ADDR OK              @D67QDOW 02008000
         C     R1,SMCSVA31      BELOW SVA-HIGH                 @D67QDOW 02009000
         BL    S79CLKR9         YES, RETURN WITH ERROR         @D67QDOW 02010000
         C     R1,SMCESV31      WITHIN SVA-HIGH                @D67QDOW 02011000
         BH    S79CLKR9         NO,  RETURN WITH ERROR         @D67QDOW 02012000
S79CLKS3 DS    0H   ----------> SET FUNCTION                   @D67QDOW 02013000
         ST    R1,DIE_ADEQ(,R7) SAVE DIE APPENDAGE ADDR        @D67QDOW 02014000
         MVC   DIE_OTEQ(2,R7),TID TASK-ID TO TOKEN             @D67QDOW 02015000
         MVC   SVER00,DIE_TOEQ(R7) PASS TOKEN TO CALLER        @D67QDOW 02016000
         SLR   R5,R5                                           @D67QDOW 02017000
         BCTR  R5,0                                            @D67QDOW 02018000
         ST    R5,DIE_CLEQ(,R7) CLOCK COMPARATOR               @D67QDOW 02019000
         ST    R5,DIE_CLEQ+4(,R7) ...VALUE TO MAX VALUE        @D67QDOW 02020000
         L     R1,ATOD_SETR     ADRR OF SET ROUTINE (31BIT MODE@D67QDOW 02021000
         ST    R1,SVER01        ... AND PASS TO CALLER         @D67QDOW 02022000
         SLR   RF,RF            PREPARE GOOD RETURN CODE       @D67QDOW 02023000
         B     S79CLKR9                                        @D67QDOW 02024000
         SPACE                                                          02025000
ATOD_SETR DC   A(TOD_SETR+X'80000000')                         @D67QDOW 02026000
         SPACE 3                                                        02027000
****************************************************************        02028000
***      RESET DIE APPENDAGE                                 ***        02029000
****************************************************************        02030000
S79CLKRS DS    0H                                              @D67QDOW 02031000
         LR    R1,R0            COPY TOKEN                     @D67QDOW 02032000
         SRL   R1,16            GET INDEX                      @D67QDOW 02033000
         BCTR  R1,0             .......... FROM TOKEN          @D67QDOW 02034000
         SLL   R1,4             MULTIPLY WITH ENTRY LENGTH     @D67QDOW 02035000
         LA    R2,DIE_TAB       BEGIN OF DIE TABLE             @D67QDOW 02036000
         AR    R1,R2            ENTRY BELONGING TO TOKEN       @D67QDOW 02037000
         LA    RF,S79_RETC10    PREPARE WITH RETURN CODE       @D67QDOW 02038000
         C     R1,DIE_TABE      ADDR WITHIN TABLE              @D67QDOW 02039000
         BNL   S79CLKR9         NO, ---> INVALID TOKEN         @D67QDOW 02040000
         C     R0,DIE_TOEQ(,R1) REALLY A VALID TOKEN           @D67QDOW 02041000
         BNE   S79CLKR9         NO --->                        @D67QDOW 02042000
*        CLM   R0,3,TID         IS TID CORRECT                 @D67QDOW 02043000
*        BNE   S79CLKR9         NO --->                        @D67QDOW 02044000
         SLR   RF,RF                                           @D67QDOW 02045000
         ST    RF,DIE_ADEQ(,R1) FREE UP ENTRY                  @D67QDOW 02046000
         BCTR  RF,0                                            @D67QDOW 02047000
         ST    R7,DIE_CLEQ(,R1) SET TOD ............           @D67QDOW 02048000
         ST    R7,DIE_CLEQ+4(,R1) ..... TO MAX VALUE           @D67QDOW 02049000
         LA    RF,DIE_TAB       LOOK FOR LOWEST TOD IN TABLE   @D67QDOW 02050000
         LR    R1,RF            COPY                           @D67QDOW 02051000
S79CLKR1 DS    0H                                              @D67QDOW 02052000
         LA    R1,16(,R1)       GOTO NEXT ENTRY                @D67QDOW 02053000
         C     R1,DIE_TABE      END OF DIE TABLE REACHED       @D67QDOW 02054000
         BNL   S79CLKR3         YES, --->                      @D67QDOW 02055000
         OC    DIE_ADEQ(4,R1),DIE_ADEQ(R1) ENTRY USED          @D67QDOW 02056000
         BZ    S79CLKR1         NO, ---> CHECK NEXT ENTRY      @D67QDOW 02057000
         OC    DIE_ADEQ(4,RF),DIE_ADEQ(RF) ENTRY USED          @D67QDOW 02058000
         BZ    S79CLKR2         NO, ---> TAKE NEW ENTRY        @D67QDOW 02059000
         CLC   DIE_CLEQ(8,R1),DIE_CLEQ(RF) NEW TOD SMALLER     @D67QDOW 02060000
         BNL   S79CLKR1         NO, ---> CHECK NEXT ENTRY      @D67QDOW 02061000
S79CLKR2 DS    0H                                              @D67QDOW 02062000
         LR    RF,R1            TAKE CURRENT ENTRY             @D67QDOW 02063000
         B     S79CLKR1         CHECK NEXT ENTRY               @D67QDOW 02064000
S79CLKR3 DS    0H                                              @D67QDOW 02065000
         MVC   DIE_WORK,0(RF)   LOWEST TOD TO WORK ELEMENT     @D67QDOW 02066000
***                             ... REGARDLESS IF AN APPENDAGE DEFINED  02067000
         DROP  RE                                              @D67QDOW 02068000
         SLR   RF,RF            SETUP GOOD RETURN CODE         @D67QDOW 02069000
S79CLKR9 DS    0H                                              @D67QDOW 02070000
         ST    RF,SVER0F        PASS RETURN CODE TO CALLER     @D67QDOW 02071000
         BR    R6               EXIT TO DISPATCHER             @D67QDOW 02072000
         DROP  RC                                              @D67QDOW 02073000
         SPACE 3                                               @D67QDOW 02074000
***************************************************************         02075000
*        SET CLOCK COMPARATOR VALUE FOR DIE APPENDAGE         *         02076000
***************************************************************         02077000
         USING TOD_SETR,RC                                     @D67QDOW 02078000
TOD_SETR DS    0H                                              @D67QDOW 02079000
         STNSM PSWMASK,DISABLE  DISABLE IO AND EXT INTERRUPTS  @D67QDOW 02080000
***                ---> PROG CHK IF CALLER NOT SUPVR STATE AND KEY 0    02081000
         STM   RE,RD,0(RD)      SAVE CALLERS REGISTER          @D67QDOW 02082000
         L     RC,ASVC79        GET COMMON BASE                @D67QDOW 02083000
         USING SVC79,RC                                        @D67QDOW 02084000
         L     RA,TCBPTR        LOAD REGISTER ...              @D67QDOW 02085000
         L     RB,TCBSAVE       ...WITH ACTIVE USINGS          @D67QDOW 02086000
         L     RE,AEXTRTN       GET SMICR BASE                 @D67QDOW 02087000
         USING EXTRTN,RE                                       @D67QDOW 02088000
         L     R5,TDCPUPTR      CPU CNTRL BLK OF ACTIVE CPU    @D67QDOW 02089000
         USING TCPUADR,R5                                      @D67QDOW 02090000
         LA    RF,S79_RETC14    PREPARE WITH RETURN CODE       @D67QDOW 02091000
         TM    TCPFLAG1,TDCNPA  DOES CALLER OWN NP LOCK        @D67QDOW 02092000
         BNO   TOD_S090         NO PASS RETURN CODE            @D67QDOW 02093000
         DROP  R5                                              @D67QDOW 02094000
         LA    RF,S79_RETC18    PREPARE WITH RETURN CODE       @D67QDOW 02095000
         TM    PSWMASK,ENABLIO+ENABLEXT CALLER DISABLED        @D67QDOW 02096000
         BNZ   TOD_S090         NO PASS RETURN CODE            @D67QDOW 02097000
         LR    R3,R0            COPY TOKEN                     @D67QDOW 02098000
         SRL   R3,16            GET INDEX                      @D67QDOW 02099000
         BCTR  R3,0             .......... FROM TOKEN          @D67QDOW 02100000
         SLL   R3,4             MULTIPLY WITH ENTRY LENGTH     @D67QDOW 02101000
         LA    R4,DIE_TAB       BEGIN OF DIE TABLE             @D67QDOW 02102000
         AR    R3,R4            ENTRY BELONGING TO TOKEN       @D67QDOW 02103000
         LA    RF,S79_RETC10    PREPARE WITH RETURN CODE       @D67QDOW 02104000
         C     R3,DIE_TABE      ADDR WITHIN TABLE              @D67QDOW 02105000
         BNL   TOD_S090         NO, ---> INVALID TOKEN         @D67QDOW 02106000
         LA    RF,S79_RETC20    PREPARE WITH RETURN CODE       @D67QDOW 02107000
         OC    DIE_ADEQ(4,R3),DIE_ADEQ(R3) APPENDAGE DEFINED   @D67QDOW 02108000
         BZ    TOD_S090         NO --->                        @D67QDOW 02109000
         LA    RF,S79_RETC10    PREPARE WITH RETURN CODE       @D67QDOW 02110000
         C     R0,DIE_TOEQ(,R3) REALLY A VALID TOKEN           @D67QDOW 02111000
         BNE   TOD_S090         NO --->                        @D67QDOW 02112000
         LA    RF,S79_RETC1C    PREPARE WITH RETURN CODE       @D67QDOW 02113000
         CLI   RID+1,SYSTEMID   RID=0 IS ALLOWED               @D67QDOW 02114000
         BE    TOD_S010                                        @D67QDOW 02115000
         CLI   RID+1,USERTID    RID=8 IS ALLOWED               @D67QDOW 02116000
         BNE   TOD_S090                                        @D67QDOW 02117000
*        LA    RF,S79_RETC10    PREPARE WITH RETURN CODE       @D67QDOW 02118000
*        CLM   R0,3,TID         IS TID CORRECT                 @D67QDOW 02119000
*        BNE   TOD_S090         NO --->                        @D67QDOW 02120000
TOD_S010 DS    0H                                              @D67QDOW 02121000
         STM   R1,R2,DIE_CLEQ(R3) SAVE CLOCK VALUE             @D67QDOW 02122000
         CLI   RID+1,SYSTEMID   RID=0 (DIE APPENDAGE ACTIVE)   @D67QDOW 02123000
         BE    TOD_S080         YES, RETURN                    @D67QDOW 02124000
         CLC   DIE_CLCK,DIE_CLEQ(R3) WORKING CLOCK SMALLER     @D67QDOW 02125000
         BNH   TOD_S080         NO, --->                       @D67QDOW 02126000
         MVC   DIE_WORK,0(R3)   NEW WORKING ENTRY              @D67QDOW 02127000
         STCKC CLOCK            GET CURRENT CLOCK COMPARATOR   @D67QDOW 02128000
         CLC   CLOCK,DIE_CLCK   NEW VALUE SMALLER              @D67QDOW 02129000
         BNH   TOD_S080         NO, --->                       @D67QDOW 02130000
         MVC   CLOCK,DIE_CLCK   SET NEW CLOCK COMPARATOR       @D67QDOW 02131000
         SCKC  CLOCK                                           @D67QDOW 02132000
         DROP  RE                                              @D67QDOW 02133000
TOD_S080 DS    0H                                              @D67QDOW 02134000
         SLR   RF,RF                                           @D67QDOW 02135000
TOD_S090 DS    0H                                              @D67QDOW 02136000
         TM    PSWMASK,ENABLIO+ENABLEXT CALLER DISABLED        @D67QDOW 02137000
         BZ    TOD_S091         YES ---> PSW CORRECT           @D67QDOW 02138000
         SLR   R5,R5                                           @D67QDOW 02139000
         IC    R5,PSWMASK                                      @D67QDOW 02140000
         EX    R5,TOD_STOSM     DISABLE IO AND EXT INTERRUPTS  @D67QDOW 02141000
TOD_S091 DS    0H                                              @D67QDOW 02142000
         ST    RF,4(,RD)        PASS RETURN CODE TO CALLER     @D67QDOW 02143000
         LM    RE,RC,0(RD)      RESTORE REGISTER               @D67QDOW 02144000
         BSM   0,RE             RETURN TO CALLER               @D67QDOW 02145000
TOD_STOSM STOSM PSWMASK,X'00'   BACK TO CALLERS PSW            @D67QDOW 02146000
         SPACE                                                          02147000
S79_RETC04 EQU 4                  CALLER NOT SUPVR STATE AND   @D67QDOW 02148000
***                               ... PSW KEY ZERO                      02149000
S79_RETC08 EQU 8                  DIE TABLE FULL               @D67QDOW 02150000
S79_RETC0C EQU 12                 DIE APPENDAGE NOT IN SVA     @D67QDOW 02151000
S79_RETC10 EQU 16                 TOKEN IS INVALID             @D67QDOW 02152000
S79_RETC14 EQU 20                 REQ'D FCT NEEDS NP LOCK      @D67QDOW 02153000
S79_RETC18 EQU 24                 CALLER NOT DISABLED          @D67QDOW 02154000
S79_RETC1C EQU 28                 CALLER HAS NOT CORRECT RID   @D67QDOW 02155000
S79_RETC20 EQU 32                 NO DIE APPENDAGE DEFINED     @D67QDOW 02156000
         EJECT                                                 @D64ADOW 02157000
****************************************************************        02158000
*        RETRIEVE/RETURN AN ELEMENT TO HOLD NAME/TOKEN         *        02159000
*        LOCK THE SPECIFIED CHAIN                              *        02160000
*             R1 FUNCTION CODE                                 *        02161000
*             MORE INPUT -> SEE DIFFERENT FUNCTIONS            *        02162000
****************************************************************        02163000
         SPACE                                                          02164000
SVC79NTE DS    0H                                              @D67CDOW 02165000
*****                           CHECK CALLERS AUTHORITY                 02166000
         SLR   R15,R15          PREPARE GOOD RETURN CODE       @D67CDOW 02167000
         SLR   R3,R3            PREPARE INDICATOR              @D67CDOW 02168000
NT_CK10  DS    0H                                              @D67CDOW 02169000
         LA    R4,NT_TABLE      GET FIRST PHASE                @D67CDOW 02170000
         L     R5,SVOLDADR                                     @D67CDOW 02171000
         N     R5,BIT0OFF       RESET ADDRESSING MODE          @D67CDOW 02172000
NT_CK30  DS    0H                                              @D67CDOW 02173000
         C     R5,0(,R4)        HIGHER THAN PHASE LOAD ADDR    @D67CDOW 02174000
         BL    NT_CK50          NO GO TO NEXT PHASE            @D67CDOW 02175000
         C     R5,4(,R4)        LOWER THAN END ADDR            @D67CDOW 02176000
         BL    NT_CK90          YES, CALLER IS AUTHORIZED      @D67CDOW 02177000
NT_CK50  DS    0H                                              @D67CDOW 02178000
         LA    R4,8(,R4)        BUMP TO NEXT ENTRY             @D67CDOW 02179000
         CLI   0(R4),XFF        END OF LIST                    @D67CDOW 02180000
         BNE   NT_CK30          NO CONTINUE WITH NEXT PHASE    @D67CDOW 02181000
         LTR   R3,R3            PHASES RELOADED IN MEANTIME    @D67CDOW 02182000
         BNZ   NT_CK80                                         @D67CDOW 02183000
         BAS   R3,NT_PHA_INIT                                  @D67CDOW 02184000
         L     R1,SVER01        RELOAD FCT CODE                @D67CDOW 02185000
         B     NT_CK10                                         @D67CDOW 02186000
NT_CK80  DS    0H                                              @D67CDOW 02187000
         LA    R15,8            RC: CALLER NOT AUTHORIZED      @D67CDOW 02188000
NT_CK90  DS    0H                                              @D67CDOW 02189000
         LTR   R15,R15                                         @D67CDOW 02190000
         BNZ   S79C47E2         CANCEL IF NOT AUTHORIZED       @D67CDOW 02191000
         C     R1,S79FMAX       VALID FCT CODE                 @D67CDOW 02192000
         BH    S79C47E3         YES, ---> CANCEL               @D67CDOW 02193000
         SLL   R1,2             PREPARE INDEX INTO BR TABLE    @D67CDOW 02194000
         B     S79BTAB(R1)      SELECT FCT                     @D67CDOW 02195000
S79BTAB  B     NT_WAIT        0 WAIT ON CHAIN TO BECOME FREE   @D67CDOW 02196000
         B     NT_SKEY        1 SWITCH STATE AND KEY           @D67CDOW 02197000
         B     NT_GVIS        2 GET DYNAMIC WORKAREA           @D67CDOW 02198000
         B     NT_FVIS        3 RETURN DYNAMIC WORKAREA        @D67CDOW 02199000
         B     NT_LOCK_CREATE 4 LOCK NAME/TOKEN CHAIN AND      @D67CDOW 02200000
***                             ... GET NT-ELEMENT FROM FREE-CHAIN      02201000
         B     NT_ULCK_CREATE 5 ENQ NT-ELEMENT IN NAME/TOKEN   @D67CDOW 02202000
***                             ... CHAIN, UNLOCK NAME/TOKEN CHAIN      02203000
***                             ... AND POST ALL WAITERS                02204000
         B     NT_LOCK_DELETE 6 LOCK NAME/TOKEN CHAIN AND      @D67CDOW 02205000
***                             ... RETURN ADDRESS OF NT-ELEMENT FOR    02206000
***                             ... SPECIFIED NAME                      02207000
         B     NT_ULCK_DELETE 7 REMOVE NT-ELEMENT FROM         @D67CDOW 02208000
***                             ... NAME/TOKEN CHAIN AND ENQ IN FREE    02209000
***                             ... CHAIN, UNLOCK NAME/TOKEN CHAIN      02210000
***                             ... AND POST ALL WAITERS                02211000
S79BTABE DS    0H                                              @D67CDOW 02212000
         SPACE                                                          02213000
S79FMAX  DC    A((S79BTABE-S79BTAB)/4) MAX FCT CODE            @D67CDOW 02214000
         SPACE 3                                                        02215000
***************************************************************         02216000
*        WAIT ON CHAIN TO BECOME FREE                         *         02217000
*           R0 ANCHOR OF NAME/TOKEN CHAIN                     *         02218000
***************************************************************         02219000
         SPACE                                                          02220000
NT_WAIT  DS 0H                                                 @D67CDOW 02221000
         L     R5,ASRQTAB      ADDR(RESOURCE DESRIPTOR TAB)    @D67CDOW 02222000
         LA    R5,SRQNTOK-SRQTAB(,R5) PTR TO CHANQ WAIT QUEUE  @D67CDOW 02223000
         L     R1,SVER00       SPECIFY CHAIN TO BE WAITED ON   @D67CDOW 02224000
         BAL   RC,RWAIT        WAIT                            @D67CDOW 02225000
*SGLINK  RWAIT INPUT=(R1,R5,RC)                                         02226000
         BR    R6                                              @D67CDOW 02227000
         SPACE 3                                                        02228000
***************************************************************         02229000
*        SWITCH KEY AND STATE IN X-MEM MODE                   *         02230000
*           R0 CONTAINS KEY                                   *         02231000
***************************************************************         02232000
         SPACE                                                          02233000
NT_SKEY DS 0H                                                  @D67CDOW 02234000
         L     R0,SVER00        GET KEY                        @D67CDOW 02235000
         N     R0,F240          MAKE KEY REALLY VALID          @D67CDOW 02236000
         LTR   R0,R0            SWITCH TO KEY 0 REQ'D          @D67CDOW 02237000
         BZ    NT_SK20          YES --->                       @D67CDOW 02238000
         SLL   R0,16            KEY TO CORRECT POSITION        @D67CDOW 02239000
         O     R0,SVEPSW        SWITCH TO                      @D67CDOW 02240000
         ST    R0,SVEPSW        ... REQUESTED KEY              @D67CDOW 02241000
         BR    R6                                              @D67CDOW 02242000
NT_SK20  DS    0H                                              @D67CDOW 02243000
         NI    SVEPSWKY,X'0E'   GIVE TASK SUPERVISOR STATE     @D67CDOW 02244000
***                             ...AND KEY ZERO                         02245000
         BR    R6               EXIT TO DISPATCHER             @D67CDOW 02246000
         SPACE 3                                                        02247000
***************************************************************         02248000
*        GET IEANTXXX'S DYNAMIC WORK AREA                     *         02249000
*           R0 CONTAINS LENGTH                                *         02250000
***************************************************************         02251000
         SPACE                                                          02252000
NT_GVIS  DS    0H                                              @D67CDOW 02253000
         L     R2,TCBATCBE                                     @D67CDOW 02254000
         USING TCBXADR,R2                                      @D67CDOW 02255000
         SLR   RF,RF            PREPARE BAD                    @D67CDOW 02256000
         BCTR  RF,0             ... RETURN CODE                @D67CDOW 02257000
         ICM   R1,15,TCBXAUTS   TASK ALREADY EXECUTING NT SERVI@D67CDOW 02258000
         BNZ   NT_GVIS5                                        @D67CDOW 02259000
         STH   R0,TCBXAUTL      REMEMBER WORKING STORAGE LENGTH@D67CDOW 02260000
         SGETVIS LENGTH=(0),ADDRESS=(1),LOC=ANY                @D67CDOW 02261000
NT_GVIS5 DS    0H                                              @D67CDOW 02262000
         ST    RF,SVER0F        PASS RETURN CODE TO CALLER     @D67CDOW 02263000
         LTR   RF,RF                                           @D67CDOW 02264000
         BNZR  R6                                              @D67CDOW 02265000
         ST    R1,SVER01        PASS DYN WORK AREA ADDRESS     @D67CDOW 02266000
         ST    R1,TCBXAUTS      REM. WORKING STORAGE ADDRESS   @D67CDOW 02267000
         BR    R6               EXIT TO DISPATCHER             @D67CDOW 02268000
         DROP  R2                                              @D67CDOW 02269000
         SPACE 3                                                        02270000
***************************************************************         02271000
*        RETURN IEANTXXX'S DYNAMIC WORK AREA                  *         02272000
***************************************************************         02273000
         SPACE                                                          02274000
NT_FVIS  DS    0H                                              @D67CDOW 02275000
         L     R2,TCBATCBE                                     @D67CDOW 02276000
         USING TCBXADR,R2                                      @D67CDOW 02277000
         LH    R0,TCBXAUTL      GET LENGTH OF DYN WORKAREA     @D67CDOW 02278000
         L     R1,TCBXAUTS      GET ADDR OF DYN WORKAREA       @D67CDOW 02279000
         SFREEVIS LENGTH=(0),ADDRESS=(1)                       @D67CDOW 02280000
         AIF   (NOT &BGDEBUG).NTFV010                          @D67CDOW 02281000
         LTR   RF,RF                                           @D67CDOW 02282000
         BZ    NT_FV010                                        @D68CDOW 02283000
         STCM  R5,15,NT_FVA10                                  @D68CDOW 02284000
         BAS   R5,SYSERROR                                     @D68CDOW 02285000
NT_FVA10 DC    X'00000000'                                     @D68CDOW 02286000
NT_FV010 DS    0H                                              @D68CDOW 02287000
.NTFV010 ANOP                                                  @D67CDOW 02288000
         ST    RF,SVER0F        PASS RETURN CODE TO CALLER     @D67CDOW 02289000
         XC    TCBXAUTL,TCBXAUTL CLEAR LENGTH                  @D67CDOW 02290000
         XC    TCBXAUTS,TCBXAUTS ... AND ADDR OF DYN WORKAREA  @D67CDOW 02291000
         BR    R6               EXIT TO DISPATCHER             @D67CDOW 02292000
         DROP  R2                                              @D67CDOW 02293000
         SPACE 3                                                        02294000
****************************************************************        02295000
*        LOCK NT-CHAIN AND RETRIEVE NT-ELEMENT                 *        02296000
*           R0 CONTAINS ANCHOR OF CHAIN                        *        02297000
****************************************************************        02298000
NT_LOCK_CREATE DS 0H                                           @D67CDOW 02299000
         L     R5,SVER00        ADDR OF CHAIN HEADER = LOCKWORD@D67CDOW 02300000
         LA    RF,4             PREPARE CHAIN LOCKED           @D67CDOW 02301000
         L     R1,0(,R5)        GET LOCK WORD                  @D67CDOW 02302000
         N     R1,BIT0OFF       RESET LOCK                     @D67CDOW 02303000
         LR    R4,R1            COPY LOCK CONTENT              @D67CDOW 02304000
         O     R4,BIT0ON                                       @D67CDOW 02305000
         CS    R1,R4,0(R5)      TRY TO LOCK                    @D67CDOW 02306000
         BNE   NT_LO90          NO, --->                       @D67CDOW 02307000
         SLR   RF,RF            PREPARE GOOD RETURN CODE       @D67CDOW 02308000
         ICM   R1,15,NT_ELEM_FLST                              @D67CDOW 02309000
         BNZ   NT_LO50                                         @D67CDOW 02310000
         LA    RF,8             PREPARE NO NT-ELEMENT AVAILABLE@D67CDOW 02311000
         L     R1,0(,R5)        GET LOCK WORD                  @D67CDOW 02312000
         N     R1,BIT0OFF       RESET LOCK                     @D67CDOW 02313000
         LR    R4,R1            COPY LOCK CONTENT              @D67CDOW 02314000
         O     R4,BIT0ON                                       @D67CDOW 02315000
         CS    R4,R1,0(R5)      FREE LOCK                      @D67CDOW 02316000
         B     NT_LO90                                         @D67CDOW 02317000
NT_LO50  DS    0H                                              @D67CDOW 02318000
         L     R4,0(,R1)        GET ADDR OF NEXT ELEMENT       @D67CDOW 02319000
         ST    R4,NT_ELEM_FLST  DEQ FIRST ELEMENT              @D67CDOW 02320000
         MVC   8(2,R5),TID      SAVE CURRENT TASK ID           @D67CDOW 02321000
         ST    R1,4(,R5)        ...AND NT-ELEM ADDR            @D67CDOW 02322000
NT_LO90  DS    0H                                              @D67CDOW 02323000
         ST    RF,SVER0F        PASS RETURN CODE TO CALLER     @D67CDOW 02324000
         BR    R6               EXIT TO DISPATCHER             @D67CDOW 02325000
         SPACE 3                                                        02326000
****************************************************************        02327000
*        ENQUE NT-ELEMENT INTO NT-CHAIN                        *        02328000
*        UNLOCK NAME/TOKEN CHAIN                               *        02329000
*        POST ANY WAITER                                       *        02330000
*           R0 CONTAINS ANCHOR OF CHAIN                        *        02331000
****************************************************************        02332000
NT_ULCK_CREATE DS 0H                                           @D67CDOW 02333000
         L     R5,SVER00       CHAIN HEADER = LOCKWORD         @D67CDOW 02334000
         SLR   RF,RF                                           @D67CDOW 02335000
         LR    R7,R5           COPY WHERE TO ENQ NT-ELEMENT    @D67CDOW 02336000
         L     R4,4(,R5)       NT-ELEM ADDR                    @D67CDOW 02337000
         B     NT_UL21                                         @D67CDOW 02338000
NT_UL20  DS    0H                                              @D67CDOW 02339000
         LR    R7,R3           GOTO NEXT ENTRY IN CHAIN        @D67CDOW 02340000
NT_UL21  DS 0H                                                 @D67CDOW 02341000
         L     R3,0(,R7)       GET FIRST/NEXT IN CHAIN         @D67CDOW 02342000
         N     R3,BIT0OFF      MAKE ADDRESS ONLY               @D67CDOW 02343000
         LTR   R3,R3           FIRST/NEXT IN CHAIN             @D67CDOW 02344000
         BZ    NT_UL50         IF FIRST/LAST TO BE ENQ'D --->  @D67CDOW 02345000
         CLC   NTTENAME-NTTE(16,R4),NTTENAME-NTTE(R3) NEW      @D67CDOW 02346000
***                            NAME SMALLER THAN OLD                    02347000
         BL    NT_UL50         YES GOTO ENQ                    @D67CDOW 02348000
         BH    NT_UL20         CHECK NEXT NAME                 @D67CDOW 02349000
         LA    RF,16           PREPARE RC DUPLICATE NAME/TOKEN @D67CDOW 02350000
         L     R3,NT_ELEM_FLST NT-ELEMENT                      @D67CDOW 02351000
         ST    R3,0(,R4)       ... POOL OF                     @D67CDOW 02352000
         ST    R4,NT_ELEM_FLST ... UNUSED ELEMENTS             @D67CDOW 02353000
         B     NT_UL60         NAME EQ --->  GIVE RET CODE     @D67CDOW 02354000
NT_UL50  DS    0H                                              @D67CDOW 02355000
         ST    R3,0(,R4)       ENQ REST OF CHAIN BEHIND NEW    @D67CDOW 02356000
         CR    R5,R7           ENQ ON TOP                      @D67CDOW 02357000
         BE    NT_UL70         YES --->                        @D67CDOW 02358000
         ST    R4,0(R7)        ENQ NEW TO CHAIN                @D67CDOW 02359000
NT_UL60  DS    0H                                              @D67CDOW 02360000
         L     R4,0(,R5)       GET LOCKWORD CONTENT            @D67CDOW 02361000
         N     R4,BIT0OFF      RESET LOCK INDICATION           @D67CDOW 02362000
NT_UL70  DS    0H                                              @D67CDOW 02363000
         XC    4(6,R5),4(R5)   CLEAR NT-ELEM ADDR AND TID      @D67CDOW 02364000
         L     R3,0(,R5)       GET LOCKWORD CONTENT            @D67CDOW 02365000
         CS    R3,R4,0(R5)     DO UNLOCK                       @D67CDOW 02366000
         LR    R1,R5           COPY CHAIN HEADER               @D67CDOW 02367000
         L     R5,ASRQTAB      ADDR(RESOURCE DESRIPTOR TAB)    @D67CDOW 02368000
         LA    R5,SRQNTOK-SRQTAB(,R5) PTR TO CHANQ WAIT QUEUE  @D67CDOW 02369000
         CLI   0(R5),TIBAVAIL  ANY WAITER                      @D67CDOW 02370000
         BNE   NT_UL90         NO, SKIP POSTING                @D67CDOW 02371000
         LR    R3,RF           SAVE RETURN CODE                @D67CDOW 02372000
         BAL   RF,RPOST        POST WAITER                     @D67CDOW 02373000
*SGLINK  RPOST INPUT=(R1,R5,R6,RF),WORK=(R5,RE)                         02374000
         LR    RF,R3           RESTORE RETURN CODE             @D67CDOW 02375000
NT_UL90  DS    0H                                              @D67CDOW 02376000
         ST    RF,SVER0F       PASS RETURN CODE TO CALLER      @D67CDOW 02377000
         BR    R6              EXIT TO DISPATCHER              @D67CDOW 02378000
         SPACE 3                                                        02379000
***************************************************************         02380000
*        LOCK NT-CHAIN                                        *         02381000
*        RETURN ADDRESS OF NT-ELEMENT RELATED TO SPECFIED NAME*         02382000
*          R0 CONTAINS ANCHOR OF CHAIN                        *         02383000
*          R2 CONTAINS ADDRESS OF NAME                        *         02384000
***************************************************************         02385000
         SPACE                                                          02386000
NT_LOCK_DELETE DS 0H                                           @D67CDOW 02387000
         L     R5,SVER00        ADDR OF CHAIN HEADER = LOCKWORD@D67CDOW 02388000
         L     R2,SVER02        ADDR OF NAME                   @D67CDOW 02389000
         LA    RF,4             PREPARE CHAIN LOCKED           @D67CDOW 02390000
         L     R1,0(,R5)        GET LOCK WORD                  @D67CDOW 02391000
         N     R1,BIT0OFF       RESET LOCK                     @D67CDOW 02392000
         LR    R4,R1            COPY LOCK CONTENT              @D67CDOW 02393000
         O     R4,BIT0ON                                       @D67CDOW 02394000
         CS    R1,R4,0(R5)      TRY TO LOCK                    @D67CDOW 02395000
         BNE   NT_LD90          NO, --->                       @D67CDOW 02396000
         SLR   RF,RF            PREPARE GOOD RETURN CODE       @D67CDOW 02397000
         LR    R4,R5                                           @D67CDOW 02398000
NT_LD20  DS    0H                                              @D67CDOW 02399000
         L     R3,0(,R4)        GET FIRST/NEXT NT-ELEMENT      @D67CDOW 02400000
         N     R3,BIT0OFF                                      @D67CDOW 02401000
         USING NTTE,R3                                         @D67CDOW 02402000
         CLC   NTTENAME,0(R2)   IS THIS OUR NAME               @D67CDOW 02403000
         DROP  R3                                              @D67CDOW 02404000
         BE    NT_LD80                                         @D67CDOW 02405000
         LR    R4,R3            SET NEW ANCHOR                 @D67CDOW 02406000
         BL    NT_LD20          CHECK NEXT ELEMENT             @D67CDOW 02407000
         LA    R15,12           INDICATE NAME NOT FOUND        @D67CDOW 02408000
         B     NT_LD90                                         @D67CDOW 02409000
NT_LD80  DS    0H                                              @D67CDOW 02410000
         MVC   8(2,R5),TID      SAVE CURRENT TASK ID           @D67CDOW 02411000
         ST    R3,4(,R5)        NT ELEMNT ADDR TO CHAIN HEADER @D67CDOW 02412000
NT_LD90  DS    0H                                              @D67CDOW 02413000
         ST    RF,SVER0F       PASS RETURN CODE TO CALLER      @D67CDOW 02414000
         BR    R6               RETURN                         @D67CDOW 02415000
         SPACE 3                                                        02416000
***************************************************************         02417000
*        REMOVE NT-ELEMENT FROM NAME/TOKEN CHAIN              *         02418000
*        ...AND ENQUEUE INTO FREE CHAIN (IF ANCHOR CONTAINS   *         02419000
*        ...AN NT-ELEMENT ADDR)                               *         02420000
*        UNLOCK NT-CHAIN                                      *         02421000
*        POST ANY WAITER                                      *         02422000
*          R0 CONTAINS ANCHOR OF CHAIN                        *         02423000
***************************************************************         02424000
         SPACE                                                          02425000
NT_ULCK_DELETE DS 0H                                           @D67CDOW 02426000
         L     R5,SVER00        ADDR OF CHAIN HEADER = LOCKWORD@D67CDOW 02427000
         L     R2,SVER02        GET PARAMETER                  @D67CDOW 02428000
         SLR   RF,RF                                           @D67CDOW 02429000
         LTR   R2,R2           UNLOCK ONLY REQ'D               @D67CDOW 02430000
         BNZ   NT_UD35         YES--->                         @D67CDOW 02431000
         L     R4,4(,R5)       GET NT-ELEM ADDR                @D67CDOW 02432000
         LR    R7,R5                                           @D67CDOW 02433000
NT_UD20  DS    0H                                              @D67CDOW 02434000
         L     R8,0(,R7)       GET FIRST/NEXT NT ELEM IN CHAIN @D67CDOW 02435000
         N     R8,BIT0OFF                                      @D67CDOW 02436000
         CR    R8,R4           IS THIS OUR ENTRY               @D67CDOW 02437000
         BE    NT_UD30         YES                             @D67CDOW 02438000
         LR    R7,R8           CHECK NEXT IN CHAIN             @D67CDOW 02439000
         B     NT_UD20                                         @D67CDOW 02440000
NT_UD30  DS    0H                                              @D67CDOW 02441000
         L     R8,0(,R4)       GET SUCCESSOR                   @D67CDOW 02442000
         L     R3,NT_ELEM_FLST NT-ELEMENT TO                   @D67CDOW 02443000
         ST    R3,0(,R4)       ... POOL OF                     @D67CDOW 02444000
         ST    R4,NT_ELEM_FLST ... UNUSED ELEMENTS             @D67CDOW 02445000
         CR    R7,R5           DEQ FROM TOP                    @D67CDOW 02446000
         BE    NT_UD40         YES                             @D67CDOW 02447000
         ST    R8,0(,R7)       REMOVE OUR FROM CHAIN           @D67CDOW 02448000
NT_UD35  DS    0H                                              @D67CDOW 02449000
         L     R8,0(,R5)       GET LOCKWORD                    @D67CDOW 02450000
         N     R8,BIT0OFF      FREE LOCK                       @D67CDOW 02451000
NT_UD40  DS    0H                                              @D67CDOW 02452000
         XC    4(6,R5),4(R5)   CLEAR NT-ELEM ADDR AND TID      @D67CDOW 02453000
         L     R3,0(,R5)       GET LOCKWORD CONTENT            @D67CDOW 02454000
         CS    R3,R8,0(R5)     DO UNLOCK                       @D67CDOW 02455000
         LR    R1,R5           COPY CHAIN HEADER               @D67CDOW 02456000
         L     R5,ASRQTAB      ADDR(RESOURCE DESRIPTOR TAB)    @D67CDOW 02457000
         LA    R5,SRQNTOK-SRQTAB(,R5) PTR TO CHANQ WAIT QUEUE  @D67CDOW 02458000
         CLI   0(R5),TIBAVAIL  ANY WAITER                      @D67CDOW 02459000
         BNE   NT_UL90         NO, SKIP POSTING                @D67CDOW 02460000
         LR    R3,RF           SAVE RETURN CODE                @D67CDOW 02461000
         BAL   RF,RPOST        POST WAITER                     @D67CDOW 02462000
*SGLINK  RPOST INPUT=(R1,R5,R6,RF),WORK=(R5,RE)                         02463000
         LR    RF,R3           RESTORE RETURN CODE             @D67CDOW 02464000
NT_UD90  DS    0H                                              @D67CDOW 02465000
         ST    RF,SVER0F       PASS RETURN CODE TO CALLER      @D67CDOW 02466000
         BR    R6               RETURN                         @D67CDOW 02467000
         DROP  RA                                              @D67CDOW 02468000
         DROP  RB                                              @D67CDOW 02469000
         SPACE 3                                                        02470000
***************************************************************         02471000
*        CLEAN-UP PROCESSING                                  *         02472000
*        CALLED BY SGAP DURING TASK TERMINATION               *         02473000
*        CALLED BY SGPCK AFTER PROGRAM CHECK                  *         02474000
***************************************************************         02475000
         SPACE                                                          02476000
NT_CLEAN_P1 DS 0H          ***  CLEANUP PROCESSING PART 1      @D67CDOW 02477000
***                             1 - UNLOCK CHAIN IF OWNED BY CURRENT    02478000
***                                 TASK AND POST WAITERS               02479000
***                             2 - ENQ NT-ELEMENT IN FREE CHAIN IF     02480000
***                                 NOT IN ANY NT-LEVEL-CHAIN           02481000
***                             3 - INITIALIZE CHAIN HEADER             02482000
         TM    NT_FLAG,NT_ACTIVE                               @D67CDOW 02483000
         BZ    NT_C1P91                                        @D67CDOW 02484000
         L     RA,TCBPTR        GET TASKS TCB PTR              @D67CDOW 02485000
         USING TCBADR,RA                                       @D67CDOW 02486000
         STM   R0,RF,SVCWORKA   SAVE WORK REGISTER             @D67CDOW 02487000
         L     R2,TCBATCBE      GET RELATED TCBX ADDR          @D67CDOW 02488000
         USING TCBXADR,R2                                      @D67CDOW 02489000
         LA    R4,TCBXNTOK      GET CHAIN HEADER LEVEL=TASK    @D67CDOW 02490000
         LA    R9,NT_C1P10      GET CONTINUATION ADDR          @D67CDOW 02491000
         B     NT_C1P50         GOTO LOOP                      @D67CDOW 02492000
NT_C1P10 DS 0H                                                 @D67CDOW 02493000
         L     R7,PCBPTR        GET CURRENT PCB PTR            @D67CDOW 02494000
         USING PCBADR,R7                                       @D67CDOW 02495000
         L     R7,PCBAPCBX      GET RELATED PCBX ADDR          @D67CDOW 02496000
         USING PCBXADR,R7                                      @D67CDOW 02497000
         LA    R4,PCBXNTOK      GET CHAIN HEADER LEVEL=HOME    @D67CDOW 02498000
         LA    R9,NT_C1P20      GET CONTINUATION ADDR          @D67CDOW 02499000
         B     NT_C1P50         GOTO LOOP                      @D67CDOW 02500000
NT_C1P20 DS 0H                                                 @D67CDOW 02501000
         LA    R4,PCBXPNTK      GET CHAIN HEADER LEVEL=PRIMARY @D67CDOW 02502000
         LA    R9,NT_C1P30      GET CONTINUATION ADDR          @D67CDOW 02503000
         B     NT_C1P50         GOTO LOOP                      @D67CDOW 02504000
         DROP  R7                                              @D67CDOW 02505000
NT_C1P30 DS 0H                                                 @D67CDOW 02506000
         L     R4,IJBSPAVT      GET                            @D67CDOW 02507000
         USING SUPAVT,R4                                       @D67CDOW 02508000
         L     R4,ASUPAVTE      ...ADDRESS                     @D67CDOW 02509000
         USING SUPAVTEX,R4                                     @D67CDOW 02510000
         LA    R4,NTOKSQUE      ... NT-SYSTEM QUEUE            @D67CDOW 02511000
         DROP  R4                                              @D67CDOW 02512000
         LA    R9,NT_C1P80      GET CONTINUATION ADDR          @D67CDOW 02513000
***      B     NT_C1P50         GOTO LOOP                      @D67CDOW 02514000
NT_C1P50 DS 0H                                                 @D67CDOW 02515000
         SLR   R3,R3            CLEAR WORK REG                 @D67CDOW 02516000
         CS    R3,R3,0(R4)      CHECK CHAIN LOCKED             @D67CDOW 02517000
         LTR   R3,R3            CHAIN CURRENTLY LOCKED         @D67CDOW 02518000
         BNMR  R9               NO --->                        @D67CDOW 02519000
         LH    RF,8(,R4)        GET TID OF OWNER               @D67CDOW 02520000
         CH    RF,TID           CURRENT TASK OWNER             @D67CDOW 02521000
         BNER  R9               NO --->                        @D67CDOW 02522000
         ICM   R3,15,4(R4)      GET NT-ELEMENT ADDRESS         @D67CDOW 02523000
         BZ    NT_C1P70         NOT AVAILABLE                  @D67CDOW 02524000
         ICM   R0,15,0(R3)      ELEMENT IN A CHAIN             @D67CDOW 02525000
         BNZ   NT_C1P70         YES --->                       @D67CDOW 02526000
         L     R0,NT_ELEM_FLST  GET FREECHAIN HEADER           @D67CDOW 02527000
         ST    R0,0(,R3)        CHAIN TO OUR ELEMENT           @D67CDOW 02528000
         ST    R3,NT_ELEM_FLST  ENQUEUE INTO CHAIN             @D67CDOW 02529000
NT_C1P70 DS 0H                                                 @D67CDOW 02530000
         XC    4(6,R4),4(R4)   CLEAR NT-ELEM ADDR AND TID      @D67CDOW 02531000
         L     R5,0(,R4)       GET LOCKWORD CONTENT            @D67CDOW 02532000
         LR    R3,R5           ... COPY IT                     @D67CDOW 02533000
         N     R5,BIT0OFF      RESET LOCK INDICATION           @D67CDOW 02534000
         CS    R3,R5,0(R4)     DO UNLOCK                       @D67CDOW 02535000
         LR    R1,R4           COPY CHAIN HEADER               @D67CDOW 02536000
         L     R5,ASRQTAB      ADDR(RESOURCE DESRIPTOR TAB)    @D67CDOW 02537000
         LA    R5,SRQNTOK-SRQTAB(,R5) PTR TO CHANQ WAIT QUEUE  @D67CDOW 02538000
         CLI   0(R5),TIBAVAIL  ANY WAITER                      @D67CDOW 02539000
         BNER  R9              NO, SKIP POSTING                @D67CDOW 02540000
         BAL   RF,RPOST        POST WAITER                     @D67CDOW 02541000
*SGLINK  RPOST INPUT=(R1,R5,R6,RF),WORK=(R5,RE)                         02542000
         BR    R9                                              @D67CDOW 02543000
         SPACE                                                          02544000
NT_C1P80 DS 0H            ***   ALL NT-CHAINS PROCESSED        @D67CDOW 02545000
         ICM   R1,15,TCBXAUTS   GET ADDR OF DYN WORKAREA       @D67CDOW 02546000
         BZ    NT_C1P90                                        @D67CDOW 02547000
         LH    R0,TCBXAUTL      GET LENGTH OF DYN WORKAREA     @D67CDOW 02548000
         SFREEVIS LENGTH=(0),ADDRESS=(1)                       @D67CDOW 02549000
         SLR   RF,RF                                           @D67CDOW 02550000
         STH   RF,TCBXAUTL      CLEAR LENGTH                   @D67CDOW 02551000
         ST    RF,TCBXAUTS      ... AND ADDR OF DYN WORKAREA   @D67CDOW 02552000
NT_C1P90 DS 0H                                                 @D67CDOW 02553000
         LM    R0,RF,SVCWORKA   RESTORE REGISTER               @D67CDOW 02554000
         DROP  R2                                              @D67CDOW 02555000
NT_C1P91 DS 0H                                                 @D67CDOW 02556000
         BSM   0,R4             RETURN TO CALLER               @D67CDOW 02557000
         SPACE 3                                                        02558000
NT_CLEAN_P2 DS 0H         ***   CLEANUP PROCESSING PART 2      @D67CDOW 02559000
***                             1 - DELETE ALL NAME/TOKEN PAIRS OWNED   02560000
***                                 BY CURRENT TASK                     02561000
***                             2 - ENQ NT-ELEMENT, JUST RELEASED,      02562000
***                                 IN FREE CHAIN                       02563000
         TM    NT_FLAG,NT_ACTIVE                               @D67CDOW 02564000
         BZ    NT_C2P91         GOTO LOOP                      @D67CDOW 02565000
         L     RA,TCBPTR        GET TASKS TCB PTR              @D67CDOW 02566000
         STM   R0,RF,SVCWORKA   SAVE WORK REGISTER             @D67CDOW 02567000
         L     R2,TCBATCBE      GET RELATED TCBX ADDR          @D67CDOW 02568000
         USING TCBXADR,R2                                      @D67CDOW 02569000
         LA    R4,TCBXNTOK      GET CHAIN HEADER LEVEL=TASK    @D67CDOW 02570000
         LA    R9,NT_C2P10      GET CONTINUATION ADDR          @D67CDOW 02571000
         B     NT_C2P40         GOTO LOOP                      @D67CDOW 02572000
NT_C2P10 DS 0H                                                 @D67CDOW 02573000
         L     R7,PCBPTR        GET CURRENT PCB PTR            @D67CDOW 02574000
         USING PCBADR,R7                                       @D67CDOW 02575000
         L     R7,PCBAPCBX      GET RELATED PCBX ADDR          @D67CDOW 02576000
         USING PCBXADR,R7                                      @D67CDOW 02577000
         LA    R4,PCBXNTOK      GET CHAIN HEADER LEVEL=HOME    @D67CDOW 02578000
         LA    R9,NT_C2P20      GET CONTINUATION ADDR          @D67CDOW 02579000
         B     NT_C2P40         GOTO LOOP                      @D67CDOW 02580000
NT_C2P20 DS 0H                                                 @D67CDOW 02581000
         CLC   TID,IJBHMTID    IS THIS A MAINTASK              @D67CDOW 02582000
         BH    NT_C2P90        YES, NO NEED TO CHK OTHER CHAINS@D67CDOW 02583000
         LA    R4,PCBXPNTK      GET CHAIN HEADER LEVEL=PRIMARY @D67CDOW 02584000
         LA    R9,NT_C2P30      GET CONTINUATION ADDR          @D67CDOW 02585000
         B     NT_C2P40         GOTO LOOP                      @D67CDOW 02586000
         DROP  R7                                              @D67CDOW 02587000
NT_C2P30 DS 0H                                                 @D67CDOW 02588000
         L     R4,IJBSPAVT      GET                            @D67CDOW 02589000
         USING SUPAVT,R4                                       @D67CDOW 02590000
         L     R4,ASUPAVTE      ...ADDRESS                     @D67CDOW 02591000
         USING SUPAVTEX,R4                                     @D67CDOW 02592000
         LA    R4,NTOKSQUE      ... NT-SYSTEM QUEUE            @D67CDOW 02593000
         DROP  R4                                              @D67CDOW 02594000
         LA    R9,NT_C2P90      GET CONTINUATION ADDR          @D67CDOW 02595000
***      B     NT_C2P40         GOTO LOOP                      @D67CDOW 02596000
NT_C2P40 DS 0H                                                 @D67CDOW 02597000
         LR    R1,R4            COPY CHAIN HEADER FOR WAIT/POST@D67CDOW 02598000
         L     R3,0(,R4)        GET LOCKWORD CONTENT           @D67CDOW 02599000
         N     R3,BIT0OFF       RESET LOCK INDICATOR           @D67CDOW 02600000
         LR    R5,R3            COPY LOCKWORD                  @D67CDOW 02601000
         O     R5,BIT0ON        TRY TO                         @D67CDOW 02602000
         CS    R3,R5,0(R4)      ... LOCK                       @D67CDOW 02603000
         BE    NT_C2P50         SUCCESSFULL --->               @D67CDOW 02604000
         L     R5,ASRQTAB      ADDR(RESOURCE DESRIPTOR TAB)    @D67CDOW 02605000
         LA    R5,SRQNTOK-SRQTAB(,R5) PTR TO CHANQ WAIT QUEUE  @D67CDOW 02606000
         BAL   RC,RWAIT        WAIT                            @D67CDOW 02607000
*SGLINK  RWAIT INPUT=(R1,R5,RC)                                         02608000
         L     RC,SVCWORKA+12*4 RELOAD BASE REG                @D67CDOW 02609000
         B     NT_C2P40         TRY TO LOCK ONCE MORE          @D67CDOW 02610000
NT_C2P50 DS 0H                                                 @D67CDOW 02611000
         L     R5,0(,R4)        GET FIRST/NEXT NT-ELEMENT ADDR @D67CDOW 02612000
         N     R5,BIT0OFF                                      @D67CDOW 02613000
         LTR   R5,R5                                           @D67CDOW 02614000
         BZ    NT_C2P70         GOTO UNLOCK                    @D67CDOW 02615000
         USING NTTE,R5                                         @D67CDOW 02616000
         CLC   TID,NTTEOWNR     CURRENT TASK OWNER             @D67CDOW 02617000
         BNE   NT_C2P60         NO --->                        @D67CDOW 02618000
         TM    NTTEFLGS,NTTEPRST KEEP AT EOT                   @D67CDOW 02619000
         BO    NT_C2P60         YES, --->                      @D67CDOW 02620000
         L     RF,0(,R5)        GET NEXT ELEMENT ADDR          @D67CDOW 02621000
         ST    RF,0(,R4)        REMOVE CURRENT ELEM FROM CHAIN @D67CDOW 02622000
         L     RF,NT_ELEM_FLST  GET CURRENT FIRST FREE NT-ELEM @D67CDOW 02623000
         ST    RF,0(,R5)        CHAIN FREE CHAIN TO OUR NT-ELEM@D67CDOW 02624000
         ST    R5,NT_ELEM_FLST  OUR IS NOW FIRST IN FREE CHAIN @D67CDOW 02625000
         B     NT_C2P50                                        @D67CDOW 02626000
NT_C2P60 DS 0H                                                 @D67CDOW 02627000
         LR    R4,R5            GOTO NEXT ELEMENT              @D67CDOW 02628000
         B     NT_C2P50                                        @D67CDOW 02629000
NT_C2P70 DS 0H                                                 @D67CDOW 02630000
         L     R5,0(,R1)       GET LOCKWORD CONTENT            @D67CDOW 02631000
         LR    R3,R5           COPY                            @D67CDOW 02632000
         N     R5,BIT0OFF      RESET LOCK INDICATION           @D67CDOW 02633000
         CS    R3,R5,0(R1)     DO UNLOCK                       @D67CDOW 02634000
***                                                                     02635000
         L     R5,ASRQTAB      ADDR(RESOURCE DESRIPTOR TAB)    @D67CDOW 02636000
         LA    R5,SRQNTOK-SRQTAB(,R5) PTR TO CHANQ WAIT QUEUE  @D67CDOW 02637000
         CLI   0(R5),TIBAVAIL  ANY WAITER                      @D67CDOW 02638000
         BNE   NT_C2P80        NO, SKIP POSTING                @D67CDOW 02639000
         BAL   RF,RPOST        POST WAITER                     @D67CDOW 02640000
*SGLINK  RPOST INPUT=(R1,R5,R6,RF),WORK=(R5,RE)                         02641000
NT_C2P80 DS 0H                                                 @D67CDOW 02642000
         BR    R9                                              @D67CDOW 02643000
NT_C2P90 DS 0H                                                 @D67CDOW 02644000
         LM    R0,RF,SVCWORKA   RESTORE REGISTER               @D67CDOW 02645000
         DROP  R2                                              @D67CDOW 02646000
NT_C2P91 DS 0H                                                 @D67CDOW 02647000
         BSM   0,R7             RETURN TO TERMINATOR           @D67CDOW 02648000
         SPACE 3                                                        02649000
***************************************************************         02650000
*        ROUTINE TO BUILD POOL OF NT-ELEMENTS                 *         02651000
*                TO INITIALIZE AUTHORITY TABLE                *         02652000
*        CALLED BY DYNCLASS FUNCTION=INITIALIZE               *         02653000
***************************************************************         02654000
         SPACE                                                          02655000
NT_INIT  DS    0H                                              @D67CDOW 02656000
         BAS   R3,NT_PHA_INIT                                  @D67CDOW 02657000
***                                                                     02658000
         L     R0,F4096                                        @D67CDOW 02659000
         LA    R1,NT_SPID                                      @D67CDOW 02660000
         SGETVIS LENGTH=(0),ADDRESS=(1),PAGE=YES,LOC=ANY,PFIX=YES,     X02661000
               SPID=(1)                                        @D67CDOW 02662000
         ST    R1,NT_POOL_ADDR                                 @D67CDOW 02663000
         LR    R2,R1             COPY START ADDR               @D67CDOW 02664000
         LR    R4,R1                                           @D67CDOW 02665000
         A     R4,F4096                                        @D67CDOW 02666000
NT_IN20  DS    0H                                              @D67CDOW 02667000
         LA    R3,NTTELEN(,R2)   GET NEXT ELEMENT ADDR         @D67CDOW 02668000
         CR    R3,R4                                           @D67CDOW 02669000
         BNL   NT_IN50                                         @D67CDOW 02670000
         ST    R3,0(,R2)         INSERT IN FREE CHAIN          @D67CDOW 02671000
         LR    R2,R3                                           @D67CDOW 02672000
         B     NT_IN20                                         @D67CDOW 02673000
***                                                                     02674000
NT_IN50  DS    0H                                              @D67CDOW 02675000
         ST    R1,NT_ELEM_FLST   SET ANCHOR TO NT-ELEMENT POOL @D67CDOW 02676000
         OI    NT_FLAG,NT_ACTIVE                               @D67CDOW 02677000
NT_IN90  DS    0H                                              @D67CDOW 02678000
         BSM   0,R8                                                     02679000
         SPACE                                                          02680000
NT_PHA_INIT DS 0H                                              @D67CDOW 02681000
***                             PROCESS IEANTCRS                        02682000
         L     R4,CVTPTR(0,0)                                  @D67CDOW 02683000
         ICM   R4,15,CVTCSRT-CVT(R4) GET CSRTABLE ADDR         @D67CDOW 02684000
         BZ    NT_IN90          ZERO, OBVIOUSLY SA ENVIRONMENT @D67CDOW 02685000
         L     R4,5*4(,R4)      GET IEACSTBL ADDR              @D67CDOW 02686000
         L     R1,1*4(,R4)      GET IEANTCRS ADDR              @D67CDOW 02687000
         N     R1,BIT0OFF                                      @D67CDOW 02688000
         LR    R2,R1            GET IEANTCRS                   @D67CDOW 02689000
         A     R2,8(,R1)        ...END ADDR                    @D67CDOW 02690000
         BCTR  R2,0                                            @D67CDOW 02691000
         STM   R1,R2,NT_IEANTCRS                               @D67CDOW 02692000
***                             PROCESS IEANTDLS                        02693000
         L     R1,2*4(,R4)      GET IEANTDLS ADDR              @D67CDOW 02694000
         N     R1,BIT0OFF                                      @D67CDOW 02695000
         LR    R2,R1            GET IEANTDLS                   @D67CDOW 02696000
         A     R2,8(,R1)        ...END ADDR                    @D67CDOW 02697000
         BCTR  R2,0                                            @D67CDOW 02698000
         STM   R1,R2,NT_IEANTDLS                               @D67CDOW 02699000
***                             PROCESS IEANTRTS                        02700000
         L     R1,3*4(,R4)      GET IEANTRTS ADDR              @D67CDOW 02701000
         N     R1,BIT0OFF                                      @D67CDOW 02702000
         LR    R2,R1            GET IEANTRTS                   @D67CDOW 02703000
         A     R2,8(,R1)        ...END ADDR                    @D67CDOW 02704000
         BCTR  R2,0                                            @D67CDOW 02705000
         STM   R1,R2,NT_IEANTRTS                               @D67CDOW 02706000
         BR    R3                                              @D67CDOW 02707000
         SPACE                                                          02708000
NT_SPID  CRSPID NAME=ILSTCK                                    @D67CDOW 02709000
NT_ELEM_FLST DC A(0)            NT-ELEMENT FREELIST            @D67CDOW 02710000
NT_POOL_ADDR DC A(0)            PAGE ADDRESS OF NT-ELEMENTS    @D67CDOW 02711000
NT_SYS_CHN   DC A(NTOKSQUE)     LEVEL=SYSTEM CHAIN HEADER      @D67CDOW 02712000
         SPACE                                                          02713000
NT_TABLE DS  0F                 (LOAD POINT,LAST BYTE OF PHASE)@D67CDOW 02714000
NT_IEANTCRS  DC A(0),A(0)       ... OF IEANTCRS                @D67CDOW 02715000
NT_IEANTDLS  DC A(0),A(0)       ... OF IEANTDLS                @D67CDOW 02716000
NT_IEANTRTS  DC A(0),A(0)       ... OF IEANTRTS                @D67CDOW 02717000
NT_TABLE_END DC X'FF'                                          @D67CDOW 02718000
NT_FLAG      DC X'00'                                          @D67CDOW 02719000
NT_ACTIVE    EQU X'80'                                         @D67CDOW 02720000
         EJECT                                                          02721000
***************************************************************         02722000
*        COMMON SUBROUTINES AND DEFINITIONS                   *         02723000
***************************************************************         02724000
         SPACE                                                          02725000
S79C47E3 DS    0H                                              @D64ADOW 02726000
         L     R1,S79ERR43        GET CANCEL INFORMATION       @D64ADOW 02727000
         B     S79C47ER           ... AND CANCEL WITH ERR47    @D64ADOW 02728000
S79C47E2 DS    0H                                              @D64ADOW 02729000
         L     R1,S79ERR42        GET CANCEL INFORMATION       @D64ADOW 02730000
         B     S79C47ER           ... AND CANCEL WITH ERR47    @D64ADOW 02731000
S79C47E1 DS    0H                                              @D64ADOW 02732000
         L     R1,S79ERR41        GET CANCEL INFORMATION       @D64ADOW 02733000
         B     S79C47ER           ... AND CANCEL WITH ERR47    @D64ADOW 02734000
S79C47E0 DS    0H                                              @D64ADOW 02735000
         L     R1,S79ERR40        GET CANCEL INFORMATION       @D64ADOW 02736000
*        B     S79C47ER           ... AND CANCEL WITH ERR47    @D64ADOW 02737000
S79C47ER DS    0H                                              @D64ADOW 02738000
         L     RD,ASGEXIT        GET BASE FOR SUBROUTINES      @D67QDOW 02739000
         L     RC,ACOMEREX-SGEXIT(,RD) ADDR OR ERROR ROUTINE   @D64ADOW 02740000
         BSM   0,RC               ... AND CANCEL               @D64ADOW 02741000
         DROP  R6                RELEASE DISP BASE             @D64ADOW 02742000
         SPACE                                                          02743000
S79ERRXM DS    0H                                              @D64ADOW 02744000
         L     R6,ADISPSER        ADDR OF DISPATCHER SERVICES  @D64ADOW 02745000
         USING DISPSERV,R6                                     @D64ADOW 02746000
         B     DSCMERR            CALL CANCEL ROUTINE          @D64ADOW 02747000
*SGLINK DSCMERR,INPUT=(R2,R6)                                  @D64ADOW 02748000
         DROP  R6                                              @D64ADOW 02749000
         SPACE                                                          02750000
         DROP  RA                                              @D67CDOW 02751000
         DROP  RC                                              @D64ADOW 02752000
         SPACE                                                          02753000
ASVC79   DC    A(SVC79)         COMMON BASE                    @D67QDOW 02754000
S79ERR40 DC    A(NUCRSN40)        INVALID FCT CODE FOR SVC79   @D64ADOW 02755000
S79ERR41 DC    A(NUCRSN41)        FCT CODE = 0 BUT NO ESTAEX   @D64ADOW 02756000
S79ERR42 DC    A(NUCRSN42)                                     @D67CDOW 02757000
S79ERR43 DC    A(NUCRSN43)                                     @D67CDOW 02758000
         EJECT                                                          02759000
*********************************************************************** 02760000
*                                                                       02761000
*        SVC 140 : SVC NORMALLY EXECUTED PARALLEL                       02762000
*                                                                       02763000
*********************************************************************** 02764000
*                                                                       02765000
*        INPUT REGISTERS TO SVC IF CALLED PARALLEL                      02766000
*                      RID = SYSTEMID                                   02767000
*            ERA IS CONTAINING THE USER REGISTER                        02768000
*            R14    - EXIT ADDR                                         02769000
*            R15    - BASE OF SVC140                                    02770000
*        INPUT REGISTERS TO SVC IF CALLED WITH NP LOCK OBTAINED         02771000
*                      RID = REENTRID                                   02772000
*            R1  - DEPENDENT ON FUNCTION                                02773000
*            R12 - BASE OF SVC140                                       02774000
*            R15 - FUNCTION CODE                                        02775000
*    NOTE: NO PAGE FAULTS ALLOWED IN THIS SERVICE                       02776000
*                                                                       02777000
         USING SVC140,RC         ROUTINE BASE                  @D65CDOW 02778000
SVC140   DS    0H                                              @D65CDOW 02779000
         CLI   RID+1,REENTRID    ENTERED AS NORMAL SVC         @D65CDOW 02780000
         BE    S140L020          YES                           @D65CDOW 02781000
         LR    RC,RF             BASE TO CORRECT REGISTER      @D65CDOW 02782000
         ST    RE,S140SR14       SAVE RETURN ADDR TO IJBDISPT  @D65CDOW 02783000
         LM    RF,R1,ERARF       RELOAD INPUT REGISTER         @D65CDOW 02784000
S140L020 DS    0H                                              @D65CDOW 02785000
         L     RE,A140ICPT       SUPPLY CONTINUATION ADDRESS   @D66ODOW 02786000
         ST    RE,PCKICEPT       ... AFTER PROGRAM CHECK       @D66ODOW 02787000
*                                                                       02788000
         C     RF,F7             IS IT VALID FUNCTION          @D66ODOW 02789000
         BH    S140INVF          NO, CANCEL REQUESTOR WITH     @D66ODOW 02790000
***                              ... WITH INVALID FUNCTION CODE         02791000
         SLL   RF,2              DISPLACEMENT INTO FCT TABLE   @D66ODOW 02792000
         L     RD,S140FCTT(RF)   GET ROUTINE ADDR              @D66ODOW 02793000
S140L030 DS    0H                                              @D66ODOW 02794000
         BASSM RE,RD             CALL ROUTINE                  @D66ODOW 02795000
S140L040 DS    0H                                              @D66ODOW 02796000
         L     RE,S140SR14       GET EXIT ADDR TO IJBDISPT     @D65CDOW 02797000
         LTR   RF,RF             RECALL OF SVC IN NP STATE REQD@D66ODOW 02798000
         BZ    S140L060          YES,                          @D66ODOW 02799000
         LA    R9,ERA-16         PREPARE SAVE AREA ADDR IF     @D66ODOW 02800000
***                              ... SVC WAS EXECUTED PARALLEL          02801000
         CLI   RID+1,REENTRID    ENTERED AS NORMAL SVC         @D65CDOW 02802000
         BNE   S140L060          NO,                           @D65CDOW 02803000
         LA    RE,EXIT           GET EXIT ADDR TO DISPATCHER   @D65CDOW 02804000
S140L060 DS    0H                                              @D65CDOW 02805000
         XC    PCKICEPT,PCKICEPT CLEAR PROG-CHK INTERCEPT ADDR @D65CDOW 02806000
         BSM   0,RE              RETURN TO IJBDISPT OR DISP    @D65CDOW 02807000
         SPACE 3                                                        02808000
S140INVF DS    0H                                              @D66ODOW 02809000
         L     R1,S140RS75       INVALID FUNCTION CODE         @D66ODOW 02810000
S140CANC DS    0H                REQUEST CANCEL                @D65CDOW 02811000
         SLR   RF,RF             PREPARE REQUEST NP-STATE      @D65CDOW 02812000
         CLI   RID+1,REENTRID    ENTERED AS NORMAL SVC         @D65CDOW 02813000
         BNE   S140L040          NO, BACK TO IJBDISPT TO REQ NP@D65CDOW 02814000
         L     RD,ASGEXIT        GET BASE FOR CANCEL SUBROUTINE@D65CDOW 02815000
         L     RC,ACOMEREX-SGEXIT(,RD) ADDR OR ERROR ROUTINE   @D65CDOW 02816000
         BSM   0,RC               ... AND CANCEL WITH ERR47    @D65CDOW 02817000
S140RS71 DC    A(NUCRSN71)                                     @D65CDOW 02818000
S140RS72 DC    A(NUCRSN72)                                     @D65CDOW 02819000
S140SU74 DC    A(NUCRSN74)                                     @D65CDOW 02820000
S140RS75 DC    A(NUCRSN75)                                     @D66ODOW 02821000
         SPACE 3                                                        02822000
S140ICPT DS    0H                ENTRY(PROG CHK INTERCEPT RTN) @D65CDOW 02823000
         DROP  RC                                              @D65CDOW 02824000
         BALR  RC,0                                            @D65CDOW 02825000
         USING *,RC                                            @D65CDOW 02826000
         L     RC,S140BASE                                     @D65CDOW 02827000
         USING SVC140,RC                                       @D65CDOW 02828000
         CLI   RID+1,REENTRID    ENTERED AS NORMAL SVC         @D66ODOW 02829000
         BE    S140IC20          YES, --->                     @D66ODOW 02830000
         SLR   RF,RF                                           @D66ODOW 02831000
         B     S140L040          REQUEST NP STATE              @D66ODOW 02832000
S140IC20 DS    0H                                              @D66ODOW 02833000
         ST    R5,S140IC80                                     @D66ODOW 02834000
         BAL   R5,SYSERROR       ENTER HARDWAIT                @D66ODOW 02835000
S140IC80 DC    F'0'                                            @D66ODOW 02836000
         SPACE                                                          02837000
S140FCTT DC    A(S140INVF)       FCT CODE 0 NOT USED           @D66ODOW 02838000
         DC    A(S140INVF)       FCT CODE 1 NOT USED           @D66ODOW 02839000
         DC    A(S140INVF)       FCT CODE 2 NOT USED           @D66ODOW 02840000
         DC    A(S140INVF)       FCT CODE 3 NOT USED           @D66ODOW 02841000
         DC    A(S140INVF)       FCT CODE 4 NOT USED           @D66ODOW 02842000
         DC    A(S140INVF)       FCT CODE 5 NOT USED           @D66ODOW 02843000
         DC    A(S140SUSP+X'80000000') FCT CODE 6: SUSPEND     @D66ODOW 02844000
***                              ...ESTAEX ENVIRONMENT                  02845000
         DC    A(S140RESU+X'80000000') FCT CODE 7: RESUME      @D66ODOW 02846000
***                              ...ESTAEX ENVIRONMENT                  02847000
         SPACE                                                          02848000
A140ICPT DC    A(S140ICPT+X'80000000')                         @D66ODOW 02849000
S140SR14 DC    A(0)              RETURN ADDR TO IJBDISPT FOR   @D65CDOW 02850000
S140BASE DC    A(SVC140)         SVC140 BASE ADDR              @D65CDOW 02851000
         SPACE 3                                                        02852000
S140RESU DS    0H                RESUME ESTAE-ENV AFTER LE COMP@D65CDOW 02853000
         L     RA,TCBPTR         GET TCB POINTER               @D65CDOW 02854000
         USING TCBADR,RA                                       @D65CDOW 02855000
         TM    TCBEXITH,TCBESTSV ENVIRONMENT SUSPENED          @D65CDOW 02856000
         BNO   S140RS50          NO, IGNORE REQUEST            @D66ODOW 02857000
         ICM   R9,B'1111',TCBABEX ANY EXIT DEFINED             @D65CDOW 02858000
         BNZ   S140RCA1          YES,--->                      @D65CDOW 02859000
         L     R9,TCBSAVEX       GET SAVED ENV ANCHOR          @D65CDOW 02860000
         ST    R9,TCBABEX        ...AND RESTORE IT             @D65CDOW 02861000
         XC    TCBSAVEX,TCBSAVEX ...AND CLEAR SAVE AREA        @D65CDOW 02862000
         IC    R9,TCBEXITH       GET SAVED AB-EXIT INFO FOR    @D65CDOW 02863000
         N     R9,S140MSK        ...ATTACH                     @D65CDOW 02864000
         NI    TCBEXITH,XF8      ...AND CLEAR SAVEAREA         @D65CDOW 02865000
         IC    R8,TCBEXITG       GET CONTENT OF FLAG BYTE      @D65CDOW 02866000
         OR    R8,R9             RESTORE AB-EXIT INFO          @D65CDOW 02867000
         STC   R8,TCBEXITG       ... FOR ATTACH                @D65CDOW 02868000
         DROP  RA                                              @D65CDOW 02869000
S140RS50 DS    0H                                              @D66ODOW 02870000
         LA    RF,8              SETUP SVC COMPLETED           @D65CDOW 02871000
         BSM   0,RE              RETURN                        @D66ODOW 02872000
         SPACE                                                          02873000
S140RCA1 DS    0H                                              @D65CDOW 02874000
         L     R1,S140RS72       CANCEL INFO AB-EXIT ACTIVE    @D65CDOW 02875000
         BM    S140CANC          AB-TYPE EXIT ACTIVE --->      @D65CDOW 02876000
         L     R1,S140RS71       CANCEL INFO AB-EXIT DEFINED   @D65CDOW 02877000
         B     S140CANC                                        @D65CDOW 02878000
         SPACE 3                                                        02879000
S140SUSP DS    0H                SUSPEND ESTAE-ENV FOR LE      @D65CDOW 02880000
         L     RA,TCBPTR         GET TCB POINTER               @D65CDOW 02881000
         USING TCBADR,RA                                       @D65CDOW 02882000
         TM    TCBEXITH,TCBESTSV ENVIRONMENT ALREADY SUSPENDED @D65CDOW 02883000
         BO    S140SU50                                        @D66ODOW 02884000
         ICM   R9,B'1111',TCBABEX GET ENVIRONMENT ANCHOR       @D65CDOW 02885000
         BM    S140SCA1          CANCEL IF AB-TYPE EXIT ACTIVE @D65CDOW 02886000
         ST    R9,TCBSAVEX       ...AND SAVE IT                @D65CDOW 02887000
         XC    TCBABEX,TCBABEX   ...AND CLEAR ANCHOR           @D65CDOW 02888000
         IC    R9,TCBEXITG       GET AB-EXIT INFO FOR          @D65CDOW 02889000
         N     R9,S140MSK        ...ATTACH                     @D65CDOW 02890000
         NI    TCBEXITG,XFC      ...AND RESET                  @D65CDOW 02891000
         IC    R8,TCBEXITH       GET CONTENT OF SAVE AREA      @D65CDOW 02892000
         OR    R8,R9             SAVE AB-EXIT INFO             @D65CDOW 02893000
         STC   R8,TCBEXITH       ... FOR ATTACH                @D65CDOW 02894000
         OI    TCBEXITH,TCBESTSV INDICATE ENV SAVED            @D65CDOW 02895000
         DROP  RA                                              @D65CDOW 02896000
S140SU50 DS    0H                                              @D66ODOW 02897000
         LA    RF,8              SETUP SVC COMPLETED           @D65CDOW 02898000
         BSM   0,RE              RETURN                        @D66ODOW 02899000
         SPACE                                                          02900000
S140SCA1 DS    0H                                              @D65CDOW 02901000
         L     R1,S140SU74       CANCEL INFO AB-EXIT ACTIVE    @D65CDOW 02902000
         B     S140CANC                                        @D66ODOW 02903000
         DROP  RC                                              @D65CDOW 02904000
         EJECT                                                          02905000
*********************************************************************** 02906000
*                                                                       02907000
*        THIN INTERRUPT HANDLER FOR IQDIO / OSA EXPRESS DEVICES / FCP   02908000
*                                                                       02909000
*********************************************************************** 02910000
*                                                                     * 02911000
*        CALLED FROM DISPATCHER (IJBDISPT)                            * 02912000
*                      BY MEANS OF BSM 0,R15 IN 31-BIT MODE           * 02913000
*                      WITH NP LOCK OBTAINED                          * 02914000
*                                                                     * 02915000
*        INPUT REGS    R1   FUNCTION CODE                             * 02916000
*                      R1 = 0 : SCSI REQUESTS QUEUED (SCSIACT SET)    * 02917000
*                      R1 = 4 : THIN INTERRUPT OCCURED                * 02918000
*                      R6   DISPATCHER ADDR                           * 02919000
*                      R15  ROUTINE BASE ADDR                         * 02920000
*                                                                     * 02921000
*                      SET RID = SYSTEMID, SINCE NO PAGE FAULTS ARE   * 02922000
*                      ALLOWED. OTHERWISE IT IS A SYSTEM ERROR.       * 02923000
*********************************************************************** 02924000
         SPACE                                                          02925000
         USING DISP,R6                                         @D67BDOW 02926000
THIN_INT_HND DS 0H                                             @D67BDOW 02927000
         MVI   RID+1,SYSTEMID   NO PAGE FAULTS ALLOWED         @D67BDOW 02928000
         LR    RC,RF            SETUP BASE REG                 @D67BDOW 02929000
         USING THIN_INT_HND,RC  ROUTINE BASE                   @D67BDOW 02930000
         L     R1,THINBT(R1)                                   @D68EDMZ 02931000
         BSM   0,R1                                            @D68EDMZ 02932000
THINBT   DS    0F                                              @D68EDMZ 02933000
         DC    A(THINEXSC+X'80000000')  SCSI INTERRUPTS        @D68EDMZ 02934000
         DC    A(THINBT0+X'80000000')   THIN INTERRUPTS        @D68EDMZ 02935000
THINBT0  DS    0H                                              @D68EDMZ 02936000
         TM    SUPFLAG,VMSYS    SVS NOT NEEDED UNDER VM        @D67BDMZ 02937000
         BO    THIN_INT_SK      SKIP                           @D67BDMZ 02938000
         LA    R1,3             FUNCTION CODE SET              @D67BDOW 02939000
***      SVS   4                ... 'GLOBAL SUMMARY INACTIVE'  @D67BDOW 02940000
         DC    X'B2650040'                                     @D67BDOW 02941000
***                                                                     02942000
THIN_INT_SK DS 0H                                              @D67BDMZ 02943000
         L     R5,ASYSPCB                                      @D68EDMZ 02944000
         USING PCBADR,R5                                       @D68EDMZ 02945000
         L     R5,PCBAPCBX                                     @D68EDMZ 02946000
         USING PCBXADR,R5                                      @D68EDMZ 02947000
*   PROCESS FCP THIN INTERRUPTS                                @D68EDMZ 02948000
FCPTHIN  DS    0H                                              @D68EDMZ 02949000
         TM    PCBXALSI,PCBXALSI_LSN DATA ARRIVED FOR FCP      @D68EDMZ 02950000
***                             ...DEVICE                               02951000
         BZ    THIN_OSA         NO, CHECK OSAX/HIPERS PART.    @D68EDMZ 02952000
         L     R3,PCBXALSI      GET ADAPTER SWITCH             @D68EDMZ 02953000
FCPTH10  DS    0H                                              @D68EDMZ 02954000
         LR    R2,R3                                           @D68EDMZ 02955000
         N     R2,THIN_LSN_COMPLEMENT RESET SWITCH IND BITS    @D68EDMZ 02956000
         CS    R3,R2,PCBXALSI   RESET ADAPTER SWITCH           @D68EDMZ 02957000
         BNE   FCPTH10          REPEAT IF CS FAILED            @D68EDMZ 02958000
         ICM   R7,15,PCBXOSAC   GET FIRST FCP CARD CB          @D68EDMZ 02959000
         BZ    THIN_OSA         NOT AVAILABLE --->             @D68EDMZ 02960000
         USING FCP_CARD,R7                                     @D68EDMZ 02961000
FCPTH20  DS    0H                                              @D68EDMZ 02962000
         TM    FCP_DEV_FLG2,THININT FCP  ENABLED FOR THIN IR   @D68EDMZ 02963000
         BZ    FCPTH40          NO, CHECK NEXT CARD            @D68EDMZ 02964000
         TM    FCP_DEV_DSCI,DSCI_ASN DATA ARRIVED FOR THIS FCP @D68EDMZ 02965000
         BZ    FCPTH40          NO   --->                      @D68EDMZ 02966000
         L     R3,FCP_DEV_DSCI GET CARD SWITCH                 @D68EDMZ 02967000
FCPTH30  DS    0H                                              @D68EDMZ 02968000
         LR    R2,R3                                           @D68EDMZ 02969000
         N     R2,DSCI_ASN_COMP RESET SWITCH IND BITS          @D68EDMZ 02970000
         CS    R3,R2,FCP_DEV_DSCI   RESET ADAPTER SWITCH       @D68EDMZ 02971000
         BNE   FCPTH30          REPEAT IF CS FAILED            @D68EDMZ 02972000
         SLR   R4,R4            R4 = CHANQ IN CASE OF PCI      @D68EDMZ 02973000
         BCTR  R4,0             R4 = -1 IN CASE OF THIN INT.   @D68EDMZ 02974000
         L     R1,REAL_CCB      ADDR OF COPY BLOCK             @D68EDMZ 02975000
         L     RF,FCP_PUBX      GET PUBX PTR OF FCP DEVICE     @D68EDMZ 02976000
         USING PBXADR,RF                                       @D68EDMZ 02977000
         L     RF,PBXCEAPP      GET FCP APPENDAGE              @D68EDMZ 02978000
         DROP  RF               RELEASE PUBX                   @D68EDMZ 02979000
         BASSM RE,RF            CALL APPENDAGE                 @D68EDMZ 02980000
*SGLINK IJBFCPAP,INPUT=(R1,R4,RF),WORK=(NONE),OUTPUT=(NONE)             02981000
FCPTH40  DS    0H                                              @D68EDMZ 02982000
         ICM   R7,15,FCP_CARD_NEXT  GET NEXT FCP  CARD IN PART @D68EDMZ 02983000
         BNZ   FCPTH20          PROCESS IT                     @D68EDMZ 02984000
         DROP  R7               RELEASE FCP_CARD               @D68EDMZ 02985000
* CHECK IF OSAX / HIPERSOCKETS AVAILABLE                       @D68EDMZ 02986000
THIN_OSA DS    0H                                              @D68EDMZ 02987000
         LA    R8,SUPAVT        LOOK FOR                       @D67BDOW 02988000
         USING SUPAVT,R8        .... PARTITIONS                @D67BDOW 02989000
         L     R8,ASUPAVTE      .... OWNING DEVICES            @D68EDMZ 02990000
         USING SUPAVTEX,R8      .... USING THIN INTERRUPTS     @D68EDMZ 02991000
         ICM   R5,15,APCBXOSA   PART. WITH OSAX/HIPERS. ?      @D68EDMZ 02992000
         DROP  R8               RELEASE SUPAVTEX               @D68EDMZ 02993000
         BZ    THIN_EXIT        GET PART. WITH OSAX/HIPERS.    @D68EDMZ 02994000
* PROCESS THIN INTERRUPTS FOR OSAX / HIPERSOCKETS              @D68EDMZ 02995000
THIN_CHK_SWITCH DS 0H                                          @D67BDOW 02996000
         TM    PCBXALSI,PCBXALSI_LSN DATA ARRIVED FOR THIS     @D67BDOW 02997000
***                             ...PARTITION                            02998000
         BNO   THIN_NEXT_PCBX   NO, GOTO NEXT PARTITION        @D67BDOW 02999000
         L     R3,PCBXALSI      GET ADAPTER SWITCH             @D67BDOW 03000000
THIN_CS1 DS    0H                                              @D67BDOW 03001000
         LR    R2,R3                                           @D67BDOW 03002000
         N     R2,THIN_LSN_COMPLEMENT RESET SWITCH IND BITS    @D67BDOW 03003000
         CS    R3,R2,PCBXALSI   RESET ADAPTER SWITCH           @D67BDOW 03004000
         BNE   THIN_CS1         REPEAT IF CS FAILED            @D67BDOW 03005000
         ICM   R7,15,PCBXOSAC_R GET FIRST CARD CB              @D67BDOW 03006000
         BZ    THIN_NEXT_PCBX   NOT AVAILABLE --->             @D67BDOW 03007000
THIN_PROC_CB DS 0H                                             @D67BDOW 03008000
         STNSM PSWMASK,XFF-SMDAT SET DAT OFF                   @D67BDOW 03009000
         USING OSA_CARD,R7                                     @D67BDOW 03010000
THIN_PROC_CB1 DS 0H                                            @D67BDOW 03011000
         TM    DEV_FLG2,THININT CARD ENABLED FOR THIN INTERR.  @D68EDMZ 03012000
         BZ    THIN_PROC_CB2    NO, CHECK NEXT CARD            @D67BDOW 03013000
         TM    DEV_DSCI,DSCI_ASN DATA ARRIVED FOR THIS CARD    @D67BDOW 03014000
         BO    THIN_POST        YES, --->                      @D67BDOW 03015000
THIN_PROC_CB2 DS 0H                                            @D67BDOW 03016000
         ICM   R7,15,OSA_CARD_NEXTR GET NEXT OSAX CARD IN PART @D67BDOW 03017000
         BNZ   THIN_PROC_CB1    CHECK IF MORE  DATA AVAILABLE  @D67BDOW 03018000
THIN_SET_DAT DS 0H                                             @D67BDOW 03019000
         STOSM PSWMASK,SMDAT    SET DAT ON                     @D67BDOW 03020000
         B     THIN_NEXT_PCBX                                  @D67BDOW 03021000
THIN_POST DS   0H                                              @D67BDOW 03022000
         L     R3,DEV_DSCI      GET CARD SWITCH                @D67BDOW 03023000
THIN_CS2 DS    0H                                              @D67BDOW 03024000
         LR    R2,R3                                           @D67BDOW 03025000
         N     R2,DSCI_ASN_COMP RESET SWITCH IND BITS          @D67BDOW 03026000
         CS    R3,R2,DEV_DSCI   RESET ADAPTER SWITCH           @D67BDOW 03027000
         BNE   THIN_CS2         REPEAT IF CS FAILED            @D67BDOW 03028000
         ICM   R2,15,RECEIVE_ECBR GET REAL ECB ADDR            @D67BDOW 03029000
         BM    THIN_PROC_LIST                                  @D67BDOW 03030000
         OI    2(R2),TRABIT     POST ECB  'DATA ARRIVED'       @D67BDOW 03031000
         B     THIN_POST_CONT                                  @D67BDOW 03032000
THIN_PROC_LIST DS 0H                                           @D67BDOW 03033000
         L     R3,0(R2)         GET FIRST ECB ADDR             @D67BDOW 03034000
         OI    2(R3),TRABIT     POST ECB                       @D67BDOW 03035000
         LTR   R3,R3            LAST ENTRY                     @D67BDOW 03036000
         BM    THIN_POST_CONT   YES, --->                      @D67BDOW 03037000
         LA    R2,4(,R2)        GOTO NEXT LIST ENTRY           @D67BDOW 03038000
         B     THIN_PROC_LIST                                  @D67BDOW 03039000
THIN_POST_CONT DS 0H                                           @D67BDOW 03040000
         LH    R8,TCPIP_TID     GET TCPIP TID                  @D67BDOW 03041000
         TM    IJBSDFL1,X'80'     SDAID IN PROGRESS ?          @DY46370 03042060
         BZ    THIN_NOS           NO! CONTINUE NORMAL          @DY46370 03042120
         MVC   THIN_CUU,OSA_DATAP PROVIDE DATA PATH            @DY46370 03042180
         STH   R8,THIN_TID        PROVIDE TID                  @DY46370 03042240
         L     R7,OSA_CARD_NEXTR GET NEXT OSA-CARD CB          @D67BDOW 03042300
         STOSM PSWMASK,SMDAT      CALL SDAID WITH DAT ON       @DY46370 03042360
         LA    R2,THIN_SDA        LOAD OSADCLS FOER SDAID      @DY46370 03042420
         MC    $MCOSAX,$MCSDAID   CALL SDAID                   @DY46370 03042480
         B     THIN_NOS1          STOSM MORE EXPENS. THAN BR   @DY46370 03042540
THIN_NOS DS   0H                                               @DY46370 03042600
         L     R7,OSA_CARD_NEXTR GET NEXT OSA-CARD CB          @D67BDOW 03042660
         STOSM PSWMASK,SMDAT    SET DAT ON                     @D67BDOW 03042720
THIN_NOS1 DS  0H                                               @DY46370 03042780
         DROP  R7                                              @D67BDOW 03043000
         BAL   RF,IOPOST0       POST TCPIP READY               @D67BDOW 03045000
*SGLINK  IOPOST0,INPUT=(R6,R8,RF),WORK=(R8,RE)                 @D67BDOW 03046000
         LTR   R7,R7            NEXT OSA-CARD CB...            @D67BDOW 03047000
         BNZ   THIN_PROC_CB     ...AVAILABLE --->              @D67BDOW 03048000
THIN_NEXT_PCBX DS 0H                                           @D67BDOW 03049000
         ICM   R5,15,PCBXOSAN   GET NEXT PCBX                  @D67BDOW 03050000
         BNZ   THIN_CHK_SWITCH                                 @D67BDOW 03051000
THIN_EXIT DS   0H                                              @D67BDOW 03052000
         L     RF,IJBAFCPA                                     @D68EDMZ 03053000
         USING FCPTAB,RF                                       @D68EDMZ 03054000
         ICM   RF,15,FCSCSIQ    SCSI REQUESTS COMPLETED        @D68EDMZ 03055000
         BZR   R6               GOTO DISP                      @D68EDMZ 03056000
         OI    SYSFLAG2,SCSIACT SCSI REQUESTS ENQUEUED         @D68EDMZ 03057000
*  PASS CONTROL TO INITSCSI TO PROCESS ENQUEUED SCSI INTERRUPTS         03058000
THINEXSC DS   0H                                               @D68EDMZ 03059000
         L     RD,INITBASE      SGSCHED BASE                   @D68EDMZ 03060000
         L     RF,AINITSCS      ENTRY POINT IN SGSCHED         @D68EDMZ 03061000
         BSM   0,RF             PASS CONTROL TO SGSCHED        @D68EDMZ 03062000
*SGLINK IJBSCSI,INPUT=(RD,RF),WORK=(NONE),OUTPUT=(NONE)                 03063000
         DROP  R5               RELEASE PCBX                   @D67BDOW 03064000
         DROP  R6               RELEASE DISPAD                 @D67BDOW 03065000
         DS    0F               FORCE BOUNDARY                 @D67BDOW 03066000
THIN_LSN_COMPLEMENT DC AL1(XFF-PCBXALSI_LSN),X'FFFFFF'         @D67BDOW 03067000
DSCI_ASN_COMP DC AL1(XFF-DSCI_ASN),X'FFFFFF'                   @D67BDOW 03068000
         DS    0F                                              @D68EDMZ 03069000
AINITSCS DC   A(INITSCSI)                                      @D68EDMZ 03070000
* IN CASE THIS CODE WILL RUN PARALLEL, A SINGLE INPUT AREA FOR @DY46370 03070100
* SDAID IS NOT LONGER SUFFICIENT                               @DY46370 03070200
THIN_SDA DS   0CL12             INPUT AREA FOR OSAX SDAID TRACE@DY46370 03070300
         DC   X'0003'           FUNCTION CODE RECEIVE          @DY46370 03070400
         DC   X'0015'           SUBFUNCTION REC-THIN           @DY46370 03070500
THIN_CUU DC   X'0000'           DATA ARRIVED FOR THIS DATAPATH @DY46370 03070600
THIN_FLG DC   X'2000'           INFORM SDAID ABOUT THIN INTER. @DY46370 03070700
THIN_TID DC   X'0000'           TID TO BE POSTED               @DY46370 03070800
         DROP  RC               RELEASE BASE                   @D67BDOW 03071000
         SPACE                                                          03072000
         AIF   (NOT &BGDEBUG OR NOT &SGSVCX).PRINT                      03073000
         PRINT NOGEN                                                    03074000
.PRINT   ANOP                                                           03075000
         MEND                                                           03076000
