         MACRO                                                          00001000
         SGDFCH                                                         00002000
         GBLB  &BGDEBUG                                        @D36ZDVB 00003000
         GBLB  &BGFSTAT                                        @D35ZDVB 00004000
         GBLB  &BGDSHR                                         @D14CDHD 00005000
         GBLB  &SGDFCH                                         @D37ZDVB 00006000
         ACTR  2000                                            @D14CDHD 00007000
         AIF   (NOT &SGDFCH).NOPRINT                           @D37ZDVB 00008000
         PRINT GEN                                             @D37ZDVB 00009000
.NOPRINT ANOP                                                  @D37ZDVB 00010000
*--------------------------------------------------------------@D35NDVB 00011000
*                                                              @D35NDVB 00012000
.*       IBM DISK OPERATING SYSTEM                             @D35NDVB 00013000
*        SUPERVISOR - SGDFCH - 5686-CF7                        @DA36685 00014000
.*                                                             @D35NDVB 00015000
*        LICENSED MATERIALS - PROPERTY OF IBM                  @D51KDMZ 00016000
*        THIS MACRO IS "RESTRICTED MATERIALS OF IBM"           @D31UDMZ 00017000
*        5686-CF7 (C) COPYRIGHT IBM CORP. 1977, 2004                    00018490
*        SEE COPYRIGHT INSTRUCTIONS                            @D51KDMZ 00019000
*                                                              @D35NDVB 00020000
*--------------------------------------------------------------@D35NDVB 00021000
 TITLE 'DOS SUPERVISOR      SGDFCH    FETCH OVERALL LOGIC  *04/18/04*'  00022490
.* /* START OF SPECIFICATIONS *********************************@D35DDVB 00023000
.*                                                             @D35DDVB 00024000
.*01* MODULE NAME = SGDFCH                                     @D35DDVB 00025000
.*                                                             @D35DDVB 00026000
.*01* MODULE TYPE = SUPERVISOR GENERATION MACRO                @D35DDVB 00027000
.*                                                             @D35DDVB 00028000
.*01* DESCRIPTIVE NAME = FETCH OVERALL LOGIC                   @D35DDVB 00029000
.*                                                             @D35DDVB 00030000
.*01* CHANGE ACTIVITY = AS FOLLOWS                             @D35DDVB 00031000
.*            RELEASE 35   ----------------                    @D35DDVB 00032000
.*              E - SUPPORT                                    @D35EDJB 00033000
.*              E - SUPPORT                                    @D35EDVB 00034000
.*              FBA - SUPPORT                                  @D35DDJB 00035000
.*              FBA - SUPPORT                                  @D35DDVB 00036000
.*              B TRANSIENT MOVE                               @D35WDVB 00037000
.*              INDEXED SDL SEARCH                             @D35WDVB 00038000
.*              VMLE SUPPORT                                   @D35NDVB 00039000
.*            AF REL 1.2  -----------------                    @D369DVB 00040000
.*              MORE TASKS                                     @D36IDVB 00041000
.*              CONCATENATED LIBRARY SUPPORT                   @D36JDVB 00042000
.*              IPCS HOOKS                                     @D36YDVB 00043000
.*            AF REL 1.3  -----------------                    @D37ZDVB 00044000
.*              IPCS HOOKS                                     @D37CDVB 00045000
.*            AF REL 2.1  -----------------                    @D14ZDVB 00046000
.*              NEW LIBRARIAN                                  @D14CDVB 00047000
.*              SECURITY / INTEGRITY                           @D14BDVB 00048000
.*  MSG0P77I AFTER LTA LOAD REQ FOR NON-$$B PHASE WITH SEC=YES @DA35100 00049000
.*  SYSTEM LIBRARY TREATED AS PRIVATE DURING SET SDL IF ON     @DA36113 00050000
.*  JOB LIBDEF CHAIN.                                          @DA36113 00051000
.*  CDLOAD RESOURCE NOT FREED AFTER FETCH ERR OR SEC VIOLATION @DA36685 00052000
.*  DTSECTAB CAN BE LOADED FROM A NON PROTECTED LIBRARY        @DA37284 00053000
.*  SOFTWARE RE-IPL                                            @D31QDHB 00054000
.*  AF 5.1.0 RSE (NEW SYSTEM LAYOUT)                           @D51GDMZ 00055000
.*  AF 5.1.0 MP - SUPPORT NEW LIBRARIAN LOT TABLES             @D51IDMZ 00056000
.*              - ADAPTION TO CHANGED CONTROL BLOCK LABELS     @D51IDMZ 00057000
.*  AF 5.1.0 SUPPORT PFIX'D PHASED IN SVA                      @D51KDMZ 00058000
.*  NEW INTERFACE TO PERFORMANCE MONITOR                       @D51MDKH 00059000
.*  AF 5.2.0 31 BIT SUPPORT                                    @D52VDMZ 00060000
.*   PTMS FOR AF 5.2.0                                         @KX40110 00061000
.*  INTEGRATION OF  APAR DY41434                               @DY41434 00062000
.*  PC IN DUMP ROUTINE WHEN RUNNING IN PSEUDO PARTITION        @DY42602 00063000
.*  AF 6.1.0 SUPPORT FOR STANDALONE ENVIRONMENT                @D61DDMZ 00064000
.*  AF 6.1.0 REMOVE IAF HOOKS                                  @D61NDMZ 00065000
.*  AF 6.1.0 MULTI PROCESSOR SUPPORT                           @D61RDVB 00066000
.*  AF 6.4.0 API -  MVS PLATFORM                               @D64ADVB 00067000
.*  AF 6.4.0 SECURITY                                          @D64ADVB 00068000
.*  LOOP IN BUILDIND ROUTINE                                   @DY44634 00069000
.*  HARD WAIT AFTER LOADING OF A PFIXED SVA PHASE FAILED       @DY45502 00070000
.*  MORE THAN 255 TASKS                                        @D66ODOW 00071000
.*  NO PHASE NAME IN PHASE-NOT-FOUND MESSAGE                   @DY45682 00072000
.*  PROGRAM CHECK DURING MVS LOAD-ADDR IF SDL SEARCHED PRIOR   @DY46126 00072300
.*  TO PRIVATE LIBRARY AND PHASE LOADED IN SVA FROM PRIV. LIB  @DY46126 00072600
.*** END OF SPECIFICATIONS **********************************/ @D35DDVB 00073000
         SPACE 2                                                        00074000
*-------------------------------------------------------------*@D369DVB 00075000
*        PROLOGUE FETCH BASE                                   @D35EDVB 00076000
*        MACRO NAME:   SGDFCH   (FETCH_BASE)                   @D35EDVB 00077000
*        FUNCTION:     OVERALL LOGIC FOR FETCH PROCESSING.     @D35EDVB 00078000
*                      BY SPECIFYING THE PHASENAME FETCH PRO-  @D35EDVB 00079000
*                      VIDES THE DIRECTORY ENTRY RESPECTIVELY  @D35EDVB 00080000
*                      THE TEXT OF THE PHASE.                  @D35EDVB 00081000
*        CALLER:       SVC 1, SVC 2, SVC 4, SVC 5, SVC 23,     @D35EDVB 00082000
*                      SVC 48, SVC 51, SVC 65                  @D35EDVB 00083000
*        OPERATION: BUILD INTERNAL PARAMETER LIST              @D149DVB 00084000
*                   IF REQUEST ¬= CDLOAD_REQUEST               @D149DVB 00085000
*                     THEN IF REQUEST = SLOAD                  @D149DVB 00086000
*                          THEN VALIDATE PHASE_LOAD_LIST (PART)@D149DVB 00087000
*                          ELSE VALIDATE DIR_ENTRY             @D149DVB 00088000
*                          ENDIF                               @D149DVB 00089000
*                          IF REQUEST = LOCAL_LIST             @D149DVB 00090000
*                          THEN VALIDATE LOCAL_LIST            @D149DVB 00091000
*                          CALL SCANLIST                       @D149DVB 00092000
*                          ENDIF                               @D149DVB 00093000
*                   ENDIF                                      @D149DVB 00094000
*                   IF DIR_ENTRY PROVIDED AND ACTIVE           @D149DVB 00095000
*                      THEN CALL BLDFWRK                       @D149DVB 00096000
*                      ELSE ACTIVATE DIR_SEARCH_TASK           @D149DVB 00097000
*                      CALL FIND                               @D149DVB 00098000
*                      CALL BLDFWRK                            @D149DVB 00099000
*                      DEACTIVATE DIR_SEARCH_TASK              @D149DVB 00100000
*                   ENDIF                                      @D149DVB 00101000
*                   CHECK FOR SECURITY CONDITIONS              @D149DVB 00102000
*                   SELECT                                     @D149DVB 00103000
*                     WHEN SVC51 THEN DO :                     @D149DVB 00104000
*                         IF REQUEST = HIPROG(JOB_CONTROL)     @D149DVB 00105000
*                            THEN CALL MULTIPHS                @D149DVB 00106000
*                            ELSE PROVIDE DE                   @D149DVB 00107000
*                         ENDIF                                @D149DVB 00108000
*                     WHEN SVC23                               @D149DVB 00109000
*                         THEN CALL RELLPT                     @D149DVB 00110000
*                         PROVIDE RELOCATED ENRY POINT         @D149DVB 00111000
*                     WHEN SVC4 WITH TEXT_LOAD                 @D149DVB 00112000
*                         THEN ACTIVATE PROGRAM_FETCH_TASK     @D149DVB 00113000
*                         CALL FGETTXT    /* PROCESS TEXT */   @D149DVB 00114000
*                         BUILD ENTRY IN PHASE_LOAD_LIST       @D149DVB 00115000
*                         DEACTIVATE PROGRAM_FETCH_TASK        @D149DVB 00116000
*                         IF SVA_UPDATE = YES                  @D149DVB 00117000
*                            UPDATE SDL WITH EP(SVA)           @D149DVB 00118000
*                            UPDATE SVA_DL IN SUPERVISOR       @D149DVB 00119000
*                         ENDIF                                @D149DVB 00120000
*                     WHEN PHASE RESIDES IN SVA                @D149DVB 00121000
*                         THEN PROVIDEE EP(SVA)                @D149DVB 00122000
*                     WHEN SVC4 = NOTEXT THEN CALL RELLPT      @D149DVB 00123000
*                   ENDSELECT                                  @D149DVB 00124000
*                   PROVIDE OUTPUT VALUES                      @D149DVB 00125000
*                   RETURN;                                    @D149DVB 00126000
*        INPUT:     R1     POINTER TO PARM_LIST|PHASENAME      @D35EDVB 00127000
*                       PARMLIST :=                            @D149DVB 00128000
*                       <ID,ADDR(PHASENAME),FLAG,ADDR(LIST)>   @D149DVB 00129000
*                            ID := 00  --- LOAD                @D149DVB 00130000
*                                  01  --- ICCF - LOAD         @D149DVB 00131000
*                                  02  --- CDLOAD - LOAD       @D149DVB 00132000
*                                  03  --- SLOAD               @D149DVB 00133000
*                            FLAG:=80  --- RETURN CODES        @D149DVB 00134000
*                                  40  --- SVA_UPDATE          @D149DVB 00135000
*                                  20  --- NO_SDL_SEARCH       @D149DVB 00136000
*                                  10  --- RESERVED            @D149DVB 00137000
*                                  08  --- DE HAS SDL_FORMAT   @D149DVB 00138000
*                                  04  --- SYSTEM SEARCH       @D149DVB 00139000
*                                  02  --- DE PROVIDED         @D149DVB 00140000
*                                  01  --- NO TXT PROCESSING   @D149DVB 00141000
*                            ADDR(LIST) := ADDR | 0            @D149DVB 00142000
*                  R0     (OPTIONAL) ENTRY POINT IF SVC 1      @D35EDVB 00143000
*                                    LOAD POINT IF SVC 4       @D35EDVB 00144000
*                         ADDR(RET. AREA) FOR SVC 23           @D52VDMZ 00145000
*                         R0 MUST BE VALID 4 BYTE ADDRESS      @D52VDMZ 00146000
*                  R2     POINTER TO PEUDO PARTITION           @D35ZDVB 00147000
*                            --- ICCF INTERFACE                @D149DVB 00148000
*                  R8     USER'S SAVE AREA (LOAD/FETCH WITH RC)@D149DVB 00149000
*        OUTPUT:   R2   ENTRY POINT ADDRESS                    @D149DVB 00150000
*                  R0   ENTRY POINT ADDRESS                    @D149DVB 00151000
*                  R1   ADDR (USER_DIRECTORY_ENTRY)            @D149DVB 00152000
*                       IF LOCAL LIST PROVIDED                 @D149DVB 00153000
*        CALLED ROUTINES:                                      @D35EDVB 00154000
*                      FIND, RELLPT, FGETTXT, VALID (EXTERNAL) @D35EDVB 00155000
*                      FGETICM, FTCHTASK, USERTASK, FBLDFWRK   @D149DVB 00156000
*        RETURN:       NORMAL -- CALLER ( SVC INTERFACE )      @D35EDVB 00157000
*        ERROR EXITS:                                          @D369DVB 00158000
*                                                              @D249DHD 00159000
*  CANCEL | USER RET. |     REASON       | CAUSING ROUTINE     @D249DHD 00160000
*  CODE   | CODE      |                  |                     @D249DHD 00161000
* --------|-----------|------------------|---------------------@D249DHD 00162000
*   22    |   4       | PHASE NOT FOUND  |       ?             @D249DHD 00163000
*   2B    |   8       | FETCH I/O ERROR  | FREAD RC 4          @D249DHD 00164000
*   29    |  12       | INVALID LIBRARY  | FREAD RC 20,24,28   @D249DHD 00165000
*   25    |  16       | INVALID ADDRESS  | FREAD RC 36         @D249DHD 00166000
*   0B    |  20       | SEC. VIOLATION   | FSECTEST RC 24      @D249DHD 00167000
*   28    |  28       | PHASE DOES'NT FIT| FREAD RC 40         @D249DHD 00168000
*   3D    |  32       | PFIX FAILURE     | FGETTXT RC 56       @D51KDMZ 00169000
*   45    |  36       | RMODE VIOLATION  | FGETTXT RC 64       @D52VDMZ 00170000
*                                                              @D249DHD 00171000
*                                                              @D249DHD 00172000
*        REFERENCED DATA:                                      @D35EDVB 00173000
*                      SYSCOM,PCB,TIB,COMREG (READ,EXTERNAL)   @D149DVB 00174000
*                      LIBRARIAN CONTROL TABLES (READ,EXTERNAL)@D149DVB 00175000
*                      TCB (UPDATE,EXTERNAL)                   @D369DVB 00176000
*                      FCB (READ)                              @D35EDVB 00177000
*       REGISTER USAGE:                                        @D35EDVB 00178000
*              R0 - FOR SVC 1/2/4/5 OVERRIDING LOAD ADDRESS         LAV 00179000
*                 - FOR SVC 23 POINTER TO LOCATION WHERE       @DL29ZCJ 00180000
*                   PHASE LOADPOINT SHOULD BE MOVED TO         @D35EDVB 00181000
*              R1 - POINTER TO PHASE NAME OR PARAMETER LIST    @DL29ZCJ 00182000
*                 - FOR SVC 51 POINTER TO DIRECTORY ENTRY      @DL29ZCJ 00183000
*              R2 - PARM REGISTER FOR ETSS                     @D369DVB 00184000
*              R9 - PARAMETER REGISTER FOR CALLER              @D35EDVB 00185000
*                   BASE REGISTER FOR FETCH ROUTINES           @D35EDVB 00186000
*              R10  POINTER TO TCB                             @D369DVB 00187000
*              R11  POINTER TO FETCH DATA AREA (DFCB)          @D35EDVB 00188000
*                   RESPECTIVELY RETURN ADDRESS TO REQUESTOR   @D369DVB 00189000
*              R12  WORK                                       @D369DVB 00190000
*              R13  POINTER TO ACTUAL SAVE AREA (INTERNAL)     @D35EDVB 00191000
*              R14  )    STANDARD                              @D35EDVB 00192000
*              R15  )    LINKAGE REGISTERS                     @D35EDVB 00193000
*-------------------------------------------------------------*@D369DVB 00194000
         SPACE 2                                               @D369DVB 00195000
         USING DISP,R6                                         @D36IDVB 00196000
         ENTRY FETCH                                           @D36ZDVB 00197000
         DS    0D                                              @D14CDVB 00198000
         DC    C'*SGDFCH*'                                     @D37ZDVB 00199000
         DC    C'DY46126 '          LAST APAR FIX              @DY46126 00200590
         DC    CL10'04/19/2004'     MM/DD/YY                   @DY46126 00201180
FETCH    DS    0H                                              @D35EDVB 00202000
*SGLINK FETCH_1,INPUT=(R0,R1,R2,R6,R9,RA,RB),OUTPUT=(R0,R1,R2),        *00203000
               WORK=(R3,R4,R5,R7,RF)                           @D369DVB 00204000
*SGLINK FETCH_2,INPUT=(R0,R1,R6,R9,RA,RB),OUTPUT=(R0,R1,R2),           *00205000
               WORK=(R3,R4,R5,R7,RF)                           @D369DVB 00206000
         SPACE 1                                               @D369DVB 00207000
*---- NOTE: REG 6 POINTS TO BASE OF DISPATCHER                 @D369DVB 00208000
*           REG A POINTS TO TCB OF ACTIVE TASK      ----------*@D369DVB 00209000
         SPACE 1                                               @D369DVB 00210000
         USING TCBADR,RA                                       @D36IDVB 00211000
         MVI   DFWKSWRQ,0         INITIALIZE STATE OF REQUEST  @D64ADVB 00212000
FETCH$$B STM   R8,RE,DFCBSAV+OFS8 R8-RE INTO TCB_SAVE_AREA     @D14CDVB 00213000
         L     R9,AFETCH          LOAD BASE FOR FETCH ROUTINE  @D35EDVB 00214000
         USING FETCH,R9                                        @D35EDVB 00215000
         L     RB,AFCHDAT         ADDR (FETCH DATA SECTION)    @D14CDVB 00216000
         USING DFCB,RB                                         @D36JDVB 00217000
         AIF   (NOT &BGFSTAT).FSTXX1                           @D35ZDVB 00218000
         L     R8,FACTIVNR                                     @D36ZDVB 00219000
         LA    R8,1(R8)                                        @D36ZDVB 00220000
         ST    R8,FACTIVNR                                     @D36ZDVB 00221000
.FSTXX1  ANOP                                                  @D35ZDVB 00222000
         SPACE 1                                               @D369DVB 00223000
*---- DO NOT DESTROY R0-R2 -----------------------------------*@D369DVB 00224000
         SPACE 1                                               @D369DVB 00225000
         ST    R0,DFWKOV          SAVE OVERWRITE INFORMATION   @D35EDVB 00226000
*  CLEAR SWITCHES / RETURN INFO / REQUEST FLAGS / PARM LIST    @D64ADVB 00227000
*  SDL LIKE ENTRY IN TCB                                       @D64ADVB 00228000
*  THIS AREA IS USED BY DIFFERENT COMPONENTS AND IS NOT NECESSARILY     00229000
*  CLEARED ON ENTRY TO FETCH                                            00230000
* DFWKNAME MUST NOT BE CLEARED SINCE IT MIGHT HAVE BEEN SET DURING      00231000
* SVC 2 PROCESSING TO CONTAIN A PHASENAME LOCATED ABOVE 16 MB  @D64ADMZ 00232000
         XC    DFWKRQFM(DFWKNAME-DFWKRQFM),DFWKRQFM            @D64ADMZ 00233000
         XC    DFWKEGEN(DFWKEND-DFWKEGEN),DFWKEGEN             @D64ADMZ 00234000
         MVC   DFWKSVC,SVCCODE    SAVE SVC NUMBER              @D64ADMZ 00235000
         CLC   TID,ARTIDH         SYSTEM TASK                  @D66ODOW 00236000
         BNL   USERFCH            NO,  ---------->             @D64ADVB 00237000
         OI    DFWKSWRQ,SYSAMASK  IDENTIFY SYSTEM TASK REQUEST @D64ADVB 00238000
USERFCH  SLR   RF,RF                                           @D64ADVB 00239000
         TM    TCBEXFLG,TCBEXAM    HAS CALLER AMODE 31         @D52VDMZ 00240000
         BZ    FCH00               NO                          @D52VDMZ 00241000
         N     R1,BIT0OFF          TURN BIT 0 OFF IN AMODE 31  @D52VDMZ 00242000
         CL    R1,ADDRMSK          ADDR IN R1 BELOW 16 MB      @KX40110 00243000
         BH    ERR45               NO, CANCEL WITH RMODE VIOL. @D52VDMZ 00244000
FCH00    DS    0H                                              @D52VDMZ 00245000
         CLC   0(8,R1),0           ....                        @D64ADVB 00246000
PCKADR1  EQU   *                   DELAYED INPUTCHECK FOR <R1> @D14CDVB 00247000
         ST    RF,DFWKUSEN         CLEAR ADDR(USER_DIR_ENTRY)  @D14CDVB 00248000
         L     R4,PCBPTR           ACTUAL PCB                  @D36GDVB 00249000
         USING PCBADR,R4                                       @D36GDVB 00250000
         TM    PCBSSFLG,ICCF       REQUEST GIVEN BY ICCF PART. @D36GDVB 00251000
         BZ    FCHCRAD             NO --->                     @D36GDVB 00252000
         CLI   0(R1),ICCFREQ       SPECIAL ICCF LOAD REQUEST   @D14ZDVB 00253000
         BE    FCHCMRG             YES --->                    @D35ZDVB 00254000
         DROP  R4                                              @D36GDVB 00255000
FCHCRAD  L     R2,CRADDR           GET PTR TO ACTUAL COMREG    @D14CDVB 00256000
FCHCMRG  ST    R2,DFWKCOMG         SAVE PTR TO ACTUAL COMREG   @D14CDVB 00257000
         LR    R2,RF               CLEAR FOR ...               @D14CDVB 00258000
         LR    R8,RF               ... PARM_LIST SET_UP        @D14CDVB 00259000
         LA    R7,0(R1)            ADDR (PHASENAME)            @D14CDVB 00260000
         TM    0(R1),XF0           PARAMETER_LIST PROVIDED     @D14CDVB 00261000
         BNZ   FCHMTCB             NO --->                     @D14CDVB 00262000
         LM    R7,R8,0(R1)         GET ...                     @D14CDVB 00263000
*        L     R8,4(R1)            ... PARMLIST                @D14CDVB 00264000
         LA    R7,0(,R7)           CLEAR REQUEST TYPE BYTE     @DY42602 00265000
         LA    R8,0(,R8)           CLEAR OPTION BYTE           @D64ADVB 00266000
         MVC   DFWKRQFM,0(R1)      PROVIDE REQUEST FORMAT      @D64ADVB 00267000
         MVC   DFWKFLAG,4(R1)      PROVIDE OPTION FLAGS        @D64ADVB 00268000
         LR    R1,R7               ADDR (PHASENAME )           @D14CDVB 00269000
FCHMTCB  ST    R7,DFWKPHPT         PROVIDE PARMLIST ....       @D14CDVB 00270000
         ST    R8,DFWKLIST         ... IN TCB_FCHWORK          @D64ADVB 00271000
         MVC   DFWKNAME(L'DFWKNAME),D0(R1)   MOVE PHASE NAME   @D14CDVB 00272000
PCKADR1A EQU   *                   DELAYED INPUT CHECK <R1>    @D14CDVB 00273000
         ST    R7,DFWKANAM         ADDRESS (MEMBERNAME) FOR ...        *00274000
                                            SECURITY I/F       @D14BDVB 00275000
*     GENSERV  DEBUG,FIELD=FCHENTRY WRITE DEBUG ENTRY          @D64ADVB 00276000
      GENSERV  DEBUG,FIELD=FCHENTRY                            @D64ADVB 00277000
         CLI   DFWKFLAG,X00        PARMLIST PROVIDED           @D64ADVB 00278000
         BNE   FPARLST             YES --->                    @D14CDVB 00279000
         CLI   DFCBSAV+OFS9+3,8    SVC_51 REQUEST              @D14CDVB 00280000
         BNE   FDIRSRCH            NO --->                     @D14CDVB 00281000
         B     FCHK51              YES --->                    @D14CDVB 00282000
         SPACE 1                                               @D369DVB 00283000
*-------------------------------------------------------------*@D149DVB 00284000
*     VALIDATION                                               @D149DVB 00285000
*        FOR ATTENTION AND USER TASKS ONLY                     @D149DVB 00286000
*        - DIRECTORY ENTRY IF PROVIDED                         @D149DVB 00287000
*        - LOCAL DIRECTORY LIST IF PROVIDED                    @D149DVB 00288000
*        - PHASE-LOAD-LIST                                     @D149DVB 00289000
*-------------------------------------------------------------*@D149DVB 00290000
         SPACE 1                                               @D369DVB 00291000
FPARLST  DS    0H                  GET ADDR(PHASENAME)         @D64ADVB 00292000
*  ON ENTRY TO FPARLST: R1 POINTS TO DE/PHASENAME IN USER AREA          00293000
         TM    DFWKSWRQ,SYSAMASK+AUTHREQ  SYSTEM REQ OR NO VALIDATION  *00294000
                                          REQUIRED             @D64ADVB 00295000
         BNZ   FNOCHK              YES --->                    @D36JDVB 00296000
         SPACE 1                                               @D14CDVB 00297000
*---  VALIDATE DE AND LOCAL_LIST SPACE  ----------------------*@D14CDVB 00298000
         SPACE 1                                               @D14CDVB 00299000
         LH    R5,PIK              VALIDATION WITH PARTIT KEY  @D14CDVB 00300000
         TM    DFWKFLAG,SVAUPD+SDLUPD LOAD INTO SVA REQUESTED  @DA33314 00301000
         BZ    FCHKDENT            NO  --->                    @D14CDBC 00302000
         LR    R5,RF               VALIDATION WITH KEY = 0     @D14CDVB 00303000
FCHKDENT TM    DFWKFLAG,DENTRY     DIR_ENTRY PROVIDED          @D14CDVB 00304000
         BZ    FNOCHK              NO --->                     @D14CDVB 00305000
         LA    R2,SDLELEN-1(R1)    ADDR (LAST BYTE OF DE)      @D14CDVB 00306000
         TM    DFWKFLAG,SDLFORM    DIR_ENTRY IN SDL FORMAT     @D14CDVB 00307000
         BO    FCHKVAL             YES--->                     @D14CDVB 00308000
FCHK51   LR    R2,RF               CLEAR FOR IC-INSTR.         @D14CDVB 00309000
         IC    R2,DIRN-DIRNAME(R1) LENGTH OF DE                @D14CDVB 00310000
         ALR   R2,R2               ADDR (LAST BYTE...          @D14CDVB 00311000
         LA    R2,DIRTT-DIRNAME-1(R1,R2)     ...OF  DE)        @D14CDVB 00312000
         SPACE 1                                               @D14CDVB 00313000
FCHKVAL  DS    0H                                              @D64ADVB 00314000
*SGLINK  VALWRITE,INPUT=(R1,R2,R5,R6,R8),OUTPUT=(R5),WORK=(R2) @D149DVB 00315000
         BAL   LINK1,VALWRITE      VALIDATE DIRECTORY RANGE    @D14CDVB 00316000
         B     FVALERR             INVALID ADDRESS             @D14CDVB 00317000
         B     FVALERR             PROTECTION                  @D14CDVB 00318000
         SPACE 1                                               @D14CDVB 00319000
FNOCHK   L     R1,DFWKLIST         ADDR(LIST)                  @D64ADVB 00320000
         LTR   R1,R1               LOCAL LIST PROVIDED         @D35EDVB 00321000
         BZ    DECHECK             NO --->                     @D35EDVB 00322000
         SPACE 1                                               @D14CDVB 00323000
FVLDLIST TM    DFWKSWRQ,SYSAMASK   SYSTEM TASK REQUEST         @D64ADVB 00324000
         BO    FBAS40              YES  --->                   @D14CDVB 00325000
         LH    R2,0(R1)            LENGTH OF LOCAL LIST        @D14CDVB 00326000
PCKADR1B EQU   *                   DELAYED INPUT CHECK FOR ...         *00327000
                                   ....       <R1>  VALIDATION @D14CDVB 00328000
         TM    DFWKFLAG,SDLFORM    DIR_ENTRY IN SDL FORMAT     @D14CDVB 00329000
         BNO   FVLDL10             NO --->                     @D14CDVB 00330000
         L     R2,0(R1)            LENGTH OF SDL_LIKE_LIST     @D14CDVB 00331000
FVLDL10  ALR   R2,R1               BEG_ADDR (LIST) + LEN (LIST)@D14CDVB 00332000
         BCTR  R2,0                - 1 =: END_ADDR(LOCAL_LIST) @D14CDVB 00333000
         SPACE 1                                                        00334000
*SGLINK  VALWRITE,INPUT=(R1,R2,R5,R6,R8),OUTPUT=(R5),WORK=(R2) @D149DVB 00335000
         BAL   LINK1,VALWRITE      VALIDATE LOCAL LIST RANGE   @D14CDVB 00336000
         B     FVALERR             INVALID ADDRESS             @D14CDVB 00337000
         B     FVALERR             PROTECTION                  @D14CDVB 00338000
         SPACE 1                                                        00339000
*---- SCAN LOCAL LIST FOR PHASE NAME   -----------------------*@D369DVB 00340000
         SPACE 1                                                        00341000
FBAS40   L     R1,DFWKPHPT         RESTORE ....                @D14CDVB 00342000
         L     R2,DFWKLIST         ...     PARAMETER LIST      @D64ADVB 00343000
         LA    R0,SDLELEN          LENGTH OF DIR ENTRY IN SDL  @D14CDVB 00344000
         TM    DFWKFLAG,SDLFORM    DIR_ENTRY IN SDL FORMAT     @D14CDVB 00345000
         BZ    FUSERFRM            NO  --->                    @D14CDVB 00346000
*SGLINK SCANLIST,INPUT=(R0,R2,R6,R9,RA),OUTPUT=(R1,RF),                *00347000
               WORK=(R1,R2,R3,R4,R5)                           @D149DVB 00348000
         BAL   LINK3,SCANSDL       SCAN SDL_LIKE LOCAL LIST    @D14CDVB 00349000
         B     BRTBSDL(RF)         --> VIA RETURN CODE         @D14CDVB 00350000
BRTBSDL  B     ENTHNDL             --> ENTRY FOUND             @D14CDVB 00351000
         B     FDIRSRCH            --> ENTRY NOT FOUND         @D14CDVB 00352000
         B     FDIRSRCH            --> INVALID USER LIST       @D14CDVB 00353000
         SPACE 1                                               @D14CDVB 00354000
FUSERFRM LR    R3,RF               R3 = 0                      @D14CDVB 00355000
         IC    R3,DIRN-DIRNAME+2(R2)  CALCULATE LENGTH         @D14CDVB 00356000
         LA    R0,DIRTT-DIRNAME(R3,R3)  OF ENTRY               @D14CDVB 00357000
*SGLINK SCANLIST,INPUT=(R0,R2,R6,R9,RA),OUTPUT=(R1,RF),                *00358000
               WORK=(R1,R2,R3,R4,R5)                           @D149DVB 00359000
         BAL   LINK3,SCANLIST      SCAN LOCAL LIST             @D14CDVB 00360000
         SPACE 1                                                        00361000
         B     BRTBSCAN(RF)        --> VIA RETURN CODE         @D14CDVB 00362000
BRTBSCAN B     ENTHNDL             --> ENTRY FOUND             @D14CDVB 00363000
         B     FDIRSRCH            --> ENTRY NOT FOUND         @D14CDVB 00364000
         B     FDIRSRCH            --> INVALID USER LIST       @D14CDVB 00365000
         SPACE 2                                                        00366000
*---------------------------------------------------------------------* 00367000
*     ENTRY POINT FOR CDLOAD AND MVS-LIKE SERVICES             @D64ADVB 00368000
*---------------------------------------------------------------------* 00369000
         SPACE 2                                               @D64ADVB 00370000
XFTCHMVS DS    0H                                              @D64ADVB 00371000
         STM   R8,RE,DFCBSAV+OFS8 R8-RE INTO TCB_SAVE_AREA     @D64ADVB 00372000
         L     R9,AFETCH          LOAD BASE FOR FETCH ROUTINE  @D64ADVB 00373000
.*DEL    USING FETCH,R9                                        @D64ADVB 00374000
         L     RB,AFCHDAT         ADDR (FETCH DATA SECTION)    @D64ADVB 00375000
         XC    DFCBSW1(4),DFCBSW1 INITIALIZE STATUS BYTES      @D64ADVB 00376000
         SLR   RF,RF                                           @D64ADVB 00377000
         ST    RF,DFWKRETC        RESET RETURN CODE            @D64ADVB 00378000
         STH   RF,DFWKREAC        RESET REASON CODE            @D64ADVB 00379000
         ST    R0,DFWKOV          PROVIDE LOADPOINT            @D64ADVB 00380000
         B     CDLHNDL                                         @D64ADVB 00381000
         SPACE 1                                                        00382000
*---- TEST FOR DIRECTORY ENTRY ------------------------------- @D369DVB 00383000
         SPACE 1                                                        00384000
DECHECK  TM    DFWKFLAG,DENTRY    DIRECTORY ENTRY PROVIDED     @D14CDVB 00385000
         BZ    FDIRSRCH           NO  --->   (SEARCH LIBRARIES)@D14CDVB 00386000
CDLHNDL  L     R1,DFWKPHPT        ADDR (DIR_ENTRY)             @D14CDVB 00387000
ENTHNDL  ST    R1,DFWKUSEN        SAVE ADDR(ENTRY) IN USERLIST @D14CDVB 00388000
         LR    R3,R1                                           @D14CDVB 00389000
         LA    RF,12              SDL_OFFSET                   @D14CDVB 00390000
         TM    DFWKFLAG,SDLFORM   DIR_ENTRY IN SDL FORMAT      @D14CDVB 00391000
         BO    FSDLFRM            YES --->                     @D14CDVB 00392000
         SPACE 1                                               @D14CDHD 00393000
         USING DIRECTRY,R1        ADDR (LOCAL_LIST ENTRY)      @D14CDVB 00394000
         TM    DIRC,ACTIVE        ENTRY ACTIVE ?               @D14CDVB 00395000
         BZ    DEUSRUPD           NO  --->  NORMAL DIR_SEARCH  @D14CDVB 00396000
         TM    DIRC,NOTFND        DE CONTAINS VALID INFO?      @D14CDHD 00397000
         BO    DEACTENT           NO  --->  NORMAL DIR_SEARCH  @D14CDHD 00398000
         OI    DFCBSW1,ACTDIR     INDICATE ACTIVE DIR_ENTRY    @D64ADVB 00399000
         SPACE 1                                               @D14CDHD 00400000
*                                                              @D14CDHD 00401000
* DIRN OF USER DE >= MINIMUM ?                                 @D14CDHD 00402000
*                                                              @D14CDHD 00403000
         SPACE 1                                               @D14CDHD 00404000
BRTCONT  LA    R4,LDVSE           ADDRESS OF VSE_FORM          @D14CDVB 00405000
         LA    R5,DIRLIMN         DIRN NEW_DE MINIMUM          @D21ZDVB 00406000
         TM    DIRCOPY,DIRVSEID   VSE_FORMAT                   @D14CDVB 00407000
         BO    NOOLDFRM           YES--->                      @D14CDVB 00408000
         LA    R4,ICMOLD          ADDRESS OF OLD_FORM TEST     @D14CDVB 00409000
         LA    R5,DIRLIMO         DIRN OLD_DE MINIMUM          @D21ZDVB 00410000
NOOLDFRM EX    R5,CLILENTR        CORRECT LENGTH AVAILABLE     @D21ZDVB 00411000
         BL    DEACTENT           NO  --->                     @D21ZDVB 00412000
         EX    R0,0(R4)           ADDR (GETVIS COPY)           @D14CDVB 00413000
         LTR   R2,R2              ANY COPY AVAILABLE           @D14CDVB 00414000
         BZ    DEACTENT           NO --> (SEARCH DIRECTORIES)  @D14CDVB 00415000
         USING INLCSDLE,R2                                     @D14CDVB 00416000
         LA    R4,DEACTENT-10     A T T E N T I O N : SPECIAL INTERFACE*00417000
                                  TO PROGRAM CHECK  HANDLER    @D14CDVB 00418000
         CLC   PIK,SDLEPIK(R2)    COPY BELONGS TO USER_PART    @D14CDVB 00419000
PCKDIRC  EQU   *                  DELAYED INPUT CHECKING <R2>  @D14CDVB 00420000
         BNE   DEACTENT           NO --> (SEARCH DIRECTORIES)  @D14CDVB 00421000
*SGLINK  PRODEXIT,WORK=(NONE),OUTPUT=(RF)                               00422000
*        PRODEXIT ACTIVATE,ID=EXPHASE,RC=YES                   @D61EDVB 00423000
         PRODEXIT ACTIVATE,ID=EXPHASE,RC=YES                   @D61EDVB 00424000
         CL    RF,F8              SKIP FETCH PROCESSING        @D61EDVB 00425000
         BE    PREXPST1           NO FETCH ACTION REQUIRED     @D61EDVB 00426000
         CLC   DFWKNAME,SDLENAM   DE_COPY ALREADY AVAILABLE    @D61EDMZ 00427000
         BNE   DEACTENT           NO --> (SEARCH DIRECTORIES)  @D14CDVB 00428000
         LR    R1,R2                                           @D14CDVB 00429000
         LA    RF,8               RC = USER_PROVIDED_DE        @D14CDVB 00430000
*                           GO OVER TO CHECK DIRECTORY         @D14CDVB 00431000
*                           INFORMATION IN  G E T V I S        @D14CDVB 00432000
*                           C O P Y                            @D14CDVB 00433000
         SPACE 1                                               @D14CDVB 00434000
         DROP  R1,R2                                           @D14CDVB 00435000
         USING INLCSDLE,R1                                     @D14CDVB 00436000
FSDLFRM  TM    SDLEFLG,ACTIVE     ENTRY ACTIVE ?               @D14CDVB 00437000
         BZ    DEUSRUPD           NO  --->  NORMAL DIR_SEARCH  @D14CDVB 00438000
         TM    SDLEFLG,SDLEBNF    ENTRY CONTAINS VALID INFO?   @D14CDHD 00439000
         BO    DEUSRUPD           NO  --->  NORMAL DIR_SEARCH  @D14CDHD 00440000
         CLI   DFWKRQFM,CDLOADRQ  CDLOAD REQUEST               @D64ADVB 00441000
         BE    CDLDSFQ1           YES --->  FCHWORK ALREADY BUILD ..   *00442000
                                            ... BY CDLOAD      @D14CDBC 00443000
         TM    DFWKRQFM,MVSXXXX   SIMULATED MVS REQUEST        @D64ADVB 00444000
         BO    CDLDSFQ1           YES --->                     @D .. VB 00445000
         TM    SDLEFLG,UPHABNF    PHASE PREVIOUSLY BE  FOUND ? @D14CDVB 00446000
         BZ    FBLDFWRK           YES --->                     @D14CDVB 00447000
         LA    RF,4               RC = NOT FOUND               @D14CDVB 00448000
         DROP  R1                                              @D14CDVB 00449000
         SPACE 1                                               @D369DVB 00450000
*---- BUILD FCHWORK ENTRY ------------------------------------*@D149DVB 00451000
          SPACE 1                                                       00452000
*SGLINK  BLDFWRK,INPUT=(R1,R2,R4,R8,R9,RA,RF),OUTPUT=(RF),             *00453000
               WORK=(R2,R3,R4,R7)                              @D14BDVB 00454000
FBLDFWRK BAL   LINK1,BLDFWRK                                   @D14BDVB 00455000
         B     FBASPRC                                         @D21ZDVB 00456000
         SPACE 2                                                        00457000
*---- RESET RF TO 0 FOR CDLOAD REQUEST WITHOUT  DIR. SEARCH --*@D369DVB 00458000
CDLDSFQ1 SLR   RF,RF               RESET RF FOR CDLOAD REQUEST @D14BDBC 00459000
         B     CDLDSFQ             CONTINUE CDLOAD REQU. EXEC. @D14BDBC 00460000
          SPACE 1                                                       00461000
*---- ESTABLISH DIRECTORY READ  TASK  ------------------------*@D369DVB 00462000
          SPACE 1                                                       00463000
DEACTENT NI    DFWKESWT,XFF-ACTIVE INACTIVATE USER ENTRY       @D14BDVB 00464000
DEUSRUPD OI    DFCBSW1,USERDUPD    INDICATE USER_DE UPDATE     @D64ADVB 00465000
FDIRSRCH DS    0H                                              @D61DDMZ 00466000
*SGLINK  PRODEXIT,WORK=(NONE),OUTPUT=(RF)                               00467000
*        PRODEXIT ACTIVATE,ID=EXPHASE,RC=YES                   @D61EDVB 00468000
         PRODEXIT ACTIVATE,ID=EXPHASE,RC=YES                   @D61EDVB 00469000
         CL    RF,F8               SKIP FETCH PROCESSING       @D61EDVB 00470000
         BE    PREXPST1            NO FETCH ACTION REQUIRED    @D61EDVB 00471000
         SLR   R4,R4               INDICATE DIR_SEARCH         @D14BDVB 00472000
         L     LINK2,DASYSTSK                                  @D21ZDVB 00473000
         BALR  LINK2,LINK2         ACTIVATE DIR SEARCH TASK    @D21ZDVB 00474000
         SPACE 1                                                        00475000
*---- PERFORM LIBRARY SEARCH   -------------------------------*@D359DVB 00476000
          SPACE 1                                                       00477000
*SGLINK   FIND,INPUT=(R8,R9,RA,RB,RD),OUTPUT=(R1,R2,RF),               *00478000
               WORK=(R0,R2,R3,R4,R5,R6,R7,RC)                  @D369DVB 00479000
         BAL   LINK1,FIND          FIND DIRECTORY ENTRY        @D35EDVB 00480000
         SPACE 1                                               @D369DVB 00481000
*---- BUILD FCHWORK ENTRY ------------------------------------*@D149DVB 00482000
          SPACE 1                                                       00483000
*SGLINK  BLDFWRK,INPUT=(R1,R2,R4,R8,R9,RA,RF),OUTPUT=(RF),             *00484000
               WORK=(R2,R3,R4,R7)                              @D369DVB 00485000
FBLDENTR BAL   LINK1,BLDFWRK                                   @D36JDVB 00486000
         SPACE 1                                               @D21ZDVB 00487000
*---- ESTABLISH USER TASK   ----------------------------------*@D149DVB 00488000
          SPACE 1                                                       00489000
         L     R5,ASRQTAB          ADDR RESOURCE ANCHOR TABLE  @D61RDVB 00490000
         LA    R5,SRQFDIR-SRQTAB(,R5) ADDR OF RESOURCE QUEUE   @D61RDVB 00491000
*SGLINK  USERTASK,INPUT=(R5,R7,RA,RB,RD),WORK=()               @D369DVB 00492000
         L     LINK2,DAUSTASK                                  @D21ZDVB 00493000
         BALR  LINK2,LINK2         DEACTIVATE DIRECTORY SEARCH @D21ZDVB 00494000
         SPACE 1                                               @D369DVB 00495000
*---- INTERFACE TO SECURITY/INTEGRITY  -----------------------*@D21ZDVB 00496000
         SPACE 1                                               @D21ZDVB 00497000
         LTR   RF,RF               SECURITY TEST NOT REQUIRED  @D21ZDVB 00498000
         BNZ   FCHSKVE             YES --->                    @D64ADMZ 00499000
         L     LINK1,DAFSECTS      GET ADDR OF SEC. ROUTINE    @D52VDMZ 00500000
         BASSM LINK1,LINK1         TEST ON SECURITY            @D64ADVB 00501000
*SGLINK  FSECTEST,INPUT=(R8,RA,RB,RF),OUTPUT=(RF),                     *00502000
               WORK=(R0,R1,R2,R3,R5)                           @D64ADVB 00503000
         LTR   RF,RF               ANY SECURITY VIOLATION      @D64ADVB 00504000
         BNZ   FSECVIOL            YES, --------->             @D64ADVB 00505000
         SPACE 1                                                        00506000
* THE PREFCH EXIT IS CALLED IF THE PHASE CAN BE LOADED, I.E. RF=0.      00507000
* IT IS NOT CALLED FOR RF=8 (ENTRY FOUND IN SDL), SINCE THE PHASE       00508000
* MUST NOT BE LOADED.                                                   00509000
*                                                                       00510000
*SGLINK  PRODEXIT,WORK=(NONE),OUTPUT=RF                                 00511000
*        PRODEXIT ACTIVATE,ID=PREFCH,RC=YES                    @D61EDMZ 00512000
         PRODEXIT ACTIVATE,ID=PREFCH,RC=YES                             00513000
         LTR   RF,RF               SECURITY VIOLATION ?        @D61EDMZ 00514000
         BZ    FCHSKVE             NO,  --------->             @D61EDMZ 00515000
         SPACE 1                                                        00516000
*---- RECORD SECURITY VIOLATION    ---------------------------*         00517000
         SPACE 1                                                        00518000
*SGLINK  FSECTEST,INPUT=(R8,RA,RB,RF),OUTPUT=(RF),                     *00519000
               WORK=(R0,R1,R2,R3,R5)                           @D61EDMZ 00520000
         L     LINK1,DAFSECTS      GET ADDR OF SEC. ROUTINE    @D61EDMZ 00521000
         BASSM LINK1,LINK1         RECORD SECURITY VIOLATION   @D64ADVB 00522000
*---- FREEVIS SHADOW ENTRY IF ANY  ---------------------------*         00523000
FSECVIOL DS    0H                                              @D64ADVB 00524000
         L     LINK1,DAFRESHA      ADDR OF FREE SHADOW ROUTINE @D64ADVB 00525000
         BASSM LINK1,LINK1         FREE SHADOW ENTRY           @D64ADVB 00526000
*SGLINK  FRESHADE,INPUT=(R8,RA,RB),OUTPUT=(),                          *00527000
               WORK=(R0-R5,R7)                                 @D64ADVB 00528000
         MVI   DFWKRCOD,SECURT20   SET RETURN CODE             @D64ADVB 00529000
         LA    RF,24               PROVIDE INTERNAL RETURN CODE@D21ZDVB 00530000
         SPACE 1                                               @D21ZDVB 00531000
*---- CALL MONITOR ROUTINE IF TESTMON ON        --------------*@D61NDMZ 00532000
         SPACE 1                                               @D21ZDVB 00533000
FCHSKVE  DS    0H                                              @D61EDMZ 00534000
         L     R1,IJBINSTR         TESTMON ON ?                @D61NDMZ 00535000
         LTR   R1,R1                                           @D61NDMZ 00536000
         BNM   FBASPRC             NO                          @D61NDMZ 00537000
         LA    R1,16               PHASE NOT FOUND/ERROR       @D61NDMZ 00538000
         CLR   RF,R1                                           @D61NDMZ 00539000
         BNL   FBASPRC             YES                         @D61NDMZ 00540000
         LA    R1,DFWKNAME         ADDR PHASENAME              @D61NDMZ 00541000
         L     LINK2,DAMONPHL      GET ADDR OF MONITOR ROUTINE @D61NDMZ 00542000
         BASSM LINK2,LINK2         MONITOR LOAD REQUEST        @D61NDMZ 00543000
*---- DECIDE FURTHER PROCESSING  -----------------------------*@D149DVB 00544000
         SPACE 1                                                        00545000
FBASPRC  L     R1,DFWKPHPT         GET PHASE NAME POINTER      @D21ZDVB 00546000
         L     R0,DFWKOV           RESTORE OVERWRITE INFO      @D36JDVB 00547000
CDLDSFQ  ALR   RF,RF               DOUBLE RETURN CODE          @D37CDVB 00548000
         A     RF,DFCBSAV+OFS9     ADD PARM_VALUE OF REQUESTOR @D37CDVB 00549000
         TM    DFWKFLAG,NTXTNTRY   NOTEXT OPTION               @D35EDVB 00550000
         BZ    FBASBRCH            NO  --->                    @D14CDVB 00551000
         LA    RF,2(RF)            BUMP TO NTXT OFFSET_ADDR    @D37CDVB 00552000
FBASBRCH EQU   *                                               @D35EDVB 00553000
         LH    LINK1,FOFFTAB(RF)   GET OFFSET FOR BRANCH       @D367DVB 00554000
         B     FOFFTAB(LINK1)          ADD BASE AND BRANCH FOR         *00555000
                                       FOR FURHTER PROCESSING  @D367DVB 00556000
         EJECT                                                 @D21ZDVB 00557000
         SPACE 2                                                        00558000
*-------------------------------------------------------------*@D14CDVB 00559000
*      SVC _ 23   PROCESSING                                  *@D14CDVB 00560000
*-------------------------------------------------------------*@D14CDVB 00561000
FSVC23   DS    0H                                              @D35EDVB 00562000
         LR    R7,R0               GET PTR(USER'S RETURN AREA) @D35EDVB 00563000
         SLR   RF,RF                                           @D14CDVB 00564000
         ST    RF,DFWKOV           CLEAR OVERWRITE INFORM      @D14CDVB 00565000
         L     RF,DARELLPT         ENTRY POINT TO RELLPT ROUT  @D367DVB 00566000
*SGLINK  RELLPT,INPUT=(RA,RD,RE),OUTPUT=(R0,R1,R4),WORK=(R2,R3,R5,R6)   00567000
*        AMODESW CALL,REGS=(RE,RF)                             @D64ADVB 00568000
         AMODESW CALL,REGS=(RE,RF)                             @D64ADVB 00569000
         C     R1,ADDRMSK          LOAD ADDRESS BELOW 16 MB    @KX40110 00570000
         BNH   FSVC230             YES                         @D52VDMZ 00571000
         L     R6,DISPAD           DISPATCHER ADDRESS          @D52VDMZ 00572000
         B     ERR21               CANCEL WITH ILLEGAL SVC     @D52VDMZ 00573000
FSVC230  STCM  R1,M7,D1(R7)        POST LOAD ADDRESS TO USER   @D35EDVB 00574000
         B     FCHCKRC                                         @D35EDFG 00575000
         SPACE 1                                               @D35EDVB 00576000
*-------------------------------------------------------------*@D14CDVB 00577000
*      SVC _ 51   MULTIPHASE - PROCESSING                     *@D14CDVB 00578000
*-------------------------------------------------------------*@D14CDVB 00579000
FSVC51   DS    0H                                              @D35EDVB 00580000
         SPACE 1                                               @D369DVB 00581000
*---  ESTABLISH DIRECTORY SEARCH TASK  ----------------------- @D369DVB 00582000
         SPACE 1                                               @D369DVB 00583000
         SLR   R4,R4               INDICATE DIR_SEARCH         @D14CDVB 00584000
         L     LINK2,DASYSTSK                                  @D21ZDVB 00585000
         BALR  LINK2,LINK2         ACTIVATE DIR SEARCH TASK    @D21ZDVB 00586000
         TM    DFWKFLAG,DENTRY     MUST HIPROG BE UPDATED ?    @D35EDJB 00587000
         BZ    FSVC51A             NO  --->                    @D35EDJB 00588000
         SPACE 1                                               @D369DVB 00589000
*---  PROCESS DIR_ENTRIES WITH SAME FIRST FOUR CHARACTERS  ---*@D149DVB 00590000
         SPACE 1                                               @D369DVB 00591000
FSVC51B  L     RF,DAMULT           GET ADDRESS OF MULTIPHS     @DA33314 00592000
*SGLINK  MULTIPHS,INPUT=(RA,RB,RD,RE)                          @D369DVB 00593000
*        AMODESW CALL,REGS=(RE,RF) UPDATE HIPROG               @D64ADVB 00594000
         AMODESW CALL,REGS=(RE,RF)                             @D64ADVB 00595000
         B     FSVC51E                                         @D14BDVB 00596000
         SPACE 1                                               @D369DVB 00597000
*-------------------------------------------------------------*@D369DVB 00598000
         SPACE 1                                               @D369DVB 00599000
FSVC51A  L     R2,DFWKPHPT         ADDR (USER_DIR_ENTRY)       @D14CDVB 00600000
*SGLINK  BLDENTRY,INPUT=(R2,R7,R9,RA),WORK=(R3,R4,R5)          @D369DVB 00601000
         BAL   LINK2,BLDENTRY      MOVE ENTRY                  @D36JDVB 00602000
         SPACE 1                                               @D369DVB 00603000
*---- DEACTIVATE  DIRECTORY SEARCH TASK ---------------------- @D369DVB 00604000
         SPACE 1                                               @D369DVB 00605000
FSVC51E  DS    0H                                              @D61RDVB 00606000
         L     R5,ASRQTAB          ADDR RESOURCE ANCHOR TABLE  @D61RDVB 00607000
         LA    R5,SRQFDIR-SRQTAB(,R5) ADDR OF RESOURCE QUEUE   @D61RDVB 00608000
*SGLINK  USERTASK,INPUT=(R5,R7,RA,RB,RD),WORK=()               @D369DVB 00609000
         L     LINK2,DAUSTASK                                  @D21ZDVB 00610000
         BALR  LINK2,LINK2         DEACTIVATE DIRECTORY SEARCH @D21ZDVB 00611000
         B     FCHCKRC             ---->                       @D35EDVB 00612000
         SPACE 1                                               @D35EDVB 00613000
*-------------------------------------------------------------*@D14CDVB 00614000
*      SVC _ 51   PHASE NOT FOUND                             *@D14CDVB 00615000
*-------------------------------------------------------------*@D14CDVB 00616000
FSVC51N  DS    0H                                              @D14CDVB 00617000
         USING DIRECTRY,R1                                     @D14CDVB 00618000
         OI    DIRC,ACTIVE+NOTFND ENTRY_NOT_FOUND AND ACTIVE   @D14CDVB 00619000
         DROP  R1                                              @D14CDVB 00620000
         B     FTCHEX05            ----->                      @D14CDVB 00621000
         SPACE 1                                               @D14CDVB 00622000
*-------------------------------------------------------------*@D14CDVB 00623000
*      SVC _ 1/4    PHASE IN SVA                              *@D14CDVB 00624000
*-------------------------------------------------------------*@D14CDVB 00625000
FPHSVA   DS    0H                                              @D35EDVB 00626000
         L     R0,DFWKEVLE         GET ENTRY POINT IN SVA      @D14CDVB 00627000
         ST    R0,DFWKEPNT            PROVIDE IT TO REQUESTOR  @D365DVB 00628000
         LA    RC,DFWKOV           PASS PTR TO SDAIDS          @D36JDVB 00629000
         MC    $TRPGML1,$MCSDAID                               @D35EDVB 00630000
         USING SVEARA,R2                                       @D51IDMZ 00631000
         L     R2,TCBSAVE          GET REQUESTOR'S SAVE AREA   @D51IDMZ 00632000
         CLC   SVENAME(1),SVENAME+7 FORCE NAME INTO STORAGE    @D51IDMZ 00633000
         DROP  R2                                              @D51IDMZ 00634000
         SGVSEPT PROBE=12          I/F TO PERFORMANCE TOOL     @D51MDKH 00635000
         B     FBAS310                                         @D35EDVB 00636000
         SPACE 1                                               @D35EDVB 00637000
*-------------------------------------------------------------*@D14CDVB 00638000
*      ERROR EXIT                                             *@D14CDVB 00639000
*-------------------------------------------------------------*@D14CDVB 00640000
FVALERR  LA    RF,NVADDR16                                     @D14CDVB 00641000
         MVI   DFWKRCOD,NVADDR16   PROVIDE RETURN CODE         @D14CDVB 00642000
FNTFND1  SLR   R0,R0                                           @D365DVB 00643000
         LM    R3,R5,DFWKALIB      STORE TCBCASLB, .....       @D14CDBC 00644000
         STM   R3,R4,TCBCINF       ... TCBCALIB                @DY45682 00645000
         LA    R8,TCBCSNAM         STORE                       @DY45682 00646000
         ST    R8,TCBCANAM         ...TCBCANAM                 @DY45682 00647000
         MVC   0(L'DFWKNAME,R8),0(R5) SAVE PHASE NAME FOR DUMP @DY45682 00648000
FNTFND3  L     R8,PCBPTR                                       @DA36685 00649000
         USING PCBADR,R8                                       @DA36685 00650000
         CLC   CDLDTID,TID         TASK OWNS CDLOAD            @D66ODOW 00651000
         BNE   FNTFNDXT            NO                          @DA36685 00652000
         MVC   CDLDTID,H0          RESET CDLOAD OWNERSHIP      @D66ODOW 00653000
         L     R6,DISPAD                                       @DA36685 00654000
         LA    R5,SRQCDL           POINT TO RESOURCE QUEUE     @DA36685 00655000
*SGLINK  RPOST,INPUT=(R5,R6,RF),WORK=(R5,RE)                   @DA36685 00656000
         BAL   RF,RPOST            FREE AND POST ALL WAITERS   @DA36685 00657000
         DROP  R8                                              @DA36685 00658000
FNTFNDXT B     FBAS310                       ( FTCHEXIT )      @DA36685 00659000
         SPACE 1                                               @D35EDVB 00660000
*-------------------------------------------------------------*@D14CDVB 00661000
*      SVC _ .    TXT PROCESSING                              *@D14CDVB 00662000
*-------------------------------------------------------------*@D14CDVB 00663000
FGTTXT   DS    0H                                              @D35EDVB 00664000
         LA    R4,4                INDICATE PROGRAM_FETCH      @D14CDVB 00665000
         SPACE 1                                               @D369DVB 00666000
*---- ACTIVATE  PROGRAM FETCH TASK ----------------------------@D369DVB 00667000
         SPACE 1                                               @D369DVB 00668000
         L     LINK2,DASYSTSK                                  @D21ZDVB 00669000
         BALR  LINK2,LINK2         ACTIVATE PGM FETCH  TASK    @D21ZDVB 00670000
         AIF   (NOT &BGFSTAT).FSTZZ2                           @D35ZDVB 00671000
         L     R1,FLCTXTN                                      @D35ZDVB 00672000
         LA    R1,1(R1)                                        @D35ZDVB 00673000
         ST    R1,FLCTXTN                                      @D35ZDVB 00674000
.FSTZZ2  ANOP                                                  @D35ZDVB 00675000
         SPACE 1                                               @D369DVB 00676000
*---  LOAD TXT INTO STORAGE    -------------------------------*@D149DVB 00677000
         SPACE 1                                               @D369DVB 00678000
FGTTXT02 L     RF,DAGETTXT         GET ENTRY POINT TO GETTXT   @DA33314 00679000
*SGLINK  FGETTXT,INPUT=(RA,RB,RD,RE)                           @D369DVB 00680000
*        AMODESW CALL,REGS=(RE,RF) READ IN PHASE               @D64ADVB 00681000
         AMODESW CALL,REGS=(RE,RF)                             @D64ADVB 00682000
         SPACE 1                                               @D36YDVB 00683000
*---- DEACTIVATE PGM FETCH TASK ------------------------------*@D369DVB 00684000
         SPACE 1                                               @D369DVB 00685000
         L     R5,ASRQTAB          ADDR RESOURCE ANCHOR TABLE  @D61RDVB 00686000
         LA    R5,SRQFPGM-SRQTAB(,R5) ADDR OF RESOURCE QUEUE   @D61RDVB 00687000
*SGLINK  USERTASK,INPUT=(R5,R7,RA,RB,RD),WORK=()               @D369DVB 00688000
         L     LINK2,DAUSTASK                                  @D21ZDVB 00689000
         BALR  LINK2,LINK2         DEACTIVATE PGM FETCH TASK   @D21ZDVB 00690000
         SPACE 1                                                        00691000
*---- VENDOR HOOK --------------------------------------------*         00692000
         SPACE 1                                                        00693000
*SGLINK  PRODEXIT,WORK=(NONE),OUTPUT=(NONE)                             00694000
*        PRODEXIT ACTIVATE,ID=POSTFCH                          @D61EDMZ 00695000
PREXPST1 DS    0H                                              @D61EDVB 00696000
         PRODEXIT ACTIVATE,ID=POSTFCH                                   00697000
         SLR   R0,R0                                           @D14CDVB 00698000
         L     R1,DFWKPHPT         GET  USER PARAMETER         @D365DVB 00699000
         CLI   DFWKRCOD,0          ANY ERROR OCCURED           @D14CDVB 00700000
         BNE   FNTFND3             YES --->                    @DA36685 00701000
         SPACE 1                                               @D369DVB 00702000
*---  IPCS HOOK ----------------------------------------------*@D36YDVB 00703000
         SPACE 1                                               @D36YDVB 00704000
         L     R2,DFWKCOMG         GET COMREG POINTER          @D36YDVB 00705000
         USING COMREG,R2                                       @D36YDVB 00706000
         L     R3,IJBPHLST         GET ADDRESS OF PHASE LIST   @D14CDVB 00707000
         DROP  R2                                              @D36YDVB 00708000
         LTR   R3,R3               ALREADY PROVIDED            @D14CDVB 00709000
         BNP   FGTTXT50            NO -->                      @D36YDVB 00710000
         TM    DFCBSW2,PARTLOAD    LOAD / FETCH IN PARTITION   @D64ADVB 00711000
         BZ    FGTTXT50            N0 -->                      @D36YDVB 00712000
         L     R0,DFWKLPNT         LOADPOINT OF PHASE          @D36YDVB 00713000
         L     R2,NXTPHSL(R3)      GET ADDRESS OF LAST INSERTED        *00714000
                                       PHASE LIST ENTRY        @D14CDVB 00715000
         LTR   R2,R2               ANY ENTRY ALREADY AVAILABLE @D36YDVB 00716000
         BZ    FGTTXT00            NO -->                      @D36YDVB 00717000
         CL    R0,LOADPT(R2)       OVERLAY PHASE               @D36YDVB 00718000
         BE    FGTTXT10            YES -->                     @D36YDVB 00719000
         LA    R2,LPHSLENT(R2)     BUMP TO NEXT LIST ENTRY     @D36YDVB 00720000
         CL    R2,ENDPHSL(R3)      END OF PHASE LIST TABLE     @D14CDVB 00721000
         BL    FGTTXT05            NO -->                      @D36YDVB 00722000
FGTTXT00 L     R2,BEGPHSL(R3)      START OF PHASE LIST TABLE   @D14CDVB 00723000
FGTTXT05 ST    R2,NXTPHSL(R3)      PROVIDE ADDRESS OF NEW ENTRY@D14CDVB 00724000
         ST    R0,LOADPT(R2)       ADDR (LOADPOINT)            @D14CDVB 00725000
FGTTXT10 DS    0H                                              @D14CDVB 00726000
         MVC   PHSNAME(L'DFWKNAME,R2),DFWKNAME  PHASE NAME     @D36YDVB 00727000
.*       L     R0,DFWKALIB         ADDR(LIB_DEF_TAB)           @D14CDVB 00728000
.*       ST    R0,LIBNAM(R2)       ==> PHASE_LOAD_LIST         @D14CDVB 00729000
.*       L     R0,DFWKASLB         ADDR(SLB_DEF_TAB)           @D14CDVB 00730000
.*       ST    R0,SUBLIBN(R2)      ==> PHASE_LOAD_LIST         @D14CDVB 00731000
         MVC   LIBNAM(2*L'DFWKALIB,R2),DFWKALIB                @D14CDVB 00732000
         L     R3,DFWKEPLN         LENGTH OF PHASE             @D14CDVB 00733000
         ST    R3,LPHASE(R2)       ==> PHASE_LOAD_LIST         @D14CDVB 00734000
.*       MVC   LPHASE(4,R2),DFWKEPLN L'(PHASE) => PHASE_LOAD_L @D14CDVB 00735000
FGTTXT50 EQU   *                                               @D36YDVB 00736000
         SPACE 1                                               @D14CDVB 00737000
         L     R0,DFWKEPNT         GET ENTRY POINT             @D35EDVB 00738000
         LA    RC,DFWKOV           PASS PTR TO SDAIDS          @D36JDVB 00739000
         MC    $TRPGML2,$MCSDAID                               @D35EDVB 00740000
         USING SVEARA,R2                                       @D51IDMZ 00741000
         L     R2,TCBSAVE          GET REQUESTOR'S SAVE AREA   @D51IDMZ 00742000
         CLC   SVENAME(1),SVENAME+7 FORCE NAME INTO STORAGE    @D51IDMZ 00743000
         DROP  R2                                              @D51IDMZ 00744000
         SGVSEPT PROBE=13          I/F TO PERFORMANCE TOOL     @D51MDKH 00745000
         TM    DFWKFLAG,SVAUPD     SVA_UPDATE REQUESTED        @D36JDVB 00746000
         BNO   FBAS310             NO  --->                    @D36JDVB 00747000
*---- INSERT ENTRY POINT ADDRESS INTO SYSTEM LINKAGE TABLE ---*         00748000
         L     RF,FBALSTK          CALL SYSTEM-LINK-STACK U-RTN@D61PDOW 00749000
         BALR  R8,RF                                           @D61PDOW 00750000
*SGLINK  INPUT (R0,R1,R8,RA,RF)                                         00751000
         B     FBAS220                                         @D61PDOW 00752000
FBALSTK  DC    A(LSTKUSVA)         ADDR OF SYSTEM-LINK-STACK   @D61PDOW 00753000
***                                UPDATE ROUTINE                       00754000
FBAS220  DS    0H                                              @D61PDOW 00755000
*---- INSERT ENTRY POINT ADDRESS INTO SDL ENTRY --------------*@D369DVB 00756000
         SPACE 1                                               @D369DVB 00757000
*---- INSERT ENTRY POINT ADDRESS INTO SDL ENTRY --------------*@D369DVB 00758000
         SPACE 1                                                        00759000
         USING INLCSDLE,R1         ADDRESSIBILTY OF SDL_ENTRY  @D14CDVB 00760000
         ST    R0,SDLESVAP         STORE ENTRY POINT IN SVA    @D14CDVB 00761000
         L     R3,ASVASVDL         POINT TO SVA DL IN SUPERV.  @D14BDFG 00762000
         USING SVASVDE,R3                                      @D14BDFG 00763000
FBAS200  CLI   SVASVPHN,XFF        END OF LIST                 @D14BDFG 00764000
         BE    FBAS320             IF YES, GOTO EXIT           @D14BDFG 00765000
         CLC   SVASVPHN,DFWKNAME   MATCHING PHASE NAME         @D14BDFG 00766000
         BE    FBAS210             IF YES, UPDATE ENTRY POINT  @D14BDFG 00767000
         LA    R3,LSVASVDE(R3)     POINT TO NEXT ENTRY         @D14BDFG 00768000
         B     FBAS200             CHECK PHASE NAME            @D14BDFG 00769000
FBAS210  ST    R0,SVASVENP         UPDATE ENTRY POINT          @D14BDFG 00770000
         TM    SDLESWT,SDLEAM31    AMODE=31 OR AMODE=ANY ?     @D52VDMZ 00771000
         BZ    FBAS320             NO --> GOTO EXIT            @D52VDMZ 00772000
         TM    SDLESWT,SDLEAM24    AMODE=ANY ?                 @D52VDMZ 00773000
         BO    FBAS320             YES--> GOTO EXIT            @D52VDMZ 00774000
         OC    SVASVENP,BIT0OMSK   SET BIT 0 ON FOR AMODE 31   @D52VDMZ 00775000
         B     FBAS320             ---> GOTO EXIT              @D35EDJB 00776000
         DROP  R3                                              @D14BDFG 00777000
         DROP  R1                  RELEASE SDL ENTRY           @D52VDMZ 00778000
         SPACE 1                                               @D35EDVB 00779000
*-------------------------------------------------------------*@D14CDVB 00780000
*      SVC _ 4    TXT = NO                                    *@D14CDVB 00781000
*-------------------------------------------------------------*@D14CDVB 00782000
FNOTXT   DS    0H                                              @D35EDVB 00783000
         L     RF,DARELLPT         GET ENTRY POINT TO RELLPT   @D367DVB 00784000
*SGLINK  RELLPT,INPUT=(RA,RD,RE),OUTPUT=(R0,R1,R4),WORK=(R2,R3,R5,R6)   00785000
*        AMODESW CALL,REGS=(RE,RF) RELOCATE LP AND EP          @D64ADVB 00786000
         AMODESW CALL,REGS=(RE,RF)                             @D64ADVB 00787000
FBAS300  L     R1,DFWKPHPT         ADDR (USER'S PHASE NAME)    @D14CDVB 00788000
         EJECT                                                 @D21ZDVB 00789000
*-------------------------------------------------------------*@D14CDVB 00790000
*      COMMON EXIT                                            *@D14CDVB 00791000
*-------------------------------------------------------------*@D14CDVB 00792000
         SPACE 1                                                        00793000
FBAS310  L     R2,DFWKLIST         ADDR (USER'S LOCAL LIST)    @D14CDVB 00794000
         LTR   R2,R2               ANY LOCAL LIST PROVIDED     @D35EDVB 00795000
         BZ    FBAS320             NO --->                     @D35EDVB 00796000
         L     R1,DFWKUSEN         ADDR (DE IN LOCAL LIST)     @D14CDVB 00797000
FBAS320  LR    R2,R0               ESTABLISH I/F               @D37ZDVB 00798000
FCHCKRC  SLR   RF,RF                                           @D14CDVB 00799000
         IC    RF,DFWKRCOD         PROVIDE RETURN              @D14CDVB 00800000
         CL    RF,F4               PHASE NOT FOUND             @DY44545 00801000
         BNE   FCHCKRC_1           NO --->                     @DY44545 00802000
         SGVSEPT PROBE=18          I/F TO PERFORMANCE TOOL     @DY44545 00803000
FCHCKRC_1 DS   0H                                              @DY44545 00804000
         TM    DFWKFLAG,FLRETCOD   RETURN CODES REQUESTED      @D14CDVB 00805000
         BZ    FRCTEST             NO  --->                    @D14CDVB 00806000
         USING SVEARA,R8                                       @D14CDVB 00807000
         L     R8,TCBSAVE          ADDRESS (REQUESTOR'S SAVE A)@D14CDVB 00808000
         ST    RF,SVER0F           RC INTO USER'S SAVE AREA    @D14CDVB 00809000
         SLR   RF,RF               AVOID CANCEL IN THIS CASE !!@D14CDVB 00810000
         DROP  R8                                              @D14CDVB 00811000
FRCTEST  CL    RF,F4               PHASE NOT FOUND             @D14CDVB 00812000
         BNE   FTCHEX10            NO --->                     @D14CDVB 00813000
         TM    DFWKFLAG,NTXTNTRY+DENTRY   DIR_ENTRY OR NO_TEXT @D14CDVB 00814000
         BZ    FTCHEX10            YES --->                    @D14CDVB 00815000
FTCHEX05 SLR   RF,RF                                           @D14CDVB 00816000
FTCHEX10 L     RF,DFTEXRTN(RF)     GET APPROBRIATE EXIT        @D14CDVB 00817000
         L     R6,DISPAD                                       @D14CDVB 00818000
         LM    R8,RE,DFCBSAV+OFS8  PROVIDE COMMITED REGISTERS  @D14CDVB 00819000
*        AMODESW RETURN,REG=(RF)   ==========================> @D64ADVB 00820000
         AMODESW RETURN,REG=(RF)   ==========================> @D64ADVB 00821000
         SPACE 1                                               @D14CDVB 00822000
*-------------------------------------------------------------*@D14CDVB 00823000
         SPACE 1                                               @D14CDVB 00824000
FTCHEXIT EQU   *                                               @D14CDVB 00825000
FRC24EXT EQU   *                                               @D14CDVB 00826000
*        AMODESW RETURN,REG=(RB)   ==========================> @D64ADVB 00827000
         AMODESW RETURN,REG=(RB)   ==========================> @D64ADVB 00828000
         SPACE 1                                               @D14CDVB 00829000
*--------------------------------------------------------------@D369DVB 00830000
         SPACE 2                                               @D35EDVB 00831000
*-------------------------------------------------------------*@D369DVB 00832000
*        ROUTINE NAME: FNTFND2                                 @D35EDVB 00833000
*        MODULE:       SGDFCH                                  @D35EDVB 00834000
*        FUNCTION:     SET ERROR INDICATION                    @D35EDVB 00835000
*        INPUT:        ----> REFERENCED DATA .                 @D35EDVB 00836000
*        ERROR EXIT:   ERR22  ( PHASE NOT FOUND )              @D35EDVB 00837000
*        MODE:         AMODE(24). RMODE(24)                    @D64ADVB 00838000
*        REFERENCED DATA:                                      @D35EDVB 00839000
*                      FCB,FCHWORK (READ)                      @D35EDVB 00840000
*-------------------------------------------------------------*@D369DVB 00841000
         SPACE 1                                               @D35EDVB 00842000
FNTFND2  DS    0H                                              @D35EDVB 00843000
         SLR   R0,R0              SET ENTRY POINT TO 0         @D365DVB 00844000
         TM    DFWKFLAG,FLRETCOD  RETURN CODES REQUESTED       @D14CDVB 00845000
         BO    FCHCKRC            YES --->                     @D14CDVB 00846000
         L     R6,DISPAD          GET POINTER TO DISPATCHER    @D36IDVB 00847000
         B     ERR22                                           @D14CDVB 00848000
         SPACE 1                                                        00849000
*-------------------------------------------------------------*@D51IDMZ 00850000
*        ROUTINE NAME: FNTFND4                                 @D51IDMZ 00851000
*        MODULE:       SGDFCH                                  @D51IDMZ 00852000
*        FUNCTION:     BUILD I/F DUMP-FETCH IN CASE OF SEC.VIO.@D51IDMZ 00853000
*        INPUT:        ----> REFERENCED DATA .                 @D51IDMZ 00854000
*         R1 POINTS TO MESSAGE AREA DESCRIBED BY MAPDMPIF               00855000
*            FIRST 4 BYTES CONTAIN ACTUAL MESSAGE LENGTH                00856000
*         BIT 0 SET IN R1 : FREEVIS IS DONE BY TERMINATOR ROUTINE       00857000
*                           FOR MESSAGE AREA WITH LENGTH CANCLEN        00858000
*         R0 = 4 FUNCTION CODE                                          00859000
*         R6 = ADISPSER                                                 00860000
*         RB = X'0B' CANCEL CODE                                        00861000
*        MODE:         AMODE(24). RMODE(24)                    @D64ADVB 00862000
*        ERROR EXIT:   DISPSER( SECURITY VIOLATION)            @D52VDMZ 00863000
*        REFERENCED DATA:                                      @D51IDMZ 00864000
*                      TCB,FCHWORK                             @D51IDMZ 00865000
*-------------------------------------------------------------*@D51IDMZ 00866000
         SPACE 1                                               @D51IDMZ 00867000
FNTFND4  DS    0H                                              @D51IDMZ 00868000
         L     R9,AFETCH          BASE DESTROYED ON ENTRY      @D52VDMZ 00869000
         L     R5,DFWKALIB        ADDRESS OF LIBRARY NAME      @D52VDMZ 00870000
         LA    R0,CANCLEN         LENGTH OF CANCEL INFORMATION @D52VDMZ 00871000
         SGETVIS LENGTH=(0)                                    @D52VDMZ 00872000
         LTR   RF,RF              GETVIS SUCCESSFUL            @D52VDMZ 00873000
         BNZ   FNTFND5            NO TRY OLD I/F               @D52VDMZ 00874000
         USING MAPDMPIF,R1                                     @D52VDMZ 00875000
         MVC   CANC0BL2,0(R5)     PROVIDE LIBRARY NAME         @D52VDMZ 00876000
         MVI   CANC0BD3,C'.'                                   @D52VDMZ 00877000
         L     R5,DFWKASLB        ADDRESS OF SUBLIBRARY NAME   @D52VDMZ 00878000
         MVC   CANC0BSN,0(R5)     PROVIDE SUBLIBRARY NAME      @D52VDMZ 00879000
         MVI   CANC0BD4,C'.'                                   @D52VDMZ 00880000
         L     R5,DFWKANAM        ADDRESS OF MEMBER NAME       @D52VDMZ 00881000
         MVC   CANC0BMN,0(R5)     PROVIDE MEMBER NAME          @D52VDMZ 00882000
         DROP  R1                                              @D52VDMZ 00883000
         O     R1,BIT0OMSK        SET BIT 0 ON FOR FREEVIS     @D52VDMZ 00884000
         B     FNTFND6            EXIT                         @D52VDMZ 00885000
FNTFND5  DS    0H                                              @D52VDMZ 00886000
         MVC   SVCSV3+4(7),0(R5)  PROVIDE LIBRARY NAME         @D51IDMZ 00887000
         MVI   SVCSV3+11,C'.'                                  @D51IDMZ 00888000
         L     R5,DFWKASLB        ADDRESS OF SUBLIBRARY NAME   @D51IDMZ 00889000
         MVC   SVCSV3+12(8),0(R5) PROVIDE SUBLIBRARY NAME      @D51IDMZ 00890000
         MVI   SVCSV3+20,C'.'                                  @D51IDMZ 00891000
         L     R5,DFWKANAM        ADDRESS OF MEMBER NAME       @D51IDMZ 00892000
         MVC   SVCSV3+21(8),0(R5) PROVIDE MEMBER NAME          @D51IDMZ 00893000
         LA    R1,SVCSV3          POINT TO MESSAGE AREA        @D52VDMZ 00894000
FNTFND6  DS    0H                                              @D52VDMZ 00895000
         LA    R0,25              MESSAGE LENGTH               @D52VDMZ 00896000
         ST    R0,0(R1)           PROVIDE MESSAGE LENGTH       @D52VDMZ 00897000
         LA    R0,4               FUNCTION CODE                @D52VDMZ 00898000
         LA    RB,X'0B'           CANCEL CODE                  @D52VDMZ 00899000
         L     R6,ADISPSER        ADDR OF DISP CANCEL SERVICE  @D52VDMZ 00900000
*        AMODESW CALL,REGS=(R7,R6)  SERVICE DOES NOT RETURN    @D61NDMZ 00901000
         AMODESW CALL,REGS=(R7,R6)  SERVICE DOES NOT RETURN    @D61NDMZ 00902000
         SPACE 1                                               @D14BDVB 00903000
*--------------------------------------------------------------@D51IDMZ 00904000
         EJECT                                                          00905000
*--------------------------------------------------------------@D369DVB 00906000
*    ROUTINE NAME: FIND                                        @D35EDJB 00907000
*    MODULE:       FETCH BASE                                  @D35EDJB 00908000
*    FUNCTION:     SEARCHES THE SYSTEM , PRIVATE AND LINK      @D35EDJB 00909000
*                  LIBRARIES , THE SVA AND THE USER PROVIDED   @D35EDJB 00910000
*                  LIST OR DE (IF ANY) FOR THE REQUESTED PHASE @D35EDJB 00911000
*                  NAME (SEARCH ARGUMENT).                     @D35EDJB 00912000
*    CALLER:       FETCH BASE                                  @D35EDJB 00913000
*    OPERATION:                                                @D369DVB 00914000
*            CALL BLDCHAIN                                     @D149DVB 00915000
*            DO WHILE STAE.DIR = ¬FOUND OR DSRCHAIN = ¬ EOL    @D149DVB 00916000
*                 GET_NEXT(DSRCHAIN)  /* EOL IF END OF CHAIN */@D149DVB 00917000
*                 IF DSRCHAIN = 2NDLEVEL & ¬EOL                @D149DVB 00918000
*                    THEN C(DSRCHAIN):= NXTCHAIN(LOT_CHAIN)    @D149DVB 00919000
*                         /* EOL  IF LOT_CHAIN IS PROCESSED */ @D149DVB 00920000
*                    ELSE                                      @D149DVB 00921000
*                 ENDIF                                        @D149DVB 00922000
*                 IF LOT_CHAIN = ¬EOL                          @D149DVB 00923000
*                    THEN IF DSRCHAIN = SDL                    @D149DVB 00924000
*                       THEN DIRENT := BINSRCH(PHASENAME,SDL)  @D149DVB 00925000
*                       ELSE DIRENT := SCANDIR(PHASENAME,DSRCHAIN)      00926000
*                         /* STATE.DIR = ¬FOUND IF PHASE NOT   @D149DVB 00927000
*                                         IN DIRECTORY      */ @D149DVB 00928000
*                       ENDIF                                  @D149DVB 00929000
*                    ELSE                                      @D149DVB 00930000
*                  ENDIF                                       @D149DVB 00931000
*           ENDDO;                                             @D149DVB 00932000
*    INPUT:        FCB (PTR TO CHAINS FOR SEARCHING SEQUENCE)  @D35EDJB 00933000
*                  FCHWORK ( INDICATES USER' S INTERFACE )     @D35EDJB 00934000
*    OUTPUT:       R1 --- ADDR (DIR_ENTRY)                     @D149DVB 00935000
*                  R2 --- ADDR (PHASE_VIF)                     @D149DVB 00936000
*                  RF --- RC                                   @D149DVB 00937000
*    RETURN CODES: 0  --- ENTRY FOUND ON DISK                  @D149DVB 00938000
*                  4  --- ENTRY NOT FOUND                      @D149DVB 00939000
*                  8  --- N/A                                  @D149DVB 00940000
*                  12 --- ENTRY FOUND IN SDL                   @D369DVB 00941000
*                  16 --- ERROR EXIT                           @D149DVB 00942000
*    CALLED ROUTINES: SCANLIST, SCANDIR, BLDCHAIN, NXTCHAIN    @D149DVB 00943000
*    RETURN:       NORMAL -- CALLER ( FETCH BASE )             @D35EDJB 00944000
*    ERROR EXITS:  NONE                                        @D35EDJB 00945000
*    REFERENCED DATA:  FCHWORK (READ)                          @D369DVB 00946000
*                      FCB (READ,UPDATE),CHAIN(READ)           @D35EDJB 00947000
*-------------------------------------------------------------*@D369DVB 00948000
         SPACE 1                                               @D369DVB 00949000
*SGLINK   FIND,INPUT=(R8,R9,RA,RB,RD),OUTPUT=(R1,R2,RF),               *00950000
               WORK=(R0,R2,R3,R4,R5,R6,R7,RC)                  @D369DVB 00951000
FIND     DS    0H                                              @D36JDVB 00952000
*SGLINK  BLDCHAIN,INPUT=(R7,R9,RA,RB),OUTPUT=(R4),WORK=(R0,R2,R3,R5)    00953000
         L     LINK2,DABLDCHN     BUILD SEARCHING CHAIN        @D64ADVB 00954000
         BALR  LINK2,LINK2                                     @D64ADVB 00955000
         SPACE 1                                               @D14CDHD 00956000
*                                                              @D14CDHD 00957000
*  CHECK IF PHASE NAME STARTS WITH X'FF' OR X'00'              @D14CDHD 00958000
*                                                              @D14CDHD 00959000
         SPACE 1                                               @D14CDHD 00960000
         CLI   DFWKNAME,HEXFF                                  @DA30582 00961000
         BE    NOTFDEN            RETURN WITH PHASE NOT FOUND  @DA30582 00962000
         CLI   DFWKNAME,HEX00                                  @DA30582 00963000
         BE    NOTFDEN            RETURN WITH PHASE NOT FOUND  @DA30582 00964000
         SPACE 1                                               @D14CDHD 00965000
*DEL     LA    RC,CILSRCH                                      @D36JDVB 00966000
SRCHDIR  ST    R4,DFWK1STL        ADDR(1ST_LEVEL_CHAIN_ENTRY)  @D14CDVB 00967000
         USING DSRCHN,R4                                       @D36JDVB 00968000
         CLI   DSRCHID3,FSTLCHN   FIRST LEVEL CHAIN            @D36JDVB 00969000
         BE    SRCHD60            YES --->                     @D36JDVB 00970000
         SPACE 1                                                        00971000
*--------------------------------------------------------------@D369DVB 00972000
         SPACE 1                                                        00973000
*SGLINK  NXTCHAIN,INPUT=(R4,R7,R9,RA,RB),OUTPUT=(RF,R2,R3),WORK=(R0,   *00974000
               R1,R4,R5)                                       @D149DVB 00975000
SRCHD40  L     LINK2,DANXTCHN     PROVIDE NEXT SECOND LEVEL            *00976000
                                          CHAIN ENTRY          @D14CDVB 00977000
         BALR  LINK2,LINK2                                     @D64ADVB 00978000
*                                 NOTE:  REG_2 = ADDR(LIB_DEF_TAB)      00979000
*                                        REG_3 = ADDR(SLIB_DEF)@D14CDVB 00980000
BRTBSRCH B     CILSRCH            PROCESS 2ND LEVEL ENTRY      @D14CDVB 00981000
*        NOPR  RC                                              @D14CDVB 00982000
         B     BUMPNEXT           GET NEXT 1ST LEVEL ENTRY     @D14CDVB 00983000
         B     SRCHD70            PROCESS SDL ENTRY            @D14CDVB 00984000
         AIF   (NOT &BGDEBUG).FFIND10                          @D36JDVB 00985000
         B     DIRERROR           =====>   RESULTS IN HW'FFE'  @D14CDVB 00986000
         AGO   .FFIND15                                        @D14CDVB 00987000
.FFIND10 ANOP                                                  @D36JDVB 00988000
SRCHERR  LH    R0,DFCBERRD        UPDATE ...                   @D36JDVB 00989000
         AH    R0,H1              ... ERROR                    @D36JDVB 00990000
         STH   R0,DFCBERRD        ...   COUNTER                @D36JDVB 00991000
         B     BUMPNEXT           GET NEXT 2ND LEVEL ENTRY     @D14CDVB 00992000
.FFIND15 ANOP                                                  @D14CDVB 00993000
         SPACE 1                                               @D14CDVB 00994000
*--------------------------------------------------------------@D369DVB 00995000
         SPACE 1                                               @D14CDVB 00996000
SRCHD60  DS    0H                                              @D61DDMZ 00997000
         TM    DFWKSWRQ,MORESRCH   CONTINUE SEARCH ON CURRENT CHAIN     00998000
         BO    BUMPNEXT            YES, --------->             @D64ADVB 00999000
         TM    IJBFLG08,IJBSAENV  USE FETCH INTERNAL PTR IN .. @D61DDMZ 01000000
         BO    SRCHD61            .. SA ENVIRONMENT.THE LPBPTR @D61DDMZ 01001000
*                                 .. IS NOT SET CORRECTLY IN ..@D61DDMZ 01002000
*                                 .. ANY CASE(POS., BUT INV.)  @D61DDMZ 01003000
         L     R2,LPBPTR          ADDR (LIBRARY PTR TABLE)     @D14CDVB 01004000
         LTR   R2,R2              IF LPBPTR < 0 THEN USE       @D14CDHD 01005000
         BP    SRCHD65                FETCH INTERNAL LIB. PTR. @D14CDHD 01006000
SRCHD61  DS    0H                                              @D61DDMZ 01007000
         L     R2,DALIBTAB                                     @D14CDHD 01008000
         USING INLCLPT,R2                                      @D14CDVB 01009000
*                          ASSUME THAT IJSYSRES AND...         @D14CDVB 01010000
*                          ...SYSLIB ARE LOCATED AT...         @D14CDVB 01011000
*                          ...BEGIN OF TABLE AREA              @D14CDVB 01012000
*                          ...LDT / SLDT                       @D14CDVB 01013000
SRCHD65  L     R0,LPTBLDT         ADDR (LIB_DEF_TAB)           @D14CDVB 01014000
         L     R1,LPTBSDT         ADDR (SUBLIB_DEF_TAB)        @D14CDVB 01015000
.* THE FOLLOWING INSTRUCTION MUST BE ACTIVATED IF ASSUMPTION   @D14CDVB 01016000
.* IS NO LONGER VALID ---> ASK LIBRARIAN                       @D14CDVB 01017000
.*       L     R2,AFTTAB          ADDR (SYSTEM_CHAIN_ENTRY)    @D14CDVB 01018000
.*       USING LOTENTRY,R2                                     @D14CDVB 01019000
.*       AH    R0,LOTEOLDT        + OFFSET  LIB_DEF_TAB AREA   @D14CDVB 01020000
.*                                .... > ===>  0               @D14CDVB 01021000
.*       AH    R1,LOTEOSDT        + OFFSET  SUBLIB_DEF_TAB AREA@D14CDVB 01022000
         ST    R0,DFWKALIB        ... INTO                     @D14CDVB 01023000
         ST    R1,DFWKASLB        ...      FCHWORK             @D14CDVB 01024000
         DROP  R2                                              @D14CDVB 01025000
         TM    DSRCHID1,SDLID     SDL SEARCH ?                 @D14CDVB 01026000
         BNO   CILSRCH            NO  --->                     @D64ADVB 01027000
SRCHD70  TM    IJBSVAFL,SDLBUILT  HAS SVA BEEN BUILT           @D51GDMZ 01028000
         BZ    SRCHD80            NO  --->                     @D14CDHD 01029000
         TM    DFWKFLAG,SDLUPD    SDL SEARCH REQUESTED         @D14CDVB 01030000
         BO    SRCHD80            NO  --->                     @D14CDHD 01031000
         LA    R0,SDLELEN         LENGTH OF SDL_DE             @D14CDVB 01032000
         LA    R1,DFWKNAME                                     @D35EDVB 01033000
*SGLINK  BINSRCH,INPUT=(R0,R1,R2,R6,R9,RA),OUTPUT=(R1,RF),             *01034000
               WORK=(R2,R3,R4,R5)                              @D369DVB 01035000
         BAL   LINK3,BINSRCH      GO TO BINARY SEARCH          @D35EDJB 01036000
         L     R4,DFWK1STL                                     @D36JDVB 01037000
         LTR   RF,RF              PHASE FOUND IN SDL           @D14CDVB 01038000
         BNZ   SRCHD80            NO --->    (GO ON LIBRARIES) @D14CDVB 01039000
         USING INLCSDLE,R1                                     @D14CDVB 01040000
CHKSDLEN LA    RF,12              RC = SVA_PHASE OR SDL_ENNTRY @D14CDVB 01041000
         CLI   DFWKRQFM,CDLOADRQ  CDLOAD REQUEST...            @D64ADVB 01042000
         BNE   SRCHD71                   ...                   @DA29496 01043000
         L     R5,PIBPTR2         USE REQ. PIB2 TO GET ...     @D52VDMZ 01044000
         USING PIB2ADR,R5                                      @D52VDMZ 01045000
         L     R5,PIBPCB          REQUESTOR'S PCB              @D52VDMZ 01046000
         USING PCBADR,R5                                       @D52VDMZ 01047000
         L     R5,PCEPIB          REQUESTOR'S PIB              @D52VDMZ 01048000
         DROP  R5                 RELEASE PCB                  @D52VDMZ 01049000
         TM    PIBDATFL-PIBADR(R5),PIBTRAM  REAL MODE ...      @D51IDMZ 01050000
         BZ    SRCHD80             THEN DON'T REGARD SDL ENTRY @DA29496 01051000
SRCHD71  EQU   *                                               @DA29496 01052000
         TM    SDLEFLG,ACTIVE+SVAPHASE+SVAELIG   PHASE IN SVA? @D14CDVB 01053000
         BO    SRCHD72            =====> YES, CHECK IF MVS LOAD@DY46126 01054490
         TM    SDLEFLG,NOTFND+PCIL SDL_ENTRY ACTIVE AND SYSLIB @D14CDVB 01055000
         BZR   LINK1              =====>    YES: RETURN        @D36JDVB 01056000
         B     SRCHD80            --->      NO:  SEARCH ON     @D14CDVB 01057000
* ADDR AND ADRNAPF IS AN EXPLICT LOAD REQUEST. THE SVA COPY    @DY46126 01057090
* MUST NOT BE CONSIDERED                                       @DY46126 01057180
SRCHD72  DS    0H                                              @DY46126 01057270
         TM    DFWKRQFM,MVSXXXX   MVS LOAD                     @DY46126 01057360
         BZR   LINK1              NO, CONT. PHASE FOUND IN SVA @DY46126 01057450
         TM    DFWKOPT1,DFWKADDR  ADDR SPECIFIED ON MVS LOAD   @DY46126 01057540
         BO    SRCHD80            YES, CHECK NEXT LIBRARY      @DY46126 01057630
         TM    DFWKOPT2,DFWKNAPF  ADRNAPF SPECIFIED            @DY46126 01057720
         BO    SRCHD80            YES, CHECK NEXT LIBRARY      @DY46126 01057810
         BR    LINK1              =====>         RETURN        @DY46126 01057900
         DROP  R1                                LIBRARIES     @D14CDVB 01058000
         SPACE 1                                               @D14CDVB 01059000
*--------------------------------------------------------------@D369DVB 01060000
         SPACE 1                                               @D14CDVB 01061000
CILSRCH  EQU   *                                               @D36JDVB 01062000
*SGLINK SCANDIR,INPUT=(R7,R9,RA,RB,RD),OUTPUT=(R1,RF),                 *01063000
               WORK=(R0,R2,R3,R4,R5,R6,RE)                     @D14CDVB 01064000
SRCHD75  BAL   LINK2,SCANDIR      SCAN DIRECTORY               @D14CDVB 01065000
         L     R4,DFWK1STL        PTR TO FIRST LEVEL CHAIN     @D14CDVB 01066000
         B     BRTABDIR(RF)       ---> VIA RETURN CODE         @D14CDVB 01067000
BRTABDIR B     FNDRET             ---> ENTRY FOUND             @D14CDVB 01068000
         B     SRCHD80            ---> ENTRY NOT FOUND         @D14CDCB 01069000
*---->   B     SRCHERR2           ---> ERROR CONDITION         @D14CDVB 01070000
SRCHERR2 EQU   *                  SWITCH OVER TO NEXT SUBLIB   @D14CDVB 01071000
         LA    RF,16              ERROR                        @D14CDVB 01072000
         BR    LINK1              =====>                       @D14CDVB 01073000
SRCHD80  CLI   DSRCHID3,FSTLCHN   1ST LEVEL CHAIN ENTRY        @D14CDVB 01074000
         BNE   SRCHD40            NO --->                      @D14CDVB 01075000
         SPACE 1                                               @D14CDVB 01076000
*--------------------------------------------------------------@D369DVB 01077000
         SPACE 1                                               @D14CDVB 01078000
BUMPNEXT LA    R4,LDSRCHN(R4)     BUMP TO NEXT DIRECTORY       @D14CDHD 01079000
         SR    R2,R2                                           @D14CDHD 01080000
         ST    R2,DFWK2NDL        DFWK2STL=0                   @D14CDHD 01081000
         CLI   DSRCHID0,XFF       LAST DIRECTORY SEARCHED ?    @D36JDVB 01082000
         BNE   SRCHDIR            NO  ---> REPEAT SEARCH       @D36JDVB 01083000
         B     NOTFDEN            ---> PHASE NOT FOUND         @D36JDVB 01084000
         SPACE 1                                               @D14CDVB 01085000
*--------------------------------------------------------------@D14CDVB 01086000
         SPACE 1                                               @D14CDVB 01087000
         USING INLCDENT,R1                                     @D14CDVB 01088000
FNDRET   TM    DENTDEF3,DENTVIF   ANY PHASE AREA AVAILABLE     @D14CDVB 01089000
         BZ    DIRVIFER           DO NOT CONSIDER MEMBER       @D14CDVB 01090000
         LH    R2,DENTVIFL        LEN(COMMON_PART OF DIR_ENT)  @D14CDVB 01091000
         ALR   R2,R1              + ADDR(DIR_ENTRY)                    *01092000
                                  =: ADDR(FIRST VIF)           @D14CDVB 01093000
         USING INLCUPHA,R2                                     @D14CDVB 01094000
         L     R5,DSPHASID        PHASE IDENTIFIER             @D14CDVB 01095000
PCKADR1E EQU   *                  DELAYED INPUT CHECKING       @D14CDVB 01096000
FVIRNXT  CL    R5,UPHAEID         VIF = PHASE_TYPE             @D14CDVB 01097000
         BE    FVIRFND            YES -->                      @D14CDVB 01098000
         TM    UPHAEAT1,DENTVIF   AT LEAST ONE MORE VIF        @D14CDVB 01099000
         BZ    DIRVIFER           NOT FOUND CONDITION          @D14CDVB 01100000
         AH    R2,UPHAELEN        GO TO NEXT VIF               @D14CDVB 01101000
         B     FVIRNXT                                         @D14CDVB 01102000
FVIRFND  L     R3,DFWKALIB        GET LDT ADDRESS              @DA36113 01103000
         USING INLCLDTE,R3                                     @DA36113 01104000
         TM    LDTEINFO,LDTESYST  TEST FOR SYSTEM LIBRARY      @DA36113 01105000
         BNO   PRIVCIL            LDT AND SDT ZERO             @DA36113 01106000
         L     R3,DFWKASLB        GET SDT ADDRESS              @DA36113 01107000
         USING INLCSDTE,R3                                     @DA36113 01108000
         CLC   SDTENAME,SYSSUBL   IS IT THE SYSLIB SUBLIBRARY  @DA36113 01109000
         BE    SYSCIL             YES, IJSYSRS.SYSLIB          @DA36113 01110000
PRIVCIL  OC    UPHAFLG,DSRCHID2   POST LIBRARY IDENTIFCATION   @DA36113 01111000
SYSCIL   OI    UPHAFLG,ACTIVE                                  @DA36113 01112000
         BR    LINK1              =====>         RETURN        @D14CDVB 01113000
SYSSUBL  DC    CL8'SYSLIB  '      SYSLIB IDENTIFIER            @DA36113 01114000
         DROP  R1,R2,R3,R4                                     @DA36113 01115000
         SPACE 1                                                        01116000
*---- NOT_FOUND ERROR EXIT  ----------------------------------*@D14CDVB 01117000
         SPACE 1                                               @D14CDVB 01118000
NOTFDEN  LM    R2,R4,DFWKALIB      STORE TCBCASLB, .....       @D14CDBC 01119000
         STM   R2,R3,TCBCINF       ... ......... TCBCALIB      @DY45682 01120000
         LA    RF,TCBCSNAM         STORE                       @DY45682 01121000
         ST    RF,TCBCANAM         ...TCBCANAM                 @DY45682 01122000
         MVC   0(L'DFWKNAME,RF),0(R4) SAVE PHASE NAME FOR DUMP @DY45682 01123000
         L     R2,DFWKUSEN        ADDR (USER'S DE ENTRY)       @D14CDVB 01124000
         LA    RF,4               SET RC : NOT_FOUND           @D14CDVB 01125000
         MVI   DFWKRCOD,PHNTFND4  SET RC : NOT_FOUND           @D14CDVB 01126000
         LTR   R2,R2              IS THERE ANY ENTRY           @D14CDVB 01127000
         BZR   LINK1              =====>     NO RETURN         @D14CDVB 01128000
         OI    DFWKESWT,ACTIVE+NOTFND ENTRY_NOT_FOUND AND ACTIVE       *01129000
                                  FOR AVOIDING FURTHER SEARCH  @D14CDVB 01130000
         TM    DFWKFLAG,SDLFORM   USER_DE IN SDL_FORM          @D14CDVB 01131000
         BZ    NOTFDSDL           NO --->                      @D14CDVB 01132000
         USING INLCSDLE,R2                                     @D14CDVB 01133000
         OI    SDLEFLG,ACTIVE+NOTFND ENTRY_NOT_FOUND           @D14CDVB 01134000
         BR    LINK1              =====>        RETURN         @D14CDVB 01135000
         USING DIRECTRY,R2                                     @D14CDVB 01136000
NOTFDSDL OI    DIRC,ACTIVE+NOTFND ENTRY_NOT_FOUND AND ACTIVE   @D14CDVB 01137000
         BR    LINK1              =====>        RETURN         @D14CDVB 01138000
         DROP  R2                                              @D36JDVB 01139000
         SPACE 1                                               @D149DVB 01140000
*--------------------------------------------------------------@D149DVB 01141000
         EJECT                                                 @D35EDJB 01142000
***************************************************************@D369DVB 01143000
*    SUBROUTINE: B L D F W R K                                 @D14CDHD 01144000
*                                                              @D14CDHD 01145000
*    MODULE:    SGDFCH                                         @D14CDHD 01146000
*                                                              @D14CDHD 01147000
*    FUNCTION:  1. IF DE WAS FOUND ON DISK                     @D14CDHD 01148000
*                  - CONVERT DE INTO SDL-FORM AND WRITE IT     @D14CDHD 01149000
*                    INTO TCB                                  @D14CDHD 01150000
*                  - BUILD / UPDATE USER DE OR BUILD SDL ENTRY @D14CDHD 01151000
*                  - RETURN                                    @D14CDHD 01152000
*                                                              @D14CDHD 01153000
*               2. IF A USER DE WAS FOUND                      @D14CDHD 01154000
*                  - COPY FIRST PART OF DE-COPY INTO TCB (=DE  @D14CDHD 01155000
*                    IN SDL-FORM)                              @D14CDHD 01156000
*                  - SET 'NO TXT LOAD' OPTION ON IF PHASE IS   @D14CDHD 01157000
*                    IN SVA AND SHOULD NOT BE UPDATED          @D14CDHD 01158000
*                  - RETURN                                    @D14CDHD 01159000
*                                                              @D14CDHD 01160000
*               3. IF A SDL ENTRY WAS FOUND                    @D14CDHD 01161000
*                  - COPY SDL ENTRY INTO TCB                   @D14CDHD 01162000
*                  - IF THE SDL ENTRY BELONGS TO A PHASE ON    @D14CDHD 01163000
*                    SYSLIB, THEN CHECK WHETHER THE POINTER    @D14CDHD 01164000
*                    TO THE SYSLIB CONTROL TABLES MUST BE      @D14CDHD 01165000
*                    UPDATED                                   @D14CDHD 01166000
*                  - SET 'NO TXT LOAD' OPTION ON IF PHASE IS   @D14CDHD 01167000
*                    IN SVA AND SHOULD NOT BE UPDATED          @D14CDHD 01168000
*                  - BUILD / UPDATE USER DE                    @D14CDHD 01169000
*                  - RETURN                                    @D14CDHD 01170000
*                                                              @D14CDHD 01171000
*    INPUT:      (NOT COMPLETE)                                @D14CDHD 01172000
*                R1:         @DE  (IF FOUND)                   @D14CDHD 01173000
*                R2:         @PHASE_VIF IF DE WAS FOUND ON DISK@D14CDHD 01174000
*                RF:         = 0 --> PHASE WAS FOUND ON DISK   @D369DVB 01175000
*                            = 4 --> PHASE NOT FOUND           @D149DVB 01176000
*                            = 8 --> USER DE WAS FOUND         @D149DVB 01177000
*                            =12 --> SDL ENTRY WAS FOUND       @D149DVB 01178000
*                            =16 --> ERROR OCCURED             @D149DVB 01179000
*                DASYSLIB:   @INTERMEDIATE SUBLIB_DEF_TAB OF   @D14CDHD 01180000
*                            SYSLIB, BUILT BY SGEFCH AT IPL    @D14CDHD 01181000
*                SVAPHASE:   FLAG IN DE;                       @D14CDHD 01182000
*                            INDICATES, THAT PHASE IS LOADED   @D14CDHD 01183000
*                            INTO SVA                          @D14CDHD 01184000
*                SVAELIG:    FLAG IN DE;                       @D14CDHD 01185000
*                            INDICATES, THAT PHASE IS SVA      @D14CDHD 01186000
*                            ELIGIBLE (REENTRANT AND SELF-REL.)@D14CDHD 01187000
*                SVAUPD:     FLAG IN DFWKFLAG OF TCB;          @D14CDHD 01188000
*                            INDICATES, THAT THE SVA COPY      @D14CDHD 01189000
*                            SHOULD BE UPDATED;                @D14CDHD 01190000
*                            =PARAMETER OF THE SLOAD MACRO     @D14CDHD 01191000
*                            WHICH IS CALLED BY THE LIBRARIAN  @D14CDHD 01192000
*                            WHEN A SVA PHASE IS NEWLY CATA-   @D14CDHD 01193000
*                            LOGUED;                           @D14CDHD 01194000
*                USERDUPD:   FLAG IN DFCBSW2 OF TCB;           @D14CDHD 01195000
*                            INDICATES, THAT AN INACTIVE USER  @D14CDHD 01196000
*                            DE OR SDL-ENTRY WAS FOUND OR THAT @D14CDHD 01197000
*                            THE USER DE DOES NOT CONTAIN VALID@D14CDHD 01198000
*                            INFORMATION ABOUT THE PHYSICAL    @D14CDHD 01199000
*                            PHASE ADDRESS, SO THAT AN UPDATE  @D14CDHD 01200000
*                            OR BUILDING MUST TAKE PLACE;      @D14CDHD 01201000
*                                                              @D14CDHD 01202000
*    OUTPUT:     ACTIVE:     FLAG SET IN DE OF TCB;            @D14CDHD 01203000
*                            THE ACTIVE FLAG IS                @D14CDHD 01204000
*                            ONLY USEFUL IN A USER DE OR SDL   @D14CDHD 01205000
*                            ENTRY OR IF TCB IS USED AS USER   @D14CDHD 01206000
*                            DE FOR CDLOAD;                    @D14CDHD 01207000
*                            INDICATES, THAT INFORMATION IS    @D14CDHD 01208000
*                            COPIED FROM DE ON DISK INTO USER  @D14CDHD 01209000
*                            DE;                               @D14CDHD 01210000
*                NTXTNTRY:   FLAG IN DFWKFLAG OF TCB;          @D14CDHD 01211000
*                            FLAG SET ONLY IF                  @D14CDHD 01212000
*                            - USER DE OR SDL ENTRY WAS FOUND  @D14CDHD 01213000
*                            - PHASE IS IN SVA                 @D14CDHD 01214000
*                            - THE SVA COPY SHOULD NOT BE      @D14CDHD 01215000
*                              UPDATED;                        @D14CDHD 01216000
*                            INDICATES, THAT THE PHASE IS NOT  @D14CDHD 01217000
*                            LOADED;                           @D14CDHD 01218000
*                            = TXT=NO PARAMETER OF THE LOAD    @D14CDHD 01219000
*                            MACRO;                            @D14CDHD 01220000
*                                                              @D21ZDVB 01221000
*                RETURN CODES: IN R15                          @D21ZDVB 01222000
*                            = 0 : ENTRY FOUND IN A SUBLIBRARY @D21ZDVB 01223000
*                                          (ON DISK)           @D21ZDVB 01224000
*                            = 8 : ENTRY FOUND IN SDL          @D21ZDVB 01225000
*                            =16 : ENTRY NOT FOUND             @D21ZDVB 01226000
*                            =24 : ERROR                       @D21ZDVB 01227000
*                                                              @D14CDHD 01228000
*    EXITS:      ONLY NORMAL                                   @D14CDHD 01229000
*                                                              @D14CDHD 01230000
*    ERROR HANDLING:                                           @D14CDHD 01231000
*                                                              @D14CDHD 01232000
*                IF USER DE(@R2) DOES NOT DESCRIBE THE SAME    @D14CDHD 01233000
*                PHASE AS DE IN TCB, THEN                      @D14CDHD 01234000
*                RF = 6;                                       @D14CDHD 01235000
*                RETURN CODE IN DE COPY(@R2) = 24;             @D14CDHD 01236000
*                USER DE CORRESPONDING TO DE IN TCB IS BUILT   @D14CDHD 01237000
*                THUS OVERWRITING THE USER DE(@R2);            @D14CDHD 01238000
*                                                              @D14CDHD 01239000
*    CHANGED REGISTERS: R0, R1, R3, R4, R5, RF                 @D14CDHD 01240000
*                                                              @D14CDHD 01241000
*    CALLED BY:  BLDFWRK                                       @D14CDHD 01242000
*                                                              @D14CDHD 01243000
*    CALL ROUTINE:  NONE                                       @D14CDHD 01244000
*                                                              @D14CDHD 01245000
***************************************************************@D369DVB 01246000
         SPACE 2                                               @D369DVB 01247000
*SGLINK  BLDFWRK,INPUT=(R1,R2,R4,R8,R9,RA,RF),OUTPUT=(RF),             *01248000
               WORK=(R2,R3,R4,R7)                              @D369DVB 01249000
BLDFWRK  DS    0H                                              @D36JDVB 01250000
         B     BRTABFWK(RF)                                    @D14CDVB 01251000
BRTABFWK B     BFCHWKDS            RETURN DISK_DIRECTORY       @D14CDVB 01252000
         B     BFCHWKNF            NOT FOUND                   @D36JDVB 01253000
         B     BFCHWKUS            RETURN USER DE              @D14CDVB 01254000
         B     BFCHWKSD            RETURN SDL                  @D14CDVB 01255000
         SPACE 1                                                        01256000
*-------------------------------------------------------------*@D149DVB 01257000
*      ERROR EXIT                                             *@D149DVB 01258000
*-------------------------------------------------------------*@D149DVB 01259000
         SPACE 1                                                        01260000
BFCHWKER DS    0H                                              @D14CDVB 01261000
         LA    RF,24               SET RETURN CODE             @D14CDVB 01262000
         BR    LINK1               =====>         EXIT         @D14CDVB 01263000
         SPACE 1                                                        01264000
*-------------------------------------------------------------*@D369DVB 01265000
* ENTRY POINT FOR SDL-ENTRY                                   *@D149DVB 01266000
*-------------------------------------------------------------*@D369DVB 01267000
         SPACE 1                                                        01268000
BFCHWKSD DS    0H                                              @D14CDVB 01269000
         USING INLCSDLE,R1        ADDRESSIBILTY TO SDL_ENTRY   @D14CDVB 01270000
         SPACE 1                                               @D14CDHD 01271000
*                                                              @D14CDHD 01272000
* COPY SDL ENTRY INTO TCB                                      @D14CDHD 01273000
*                                                              @D14CDHD 01274000
         SPACE 1                                               @D14CDHD 01275000
         MVC   DFWKEGEN(DFWKEND-DFWKEGEN),L'DFWKNAME(R1)       @D14CDVB 01276000
         SPACE 1                                               @D14CDHD 01277000
*                                                              @D14CDHD 01278000
* CHECK, WETHER THE POINTERS TO THE SYSLIB CONTROL TABLES ARE  @D14CDHD 01279000
* ALREADY UPDATED :                                            @D14CDHD 01280000
* - DURING IPL, INTERMEDIATE LIBRARY CONTROL BLOCKS FOR SYSLIB @D14CDHD 01281000
*   WERE BUILT BY SGEFCH ( IN FETCH INTERNAL STORAGE! )        @D14CDHD 01282000
* - ALL SDL ENTRIES DURING IPL HAVE POINTERS TO THAT INTER-    @D14CDHD 01283000
*   MEDIATE LIBRARY CONTROL BLOCKS                             @D14CDHD 01284000
* - AFTER THE LIBRARIAN HAS BUILT THE PERMANENT LIBRARY        @D14CDHD 01285000
*   CONTROL BLOCKS FOR SYSLIB, ALL SDL ENTRIES BUILT DURING    @D14CDHD 01286000
*   IPL MUST BE UPDATED                                        @D14CDHD 01287000
*                                                              @D14CDHD 01288000
         SPACE 1                                               @D14CDVB 01289000
         L     R4,DFWKASLB        @SUBLIB_DEF_TAB              @D14CDVB 01290000
         L     R3,DASYSLIB        @INTERMEDIATE SUBLIB_DEF_TAB @D14CDVB 01291000
         CLR   R3,R4              CONVERTED ADDRESSES          @D14CDVB 01292000
         BNE   FTSTSVA            YES --->                     @D14CDVB 01293000
         L     R5,LPBPTR          SYSLIB ENTRY                 @D14CDVB 01294000
         LTR   R5,R5              IF LPBPTR < 0 THEN USE       @D14CDHD 01295000
         BP    BFCHLTAB               FETCH INTERNAL LIB. PTR. @D14CDHD 01296000
         L     R5,DALIBTAB                                     @D14CDHD 01297000
         USING INLCLPT,R5                                      @D14CDVB 01298000
BFCHLTAB L     R4,LPTBLDT         ADDR (LIB_DEF_TAB(SYSLIB))   @D14CDVB 01299000
         L     R5,LPTBSDT         ADDR (SLB_DEF_TAB(SYSLIB))   @D14CDVB 01300000
         DROP  R5                                              @D14CDVB 01301000
         ST    R4,DFWKALIB        DEFAULT LIBRARY   )          @D14CDVB 01302000
         ST    R5,DFWKASLB        DEFAULT SUBLIBRARY) INTO TCB @D14CDVB 01303000
         ST    R4,SDLEALIB        DEFAULT LIBRARY   )          @D14CDVB 01304000
         ST    R5,SDLEASLB        DEFAULT SUBLIBRARY) INTO SDL @D14CDVB 01305000
         B     FTSTSVA                                         @D14CDVB 01306000
         SPACE 1                                               @D369DVB 01307000
*-------------------------------------------------------------*@D369DVB 01308000
* ENTRY POINT FOR DE ON DISK                                   @D35EDJB 01309000
*-------------------------------------------------------------*@D369DVB 01310000
         SPACE 1                                               @D14CDVB 01311000
*                                                              @D14CDHD 01312000
* CONVERT DE (@R1) INTO SDL-FORM (TCB)                         @D14CDHD 01313000
*                                                              @D14CDHD 01314000
         USING INLCDENT,R1                                     @D14CDVB 01315000
         USING INLCUPHA,R2                                     @D14CDVB 01316000
BFCHWKDS LH    R0,DENTGEN          BUILD FCHWORK:              @D14CDVB 01317000
         STH   R0,DFWKEGEN         ... GENERATION              @D14CDVB 01318000
         LH    R0,DENTCONT                                     @D14CDVB 01319000
         STH   R0,DFWKECON         ... # (CONTIGUOUS BLOCKS)   @D14CDVB 01320000
         L     R0,DENTRBAP                                     @D14CDVB 01321000
         ST    R0,DFWKERBA         ... DADR (PRBA)             @D14CDVB 01322000
         L     R0,DENTIDEN             LIBRARY ID              @D14CDHD 01323000
         ST    R0,DFWKLBID                                     @D14CDHD 01324000
         MVC   DFWKESWT(DFWKEVLE-DFWKESWT),UPHAFLG             @D14CDVB 01325000
         B     BFCHWK40                                        @D14CDVB 01326000
         DROP  R1,R2                                           @D14CDVB 01327000
         SPACE 1                                               @D369DVB 01328000
*-------------------------------------------------------------*@D369DVB 01329000
* ENTRY POINT FOR USER DE                                     *@D149DVB 01330000
*-------------------------------------------------------------*@D369DVB 01331000
         SPACE 1                                               @D14CDVB 01332000
*                                                              @D14CKHD 01333000
* COPY DE OR FIRST PART OF DE-COPY (IF USER DE WAS FOUND) INTO @D14CKHD 01334000
* TCB                                                          @D14CKHD 01335000
*                                                              @D14CKHD 01336000
         SPACE 1                                               @D14CDVB 01337000
BFCHWKUS MVC   DFWKEGEN(DFWKEND-DFWKEGEN),L'DFWKNAME(R1)       @D14CDVB 01338000
         SPACE 1                                               @D369DVB 01339000
*                                                              @D14CDHD 01340000
* IF PHASE IS IN SVA AND THE COPY IN THE SVA SHOULD NOT BE     @D14CDHD 01341000
* UPDATED, THEN SET 'NO TXT' OPTION ON                         @D14CDHD 01342000
*                                                              @D14CDHD 01343000
         SPACE 1                                               @D14CDVB 01344000
FTSTSVA  SLR   RF,RF              REC = 0                      @D14CDVB 01345000
         TM    DFWKESWT,SVAPHASE+SVAELIG PHASE RESIDES IN SVA          *01346000
                                  ... AND IS USEABLE           @D14CDVB 01347000
         BNO   BFCHWK40           NO  --->                     @D61DDMZ 01348000
         SPACE 1                                                        01349000
         TM    DFWKFLAG,SVAUPD    PHASE MUST BE REPLACED       @D14CDVB 01350000
         BO    BFCHWK40           YES --->                     @D14CDVB 01351000
         OI    DFWKFLAG,NTXTNTRY  SET NO TEXT LOAD OPTION      @D35EDJB 01352000
         LA    RF,2               RC = 2                       @D14CDVB 01353000
         SPACE 1                                               @D14CDVB 01354000
*                                                              @D14CDHD 01355000
* SET ACTIVE FLAG ON,                                          @D14CDHD 01356000
* THE ACTIVE FLAG HAS ONLY A MEANING IN A USER DE;             @D14CDHD 01357000
* SETTING IT HERE HAS 2 REASONS:                               @D14CDHD 01358000
* - COPIING THE TCB INTO THE USER DE SETS IMPLICTLY THE USER   @D14CDHD 01359000
*   DE ACTIVE                                                  @D14CDHD 01360000
* - THE TCB IS USED AS USER DE BY CDLOAD!, SO THE 'USER DE'    @D14CDHD 01361000
*   OF CDLOAD IS SET ACTIVE                                    @D14CDHD 01362000
*                                                              @D14CDHD 01363000
         SPACE 1                                               @D14CDVB 01364000
BFCHWK40 OI    DFWKESWT,ACTIVE                                 @D14BDBC 01365000
         SPACE 1                                               @D14CDVB 01366000
*                                                              @D14CDHD 01367000
* BUILT / UPDATE USER DE IF IT IS NO CDLOAD REQUEST AND IF A   @D14CDHD 01368000
* USER DE EXISTS WITH THE SAME PHASE NAME, WHICH SHOULD BE     @D14CDHD 01369000
* BUILT / UPDATED                                              @D14CDHD 01370000
*                                                              @D14CDHD 01371000
         SPACE 1                                               @D14CDVB 01372000
         CLI   DFWKRQFM,CDLOADRQ  CDLOAD REQUEST               @D64ADVB 01373000
         BE    BFCHWKNF           YES --->                     @D14CDVB 01374000
         TM    DFWKRQFM,MVSXXXX   SIMULATED MVS REQUEST        @D64ADVB 01375000
         BO    BFCHWKNF           YES --->                     @D .. VB 01376000
         TM    DFCBSW1,USERDUPD   USER_DE TO BE UPDATED        @D64ADVB 01377000
         BZ    BFCHWKNF           NO  --->                     @D14BDVB 01378000
         L     R2,DFWKUSEN        ADDR (USER_DE)               @D14BDVB 01379000
*SGLINK  BLDENTRY,INPUT=(R2,R7,R9,RA),WORK=(R3,R4,R5)          @D369DVB 01380000
         BAL   LINK2,BLDENTRY                                  @D14CDVB 01381000
*                                                              @D14CDHD 01382000
* RETURN WITH RF=4*RF                                          @D14CDHD 01383000
*                                                              @D14CDHD 01384000
BFCHWKNF ALR   RF,RF              4 * RC IN ORDER TO...        @D14CDVB 01385000
         ALR   RF,RF              ...... GET OFFSET IN FOFFTAB @D14CDVB 01386000
         BR    LINK1              =====>          RETURN       @D14CDVB 01387000
         SPACE 2                                               @D369DVB 01388000
         EJECT                                                          01389000
***************************************************************@D369DVB 01390000
*    SUBROUTINE: B L D E N T R Y                               @D14CDHD 01391000
*                                                              @D14CDHD 01392000
*    MODULE:    SGDFCH                                         @D14CDHD 01393000
*    FUNCTION:  1. FILLS SDL ENTRY                             @D14CDHD 01394000
*               2. FILLS / UPDATE USER DE; BUILDS DE COPY      @D14CDHD 01395000
*                  - THE TYPE OF THE USER DE IS DETERMINED BY  @D14CDHD 01396000
*                    THE USER (PARAMETER DE=VSE/OLD IN GENL)   @D14CDHD 01397000
*    INPUT:      (NOT COMPLETE)                                @D14CDHD 01398000
*                R2:         @USER DE                          @D14CDHD 01399000
*                SDLFORM:    NOT SET BY FETCH;                 @D14CDHD 01400000
*                            FLAG IN DFWKFLAG OF TCB;          @D14CDHD 01401000
*                            = 1 INDICATES, THAT A DE WITH THE @D14CDHD 01402000
*                                LAYOUT OF A SDL ENTRY WILL BE @D14CDHD 01403000
*                                BUILT AT LOCATION (@R2)       @D14CDHD 01404000
*                            = 0 INDICATES, THAT A USER DE WILL@D14CDHD 01405000
*                                BE BUILT                      @D14CDHD 01406000
*                DIRCOPY:    IF DIRCOPY IN USER DE(@R2)=X'FF'  @D14CDHD 01407000
*                            THEN A USER DE IN VSE-FORM (NEW)  @D14CDHD 01408000
*                            IS BUILT                          @D14CDHD 01409000
*                FLNKVIO:    FLAG IN DFCBSW2 OF TCB;           @D14CDHD 01410000
*                            SET BY ROUTINE NXTCHAIN OF FETCH; @D14CDHD 01411000
*   ???????                  MAY BE WILL BE SET IF A DE FROM   @D14CDHD 01412000
*                            =1 INDICATES, THAT IN CAUSE OF    @D14CDHD 01413000
*                               BUILDING A USER DE, NO DE COPY @D14CDHD 01414000
*                               WILL BE BUILT (@DE COPY = 0)   @D14CDHD 01415000
*                            =0 A DE COPY WILL BE BUILT        @D14CDHD 01416000
*                DSWRKAR:    IN SGAFCH;                        @D14CDHD 01417000
*                            TEMPORARY WORK AREA, WHICH IS     @D14CDHD 01418000
*                            USED TO BUILD THE USER DE         @D14CDHD 01419000
*    ATRRIBUTE:  SERIELLY REUASABLE                            @D14CDHD 01420000
*    EXITS:      ONLY NORMAL                                   @D14CDHD 01421000
*    ERROR HANDLING:                                           @D14CDHD 01422000
*                                                              @D14CDHD 01423000
*                IF USER DE(@R2) DOES NOT DESCRIBE THE SAME    @D14CDHD 01424000
*                PHASE AS DE IN TCB, THEN                      @D14CDHD 01425000
*                RF = 6;                                       @D14CDHD 01426000
*                RETURN CODE IN DE COPY(@R2) = 24;             @D14CDHD 01427000
*                USER DE CORRESPONDING TO DE IN TCB IS BUILT   @D14CDHD 01428000
*                THUS OVERWRITING THE USER DE(@R2);            @D14CDHD 01429000
*    CHANGED REGISTERS: R0, R1, R3, R4, R5, RF                 @D14CDHD 01430000
*    CALLED BY:  BLDFWRK                                       @D14CDHD 01431000
*    CALL ROUTINE:  NONE                                       @D14CDHD 01432000
***************************************************************@D369DVB 01433000
         SPACE 1                                               @D369DVB 01434000
*SGLINK  BLDENTRY,INPUT=(R2,R7,R9,RA),WORK=(R0,R1,R3,R4,R5)    @D14BDVB 01435000
BLDENTRY DS    0H                                              @D36JDVB 01436000
         SPACE 1                                               @D14BDHD 01437000
*                                                              @D14BDHD 01438000
* IF A SDL-ENTRY WILL BE FILLED, THEN FILL IT AND RETURN       @D14BDHD 01439000
*                                                              @D14BDHD 01440000
         SPACE 1                                               @D14BDHD 01441000
         USING DIRECTRY,R2                                     @D14BDVB 01442000
         TM    DFWKFLAG,SDLFORM   SDL-ENTRY ?                  @D14BDHD 01443000
         BZ    CHKUSENT           NO  -->                      @D14BDVB 01444000
         SPACE 1                                               @D14BDVB 01445000
         MVC   L'DFWKNAME(DFWKEND-DFWKEGEN,R2),DFWKEGEN        @D14BDVB 01446000
         BR    LINK2              =====>   RETURN              @D14BDVB 01447000
         SPACE 1                                               @D14BDVB 01448000
*                                                              @D14BDHD 01449000
* A USER DE WILL BE FILLED,                                    @D14BDHD 01450000
*                                                              @D14BDHD 01451000
         SPACE 1                                               @D14BDVB 01452000
CHKUSENT LR    R3,RF              SAVE RETURN_CODE             @D14BDVB 01453000
         SLR   RF,RF                                           @D14BDVB 01454000
BLDUSENT ST    RA,ORG10(RD)       SAVE REQUESTOR'S TCB_ADDR    @D14BDVB 01455000
         SPACE 1                                                        01456000
*                                                              @D14BDHD 01457000
* IF DE IS IN LINK-VIO STATE                                   @D14BDHD 01458000
*    THEN @DE COPY (=R1) = 0                                   @D14BDHD 01459000
*    ELSE GET SPACE FOR DE COPY (@R1) AND BUILD DE COPY        @D14BDHD 01460000
*                                                              @D14BDHD 01461000
         SPACE 1                                                        01462000
         LA    R0,SDLCLEN         LENGTH OF DE COPY            @D14BDHD 01463000
         TM    DFCBSW2,FLNKVIO    LINK_VIO STATE               @D14BDVB 01464000
         BO    BLDNOSVA           YES  --->  (NO GETVIS_COPY)  @D14BDVB 01465000
         NI    DFCBSW1,XFF-DIRGTVIS                            @D64ADVB 01466000
         LR    R1,R2              DIRECTORY ENTRY OF EX_INSTR  @D21ZDVB 01467000
         LA    R4,DIRLIMN         DIRN NEW_DE MINIMUM          @D21ZDVB 01468000
         TM    DIRCOPY,DIRVSEID   VSE_FORMAT                   @D21ZDVB 01469000
         BO    BLDCONTL           YES--->                      @D21ZDVB 01470000
         LA    R4,DIRLIMO         DIRN OLD_DE MINIMUM          @D21ZDVB 01471000
BLDCONTL EX    R4,CLILENTR        ADDRESS OF GETVIS COPY USED  @D21ZDVB 01472000
         BL    BLDNOSVA           NO  --->                     @D21ZDVB 01473000
         L     R1,DFWKCOMG        ADDR (COMREG)                @D14BDVB 01474000
         USING COMREG,R1                                       @D14BDVB 01475000
         SPACE 1                                               @DA33314 01476000
*                                                              @DA33314 01477000
*  IF @DE COPY CHAIN # 0 THEN SEARCH THROUGH CHAIN             @DA33314 01478000
*                                                              @DA33314 01479000
         SPACE 1                                               @DA33314 01480000
         L     R4,IJBDECPY         @DE COPY CHAIN              @DA33314 01481000
         LTR   R4,R4               = 0 ?                       @DA33314 01482000
         BZ    BLDGETV             YES --->                    @DA33314 01483000
         SPACE 1                                               @DA33314 01484000
*                                                              @DA33314 01485000
*  SEARCH THROUGH COPY CHAIN                                   @DA33314 01486000
*                                                              @DA33314 01487000
         SPACE 1                                               @DA33314 01488000
BLDLOOP  CLC   D0(SDLELEN,R4),DFWKNAME    EQUAL COPY?          @DA33314 01489000
         BNE   BLDNXT                     NO ---> NEXT ENTRY   @DA33314 01490000
         LR    R1,R4               YES ---> USE COPY AGAIN     @DA33314 01491000
         B     BLDFRTH                                         @DA33314 01492000
*                                                              @DA33314 01493000
BLDNXT   L     R4,SDLEFORW(R4)     GET NEXT ENTY IN COPY CHAIN @DA33314 01494000
         LTR   R4,R4               END OF CHAIN                @D21ZDVB 01495000
         BNZ   BLDLOOP             NO --->   REPEAT            @D21ZDVB 01496000
         SPACE 1                                               @DA33314 01497000
*                                                              @DA33314 01498000
*  GETVIS FOR DE COPY                                          @DA33314 01499000
*                                                              @DA33314 01500000
         SPACE 1                                               @DA33314 01501000
BLDGETV  LA    R1,IJBSPNAM        ADDR (SUBPOOL-NAME)          @DA33314 01502000
         DROP  R1                                              @DA33314 01503000
         L     RA,TCBPTR          ADDR (TCB OF DIR_SEARCH_TASK)@DA33314 01504000
*        SGETVIS SPID=(1),SPACE=FTCHPR,SPCNTRL=YES,EXCREQ=YES  @D51IDMZ 01505000
         SGETVIS SPID=(1),SPACE=FTCHPR,SPCNTRL=YES,EXCREQ=YES  @D51IDMZ 01506000
         L     RA,ORG10(RD)       RE ESTABLISH TCB_ADDR        @DA33314 01507000
         LTR   RF,RF              SUCCESSFUL SUBPOOL_REQUEST   @DA33314 01508000
         BNZ   BLDNOSVA           NO --->                      @DA33314 01509000
BLDSVA   MVC   0(SDLELEN,R1),DFWKNAME COPY IN SVA              @DA33314 01510000
         MVC   SDLEPIK(2,R1),PIK  PIK (PART) INTO GETVIS_COPY  @DA33314 01511000
         OI    DFCBSW1,DIRGTVIS                                @D64ADVB 01512000
         SPACE 1                                               @DA33314 01513000
*                                                              @DA33314 01514000
*  ENQUEUE DE COPY INTO DE COPY CHAIN                          @DA33314 01515000
*                                                              @DA33314 01516000
         SPACE 1                                               @DA33314 01517000
         L     R4,DFWKCOMG                                     @DA33314 01518000
         USING COMREG,R4                                       @DA33314 01519000
         L     R0,IJBDECPY         @DE COPY CHAIN              @D21ZDVB 01520000
BLDENQ   ST    R0,SDLEFORW(R1)                                 @DA33314 01521000
         ST    R1,IJBDECPY                                     @DA33314 01522000
         DROP  R4                                              @DA33314 01523000
         B     BLDFRTH            ---->                        @DA33314 01524000
BLDNOSVA SLR   R1,R1              RESET GETVIS ADDR            @DA33314 01525000
         SPACE 1                                                        01526000
*                                                              @DA33314 01527000
* BUILD USER DE IN WORKAREA                                    @DA33314 01528000
*                                                              @DA33314 01529000
         SPACE 1                                                        01530000
BLDFRTH  LR    RF,R3              RE_ESTABLISH RETURN CODE     @DA33314 01531000
         LA    R4,DSWRKAR         ADDRESS OF WORKAREA          @DA33314 01532000
         CLI   DIRN,0             ANY DIRECTORY INFO DESIRED?  @D21ZDVB 01533000
         BER   LINK2              NO =====>                    @D21ZDVB 01534000
         TM    DIRCOPY,DIRVSEID   VSE_FORMAT                   @DA33314 01535000
         BNO   BLDOLD             NO  -->                      @DA33314 01536000
         DROP  R2                                              @DA33314 01537000
         USING DIRECTRY,R4                                     @DA33314 01538000
         SPACE 1                                                        01539000
*                                                              @DA33314 01540000
* BUILD IN WORRAREA (@R4) THE USER DE IN THE VSE-FORM; USE AS  @DA33314 01541000
* BASE THE DE IN THE TCB                                       @DA33314 01542000
*                                                              @DA33314 01543000
         SPACE 1                                                        01544000
         ST    R1,DIRACOPY        @DE COPY                     @DA33314 01545000
         L     R3,DFWKEPLN        LENGTH OF PHASE IN BYTES     @DA33314 01546000
         ST    R3,DIRLMBR                                      @DA33314 01547000
         MVC   DIRC(2),DFWKESWT   FLAGS                        @DA33314 01548000
         MVC   DIRALPT(DIRASVA-DIRALPT),DFWKELPL      PROVIDE LOAD_ADDR*01549000
                                  ... ENTRY_POINT AND BEG_PART @DA33314 01550000
         MVC   DIRASVA,DFWKEVLE   ENTRY_POINT IN SVA (IF ANY)  @DA33314 01551000
         MVC   DIRIDVSE,DIRIDVSE-DIRNAME(R2) PROVIDE X'FFFFFF' @DA33314 01552000
         LA    R0,(DIRLNVSE-12)/2                              @DA33314 01553000
         CLI   DIRN-DIRNAME(R2),(DIRLNVSE-12)/2  TESTING ...   @D21ZDVB 01554000
         BNE   BLDRCOD            ... MEANINGFULL, NO --->     @D21ZDVB 01555000
         SPACE 1                                               @DA33314 01556000
*                                                              @DA33314 01557000
* HANDLE THE FOLLOWING PROBLEM:                                @DA33314 01558000
* 1. DURING DIRECTORY SEARCH A USER DE WAS FOUND, WHICH IS     @DA33314 01559000
*    ACTIVE, BUT HAS NO DE COPY-POINTER OR THE RECLAIM COUNTER @DA33314 01560000
*    OF USER DE AND SUBLIBRARY DO NOT MATCH                    @DA33314 01561000
*    ---> ACTDIR FLAG IN TCB WILL BE SET ACTIVE !              @DA33314 01562000
* 2. BECAUSE NO PHYSICAL DISK ADDRESS IS AVAILABLE FOR THE     @DA33314 01563000
*    PHASE, A DIRECTORY SEARCH MUST BE DONE                    @DA33314 01564000
* 3. ASSUME, ANOTHER DE WITH THE SAME PHASE NAME WAS FOUND     @DA33314 01565000
* 4. THE NEW DE WILL BE COPIED INTO TCB                        @DA33314 01566000
* 5. SOME CHECKS WILL BE DONE TO ASSURE THAT THE USER DE (@R2) @DA33314 01567000
*    AND THE NEW DE IN TCB DESCRIBE THE SAME PHASE (SEE        @DA33314 01568000
*    FOLLOWING CODE)                                           @DA33314 01569000
* 6.                                                           @DA33314 01570000
*                                                              @DA33314 01571000
*                                                              @DA33314 01572000
*                                                              @DA33314 01573000
         SPACE 1                                               @DA33314 01574000
         TM    DFCBSW1,ACTDIR     ACTIVE DIRECTORY ENTRY       @D64ADVB 01575000
         BZ    BLDCOM             NO --->                      @DA33314 01576000
         L     R3,DFWKEPLN                                     @DA33314 01577000
         CL    R3,DIRLMBR-DIRNAME(R2)   PHASE LENGTH IDENTICAL @DA33314 01578000
         BNE   BLDRCOD            NO --->                      @DA33314 01579000
         L     R5,DIRC            RELOCATE                     @DA33314 01580000
         X     R5,DIRC-DIRNAME(R2)  ... STATE                  @DA33314 01581000
         N     R5,FRELSTAT          ... IDENTICAL              @DA33314 01582000
         BNZ   BLDRCOD            NO --->                      @DA33314 01583000
         L     R5,DIRALPT         DIFFERENCE                   @DA33314 01584000
         SL    R5,DIRAPART        LOADPOINT - PART_START  ...  @DA33314 01585000
         AL    R5,DIRAPART-DIRNAME(R2)                         @DA33314 01586000
         SL    R5,DIRALPT-DIRNAME(R2)  .... IDENTICAL          @DA33314 01587000
         BNP   BLDRCOD            NO --->                      @DA33314 01588000
         L     R5,DIRAEPT         DIFFERENCE                   @DA33314 01589000
         SL    R5,DIRALPT         ENTRYPOINT - LOADPOINT  ...  @DA33314 01590000
         AL    R5,DIRALPT-DIRNAME(R2)                          @DA33314 01591000
         SL    R5,DIRAEPT-DIRNAME(R2)  .... IDENTICAL          @DA33314 01592000
         BP    BLDCOM             YES -->                      @DA33314 01593000
         B     BLDRCOD            NO --->                      @DA33314 01594000
         SPACE 1                                                        01595000
*                                                              @DA33314 01596000
* BUILD IN WORRAREA (@R4) THE USER DE IN THE OLD FORM; USE AS  @DA33314 01597000
* BASE THE DE IN THE TCB                                       @DA33314 01598000
*                                                              @DA33314 01599000
         SPACE 1                                                        01600000
BLDOLD   STCM  R1,7,DIRCOPY       @DE COPY                     @DA33314 01601000
         MVC   DIRC(2),DFWKESWT   FLAGS                        @DA33314 01602000
         L     R3,DFWKEPLN        LENGTH OF PHASE IN BYTES     @DA33314 01603000
         LR    R5,R3                                           @DA33314 01604000
         SRL   R3,TXTSHIFT        LEN(PHASE) / 1K              @DA33314 01605000
         LA    R3,1(R3)           ...+1 FOR REST               @DA33314 01606000
         N     R5,FMASK1K         LEN(PHASE) MOD 1K            @DA33314 01607000
         BNZ   BLD10              RESULT > 0  --->             @DA33314 01608000
         BCTR  R3,0               UNDO ADDITION FOR REST       @DA33314 01609000
         LA    R5,TXTBLOCK        TXTLENGTH = 1K               @DA33314 01610000
BLD10    STH   R3,DIRTT           NUMBER OF USED 1K BLOCKS     @DA33314 01611000
         STH   R5,DIRLL           TXTLENGTH IN LAST BLOCK      @DA33314 01612000
         SLR   R0,R0                                           @DA33314 01613000
         ST    R0,DIRRR           NUMBER(RLDS) = 0             @DA33314 01614000
         MVC   DIRPPP,DFWKELPL+1  LOADPOINT OF PHASE           @DA33314 01615000
         MVC   DIREEE,DFWKEEPL+1  ENTRY POINT OF PHASE         @DA33314 01616000
         MVC   DIRAAA,DFWKEBGP+1  BEGIN OF PARTITION           @DA33314 01617000
         MVC   DIRVEE,DFWKEVLE    ENTRY_POINT IN SVA (IF ANY)  @DA33314 01618000
         SPACE 1                                               @DA33314 01619000
         STH   R0,DIRPLIB         ADDR (LIB_DEF_TAB)           @DA33314 01620000
         STH   R0,DIRPLIB+2              ....  = 0             @DA33314 01621000
         LA    R0,DELENHW                                      @DA33314 01622000
         CLI   DIRN-DIRNAME(R2),DELENHW-2        TESTING ...   @D21ZDVB 01623000
         BL    BLDRCOD            ... MEANINGFULL, NO --->     @D21ZDVB 01624000
         SPACE 1                                                        01625000
*                                                              @DA33314 01626000
* CHECK, WHETHER DE'S DESCRIBE SAME PHASE  ?????               @DA33314 01627000
*                                                              @DA33314 01628000
         SPACE 1                                                        01629000
         TM    DFCBSW1,ACTDIR     ACTIVE DIRECTORY ENTRY       @D64ADVB 01630000
         BZ    BLDCOM             NO --->                      @DA33314 01631000
         CLC   DIRTT(4),DIRTT-DIRNAME(R2) PHASE_LEN  IDENTICAL @DA33314 01632000
         BNE   BLDRCOD            NO --->                      @DA33314 01633000
         L     R5,DIRC            RELOCATE                     @DA33314 01634000
         X     R5,DIRC-DIRNAME(R2)  ... STATE                  @DA33314 01635000
         N     R5,FRELSTAT          ... IDENTICAL              @DA33314 01636000
         BNZ   BLDRCOD            NO --->                      @DA33314 01637000
         LR    R3,R0                                           @DA33314 01638000
         LR    R5,R0                                           @DA33314 01639000
         ICM   R3,7,DIRPPP        CALCULATE ...                @DA33314 01640000
         ICM   R5,7,DIRAAA        ...DIFFERENCE                @DA33314 01641000
         SLR   R3,R5              ...LOADPOINT - PART_START    @DA33314 01642000
         LR    R5,R0                                           @DA33314 01643000
         ICM   R5,7,DIRAAA-DIRNAME(R2)                         @DA33314 01644000
         ICM   R0,7,DIRPPP-DIRNAME(R2)                         @DA33314 01645000
         SLR   R0,R5              LOADPOINT - PART_START       @DA33314 01646000
         CLR   R3,R0              ... IDENTICAL                @DA33314 01647000
         BNE   BLDRCOD            NO --->                      @DA33314 01648000
         SLR   R0,R0                                           @DA33314 01649000
         LR    R3,R0                                           @DA33314 01650000
         LR    R5,R0                                           @DA33314 01651000
         ICM   R3,7,DIRPPP        CALCULATE ...                @DA33314 01652000
         ICM   R5,7,DIREEE        ...DIFFERENCE                @DA33314 01653000
         SLR   R5,R3              ...LOADPOINT - PART_START    @DA33314 01654000
         LR    R3,R0                                           @DA33314 01655000
         ICM   R3,7,DIREEE-DIRNAME(R2)                         @DA33314 01656000
         ICM   R0,7,DIRPPP-DIRNAME(R2)                         @DA33314 01657000
         SLR   R3,R0              LOADPOINT - PART_START       @DA33314 01658000
         CLR   R3,R5              ... IDENTICAL                @DA33314 01659000
         LA    R0,DELENHW                                      @DA33314 01660000
         BE    BLDCOM             YES -->                      @DA33314 01661000
BLDRCOD  MVI   DFWKRCOD,24        INDICATE RC = 24             @DA33314 01662000
         LA    RF,6               INDICATE INTERNAL RC_CODE = 24, BUT  *01663000
                                  CONSIDER RF = RC/4           @DA33314 01664000
         SPACE 1                                                        01665000
*                                                              @DA33314 01666000
* COPY WORKAREA INTO USER'S DE AND RETURN                      @DA33314 01667000
*                                                              @DA33314 01668000
         SPACE 1                                                        01669000
         DROP  R4                                              @DA33314 01670000
         USING DIRECTRY,R2                                     @DA33314 01671000
BLDCOM   SLR   R3,R3              CLEAR 1ST THREE BYTES        @DA33314 01672000
         IC    R3,DIRN            GET # OF DATA TO BE MOVED    @DA33314 01673000
         CLR   R3,R0              VALID LENGTH                 @D21ZDVB 01674000
         BNH   BLDMOVE            YES  --->                    @D21ZDVB 01675000
         LR    R3,R0              RESTRICT TO VALID LENGTH     @D21ZDVB 01676000
         DROP  R2                                              @D21ZDVB 01677000
         USING DIRECTRY,R4                                     @D21ZDVB 01678000
BLDMOVE  STC   R3,DIRN            PROVIDE LENGTH IN WORKAREA   @D21ZDVB 01679000
         DROP  R4                                              @D21ZDVB 01680000
         LA    R3,4(R3,R3)        #(BYTES) TO BE MOVED         @DA33314 01681000
         BCTR  R3,0               -1 FOR 370_LENGTH            @DA33314 01682000
         SPACE 1                                               @DA33314 01683000
*---  PROVIDE USER_DE  ---------------------------------------*@DA33314 01684000
         SPACE 1                                               @DA33314 01685000
         EX    R3,MVCUSEN         UPDATE USER ENTRY            @DA33314 01686000
         BR    LINK2              =====>                       @DA33314 01687000
         SPACE 1                                               @DA33314 01688000
*--------------------------------------------------------------@DA33314 01689000
         SPACE 1                                               @DA33314 01690000
         USING DIRECTRY,R2                                     @D21ZDVB 01691000
MVCUSEN  MVC   DIRCOPY(0),DIRCOPY-DIRNAME(R4)                  @DA33314 01692000
         DROP  R2                                              @DA33314 01693000
         SPACE 1                                               @DA33314 01694000
         SPACE 2                                                        01695000
*-------------------------------------------------------------*@DA33314 01696000
         EJECT                                                 @DA33314 01697000
*-------------------------------------------------------------*@DA33314 01698000
*  MODULE PROLOGUE: SCANDIR                                    @DA33314 01699000
*    ROUTINE NAME: SCANDIR                                     @DA33314 01700000
*    MODULE:       SGDFCH                                      @DA33314 01701000
*    FUNCTION:     SEARCHES THE SPECIFIED LIBRARY (--> CHAIN ) @DA33314 01702000
*                  FOR A REQUESTED PHASENAME                   @DA33314 01703000
*                                        (--> SEARCH ARGUMENT) @DA33314 01704000
*                  THE GATING MECHANISM IS GATING VIA SYSTEM   @DA33314 01705000
*                  TASK                                        @DA33314 01706000
*    CALLER:       FIND                                        @DA33314 01707000
*    OPERATION:    FRPL := READ(SEARCH_CHAIN,FCHWORK)          @DA33314 01708000
*                  DO WHILE NOT_END_OF_SEARCH                  @DA33314 01709000
*                           DIRBUF := READ (FRPL_DIR OR LINK)  @DA33314 01710000
*                           CALL SCANLIB                       @DA33314 01711000
*                                / POST END_OF_SEARCH /        @DA33314 01712000
*                  ENDDO                                       @DA33314 01713000
*                  POST RC AND RETURN.                         @DA33314 01714000
*    INPUT:     --->  SEE REFERENCED DATA                      @DA33314 01715000
*    OUTPUT:    REG1 POINTS TO DIRECTORY ENTRY IF RC=0         @DA33314 01716000
*                                      (--> ADDRESS IN FDIRBIF)@DA33314 01717000
*               REG15 CONTAINS RC                              @DA33314 01718000
*    RETURN CODES: 0  --- ENTRY FOUND                          @DA33314 01719000
*                  4  --- ENTRY NOT FOUND                      @DA33314 01720000
*                  8  --- READ NEXT LBUND                      @DA33314 01721000
*                 12  --- N.A. ( ERROR CONDITION )             @DA33314 01722000
*    CALLED ROUTINES: READ                                     @DA33314 01723000
*    RETURN:       CALLER                                      @DA33314 01724000
*    ERROR EXITS:  NONE                                        @DA33314 01725000
*    REFERENCED DATA:                                          @DA33314 01726000
*                  FCHWORK (READ)                              @DA33314 01727000
*                  SEARCHING_CHAIN (READ)                      @DA33314 01728000
*                  FCB (READ)                                  @DA33314 01729000
*-------------------------------------------------------------*@DA33314 01730000
         SPACE 1                                               @DA33314 01731000
.*DEL    USING FETCH,R9                                        @DA33314 01732000
*SGLINK SCANDIR,INPUT=(R7,R9,RA,RB,RD),OUTPUT=(R1,RF),                 *01733000
               WORK=(R0,R2,R3,R4,R5,R6,RE)                     @DA33314 01734000
SCANDIR  DS    0H                                              @DA33314 01735000
         AIF   (NOT &BGFSTAT).FSTZZ5                           @DA33314 01736000
         L     R1,FLCDIRS          )                           @DA33314 01737000
         LA    R1,1(R1)            )  LOCAL DIR SEARCH COUNTER @DA33314 01738000
         ST    R1,FLCDIRS          )                           @DA33314 01739000
.FSTZZ5  ANOP                                                  @DA33314 01740000
         TM    DFCBSW2,FLNKVIO     LINK_VIO REQUEST            @DA33314 01741000
         BO    DIRLINK             YES --->                    @DA33314 01742000
         NI    DFCBSW1,XFF-IDERR  CLEAR IDERR FLAG             @D64ADVB 01743000
         AIF   (NOT &BGDSHR).NOSHR05                           @DA33314 01744000
         NI    SLDFLAG,XFF-SLD1BLCK  NO DIRECTORY BLOCK READ IN@DA33314 01745000
         NI    SLDFLAG,XFF-SLDBACKL  RESET SLD BACK LEVEL FLAG @DA33314 01746000
.NOSHR05 ANOP                                                  @DA33314 01747000
         LA    R1,FBLDDIR          DIR FRPL                    @DA33314 01748000
*SGLINK  DIRREAD,INPUT=(R1,R6,R9,RA,RB,RD),OUTPUT=(R1,RF),WORK=(RE)     01749000
         BAL   LINK3,DIRREAD       INITIALIZE FRPL             @DA33314 01750000
         SPACE 1                                                        01751000
*-------------------------------------------------------------*@DA33314 01752000
*      READ AND SCAN DIRECTORY                                *@DA33314 01753000
*-------------------------------------------------------------*@DA33314 01754000
         SPACE 1                                                        01755000
DIRSRCH  EQU   *                                                        01756000
         AIF   (NOT &BGDSHR).NOSHR06                           @DA33314 01757000
         TM    SLDFLAG,SLD1BLCK   ALREADY 1 DIR. BLOCK READ IN?@DA33314 01758000
         BZ    DIREADIN           NO                           @DA33314 01759000
         TM    SLDFLAG,SLDIND     DIR. BLOCK FOUND IN SLD?     @DA33314 01760000
         BZ    DIREADIN           NO                           @DA33314 01761000
DIRENQ   L     RF,DAENQSLD        SLD IS IN BACK LEVEL STATE   @DA33314 01762000
*        AMODESW CALL,REGS=(LINK3,RF) ENQ SLD UPDATE           @D64ADVB 01763000
         AMODESW CALL,REGS=(LINK3,RF) ENQ SLD UPDATE           @D64ADVB 01764000
.NOSHR06 ANOP                                                  @DA33314 01765000
*SGLINK  DIRREAD,INPUT=(R1,R6,R9,RA,RB,RD),OUTPUT=(R1,RF),WORK=(RE)     01766000
DIREADIN L     R1,DSRPLDIR        @ DIR-FRPL                   @DA33314 01767000
         BAL   LINK3,DIRREAD      READ DIRECTORY BLOCK         @DA33314 01768000
         SPACE 1                                               @DA33314 01769000
         AIF   (NOT &BGDSHR).NOSHR11                           @DA33314 01770000
         OI    SLDFLAG,SLD1BLCK   AT LEAST 1 DIR. BLOCK READ   @DA33314 01771000
.NOSHR11 ANOP                                                  @DA33314 01772000
         LA    R0,DENTEDIR        SEARCH OPTION = DIR          @DA33314 01773000
         L     RF,DASCNLIB        ENTRY POINT (SCANLIB ROUTINE)@DA33314 01774000
         BALR  RE,RF              SCAN LB                      @DA33314 01775000
         B     BRTBDIRC(RF)       ---> VIA RETURN CODE         @DA33314 01776000
BRTBDIRC LR    R1,R5              RETURN ....                  @DA33314 01777000
         BR    LINK2              =======> ... PHASE FOUND     @DA33314 01778000
.NOSLD10 ANOP                                                  @DA33314 01779000
         BR    LINK2              4  ====> ... PHASE NOT FOUND @DA33314 01780000
         DC    XL2'0'             N/U                          @DA33314 01781000
         B     DIRSRCH            8  ====> ... READ NEXT LB    @DA33314 01782000
         B     DIRNTFND           12 ====> ... PHASE NOT FOUND @DA33314 01783000
         B     DIRLIBR            16 ====> ... INVALID LIBRARY @DA33314 01784000
         AIF   (NOT &BGDSHR).NOSHR12                           @DA33314 01785000
         B     DIRSCIND           20 ====>    DIRECTORY SCAN   @DA33314 01786000
         AGO   .NOSHR13                                        @DA33314 01787000
.NOSHR12 ANOP                                                  @DA33314 01788000
         LA    RF,48                                           @DA33314 01789000
         B     DIRERROR           20 ====>    INTERNAL ERROR   @DA33314 01790000
*                                                                       01791000
.NOSHR13 ANOP                                                  @DA33314 01792000
DIRLIBR  LA    RF,28                                           @DA33314 01793000
         B     DIRERROR                                        @DA33314 01794000
         SPACE 1                                               @DA33314 01795000
         AIF   (NOT &BGDSHR).NOSHR17                           @DA33314 01796000
         USING DRPL,R1                                         @DA33314 01797000
DIRSCIND OI    SLDFLAG,SLDBACKL   SCAN WHOLE DIRECTORY BY      @DA33314 01798000
         SR    R5,R5              USING THE INDEX              @DA33314 01799000
         ST    R5,DRPLADA                                      @DA33314 01800000
         B     DIREADIN                                        @DA33314 01801000
         DROP  R1                                              @DA33314 01802000
.NOSHR17 ANOP                                                  @DA33314 01803000
         SPACE 2                                                        01804000
*-------------------------------------------------------------*@DA33314 01805000
*      READ DIRECTORY ENTRY/BUILD FRPL SUBROUTINE              @DA33314 01806000
*-------------------------------------------------------------*@DA33314 01807000
         SPACE 1                                                        01808000
*SGLINK  DIRREAD,INPUT=(R1,R6,R9,RA,RB,RD),OUTPUT=(R1,RF),WORK=(RE)     01809000
DIRREAD  DS    0H                                              @D21ZDVB 01810000
         L     RF,DAREAD          GET @ OF READ ROUTINE        @DA33314 01811000
*SGLINK  FREAD,INPUT=(R1,RA,RB,RD,RE),OUTPUT=(R1,RF)           @DA33314 01812000
*        AMODESW CALL,REGS=(RE,RF)                             @D64ADVB 01813000
         AMODESW CALL,REGS=(RE,RF)                             @D64ADVB 01814000
         LTR   RF,RF              TEST RETURN CODE             @DA33314 01815000
         BZR   LINK3              =====>  EXIT ALL RIGHT       @DA33314 01816000
         SPACE 1                                                        01817000
*-------------------------------------------------------------*@DA33314 01818000
*      ERROR HANDLING ROUTINE                                 *@DA33314 01819000
*-------------------------------------------------------------*@DA33314 01820000
         SPACE 1                                                        01821000
DIRERROR LR    R5,RF              SAVE RC                      @DA33314 01822000
BRTABERR B     BRTABERR(RF)                                    @DA33314 01823000
         B     DIRDERX            4  : CIL I/O ERROR           @DA33314 01824000
         B     DIRDERLB           8  : INVALID BLOCK           @DA33314 01825000
         B     DIRHWT             12 : INTERFACE ERROR         @DA33314 01826000
         B     DIRHWT             16 : TFIX ERROR -> HARD WAIT @DA33314 01827000
         B     DIRDCHLB           20 : RBA IN INVALID EXTENT   @DA33314 01828000
         B     DIRNTFND           24 : END_OF_LB CHAIN         @DA33314 01829000
         B     DIRDERLB           28 : DIR_LB INVALID          @DA33314 01830000
         B     DIRNTFND           32 : NOTFOUND                @DA33314 01831000
         B     DIRHWT             36 : INVALID ADDRESS         @DA33314 01832000
         B     DIRHWT             40 : PHASE DOES NOT FIT      @DA33314 01833000
         AIF   (NOT &BGDSHR).NOSHR14                           @DA33314 01834000
         B     DIRSLD             44 : ID MISMATCH             @DA33314 01835000
         AGO   .NOSHR15                                        @DA33314 01836000
.NOSHR14 ANOP                                                  @DA33314 01837000
         B     DIRHWT                                          @DA33314 01838000
.NOSHR15 ANOP                                                  @DA33314 01839000
         B     DIRHWT             48 : INTERNAL ERROR          @DA33314 01840000
         SPACE 1                                               @DA33314 01841000
         AIF   (NOT &BGDSHR).NOSHR16                           @DA33314 01842000
DIRSLD   TM    SLDFLAG,SLDIND     DIR. BLOCK FOUND BY SLD SCAN?@DA33314 01843000
         BZ    DIRHWT             NO  ---> INTERNAL ERROR      @DA33314 01844000
         B     DIRENQ             SLD IS IN BACK LEVEL STATE   @DA33314 01845000
.NOSHR16 ANOP                                                  @DA33314 01846000
         SPACE 1                                               @DA33314 01847000
DIRNTFND LA    RF,4               CONVERT RC = 4               @DA33314 01848000
         BR    LINK2              =====>  EXIT PHASE NOT FOUND @DA33314 01849000
         SPACE 1                                               @DA33314 01850000
         USING DRPL,R1                                         @DA33314 01851000
DIRDCHLB L     R0,DRPLADA         IF...                        @DA33314 01852000
         CL    R0,EOLBCHN         ...END_OF_LB CHAIN...        @DA33314 01853000
         BE    DIRNTFND           ... RC = PHASE NOT FOUND     @DA33314 01854000
         DROP  R1                                              @DA33314 01855000
         TM    DFWKRQFM,MVSXXXX   MVSLOAD SIMULATION           @D64ADVB 01856000
         BNO   DIRDERLB           NO,  ---------->             @D64ADVB 01857000
         MVI   DFWKRCOD,RBAOUT40   RBA OUTSIDE EXTENT          @D64ADVB 01858000
         B     DIRDERAL                                        @D64ADVB 01859000
         SPACE 1                                               @DA33314 01860000
DIRDERLB MVI   DFWKRCOD,NVALIB12   INVALID LIBRARY STRUCTURE   @DA33314 01861000
DIRDERAL EQU   *                                               @DA33314 01862000
         LM    R1,R4,DFWKALIB      SAVE TCB_CONTENT            @DA33314 01863000
         STC   R5,DFWKANAM-1       PROVIDE RC                  @DA33314 01864000
         MVC   DFWKALIB(7),0(R2)   PROVIDE FIRST 7 CHARACTERS...       *01865000
                                   ... OF SUBLIBRARY NAME      @DA33314 01866000
         MVC   DFWKANAM(L'DFWKNAME),DFWKNAME                   @DA33314 01867000
         LA    R0,DFWKALIB         ADDR OF DISPLAY AREA        @DA33314 01868000
         ST    R0,XXUSAREA         ... TO DEBUG AREA           @DA33314 01869000
         DEBUG DSPLYDAT,XXDBGMC                                @DA33314 01870000
         STM   R1,R4,DFWKALIB      RESET ADDR (SUBLIB) AND             *01871000
                                   ...   ADDR(PHASENAME)       @DA33314 01872000
         STM   R1,R2,TCBCINF     ST TCBCASLB,TCBCALIB          @DY45682 01873000
         LA    RF,TCBCSNAM         STORE                       @DY45682 01874000
         ST    RF,TCBCANAM         ...TCBCANAM                 @DY45682 01875000
         MVC   0(L'DFWKNAME,RF),0(R3) SAVE PHASE NAME FOR DUMP @DY45682 01876000
         LH    R0,DFCBERRD         UPDATE...                   @D21ZDVB 01877000
         AH    R0,H1               ...  ERROR                  @DA33314 01878000
         STH   R0,DFCBERRD         ...      COUNTER            @DA33314 01879000
         ST    R5,DFCBSTDR         SAVE ERROR INDICATION       @DA33314 01880000
         LA    RF,8                SET INTERNAL RETURN CODE    @DA33314 01881000
         BR    LINK2               =====> RETURN TO REQUESTOR          *01882000
                                          OF SCANDIR           @DA33314 01883000
         SPACE 1                                               @DA33314 01884000
DIRDERX  MVI   DFWKRCOD,FIOERR8   INDICATE FETCH I/O ERROR     @DA33314 01885000
         B     DIRDERAL           --->                         @DA33314 01886000
         SPACE 1                                                        01887000
DIRVIFER LA    R5,8               SET UP...                    @DA33314 01888000
         LA    LINK2,SRCHERR2     ... ERROR                    @DA33314 01889000
         B     DIRDERLB           ...       EXIT               @DA33314 01890000
         SPACE 1                                               @DA33314 01891000
*-------------------------------------------------------------*@DA33314 01892000
         SPACE 1                                               @DA33314 01893000
FBASERR2 DS    0H                 TFIX FOR SGBFCH_AREA NOT             *01894000
                                           SUCCESSFUL          @DA33314 01895000
         LR    RD,RE              RESET SAVE AREA POINTER      @DA33314 01896000
         LM    R2,RC,ORG2(RD)     RESTORE REGISTERS            @DA33314 01897000
         LA    R5,16              SET RETURN CODE              @DA33314 01898000
         SPACE 1                                               @DA33314 01899000
DIRHWT   LA    RF,HARDWAIT        ADDRESS OF FETCH IO ERROR    @DA33314 01900000
         STC   R5,DFWKPHPT+7       PROVIDE RC                  @D64ADVB 01901000
         MVC   DFWKPHPT(7),HARDNAME INDICATE HARDWAIT          @DA33314 01902000
         LA    R0,DFWKPHPT         ADDR OF DISPLAY AREA        @DA33314 01903000
         ST    R0,XXUSAREA         ... TO DEBUG AREA           @DA33314 01904000
         DEBUG DSPLYDAT,XXDBGMC                                @DA33314 01905000
         MVI   IJBHWORG,HWORG048  UNIQUE HARD WAIT ORIGINATOR  @D31QDHB 01906000
         LM    R8,RE,DFCBSAV+OFS8 PROVIDE REQUESTOR'S REGS     @DY33314 01907000
         L     R6,DISPAD                                       @DY33314 01908000
         BR    RF                  =====> HARDWAIT             @DY33314 01909000
         SPACE 1                                               @DY33314 01910000
*-------------------------------------------------------------*@DY33314 01911000
*     GET LINK DIRECTORY ON VIO EXTENT                        *@DY33314 01912000
*-------------------------------------------------------------*@DY33314 01913000
         SPACE 1                                               @DY33314 01914000
DIRLINK  SLR   R4,R4              PROVIDE RELATIVE BYTE ADDRESS OF ... *01915000
                                  ... LINK DIRECTORY           @DY33314 01916000
         L     R3,DFWKASLB        ADDRESS (VIORB(LINK_DIR))    @DY33314 01917000
         L     R5,DSBEGIDR        ADDRESS (DIRECTORY BUFFER)   @DY33314 01918000
         LA    R6,DENTLENE+UPHADLEN LENGTH OF LINK_DIR_ENTRY   @DY33314 01919000
         LA    R2,DIRLINK2                                     @D64ADMZ 01920000
         LA    RF,DIRLINK1                                     @D64ADMZ 01921000
         BSM   R2,RF              SAVE CURRENT ADDR. MODE IN R1@D64ADMZ 01922000
*                                 AND SWITCH TO AMODE 24       @D64ADMZ 01923000
DIRLINK1 DS    0H                                                       01924000
*        VIO   MOVE,FROM=(3,4),TO=(5),LEN=(6)  GET ENTRY       @DY33314 01925000
         VIO   MOVE,FROM=(3,4),TO=(5),LEN=(6)                  @DY33314 01926000
         BSM   0,R2               SWITCH BACK TO ORIGINAL MODE @D64ADMZ 01927000
DIRLINK2 DS    0H                 CONTINUATION ADDR FOR BSM    @D64ADMZ 01928000
         LTR   RF,RF              TEST COMPLETION CODE         @DY33314 01929000
         BNZ   DIRLK010           NOT SUCCESSFULL --->                 *01930000
                                  ... GOTO ERROR_HANDLER       @DY33314 01931000
         LR    R1,R5              SET OUTPUT REGISTER R1       @DY33314 01932000
         CLC   DFWKNAME,0(R1)     PHASE ON LINK_VIO            @DY33314 01933000
         BER   LINK2              =====>   YES, RETURN TO CALLER       *01934000
                                  NOTE: RF = 0                 @DY33314 01935000
         LA    RF,4               SET PHASE NOT FOUND          @DY33314 01936000
         BR    LINK2              =====>                       @DY33314 01937000
         SPACE 1                                               @DY33314 01938000
*-------------------------------------------------------------*@DY33314 01939000
*    ERROR HANDLING ROUTINE                                   *@DY33314 01940000
*-------------------------------------------------------------*@DY33314 01941000
         SPACE 1                                               @DY33314 01942000
DIRLK010 LR    R5,RF              SAVE RC                      @DY33314 01943000
         MVI   DFWKRCOD,NVALIB12   SET ERROR RETURN CODE       @DY33314 01944000
         AIF   (NOT &BGDEBUG).FDEBG20                          @DY33314 01945000
*                                                              @DA33314 01946000
BRTABLNK B     BRTABLNK(RF)                                    @DY33314 01947000
         B     DIRHWT             4  : N/A                     @DY33314 01948000
         B     DIRLK040           8  : UNRECOVERABLE ERROR     @DY33314 01949000
         B     DIRHWT             12 : INVALID  INPUT          @DY33314 01950000
         SPACE 1                                               @DY33314 01951000
DIRLK040 EQU   *                                               @DY33314 01952000
.FDEBG20 ANOP                                                  @DY33314 01953000
         L     R2,LINKNAME         ADDR ( VIO_LINK)            @DY33314 01954000
         ST    R2,DFWKALIB         ... INTO                    @DY33314 01955000
         ST    R2,DFWKASLB         ... FCHWORK                 @DY33314 01956000
         B     DIRDERAL            ---->                       @DY33314 01957000
         SPACE 1                                               @DY33314 01958000
         EJECT                                                 @DY33314 01959000
***************************************************************@DY33314 01960000
*    SUBROUTINE: S C A N L I S T /                             @DY33314 01961000
*                S C A N S D L   /                             @DY33314 01962000
*                B I N S R C H                                 @DY33314 01963000
*                                                              @DY33314 01964000
*    MODULE:     SGDFCH                                        @DY33314 01965000
*                                                              @DY33314 01966000
*    FUNCTION:  SCANLIST:  - CHECKS THE LENGTH OF A LIST (@R2) @DY33314 01967000
*                            STARTING WITH A 2-BYTE LENGTH     @DY33314 01968000
*                            FIELD FOR CORRECTNESS             @DY33314 01969000
*                          - BINARY SEARCH FOR PHASE NAME      @DY33314 01970000
*                            CONTAINED IN DFWKNAME             @DY33314 01971000
*               SCANSDL:   - CHECKS THE LENGTH OF A LIST (@R2) @DY33314 01972000
*                            STARTING WITH A 4-BYTE LENGTH     @DY33314 01973000
*                            FIELD FOR CORRECTNESS             @DY33314 01974000
*                          - BINARY SEARCH FOR PHASE NAME      @DY33314 01975000
*                            CONTAINED IN DFWKNAME             @DY33314 01976000
*               BINSRCH:   - REBUILD SDL INDEX, IF SDL WAS     @DY33314 01977000
*                            UPDATED SINCE LAST SDL SEARCH     @DY33314 01978000
*                                                              @DY33314 01979000
*    INPUT:      FOR SCANSDL / SCANLIST ONLY:                  @DY33314 01980000
*                DFWKNAME:   CONTAINS REQ. PHASE NAME          @DY33314 01981000
*                                                              @DY33314 01982000
*                FOR BINSRCH ONLY:                             @DY33314 01983000
*                R1:         @PHASE NAME                       @DY33314 01984000
*                DISDLA:     START OF SDL INDEX                @DY33314 01985000
*                LSDLINDX:   LENGTH OF AN ENTRY IN SDL INDEX   @DY33314 01986000
*                DFWKNAME:   USED TO GET LENGTH OF PHASE NAME  @DY33314 01987000
*                DISDLE:     @LAST ENTRY OF SDL INDEX          @DY33314 01988000
*                PAGESIZE:   PAGES SIZE                        @DY33314 01989000
*                PADDRMSK:   MASK TO ALIGN ON PAGE BOUNDARY    @DY33314 01990000
*                                                              @DY33314 01991000
*                COMMON INPUT:                                 @DY33314 01992000
*                R0:         LENGTH OF A LIST ELEMENT          @DY33314 01993000
*                R2:         @LIST PRECEEDED BY A LENGTH FIELD @DY33314 01994000
*                SDLUPBIT:   FLAG IN IJBSVAFL FLAG-BYTE;       @DY33314 01995000
*                            INDICATES IF SET, THAT MAINDIR    @DY33314 01996000
*                            IS JUST ACTIVE IN ORDER TO CHANGE @DY33314 01997000
*                            THE SDL                           @DY33314 01998000
*                                                              @DY33314 01999000
*    OUTPUT:     FOR BINSRCH ONLY:                             @DY33314 02000000
*                DISDLD:     @1. ENTRY OF SDL                  @DY33314 02001000
*                                                              @DY33314 02002000
*                COMMON OUTPUT:                                @DY33314 02003000
*                R1:         @ENTRY IF AN ENTRY WAS FOUND      @DY33314 02004000
*                RF:         =0 IF ENTRY WAS FOUND             @DY33314 02005000
*                                                              @DY33314 02006000
*    EXITS:      ONLY NORMAL                                   @DY33314 02007000
*                                                              @DY33314 02008000
*    ERROR HANDLING:                                           @DY33314 02009000
*                                                              @DY33314 02010000
*                ENTRY NOT FOUND IN LIST:                      @DY33314 02011000
*                RF = 4; RETURN                                @DY33314 02012000
*                                                              @DY33314 02013000
*                INCORRECT LENGTH OF LIST:                     @D14CDHD 02014000
*                RF = 8; SET INVUSEN FLAG IN DFCBSW1; RETURN   @D14CDHD 02015000
*                                                              @D14CDHD 02016000
*    CHANGED REGISTERS: R1, R2, R3, R4, R5, RF                 @D14CDHD 02017000
*                                                              @D14CDHD 02018000
*    CALLED BY:  BINSRCH CALLED BY FIND                        @D14CDHD 02019000
*                SCANSDL / SCANLIST CALLED BY SGDFCH BASE      @D14CDHD 02020000
*                                                              @D14CDHD 02021000
*    CALL ROUTINE:  NONE                                       @D14CDHD 02022000
*                                                              @D14CDHD 02023000
***************************************************************@D369DVB 02024000
         SPACE 2                                               @D35EDJB 02025000
*SGLINK SCANLIST,INPUT=(R0,R2,R6,R9,RA),OUTPUT=(R1,RF),                *02026000
               WORK=(R1,R2,R3,R4,R5)                           @D149DVB 02027000
***************************************************************@D14CDHD 02028000
* CHECK WHETHER LIST (@R2) HAS THE CORRECT LENGTH             *@D14CDHD 02029000
***************************************************************@D14CDHD 02030000
SCANSDL  LA    RF,4               LENGTH OF LIST_LENGTH FIELD  @D14CDVB 02031000
         L     R1,0(R2)           LENGTH OF SDL_LIKE LIST      @D14CDVB 02032000
         B     SCANBAS                                         @D14CDVB 02033000
SCANLIST LA    RF,2               LENGTH OF LIST_LENGTH FIELD  @D14CDVB 02034000
         LH    R1,0(R2)           LENGTH OF LOCAL LIST         @D14CDVB 02035000
PCKADR1G EQU   *                  DELAYED INPUT CHECKING       @D14CDVB 02036000
SCANBAS  LTR   R1,R1              ... LENGTH  >  0             @D14CDVB 02037000
         BNP   SCANERR            NO --->       ERROR EXIT     @D14CDVB 02038000
         LR    R5,R1                                           @D14CDVB 02039000
         SLR   R4,R4              <R4,R5> : LENGTH OF LIST     @D14CDVB 02040000
         DR    R4,R0              LEN(LIST) MOD (LEN(ELEMENT)) @D14CDVB 02041000
PCKDRF10 EQU   *                                               @D14CDVB 02042000
         CLR   R4,RF              VALID REMAINDER              @D14CDVB 02043000
         BNE   SCANERR            NO  --->                     @D14CDVB 02044000
***************************************************************@D14CDHD 02045000
* DO   R1 = @PHASE NAME                                       *@D14CDHD 02046000
*      R4 = LENGTH OF LIST IN BYTES                           *@D14CDHD 02047000
*      GOTO BSRCHCOM                                          *@D14CDHD 02048000
***************************************************************@D14CDHD 02049000
         LR    R4,R1              R4 CONTAINS LIST LENGTH      @D14CDVB 02050000
         LA    R1,DFWKNAME                                     @D14CDVB 02051000
         B     BSRCHCOM           ---->                        @D14CDVB 02052000
         SPACE 1                                               @D14CDVB 02053000
***************************************************************@D14CDHD 02054000
*  RETURN WITH RETURN CODE 8 IF LIST HAS INVALID LENGTH       *@D14CDHD 02055000
***************************************************************@D14CDHD 02056000
SCANERR  OI    DFCBSW1,INVUSEN    INDICATION FOR INVALID ...           *02057000
                                  ... LOCAL LIST               @D14CDVB 02058000
         LA    RF,8               RC = 8   INVALID LOCAL LIST  @D14CDVB 02059000
         BR    LINK3              ====>     RETURN             @D14CDVB 02060000
         SPACE 1                                                        02061000
***************************************************************@D369DVB 02062000
*       BINSRCH --- ENTRY POINT FOR SDL SCAN                   @D35EDVB 02063000
***************************************************************@D369DVB 02064000
*SGLINK  BINSRCH,INPUT=(R0,R1,R6,R9,RA),OUTPUT=(R1,RF),                *02065000
               WORK=(R2,R3,R4,R5)                              @D369DVB 02066000
BINSRCH  DS    0H                                              @D35EDVB 02067000
         LA    RF,4                                            @D14CDVB 02068000
         SR    R4,R4                                           @D14CDHD 02069000
         C     R4,DISDLD          SDL INDEX ALREADY BUILT???   @D14CDHD 02070000
         BNE   BNS040             YES --->                     @D14CDHD 02071000
***************************************************************@D14CDHD 02072000
*      BUILD INDEX                                            *@D14CDHD 02073000
***************************************************************@D14CDHD 02074000
BUILDIND DS    0H                                              @D14CDHD 02075000
         L     R2,IJBSMCOM        ADDRESS SMCOM                @D61FDMZ 02076000
         USING SMCOM,R2                                        @D61FDMZ 02077000
         L     R2,SMCSVA          ADDRESS OF SVA 24-BIT        @D61FDMZ 02078000
         USING DSVA,R2                                         @D14CDHD 02079000
         L     R2,DSVASDL         @SDL PRECEEDED BY LENGTH     @D14CDHD 02080000
         DROP  R2                                              @D14CDHD 02081000
         L     R5,0(R2)           GET LENGTH OF SDL            @D14CDVB 02082000
         LTR   R5,R5              CHECK LIST LENGTH            @D36JDVB 02083000
         BNP   SCANERR            NO --->                      @D36JDVB 02084000
         LA    R3,4(R2)           GET FIRST ENTRY OF SDL       @D14CDVB 02085000
         ST    R3,DISDLD              AND SAVE IT              @D35WDVB 02086000
         ALR   R2,R5              END ADDRESS OF SDL           @D35WDVB 02087000
         SR    R2,R0              @FF..FF ENTRY OF SDL         @D14CDHD 02088000
         LA    R4,DISDLA-LSDLINDX GET START ADDRESS (SDL INDEX)@D35WDVB 02089000
         SPACE 2                                               @D35WDVB 02090000
BNS010   EQU   *                                               @D35WDVB 02091000
         LA    R4,LSDLINDX(R4)    GET NEXT ENTRY OF SDL INDEX  @D35WDVB 02092000
         CL    R4,DISDLE          ALREADY END OF INDEX         @D35WDVB 02093000
         BNL   BNS030             YES --->                     @D35WDVB 02094000
         LR    R5,R0              LENGTH OF SDL ENTRY          @D36JDVB 02095000
         AL    R5,PAGESIZE        + LEN (PAGE)                 @D14CDVB 02096000
         BCTR  R5,0               - 1                          @D14CDVB 02097000
         ALR   R5,R3              + ADDR (LAST ENTRY)          @D14CDVB 02098000
         N     R5,PADDRMSK        ALIGN TO PAGE BOUNDARY       @D36ZDVB 02099000
         CLR   R5,R2              STILL INSIDE VALID SDL       @D35WDVB 02100000
         BNL   BNS030             NO --->                      @D35WDVB 02101000
BNS020   EQU   *                                               @D35WDVB 02102000
         ALR   R3,R0              BUMP TO NEXT SDL ENTRY       @D35WDVB 02103000
         CLR   R3,R5              INSIDE SAME PAGE             @D35WDVB 02104000
         BL    BNS020             YES --->                     @D35WDVB 02105000
         SLR   R3,R0              GET PREVIOUS SDL ENTRY       @D35WDVB 02106000
         MVC   D0(L8,R4),D0(R3)   MOVE PHASE NAME              @D35WDVB 02107000
         ST    R3,D8(R4)               AND SDL PTR INTO INDEX  @D35WDVB 02108000
         ALR   R3,R0              FIRST SDL ENTRY OF NEXT PAGE @D35WDVB 02109000
         B     BNS010                                          @D35WDVB 02110000
BNS030   EQU   *                                               @D35WDVB 02111000
         NI    IJBSVAFL,XFF-SDLMVE RESET INDICATION            @D62NDVB 02112000
         ST    R2,D8(R4)          STORE POINTER TO LAST SEGMENT@D35WDVB 02113000
         MVC   D0(L8,R4),D0(R2)   MOVE FF..FF                  @DY44634 02114000
***************************************************************@D14CDHD 02115000
* SEARCH PAGE OF SDL ON WHICH THE REQ. PHASE NAME SHOULD BE   *@D14CDHD 02116000
* BY SEARCHING WITH R4 THROUGH THE SDL INDEX UNTIL            *@D14CDHD 02117000
* SDL INDEX ENTRY(@R4) >= REQ. PHASE NAME                     *@D14CDHD 02118000
***************************************************************@D14CDHD 02119000
BNS040   EQU   *                                               @D35WDVB 02120000
         LA    R4,DISDLA-LSDLINDX GET POINTER TO SDL INDEX     @D35WDVB 02121000
         LA    R5,LSDLINDX            LENGTH OF AN ENTRY       @D35WDVB 02122000
BNS050   EQU   *                                               @D35WDVB 02123000
         ALR   R4,R5              GET NEXT ENTRY OF INDEX      @D35WDVB 02124000
         CLC   D0(L8,R1),D0(R4)   ARGUMENT                     @D35WDVB 02125000
         BH    BNS050               HIGHER THAN INDEX --->     @D35WDVB 02126000
***************************************************************@D14CDHD 02127000
* CHECK, WHETHER THE RIGHT PAGE WAS FOUND OVER THE INDEX      *@D14CDHD 02128000
*    - IF NOT: BUILD NEW INDEX                                *@D14CDHD 02129000
*    - IF YES: DO BINARY SEARCH                               *@D14CDHD 02130000
***************************************************************@D14CDHD 02131000
         L     R3,D8(R4)          GET POINTER TO DIRECTORY     @D35WDVB 02132000
         CLC   D0(L8,R1),D0(R3)   REQ. PHASE NAME = SDL ENTRY? @D14CDHD 02133000
         BE    EXSCLST            YES --->                     @D35WDVB 02134000
         BH    BUILDIND           WRONG PAGE WAS FOUND         @D14CDHD 02135000
***************************************************************@D14CDHD 02136000
* THE RIGHT PAGE WAS FOUND, DO:                               *@D14CDHD 02137000
*    - R2 = POINTS TO SDL ENTRY WHICH IS POINTED TO BY THE    *@D14CDHD 02138000
*           SDL INDEX ENTRY PRECEEDING THE ONE (@R4) - RF     *@D14CDHD 02139000
*    - R4 = #BYTES BETWEEN (R2,R4)                            *@D14CDHD 02140000
*    - R5 = LENGTH OF A SDL INDEX ENTRY                       *@D14CDHD 02141000
***************************************************************@D14CDHD 02142000
         SLR   R4,R5                  AND                      @D35WDVB 02143000
         L     R2,D8(R4)              END ADDRESS OF RELATED   @D35WDVB 02144000
         SLR   R2,RF              NORMALIZE SEGMENT            @D367DVB 02145000
         SLR   R3,R2              AND PROVIDE LENGTH           @D35WDVB 02146000
         LR    R4,R3                                           @D35WDVB 02147000
         SPACE 1                                                        02148000
***************************************************************@D14CDHD 02149000
*               BINARY SEARCH                                 *@D14CDHD 02150000
* RETURN WITH RETURN CODE 0 IF PHASE NAME FOUND               *@D14CDHD 02151000
* RETURN WITH RETURN CODE 4 IF PHASE NAME NOT FOUND           *@D14CDHD 02152000
***************************************************************@D14CDHD 02153000
BSRCHCOM LCR   R5,R0              GET TWO'S COMPLEMENT OF R0   @D35EDJB 02154000
         NR    R5,R0              R5 : RIGHTMOST BIT OF R0     @D35EDJB 02155000
         LA    R3,0(R2,RF)        R3 : POINTS TO ONE ENTRY     @D14CDVB 02156000
         SLR   R3,R0                 BEFORE THE FIRST (OFFSET) @D35EDJB 02157000
         SLR   R4,RF              R4 := DELTA                  @D367DVB 02158000
         LR    RF,R0                                           @D367DVB 02159000
SCANHI   ALR   R4,RF                                           @D367DVB 02160000
SCANLO   LR    RF,R4              EVEN NUMBER OF               @D367DVB 02161000
         NR    RF,R5                    ENTRIES WITHIN DELTA ? @D367DVB 02162000
         BZ    EVNDEL             YES --->                     @D35EDJB 02163000
         SLR   R4,R0              MAKE DELTA EVEN              @D35EDJB 02164000
         LR    RF,R0                                           @D367DVB 02165000
EVNDEL   SRA   R4,L1              DELTA := DELTA/2             @D35EDJB 02166000
         BZ    NTFND              NO MORE ENTRIES --->         @D35EDJB 02167000
         ALR   R3,R4              OFFSET := OFFSET + DELTA     @D35EDJB 02168000
         CLC   D0(L8,R3),D0(R1)   ENTRY = SEARCH ARGUMENT ?    @D35EDJB 02169000
PCKADR1H EQU   *                  PROGR. CHECK IF <R3> INVALID @D35EDJB 02170000
         BE    EXSCLST            YES ---> ENTRY FOUND         @D35EDJB 02171000
         BL    SCANHI             ---> ENTRY LT SEARCH ARGUMENT@D35EDJB 02172000
         SLR   R3,R4                                           @D35EDJB 02173000
         B     SCANLO             ---> ENTRY GT SEARCH ARGUMENT@D35EDJB 02174000
NTFND    LA    RF,4               RC = 4   (PHASE NOT FOUND)   @D14CDVB 02175000
         BR    LINK3              =====>    NO: PHASE NOT FOUND@D14CDHD 02176000
         SPACE 1                                               @D14CDVB 02177000
EXSCLST  SLR   RF,RF              ENTRY FOUND                  @D365DVB 02178000
         LR    R1,R3              LOAD OUTPUT PARAMETER        @D35EDJB 02179000
         BR    LINK3              =====>   EXIT PHASE FOUND    @D14CDVB 02180000
         SPACE 1                                                        02181000
         DROP  R9                 RELEASE FETCH BASE           @D61NDMZ 02182000
FTCHMTAR EQU   4096-(*-FETCH)      MUST NOT BE NEGATIVE        @D21ZDVB 02183000
*-------------------------------------------------------------*@D149DVB 02184000
         EJECT                                                 @D369DVB 02185000
*-------------------------------------------------------------*@D369DVB 02186000
*      ERROR ENTRY                                             @D369DVB 02187000
*        R8    POINTER TO FETCH TASK TIB                       @D369DVB 02188000
*        RA    POINTER TO FETCH TASK TCB                       @D369DVB 02189000
*        RB    CANCEL CODE                                              02190000
*        RE    ENTRY POINT (ADDR(DIRERRAD) OR ADDR(SUPERRAD))           02191000
*-------------------------------------------------------------*@D369DVB 02192000
         SPACE 1                                               @D369DVB 02193000
*SGLINK DIRERRAD,INPUT=(R8,RA,RB,RE),WORK=(R0,R4,R5,R8,R9,RA,RB,RD,RF)  02194000
         USING DIRERRAD,RE                                     @D61NDMZ 02195000
DIRERRAD DS    0H                  ENTRY POINT FROM DISPATCHER @D36IDVB 02196000
         L     R5,ASRQTAB          ADDR RESOURCE ANCHOR TABLE  @D61RDVB 02197000
         LA    R5,SRQFDIR-SRQTAB(,R5) ADDR OF RESOURCE QUEUE   @D61RDVB 02198000
         SLR   RD,RD               SAVE AREA PTR INDICATION    @D36IDVB 02199000
         B     DACTFT20            --->                        @D36IDVB 02200000
*SGLINK SUPERRAD,INPUT=(R8,RA,RB,RE),WORK=(R0,R4,R5,R8,R9,RA,RB,RD,RF)  02201000
SUPERRAD DS    0H                                              @D61NDMZ 02202000
         LA    R5,SUPERRAD-DIRERRAD  CALCULATE ..              @D61NDMZ 02203000
         SR    RE,R5                 ...RE = ADDR (DIRERRAD)   @D61NDMZ 02204000
         L     R5,ASRQTAB          ADDR RESOURCE ANCHOR TABLE  @D61RDVB 02205000
         LA    R5,SRQFPGM-SRQTAB(,R5) ADDR OF RESOURCE QUEUE   @D61RDVB 02206000
         LA    RD,DBASTXT-DBASDIR SAVE AREA PTR INDICATION     @D36IDVB 02207000
DACTFT20 EQU   *                                               @D36IDVB 02208000
         L     R9,AFTCHERX                                     @D64ADVB 02209000
         USING TIBADR,R8                                       @D36IDVB 02210000
         MVI   TIBCNCL,ZERO        CLEAR CANCEL CODE IN FCHTIB @D14IDHD 02211000
         LH    R7,TIBRTID          TID OF REQUESTOR            @D36IDVB 02212000
         SLL   R7,2                                            @D66ODOW 02213000
         AL    R7,ATIBATAB                                     @D66ODOW 02214000
         L     R8,0(,R7)           REQUESTOR'S TIB ADDRESS     @D66ODOW 02215000
         LR    R2,RB               SAVE CANCEL CODE            @D36IDVB 02216000
         L     RB,AFCHDAT          PTR TO FETCH DATA SECTION   @D36IDVB 02217000
         L     RA,TIBTCB           REQUESTOR'S TCB ADDRESS     @D36IDVB 02218000
         LA    RD,DBASDIR(RD)      PROVIDE SAVE AREA POINTER   @D36IDVB 02219000
         L     LINK2,DAUSTASK                                  @D21ZDVB 02220000
         BALR  LINK2,LINK2         DEACTIVATE  TASK            @D21ZDVB 02221000
         SPACE 1                                               @D14CDVB 02222000
         LR    RB,R2               ) RESTORE                   @D36IDVB 02223000
         L     R9,AINTER           )   REGISTERS               @D36IDVB 02224000
         L     R8,PCBPTR           )                           @D14CDVB 02225000
         USING PCBADR,R8                                       @D36IDVB 02226000
         CLC   CDLDTID,TID         TASK OWNS CDLOAD            @D66ODOW 02227000
         BNE   ERRGO               NO =====================>   @D36IDVB 02228000
         MVC   CDLDTID,H0          RESET BYTE                  @D66ODOW 02229000
         MVC   PCBRQCDL,FREEVAL    FREE CDLOAD_RESOURCE        @D66ODOW 02230000
         DROP  R8                                              @D36IDVB 02231000
         B     ERRGO               =======================>    @D36IDVB 02232000
         SPACE 1                                               @D369DVB 02233000
         DROP RE                                               @D61NDMZ 02234000
*-------------------------------------------------------------*@D369DVB 02235000
         SPACE 1                                               @D21ZDVB 02236000
         EJECT                                                 @D369DVB 02237000
*--------------------------------------------------------------@D369DVB 02238000
*    ROUTINE NAME: FTCHTASK                                    @D369DVB 02239000
*    MODULE:       SGDFCH                                      @D369DVB 02240000
*    FUNCTION:     ACTIVATION OF DIR. READ OR PGM FETCH TASK   @D369DVB 02241000
*    CALLER:       FETCH BASE                                  @D369DVB 02242000
*    OPERATION:    IF REQUESTED RESOURCE IS NOT FREE           @D369DVB 02243000
*                  THEN  GOTO TO RWAIT                         @D369DVB 02244000
*                  ELSE SET RESOURCE BUSY AND USER TASK        @D369DVB 02245000
*                  INTO BOUNDSTATE                             @D369DVB 02246000
*                  UNPOST USERTASK                             @D369DVB 02247000
*                  ACTIVATE REQUESTED SYSTEM TASK              @D369DVB 02248000
*    INPUT:                                                    @D369DVB 02249000
*                  R4  TASK_IDENTIFICATION                     @D149DVB 02250000
*                  R7  LINK REGISTER                           @D149DVB 02251000
*                  R10 POINTS TO  TCB OF REQUESTOR             @D369DVB 02252000
*                  R11 POINTS TO FETCH DATA SECTION            @D369DVB 02253000
*    OUTPUT:       R13 POINTS TO SAVE AREA                     @D369DVB 02254000
*    CALLING SEQUENCE:                                         @D149DVB 02255000
*                  LA   R4,0 OR 4                              @D14CDVB 02256000
*                  BAL  LINK2,FTCHTASK                         @D149DVB 02257000
*    CALLED ROUTINES: UNPOST, RWAIT                            @D369DVB 02258000
*    RETURN:       CALLER IF TASK ACTIVATION SUCCESFUL         @D369DVB 02259000
*                  RWAIT  IF TASK WAS NOT AVAILBALE            @D369DVB 02260000
*    ERROR EXIT:   NONE                                        @D369DVB 02261000
*--------------------------------------------------------------@D369DVB 02262000
         SPACE 2                                               @D36IDVB 02263000
*SGLINK  FTCHTASK,INPUT=(R4,R7,RA,RB),OUTPUT=(RD),                     *02264000
               WORK=(R3,R5,R6,R8,RC,RE,RF)                     @D369DVB 02265000
FTCHTASK DS    0H                                              @D36IDVB 02266000
         BALR  R9,0                                            @D21ZDVB 02267000
         USING *,R9                                            @D21ZDVB 02268000
         L     R5,ASRQTAB         ADDR RESOURCE ANCHOR TABLE   @D61RDVB 02269000
         EX    R0,ADRFSRQ(R4)     GET RESOURCE QUEUE ADDR      @D14CDVB 02270000
         USING RQADR,R5                                        @D14CDVB 02271000
         L     R6,DISPAD                                       @D36IDVB 02272000
         L     R8,TCBTIB          TIB OF REQUESTOR             @D36IDVB 02273000
         AIF   (NOT &BGFSTAT).FSTZZ70                          @D36ZDVB 02274000
FTSK000  LA    R0,1                ) UPDATE NUMBER             @D36ZDVB 02275000
         AL    R0,FDIRTSK#(R4)     )         TASK              @D36ZDVB 02276000
         ST    R0,FDIRTSK#(R4)     )              ACTIVATIONS  @D36ZDVB 02277000
.FSTZZ70 ANOP                                                  @D36ZDVB 02278000
FTSK010  EQU   *                                               @D36IDVB 02279000
         TM    RSCDESC,FREEBIT    IS RESOURCE AVAILABLE        @D66ODOW 02280000
         BO    FTSK060            YES -->                      @D66ODOW 02281000
         BAL   RC,RWAIT           SET TASK INTO WAIT           @D36IDVB 02282000
         AIF   (NOT &BGFSTAT).FSTZZ90                          @D14CDVB 02283000
         LA    R0,1                ) UPDATE NUMBER             @D36ZDVB 02284000
         AL    R0,NDIRTSK#(R4)     )                           @D36ZDVB 02285000
         ST    R0,NDIRTSK#(R4)     )       OF NON-ACTIVATIONS  @D36ZDVB 02286000
.FSTZZ90 ANOP                                                  @D36ZDVB 02287000
         B     FTSK010                                         @D36IDVB 02288000
FTSK060  EQU   *                                               @D36IDVB 02289000
         MVC   RSCDESC,NFREEVAL   INDICATE RESOURCE IN USE     @D66ODOW 02290000
         DROP  R5                                              @D14CDVB 02291000
         L     R5,ASRQTAB         ADDR RESOURCE ANCHOR TABLE   @D61RDVB 02292000
         LA    R5,SRQFETCH-SRQTAB(,R5) ADDR OF RESOURCE QUEUE  @D61RDVB 02293000
*                                  BOUND CONDITION IN USERS TIB@D61RDVB 02294000
*SGLINK  UNPOST,INPUT=(R5,R6,RF),WORK=(R5,RE)                  @D369DVB 02295000
         BAL   RF,UNPOST          SET USER UNDISPATCHABLE      @D36IDVB 02296000
         B     BRSRQTB(R4)                                     @D14CDVB 02297000
BRSRQTB  B     FTSKDIR            DIRECTORY TASK               @D14CDVB 02298000
*--->    B     FTSKSUP            PROGRAM FETCH TASK           @D14CDVB 02299000
         SPACE 1                                               @D14CDVB 02300000
*       SGSETUP ACTIVATE,STASK=SUP,WR1=R3,WR2=R4,OPTION=DIRECT @D149DVB 02301000
        SGSETUP ACTIVATE,STASK=SUP,WR1=R3,WR2=R4,OPTION=DIRECT @D36IDVB 02302000
FTSKSUP  EQU   *                                               @D14CDVB 02303000
         AIF   (NOT &BGFSTAT).FSTZZ95                          @D36ZDVB 02304000
         SLR   R0,R0               )                           @D36ZDVB 02305000
         ST    R0,FLCRTFX          )   CLEAR                   @D36ZDVB 02306000
         ST    R0,FLCSTFX          )        LOCAL              @D36ZDVB 02307000
         ST    R0,FLCRLIO          )             COUNTERS      @D36ZDVB 02308000
         ST    R0,FLCTXIO          )                           @D36ZDVB 02309000
         ST    R0,FLCTXTN          )                           @D36ZDVB 02310000
.FSTZZ95 ANOP                                                  @D36ZDVB 02311000
         LA    RD,DBASTXT          PROVIDE LOCAL SAVE AREA     @D36IDVB 02312000
         B     FTSK100                                         @D36IDVB 02313000
         SPACE 1                                               @D14CDVB 02314000
FTSKDIR  EQU   *                                               @D36IDVB 02315000
*       SGSETUP ACTIVATE,STASK=DIR,WR1=R3,WR2=R4,OPTION=DIRECT @D149DVB 02316000
        SGSETUP ACTIVATE,STASK=DIR,WR1=R3,WR2=R4,OPTION=DIRECT @D36IDVB 02317000
         AIF   (NOT &BGFSTAT).FSTZZ98                          @D36ZDVB 02318000
         SLR   R0,R0               )                           @D36ZDVB 02319000
         ST    R0,FLCDIRS          )   CLEAR LOCAL COUNTERS    @D36ZDVB 02320000
         ST    R0,FLCDRIO          )                           @D36ZDVB 02321000
.FSTZZ98 ANOP                                                  @D36ZDVB 02322000
         LA    RD,DBASDIR          PROVIDE LOCAL SAVE AREA     @D36IDVB 02323000
         SPACE 1                                               @D36IDVB 02324000
FTSK100  EQU   *                                               @D36IDVB 02325000
         USING TIBADR,R8           R8 =PTR TO REQUESTOR'S TIB  @D36IDVB 02326000
         L     R9,DAFETCH                                      @D21ZDVB 02327000
         L     R3,TIBPTR           R3 =PTR RO FETCH TASK TIB   @D14DBBC 02328000
         NI    TIBFLAG2-TIBADR(R3),XFF-OVHIND RESET OVERHEAD INDICATION*02329000
                                   IN ACTUAL FETCH TASK TIB    @D14CDVB 02330000
         TM    TIBFLAG2,OVHIND     JOB ACCOUNT ON OVERHEAD     @D14CDVB 02331000
         BZR   LINK2               NO =====>                   @D36IDVB 02332000
         OI    TIBFLAG2-TIBADR(R3),OVHIND OVERHEAD INDICATION  @D14CDVB 02333000
         DROP  R8                                              @D36IDVB 02334000
         BR    LINK2                =====>                     @D36IDVB 02335000
         SPACE 1                                                        02336000
*--------------------------------------------------------------@D14CDVB 02337000
         SPACE 1                                               @D14CDVB 02338000
ADRFSRQ  LA    R5,SRQFDIR-SRQTAB(,R5)                          @D61RDVB 02339000
         LA    R5,SRQFPGM-SRQTAB(,R5)                          @D61RDVB 02340000
         SPACE 1                                               @D14CDVB 02341000
*--------------------------------------------------------------@D14CDVB 02342000
         EJECT                                                 @D36IDVB 02343000
*--------------------------------------------------------------@D369DVB 02344000
*    ROUTINE NAME: USERTASK                                    @D369DVB 02345000
*    MODULE:       SGDFCH                                      @D369DVB 02346000
*    FUNCTION:     DEACTIVATION OF DIR READ OR PGM FETCH TASK  @D369DVB 02347000
*    CALLER:       FETCH BASE                                  @D369DVB 02348000
*    OPERATION:    TFREE PAGES USED BY FETCH                   @D369DVB 02349000
*                  PFREE PAGES IF AN ERROR OCCURRED            @D51KDMZ 02350000
*                  UNPOST SYSTEM TASK (DFBSW2)                 @D369DVB 02351000
*                  POST USER REQUESTOR TASK                    @D369DVB 02352000
*                  PROVIDE TCBPTR, TIBPTRABD PCBPTR            @D369DVB 02353000
*                  RPOST FIRST WAITING TASK IN RESOURCE QUEUE  @D369DVB 02354000
*    INPUT:        R5 POINTS TO RESOURCE QUEUE                 @D369DVB 02355000
*                  R10 POINTS TO TCB OF REQUESTOR              @D369DVB 02356000
*                  R11 POINTS TO FETCH DATA SECTION            @D369DVB 02357000
*                  R13 POINTS TO SAVE AREA                     @D369DVB 02358000
*    OUTPUT:                                                   @D21ZDVB 02359000
*    CALLED ROUTINES: POST AND RPOST                           @D369DVB 02360000
*    RETURN:       CALLER                                      @D369DVB 02361000
*    ERROR EXIT:   NONE                                        @D369DVB 02362000
*--------------------------------------------------------------@D369DVB 02363000
         SPACE 2                                               @D36IDVB 02364000
*SGLINK  USERTASK,INPUT=(R5,R7,RA,RB,RD),WORK=(RE)             @D64ADVB 02365000
USERTASK DS    0H                                              @D36IDVB 02366000
         STM   RF,R9,ORG15(RD)     )    SAVE REGISTERS         @D21ZDVB 02367000
         BALR  R9,0                                            @D21ZDVB 02368000
         USING *,R9                                            @D21ZDVB 02369000
*-------------------------------------------------------------*@D369DVB 02370000
*        THE USERTASK  ROUTINE (TASK SWITCHING) MUST NOT BE    @D369DVB 02371000
*        INTERRUPTED  ( BY ANY PAGE FAULT).                    @D369DVB 02372000
*-------------------------------------------------------------*@D369DVB 02373000
         AIF   (NOT &BGFSTAT).FSTZZ3                           @D35ZDVB 02374000
         SPACE 1                                               @D35ZDVB 02375000
*--------------------------------------------------------------@D35ZDVB 02376000
         L     RF,DAVGSTAT         ENTRY POINT TO AVERAGE CALC @D36ZDVB 02377000
         BALR  RE,RF                                           @D36ZDVB 02378000
*--------------------------------------------------------------@D35ZDVB 02379000
         SPACE 1                                               @D35ZDVB 02380000
.FSTZZ3  ANOP                                                  @D35ZDVB 02381000
         CLC   TID,DIRTIDH        DIRECTORY SEARCH TASK ACTIVE @D66ODOW 02382000
         BE    FUSR200            YES -->                      @D51KDMZ 02383000
         SPACE 1                                                        02384000
*----- TEST IF PAGES IN USER SPACE ARE TFREE-ED  -------------*@DA33314 02385000
         SPACE 1                                                        02386000
         TM    DFCBSW2,FIXTXT     PAGES STILL TFIXED           @DA33314 02387000
         BZ    FUSR100            NO  --->                     @DA33314 02388000
         LA    R0,64                                           @DA33314 02389000
         L     R1,FTFRSAV                                      @DA33314 02390000
         L     R8,APMGMDAT        TFREE ...                    @DA33314 02391000
         USING PMGMDATA,R8        ...ALL TFIXED...             @DA33314 02392000
         L     LINK2,ATFREEPH     ....         PAGES           @DA33314 02393000
*SGLINK  TFREE,INPUT=(R0,R1,R7,R8)                             @DA33314 02394000
*        AMODESW CALL,REGS=(LINK2,LINK2) CALL TFREE SERVICE    @D52VDMZ 02395000
         AMODESW CALL,REGS=(LINK2,LINK2) CALL TFREE SERVICE    @D52VDMZ 02396000
         DROP  R8                                              @DA33314 02397000
         NI    DFCBSW2,XFF-FIXTXT                              @DA33314 02398000
         LH    R1,TFIXIDEN        REDUCE ...                   @DA33314 02399000
         BCTR  R1,0               .... TFIXIDEN ....           @DA33314 02400000
         STH   R1,TFIXIDEN        ....      BY ONE             @DA33314 02401000
         B     FUSR200            NOT POSS. TO BOTH PFIX A.TFIX@D51IDMZ 02402000
         SPACE 1                                                        02403000
*----- TEST IF PAGES IN USER SPACE ARE TO BE PFREE'D ---------*@D51KDMZ 02404000
FUSR100  DS    0H                                              @D51KDMZ 02405000
         TM    DFCBSW2,PFIXPND    PFIX REQUEST PENDING         @D64ADVB 02406000
         BZ    FUSR200            NO                           @D51KDMZ 02407000
         NI    DFCBSW2,XFF-PFIXPND RESET PFIX PENDING          @D64ADVB 02408000
         L     R8,TCBPTR          LOAD TCB OF PROGRAM FETCHTASK@D51KDMZ 02409000
         LA    R8,SVCSV3-TCBADR-16(,R8) PROVIDE SAVE AREA      @DY45502 02410000
         LA    R1,FPFXBEG         LOAD ADDRESS OF PFIX TABLE   @D51KDMZ 02411000
*        SPFREE ADDRESS=(1),SAVE=(8)                           @D52VDMZ 02412000
         SPFREE ADDRESS=(1),SAVE=(8)                           @D52VDMZ 02413000
*-------------------------------------------------------------*@DA33314 02414000
         SPACE 1                                                        02415000
FUSR200  EQU   *                                               @DA33314 02416000
         L     R6,DISPAD          PROVIDE ADDRESS TO DISPATCHER@DA33314 02417000
         L     R4,TIBPTR          SYSTEM TASK TIB              @DA33314 02418000
         USING TIBADR,R4                                       @DA33314 02419000
         LH    R0,TIBRTID         REMEMBER REQUESTOR ID        @D61NDIS 02420000
         DROP  R4                                              @DA33314 02421000
         LR    R8,R5              SAVE RES.QUEUE POINTER       @DA33314 02422000
*SGLINK  SYSDEACT,INPUT=(R6,RF),WORK=(R5,RE)                   @DA33314 02423000
         BAL   RF,SYSDEACT        DEACTIVATE SYSTEM TASK       @DA33314 02424000
         LR    R5,R8              RESTORE RESOURCE QUEUE PTR   @DA33314 02425000
*SGLINK  RPOST,INPUT=(R5,R6,RF),WORK=(R5,RE)                   @DA33314 02426000
         BAL   RF,RPOST           POST FIRST TASK IN QUEUE     @DA33314 02427000
         LR    RE,R0              GET USER TASK ID             @@@@@@MZ 02428000
         LM    RF,R9,ORG15(RD)    RESTORE REGS                 @D21ZDVB 02429000
*      SGSETUP ACTIVATE,STASK=DIR,WR1=RE,WR2=RF,OPTION=USER    @D61NDIS 02430000
.* STASK PARAMETER IS NOT USED BY SERVICE,                     @D61NDIS 02431000
.* ... BUT MANDATORY FOR SYNTAX - DIR MEANS DIR/PGMFETCH TASK  @D61NDIS 02432000
       SGSETUP ACTIVATE,STASK=DIR,WR1=RE,WR2=RF,OPTION=USER    @D61NDIS 02433000
         MVI   RID+D1,REENTRID    IDENTIFY REENTRANT ROUTINE   @D36IDVB 02434000
         BR    LINK2              =====>                       @D36IDVB 02435000
*-------------------------------------------------------------*@DA33314 02436000
         EJECT                                                 @DA33314 02437000
***************************************************************@DA33314 02438000
*    SUBROUTINE: B L D C H A I N                               @DA33314 02439000
*                                                              @DA33314 02440000
*    MODULE:    SGDFCH                                         @DA33314 02441000
*                                                              @DA33314 02442000
*    FUNCTION:  SELECT AND BUILD THE FIRST LEVEL SEARCHING     @DA33314 02443000
*               CHAIN                                          @DA33314 02444000
*                                                              @DA33314 02445000
*    INPUT:     JCSW2:      IN COMREG; =X'20' INDICATES,THAT   @DA33314 02446000
*                           COMPILE AND GO IS ALLOWED;         @DA33314 02447000
*               JCSW4:      IN COMREG; =X'04' INDICATES THAT   @DA33314 02448000
*                           TESTMODE IS ON; TESTMODE IS SET,   @DA33314 02449000
*                           IF THE KEYWORD 'SDL' OCCURS IN THE @DA33314 02450000
*                           MIDDLE OF A USER SEARCHING CHAIN   @DA33314 02451000
*               DFWKFLAG:   IN FETCH WORK AREA OF TCB; =X'04'  @DA33314 02452000
*                           INDICATES, THAT SYS PARAMETER OF   @DA33314 02453000
*                           LOAD (SLOAD) MACRO  WAS SET TO YES @DA33314 02454000
*                                                              @DA33314 02455000
*    OUTPUT:  R4 = @DSRCHN4 = SCIL                             @DA33314 02456000
*                  IF SLOAD REQUEST                            @DA33314 02457000
*             R4 = @DSRCHN1 = SDL | SCIL                       @DA33314 02458000
*                  IF PIK = 0 (REQ. IS AR OR S.TH.)            @DA33314 02459000
*             R4 = @DSRCHN1 = SDL | SCIL | PCIL | PCIL| (LNK)  @DA33314 02460000
*                  IF - NO TESTMODE AND SYS=YES OR $-PHASE     @DA33314 02461000
*                       OR                                     @DA33314 02462000
*                     - IF TESTMODE AND SLOAD REQ. WITH SYS=YES@DA33314 02463000
*             R4 = @DSRCHN2 = (LNK) | SDL | PCIL | PCIL | SCIL @DA33314 02464000
*                  IF -  NO TESTMODE AND NO $-PHASE AND SYS=NO @DA33314 02465000
*             R4 = @DSRCHN3 = (LNK) | PCIL | PCIL | SCIL       @DA33314 02466000
*                  IF -  IF TESTMODE SET AND NO SLOAD REQ.     @DA33314 02467000
*                        WITH SYS=YES                          @DA33314 02468000
*             R4 = @DSRCHN1 = SDL                              @D61DDMZ 02469000
*                  IF STAND ALONE ENVIRONMENT                  @D61DDMZ 02470000
*             R4 = @DSRCHN4 = PCIL |PCIL | SDL | SCIL          @D64ADVB 02471000
*                  IF MVS SIMULATION WITHOUT DCB               @D64ADVB 02472000
*             R4 = @DSRCHN5 = DCB | PCIL| PCIL | SDL | SCIL    @D64ADVB 02473000
*                  IF MVS SIMULATION WITH DCB                  @D64ADVB 02474000
*             OS/390 SEARCH CHAIN DESCRIPTION FROM INITIALIZATION       02475000
*             AND TUNING GUIDE                                          02476000
*             1.MODULES THAT WERE LOADED UNDER THE CURRENT TASK (LLES)  02477000
*             2.THE JOB PACK AREA (JPA)                                 02478000
*             3.TASKLIB, STEPLIB, JOBLIB, OR ANY LIBRARIES THAT WERE    02479000
*               INDICATED BY A DCB                                      02480000
*             4.ACTIVE LINK PACK AREA (LPA), WHICH CONTAINS FLPA, MLPA  02481000
*             5.PAGEABLE LINK PACK AREA (PLPA)                          02482000
*             6.SYS1.LINKLIB AND LIBRARIES CONCATENATED TO IT THROUGH   02483000
*               THE LNKLSTXX MEMBER OF PARMLIB                          02484000
*                                                                       02485000
*    EXITS:      ONLY NORMAL                                   @DA33314 02486000
*                                                              @DA33314 02487000
*    ERROR HANDLING:   NONE                                    @DA33314 02488000
*                                                              @DA33314 02489000
*    CHANGED REGISTERS: R0, R2, R4, R5                         @DA33314 02490000
*                                                              @DA33314 02491000
*    CALLED BY:  FIND                                          @DA33314 02492000
*                                                              @DA33314 02493000
*    CALL ROUTINE:  NONE                                       @DA33314 02494000
*                                                              @DA33314 02495000
***************************************************************@D369DVB 02496000
         SPACE 2                                                        02497000
*SGLINK  BLDCHAIN,INPUT=(R7,R9,RA,RB),OUTPUT=(R4),WORK=(R0,R2,R3,R5)    02498000
BLDCHAIN DS    0H                                              @DA33314 02499000
         BALR  R9,0                                            @D64ADVB 02500000
         USING *,R9                                            @D64ADVB 02501000
         SLR   R0,R0               CLEAR REG                   @DA33314 02502000
         L     R5,DFWKCOMG         GET COMREG POINTER          @DA33314 02503000
         USING COMREG,R5                                       @DA33314 02504000
         TM    IJBFLG08,IJBSAENV   STAND ALONE ENVIRONMENT     @D61DDMZ 02505000
         BO    BLDCH1SA            YES, SDL SEARCH ONLY        @D61DDMZ 02506000
         CH    R0,PIK              REQUESTOR AR-TASK OR OTHER SYSTEM   *02507000
                                      TASK RUNNING FOR AR-TASK @DA33314 02508000
         BE    BLDCH1AR            YES --->                    @DA33314 02509000
         SPACE 1                                               @D64ADVB 02510000
* IF MVS-SIMULATION, CHECK WHETHER DIR-SEARCH MUST BE CONTINUED@D64ADVB 02511000
*    AND DO SO WITHOUT ANY INITIALISATION                      @D64ADVB 02512000
         SPACE 1                                               @D64ADVB 02513000
         TM    DFWKRQFM,MVSXXXX    ANY MVS SIMULATION REQ      @D64ADVB 02514000
         BZ    BLDCH20             NO,  --------->             @D64ADVB 02515000
         L     R4,DFWK1STL         CURRENT FIRST LEVEL         @D64ADVB 02516000
         TM    DFWKSWRQ,MORESRCH   CONTINUE SEARCH ON CURRENT CHAIN     02517000
         BO    BLDCHEYT            YES, --------->             @D64ADVB 02518000
         SPACE 1                                               @D64ADVB 02519000
* CHECK WHETHER DCB WAS SPECIFIED AND SELECT THE DCB CHAIN     @D64ADVB 02520000
* OTHERWISE THE NORMAL MVS-CHAIN                               @D64ADVB 02521000
         SPACE 1                                               @D64ADVB 02522000
         TM    DFWKSWRQ,DCBSRCH    DCB SEARCH REQUESTED        @D64ADMZ 02523000
         BZ    BLDCH30             NO                          @D64ADMZ 02524000
         L     R4,DFWKADCB         IF DCB=1 DO NOT USE DCB  .. @D64ADMZ 02525000
         CL    R4,F1               ..CHAIN, BUT NORMAL         @D64ADMZ 02526000
         BE    BLDCH30             .. MVS SEARCH CHAIN         @D64ADMZ 02527000
         LA    R4,DSRCHN5                                      @D64ADMZ 02528000
         MVI   DSRCHN5+1,X00       RESET SECOND LEVEL INDIC.   @D64ADMZ 02529000
*                                  ON TASK CHAIN               @D64ADMZ 02530000
         B     BLDCHEXT            -------------->             @D64ADVB 02531000
BLDCH30  DS    0H                  USE NORMAL MVS SEARCH CHAIN @D64ADMZ 02532000
         LA    R4,DSRCHN4                                      @D64ADVB 02533000
         MVI   DSRCHN4+1,X00       RESET ...                   @D64ADVB 02534000
         MVI   DSRCHN4+1*LDSRCHN+1,X00 ... SECOND LEVEL INDIC. @D64ADVB 02535000
*                                      ... ON MVS LIKE CHAIN   @D64ADVB 02536000
         B     BLDCHEXT            -------------->             @D64ADVB 02537000
*                                                              @DA33314 02538000
* IF NO TESTMODE SET, THEN SELECT SYSTEM-CHAIN, IF $-PHASE     @DA33314 02539000
* REQUESTED OR SYS=YES SPECIFIED, OTHERWISE SELECT USER-CHAIN  @DA33314 02540000
*                                                              @DA33314 02541000
BLDCH20  DS    0H                                              @DA33314 02542000
         TM    JCSW4,TESTMODE      TESTMODE                    @DA33314 02543000
         BO    BLDCH40             YES --->                    @DA33314 02544000
         CLI   DFWKNAME,DOLLAR     $-PHASE REQUESTED?          @DA33314 02545000
         BE    BLDCH1              YES ---> DSRCHN1            @DA33314 02546000
         TM    DFWKFLAG,SYSLIST    SYS=YES SPECIFIED?          @DA33314 02547000
         BO    BLDCH1              YES ---> DSRCHN1            @DA33314 02548000
         B     BLDCH2              NO  ---> DSRCHN2            @DA33314 02549000
*                                                              @DA33314 02550000
* IF TESTMODE SET, THEN SELECT SYSTEM-CHAIN,IF SLOAD REQ. WITH @DA33314 02551000
* SYS=YES OTHERWISE SELECT TESTMODE-CHAIN                      @DA33314 02552000
*                                                              @DA33314 02553000
BLDCH40  CLI   DFWKRQFM,SLOADREQ   SLOAD REQUEST?              @D64ADVB 02554000
         BNE   BLDCH3              NO ---> DSRCHN3             @DA33314 02555000
         TM    DFWKFLAG,SYSLIST    SYS=YES?                    @DA33314 02556000
         BO    BLDCH1              YES ---> DSRCHN1            @DA33314 02557000
         B     BLDCH3              NO  ---> DSRCHN3            @DA33314 02558000
*                                                                       02559000
* REQUEST IN A SA ENVIRONMENT ---> SDL SEARCH ONLY             @D61DDMZ 02560000
*                                                                       02561000
BLDCH1SA DS    0H                                              @D61DDMZ 02562000
         LA    R4,DSRCHN1          POINT TO SYSTEM CHAIN       @D61DDMZ 02563000
         MVI   DSRCHN1+1*LDSRCHN,XFF REDUCE SA CHAIN TO SDL    @D61DDMZ 02564000
*                                                                       02565000
*  INSTEAD OF JCL PHASE $JOBCTLA, THE PHASE IJWSAJCL MUST BE LOADED.    02566000
*  THE REQUEST TO LOAD $JOBCTLA IS DONE BY EOT. TO AVOID A STANDALONE   02567000
*  HOOK IN EOT PROCESSING THE PHASENAMES ARE EXCHANGED AT THIS POINT.   02568000
*                                                                       02569000
         CLC   DFWKNAME,JOBCTLA    LOAD REQUEST FOR $JOBCTLA   @D61DDMZ 02570000
         BNE   BLDCHEXT            NO, --------->              @D64ADVB 02571000
         MVC   DFWKNAME,IJWSAJCL   EXCHANGE PHASENAME          @D61DDMZ 02572000
         B     BLDCHEXT            ---------->                 @D64ADVB 02573000
         SPACE 1                                               @DA33314 02574000
JOBCTLA  DC    C'$JOBCTLA'                                     @D61DDMZ 02575000
IJWSAJCL DC    C'IJWSAJCL'                                     @D61DDMZ 02576000
*                                                              @DA33314 02577000
* REQUEST FROM AR-ROUTINE ---> SYSTEM CHAIN                    @DA33314 02578000
*                                                              @DA33314 02579000
BLDCH1AR DS    0H                                              @D64ADVB 02580000
         LA    R4,DSRCHN1          POINT TO SYSTEM CHAIN       @DA33314 02581000
         MVI   DSRCHN1+2*LDSRCHN,XFF REDUCE ATTENTION CHAIN            *02582000
                                   TO SDL & SCIL ENTRY         @DA33314 02583000
         B     BLDCHEXT            ---------->                 @D64ADVB 02584000
*                                                              @DA33314 02585000
* SYSTEM-CHAIN IS SELECTED                                     @DA33314 02586000
*                                                              @DA33314 02587000
BLDCH1   LA    R4,DSRCHN1                                      @DA33314 02588000
         MVI   DSRCHN1+2*LDSRCHN,X00 CLEAR ID0                 @DA33314 02589000
         MVI   DSRCHN1+2*LDSRCHN+1,X00 RESET ...               @DA33314 02590000
         MVI   DSRCHN1+3*LDSRCHN+1,X00 ... SECOND LEVEL INDIC  @DA33314 02591000
         TM    JCSW2,ALLOWEX       COMPILE AND GO ALLOWED?     @DA33314 02592000
         BO    BLDCH1LK            YES ---> INCLUDE LNK ENTRY  @DA33314 02593000
         MVI   DSRCHN1+4*LDSRCHN,XFF        ELIMINATE LNK ENTRY@DA33314 02594000
         B     BLDCHEXT                     ---------->        @D64ADVB 02595000
BLDCH1LK MVI   DSRCHN1+4*LDSRCHN,X00        INCLUDE LNK ENTRY  @DA33314 02596000
         MVI   DSRCHN1+4*LDSRCHN+1,X00                         @DA33314 02597000
         B     BLDCHEXT                     ---------->        @D64ADVB 02598000
*                                                              @DA33314 02599000
* USER-CHAIN IS SELECTED                                       @DA33314 02600000
*                                                              @DA33314 02601000
BLDCH2   MVI   DSRCHN2+2*LDSRCHN+1,X00 RESET ...               @DA33314 02602000
         MVI   DSRCHN2+3*LDSRCHN+1,X00 ... SECOND LEVEL INDIC  @DA33314 02603000
         TM    JCSW2,ALLOWEX       COMPILE AND GO ALLOWED?     @DA33314 02604000
         BO    BLDCH2LK            YES ---> INCLUDE LNK ENTRY  @DA33314 02605000
         LA    R4,DSRCHN2+LDSRCHN  ELIMINATE LNK ENTRY         @DA33314 02606000
         B     BLDCHEXT                     ---------->        @D64ADVB 02607000
BLDCH2LK LA    R4,DSRCHN2                   @DSRCHN2           @DA33314 02608000
         MVI   DSRCHN2+1,X00                                   @DA33314 02609000
         B     BLDCHEXT                     ---------->        @D64ADVB 02610000
*                                                              @DA33314 02611000
* TESTMODE-CHAIN IS SELECTED                                   @DA33314 02612000
*                                                              @DA33314 02613000
BLDCH3   MVI   DSRCHN3+LDSRCHN+1,X00 RESET ...                 @DA33314 02614000
         MVI   DSRCHN3+2*LDSRCHN+1,X00 ... SECOND LEVEL INDIC  @DA33314 02615000
         TM    JCSW2,ALLOWEX       COMPILE AND GO ALLOWED?     @DA33314 02616000
         BO    BLDCH3LK            YES ---> INCLUDE LNK ENTRY  @DA33314 02617000
         LA    R4,DSRCHN3+LDSRCHN  ELIMINATE LNK ENTRY         @DA33314 02618000
         B     BLDCHEXT                     ---------->        @D64ADVB 02619000
BLDCH3LK LA    R4,DSRCHN3                   @DSRCHN2           @DA33314 02620000
         MVI   DSRCHN3+1,X00                                   @DA33314 02621000
BLDCHEXT DS    0H                                              @D64ADVB 02622000
         ST    R0,DFWK2NDL         CLEAR CHAIN POINTER         @D64ADVB 02623000
BLDCHEYT DS    0H                                              @D64ADVB 02624000
         L     R9,DAFETCH          RE-ESTABLISH BASE           @D64ADVB 02625000
         BR    LINK2                                           @DA33314 02626000
         DROP  R9                                              @D64ADVB 02627000
*--------------------------------------------------------------@DA33314 02628000
         EJECT                                                 @DA33314 02629000
*--------------------------------------------------------------@DA33314 02630000
*     ROUTINE NAME: NXTCHAIN                                   @DA33314 02631000
*     MODULE:       SGDFCH                                     @DA33314 02632000
*     FUNCTION:     PROVIDES THE FIRST / NEXT ENTRY IN THE     @DA33314 02633000
*                   SEARCHING CHAIN OF THE LOT.                @DA33314 02634000
*                   MOREOVER IT PROVIDES THE ACTUAL "TO"       @DA33314 02635000
*                   LIBRARY                                    @DA33314 02636000
*     CALLER:       FIND                                       @DA33314 02637000
*     OPERATION:    IF THE DSRCHNX ENTRY IS NOT YET INITIALIZED@DA33314 02638000
*                     THEN D0:                                 @DA33314 02639000
*                      IF LPB PTR (SYSCOM) IS NOT INITIALIZED  @DA33314 02640000
*                      THEN RETURN WITH RC = 4                 @DA33314 02641000
*                        ELSE DO:                              @DA33314 02642000
*                         IF LINK REQUEST                      @DA33314 02643000
*                         THEN DO                              @DA33314 02644000
*                             FIND FTTAB PTR IN "TO" LIBRARY   @DA33314 02645000
*                                      OF LOTTCIL/LOTPCIL/SCIL @DA33314 02646000
*                             IF LINKDIR=0 RETURN WITH RC = 4  @DA33314 02647000
*                             CLEAR RFWKCHAIN AND GOTO LABEL1  @DA33314 02648000
*                         ELSE DO                              @DA33314 02649000
*                         GET PTR TO LIBDEF ANCHOR TABLE       @D51IDMZ 02650000
*                         GET LIBDEF ANCHOR TABLE ENTRY OF PART@D51IDMZ 02651000
*                         GET PERM/TEMP LIBDEF ANCHOR          @D51IDMZ 02652000
*                         IF LIBDEF ANCHOR NOT INITIALIZED     @D51IDMZ 02653000
*                           THEN RETURN WITH RC=4              @D51IDMZ 02654000
*                         ELSE DO                              @D51IDMZ 02655000
*                           GET PTR TO INLCLOT FOR PHASES      @D51IDMZ 02656000
*                           IF NO PHASE ENTRY AVAILABLE        @D51IDMZ 02657000
*                             THEN RETURN WITH RC=4            @D51IDMZ 02658000
*                      ELSE  DO                                @DA33314 02659000
*                      GET PTR TO LAST ENTRY IN CHAIN(DFWK2NDL)@DA33314 02660000
*                      IF PTR = 0 (LINK REQUEST)               @DA33314 02661000
*                          THEN RETURN WITH RC = 4             @DA33314 02662000
*                   BUMP TO NEXT ENTRY IN LOTCHAIN             @DA33314 02663000
*                   IF END-OF-CHAIN RETURN WITH RC = 4         @DA33314 02664000
*                   SAVE PTR IN DFWK2NDL                       @DA33314 02665000
*          LABEL1:  PROVIDE FTTAB PTR IN DSRCHN-ENTRY          @DA33314 02666000
*                   RETURN WITH RC = 0                         @DA33314 02667000
*     INPUT:        R4 --- ADDR(DSRCH_ENTRY)                   @DA33314 02668000
*     OUTPUT:       RC, UPDATED DSRCH ENTRY                    @DA33314 02669000
*                   DFWKALIB. DFWKASLB                         @DA33314 02670000
*     RETURN CODES: IN REG15 0 ---- ENTRY AVAILABLE            @DA33314 02671000
*                            4 ---- BUMP TO NEXT DSRCHN ENRTRY @DA33314 02672000
*                            8 ---- SDL SEARCH ON 2ND LEVEL    @DA33314 02673000
*                           12 ---- FETCH INTERNAL ERROR       @DA33314 02674000
*     CALLED ROUTINE: GETALOT, GETLOT                          @DA33314 02675000
*     RETURN:       CALLER                                     @DA33314 02676000
*     ERROR EXITS:  NONE                                       @DA33314 02677000
*     REFERENCED DATA: LBP(READ) LOT(READ) LANC(READ)          @.....VB 02678000
*                   DSRCHN (UPDATE)                            @D369DVB 02679000
*-------------------------------------------------------------*@DA33314 02680000
         SPACE 1                                               @DA33314 02681000
*SGLINK  NXTCHAIN,INPUT=(R4,R7,R9,RA,RB),OUTPUT=(RF,R2,R3),WORK=(R0,R1,*02682000
               R4,R5)                                          @DA33314 02683000
NXTCHAIN DS    0H                                              @DA33314 02684000
         BALR  R9,0                                            @D64ADVB 02685000
         USING *,R9                                            @D64ADVB 02686000
         USING DSRCHN,R4           PROVIDE ADDRESSIBILITY      @DA33314 02687000
         TM    DSRCHID1,DSID2NDL   LOT_ENTRIES ALREADY IN PROCESS...   *02688000
                                   ... (ACTIVE 2ND LEVEL CHAIN @DA33314 02689000
         BZ    NXTCH050            NO --->                     @DA33314 02690000
         L     R5,DFWK2NDL         ADDR (LOT_ENTRY )           @DA33314 02691000
         CLI   DSRCHID3,SCDLLNK    LINK_ENTRY JUST PROCESSED   @DA33314 02692000
         BNE   NXTCH140            NO  --->                    @D51IDMZ 02693000
         NI    DFCBSW2,XFF-FLNKVIO                             @DA33314 02694000
         B     NXTCHRC4            YES --->   GET NEXT 1ST LEVEL       *02695000
                                              CHAIN ENTRY      @DA33314 02696000
         SPACE 1                                               @DA33314 02697000
*-------------------------------------------------------------*@DA33314 02698000
         SPACE 1                                               @DA33314 02699000
NXTCH050 L     R1,LPBPTR           ADDR (LIB_PTR_TAB)          @DA33314 02700000
         LTR   R1,R1               YET INITIALIZED             @DA33314 02701000
         BM    NXTCHRC4            NO --->                     @DA33314 02702000
         USING INLCLPT,R1          PROVIDE ADDRESS. TO LPB     @DA33314 02703000
         OI    DSRCHID1,DSID2NDL   ACTIVATE SECOND LEVEL       @DA33314 02704000
         SLR   R3,R3                                           @D64ADVB 02705000
         IC    R3,DSRCHID3         GET BRANCH OFFSET VALUE     @DA33314 02706000
         B     BRTABNXT(R3)                                    @DA33314 02707000
BRTABNXT B     NXTCHRCC            FETCH INTERNAL ERROR        @DA33314 02708000
         B     NXTCH070            PARTITION CHAIN             @D51IDMZ 02709000
         B     NXTCH070            JOB CHAIN                   @DA33314 02710000
         B     NXTCH060            LINK LIBRARY                @DA33314 02711000
         B     NXTCH070            TASK CHAIN (MVS-LOAD DCB)   @D64ADVB 02712000
         SPACE 1                                               @DA33314 02713000
*-------------------------------------------------------------*@DA33314 02714000
         SPACE 1                                               @DA33314 02715000
NXTCH060 L     R5,LPTVIOTB         ADDR (VIORB_TAB)            @DA33314 02716000
         LA    R2,4                LENGTH OF VIORB_TAB ENTRY   @DA33314 02717000
         BAL   LINK3,GETALOT       CALCULATE PARTITION ROW             *02718000
                                             IN TABLE          @DA33314 02719000
*                                  R5 CONTAINS VIORB_ADDRESS   @DA33314 02720000
         MVI   DSRCHID2,PCILID     SET NON_SYSLIB INDICATION   @DA33314 02721000
         L     R2,0(R5)            GET VIORB                   @DA33314 02722000
         LTR   R2,R2               ANY VIORB  AVAILABLE        @DA33314 02723000
         BZ    NXTCHRC4            NO ---> (NO LINK SEARCH)    @DA33314 02724000
         OI    DFCBSW2,FLNKVIO     INDICATE VIO_STATE          @DA33314 02725000
         ST    R2,DFWKALIB         ADDR (VIORB ) AS LIBDEF_TAB @DA33314 02726000
         ST    R2,DFWKASLB         ... AND SUBLIBDEF_TAB       @DA33314 02727000
         ST    RF,DFWK2NDL         CLEAR 2ND LEVEL SAVE_ADDR   @DA33314 02728000
         L     R9,DAFETCH          RE-ESTABLISH BASE           @D64ADVB 02729000
         BR    LINK2                                           @DA33314 02730000
         SPACE 1                                               @DA33314 02731000
*-------------------------------------------------------------*@DA33314 02732000
         SPACE 1                                               @DA33314 02733000
NXTCH070 DS    0H                                              @D64ADVB 02734000
         L     R5,LPTLANC          GET ADDR OF LANC TABLE      @D51IDMZ 02735000
         LA    R2,LANCLEN          LEN(LANC-ENTRY)             @D51IDMZ 02736000
         BAL   LINK3,GETALOT       CALCULATE PARTITION ROW             *02737000
                                             IN LANC TABLE     @D51IDMZ 02738000
         B     BRTBNXT1(R3)        R3(DSRCHID) AS SET ABOVE    @D51IDMZ 02739000
BRTBNXT1 B     NXTCHRCC            FETCH INTERNAL ERROR        @D51IDMZ 02740000
         B     NXTCH110            PARTITION CHAIN (PERM)      @D51IDMZ 02741000
         B     NXTCH120            JOB CHAIN (TEMP)            @D51IDMZ 02742000
         B     NXTCHRCC            LNK ENTRY HAS BEEN HANDLED  @D51IDMZ*02743000
                                   ABOVE                       @D51IDMZ 02744000
*------> B     NXTCH080            TASK CHAIN (MVS-LOAD + DCB) @D64ADVB 02745000
         SPACE 1                                               @D64ADVB 02746000
         USING INLCLANC,R5         SET BASE FOR LANC TABLE     @D51IDMZ 02747000
NXTCH080 DS    0H                  FIND TASK CHAIN             @D64ADVB 02748000
         LH    R1,LPTNTASK         MAX NR OF TASK ENTRIES      @D64ADVB 02749000
         DROP  R1                  RESET BASE FOR LPB          @D64ADVB 02750000
         L     R2,TCBTIB                                       @D64ADVB 02751000
         LH    R0,TIBRTID-TIBADR(,R2) REQUESTOR'S TID          @D64ADVB 02752000
         L     R2,LANCTASK         ADDR TASK LANC              @D64ADVB 02753000
         LTR   R2,R2               LIBDEF ANCHOR AVAILABLE     @D64ADVB 02754000
         BM    NXTCHRC4            NO,GET NEXT 1ST LEVEL       @D64ADVB 02755000
         USING LOTENTRY,R2         SET BASE FOR LOT            @D64ADVB 02756000
         TM    LOTFLAG2,LOTRACT    ANY ACTIVE ROW              @D64ADVB 02757000
         BZ    NXTCHRC4            NO, GET NEXT 1ST LEVEL      @D64ADVB 02758000
NXTCH090 DS    0H                  FIND TASK CHAIN             @D64ADVB 02759000
         LA    R2,LOTELEN(,R2)     BUMP TO 1ST/NEXT ENTRY      @D64ADVB 02760000
         L     R5,LOTETLPT         ADDR OF TASK CHAIN          @D64ADVB 02761000
         CH    R0,LOTETIK          TASK ID FOUND               @D64ADVB 02762000
         BE    NXTCH130            YES, ---------->            @D64ADVB 02763000
         BCT   R1,NXTCH090         ALL ENTRIES SCANNED         @D64ADVB 02764000
         B     NXTCHRC4            YES, GET NEXT 1ST LEVEL     @D64ADVB 02765000
         DROP  R2                  RELEASE BASE FOR LOT        @D64ADVB 02766000
NXTCH110 L     R5,LANCPART         GET PERM. LIBDEF ANCHOR     @D51IDMZ 02767000
         B     NXTCH130                                        @D51IDMZ 02768000
NXTCH120 L     R5,LANCJOB          GET TEMP. LIBDEF ANCHOR     @D51IDMZ 02769000
NXTCH130 LTR   R5,R5               LIBDEF ANCHOR AVAILABLE     @D51IDMZ 02770000
         BM    NXTCHRC4            NO,GET NEXT FIRST LEVELENTRY@D51IDMZ 02771000
         DROP  R5                  RELEASE BASE FOR LANC       @D51IDMZ 02772000
         BAL   LINK3,GETLOT                                    @D51IDMZ 02773000
         B     NXTCHRC4            NO PHASE ENTRY FOUND,GET NEXT FIRST *02774000
                                   LEVEL ENTRY                 @D51IDMZ 02775000
*------> B     NXTCH140            PHASE / DCB SPECIFIED ENTRY         *02776000
                                   ... FOUND IN LOT            @D64ADVB 02777000
         USING LOTENTR,R5                                      @DA33314 02778000
NXTCH140 DS    0H                                              @DA33314 02779000
         TM    DSRCHID1,DSID2SDL   SDL SEARCH FOR MVS          @D64ADVB 02780000
         BO    NXTCH160            YES, DO NOT BUMP            @D64ADVB 02781000
         LA    R5,LOTELEN(R5)      BUMP TO NEXT LOT ENTRY      @DA33314 02782000
         CLI   LOTEOLDT,XFF        END OF SEARCHING CHAIN      @DA33314 02783000
         BE    NXTCHRC4            YES --->                    @DA33314 02784000
         ST    R5,DFWK2NDL         SAVE ADDR(LOT_ENTRY)        @DA33314 02785000
NXTCH160 DS    0H                                              @DA33314 02786000
         L     R1,LPBPTR           ADDR (LIBRARY_PTR_TAB)      @DA33314 02787000
         USING INLCLPT,R1          PROVIDE ADDRESS. TO LPB     @DA33314 02788000
         L     R3,LPTBSDT          START_ADDR(SUBLIB_DEF_TAB)  @DA33314 02789000
         L     R2,LPTBLDT          START_ADDR(LIB_DEF_TAB)     @DA33314 02790000
         LH    R0,LOTEOLDT         O(LIBDEF)                   @DA33314 02791000
         LA    RF,8                RETURN OFFSET SDL SEARCH    @DA33314 02792000
         LTR   R0,R0               SDL SEARCH ON SECOND LEVEL  @DA33314 02793000
         BM    NXTCHSDL                                        @DA33314 02794000
         ALR   R2,R0               ADDR (LIB_DEF_TAB)          @DA33314 02795000
         USING INLCLDTE,R2                                     @DA33314 02796000
         CLI   LDTENTID,C'C'       ORIGINAL LIB_DEF_TAB GIVEN  @DA33314 02797000
         BE    NXTCHRTN            YES --->                    @DA33314 02798000
         L     R2,LDTEPADR         ADDR (ORIG_LIB_DEF_TAB)     @DA33314 02799000
         DROP  R2                                              @DA33314 02800000
         SPACE 1                                               @DA33314 02801000
NXTCHRTN SLR   RF,RF               RETURN OFFSET SUBLIB-SEARCH @DA33314 02802000
*                                  START_ADDR(SUBLIB_DEF_TAB)  @DA33314 02803000
         AH    R3,LOTEOSDT         + O(SUBLIB) =: ADDR(SUBLIB) @DA33314 02804000
         TM    DFWKRQFM,MVSXXXX    MVSLOAD SIMULATED           @D64ADVB 02805000
         BNO   NXTCHSDL            NO,  ---------->            @D64ADVB 02806000
         XI    DSRCHID1,DSID2SDL   SET/RESET SDL-SEARCH FOR MVS@D64ADVB 02807000
         BZ    NXTCHSDL            SDL SEARCH ALREADY DONE     @D64ADVB 02808000
*                                  YES, ---------->            @D64ADVB 02809000
         CL    R3,LPTBSDT          SYSLIB REQUEST              @D64ADVB 02810000
         BNE   NXTCHSDL            NO,  ---------->            @D64ADVB 02811000
         LA    RF,8                RETURN OFFSET SDL SEARCH    @D64ADVB 02812000
NXTCHSDL ST    R2,DFWKALIB         ADDR LIB-DEF-TAB            @DA33314 02813000
         ST    R3,DFWKASLB         ADDR SLIB-DEF-TAB           @DA33314 02814000
         L     R9,DAFETCH          RE-ESTABLISH BASE           @D64ADVB 02815000
         B     0(LINK2,RF)         =====>                      @DA33314 02816000
         SPACE 1                                               @DA33314 02817000
*-------------------------------------------------------------*@DA33314 02818000
         SPACE 1                                               @DA33314 02819000
NXTCHRCC LA    RF,12               RETURN OFFSET INTERNAL ERROR@DA33314 02820000
         B     NXTCHEXT                                        @D64ADVB 02821000
NXTCHRC4 LA    RF,4                RETURN OFFSET NOT FOUND     @DA33314 02822000
NXTCHEXT NI    DSRCHID1,XFF-DSID2NDL-DSID2SDL RESET FLAGS      @D64ADVB 02823000
         L     R9,DAFETCH          RE-ESTABLISH BASE           @D64ADVB 02824000
         B     0(LINK2,RF)         =====>                      @DA33314 02825000
         SPACE 1                                               @DA33314 02826000
*-------------------------------------------------------------*@DA33314 02827000
*     GETALOT SUBROUTINE                                       @DA33314 02828000
*     INPUT: R5 POINTS TO START OF TABLE                       @DA33314 02829000
*            R2 LENGTH OF PARTITION ROW                        @DA33314 02830000
*     OUTPUT: R5 POINTS TO ACTUAL ROW OF TABLE                 @DA33314 02831000
*-------------------------------------------------------------*@DA33314 02832000
         SPACE 1                                               @DA33314 02833000
GETALOT  DS    0H                                              @DA33314 02834000
         LH    R0,PIK              GET PIK OF REQUESTOR        @DA33314 02835000
         SRL   R0,4                DIVIDE BY 16                @DA33314 02836000
         BCTR  R0,0                MINUS ONE                   @DA33314 02837000
         LTR   R0,R0               BG OR ATTENTION             @DA33314 02838000
         BNPR  LINK3               =====>     R5 POINTS TO BG ROW      *02839000
                                          OF ASSOCIATED LOT    @DA33314 02840000
GTLOT10  EQU   *                   REG2 CONTAINS LENGTH OF ROW @DA33314 02841000
         ALR   R5,R2               UPDATE POINTER TO ROW       @DA33314 02842000
         BCT   R0,GTLOT10          IF NOT ZERO: REPEAT ADDITION@DA33314 02843000
         BR    LINK3               =====>                      @DA33314 02844000
         DROP  R1,R4,R5                                        @DA33314 02845000
         SPACE 1                                               @DA33314 02846000
*-------------------------------------------------------------*@D51IDMZ 02847000
*     GETLOT  SUBROUTINE                                       @D51IDMZ 02848000
*     INPUT:  R5 POINTS TO FIRST VALID PART LIBDEF ENTRY WITHIN@D51IDMZ 02849000
*               POOL                                           @D51IDMZ 02850000
*             R3 DSRCHID3                                      @D64ADVB 02851000
*     OUTPUT: R5:POINTER TO INLCLOT FOR PHASE ENTRY(FOR RF = 0)@D51IDMZ 02852000
*     RETURN:                                                  @D51IDMZ 02853000
*             OFFSET 4 : PHASE INLCLOT FOUND                   @D64ADVB 02854000
*             OFFSET 0 : NO PHASE ENTRY FOUND                  @D64ADVB 02855000
*-------------------------------------------------------------*@D51IDMZ 02856000
         SPACE 1                                               @D51IDMZ 02857000
         USING INLCLOTP,R5         ADDRESS LIBDEF ENTRY        @D51IDMZ 02858000
GETLOT   DS    0H                                              @D51IDMZ 02859000
         LA    R2,CONPHASE                                     @D64ADVB 02860000
         CL    R3,F16              MVS-LOAD WITH DCB           @D64ADVB 02861000
         BNE   GETLOT10            NO,  ---------->            @D64ADVB 02862000
         L     R2,DFWKADCB         ADDR OF USER PROVIDED LDCB  @D64ADVB 02863000
         USING INLCIALC,R2         SET BASE FOR LDCB           @D64ADVB 02864000
         L     R2,IALCCHID         ADDRESS OF CHAINID          @D64ADVB 02865000
         DROP  R2                  RESET BASE FOR LDCB         @D64ADVB 02866000
GETLOT10 DS    0H                                              @D64ADVB 02867000
         CLC   LOTPCHID,0(R2)      IS IT THE RELATED ENTRY     @D64ADVB 02868000
         BE    GETLOT20            YES                         @D51IDMZ 02869000
         L     R5,LOTPNEXT         ADDR. NEXT LIBDEF XXX ENTRY @D51IDMZ 02870000
         LTR   R5,R5               ENTRY AVAILABLE             @D51IDMZ 02871000
         BNM   GETLOT10            YES,CHECK IF IT IS PHASE EN.@D51IDMZ 02872000
         BR    LINK3               NO, RETURN WITH OFFSET 0    @D64ADVB 02873000
GETLOT20 DS    0H                                              @D64ADVB 02874000
         LA    R5,LOTPPRME-LOTELEN ADDR LOT-ENTRY - LOTELEN            *02875000
                                   ... FOR TASK  CHAIN         @D64ADVB 02876000
         CL    R3,F16              MVS-LOAD WITH DCB           @D64ADVB 02877000
         BE    4(,LINK3)           YES, ---------->            @D64ADVB 02878000
         LA    R5,LOTELEN(,R5)     ADDR OF LOT SEARCH          @D64ADVB 02879000
         B     4(,LINK3)           RETURN WITH OFFSET 4        @D51IDMZ 02880000
         DROP  R5                                              @D64ADVB 02881000
         DROP  R9                                              @D64ADVB 02882000
*-------------------------------------------------------------*@DA33314 02883000
         EJECT                                                 @DA33314 02884000
*--------------------------------------------------------------@DA33314 02885000
*   ROUTINE NAME:  FSECTEST                                    @DA33314 02886000
*   MODULE:        SGDFCH                                      @DA33314 02887000
*   FUNCTION:      REPRESENTS INTERFACE ROUTINE                @DA33314 02888000
*                  TO ACCESS CONTROL FACILITY.                 @DA33314 02889000
*   CALLER:        FETCH BASE                                  @DA33314 02890000
*   INPUT:         ---> REFERENCED DATA                        @DA33314 02891000
*                  R15 = 0 PERFORM SECURITY CHECKING           @DA33314 02892000
*                      /=0 RECORD SEC. VIOLATION DETECTED      @D61EDMZ 02893000
*                           BY VENDOR HOOK                     @D61EDMZ 02894000
*   OUTPUT:        R15 RETURN CODE                             @DA33314 02895000
*   RETURN CODES:  R15 = 0  --- ACF SUCCESSFULL                @DA33314 02896000
*                     /= 0  --- SECURITY VIOLATION             @D64ADVB 02897000
*   CALLED ROUTINE: SCYSVC                                     @DA33314 02898000
*   INTERFACE TO  SCYSVC :                                     @D21ZDVB 02899000
*           INPUT  R0 = 0 SECURITY CHECK MUST BE PERFORMED     @D21ZDVB 02900000
*                     > 0 AUTHORITY CHECK REQUIRED (THAT MEANS @D21ZDVB 02901000
*                            THE CUMULATED ACCCESS RIGHTS OF   @D21ZDVB 02902000
*                            LOT ENTRIES)                      @D21ZDVB 02903000
*                     < 0 RECORDING DUE TO SECURITY VIOLATION  @D21ZDVB 02904000
*                  R1 = ADDRESS (PARAMETER LIST)               @D21ZDVB 02905000
*                       PARAMETER LIST = < ADDR(LIB.DEF.TAB)   @D21ZDVB 02906000
*                                         ,ADDR(SLIB.DEF.TAB)  @D21ZDVB 02907000
*                                         ,ADDR(PHASENAME) >   @D21ZDVB 02908000
*                                         ,ADDR(COMREG) >      @D21ZDVB 02909000
*                  RA = TCB ADDRESS OF LOAD REQUESTOR          @D21ZDVB 02910000
*                  RC = RETURN ADDRESS                         @D21ZDVB 02911000
*                  RD = BASE REGISTER OF SCYSVC ROUTINE        @D21ZDVB 02912000
*           OUTPUT RF = RETURN CODE                            @D21ZDVB 02913000
*                     =  0   SECURITY CHECK VALID              @D21ZDVB 02914000
*                     = 24   SECURITY VIOLATION                @D21ZDVB 02915000
*   RETURN:        CALLER                                      @DA33314 02916000
*   ERROR EXIT:    NONE                                        @DA33314 02917000
*-------------------------------------------------------------*@DA33314 02918000
         SPACE 1                                               @DA33314 02919000
*SGLINK  FSECTEST,S,INPUT=(RA,RB,RF),OUTPUT=(RF),                      *02920000
               WORK=(R0,R1,R2,R3,R5)                           @D64ADVB 02921000
FSECTEST DS    0H                                              @D52VDMZ 02922000
         BALR  R9,0                ESTABLISH BASE              @D52VDMZ 02923000
         USING *,R9                                            @D52VDMZ 02924000
         LA    R9,0(,R9)           CLEAR HIGH ORDERED BIT      @D52VDMZ 02925000
         TM    SYSFLAG2,IPLBIT     IPL IN PROCESS              @DA33314 02926000
         BO    FSECTEXT            YES, --------->             @D52VDMZ 02927000
         TM    DFWKSWRQ,SYSAMASK   NO SECURITY CHECK IF SYSTEM @DA33314 02928000
         BO    FSECTEXT            TASK REQUEST                @D52VDMZ 02929000
         TM    SYSFLAG2,IJBSEC     SECURITY CHECK ACTIVE       @DA33314 02930000
         BZ    FSECTEXT            NO,  --------->             @D52VDMZ 02931000
         TM    DFCBSW2,FLNKVIO     LINK_VIO IS UNPROTECTED     @DA33314 02932000
         BO    FSECTEXT            --------->        RETURN    @D52VDMZ 02933000
         LTR   R0,RF               SECURITY VIOLATION DETECTED BY      *02934000
                                   .. VENDOR                   @D64ADVB 02935000
         BZ    FSECT000            NO,  --------->             @D61EDMZ 02936000
         SLR   R0,R0               R0 MUST BE NEGATIVE TO ..   @D64ADVB 02937000
         BCTR  R0,0                .. RECORD SECURITY VIOLATION@D61EDMZ 02938000
         B     FSECT400                                        @D61EDMZ 02939000
FSECT000 DS    0H                                              @D52VDMZ 02940000
*      IF $$B PHASE OR DTSECTAB                                @DA37284 02941000
*             THEN CHECK THAT SUBLIB IS PROTECTED              @DA33314 02942000
         L     R2,DFWKALIB         ADDRESS (LIB_DEF_TAB)       @DA33314 02943000
         USING INLCLDTE,R2                                     @DA33314 02944000
         TM    LDTEINFO,LDTEPROT   LIBRARY PROTECTED           @DA33314 02945000
         BO    FSECT200            YES, --------->             @D21ZDVB 02946000
         CLC   DFWKNAME(8),CONDTSEC DTSECTAB                   @DA37284 02947000
         BE    FSECT100            YES, SECURITY VIOLATION     @DA37284 02948000
         CLC   DFWKNAME(3),CON$$BN B TRANSIENT S               @DA33314 02949000
         BNE   FSECTEXT            NO,  --------->   NO CHECK  @D52VDMZ 02950000
FSECT100 BCTR  R0,0                R0 IS NOW NEGATIVE          @DA37284 02951000
         B     FSECT400            --------->  RECORD SECURITY ...     *02952000
                                               VIOLATION       @D21ZDVB 02953000
*-------------------------------------------------------------*@DA33314 02954000
*    THE UNIVERSAL ACCESS  RIGHTS OF THE LIBRARY AND          *@DA33314 02955000
*    SUBLIBRARY ARE CUMULATED WITH THE INDIVIDUAL ACCESS      *@DA33314 02956000
*    OF THE PARTITION AND PROVIDED IN LOTIACC                 *@DA33314 02957000
*-------------------------------------------------------------*@DA33314 02958000
FSECT200 DS    0H                                              @D21ZDVB 02959000
         L     R3,DFWK2NDL         @LOT ENTRY                  @DA33314 02960000
         LTR   R3,R3               SYSTEM LIBRARY OR SDL?      @DA33314 02961000
         BNZ   FSECT300            NO,  --------->             @DA33314 02962000
         L     R3,LPBPTR           GET SYSTEM LOT ENTRY        @DA33314 02963000
         USING INLCLPT,R3                                      @DA33314 02964000
         L     R3,LPTBILOT         BEGIN OF LOT POOL, FIRST ENTRY IS   *02965000
                                   SYSTEM LOT                  @D51IDMZ 02966000
         USING INLCLOTP,R3                                     @D51IDMZ 02967000
         LA    R3,LOTPROW          BEGIN OF INLCLOT ENTRY      @D51IDMZ 02968000
         USING INLCLOT,R3                                      @DA33314 02969000
         LA    R3,LOTSRCH                                      @DA33314 02970000
         USING LOTENTRY,R3                                     @DA33314 02971000
         CLC   DFWKNAME(8),CONDTSEC DTSECTAB                   @DA37284 02972000
         BE    FSECT400            YES, ACCESS MUST BE CHECKED @DA37284 02973000
FSECT300 IC    R0,LOTIACC          CUMULATED ACCESS RIGHTS...  @DA33314 02974000
         LR    R2,R0               ... OF LIBRARY AND SUBLIBR  @DA33314 02975000
         SRL   R2,4                ADJUST LIBRARY ACCESS RIGHT @DA33314 02976000
         OR    R0,R2                                           @DA33314 02977000
         N     R0,READRGHT         IF AT LEAST READ RIGHT NO ...       *02978000
                                   ...ACCESS CONTROL CHECK     @D21ZDVB 02979000
         BNZ   FSECTEXT            ...IS DONE  --------->      @D52VDMZ 02980000
FSECT400 LA    R1,DFWKALIB         ADDR (PARM_LIST(INTEGRITY)) @D21ZDVB 02981000
         L     RD,ASGSVCX2         BASE_ADDR (SEC_INTERFACE)   @DA33314 02982000
.*    CALL SCYSVC IN AMODE 24                                  @D64ADVB 02983000
         L     RC,DASCYSVC         ENTRY POINT OF SEC ROUTINE  @D64ADVB 02984000
         BASSM RC,RC               SECURITY ROUTINE            @D64ADVB 02985000
.* RETURN CODES                                                         02986000
.* RF = 0 : ACCESS ALLOWED                                              02987000
.*          ALSO GIVEN IF ONLY RECORDING (R0<0) REQUESTED               02988000
.* RF = 4 : NO ACCESS CONTROL SUPPORT (NOT POSSIBLE IF SEC=YES)         02989000
.* RF = 8 : ACCESS VIOLATION                                            02990000
.* RF =12 : SUBLIB OR MEMBER PROFILE NOT IN DTSECTAB                    02991000
.* RF =16 : ACCESS CONTROL PROCESSING ERROR                             02992000
         DROP  R2                                              @D64ADVB 02993000
         DROP  R3                                              @D64ADVB 02994000
FSECTEXT DS    0H                 ROUTINE EXIT                 @D52VDMZ 02995000
         L     R9,DAFETCH         RELOAD FETCH BASE            @D52VDMZ 02996000
         BSM   0,LINK1            ==========>                  @D64ADVB 02997000
         SPACE 1                                               @D21ZDVB 02998000
         DROP  R9                 RELEASE BASE                 @D52VDMZ 02999000
         EJECT                                                 @D35EDJB 03000000
*--------------------------------------------------------------@D64ADVB 03001000
*   ROUTINE NAME:  FRESHADE                                    @D64ADVB 03002000
*   MODULE:        SGDFCH                                      @D64ADVB 03003000
*   FUNCTION:      FREES SHADOW ENTRY IN CASE OF SECURITY      @D64ADVB 03004000
*                  VIOLATION                                   @D64ADVB 03005000
*   CALLER:        FETCH BASE                                  @D64ADVB 03006000
*   INPUT:         NONE                                        @D64ADVB 03007000
*   OUTPUT:        NONE                                        @D64ADVB 03008000
*   RETURN CODES:  NONE                                        @D64ADVB 03009000
*   RETURN:        CALLER                                      @D64ADVB 03010000
*   ERROR EXIT:    HARDWAIT IN CASE OF FREEVIS ERROR           @D64ADVB 03011000
*-------------------------------------------------------------*@D64ADVB 03012000
         SPACE 1                                               @D64ADVB 03013000
*SGLINK  FRESHADE,S,INPUT=(R8,RA,RB),OUTPUT=(),                        *03014000
               WORK=(R0-R7)                                    @D64ADVB 03015000
FRESHADE DS    0H                                              @D64ADVB 03016000
         BALR  R9,0               ESTABLISH BASE               @D64ADVB 03017000
         USING *,R9                                            @D64ADVB 03018000
         LA    R9,0(,R9)          CLEAR HIGH ORDERED BIT       @D64ADVB 03019000
         L     R1,DFWKUSEN        GET ADDR(ENTRY) IN USERLIST  @D21ZDVB 03020000
         LTR   R1,R1              ....  IF NOT PROVIDED        @D21ZDVB 03021000
         BZ    FRESHEXT           ....  RETURN   ---------->   @D64ADVB 03022000
         TM    DFWKFLAG,SDLFORM   DIR_ENTRY IN SDL FORMAT      @D21ZDVB 03023000
         BZ    FRESH100           NO,  --------->              @D64ADVB 03024000
         USING INLCSDLE,R1                                     @D21ZDVB 03025000
         XI    SDLEFLG,SDLEBNF+ACTIVE DE IS INVALID            @D21ZDVB 03026000
         B     FRESHEXT           =========>                   @D64ADVB 03027000
         DROP  R1                                              @D21ZDVB 03028000
         USING DIRECTRY,R1        ADDR (LOCAL_LIST ENTRY)      @D21ZDVB 03029000
FRESH100 LA    R4,LDVSE           ADDRESS OF VSE_FORM LOAD     @D64ADVB 03030000
         LA    R5,STVSE           ADDRESS OF VSE_FORM STORE    @D21ZDVB 03031000
         LA    R3,DIRLIMN         DIRN NEW_DE MINIMUM          @D21ZDVB 03032000
         TM    DIRCOPY,DIRVSEID   VSE_FORMAT                   @D21ZDVB 03033000
         BO    FRESH200           YES,  --------->             @D64ADVB 03034000
         LA    R3,DIRLIMO         DIRN OLD_DE MINIMUM          @D21ZDVB 03035000
         LA    R4,ICMOLD          ADDRESS OF OLD_FORM LOAD     @D21ZDVB 03036000
         LA    R5,STMOLD          ADDRESS OF OLD_FORM STORE    @D21ZDVB 03037000
FRESH200 EX    R3,CLILENTR        ADDRESS OF GETVIS COPY USED  @D64ADVB 03038000
         BL    FRESHEXT           NO,  =========>              @D64ADVB 03039000
         EX    R0,0(R4)           ADDR (GETVIS COPY)           @D21ZDVB 03040000
         LTR   R2,R2              COPY AVAILABLE               @D21ZDVB 03041000
         BZ    FRESHEXT           NO,  =========>              @D64ADVB 03042000
         SPACE 1                                               @D21ZDVB 03043000
* RESET POINTER TO SHADOW ENTRY                                @D21ZDVB 03044000
         SPACE 1                                               @D21ZDVB 03045000
         SLR   R0,R0              CLEAR VALUE OF @(GETVIS-COPY)@D21ZDVB 03046000
         EX    R0,0(R5)           ADDR (GETVIS COPY)           @D21ZDVB 03047000
         TM    DFCBSW1,DIRGTVIS   GETVIS FOR DIR_COPY DONE     @D21ZDVB 03048000
         BNO   FRESHEXT           NO, =========>               @D64ADVB 03049000
         DROP  R1                                              @D21ZDVB 03050000
         L     R1,DFWKCOMG        DEQUEUE ...                  @D21ZDVB 03051000
         USING COMREG,R1                                       @D21ZDVB 03052000
         L     R0,SDLEFORW(,R2)   ... SHADOW DE_ENTRY          @D21ZDVB 03053000
         ST    R0,IJBDECPY        ... FROM DE_COPY-CHAIN       @D21ZDVB 03054000
         DROP  R1                                              @D21ZDVB 03055000
         SPACE 1                                               @D64ADVB 03056000
*     ESTABLISH DIRECTORY SEARCH TASK                          @D64ADVB 03057000
         SPACE 1                                               @D64ADVB 03058000
         LR    R0,R8              SAVE RETURN ADDRESS          @D64ADVB 03059000
         LR    R1,R9              SAVE BASE OF ROUTINE         @D64ADVB 03060000
         SLR   R4,R4               INDICATE DIR_SEARCH         @D61EDMZ 03061000
*SGLINK  FTCHTASK,INPUT=(R4,R7,RA,RB),OUTPUT=(RD),                     *03062000
               WORK=(R3,R5,R6,R8,RC,RE,RF)                     @D61EDMZ 03063000
         L     LINK2,DASYSTSK                                  @D61EDMZ 03064000
         BALR  LINK2,LINK2        ACTIVATE DIR SEARCH TASK     @D61EDMZ 03065000
         LR    R8,R0              RESET RETURN ADDRESS         @D64ADVB 03066000
         LR    R9,R1              RESET BASE OF ROUTINE        @D64ADVB 03067000
         ST    RA,ORG10(RD)       SAVE REQUESTOR'S TCB ADDRESS @D64ADVB 03068000
         L     RA,TCBPTR          ADDR (TCB OF DIR_SEARCH_TASK)@D21ZDVB 03069000
         LA    R0,SDLCLEN         GET LENGTH                   @D21ZDVB 03070000
         LR    R1,R2              ... AND ADDRESS(GETVIS-COPY) @D21ZDVB 03071000
*        SFREEVIS ADDRESS=(1),LENGTH=(0),SPACE=YES             @D51IDMZ 03072000
         SFREEVIS ADDRESS=(1),LENGTH=(0),SPACE=YES             @D51IDMZ 03073000
         LA    R5,60              ERROR INDICATOR              @D21ZDVB 03074000
         LTR   RF,RF              FREEVIS ERROR                @D21ZDVB 03075000
         BNZ   FRESHWAI           YES, --------->              @D64ADVB 03076000
         L     RA,ORG10(RD)       RE-ESTABLISH TCB_ADDR        @D21ZDVB 03077000
         SPACE 1                                               @D64ADVB 03078000
*     RE-ESTABLISH REQUESTOR'S TASK                            @D64ADVB 03079000
         SPACE 1                                               @D64ADVB 03080000
         L     R5,ASRQTAB          ADDR RESOURCE ANCHOR TABLE  @D61RDVB 03081000
         LA    R5,SRQFDIR-SRQTAB(,R5) ADDR OF RESOURCE QUEUE   @D61RDVB 03082000
*SGLINK  USERTASK,INPUT=(R5,R7,RA,RB,RD),WORK=()               @D64ADVB 03083000
         L     LINK2,DAUSTASK                                  @D61EDMZ 03084000
         BALR  LINK2,LINK2        DEACTIVATE DIRECTORY SEARCH  @D61EDMZ 03085000
         LA    RF,24              PROVIDE INTERNAL RETURN CODE @D21ZDVB 03086000
FRESHEXT DS    0H                 ROUTINE EXIT                 @D64ADVB 03087000
         L     R9,DAFETCH         RELOAD FETCH BASE            @D64ADVB 03088000
         DROP  R9                 RELEASE BASE                 @D64ADVB 03089000
         BSM   0,LINK1            =========>                   @D64ADVB 03090000
         SPACE 1                                               @D64ADVB 03091000
FRESHWAI DS    0H                                              @D64ADVB 03092000
         L     R9,DAFETCH         RELOAD FETCH BASE            @D52VDMZ 03093000
         USING FETCH,R9                                        @D52VDMZ 03094000
         B     DIRHWT             YES, =========> (HARDWAIT)   @D21ZDVB 03095000
         DROP  R9                 RELEASE BASE                 @D64ADVB 03096000
         EJECT                                                 @D35EDJB 03097000
*-------------------------------------------------------------          03098000
*   ROUTINE NAME:  MONPHL                                      @D61NDMZ 03099000
*   MODULE:        SGDFCH                                      @D61NDMZ 03100000
*   FUNCTION:      MONITORS PHASE LOAD REQUESTS                @D61NDMZ 03101000
*   CALLER:        FETCH BASE                                  @D61NDMZ 03102000
*   INPUT:         R1  : ADDR(PHASENAME)                       @D61NDMZ 03103000
*                  R7  : LINK REGISTER                         @D61NDMZ 03104000
*   OUTPUT:        NONE                                        @D61NDMZ 03105000
*   RETURN CODES:  NONE                                        @D61NDMZ 03106000
*   CALLED ROUTINE: NONE                                       @D61NDMZ 03107000
*   MODE:          AMODE(31)                                   @D61NDMZ 03108000
*   RETURN:        CALLER                                      @D61NDMZ 03109000
*   ERROR EXIT:    NONE                                        @D61NDMZ 03110000
*   WORK REGISTER                                                       03111000
*     R0,R2,R3,R4,R5,R6,R8,R9                                           03112000
*-------------------------------------------------------------*         03113000
         SPACE 1                                                        03114000
MONPHL   DS    0H                                              @D61NDMZ 03115000
         BALR  R9,0                ESTABLISH BASE              @D61NDMZ 03116000
         USING *,R9                                            @D61NDMZ 03117000
         LA    R9,0(,R9)           CLEAR FIRST BYTE            @D61NDMZ 03118000
         L     R2,ASVASVDL         ADDR OF SVA DL IN SUP       @D61NDMZ 03119000
         USING SVASVDL,R2                                      @D61NDMZ 03120000
         ICM   R2,15,AMODCOV1      MONITOR PHASE TABLE AVAIL.? @D61NDMZ 03121000
         DROP  R2                  RELEASE SVASVDL             @D61NDMZ 03122000
         BZ    MONPEXT             NO, NOTHING TO DO => EXIT   @D61NDMZ 03123000
******************************************************************      03124000
* PREPARE REGISTERS                                              *      03125000
*    R0 = LENGTH OF LIST ELEMENT                                 *      03126000
*    R2 = PTR TO BEGIN OF LIST (ONE ENTRY BEFORE FIRST ELEMENT)  *      03127000
*    R4 = LENGTH OF LIST TO BE CHECKED (NO OF ENTRIES * LENGTH OF       03128000
*         ONE ENTRY)                                                    03129000
         LA    R0,8                LENGTH OF ENTRY             @D61NDMZ 03130000
         L     R4,0(R2)            R4=NO OF ENTRIES ..         @D61NDMZ 03131000
         SLL   R4,3                .. * LENGTH OF ELEMENT      @D61NDMZ 03132000
         SPACE 1                                                     MZ 03133000
*--------------------------------------------------------------------MZ 03134000
*    BINARY SEARCH ROUTINE TAKEN OUT OF SGDFCH                       MZ 03135000
*--------------------------------------------------------------------MZ 03136000
***************************************************************      MZ 03137000
*      R4 = LENGTH OF SCANNED LIST                            *      MZ 03138000
***************************************************************      MZ 03139000
         LCR   R5,R0             GET TWO'S COMPLEMENT OF R0    @D61NDMZ 03140000
         NR    R5,R0             R5 : RIGHTMOST BIT OF R0      @D61NDMZ 03141000
         LR    R3,R2             R3 : POINTS TO BEGIN OF LIST  @D61NDMZ 03142000
         LA    R3,0(,R3)           CLEAR FIRST BYTE            @D61NDMZ 03143000
         LR    R6,R0             R6 : LENGTH OF ELEMENT        @D61NDMZ 03144000
MONSCHI  ALR   R4,R6             R4 : LENGTH OF LIST           @D61NDMZ 03145000
MONSCLO  LR    R6,R4              EVEN NUMBER OF               @D61NDMZ 03146000
         NR    R6,R5                    ENTRIES WITHIN DELTA ? @D61NDMZ 03147000
         BZ    MONEDEL            YES --->                     @D61NDMZ 03148000
         SLR   R4,R0              MAKE DELTA EVEN              @D61NDMZ 03149000
         LR    R6,R0                                           @D61NDMZ 03150000
MONEDEL  SRA   R4,L1              DELTA := DELTA/2             @D61NDMZ 03151000
         BZ    MONPEXT            MORE ENTRIES ---> NO, PHASE NOT FOUND 03152000
         ALR   R3,R4              OFFSET := OFFSET + DELTA     @D61NDMZ 03153000
         CLC   D0(L8,R3),D0(R1)   ENTRY = SEARCH ARGUMENT ?    @D61NDMZ 03154000
         BE    MONPFND            YES ---> ENTRY FOUND         @D61NDMZ 03155000
         BL    MONSCHI            ---> ENTRY LT SEARCH ARGUMENT@D61NDMZ 03156000
         SLR   R3,R4                                           @D61NDMZ 03157000
         B     MONSCLO            ---> ENTRY GT SEARCH ARGUMENT@D61NDMZ 03158000
MONPFND  DS    0H                 PHASE FOUND                  @D61NDMZ 03159000
         LA    R2,8(,R2)          ADDRESS FIRST ELEMENT IN LIST@D61NDMZ 03160000
         SR    R3,R2              OFFSET OF ELEMENT IN LIST    @D61NDMZ 03161000
         SRL   R3,3               DIVIDED BY 8 = NO OF ELEM.   @D61NDMZ 03162000
         A     R3,MONCALLN        ADD START VALUE              @D61NDMZ 03163000
         STH   R3,LAB+2           MODIFY INSTRUCTION           @D61NDMZ 03164000
LAB      MC    0(R8),15                                        @D61NDMZ 03165000
MONPEXT  DS    0H                 EXIT CODE                    @D61NDMZ 03166000
         L     R9,DAFETCH         RELOAD FETCH BASE            @D61NDMZ 03167000
         BSM   0,LINK2                                         @D61NDMZ 03168000
         DS    0F                                              @D61NDMZ 03169000
MONCALLN DC    XL4'0FA0'          MC NO FOR FIRST PHASE        @D61NDMZ 03170000
         SPACE 1                                                        03171000
         DROP  R9                                                       03172000
         EJECT                                                          03173000
*-------------------------------------------------------------*@D369DVB 03174000
*  ROUTINE PROLOGUE: FCHMOVE                                   @D35WDVB 03175000
*    ROUTINE NAME: FCHMOVE                                     @D35WDVB 03176000
*    MODULE:       FETCH BASE                                  @D35WDVB 03177000
*    FUNCTION:     SCANS THE SDL - IF ANY - FOR A REQUESTED    @D35WDVB 03178000
*                  PHASE . IF THE PHASE IS FOUND IN THE SDL    @D35WDVB 03179000
*                  AND RESIDES IN THE SVA THE PHASE (TEXT)     @D35WDVB 03180000
*                  IS MOVED INTO SPECIFIED STORAGE AREA ( E.G. @D35WDVB 03181000
*                  LTA). THE PHASE MUST BE SELFRELOCATABLE.    @D35WDVB 03182000
*    CALLER:       SVC 2 (SGCFCH), SVC 4  (SGCFCH),            @D149DVB 03183000
*                  SVC 48 (SGSVC)                              @D149DVB 03184000
*    OPERATION: 1. IF SDL NOT YET BUILT RETURN WITH RC=4.      @D35WDVB 03185000
*               2. IF SDL IS BEING UPDATED GOTO RESVCX AND     @D35WDVB 03186000
*                  POST REUESTEING TASK IDRABOUND.             @D35WDVB 03187000
*               3. GATE SDL (BIT DFCBSWM).                     @D35WDVB 03188000
*               4. CALL BINSRCH THAT MEANS SCAN SDL .          @D35WDVB 03189000
*               5. IF PHASE IN SDL THAN DO:                    @D35WDVB 03190000
*                     IF PHASE IS ACTIVE THAN DO:              @D35WDVB 03191000
*                       IF PHASE NOT MOVEABLE SET RC=8,        @D35WDVB 03192000
*                       ELSE MOVE PHASE INTO SPECIFIED AREA    @D35WDVB 03193000
*                       AND SET RC=0                           @D35WDVB 03194000
*                    ELSE SET RC=4                             @D35WDVB 03195000
*                  ELSE SET RC=4.                              @D35WDVB 03196000
*               6. RETURN .                                    @D35WDVB 03197000
*    INPUT:        REG0  POINTS TO MOVE AREA                   @D35WDVB 03198000
*                  REG1  POINTS TO PHASENAME                   @D35WDVB 03199000
*                  REG7  POINTS TO FETCHWORK IN TCB OR SAVE AR.@D369DVB 03200000
*                  REG10 TCB POINTER OF REQUESTOR              @D61FDMZ 03201000
*                  REG11 POINTS TO FETCH DATA SECTION          @D61FDMZ 03202000
*                  REG14 RETURN ADDRESS                        @D61FDMZ 03203000
*                  REG15 BASE                                  @D61FDMZ 03204000
*    OUTPUT:       REG1  POINTS TO SDL ENTRY IF RC=8           @D35WDVB 03205000
*                  REG15 CONTAINS RC                           @D35WDVB 03206000
*    RETURN CODES: 0 -- PHASE MOVED                            @D35WDVB 03207000
*                  4 -- PHASE NOT MOVED                        @D149DVB 03208000
*                  8 -- PHASE NOT INSIDE LTA / CRT AREA        @D149DVB 03209000
*                 12 -- SECURITY VIOLATION                     @D149DVB 03210000
*    CALLING SEQUENCE:                                         @D149DVB 03211000
*                 L   R7,DFCBSAV                               @D149DVB 03212000
*                 L   RB,AFCHDAT                               @D149DVB 03213000
*                 L   RF,DAFCHMOV-DFCB(RB)                     @D149DVB 03214000
*                 AMODESW CALL,REGS=(RE,RF)                    @D61FDMZ 03215000
*                 .......                                      @D61FDMZ 03216000
*                 AMODESW RETURN,REG=(RE)                      @D61FDMZ 03217000
*    CALLED ROUTINES: BINSRCH                                  @D35WDVB 03218000
*    RETURN:          RETURN TO CALLER                         @D35WDVB 03219000
*    ERROR EXITS:     NONE                                     @D35WDVB 03220000
*    AMODE 31   :     THE ROUTINE EXECUTES IN AMODE 31         @D61FDMZ 03221000
*-------------------------------------------------------------*@D369DVB 03222000
         SPACE 2                                               @D369DVB 03223000
*SGLINK  FCHMOVE,INPUT=(R0,R1,R7,RA,RB,RE,RF),OUTPUT=(R1,RF),WORK=(R9)  03224000
         USING FCHMOVE,RF                                      @D14BDVB 03225000
FCHMOVE  DS    0H                  ENTRY POINT                 @D35WDVB 03226000
         LA    R9,4                SET RC                      @D14BDVB 03227000
         STM   R0,R6,8(R7)         SAVE CALLER'S REGS          @D35WDVB 03228000
         MVC   DFWKNAME,0(R1)      MOVE REQ. PHASENAME         @D64ADMZ 03229000
* USER'S R1 MAY BE ABOVE 16MB. IF FCHMOVE FAILS, SVC 4 PROCESSING IS    03230000
* CALLED, WHICH CAN NOT HANDLE PARAMETERS ABOVE 16MB. THEREFORE         03231000
* DFWKNAME IS USED.                                                     03232000
         LA    R1,DFWKNAME         USE DFWKNAME INSTEAD OF R1  @D64ADMZ 03233000
         SLR   R2,R2               PROVIDE                     @D36JDVB 03234000
         ST    R1,0(R7)            ....    FETCH               @D36JDVB 03235000
         ST    R2,4(R7)            ....          INTERFACE     @D36JDVB 03236000
         TM    IJBSVAFL,SDLBUILT      SDL ALREADY BUILT        @D51GDMZ 03237000
         BZ    FMVEXT              NO  --->                    @D36JDVB 03238000
PCKADR1J EQU   *                   PGM CHECK IF <R1> INVALID   @D36JDVB 03239000
*SGLINK  PRODEXIT,WORK=(NONE),OUTPUT=(RF)                      @D61EDMZ 03240000
*        PRODEXIT ACTIVATE,ID=EXPHASE,RC=YES                   @D61EDVB 03241000
         PRODEXIT ACTIVATE,ID=EXPHASE,RC=YES                   @D61EDVB 03242000
         CL    RF,F8               SKIP FETCH PROCESSING?      @D61EDVB 03243000
         L     RF,DAFCHMOV         ... RESET BASE OF ROUTINE   @D61EDVB 03244000
         BE    PREXPST3            YES, --->  NO FURTHER       @D61EDVB 03245000
*                                  ...  FETCH ACTION AT ALL    @D61EDVB 03246000
         CLI   DFWKNAME,DOLLAR     B-TRANSIENT STARTING WITH $ @D61EDMZ 03247000
         BNE   FMVTST1             NO  --->                    @D21ZDVB 03248000
         CLC   DFWKNAME+1(2),CON$$BN+1 LTA PHASE STARTS $$B    @D61EDMZ 03249000
*        CLC   1(2,R1),CON$$BN+1   LTA PHASE NAME STARTS $$B   @D21ZDVB 03250000
         BNE   FMVTST2             NO --->                     @D21ZDVB 03251000
FMVE00   DS    0H                                              @D61FDMZ 03252000
         SPACE 1                                               @D35WDVB 03253000
         L     R9,AFETCH           ADDR (BASE FETCH ROUTINE)   @D14BDVB 03254000
         USING FETCH,R9                                        @D14BDVB 03255000
         LA    R0,SDLELEN          LEN (SDL_ENTRY)             @D14BDVB 03256000
         LA    R1,DFWKNAME         R1= ADDR(PHASENAME)         @D61EDMZ 03257000
*SGLINK  BINSRCH,INPUT=(R0,R1,R6,R9,RA,RB),OUTPUT=(R1,RF),             *03258000
               WORK=(R2,R3,R4,R5)                              @D369DVB 03259000
         BAL   LINK3,BINSRCH       GOTO BINARY SEARCH          @D35WDVB 03260000
         DROP  R9                                              @D14BDVB 03261000
         LTR   R9,RF               SAVE RETURN CODE            @D14BDVB 03262000
         L     RF,DAFCHMOV         RESET BASE OF FCHMOVE ROUT  @D14BDVB 03263000
         BZ    FMVEFD              BRANCH IF ENTRY FOUND       @D14BDVB 03264000
         SPACE 1                                               @D14BDVB 03265000
* --------------------             IF NOT IN SDL RC=4          @D35WDVB 03266000
         SPACE 1                                               @D14BDVB 03267000
FMVEXT   DS    0H                                              @D61FDMZ 03268000
         TM    IJBFLG08,IJBSAENV   DO NOT SKIP SDL SEARCH IN ..@D61DDMZ 03269000
         BO    FMVEXT2             SA ENV. ONLY SDL AVAILABLE  @D61DDMZ 03270000
         OI    DFWKLIST-DFWKPHPT(R7),SDLUPD NO SDL SEARCH      @D64ADVB 03271000
FMVEXT2  MVI   DFWKSWRQ,AUTHREQ    INDICATE NO PARAMETER VALIDATION    *03272000
                                            REQUIRED           @D64ADVB 03273000
         LM    R0,R6,D8(R7)        ESTABLISH SAVED REGISTERS   @D369DHD 03274000
         LR    RF,R9               PROVIDE RETURN CODE         @D14BDVB 03275000
*        AMODESW RETURN,REG=(RE)   =====>   RETURN             @D61FDMZ 03276000
         AMODESW RETURN,REG=(RE)   =====>   RETURN             @D61FDMZ 03277000
         SPACE 1                                               @D35WDVB 03278000
*---   NOTE: REG 1 POINTS TO DIRECTORY ENTRY IN SDL ----------*@D35WDVB 03279000
         SPACE 1                                               @D35WDVB 03280000
         USING INLCSDLE,R1                                     @D14BDVB 03281000
FMVEFD   LA    R9,4                                            @D14BDVB 03282000
         TM    SDLEFLG,SDLEBAC     IS SDL ENTRY ALREADY ACTIVE @D14BDVB 03283000
         BZ    FMVEXT              NO --->                     @D35WDVB 03284000
         ST    R1,DFWKPHPT-DFWKPHPT(R7)  PARAMETER LIST FOR    @D14BDVB 03285000
         MVI   DFWKLIST-DFWKPHPT(R7),DENTRY  FETCH INTERFACE   @D14BDVB 03286000
         TM    SDLEFLG,SELFREL+SVAPHASE   PHASE IN SVA         @D14BDVB 03287000
         BNO   FMVEXT              NO --->                     @D35WDVB 03288000
         SPACE 1                                                        03289000
         MVC   TCBCINF(8),CMVMODE  INDICATE 'MOVE_MODE'        @D14BDVB 03290000
         MVC   TCBCINF+8(L'DFWKNAME),0(R1) PHASENAME SDL_ENTRY @D14BDVB 03291000
         LA    R0,TCBCINF                                      @D14BDVB 03292000
         ST    R0,XXUSAREA         ADDR(MOVE_MODE_ENTRY) TO    @D37ZDVB 03293000
         DEBUG DSPLYDAT,XXDBGMC         DEBUG FEATURE          @D37ZDVB 03294000
         L     R2,8(R7)            GET LOADPOINT               @D35WDVB 03295000
         LA    R9,8                INDICATE PHASE OUTSIDE LIMIT@D367DVB 03296000
         L     R6,DISPAD           GET DISPATCHER ADDRESS      @D36IDVB 03297000
         L     R5,ALTA             START ADDRESS OF LTA        @D35WDVB 03298000
         LR    R0,R5               SET LTA                     @D35WDVB 03299000
         AH    R5,IJBLLTA                  LIMITS              @D64ADVB 03300000
         L     R3,SDLEPLN          LEN(PHASE)                  @D14BDVB 03301000
         LR    R6,R2               COPY LP                     @D35WDVB 03302000
         ALR   R6,R3               AND CALCULATE END ADDRESS   @D35WDVB 03303000
         CLR   R2,R0               )                           @D35WDVB 03304000
         BL    FMVEXT              )   CHECK IF PHASE IS MOVED @D35WDVB 03305000
         CLR   R6,R5               )     INSIDE THE CALCULATED @D35WDVB 03306000
         BH    FMVEXT              )     LIMIT. BRANCH IF NOT  @D35WDVB 03307000
         SR    R9,R9               DFWKALIB=0 USED AS INDICATION FOR    03308000
         ST    R9,DFWKALIB         IJBVEND                     @D64ADMZ 03309000
         L     R9,SDLEENP          OFFSET OF ENTRY POINT       @D14BDVB 03310000
         L     R4,SDLESVAP         ACTUAL ENTRY_POINT IN SVA   @D14BDVB 03311000
         SLR   R4,R9               LOAD POINT IN SVA           @D14BDVB 03312000
         LR    R5,R3               DUPLICATE LENGTH            @D35WDVB 03313000
         LR    R0,R2                                           @D35WDVB 03314000
         MVCL  R2,R4               MOVE                        @D35WDVB 03315000
PCKADR1K EQU   *                   PGM CHECK IF <R2,R4> INVALID@D36JDVB 03316000
         MC    $TRPGML4,$MCSDAID                               @D35WDVB 03317000
         DROP  R1                                              @D35WDVB 03318000
         SPACE 1                                                        03319000
*SGLINK  PRODEXIT,WORK=(NONE),OUTPUT=(NONE)                             03320000
*        PRODEXIT ACTIVATE,ID=POSTFCH                          @D61EDMZ 03321000
         PRODEXIT ACTIVATE,ID=POSTFCH                                   03322000
         L     RF,DAFCHMOV         RESET BASE OF FCHMOVE ROU.  @D61EDMZ 03323000
PREXPST3 DS    0H                                              @D61EDVB 03324000
         SPACE 1                                                        03325000
         L     R9,IJBINSTR         TESTMON ON ?                @D61NDMZ 03326000
         LTR   R9,R9                                           @D61NDMZ 03327000
         BNM   FMVTST3             NO                          @D61NDMZ 03328000
         LR    RF,R7               R7 USED AS LINK2 REGISTER   @D61NDMZ 03329000
         L     LINK2,DAMONPHL      GET ADDR OF MONITOR ROUTINE @D61NDMZ 03330000
         BASSM LINK2,LINK2         MONITOR LOAD REQUEST        @D61NDMZ 03331000
         LR    R7,RF               RESTORE R7                  @D61NDMZ 03332000
         L     RF,DAFCHMOV         RESET BASE OF FCHMOVE ROU.  @D61NDMZ 03333000
FMVTST3  DS    0H                  MONITOR REQ. PHASE          @D61NDMZ 03334000
         SLR   R9,R9               RC = 0                      @D365DVB 03335000
         B     FMVEXT              --->                        @D35WDVB 03336000
         SPACE 1                                               @D37ZDVB 03337000
FMVTST1  TM    SYSFLAG2,IJBSEC     SECURITY CHECK ACTIVE       @D21ZDVB 03338000
         BZ    FMVEXT2             NO  --->                    @D21ZDVB 03339000
         B     FMVE28                                          @D21ZDVB 03340000
FMVTST2  TM    SYSFLAG2,IJBSEC     SECURITY CHECK ACTIVE       @D21ZDVB 03341000
         BZ    FMVE00              NO  --->                    @D21ZDVB 03342000
FMVE28   TM    DFWKSWRQ,SVC02REQ   SVC 2 REQUEST               @D64ADVB 03343000
         BZ    FMVE00              NO  --->                    @DA35100 03344000
         LA    R9,12               B-TRANSIENTS DOES NOT       @DA35100 03345000
         B     FMVEXT2               START WITH $$B            @D21ZDVB 03346000
         SPACE 1                                               @D21ZDVB 03347000
CMVMODE  DC    C'MOVEMODE'                                     @D37ZDVB 03348000
         DROP  RF                                              @D14BDVB 03349000
         SPACE 1                                                        03350000
*-------------------------------------------------------------*@D14CDVB 03351000
         EJECT                                                 @D35WDVB 03352000
*-------------------------------------------------------------*@D369DVB 03353000
*        PROLOGUE:     RELLPT                                  @D35EDVB 03354000
*        ROUTINE NAME: RELLPT                                  @D35EDVB 03355000
*        MACRO :       SGDFCH                                  @D35EDVB 03356000
*        FUNCTION:     CALCULATES RELOCATION FACTOR AS FUNCTION@D35EDVB 03357000
*                      OF LOAD POINT AND PARTITION START AT    @D35EDVB 03358000
*                      LINK EDIT AS WELL AS AT REQUEST TIME AND@D35EDVB 03359000
*                      - IF PROVIDED - OVERWRITE INFORMATION.  @D35EDVB 03360000
*        CALLER:       FGETTXT, FETCH-BASE                     @D35EDVB 03361000
*        OPERATION: 1. GET LOAD AND ENTRY ADDRESS OF LINK TIME.@D35EDVB 03362000
*                   2. IF PHASE RELOCATABLE DO:                @D35EDVB 03363000
*                      GET DELTA OF LOAD AND PARTITION START AT@D35EDVB 03364000
*                      LINK EDIT TIME; GET RELOCATION INFORM.  @D35EDVB 03365000
*                   3. SOLVE OVERWRITE PARAMETERS - IF PROVIDED@D35EDVB 03366000
*                   4. RETURN.                                 @D35EDVB 03367000
*        INPUT:        FCHWORK ( EP, LP, ORIG EP)              @D35EDVB 03368000
*        OUTPUT:       REG0  ENTRY POINT                       @D35EDVB 03369000
*                      REG1  LOAD POINT                        @D35EDVB 03370000
*                      REG4  NEG. LP AT LINK EDIT TIME         @D14BDBC 03371000
*                                                              @D35EDVB 03372000
*        CALLING SEQUENCE:                                     @D149DVB 03373000
*                      LA    RF,DARELLPT                       @D149DVB 03374000
*                      BALR  RE,RF                             @D149DVB 03375000
*        CALLED ROUTINES:                                      @D35EDVB 03376000
*                      NONE                                    @D35EDVB 03377000
*        RETURN:       CALLER                                  @D35EDVB 03378000
*        ERROR EXITS:  NONE                                    @D35EDVB 03379000
*        REFERENCED DATA:                                      @D35EDVB 03380000
*                      FCHWORK (UPDATE)                        @D35EDVB 03381000
*                      PCB, PIB (READ, EXTERNAL)               @D149DVB 03382000
*-------------------------------------------------------------*@D369DVB 03383000
         SPACE 2                                               @D35EDVB 03384000
*SGLINK  RELLPT,INPUT=(RA,RE,RF),OUTPUT=(R0,R1,R4),WORK=(R2,R3,R5,R6)   03385000
RELLPT   DS    0H                  ENTRY POINT                 @D35EDVB 03386000
         USING *,RF                PROVIDE ADDRESSIBILTY       @D14CDVB 03387000
         SLR   R4,R4                                           @D365DVB 03388000
         L     R2,DFWKELPL         GET LOAD POINT OF PHASE     @D14CDVB 03389000
         L     R3,DFWKEEPL         GET ENTRY POINT             @D14CDVB 03390000
         TM    DFWKESWT,RELTYP     RELOCATABLE PHASE           @D14CDVB 03391000
         BZ    FRPT30              NO --->                     @D35EDVB 03392000
         TM    SYSFLAG2,IPLBIT     IPL IN PROGESS              @D35EDVB 03393000
         BNO   FRPT10              NO  --->                    @D35EDVB 03394000
         LH    R4,PIK              GET CURRENT PIK             @D51IDMZ 03395000
         SRL   R4,2                GET OFFSET INTO PCBATAB     @D51IDMZ 03396000
         A     R4,APCBATAB         POINT TO PCB ADDRESS        @D51IDMZ 03397000
         L     R4,0(,R4)           GET PCB ADDRESS             @D51IDMZ 03398000
         USING PCBADR,R4           ADDRESS SYSTEM PCB          @D51IDMZ 03399000
         L     R4,PCEPIB           GET AR PIB                  @D51IDMZ 03400000
         USING PIBADR,R4           ADDRESS SYSTEM PIB          @D51IDMZ 03401000
         L     R4,PIBSAV2N         ADDR OF LTA OR PART. SAVEAR.@D51IDMZ 03402000
         DROP  R4                                              @D51IDMZ 03403000
         CL    R4,ALTASAVE         REQUESTOR IN LTA            @D64ADVB 03404000
         BNE   FRPT20              NO, PIBSAV2N=PART.SAVEAREA  @D51IDMZ 03405000
         L     R4,ASYSPCB          LTA ACTIVE, GET SYSPCB PTR  @D51IDMZ 03406000
         USING PCBADR,R4           ADDRESS SYSPCB              @D51IDMZ 03407000
         L     R4,PCEPIB           GET AR PIB                  @D51IDMZ 03408000
         USING PIBADR,R4           ADDRESS AR PIB              @D51IDMZ 03409000
         L     R4,PIBSAV2N         GET PARTITION SAVE AREA     @D51IDMZ 03410000
         DROP  R4                                              @D51IDMZ 03411000
         B     FRPT20                                          @D35EDVB 03412000
FRPT10   LH    R4,PIK              GET PIK POINTER             @D51IDMZ 03413000
         SRA   R4,2                PIK VALUE --> OFFS IN PCBTAB@D14CDVB 03414000
         BNZ   FRPT15              ATTENTION TASK              @D35EDVB 03415000
         LA    R4,4                   POINT TO BG SMCB         @D35EDVB 03416000
FRPT15   L     R5,APCBATAB         GET ADDRESS OF PCBATAB      @D51IDMZ 03417000
         L     R5,0(R4,R5)         POINTER TO REQUESTOR'S PCB  @D51IDMZ 03418000
         USING PCBADR,R5                                       @D35EDVB 03419000
         L     R4,SMPSAVE          POINTER TO ACTUAL SAVE AREA @D35EDVB 03420000
         DROP  R5                                              @D35EDVB 03421000
FRPT20   LA    R4,120(R4)          SKIP  SAVE AREA             @D14CDVB 03422000
         L     R5,DFWKEBGP         PARTITION BEGIN AT LINKAGE          *03423000
                                   .... EDIT TIME              @D14CDVB 03424000
         SLR   R4,R5               CALCULATE DELTA             @D35EDVB 03425000
         ALR   R2,R4               RELOCATE LOADPOINT          @D35EDVB 03426000
         ALR   R3,R4               RELOCATE ENTRY POINT        @D35EDVB 03427000
         SLR   R4,R2               0 - LP AT LINK EDIT TIME    @D14BDBC 03428000
         SPACE 2                                               @D35EDVB 03429000
FRPT30   L     R0,DFWKOV           GET PROVIDED OVERWRITE INFO         *03430000
                                     ( ZERO IF NOT PASSED )    @D14CDVB 03431000
         LTR   R1,R0               AVAILABLE                   @D35EDVB 03432000
         BZ    FRPT40              NO --->                     @D35EDVB 03433000
         SLR   R1,R2               ADJUST LOAD POINT           @D35EDVB 03434000
         LR    R0,R1               RESPECTIVELY ENTRY POINT    @D35EDVB 03435000
         SPACE 2                                               @D35EDVB 03436000
FRPT40   ALR   R1,R2               CALCULATE LOAD POINT        @D14CDVB 03437000
         ALR   R0,R3               CALCULATE ENTRY POINT       @D35EDVB 03438000
*        AMODESW RETURN,REG=(RE)   ==========>   RETURN        @D64ADVB 03439000
         AMODESW RETURN,REG=(RE)   ==========>   RETURN        @D64ADVB 03440000
         DROP  RA,RB,RF,R6                                     @D14CDVB 03441000
         SPACE 1                                                        03442000
*-------------------------------------------------------------*@D149DVB 03443000
         AIF (NOT &BGDSHR).NDSHR90                             @D14CDHD 03444000
         EJECT                                                 @D14CDHD 03445000
         SGSLDUP ROUT=ENQSLD                                   @D14CDHD 03446000
         AIF ( NOT &SGDFCH).NOPRINX                            @D14CDHD 03447000
         PRINT GEN                                             @D14CDHD 03448000
.NOPRINX ANOP                                                  @D14CDHD 03449000
.NDSHR90 ANOP                                                  @D14CDHD 03450000
*-------------------------------------------------------------*@D14CDVB 03451000
         AIF   (NOT &SGDFCH).PRTGEN                            @D37ZDVB 03452000
         PRINT  NOGEN                                          @D377DVB 03453000
.PRTGEN  ANOP                                                  @D377DVB 03454000
         MEND                                                           03455000
