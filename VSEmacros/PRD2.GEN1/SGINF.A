         MACRO                                                          00001000
         SGINF                                                          00002000
         GBLB  &BGDEBUG                 DEBUG OPTION           @D37ZDWK 00003000
         GBLB  &SGINF                   PRINT CONTROL SWITCH   @D37ZDWK 00004000
         GBLB  &VSE260                  RELEASE CONTROL SWITCH          00005000
         GBLB  &VSE270                  RELEASE CONTROL SWITCH @DTLS    00006000
         GBLB  &VSE280                  RELEASE CONTROL SWITCH @DSCSI   00007000
         GBLB  &VSE410                  RELEASE CONTROL SWITCH @D41ADAP 00007500
***************************************************************         00008000
.*       IBM VSE / ADVANCED FUNCTIONS                         *@D51MDGL 00009000
*        SUPERVISOR - SGINF - 5686-CF7-06                     *@D51MDGL 00010000
*                                                             *@D51MDGL 00011000
*        LICENSED MATERIALS - PROPERTY OF IBM                 *@D51MDGL 00012000
*        THIS MACRO IS "RESTRICTED MATERIALS OF IBM"          *@D51MDGL 00013000
*        5686-CF7 (C) COPYRIGHT IBM CORP. 1977, 2005          *@D66ADAP 00014490
*        SEE COPYRIGHT INSTRUCTIONS                           *@D51MDGL 00015000
*                                                             *@D51MDGL 00016000
***************************************************************         00017000
.*                                                                      00018000
.* /* START OF SPECIFICATIONS ***************************************** 00019000
.*                                                                      00020000
.*01* MODULE TYPE = SUPERVISOR GENERATION MACRO                         00021000
.*                                                                      00022000
.*01* DESCRIPTIVE NAME = SVC X'62' (98) EXTRACT SERVICE        @D149DWK 00023000
.*                       SVC X'69' (105) SUBSID SERVICE        @D149DWK 00024000
.*                                                                      00025000
.*01* NOTES = CHANGE ACTIVITIES                                @D149DWK 00026000
.*     SVC98 - EXTRACT OR MODIFY PUB2-TABLE ENTRIES            @D34YDWK 00027000
.*     SVC98 - ROUTINE MOVED FROM SGERP                        @D35CDFG 00028000
.*     SVC98 - EXTRACT BDY,PUB AND CR+CPUID ADDED              @D35EDWK 00029000
.*     EXTRACT ID=DEVICE ADDED                                 @D14CDWK 00030000
.*     EXTRACT ID=SENSE                                        @D21WDAP 00031000
.*     EXTRACT ID=DEVICE EXTENDED WITH OBR MDR INFO            @D21IDGN 00032000
.*     SUPPORT MORE ADDRESS SPACES   (SPE DY37265)             @D218DKH 00033000
.*     UNATTENDED NODE SUPPORT                                 @D13CDGN 00034000
.*     SOFTWARE RE-IPL (+ GIVE REIPL AUTHORIZATION)            @D31QDHB 00035000
.*     NEW SYSTEM LAYOUT                                       @D51MDRP 00036000
.*     MORE PARTITION SUPPORT                                  @D51IDIS 00037000
.*     MORE PARTITION SUPPORT                                  @D51IDGL 00038000
.*     PROVIDE REAL CPUID INSTEAD OF VM CPUID                  @D51EMGL 00039000
.*     3494 SUPPORT                                            @D61ADRP 00040000
.*     3590 IN 3494 COMPATIBILITY MODE                         @D21ADMK 00041000
.*     MORE THAN 255 TASK SUPPORT                              @D66CDAP 00042000
.*     PROVIDE QDIO DEVICE INFORMATION                         @D66EDAP 00043000
.*     ADD EXTRACT INFO FOR QDIO DEVICES                       @D66EDAP 00044000
.*     CHECK FOR PROGRAMER LOGICAL UNIT INVALID                @DA27916 00045000
.*     RPS INDICATOR DELETED BY EXTRACT PUB                    @DA31016 00046000
.*     EXTRACT MACRO RETURNS INCORR REAL STOR VALUE            @DA33621 00047000
.*     4 K PAGE SUPPORT                                        @DA33314 00048000
.*     PROVIDE GETVIS INFORMATION                              @DA37428 00049000
.*     FIELD=DEVICE WILL PROVIDE REAL DEVICE CODE INFORMATION  @DY45299 00050000
.*     PREVENT LIBRARY SEQ.NO. TEST FOR 3490E-F1A MODELS       @DY45383 00051000
.*     PROVIDE FUNCTION TO RESET GETVIS HIGH-WATER-MARK        @DY45817 00052000
.*     DISABLED LOOP AFTER GETVIS XX,RESET (AFTER DY45817)     @DY45990 00053000
.*     AF 6.7.0 HIPERSOCKETS (EXTEND EXTRACT RECID=QDIO)       @D67FDMZ 00054000
.*     PROVIDE SCSI SPECIFIC INFORMATION                       @DSCSI   00055000
.*                                                                      00056000
.**** END OF SPECIFICATIONS ***************************************** / 00057000
         AIF   (NOT &SGINF).NPRT010                            @D37ZDWK 00058000
         PRINT GEN                                             @D37ZDWK 00059000
.NPRT010 ANOP                                                  @D37ZDWK 00060000
         TITLE 'VSE SUPERVISOR     SGINF      EXTRACT SERV. PROCESSING' 00061000
***************************************************************@D51IDGL 00062000
*                                                             *@D51IDGL 00063000
*              SVC 98 (EXTRACT SERVICES)                      *@D51IDGL 00064000
*                                                             *@D51IDGL 00065000
*  FIXED REGISTER USINGS IN THE WHOLE SVC 98 ARE:             *@D51IDGL 00066000
*  R6 = RETURN REGISTER OF THE FIRST LAYER OF ROUTINES        *@D51IDGL 00067000
*       ALL REGISTERS R0-RA CAN BE USED BY THEM,              *@D51IDGL 00068000
*       BUT REGISTER R0,R1,R4,R5 MAY CHANGE THEIR VALUE       *@D51IDGL 00069000
*       IN SUBROUTINE CALLS.                                  *@D51IDGL 00070000
*  R8 = RETURN REGISTER OF ALL SUBROUTINES OF '2ND LEVEL'     *@D51IDGL 00071000
*  R7 = RETURN REGISTER OF ALL SUBROUTINES OF '3RD LEVEL'     *@D51IDGL 00072000
*  RC = BASE REGISTER FOR ENTRY AND ALL SUBROUTINES           *@D52VDGL 00073000
*  RD = USED AS BASE OF THE MAIN ROUTINES                     *@D52VDGL 00074000
*  RE = POINTER TO USER SUPPLIED PARAMETER FIELD              *@D51IDGL 00075000
*  RF = RETURN CODE REGISTER                                  *@D51IDGL 00076000
*                                                             *@D51IDGL 00077000
***************************************************************@D51IDGL 00078000
.* DSECTS AND EQUATES FOR SVC 98 ARE MOSTLY DEFINED IN SGEND   @D51IDGL 00079000
.*                                                             @D51IDGL 00080000
.* NORMALLY A CALLER IS ONLY PERMITTED TO RETRIEVE/ACCESS      @D51IDGL 00081000
.* FIELDS ANCHORED IN HIS OWN PARTITION.                       @D51IDGL 00082000
.* SPECIAL PRIVILEGES WILL BE GRANTED FOR KEY ZERO CALLERS,    @D51IDGL 00083000
.* OR FOR ALL THOSE CALLERS WHICH HAVE SPECIAL PERMISSION.     @D51IDGL 00084000
.*                                                             @D51IDGL 00085000
XTRPMPK  EQU   X'01'   PERMIT SPECIFICATION OF FOREIGN PIK     @D51IDGL 00086000
XTRPMCU  EQU   X'02'   PERMIT SPECIFICATION OF A CUU           @D51IDGL 00087000
XTRPMPU  EQU   X'04'   PERMIT SPECIFICATION OF A PUB INDEX     @D51IDGL 00088000
XTRGVPT  EQU   X'01'   PART GETVIS INFO REQUESTED              @D51IDGL 00089000
XTRGVSP  EQU   X'02'   DYN.SPACE GETVIS INFO REQUESTED         @D51IDGL 00090000
XTRGVSV  EQU   X'04'   SVA GETVIS INFO REQUESTED               @D51IDGL 00091000
XTRGVLA  EQU   X'20'   ALSO CONSIDER HIGH PART OF GETVIS DATA  @D52VDGL 00092000
XTRGVMB  EQU   X'10'   FOR ID=GETVIS,LOC=BELOW                 @D52VDGL 00093000
XTRGVMA  EQU   X'20'   FOR ID=GETVIS,LOC=ANY                   @D52VDGL 00094000
XTRGVRSE EQU   X'40'   FOR ID=GETVIS,RESET=YES                 @DY45817 00095000
XTRGVNL  EQU   X'80'   DO NO UNBATCH LOCKING FOR PARTITION     @D51IDGL 00096000
XTRIISRV EQU   CICS+SSX  RECOGNIZE II FOR II SERVICES          @D51IDGL 00097000
XTRSAPDT EQU   X'03'   PUB DEVICE TYPE SPECIFIED FOR ID=SAINFO @D61DDGL 00098000
XTRSAEXT EQU   X'04'   EXT. DEV.TYPE CODE SPEC. FOR ID=SAINFO  @D61DDGL 00099000
         TITLE 'VSE SUPERVISOR     SGINF      VALIDATE SVC INTERFACE  ' 00100000
***************************************************************         00101000
*  FUNCTION: MAIN ENTRY OF SVC 98 PROCESSING.                 *         00102000
*  ON ENTRY:                                                  *         00103000
*    RC = ADDRESS OF SVC98                                    *         00104000
*    R6 = DISPATCHER BASE (RETURN ADDRESS)                    *         00105000
*    R1 = POINTER TO USER SUPPLIED PARAMETER LIST             *         00106000
*    RB = PTR TO PARTITION SAVE AREA SVEARA                   *         00107000
*  ON EXIT                                                    *         00108000
*    R2 = STORAGE KEY OF CALLER                               *         00109000
*    RE = POINTER TO USER PARAMETER LIST                      *         00110000
***************************************************************         00111000
         DC    CL8'SGINF   '                                   @DY45383 00112000
         DC    CL8'DY46413 '     CHANGE ACTIVITY CODE          @DY46413 00113490
         USING SYSS00,R0         LOW CORE BASE                 @DA44841 00114000
         USING SVC98,RC          SVC98 BASE POINTER            @D51IDGL 00115000
         USING DISP,R6           DISPATCHER BASE POINTER       @D51IDGL 00116000
         USING SVEARA,RB         SVEARA BASE POINTER           @D51IDGL 00117000
SVC98    DS    0H                START OF CODEBLOCK            @D51IDGL 00118000
         LR    RE,R1             COPY PARAMETER ADDRESS        @D51IDGL 00119000
         USING SVC98PL,RE        USER PARM BASE POINTER        @D35CDFG 00120000
         TM    SVEPSW2,X'80'     AMODE-31                      @D52VDGL 00121000
         BZ    XTRMN010          NO,                           @DA44841 00122000
         O     RE,BIT0OMSK       INDICATE 31-BIT MODE          @D52VDGL 00123000
*        AMODESW SET,AMODE=31,WR=(R2) SWITCH TO 31-BIT  MODE   @D52VDGL 00124000
         AMODESW SET,AMODE=31,WR=(R2)                          @D52VDGL 00125000
         B     XTRMN020          JOIN MAIN PATH                @D52VDGL 00126000
XTRMN010 LA    RE,0(,RE)         ENSURE 24 BIT ADDRESS         @DY45817 00127000
*-------------------------------------------------------------*@D359DWK 00128000
*   VALIDATE SPECIFIED ADDRESSES IF USER TASK REQUEST         *@D359DWK 00129000
*-------------------------------------------------------------*@D359DWK 00130000
XTRMN020 DS    0H                                              @D52VDGL 00131000
         CLC   TID,ARTIDH        SYSTEM TASK REQUEST           @D66CDAP 00132000
         BNH   XTRMN070          YES, SKIP VALIDATION          @D36IDWK 00133000
         LA    R2,SVC98LL        ADDRESS OF PARM-LIST+1        @D34YDWK 00134000
         BCTR  R2,0              LAST BYTE OF PARM-LIST        @D34YDWK 00135000
         TM    SVEPSWKY,KEY0     KEY-0 REQUEST                 @D14BDWK 00136000
         BNZ   XTRMN040          NO,                           @D14BDWK 00137000
         SLR   R5,R5             INDICATE SYSTEM REQUST        @D14BDWK 00138000
         BAL   R8,VALWRITE       VALIDATE PARAMETER LIST       @D14BDWK 00139000
*SGLINK  VALWRITE,INPUT=(R1,R2,R6,R8),WORK=(R2,R5),OUTPUT=(R2) @D149DWK 00140000
         B     XTRMN030          0  INVALID ADDRESS            @D14BDWK 00141000
         B     XTRMN030          4  MULTIPLE STORAGE KEYS      @D14BDWK 00142000
         B     XTRMN050          8  O.K.                       @D355DWK 00143000
*        AMODESW SET,AMODE=24,WR=(R8) SWITCH TO 24-BIT MODE    @D52VDGL 00144000
XTRMN030 AMODESW SET,AMODE=24,WR=(R8)                          @D52VDGL 00145000
         B     ERR25                  =====================>>> @D52VDGL 00146000
XTRMN040 BAL   R8,VALIDSVA        VALIDATE PARM-LIST  =====>>> @D34YDWK 00147000
*SGLINK  VALIDSVA,INPUT=(R1,R2,R6,R8),WORK=(R2,R5)             @D369DWK 00148000
XTRMN050 L     R1,SVC98AR         ADDRESS OF USER AREA         @D355DWK 00149000
         LR    R2,R1              COPY AREA BEGIN ADDRESS      @D34YDWK 00150000
         AH    R2,SVC98LN         LAST BYTE OF USER-AREA+1     @D34YDWK 00151000
         CR    R2,R1              END ADDRESS > BEGIN ADDRESS  @D35EDWK 00152000
         BNH   XTREXC16           NO,  ======================> @D35EDWK 00153000
         BCTR  R2,0               LAST BYTE OF USER AREA       @D34YDWK 00154000
         TM    SVEPSWKY,KEY0      KEY-0 REQUEST                @D14BDWK 00155000
         BNZ   XTRMN060           NO,                          @D14BDWK 00156000
         SLR   R5,R5              INDICATE SYSTEM REQUEST      @D14BDWK 00157000
         BAL   R8,VALWRITE        VALIDATE AREA                @D14BDWK 00158000
*SGLINK  VALWRITE,INPUT=(R1,R2,R6,R8),WORK=(R2,R5),OUTPUT=(R2) @D14BDWK 00159000
         B     ERR25            0 INV. ====================>>> @D14BDWK 00160000
         B     ERR25            4 M KEY====================>>> @D14BDWK 00161000
         B     XTRMN070         8 OK                           @D14BDWK 00162000
XTRMN060 DS    0H                                              @D355DWK 00163000
         BAL   R8,VALID          VALIDATE USERS AREA           @D35EDWK 00164000
*SGLINK  VALID,INPUT=(R1,R2,R6,R8),WORK=R2,OUTPUT=R5           @D369DWK 00165000
XTRMN070 IC    R2,SVEPSWKY       GET PROTECTION KEY            @D51IDGL 00166000
         N     R2,ISKMASK        LEAVE PROTECTION KEY ONLY     @D51IDGL 00167000
         B     XTRENT00          GOTO ENTRY FOR SVC CALLERS    @D52VDGL 00168000
         DROP  RB                DROP SVEARA BASE              @D51IDGL 00169000
         DROP  R6                DROP DISPATCHER BASE          @D51IDGL 00170000
         TITLE 'VSE SUPERVISOR     SGINF      VALIDATE BAL INTERFACE  ' 00171000
***************************************************************         00172000
*                                                             *         00173000
*  FUNCTION:                                                  *         00174000
*    BAL  INTERFACE FOR ALL EXTRACT AND MODCTB SERVICES       *         00175000
*    DETERMINE AND SAVE ADDRESSING MODE                       *         00176000
*  INPUT:                                                     *         00177000
*    RC = SVC98 BASE ADDRESS                                  *         00178000
*    R6 = RETURN ADDRESS                                      *         00179000
*    RE = POINTER TO USER PARAMETER LIST                      *         00180000
*                                                             *         00181000
*  OUTPUT:                                                    *         00182000
*    RF = RETURN CODE.                                        *         00183000
*  EXIT:                                                      *         00184000
*    VIA R6                                                   *         00185000
*                                                             *         00186000
***************************************************************         00187000
XTRBALIF DS    0H                                                       00188000
         AMODESW QRY             DETERMINE ADDRESSING MODE     @D52VDGL 00189000
         LTR   R1,R1             31-BIT MODE                   @D52VDGL 00190000
         BZ    XTRBALI1          NO,                           @D52VDGL 00191000
         O     RE,BIT0OMSK       REMEMBER 31-BIT MODE REQUEST  @D52VDGL 00192000
XTRBALI1 SLR   R2,R2             MAKE IT A KEY ZERO REQUEST    @D52VDGL 00193000
         B     XTRENT00          SELECT PROPER ROUTINE         @D52VDGL 00194000
         DROP  RE                RELEASE PARAMETER LIST BASE            00195000
         TITLE 'VSE SUPERVISOR     SGINF     EXTRACT ROUTINE SELECTION' 00196000
***************************************************************         00197000
*                                                             *         00198000
*  FUNCTION: ENTRY OF EXTRACT AND MODCTB PROCESSING.          *         00199000
*    ALL THIS CODE RUNS IN 31-BIT ADDRESSING MODE             *         00200000
*                                                             *         00201000
*  ON ENTRY:                                                  *         00202000
*    RC = ADDRESS OF SVC98                                    *         00203000
*    R6 = RETURN ADDRESS                                      *         00204000
*    R2 = STORAGE KEY OF CALLER (FOR BAL USERS: ZERO)         *         00205000
*    RE = POINTER TO USER PARAMETER LIST                      *         00206000
*  ON EXIT:                                                   *         00207000
*    RF          = RETURN CODE.                               *         00208000
***************************************************************         00209000
         USING SVC98PL,RE        SVC98 BASE POINTER            @D35CDFG 00210000
XTRENT00 DS    0H                START OF CODEBLOCK                     00211000
         AIF   (NOT &BGDEBUG).GENTR01                                   00212000
         LR    R7,R2             SAVE PROTECTION KEY           #DEBUGGL 00213000
         LM    R0,R4,0(RE)       COPY PARM INFO INTO R0-R4     #DEBUGGL 00214000
         DEBUG ALLREGS,XXDBGMC   PROVIDE DEBUG ENTRY           #DEBUGGL 00215000
         LR    R2,R7             RESTORE PARMAMETER LIST ADDRES#DEBUGGL 00216000
.GENTR01 ANOP                                                           00217000
         SLR   RF,RF             FORCE RETURN CODE ZERO        @D51IDGL 00218000
         SLR   R1,R1             CLEAR REGISTER                @D51IDGL 00219000
         IC    R1,SVC98ID        GET FUNCTION CODE             @D51IDGL 00220000
         LA    R0,XTRENTID       GET MAX. EXTRACT FUNC. CODE   @D51IDGL 00221000
         CR    R1,R0             IS THIS A VALID EXTRACT FUNCT.@D51IDGL 00222000
         BNL   XTRENT20          NO, ASSUME MODCTB             @52CASRP 00223000
         SLL   R1,2              MULTIPLY WITH FOUR            @D52VDGL 00224000
         L     RD,XTRBTAB(R1)    GET ROUTINE ADDRESS           @D52VDGL 00225000
         BR    RD                GOTO =======================> @D52VDGL 00226000
         SPACE 1                                                        00227000
XTRENT20 DS    0H                                              @D52VDGL 00228000
         LA    R0,MODCTBF0       LOWEST MODCTB FUNCTION CODE   @D52..GL 00229000
         SLR   R1,R0             MODCTB REQUEST CODE           @D52..GL 00230000
         LA    R0,MODCTBMX       HIGHEST MODCTB CODE           @D52..GL 00231000
         CR    R1,R0             IS CODE WITHIN LIMITS         @D52..GL 00232000
         BNL   XTRERR21          NO,  =======================> @52CASRP 00233000
         SLL   R1,2              MULTIPLY WITH FOUR            @D52..GL 00234000
         L     RD,XTRBTB1(R1)    GET ROUTINE ADDRESS           @D52..GL 00235000
         BR    RD                GOTO =======================> @D51IDGL 00236000
         SPACE 1                                               @D51IDGL 00237000
         DS    0F                ALIGNMENT    K                @D51IDGL 00238000
         DC    CL8'XTRBTAB'      EYE CATCHER FOR BRANCH TAB             00239000
XTRBTAB  DC    A(XTRERR21)      0  ILLEGAL REQUEST             @D52VDGL 00240000
         DC    A(XTRPUB2)       1  EXTRACT PUB2 TABLE ENTRY    @D52VDGL 00241000
         DC    A(XTRDVTY)       2  EXTRACT DVTY FROM PUB       @D52VDGL 00242000
         DC    A(XTRBDY)        3  EXTRACT BDY INFO            @D52VDGL 00243000
         DC    A(XTRCR)         4  EXTRACT CR (CONTROL REGS)   @D52VDGL 00244000
         DC    A(XTRPUB)        5  EXTRACT PUB                 @D52VDGL 00245000
         DC    A(XTRCPUID)      6  EXTRACT CPUID               @D52VDGL 00246000
         DC    A(XTRMAP)        7  EXTRACT MAP                 @D52VDGL 00247000
         DC    A(XTRSNDV)       8  EXTRACT DEVICE INFO         @D52VDGL 00248000
         DC    A(XTRSNDV)       9  EXTRACT SENSE INFO          @D52VDGL 00249000
         DC    A(XTRGVIS)       A  EXTRACT GETVIS INFO         @D52VDGL 00250000
         DC    A(XTRPART)       B  EXTRACT PART INFO           @D52VDGL 00251000
         DC    A(XTRSVA)        C  EXTRACT SVA INFO            @D52VDGL 00252000
         DC    A(XTRSAINF)      D  EXTRACT SAINFO              @D61DDGL 00253000
         DC    A(XTRATLCU)      E  EXTRACT ATLCUU              @D61DDGL 00254000
XTRBTABE EQU   *                                               @D52VDGL 00255000
XTRENTID EQU   (XTRBTABE-XTRBTAB)/4 HIGHEST CODE               @D52VDGL 00256000
         SPACE 2                                                        00257000
XTRBTB1  DC    A(XTRPUB2)       0  MODCTB  ID=PUB2             @D61ADGL 00258000
         DC    A(XTRMNTL)       1  MODCTB  ID=MNTLIST          @D61ADGL 00259000
         DC    A(XTRMNTN)       2  MODCTB  ID=MNTNEXT          @D61ADGL 00260000
         DC    A(XTRATLST)      3  MODCTB  ID=ATLSETUP         @D61ADGL 00261000
XTRBTBE  EQU   *                                               @52CASRP 00262000
MODCTBF0 EQU   PUB2MOID+0          FIRST MODCTB ID NUMBER      @D61ADGL 00263000
MODCTBMX EQU   (XTRBTBE-XTRBTB1)/4 MAXIMUM MODCTB NUMBER       @52CASRP 00264000
         AIF   (&VSE260).Y260010                                        00265000
PCBRQGTV EQU   PCBRBGTV            PARTITION GETVIS GATE       @D66CDAP 00266000
PCBRQDYG EQU   PCBRBDYG            PARTITION BOUNDARY GATE     @D66CDAP 00267000
.Y260010 ANOP                                                           00268000
         TITLE 'VSE SUPERVISOR     SGINF     PROVIDE PUB-INDEX        ' 00269000
***************************************************************         00270000
*                                                             *         00271000
*  FUNCTION:                                                  *         00272000
*    PROVIDE PUB-INDEX FOR A GIVEN CUU                        *         00273000
*    PROVIDE PUB-INDEX FOR A GIVEN PIK AND LUB                *         00274000
*    VALIDATE PUB-INDEX AND AUTHORIZE PUB-INDEX USAGE         *         00275000
*  ON ENTRY:                                                  *         00276000
*    RC = BASE, ADDRESS OF SVC98                              *         00277000
*    R8 = RETURN ADDRESS                                      *         00278000
*    R2 = STORAGE KEY OF CALLER                               *         00279000
*    R4 = PTR TO PERMISSION FIELD                             *         00280000
*    RE = PTR TO PARAMETERLIST OF SVC98                       *         00281000
*  ON EXIT TO 4(R8):                                          *         00282000
*    R3 = PUB INDEX OF DEVICE SPECIFIED BY USER               *         00283000
*  ON EXIT TO 0(R8):  SOME ERROR HAS OCCURED                  *         00284000
***************************************************************         00285000
*SGLINK  XTRPBNDX,INPUT=(R2,R4,R8,RC,RE),OUTPUT=(R3,RF),               X00286000
               WORK=(R0,R1,R4,R5,R7)                                    00287000
         USING SVC98,RC          SVC98 BASE POINTER            @D52VDGL 00288000
         USING SVC98PL,RE        PARAMETER LIST BASE POINTER   @D52VDGL 00289000
XTRPBNDX DS    0H                START OF CODEBLOCK                     00290000
         CLI   SVC98FL,X'00'     CALLER PROVIDED LUB           @D51IDGL 00291000
         BE    XTRNDX00          YES,                          @D51IDGL 00292000
         CLI   SVC98FL,SVC98FL1  CALLER PROVIDED CUU           @D51IDGL 00293000
         BE    XTRNDX10          YES,                          @D51IDGL 00294000
         CLI   SVC98FL,SVC98FL2  CALLER PROVIDED PUB-INDEX     @D51IDGL 00295000
         BE    XTRNDX20          YES, VALIDATE PUB INDEX       @D51IDGL 00296000
         B     XTRR8C16          ERROR=======================> @D51IDGL 00297000
XTRNDX00 DS    0H                FIND PUB-INDEX VIA LUB        @D51IDGL 00298000
         L     R3,SVC98SE        ADDRESS OF LUB                @D51IDGL 00299000
PCKEXT10 CLC   0(2,R3),0(R3)     FORCE PAGE FAULT NOW          @D51IDGL 00300000
PCKEXT11 EQU   *                                               @D51IDGL 00301000
         BAL   R7,XTRGTPIK       GET AND VALIDATE PIK          @D51IDGL 00302000
*SGLINK  XTRGTPIK,INPUT=(R2,R4,R7,RC,RE),OUTPUT=(R3,RF)        @DA44841 00303000
         B     0(R8)           0 ERROR (PIK INVALID)           @D51IDGL 00304000
         B     XTRERR21        4 ERROR (USER NOT AUTHORIZED)   @D51IDGL 00305000
         BAL   R7,XTRGTPCB     8 GET PCB ADDRESS               @D51IDGL 00306000
*SGLINK  XTRGTPCB,INPUT=(R3,R7,RC),OUTPUT=(R9,RF)              @DA44841 00307000
         B     0(R8)           0 ERROR (NO PCB FOUND)          @D51IDGL 00308000
         USING PCBADR,R9         PCB BASE POINTER              @D51IDGL 00309000
         ICM   R3,15,SVC98SE   4 IS LUB ADDRESS PRESENT        @D51IDGL 00310000
         BZ    XTRR8C08          NO,  ======================>> @D51IDGL 00311000
         BAL   R7,XTRCKLUB       FIND PUB INDEX VIA LUB/PIK    @D51IDGL 00312000
*SGLINK  XTRCKLUB,INPUT=(R3,R7,R9,RC),OUTPUT=(R3),WORK=(R0,R1) @DA44841 00313000
         B     0(,R8)          0 ERR, ======================>> @D51IDGL 00314000
         B     4(,R8)          4 OK   =======================> @D51IDGL 00315000
         DROP  R9                RELEASE PCB BASE POINTER      @D51IDGL 00316000
XTRNDX10 DS    0H                FIND PUB-INDEX VIA CUU ADDRESS@D51IDGL 00317000
         TM    0(R4),XTRPMCU     IS REQUESTOR AUTHORIZED       @D51IDGL 00318000
         BO    XTRNDX12          YES,                          @D51IDGL 00319000
         LTR   R2,R2             IS IT KEY ZERO REQUEST        @D51IDGL 00320000
         BNZ   XTRERR21          NO,  =======================> @D51IDGL 00321000
XTRNDX12 BAL   R7,XTRCKCUU       FIND PUB ADDRESS              @D51IDGL 00322000
*SGLINK  XTRCKCUU,INPUT=(R7,RC,RE),OUTPUT=(R3),WORK=(R0,R1)    @DA44841 00323000
         B     0(R8)             ERROR=======================> @D51IDGL 00324000
         SH    R3,YPUBTAB        PUB OFFSET                    @D51IDGL 00325000
         SRL   R3,PUBSLEN        PUB INDEX                     @D51IDGL 00326000
         B     4(R8)             OK   =======================> @D51IDGL 00327000
XTRNDX20 DS    0H                PUB-INDEX VALIDATION          @D51IDGL 00328000
         TM    0(R4),XTRPMPU     AUTHORIZED USER               @D51IDGL 00329000
         BO    XTRNDX22          YES,                          @D51IDGL 00330000
         LTR   R2,R2             KEY ZERO REQUEST              @D51IDGL 00331000
         BNE   XTRERR21          NO,  =======================> @D51IDGL 00332000
XTRNDX22 L     R3,SVC98SE        ADDRESS OF PUB INDEX          @D51IDGL 00333000
PCKEXT50 LH    R3,0(R3)          GET PUB INDEX                 @D51IDGL 00334000
PCKEXT51 EQU   *                 FORCE PAGE FAULT NOW          @D51IDGL 00335000
         LTR   R3,R3             INDEX VALID                   @D51IDGL 00336000
         BM    XTRR8C08          NO,  =======================> @D51IDGL 00337000
         CH    R3,IJBNDEV        IS INDEX WITHIN NO. OF DEVICES@D51IDGL 00338000
         BNL   XTRR8C08          NO,  =======================> @DA44841 00339000
         B     4(R8)             DONE =======================> @D51IDGL 00340000
         DROP  RC                RELEASE SVC98 BASE POINTER             00341000
         DROP  RE                RELEASE PARMLIST BASE         @D52VDGL 00342000
         TITLE 'VSE SUPERVISOR     SGINF     CHECK + CLEAR USER AREA  ' 00343000
***************************************************************         00344000
*  FUNCTION:                                                  *         00345000
*    CHECK AND CLEAR USER SUPPLIED AREA IN GIVEN LENGTH       *         00346000
*                                                             *         00347000
*  INPUT    TO XTRCLNG1:                                      *         00348000
*    R3 = LENGTH OF REQUESTED DATA                            *         00349000
*    R5 = USER SPECIFIED OFFSET                               *         00350000
*    R7 = LINK REGISTER                                       *         00351000
*    RC = SGINF BASE POINTER (SVC98)                          *         00352000
*    RE = PTR TO PARAMETERLIST                                *         00353000
*                                                             *         00354000
*  INPUT    TO XTRCLNG2:                                      *         00355000
*    R4 = LENGTH OF REQUESTED DATA                            *         00356000
*    R7 = LINK REGISTER                                       *         00357000
*    RC = SGINF BASE POINTER (SVC98)                          *         00358000
*    RE = PTR TO PARAMETERLIST                                *         00359000
*                                                             *         00360000
*  OUTPUT                                                     *         00361000
*    R2 = PTR TO USER AREA                                    *         00362000
*    R4 = LENGTH OF INFORMATION, THAT WAS SUPPLIED            *         00363000
*    RF = RETURN CODE                                         *         00364000
*  EXIT:                                                      *         00365000
*    0(R7) = SOME ERROR OCCURED                               *         00366000
*    4(R7) = OK                                               *         00367000
***************************************************************         00368000
         USING SVC98,RC          BASE REGISTER                 @D52VDGL 00369000
         USING SVC98PL,RE        PARAMETER LIST                @D52VDGL 00370000
*SGLINK  XTRCLNG1,INPUT=(R3,R5,R7,RC,RE),OUTPUT=(R2,R4,RF),WORK=R1      00371000
XTRCLNG1 DS    0H                VALIDATE LENGTH/OFFSET FIELD           00372000
         LA    R7,4(,R7)         ADJUST RETURN ADDRESS         @D52..GL 00373000
         CR    R5,R3             IS DISPLACEMENT WITHIN LENGTH @D51IDGL 00374000
         BNL   XTRR7C16          NO,  =======================> @D51IDGL 00375000
         LH    R4,SVC98LN        GET AREA LENGTH               @D51IDGL 00376000
         LA    R1,0(R4,R5)       LENGTH + DISPLACEMENT         @D51IDGL 00377000
         CR    R1,R3             IS IT WITHIN CONTROL BLOCK    @D51IDGL 00378000
         BNH   XTRLNG10          YES,                          @D51IDGL 00379000
         LR    R4,R3             LIMIT IT TO BLOCK LENGTH      @D51IDGL 00380000
         SR    R4,R5             RESTRICT LENGTH TO WHATS LEFT @D51IDGL 00381000
XTRLNG10 DS    0H                                              @D51IDGL 00382000
         LH    R1,SVC98LN        GET USER SUPPLIED LENGTH      @D51IDGL 00383000
         B     XTRLNG20          JOIN MAIN PATH                @D51IDGL 00384000
         SPACE 2                                                        00385000
*SGLINK  XTRCLNG2,INPUT=(R4,R7,RC,RE),OUTPUT=(R2,R4,RF),WORK=R1         00386000
XTRCLNG2 DS    0H                                                       00387000
         LA    R7,4(,R7)         ADJUST RETURN ADDRESS         @D61ADGL 00388000
         LH    R1,SVC98LN        LENGTH OF USER SUPPLIED AREA  @D51IDGL 00389000
         CR    R1,R4             DOES LENGTH EXCEED OFFSET     @D51IDGL 00390000
         BL    XTRR7C16          YES, =======================> @D51IDGL 00391000
XTRLNG20 DS    0H                                              @D51IDGL 00392000
         SLR   RF,RF             SET RC TO ZERO                @D52VDGL 00393000
         L     R2,SVC98AR        USERS DATA AREA               @D51IDGL 00394000
         S     R7,F4             POINT TO PARAMETER FIELD      @D61ADGL 00395000
         CLI   3(R7),1           USER AREA TO BE CLEARED       @D61ADGL 00396000
         BE    8(,R7)            NO,  =======================> @D61ADGL 00397000
         LA    R7,4(,R7)         RE-ADJUST RETURN REGISTER     @D61ADGL 00398000
         CLI   SVC98LN,X'00'     MORE THAN 255 BYTES           @D51IDGL 00399000
         BE    XTRLNG40          NO,                           @D51IDGL 00400000
         BCTR  R2,0              ADJUST FOR NEXT INSTRUCTION   @D52VDGL 00401000
XTRLNG30 STC   RF,0(R1,R2)       CLEAR USERS DATA              @D51IDGL 00402000
         BCT   R1,XTRLNG30       LOOP UNTIL ALL BYTES CLEARED  @D51IDGL 00403000
         A     R2,F1             RESTORE AREA BEGIN ADDRESS    @D52VDGL 00404000
         B     4(,R7)            OK   =======================> @D51IDGL 00405000
XTRLNG40 DS    0H                LENGTH IS LESS THAN 256       @D51IDGL 00406000
         BCTR  R1,0              ADJUST FOR EXECUTE            @D51IDGL 00407000
         EX    R1,XTRLNG1E       CLEAR USERS DATA BYTES        @D51IDGL 00408000
         B     4(R7)             OK   =======================> @D51IDGL 00409000
         SPACE 1                                                        00410000
XTRLNG1E XC    0(0,R2),0(R2)     CLEAR USER DATA AREA          @D51IDGL 00411000
         SPACE 1                                                        00412000
         DROP  RC                RELEASE SVC98 BASE POINTER             00413000
         DROP  RE                RELEASE PARMLIST BASE         @D52VDGL 00414000
         TITLE 'VSE SUPERVISOR     SGINF      CHECK + GET USER PIK    ' 00415000
***************************************************************         00416000
*                                                             *         00417000
*  FUNCTION: CHECK USER SUPPLIED PIK OR SUPPLY DEFAULT PIK    *         00418000
*  INPUT:                                                     *         00419000
*    R2 = STORAGE KEY SVEPSWKY                                *         00420000
*    R4 = PTR TO PERMISSION BYTE                              *         00421000
*    R7 = LINK ADDRESS                                        *         00422000
*    RC = SGINF BASE ADDRESS (SVC98)                          *         00423000
*    RE = PTR TO PARAMETERLIST                                *         00424000
*  OUTPUT:                                                    *         00425000
*    R3 = PIK VALUE                                           *         00426000
*  EXIT 0(R7) = SOMETHING WAS WRONG WITH CALLERS PIK          *         00427000
*  EXIT 4(R7) = CALLER WAS NOT AUTHORIZED FOR THIS CALL.      *         00428000
***************************************************************         00429000
         USING SVC98,RC          BASE REGISTER                 @D52VDGL 00430000
         USING SVC98PL,RE        PARAMETER LIST                @D52VDGL 00431000
*SGLINK  XTRGTPIK,INPUT=(R2,R4,R7,RC,RE),OUTPUT=(R3,RF)        @DA44841 00432000
XTRGTPIK DS    0H                START OF CODEBLOCK                     00433000
         L     R3,SVC98PI        GET ADDRESS OF PIK            @D35EDGL 00434000
         LTR   R3,R3             DID USER PROVIDE A PIK        @D35EDGL 00435000
         BZ    XTRPIK10          NO,                           @D35EDGL 00436000
PCKEXT30 TM    1(R3),X'0F'       IS THE PIK VALID              @D35EDGL 00437000
PCKEXT31 EQU   *                                               @D35EDGL 00438000
         BNZ   XTRR7C04          NO,  =======================> @D35EDGL 00439000
PCKEXT60 CLC   0(2,R3),IJBHPIK   PIK GREATER MAX.              @D35EDGL 00440000
PCKEXT61 EQU   *                                               @D35EDGL 00441000
         BH    XTRR7C04          YES, =======================> @D35EDGL 00442000
         LH    R3,0(R3)          GET THE PIK                   @D35EDGL 00443000
         CH    R3,PIK            IS IT USERS OWN PIK           @D35EDGL 00444000
         BE    8(,R7)            YES, =======================> @D35EDGL 00445000
         LTR   R2,R2             KEY-ZERO REQUEST              @D35EDGL 00446000
         BE    8(,R7)            YES, =======================> @D35EDGL 00447000
         TM    0(R4),XTRPMPK     IS CALLER AUTHORIZED          @D35EDGL 00448000
         BO    8(,R7)            YES, =======================> @D35EDGL 00449000
         B     4(,R7)            ERR, =======================> @D35EDGL 00450000
XTRPIK10 DS    0H                                              @D35EDGL 00451000
         LH    R3,PIK            GET CURRENT PIK               @D35EDGL 00452000
         B     8(R7)             DONE =======================> @D35EDGL 00453000
         SPACE 1                                                        00454000
         DROP  RC                RELEASE SVC98 BASE                     00455000
         DROP  RE                RELEASE PARMLIST BASE                  00456000
         TITLE 'VSE SUPERVISOR     SGINF      GET PCB ADDRESS         ' 00457000
***************************************************************         00458000
*                                                             *         00459000
*  FUNCTION: GET THE PCB ENTRY FOR A SPECIFIED PIK            *         00460000
*  INPUT:                                                     *         00461000
*    RC = BASE, ADDRESS OF SVC98                              *         00462000
*    R7 = RETURN ADDRESS                                      *         00463000
*    R3 = BIT 16-31 PIK OF SOME PARTITION                     *         00464000
*  ON EXIT TO 4(R7)                                           *         00465000
*    R9 = PTR TO PCB FOR PIK IN R3                            *         00466000
*  ON EXIT TO XTRR7C04: PCB HAD BEEN INVALID                  *         00467000
***************************************************************         00468000
         USING SVC98,RC          BASE REGISTER                 @D52VDGL 00469000
*SGLINK  XTRGTPCB,INPUT=(R3,R7,RC),OUTPUT=(R9,RF)              @DA44841 00470000
XTRGTPCB DS    0H                                                       00471000
         L     R9,XTRGVIM3       GET MASK                      @D35EDGL 00472000
         NR    R9,R3             GET JUST THE PIK              @D35EDGL 00473000
         SRL   R9,2              MULTIPLY WITH FOUR            @D35EDGL 00474000
         A     R9,APCBATAB       ADDRESS OF PCB ADDRESS        @D35EDGL 00475000
         L     R9,0(,R9)         PCB ADDRESS                   @D35EDGL 00476000
         LTR   R9,R9             DOES PCB EXIST                @D35EDGL 00477000
         BNZ   4(,R7)            YES, =======================> @D35EDGL 00478000
         B     XTRR7C04          NO,  =======================> @D35EDGL 00479000
         DROP  RC                RELEASE SVC98 BASE                     00480000
         TITLE 'VSE SUPERVISOR     SGINF      FIND A PUB FOR GIVEN LUB' 00481000
***************************************************************         00482000
*                                                             *         00483000
*  FUNCTION: PROVIDE THE PUB-INDEX OF A GIVEN LUB FOR A       *         00484000
*            GIVEN PCB                                        *         00485000
*  ON ENTRY:                                                  *         00486000
*    RC = BASE, ADDRESS OF SVC98                              *         00487000
*    R7 = RETURN ADDRESS                                      *         00488000
*    R3 = PTR TO USER PROVIDED LUB                            *         00489000
*    R9 = PTR TO PCB                                          *         00490000
*  ON EXIT TO 4(R7)                                           *         00491000
*    R3 = PUB INDEX                                           *         00492000
*  ON EXIT TO R7:   SOME ERROR OCCURED                        *         00493000
***************************************************************         00494000
         USING SVC98,RC          SVC-98 BASE POINTER           @D52VDGL 00495000
         USING SVC98PL,RE        PARAMETER LIST BASE           @D52VDGL 00496000
         USING PCBADR,R9         PCB BASE POINTER              @D35EDGL 00497000
XTRCKLUB DS    0H                LUB PROCESSING ROUTINE                 00498000
         L     R1,PCEPIB         ADDRESS OF PIB                @D35EDGL 00499000
         USING PIBADR,R1         PIB BASE POINTER              @D35EDGL 00500000
         SLR   R0,R0             CLEAR REGISTER                @D35EDGL 00501000
         TM    0(R3),CCBPROGU    IS IT PROGR. LOGICAL UNIT     @D35EDGL 00502000
         BNZ   XTRLUB10          YES                           @D35EDGL 00503000
         CLC   1(1,R3),PIBLUBID  IS THIS A VALIB SYSTEM LUB    @D35EDGL 00504000
         BH    XTRR7C08          NO,  ======================>> @D35EDGL 00505000
         B     XTRLUB20          JOIN MAIN PATH                @D35EDGL 00506000
XTRLUB10 DS    0H                PROG. LOGICAL UNIT PROCESSIENG@D35EDGL 00507000
         CLC   1(1,R3),PIBLUBNO  IS THIS A VALID PROG.LOG.UNIT @DA27916 00508000
         BNL   XTRR7C08          NO,  ======================>> @DA27916 00509000
         IC    R0,PIBLUBID       NUMBER OF SYSTEM LUBS         @D35EDGL 00510000
XTRLUB20 DS    0H                                              @D35EDGL 00511000
         DROP  R1                RELEASE PIB BASE POINTER      @D35EDGL 00512000
         SLR   R1,R1             CLEAR REGISTER                @D35EDGL 00513000
         IC    R1,1(R3)          GET LUB NUMBER                @D35EDGL 00514000
         AR    R1,R0             ADD SYSTEM LUBS               @D35EDGL 00515000
         AR    R1,R1             LUB OFFSET                    @D35EDGL 00516000
         A     R1,PCEALUB        ADDRESS OF LUB                @D35EDGL 00517000
         SLR   R3,R3             CLEAR REGISTER                @D51GDGL 00518000
         ICM   R3,2,1(R1)        IS THIS A MORE DEVICE SYSTEM  @D51GDGL 00519000
         BNM   XTRLUB22          YES,                          @D51GDGL 00520000
         SLR   R3,R3             CLEAR REGISTER                @D51GDGL 00521000
         CLI   0(R1),X'FE'       ASSIGNED IGNORE OR UNASSGN    @D51GDGL 00522000
         BL    XTRLUB22          NO,                           @D51GDGL 00523000
         L     R3,SVC98AR        GET USERS AREA ADDRESS        @D35EDGL 00524000
         MVC   0(1,R3),0(R1)     INDICATE IGNORE/UNASSGN       @D35EDGL 00525000
         B     XTRR7C12          ERR, =======================> @D35EDGL 00526000
XTRLUB22 DS    0H                ENDIF                         @D51GDGL 00527000
         IC    R3,0(R1)          COMPLETE THE PUB INDEX        @D35EDGL 00528000
         B     4(R7)             OK,  =======================> @D35EDGL 00529000
         DROP  R9                RELEASE PCB BASE              @D35EDGL 00530000
         DROP  RC                RELEASE SVC98 BASE            @D52VDGL 00531000
         DROP  RE                RELEASE PARMLIST BASE         @D52VDGL 00532000
         TITLE 'VSE SUPERVISOR     SGINF      FIND A PUB FOR GIVEN CUU' 00533000
***************************************************************         00534000
*  FUNCTION: FIND PUB ADDRESS FOR A GIVEN CUU NUMBER          *         00535000
*  ON ENTRY:                                                  *         00536000
*    RC = BASE, ADDRESS OF SVC98                              *         00537000
*    R7 = RETURN ADDRESS                                      *         00538000
*    RE = PTR TO USER PARAMETERLIST                           *         00539000
*  ON EXIT TO 4(R7)                                           *         00540000
*    R3 = PUB ADDRESS FOR CUU FROM USER PARAMETER LIST        *         00541000
*  ON EXIT TO R7  SOME ERROR HAS OCCURED                      *         00542000
***************************************************************         00543000
         USING SVC98,RC          BASE REGISTER                 @D52VDGL 00544000
         USING SVC98PL,RE        PARAMETER LIST                @D52VDGL 00545000
*SGLINK  XTRCKCUU,INPUT=(R7,RC,RE),OUTPUT=(R3),WORK=(R0,R1)    @DA44841 00546000
XTRCKCUU DS    0H                START OF CODEBLOCK                     00547000
         L     R1,SVC98SE        ADDRESS OF CUU FIELD          @D14CDGL 00548000
PCKEXT70 LH    R0,0(R1)          GET CUU ADDRESS               @D14CDGL 00549000
PCKEXT71 EQU   *                 FORCE PROGRAM CHECK NOW       @D14CDGL 00550000
         LH    R3,YPUBTAB        ADDRESS OF PUB TABLE          @D14CDGL 00551000
         USING PUBADR,R3         PUB BASE POINTER              @D14CDGL 00552000
         B     XTRCUU20          FIRST TIME PROCESSING         @DA44841 00553000
XTRCUU10 DS    0H                LOOP THRU PUB FOR CUU AND     @D14CDGL 00554000
         LA    R3,NEXTPUB        FIRST/NEXT PUB ADDRESS        @D14CDGL 00555000
XTRCUU20 CLI   PUBCHANN,XFF      END OF PUB TABLE              @D14CDGL 00556000
         BE    XTRR7C08          YES, =======================> @D14CDGL 00557000
         CH    R0,PUBCHANN       IS THIS THE RIGHT ONE         @D14CDGL 00558000
         BNE   XTRCUU10          NO,                           @D14CDGL 00559000
         B     4(R7)             YES,   =====================> @D14CDGL 00560000
         SPACE 1                                                        00561000
         DROP  R3                RELEASE PUB BASE POINTER      @D14CDGL 00562000
         DROP  RC                RELEASE SVC98 BASE            @D52VDGL 00563000
         DROP  RE                RELEASE PARMLIST BASE         @D52VDGL 00564000
         TITLE 'VSE SUPERVISOR     SGINF      GETVIS LOCK PROCESSING  ' 00565000
***************************************************************         00566000
*  FUNCTION: DO ALL LOCKING FOR ACCESS OF A GETVIS AREA,      *         00567000
*    (PARTITION GETVIS, DYNAMIC SPACE GETVIS OR SVA GETVIS).  *         00568000
*  ON ENTRY TO XTRLCKPT,XTRLCKSP,XTRLCKSV:                    *         00569000
*    RC = BASE, ADDRESS OF SVC98                              *         00570000
*    R8 = RETURN ADDRESS                                      *         00571000
*    R3 = USER SUPPLIED PIK                                   *         00572000
*    RE = PTR TO PARAMETERLIST OF SVC98                       *         00573000
*  ON EXIT TO 4(R8): GETVIS AREA MAY BE ACCESSED              *         00574000
*    R0-R1,R4-R5 = WORK                                       *         00575000
*  ON EXIT TO 0(R8): SOME ERROR OCCURED, AREA NOT ACCESSIBLE  *         00576000
*    RF = RETURN CODE.                                        *         00577000
*    R0-R1,R4-R5 = WORK                                       *         00578000
***************************************************************         00579000
         USING SVC98,RC          BASE REGISTER                 @D52VDGL 00580000
         USING SVC98PL,RE        PARAMETER LIST                @D52VDGL 00581000
*SGLINK  XTRLCKPT,INPUT=(R3,R8,RC),OUTPUT=(R9,RA,RF),                  X00582000
               WORK=(R0,R1,R4,R5,R7)                                    00583000
XTRLCKPT DS    0H                PARTITION GETVIS PROCESSING   @D51IDGL 00584000
*SGLINK  XTRLCKSP,INPUT=(R3,R8,RC),OUTPUT=(R9,RA,RF),                  X00585000
               WORK=(R0,R1,R4,R5,R7)                                    00586000
XTRLCKSP DS    0H                SPACE GETVIS PROCESSING       @D51IDGL 00587000
         BAL   R7,XTRGTPCB       GET PCB ADDRESS               @D51IDGL 00588000
*SGLINK  XTRGTPCB,INPUT=(R3,R7,RC),OUTPUT=(R9,RF)                       00589000
         B     0(R8)             ERR ========================> @D51IDGL 00590000
         USING PCBADR,R9         PCB BASE POINTER              @D51IDGL 00591000
         CLC   SMVPBEG,F0        PARTITION STILL ALLOCATED     @D51IDGL 00592000
         BE    XTRR8C04          NO,  =======================> @D51IDGL 00593000
         L     RA,PCECOMRA       GET COMREG ADDRESS            @D51IDGL 00594000
         USING COMREG,RA         COMREG BASE POINTER           @D51IDGL 00595000
         L     R0,XTRGV1PT       PARTITION GETVIS INFORMATION  @D51IDGL 00596000
         NR    R0,R3             IS IT PARTITION GETVIS        @D51IDGL 00597000
         BZ    XTRLCK18          NO,                           @D51IDGL 00598000
         L     RA,IJBGVCTL       GETVIS CONTROL INFORMATION    @D51IDGL 00599000
         DROP  RA                RELEASE COMREG BASE           @D51IDGL 00600000
         LTR   RA,RA             IS CONTROL INFO AVAILABLE     @D51IDGL 00601000
         BZ    XTRR8C04          NO,  =======================> @D51IDGL 00602000
         LA    R5,SRQGTV         GETVIS GATE ENTRY             @D51IDGL 00603000
         TM    PCBRQGTV,FREEBIT  IS GATE FREE                  @D66CDAP 00604000
         BZ    XTRLCK20          NO,                           @D66CDAP 00605000
         MVC   PCBRQGTV,NFREEVAL INDICATE IN USE               @D66CDAP 00606000
         B     4(,R8)            OK   =======================> @D51IDGL 00607000
XTRLCK18 DS    0H                DYNAMIC SPACE GETVIS REQUEST  @D51IDGL 00608000
         L     RA,PCBDYSPC       GETVIS CONTROL INFORMATION    @D51IDGL 00609000
         LTR   RA,RA             IS GETVIS INITIALIZED         @D51IDGL 00610000
         BZ    XTRR8C04          NO,  =======================> @D51IDGL 00611000
         LA    R5,SRQDYSGV       DYN SPACE GETVIS GATE         @D51IDGL 00612000
         TM    PCBRQDYG,FREEBIT  IS GATE FREE                  @D66CDAP 00613000
         BZ    XTRLCK20          NO,                           @D66CDAP 00614000
         MVC   PCBRQDYG,NFREEVAL INDICATE IN USE               @D66CDAP 00615000
         B     4(,R8)            OK,  =======================> @D51IDGL 00616000
XTRLCK20 DS    0H                GATE IN USE PROCESSING        @D51IDGL 00617000
         SLR   RA,RA             INDICATE NOT ACCESSABLE       @D52VDGL 00618000
         B     XTRR8C04          ERR  =======================> @D52VDGL 00619000
         DROP  R9                RELEASE PCB BASE              @D51IDGL 00620000
*SGLINK  XTRLCKSV,INPUT=(R8,RC),OUTPUT=(RA,RF),WORK=(R0,R1,R4,R5)       00621000
XTRLCKSV DS    0H                WHEN (SVA GETVIS LOCK)        @D51IDGL 00622000
         SLR   RA,RA             CLEAR CONTROL AREA POINTER    @D52VDGL 00623000
         TM    SYSFLAG4,ANCHSVA  IS AREA INITIALIZED           @D52VDGL 00624000
         BNO   XTRR8C04          NO,  =======================> @D52VDGL 00625000
         L     RA,IJBSMCOM       SMCOM BASE ADDRESS            @D52VDGL 00626000
         USING SMCOM,RA          SMCOM BASE POINTER            @D52VDGL 00627000
         L     RA,SMCSGV31       POINTER TO CONTROL INFORMATION@D52VDGL 00628000
         L     R1,ASRQTAB        POINT TO GATE ENTRY           @D62MPGL 00629000
         LA    R1,SRQSGTVS-SRQTAB(R1) DESCRITOR QUEUE ENTRY    @D66CDAP 00630000
         USING RQADR,R1          RQADR BASE                    @D66CDAP 00631000
         TM    RSCDESC,FREEBIT   IS GATE FREE                  @D66CDAP 00632000
         BO    XTRLCK30          YES,                          @D51IDGL 00633000
         SLR   RA,RA             INDICATE NOT ACCESSABLE       @D51IDGL 00634000
         B     XTRR8C04          ERR  =======================> @D51IDGL 00635000
XTRLCK30 DS    0H                                              @D51IDGL 00636000
         MVC   RSCDESC,NFREEVAL  INDICATE IN USE               @D66ADAP 00637000
         B     4(R8)             OK,  =======================> @D51IDGL 00638000
         DROP  R1                RELEASE RQADR BASE            @D66ADAP 00639000
         DROP  RA                RELEASE SMCOM BASE                     00640000
         DROP  RC                RELEASE SVC98 BASE            @D52VDGL 00641000
         DROP  RE                RELEASE PARMLIST BASE         @D52VDGL 00642000
         TITLE 'VSE SUPERVISOR     SGINF     EXTRACT GETVIS PROCESSING' 00643000
***************************************************************         00644000
*  FUNCTION: ROUTINES TO OPEN A GETVIS GATE                   *         00645000
*  ON ALL ENTRIES:                                            *         00646000
*    RC = BASE, ADDRESS OF SVC98                              *         00647000
*    R8 = RETURN ADDRESS                                      *         00648000
*    R3 = BIT 0-15: INDICATOR OF PROCESSED INFO (SP/PT/SV)    *         00649000
*    ON EXIT TO R8:                                           *         00650000
*      RF = ALWAYS ZERO AS RETURN CODE                        *         00651000
*      R0-R1,R4-R5 = WORK                                     *         00652000
*  ON ENTRY TO XTRFREPT,XTRFRESP:                             *         00653000
*    R9 = PTR TO PCB OF PARTITION                             *         00654000
*    ON EXIT TO R8:                                           *         00655000
*      RF = RETURN CODE 0                                     *         00656000
*      R0-R2,R4,R5,RA,RB = WORK                               *         00657000
***************************************************************         00658000
         USING SVC98,RC          BASE REGISTER                 @D52VDGL 00659000
         USING SVC98PL,RE        PARAMETER LIST                @D52VDGL 00660000
         USING PCBADR,R9         PCB BASE POINTER              @D51IDGL 00661000
*SGLINK  XTRFREPT,INPUT=(R3,R8,R9,RC),OUTPUT=RF,                       X00662000
               WORK=(R0,R1,R2,R4,R5,RA,RB)                              00663000
XTRFREPT DS    0H                FREE GETVIS PROCESSING        @D51IDGL 00664000
         MVC   PCBRQGTV,FREEVAL  SET GATE TO OPEN              @D66ADAP 00665000
         LA    R5,SRQGTV         ADDRESS OF GETVIS-BOUND ENTRY @D51IDGL 00666000
         B     XTRFREE2          JOIN MAIN PATH                @D51IDGL 00667000
*SGLINK  XTRFRESP,INPUT=(R3,R8,R9,RC),OUTPUT=RF,                       X00668000
               WORK=(R0,R1,R2,R4,R5,RA,RB)                              00669000
XTRFRESP DS    0H                FREE DYN SPACE PROCESSING     @D51IDGL 00670000
         MVC   PCBRQDYG,FREEVAL  SET GATE TO OPEN              @D66ADAP 00671000
         LA    R5,SRQDYSGV       ADDRESS OF GETVIS-BOUND ENTRY @D51IDGL 00672000
         B     XTRFREE2          JOIN MAIN PATH                @D51IDGL 00673000
         DROP  R9                RELEASE PCB BASE POINTER      @D51IDGL 00674000
*SGLINK  XTRFRESV,INPUT=(R3,R8,RC),OUTPUT=RF,WORK=(R0,R1,R4,R5)         00675000
XTRFRESV DS    0H                FREE SVA GETVIS PROCESSING    @D51IDGL 00676000
         L     R5,ASRQTAB        RESOURCE QUEUE TABLE          @D62MPGL 00677000
         LA    R5,SRQSGTVS-SRQTAB(,R5) RESOURCE DESCRIPTOR     @D62MPGL 00678000
         USING RQADR,R5          RESOURCE QUEUE BASE           @D66CDAP 00679000
         MVC   RSCDESC,FREEVAL   SET GATE TO OPEN              @D66CDAP 00680000
         DROP  R5                RELEASE GETVIS GATE           @D66CDAP 00681000
XTRFREE2 DS    0H                                              @D51IDGL 00682000
         LR    R4,RE             SAVE PARAMETER ADDRESS        @D51IDGL 00683000
         LR    R1,R6             SAVE LINK REGISTER            @D51IDGL 00684000
         L     R6,DISPAD         DISP BASE ADDRESS             @D51IDGL 00685000
         USING DISP,R6           DISP BASE POINTER             @D51IDGL 00686000
         BAL   RF,RPOST          POST TASK                     @D51IDGL 00687000
         DROP  R6                DROP DISP BASE                @D51IDGL 00688000
         LR    RE,R4             RESTORE PARAMETER BASE        @D51IDGL 00689000
         LR    R6,R1             RESTORE LINK REGISTER         @D51IDGL 00690000
*SGLINK  RPOST,INPUT(R5,R6,RF),WORK(R5,RE)                     @D51IDGL 00691000
         SLR   RF,RF             SET RETURN CODE               @D51IDGL 00692000
         BR    R8                RETURN======================> @D51IDGL 00693000
         DROP  RC                RELEASE SVC98 BASE            @D52VDGL 00694000
         DROP  RE                RELEASE PARMLIST BASE         @D52VDGL 00695000
***************************************************************         00696000
*  FUNCTION: EXTRACT GETVIS INFORMATION DATA AND STORE THEM   *         00697000
*  ON ENTRY:                                                  *         00698000
*    RC = BASE, ADDRESS OF SVC98                              *         00699000
*    R7 = RETURN REGISTER                                     *         00700000
*    R2 = OFFSET TO FIRST UNUSED BYTE IN USER AREA            *         00701000
*    R3 = BIT0-7:  FLAG OF THAT INFO, WHICH IS JUST BEING     *         00702000
*                  DEALT WITH. (XTRGVSV,XTRGVSP,XTRGVPT)      *         00703000
*         BIT16-31:USER SUPPLIED PIK.                         *         00704000
*    RA = PTR TO GETVIS CONTROL AREA                          *         00705000
*    RE = PTR TO PARAMETERLIST OF SVC98                       *         00706000
*  ON EXIT TO 4(R7): USER AREA IS UPDATED                     *         00707000
*    R0,R1,R4,R5 = WORK                                       *         00708000
*  ON EXIT TO XTRR7C04: DEMANDED SPACE NOT ALLOCATED.         *         00709000
***************************************************************         00710000
         USING SVC98,RC          BASE REGISTER                 @D52VDGL 00711000
         USING SVC98PL,RE        PARAMETER LIST                @D52VDGL 00712000
         USING ANCHTAB,RA        GETVIS CONTROL ADDRESS        @D51IDGL 00713000
*SGLINK  XTRGVI00,INPUT=(R2,R3,R7,RA,RC,RE),OUTPUT=RF,                 X00714000
               WORK=(R0,R1,R4,R5)                                       00715000
XTRGVI00 DS    0H                                                       00716000
*SGLINK  XTRGVI01,INPUT=(R2,R3,R7,RA,RC,RE),OUTPUT=RF,                 X00717000
               WORK=(R0,R1,R4,R5)                                       00718000
XTRGVI01 DS    0H                *  ENTRY FOR SYSTEM GETVIS             00719000
         L     R1,SVC98AR        ADDRESS OF USER AREA          @D51IDGL 00720000
         L     R0,0(R1)          GET SAVE AREA ADDRESS         @D51IDGL 00721000
         ST    R0,1*4(R1,R2)     SAVE R0                       @D51IDGL 00722000
         ST    R2,0(R1)          SAVE R2                       @D51IDGL 00723000
         ST    R6,2*4(R1,R2)     SAVE R6                       @D52VDGL 00724000
         ST    R3,4*4(R1,R2)     SAVE R3                       @D51IDGL 00725000
         ST    R8,3*4(R1,R2)     SAVE R8                       @D51IDGL 00726000
         LR    R4,R1             SAVE SAVE AREA ADDRESS        @D52VDGL 00727000
*-------------------------------------------------------------*         00728000
*  MAKE DIFFERENT ADDRESS SPACE ADDRESSABLE, IF NECESSARY     *         00729000
*  FROM HERE ON ANY USER DATA IS NOT ADDRESSABLE ANY MORE     *         00730000
*-------------------------------------------------------------*         00731000
         LA    R1,4*4(R1,R2)     POINT TO FLAG BYTE            @D51IDGL 00732000
         TM    0(R1),XTRGVPT+XTRGVSP PARTITION OR SPACE GETVIS @D51IDGL 00733000
         BZ    XTRGVI02          NO,                           @D51IDGL 00734000
         L     R1,XTRGVIM3       GET VALIDATION MASK           @D51IDGL 00735000
         NR    R1,R3             PURGE ALL BUT PIK             @D51IDGL 00736000
         MODFLD FIELD=PASCOPE1,NEWVAL=(R1)                     @D51IDGL 00737000
         LTR   RF,RF             DID WE GET THE ADDRESS SCOPE  @D51IDGL 00738000
         BZ    XTRGVI0E          YES,                          @D51IDGL 00739000
         L     R0,0*4(R4,R2)     RESTORE OLD CONTENT OF        @D52VDGL 00740000
         ST    R0,0*4(R4)        1ST IN USER AREA              @D52VDGL 00741000
         LR    R1,R4             RESTORE R1                    @D52VDGL 00742000
         AR    R1,R2             1ST USER DATA BYTE            @D52VDGL 00743000
         XC    0(5*4,R1),0(R1)   PURGE THAT DATA               @D52VDGL 00744000
         B     XTRR7C04                                        @D51IDGL 00745000
XTRGVI0E L     RF,XTRGVIM4       INDICATE SCOPE WAS CHANGED    @D51IDGL 00746000
XTRGVI02 DS    0H                                              @D51IDGL 00747000
*-------------------------------------------------------------*         00748000
*  SCAN OF SUBPOOL CHAIN TO FIND OUT ABOUT THE NUMBER OF      *         00749000
*  FREE AND USED GETVIS PAGES. THIS COUNT YIELDS NUMBERS      *         00750000
*  THAT ARE AVAILABLE UNDER ANY CIRCUMSTANCES AND NOT JUST    *         00751000
*  FOR OWNERS OF SPECIFIC SUBPOOLS.                           *         00752000
*    R1 0 OR MAX.  USED IN HIGH GETVIS  IF HIGH WAS LOOKED AT.*         00753000
*    R2 TO TOTAL SUM OF ALL UNUSED PAGES IN SUBPOOLCHAIN      *         00754000
*    R3 TO TOTAL SUM OF ALL USED PAGES IN SUBPOOLCHAIN        *         00755000
*    R4 TO MAXIMUM NUMBER OF CONTIGOUS 0 BITS IN VISTAB,      *         00756000
*                                                             *         00757000
*  EXPLANATION OF ABBREVIATIONS:                              *         00758000
*    SPC    = SUBPOOL CHAIN                                   *         00759000
*    CTR    = COUNTER                                         *         00760000
*    CCFP   = CURRENT CONTIGUOUS FREE PAGES                   *         00761000
*    MCFP   = MAXIMUM OF CONTIGOUS FREE PAGES SO FAR.         *         00762000
*    FP     = FREE PAGES                                      *         00763000
*    UP     = USED PAGES                                      *         00764000
*    FWPTR  = FORWARD POINTER                                 *         00765000
*    BWPTR  = BACKWARD POINTER                                *         00766000
*    ACPTR  = ACTUAL SUBPOOL PAGE POINTER                     *         00767000
*                                                             *         00768000
*-------------------------------------------------------------*         00769000
         AMODESW SET,AMODE=31,WR=(R8)                          @D52VDGL 00770000
.*                                                             @D52VDGL 00771000
.*  GETVIS ALWAYS WORKS WITH THE SAME POINTERS FOR LOW AND     @D52VDGL 00772000
.*  FOR HIGH CALCULATIONS. HENCE, IF THE LAST CALCULATION      @D52VDGL 00773000
.*  WAS FOR HIGH GETVIS, THE POINTERS FIRST HAVE TO BE         @D52VDGL 00774000
.*  RESET TO THEIR ORIGINAL VALUE AGAIN.                       @D52VDGL 00775000
.*                                                             @D52VDGL 00776000
         TM    GVFVFLGS,GVFVABVE IS THIS GETVIS ABOVE          @D52VDGL 00777000
         BZ    XTRGVI08          NO,                           @D52VDGL 00778000
         NI    GVFVFLGS,XFF-GVFVABVE RESET GETVIS ABOVE FLAG   @D52VDGL 00779000
         MVC   ANBRGVPG(MOVECIL),NBRGVPG  NO. OF GETVIS PAGES  @D52VDGL 00780000
         MVC   NBRGVPG(MOVECIL),DUPCILSV  RESTORE SAVED VALUE  @D52VDGL 00781000
XTRGVI08 DS    0H                GETVIS LOC=BELOW              @D52VDGL 00782000
         LR    R6,R3             KEEP ALL PROCESSING FLAGS     @D52VDGL 00783000
         L     R8,FIRSTPNT       FIRST PAGE IN EMPTY POOL      @D52VDGL 00784000
         USING SUBPCHN,R8        SUBPOOL BASE POINTER          @D52VDGL 00785000
         LTR   R8,R8             IS THERE ANY FREE GETVIS      @D52VDGL 00786000
         BM    XTRGVI22          NO,                           @D52VDGL 00787000
         LR    R3,R8             SAVE FIRST PAGE ADDRESS       @D52VDGL 00788000
         S     R3,BSUBPCHN       OFFSET WITHIN SUBPOOL CHAIN   @D52VDGL 00789000
         SRL   R3,SUBPCHN2       DIVIDE BY 16                  @D52VDGL 00790000
         LA    R2,1              INITIALIZE FREE-POOL COUNT    @D52VDGL 00791000
         SLR   R4,R4             INITIALIZE MAX. CONTIGUES     @D52VDGL 00792000
         LA    R5,1              INITIALIZE CURRENT-CONT.FREE  @D52VDGL 00793000
XTRGVI10 DS    0H                PROCESS FREE CHAIN ENTRIES    @D52VDGL 00794000
         TM    SPCHFLAG,SPPGCONC  IS NEXT POOL CONTIGUES       @D52VDGL 00795000
         BNO   XTRGVI12          NO,                           @D52VDGL 00796000
         LA    R2,1(,R2)         INCREMENT PREE-POOL COUNT     @D52VDGL 00797000
         LA    R5,1(,R5)         INCREMENT CONTIGUOUS COUNT    @D52VDGL 00798000
         L     R8,SPCHFORW       GET NEXT ENTR ADDRESS         @D52VDGL 00799000
         B     XTRGVI10          CHECK NEXT ENTRY              @D52VDGL 00800000
XTRGVI12 DS    0H                FREE-POOL NOT CONTIGUOUS      @D52VDGL 00801000
         CR    R4,R5             CURRENT CONT. IS GREATER MAX. @D52VDGL 00802000
         BNL   XTRGVI14          NO,                           @D52VDGL 00803000
         LR    R4,R5             MAKE THIS THE MAXIMUM NOW     @D52VDGL 00804000
XTRGVI14 DS    0H                                              @D52VDGL 00805000
         L     R1,SPCHFORW             IF (FORWARD POINTER     @D52VDGL 00806000
         SR    R1,R8                   *   > ACPTR)            @D52VDGL 00807000
         BNP   XTRGVI16                ***                     @D52VDGL 00808000
         SRL   R1,SUBPCHN2               ADD NUMBER OF UP TO   @D52VDGL 00809000
         BCTR  R1,0                      * UP COUNTER          @D52VDGL 00810000
         AR    R3,R1                     *                     @D52VDGL 00811000
         LA    R5,1                      ACCOUNT FOR THE FP    @D52VDGL 00812000
         LA    R2,1(,R2)                 * WE STAND UPON       @D52VDGL 00813000
         L     R8,SPCHFORW               POINT TO NEXT         @D52VDGL 00814000
         B     XTRGVI10                  ITERATE LOOP          @D52VDGL 00815000
XTRGVI16 DS    0H                      ELSE                    @D52VDGL 00816000
         L     R1,ESUBPCHN               CALC. NR OF UP UNTIL  @D52VDGL 00817000
         SR    R1,R8                     * END OF GETVIS       @D52VDGL 00818000
         BZ    XTRGVI20                  IF (THERE ARE SOME)   @DERPDGL 00819000
         SLR   R5,R5                       PURGE CCFP CTR      @DERPDGL 00820000
         SRL   R1,SUBPCHN2                 MAKE NR OF PAGES    @D52VDGL 00821000
         AR    R3,R1                       AND ADD THEM        @D52VDGL 00822000
         DS    0H                        ENDIF                 @D52VDGL 00823000
         DS    0H                      ENDIF                   @D52VDGL 00824000
XTRGVI20 DS    0H                    ENDIF                     @D52VDGL 00825000
         DS    0H                  LOOPEND                     @D52VDGL 00826000
         LR    R0,R6               IF (WE ARE DEALING WITH SVA @D52VDGL 00827000
         N     R0,XTRGV1SV         *   GETVIS REQUEST)         @D52VDGL 00828000
         BZ    XTRGVI24            ***                         @D52VDGL 00829000
         SLR   R5,R5                 RESET CCFP CTR TO 0       @D52VDGL 00830000
         DS    0H                  ENDIF                       @D52VDGL 00831000
         B     XTRGVI24          ELSE                          @D52VDGL 00832000
XTRGVI22 DS    0H                ***                           @D52VDGL 00833000
         L     R3,ESUBPCHN         SET CTR FOR UP TO NUMBER OF @D52VDGL 00834000
         S     R3,BSUBPCHN         *  PAGES IN LOW AREA.       @D52VDGL 00835000
         SRL   R3,SUBPCHN2         *                           @D52VDGL 00836000
         LA    R3,1(,R3)           *                           @D52VDGL 00837000
         SLR   R2,R2               SET CTR OF FP TO 0          @D52VDGL 00838000
         SLR   R4,R4               SET CTR FOR MCFP TO 0       @D52VDGL 00839000
         SLR   R5,R5               SET CTR FOR CCFP TO 0       @D52VDGL 00840000
XTRGVI24 DS    0H                ENDIF                         @D52VDGL 00841000
         LR    R0,R6             IF  (WE ARE DEALING WITH LOC  @D52VDGL 00842000
         N     R0,XTRGV1LA       *   ANY REQUEST)              @D52VDGL 00843000
         BZ    XTRGVI50          ***                           @D52VDGL 00844000
         L     R8,AFRSTPNT         TAKE FIRST PTR OF HIGH GETV.@D52VDGL 00845000
         CLC   ABVRTMEM,EVIRTMEM   IF (HIGH GETVIS DOES        @D52VDGL 00846000
         BL    XTRGVI46            *   EXIST) & (THERE STILL   @D52VDGL 00847000
         LTR   R8,R8               *   IS SOMETHING FREE)      @D52VDGL 00848000
         BM    XTRGVI46            ***                         @D52VDGL 00849000
         CLC   SPCHBACK,AESUBCHN     IF (THIS ELEM. NOT LAST)  @D52VDGL 00850000
         BE    XTRGVI36              ***                       @D52VDGL 00851000
         CR    R4,R5                   IF (CCFP CTR > MCFP CTR)@D52VDGL 00852000
         BNL   XTRGVI34                ***                     @D52VDGL 00853000
         LR    R4,R5                     MCFP CTR = CCFP CTR   @D52VDGL 00854000
XTRGVI34 DS    0H                      ENDIF                   @D52VDGL 00855000
         SLR   R5,R5                   RESET CCFP CTR TO 0     @D52VDGL 00856000
         L     R1,AESUBCHN             CALCULATE NUMBER OF UP  @D52VDGL 00857000
         S     R1,SPCHBACK             *   BETWEEN END OF SPC  @D52VDGL 00858000
         SRL   R1,SUBPCHN2             *   AND LAST FP         @D52VDGL 00859000
         AR    R3,R1                   *                       @D52VDGL 00860000
XTRGVI36 DS    0H                    ENDIF                     @D52VDGL 00861000
         LA    R2,1(,R2)             INCREMENT FP CTR AND      @D52VDGL 00862000
         LA    R5,1(,R5)             *  CCFP CTR FOR FOUND FP  @D52VDGL 00863000
         L     R8,SPCHBACK           PROCEED TO FIRST AFTER 16M@D52VDGL 00864000
XTRGVI40 DS    0H                    LOOP THRU CHAIN OF FREE   @D52VDGL 00865000
         L     R8,SPCHBACK             TAKE NEXT BACKWARD PTR  @D52VDGL 00866000
         TM    SPCHFLAG,SPPGCONC       IF (BWP  FP WAS CONTIG.)@D52VDGL 00867000
         BNO   XTRGVI42                ***                     @D52VDGL 00868000
         LA    R2,1(,R2)                 INCREMENT FP CTR      @D52VDGL 00869000
         LA    R5,1(,R5)                 INCREMENT CCFP CTR    @D52VDGL 00870000
         C     R8,AFRSTPNT               ITERATE IF (END NOT   @D52VDGL 00871000
         BNE   XTRGVI40                  *          YET REACH.)@D52VDGL 00872000
         B     XTRGVI47                  LEAVE LOOP            @D52VDGL 00873000
XTRGVI42 DS    0H                      ELSE                    @D52VDGL 00874000
         CR    R4,R5                     IF (CCFP CTR > MCFP ) @D52VDGL 00875000
         BNL   XTRGVI43                  ***                   @D52VDGL 00876000
         LR    R4,R5                       MCFP CTR = CCFP CTR @D52VDGL 00877000
XTRGVI43 DS    0H                        ENDIF                 @D52VDGL 00878000
         LA    R5,1                      RESET CCFP            @D52VDGL 00879000
         C     R8,SPCHBACK               LEAVE LOOP IF (ONLY   @DERPDGL 00880000
         BE    XTRGVI47                  * ONE ELEMENT FREE)   @DERPDGL 00881000
         LA    R2,1(,R2)                 ACC.THE ONE WE POINT TO     GL 00882000
         L     R1,SPCHFORW               ADD NUMBER OF         @D52VDGL 00883000
         SR    R1,R8                     * SKIPPED UP TO       @D52VDGL 00884000
         SRL   R1,SUBPCHN2               * UP CTR              @D52VDGL 00885000
         BCTR  R1,0                      *                     @D52VDGL 00886000
         AR    R3,R1                     *                     @D52VDGL 00887000
         C     R8,AFRSTPNT               ITERATE LOOP IF (     @D52VDGL 00888000
         BNE   XTRGVI40                  *  NOT YET FIRSTPTR)  @D52VDGL 00889000
         DS    0H                      ENDIF                   @D52VDGL 00890000
XTRGVI47 DS    0H                    LOOPEND                   @D52VDGL 00891000
         S     R8,ABSUBCHN           CALCULATE NR OF           @D52VDGL 00892000
         SRL   R8,SUBPCHN2           * UP IN UPPERMOST         @D52VDGL 00893000
         AR    R3,R8                 * PART OF HIGH GETV.      @D52VDGL 00894000
         CLC   TID,ARTIDH        REQUESTOR ATTENTION ROUTINE   @DY45817 00895000
         BNE   XTRGVB50          NO, RESET NOT ALLOWED         @DY45817 00896000
         TM    SVC98FL,XTRGVRSE  RESET HIGH WATER MARK?        @DY45817 00897000
         BZ    XTRGVB50          NO                            @DY45817 00898000
         L     R8,AFRSTPNT       GET FIRST FREE PAGE ABOVE     @DY45817 00899000
         LTR   R8,R8             FREE PAGES AVAILABLE          @DY45817 00900000
         BM    XTRGVB50          NO, HIGH WATER MARK IS OK     @DY45817 00901000
         LA    R0,SUBPCHNL       LENGTH OF PAGE CHAIN ENTRY    @DY45817 00902000
         LR    R1,R8                                           @DY45817 00903000
         SR    R1,R0             OCCUPIED PAGE                 @DY45817 00904000
         ST    R1,AGTVSHI        STORE NEW HIGH WATER MARK     @DY45817 00905000
XTRGVB10 DS    0H                                              @DY45817 00906000
         TM    SPCHFLAG,SPPGCONC NEXT PAGE FREE, TOO           @DY45817 00907000
         L     R8,SPCHFORW       GET NEXT FREE PAGE            @DY45817 00908000
         BO    XTRGVB10          YES                           @DY45817 00909000
         C     R8,AFRSTPNT       END OF LOOP                   @DY45817 00910000
         BNE   XTRGVB40          NO                            @DY45817 00911000
         CLC   SPCHBACK,AESUBCHN LAST PAGE IN STORAGE FREE     @DY45817 00912000
         BE    XTRGVB50          YES, HIGH WATER MARK OK       @DY45817 00913000
         MVC   AGTVSHI,AESUBCHN  LAST OCCUPIED PAGE            @DY45817 00914000
         B     XTRGVB50          SCAN COMPLETE, EXIT LOOP      @DY45990 00915000
XTRGVB40 DS    0H                                              @DY45817 00916000
         LR    R1,R8                                           @DY45817 00917000
         SR    R1,R0             OCCUPIED PAGE                 @DY45817 00918000
         ST    R1,AGTVSHI        STORE NEW HIGH WATER MARK     @DY45817 00919000
         B     XTRGVB10          CONTINUE LOOP                 @DY45817 00920000
XTRGVB50 DS    0H                                              @DY45817 00921000
         L     R1,AGTVSHI            CALCULATE MAXIMUM USED    @D52VDGL 00922000
         S     R1,ABSUBCHN           * AMOUNT IN HIGH GETVIS   @D52VDGL 00923000
         BNM   XTRGVI48              IF (RESULT IS NEGATIVE)   @D52VDGL 00924000
         SLR   R1,R1                   TAKE A ZERO INSTEAD     @D52VDGL 00925000
         B     XTRGVI52              ELSE                      @DERPDGL 00926000
XTRGVI48 DS    0H                      CALCULATE BY SHIFTING   @D52VDGL 00927000
         SRL   R1,SUBPCHN2             * TO NR  OF PAGES       @D52VDGL 00928000
         LA    R1,1(,R1)               * AND ADD ONE, SINCE    @D52VDGL 00929000
         DS    0H                      * PTR IS LST USED PAGE  @D52VDGL 00930000
         B     XTRGVI52              ENDIF                     @D52VDGL 00931000
XTRGVI46 DS    0H                  ELSE                        @D52VDGL 00932000
         SLR   R1,R1                 PREPARE MAXIMUM USED HIGH @D52VDGL 00933000
         CLC   ABVRTMEM,EVIRTMEM     IF (THERE WAS SOME HIGH   @D52VDGL 00934000
         BL    XTRGVI52              *   GETVIS, BUT ITS ONLY  @D52VDGL 00935000
         DS    0H                    *** USED UP)              @D52VDGL 00936000
         L     R1,AESUBCHN             CALCULATE THE NUMBER OF @D52VDGL 00937000
         S     R1,ABSUBCHN             * USED PAGES IN THIS    @D52VDGL 00938000
         SRL   R1,SUBPCHN2             * HIGH GETVIS           @D52VDGL 00939000
         LA    R1,1(,R1)               * ADD ONE               @D52VDGL 00940000
         AR    R3,R1                   * AND ADD IT TO UP CTR  @D52VDGL 00941000
         DS    0H                    ENDIF                     @D52VDGL 00942000
         DS    0H                  ENDIF                       @D52VDGL 00943000
         B     XTRGVI52          ELSE                          @D52VDGL 00944000
XTRGVI50 DS    0H                ***                           @D52VDGL 00945000
         SLR   R1,R1               CLEAR MAXIMUM USED SO FAR   @D52VDGL 00946000
XTRGVI52 DS    0H                ENDIF                         @D52VDGL 00947000
         CR    R4,R5             IF (CCFP CTR > MCFP CTR)      @D52VDGL 00948000
         BNL   XTRGVI44          ***                           @D52VDGL 00949000
         LR    R4,R5               MCFP CTR = CCFP CTR         @D52VDGL 00950000
XTRGVI44 DS    0H                ENDIF                         @D52VDGL 00951000
*-------------------------------------------------------------*         00952000
*  CALCULATE AND STORE LENGTH OF GETVIS CONTROL INFORMATION   *         00953000
*  AND HIGHEST EVER USED AMOUNT OF GETVIS SPACE.              *         00954000
*-------------------------------------------------------------*         00955000
         CLC   TID,ARTIDH        REQUESTOR ATTENTION ROUTINE   @DY45817 00956000
         BNE   XTRGVA50          NO, RESET NOT ALLOWED         @DY45817 00957000
         TM    SVC98FL,XTRGVRSE  RESET HIGH WATER MARK?        @DY45817 00958000
         BZ    XTRGVA50          NO                            @DY45817 00959000
         L     R8,FIRSTPNT       GET FIRST FREE PAGE           @DY45817 00960000
         LTR   R8,R8             FREE PAGES AVAILABLE          @DY45817 00961000
         BM    XTRGVA50          NO, HIGH WATER MARK IS OK     @DY45817 00962000
         LA    R0,SUBPCHNL       LENGTH OF PAGE CHAIN ENTRY    @DY45817 00963000
         LR    R5,R8                                           @DY45817 00964000
         SR    R5,R0             OCCUPIED PAGE                 @DY45817 00965000
         ST    R5,GTVSHIGH       STORE NEW HIGH WATER MARK     @DY45817 00966000
         CLC   GTVSHIGH,BSUBPCHN BELOW BEGIN OF PAGE CHAIN     @DY45817 00967000
         BNL   XTRGVA10          NO                            @DY45817 00968000
         MVC   GTVSHIGH,BSUBPCHN INIT. WITH BEGIN OF CHAIN     @DY45817 00969000
XTRGVA10 DS    0H                                              @DY45817 00970000
         TM    SPCHFLAG,SPPGCONC NEXT PAGE FREE, TOO           @DY45817 00971000
         L     R8,SPCHFORW       GET NEXT FREE PAGE            @DY45817 00972000
         BO    XTRGVA10          YES                           @DY45817 00973000
         C     R8,FIRSTPNT       END OF LOOP                   @DY45817 00974000
         BNE   XTRGVA40          NO                            @DY45817 00975000
         CLC   SPCHBACK,ESUBPCHN LAST PAGE IN STORAGE FREE     @DY45817 00976000
         BE    XTRGVA50          YES, HIGH WATER MARK OK       @DY45817 00977000
         MVC   GTVSHIGH,ESUBPCHN LAST OCCUPIED PAGE            @DY45817 00978000
         B     XTRGVA50          SCAN COMPLETE, EXIT LOOP      @DY45990 00979000
XTRGVA40 DS    0H                                              @DY45817 00980000
         LR    R5,R8                                           @DY45817 00981000
         SR    R5,R0             OCCUPIED PAGE                 @DY45817 00982000
         ST    R5,GTVSHIGH       STORE NEW HIGH WATER MARK     @DY45817 00983000
         B     XTRGVA10          CONTINUE LOOP                 @DY45817 00984000
XTRGVA50 DS    0H                                              @DY45817 00985000
         L     R5,GTVSHIGH       GET HIGH WATER MARK ADDRESS   @D52VDGL 00986000
         S     R5,BSUBPCHN       SUBTRACT BEGIN ADDRESS        @D52VDGL 00987000
         SRL   R5,SUBPCHN2       MULTIPLY WITH ENTRY LENGTH    @D52VDGL 00988000
         LA    R5,1(,R5)         ADD ONE                       @D52VDGL 00989000
         AR    R5,R1             ADD MAXIMUM USED FOR HIGH     @D52VDGL 00990000
         L     R1,IJBPMCOM       GO  SHIFT THIS BY SHIFT VALUE @D51IDGL 00991000
         USING PMCOM,R1          * FOR PAGE LENGTH OUT OF PAGE @D51IDGL 00992000
         LH    R1,PMADPN         * MANAGER COMMUNICATION REG.  @D51IDGL 00993000
         DROP  R1                * AND ARRIVE AT:              @D51IDGL 00994000
         SLL   R5,0(R1)          * HIGHEST EVER USED SPACE     @D51IDGL 00995000
         SLL   R2,0(R1)          R2: GET NUMBER OF UNUSED BYTES@D52VDGL 00996000
         SLL   R3,0(R1)          R3: GET NR OF USED BYTES      @D52VDGL 00997000
         SLL   R4,0(R1)          R4: GET MAX.CONTIG.FREE BYTES @D52VDGL 00998000
         L     R8,ENDGVCTL       R8: LENGTH OF CONTR. INFO IS  @D51IDGL 00999000
         SLR   R8,RA             * ENDING ADDRESS - START ADDR.@D51IDGL 01000000
         LR    R0,R6             IF (CALLER CAME FOR BELOW     @D52VDGL 01001000
         N     R0,XTRGV1LA       *   INFORMATION ONLY)         @D52VDGL 01002000
         BNZ   XTRGVI56          ***                           @D52VDGL 01003000
         LR    R0,R6               IF  (CALLER DID NOT COME    @D52VDGL 01004000
         N     R0,XTRGV1SV         *    FOR SVA GETVIS INFO)   @D52VDGL 01005000
         BNZ   XTRGVI55            ***                         @D52VDGL 01006000
         C     RA,ADDRMSK            IF (BEGIN OF CONTROL AREA @D52VDGL 01007000
         BH    XTRGVI54              *** IS BELOW 16 MB LINE)  @D52VDGL 01008000
         L     R1,ENDGVCTL             IF (END OF GETVIS CNTL  @D52VDGL 01009000
         C     R1,ADDRMSK              * IS ABOVE 16 MB LINE)  @D52VDGL 01010000
         BNH   XTRGVI56                ***                     @D52VDGL 01011000
         L     R8,ADDRMSK                LENGTH OF CNTL IN LOW @D52VDGL 01012000
         A     R8,F1                     *  PART REACHES UP TO @D52VDGL 01013000
         SR    R8,RA                     *  16 MB LINE         @D52VDGL 01014000
         DS    0H                      ENDIF                   @D52VDGL 01015000
         B     XTRGVI56              ELSE                      @D52VDGL 01016000
         DROP  R8                RELEASE SUBPCHN BASE                   01017000
XTRGVI54 SLR   R8,R8                   NOTHING IN LOW PART     @D52VDGL 01018000
         DS    0H                    ENDIF                     @D52VDGL 01019000
         B     XTRGVI56            ELSE                        @D52VDGL 01020000
XTRGVI55 DS    0H                                              @DDCR360 01021000
         SLR   R8,R8                   CNTL IN LOW IS ZERO     @D52VDGL 01022000
         DS    0H                    ENDIF                     @D52VDGL 01023000
         DS    0H                  ENDIF                       @D52VDGL 01024000
XTRGVI56 DS    0H                ENDIF                         @D52VDGL 01025000
         LTR   RE,RE             IF (CALLER HAD 24 BIT AMODE)  @D52VDGL 01026000
         BM    XTRGVI57          ***                           @D52VDGL 01027000
         AMODESW SET,AMODE=24,WR=(R1)                          @D52VDGL 01028000
XTRGVI57 DS    0H                ENDIF                         @D52VDGL 01029000
*-------------------------------------------------------------*         01030000
*  SWITCH BACK TO THE ORIGINAL SPACE. FROM HERE ON THE        *         01031000
*  PARTITION SAVE AREA,PARAMETER LIST AND USER AREA ARE       *         01032000
*  ADDRESSABLE AGAIN.                                         *         01033000
*-------------------------------------------------------------*         01034000
         LTR   RF,RF             IF (SCOPE HAS TO BE CHANGED)  @D51IDGL 01035000
         BP    XTRGVI60          ***                           @D51IDGL 01036000
         LH    R1,PIK              R1: GET MY OWN PIK AND      @D51IDGL 01037000
         MODFLD FIELD=PASCOPE1,NEWVAL=(R1)                     @D51IDGL 01038000
XTRGVI60 DS    0H                ENDIF                         @D51IDGL 01039000
*-------------------------------------------------------------*         01040000
*  IN THIS POSITION                                           *         01041000
*    R2 IS THE NUMBER OF ALL FREE BYTES IN GETVIS             *         01042000
*    R3 IS NUMBER OF USED BYTES IN IT                         *         01043000
*    R4 IS NUMBER OF MAXIMUM CONTIGOUS FREE BYTES IN GETVIS   *         01044000
*    R5 IS HIGHEST AMOUNT OF EVER USED UP GETVIS SPACE        *         01045000
*    R8 IS LENGTH OF GETVIS CONTROL AREA. IF THE REQUEST      *         01046000
*       DID NOT TAKE THE HIGH PART INTO CONSIDERATION, BUT    *         01047000
*       THIS PART DID EXIST FOR THE PARTITION, THEN THE       *         01048000
*       VALUE IN REGISTER R8 IS ZERO, SINCE THE CONTROL       *         01049000
*       AREA IS ENTIRELY IN THE HIGH PART OF GETVIS.          *         01050000
*  NOW CALCULATE DEMANDED DATA AND STORE THEM TO USER AREA    *         01051000
*-------------------------------------------------------------*         01052000
         L     R1,SVC98AR        R5: TAKE START OF USER AREA   @D51IDGL 01053000
         L     RF,0(R1)          TAKE OFFSET TO FREE PART      @D51IDGL 01054000
         L     R0,1*4(RF,R1)     RESTORE THE OLD FIRST VALUE   @D51IDGL 01055000
         ST    R0,0(R1)          *  IN THE USER AREA           @D51IDGL 01056000
         ST    R8,0*4(RF,R1)     STORE CONTROL AREA LENGTH     @D51IDGL 01057000
         AR    R5,R8             CALC. HIGH WATER MARK+CONTROL @D52VDGL 01058000
         AR    R3,R8             CALC. USED SPACE+CONTR.AR.LNG @D52VDGL 01059000
         ST    R5,1*4(RF,R1)     STORE VALUE                   @D51IDGL 01060000
         L     R6,2*4(RF,R1)     RESTORE REGISTER              @D52VDGL 01061000
         ST    R2,2*4(RF,R1)     STORE FREE SPACE              @D51IDGL 01062000
         L     R8,3*4(RF,R1)     RESTORE REGISTER              @D51IDGL 01063000
         ST    R3,3*4(RF,R1)     STORE USED SPACE              @D51IDGL 01064000
         L     R3,4*4(RF,R1)     RESTORE REGISTER              @D51IDGL 01065000
         ST    R4,4*4(RF,R1)     STORE MAX. CONTIGOUS FREE SP. @D51IDGL 01066000
         LR    R2,RF             RESTORE REGISTER              @D51IDGL 01067000
         SLR   RF,RF             RESET RETURN CODE             @D51IDGL 01068000
         B     4(R7)             RETURN TO DISPATCHER=======>>>@D51IDGL 01069000
         DROP  RA                PTR TO GETVIS CONTROL BASE    @D51IDGL 01070000
         DROP  RC                RELEASE SVC98 BASE            @D52VDGL 01071000
         DROP  RE                RELEASE PARMLIST BASE         @D52VDGL 01072000
         SPACE 1                                                        01073000
         DS    0F                ALIGNMENT FOR CONSTANTS  M    @D51IDGL 01074000
XTRGVIM1 DC    X'FFFFFFFF'       .FOR TEST, ALL BITS ARE 1     @D51IDGL 01075000
XTRGVIM3 DC    X'0000FFFF'       .FOR TAKING LOWER PART OF REG @D51IDGL 01076000
XTRGVIM4 DC    X'80000000'       .FOR IND.SCOPE CHANGE TOOK PL.@D51IDGL 01077000
*                                                              @D52VDGL 01078000
         DS    0F                FULLWORDS FOR TESTING BITS:   @D51IDGL 01079000
XTRGV1PT DC    AL1(XTRGVPT),XL3'00'    PARTITION GETVIS INFO   @D51IDGL 01080000
XTRGV1SP DC    AL1(XTRGVSP),XL3'00'    DYN.SPACE GETVIS INFO   @D51IDGL 01081000
XTRGV1SV DC    AL1(XTRGVSV),XL3'00'    SVA GETVIS INFO         @D51IDGL 01082000
XTRGV1GG DC    AL1(XTRGVNL),XL3'00'    DO NO LOCKING OF PAR-   @D51IDGL 01083000
XTRGV1LA DC    AL1(XTRGVLA),XL3'00'    ALSO CHECK 'ANY' GETVIS @D52VDGL 01084000
*                                      TITION,ITS ALREADY DONE @D51IDGL 01085000
         TITLE 'VSE SUPERVISOR     SGINF     EXTRACT EXIT   PROCESSING' 01086000
***************************************************************         01087000
*  CODEBLOCK  XTRETURN                                        *         01088000
*  FUNCTION: FILL IN ERROR CODE AND RETURN TO ERROR RETURN    *         01089000
*    OF THE CALLER OF ANY FUNCTION OR EXIT PROGRAM VIA ERROR  *         01090000
*    EXIT.                                                    *         01091000
*  ON ANY ENTRY:                                              *         01092000
*    RC = BASE, ADDRESS OF SVC98                              *         01093000
*  ON ENTRY TO  XTRR7C04|XTRR7C08|XTRR7C12|XTRR7G :           *         01094000
*    R7 = RETURN ADDRESS                                      *         01095000
*  ON ENTRY TO  XTRR8C04|XTRR8C08|XTRR8C12|XTRR8G :           *         01096000
*    R8 = RETURN ADDRESS                                      *         01097000
*  ON EXIT TO   R7|R8 :                                       *         01098000
*    RF = RETURN CODE 4,8,12 OR 16                            *         01099000
*  ON EXIT TO   RETCODE:  SVC RETURNS TO DISPATCHER           *         01100000
*  ON EXIT TO   R6:       SVC RETURNS TO INTERNAL CALLER      *         01101000
***************************************************************         01102000
         USING SVC98,RC          BASE REGISTER                 @D52VDGL 01103000
         USING SVC98PL,RE        PARAMETER LIST                @D52VDGL 01104000
XTRETURN DS    0H                                                       01105000
XTRERR21 DS    0H                ERROR ENTRY                   @D51IDGL 01106000
         C     R6,DISPAD         RETURN TO DISPATCHER          @D51IDGL 01107000
         BE    ERR21-DISP(,R6)   YES,                          @D51IDGL 01108000
         LA    RF,16             SETRETURN CODE                @D51IDGL 01109000
         BR    R6                RETURN======================> @D51IDGL 01110000
XTRR7C04 LA    RF,4              RC=04                         @D51IDGL 01111000
         BR    R7                      ======================> @D51IDGL 01112000
XTRR7C08 LA    RF,8              RC=08                         @D51IDGL 01113000
         BR    R7                      ======================> @D51IDGL 01114000
XTRR7C12 LA    RF,12             RC=0C                         @D51IDGL 01115000
         BR    R7                      ======================> @D51IDGL 01116000
XTRR7C16 LA    RF,16             RC=10                         @D51IDGL 01117000
         BR    R7                      ======================> @D51IDGL 01118000
XTRR8C04 LA    RF,4              RC=04                         @D51IDGL 01119000
         BR    R8                      ======================> @D51IDGL 01120000
XTRR8C08 LA    RF,8              RC=08                         @D51IDGL 01121000
         BR    R8                      ======================> @D51IDGL 01122000
XTRR8C12 LA    RF,12             RC=0C                         @D51IDGL 01123000
         BR    R8                      ======================> @D51IDGL 01124000
XTRR8C16 LA    RF,16             RC=10                         @D51IDGL 01125000
         BR    R8                      ======================> @D51IDGL 01126000
XTREXC00 SR    RF,RF             RC=00                         @D51IDGL 01127000
         B     XTRRCODE                                        @D51IDGL 01128000
XTREXC04 LA    RF,4              RC=04                         @D51IDGL 01129000
         B     XTRRCODE                                        @D51IDGL 01130000
XTREXC08 LA    RF,8              RC=08                         @D51IDGL 01131000
         B     XTRRCODE                                        @D51IDGL 01132000
XTREXC12 LA    RF,12             RC=0C                         @D61DDGL 01133000
         B     XTRRCODE                                        @D61DDGL 01134000
XTREXC16 LA    RF,16             RC=10                         @D51IDGL 01135000
         B     XTRRCODE                                        @D61DDGL 01136000
XTREXC20 LA    RF,20             RC=14                         @D51IDGL 01137000
         B     XTRRCODE                                        @D61DDGL 01138000
XTREXC24 LA    RF,24             RC=18                         @D51IDGL 01139000
         B     XTRRCODE                                        @D61DDGL 01140000
XTREXC28 LA    RF,28             RC,1C                         @D51IDGL 01141000
*        B     XTRRCODE          *                             @D61DDGL 01142000
XTRERREX DS    0H                GENERAL ERROR EXIT            @D51IDGL 01143000
XTRRCODE DS    0H                ERROR EXIT                    @D51IDGL 01144000
         C     R6,DISPAD         RETURN TO DISPATCHER          @D51IDGL 01145000
         BNER  R6                NO,  =======================> @D51IDGL 01146000
         LA    R1,SVER0F-SVEARA  POINT TO RC INFORMATION       @D51IDGL 01147000
         B     RETCODE           EXIT                          @D51IDGL 01148000
*SGLINK  RETCODE,INPUT=(R1,R6,RF),WORK=(RA)                    @D51IDGL 01149000
         DROP  RC                RELEASE SVC98 BASE            @D52VDGL 01150000
         DROP  RE                RELEASE PARMLIST BASE         @D52VDGL 01151000
         SPACE 3                                                        01152000
***************************************************************         01153000
*     PATCH AREA FOR CHANGES                                   @D52VDGL 01154000
***************************************************************         01155000
         USING SVC98,RC                                        @D52VDGL 01156000
         DC    C'XTRPATCH'                                     @D52VDGL 01157000
XTRPATCH DC    50S(*)                                          @D52VDGL 01158000
         DROP  RC                                              @D52VDGL 01159000
         TITLE 'VSE SUPERVISOR     SGINF     EXTRACT MAIN ROUTIES     ' 01160000
***************************************************************         01161000
*     START OF MAIN ROUTINES                                   @D52VDGL 01162000
***************************************************************         01163000
         SPACE 3                                               @D52VDGL 01164000
***************************************************************         01165000
*  FUNCTION: EXTRACT OR MODIFY PUB2 DATA                      *         01166000
*  ON ENTRY:                                                  *         01167000
*    RC = BASE, ADDRESS OF SVC98                              *         01168000
*    R6 = RETURN ADDRESS, NOT NECESSARILY DISPAD              *         01169000
*    R2 = STORAGE KEY OF USER. MUST BE ZERO,ELSE ILLEGAL SVC  *         01170000
*    RE = PTR TO PARAMETERLIST OF SVC98                       *         01171000
***************************************************************         01172000
         USING SVC98,RC          BASE REGISTER                 @D52VDGL 01173000
         USING XTRPUB2,RD        BASE REGISTER                 @D52VDGL 01174000
         USING SVC98PL,RE        PARAMETER LIST                @D52VDGL 01175000
XTRPUB2  DS    0H                                                       01176000
         LA    R4,XTRPB2PM       POINT TO PERMISSION BYTE      @D51IDGL 01177000
         BAL   R8,XTRPBNDX       GET PUB INDEX                 @D51IDGL 01178000
*SGLINK  XTRPBNDX,INPUT=(R2,R4,R8,RC,RE),OUTPUT=(R3,RF),               X01179000
               WORK=(R0,R1,R4,R5,R7)                                    01180000
         B     XTRERREX          ERROR (NO PUBINDEX FOUND)     @D51IDGL 01181000
         SLL   R3,2              MULTIPLY WITH FOUR            @D51ODGL 01182000
         L     R1,APB2AREA       ADDRESS OF PUB2 ADDRESS TABLE @D51ODGL 01183000
         L     R9,0(R3,R1)       ADDRESS OF PUB2 ENTRY         @D51ODGL 01184000
         USING PUB2ADR,R9        PUB2ADR BASE POINTER          @D51ODGL 01185000
         L     R3,4(R3,R1)       ADDRESS OF NEXT PUB2 ENTRY    @D51ODGL 01186000
         SR    R3,R9             LENGTH OF PUB2 ENTRY          @D51ODGL 01187000
         SLR   R5,R5             CLEAR REGISTER                @D34YDGL 01188000
         ICM   R5,3,SVC98DI      GET USER SPECIFIED OFFSET     @D34YDGL 01189000
         AR    R9,R5             ADDRESS WITHIN PUB2 ENTRY     @D34YDGL 01190000
         CLI   SVC98ID,PUB2EXID  USER WANTED PUB2 ENTRY        @D34YDGL 01191000
         BNE   XTRPB210          NO,                           @D34YDGL 01192000
         BAL   R7,XTRCLNG1       CHECK USER LENGTH             @D34YDGL 01193000
*SGLINK  XTRCLNG1,INPUT=(R3,R5,R7,RC,RE),OUTPUT=(R2,R4,RF),WORK=R1      01194000
         DC    AL4(0)            INDICATOR BYTES               @D52..GL 01195000
         B     XTRERREX          ERR  =======================> @D34YDGL 01196000
         BCTR  R4,0              ADJUST FOR EXECUTE            @D34YDGL 01197000
         EX    R4,XTRPB2E1       MOVE DATA TO USERS AREA       @D34YDGL 01198000
         B     XTREXC00          DONE,=======================> @D34YDGL 01199000
XTRPB210 DS    0H                MODIFY PUB2 ENTRY             @D34YDGL 01200000
         L     R2,SVC98AR        ADDRESS OF USERS AREA         @D34YDGL 01201000
         LH    R4,SVC98LN        GET USER SUPPLIED LENGTH      @D34YDGL 01202000
         LR    R1,R4             COPY USERS LENGTH             @D34YDGL 01203000
         AR    R1,R5             ADD DISPLACEMENT              @D34YDGL 01204000
         CR    R1,R3             STILL WITHIN PUB2 ENTRY       @D34YDGL 01205000
         BH    XTREXC16          NO,  =======================> @D34YDGL 01206000
         BCTR  R4,0              ADJUST FOR EXECUTE            @D34YDGL 01207000
         EX    R4,XTRPB2E2       MOVE DATA TO USERS AREA       @D34YDGL 01208000
         B     XTREXC00          DONE =======================> @D34YDGL 01209000
         DROP  R9                RELEASE PUB2 BASE             @D34YDGL 01210000
         SPACE 1                                               @D34YDGL 01211000
XTRPB2E1 MVC   0(0,R2),0(R9)     MOVE PUB2 INFO TO USER DATA   @D34YDGL 01212000
XTRPB2E2 MVC   0(0,R9),0(R2)     MODIFY PUB2 DATA              @D34YDGL 01213000
XTRPB2PM DC    AL1(0)            . PERMISSION BYTE             @D34YDGL 01214000
         DROP  RC                RELEASE SVC98 BASE            @D52VDGL 01215000
         DROP  RD                RELEASE XTRPUB2 BASE          @D52VDGL 01216000
         DROP  RE                RELEASE PARMLIST BASE         @D52VDGL 01217000
         TITLE 'VSE SUPERVISOR     SGINF      EXTRACT DEVICE TYPE     ' 01218000
***************************************************************         01219000
*  CODEBLOCK XTRDVTY                                          *         01220000
*  FUNCTION: EXTRACT DEVICE TYPE INFORMATION FROM PUB         *         01221000
*  ON ENTRY:                                                  *         01222000
*    RC = BASE, ADDRESS OF SVC98                              *         01223000
*    R6 = RETURN ADDRESS, NOT NECESSARILY DISPAD              *         01224000
*    RE = PTR TO PARAMETERLIST OF SVC98                       *         01225000
***************************************************************         01226000
         USING SVC98,RC          BASE REGISTER                 @D52VDGL 01227000
         USING XTRDVTY,RD        BASE REGISTER                 @D52VDGL 01228000
         USING SVC98PL,RE        PARAMETER LIST                @D52VDGL 01229000
XTRDVTY  DS    0H                START OF CODEBLOCK                     01230000
         LA    R4,XTRDVTPM       ADDRESS OF PERMISSION BYTE    @D51IDGL 01231000
         BAL   R8,XTRPBNDX       GET PUB INDEX                 @D51IDGL 01232000
*SGLINK  XTRPBNDX,INPUT=(R2,R4,R8,RC,RE),OUTPUT=(R3,RF),               X01233000
               WORK=(R0,R1,R4,R5,R7)                                    01234000
         B     XTRERREX          ERR, =======================> @D51IDGL 01235000
         SLL   R3,3              MULTIPLY WITH EIGHT           @D51IDGL 01236000
         AH    R3,YPUBTAB        ADDRESS OF PUB ENTRY          @D51IDGL 01237000
         USING PUBADR,R3         PUBADR BASE POINTER           @D51IDGL 01238000
         LA    R9,PUBDEVTY       POINT TO DEVTYP CODE          @D51IDGL 01239000
         LA    R4,L'PUBDEVTY     LENGTH OF DEVTYPE CODE        @D51IDGL 01240000
         BAL   R7,XTRCLNG2       CHECK USER SUPPLIED LENGTH    @D51IDGL 01241000
*SGLINK  XTRCLNG2,INPUT=(R4,R7,RC,RE),OUTPUT=(R2,RF),WORK=R1            01242000
         DC    AL4(0)            INDICATOR BYTES               @D52..GL 01243000
         B     XTRERREX          ERR, =======================> @D51IDGL 01244000
         MVC   0(L'PUBDEVTY,R2),0(R9) MOVE DEVICE TYPE TO AREA @D51IDGL 01245000
         B     XTREXC00          RETURN =====================> @D51IDGL 01246000
         DROP  R3                RELEASE PUBADR BASE POINTER   @D51IDGL 01247000
XTRDVTPM DC    AL1(XTRPMPK)      PERMISSION BYTE               @D51IDGL 01248000
         DROP  RC                RELEASE SVC98 BASE            @D52VDGL 01249000
         DROP  RD                RELEASE XTRDVTY BASE          @D52VDGL 01250000
         DROP  RE                RELEASE PARMLIST BASE         @D52VDGL 01251000
         TITLE 'VSE SUPERVISOR     SGINF      EXTRACT BOUNDARY DATA   ' 01252000
***************************************************************         01253000
*  FUNCTION: PROVIDE BOUNDARY INFORMATION                     *         01254000
*    ACCORDING TO A MODE FLAG, DIFFERENT INFORMATION          *         01255000
*    ABOUT TEMPORARY OR PERMANENT BOUNDARIES OF A PARTITION   *         01256000
*    OR THE SYSTEM ITSELF WILL BE PROVIDED.                   *         01257290
*    THE DATA WILL BE RETRIEVED FROM THE                      *         01257580
*    STORAGE MANAGEMENT COMMUNICATION BLOCK, AND KEPT IN      *         01258000
*    REGISTERS UNTIL STORAGE TO THE USER AREA, SINCE ANY      *         01259000
*    PAGE FAULT MAY CHANGE THE CONTENT OF THE CONTROL BLOCK.. *         01260000
*  ON ENTRY:                                                  *         01261000
*    RC = BASE, ADDRESS OF SVC98                              *         01262000
*    R6 = RETURN ADDRESS, NOT NECESSARILY DISPAD              *         01263000
*    RE = PTR TO PARAMETER FIELD OF SVC98                     *         01264000
*  ON EXIT TO XTREXC00:                                       *         01265000
*    R0-R5,R7-RA = WORK                                       *         01266000
***************************************************************         01267000
         USING SVC98,RC          BASE REGISTER                 @D52VDGL 01268000
         USING XTRBDY,RD         BASE REGISTER                 @D52VDGL 01269000
         USING SVC98PL,RE        PARAMETER LIST                @D52VDGL 01270000
XTRBDY   DS    0H                EXTRACT BOUNDARY                       01271000
         CLI   SVC98FL,SVC98FL3  MODE=P SPECIFIED              @D35CDGL 01272000
         BE    XTRBDY10          YES,                          @D35CDGL 01273000
         CLI   SVC98FL,SVC98FL1  MODE=T SPECIFIED              @D35CDGL 01274000
         BE    XTRBDY20          YES,                          @D35CDGL 01275000
         CLI   SVC98FL,X'00'     MODE WAS TOTALLY OMITTED      @D35CDGL 01276000
         BE    XTRBDY20          YES,                          @D35CDGL 01277000
         CLI   SVC98FL,X'04'     MODE=SYSP                     @D35CDGL 01278000
         BE    XTRBDY30          YES                           @D35CDGL 01279000
         CLI   SVC98FL,X'05'     MODE=TEMP                     @D52VDGL 01280000
         BE    XTRBDY20          YES,                          @D52VDGL 01281000
         CLI   SVC98FL,X'06'     MODE=PERM                     @D52VDGL 01282000
         BE    XTRBDY10          YES                           @D52VDGL 01283000
         B     XTRERR21          ILLEGAL SVC                   @D35CDGL 01284000
XTRBDY10 DS    0H                BLOCK 'PERMANENT BOUNDARIES'  @D35CDGL 01285000
         LA    R4,XTRBDYPM       ADDRESS OF VALIDATION MASK    @D35CDGL 01286000
         BAL   R7,XTRGTPIK       GET ADDRESS OF PIK            @D35CDGL 01287000
*SGLINK  XTRGTPIK,INPUT=(R2,R4,R7,RC,RE),OUTPUT=(R3,RF)                 01288000
         B     XTRERREX          ERROR, INVALID PIK            @D35CDGL 01289000
         B     XTRERR21          ERROR, NOT AUTHORIZED         @D35CDGL 01290000
         LA    R4,5*4            MINIMUM LENGTH                @D35CDGL 01291000
         BAL   R7,XTRCLNG2       CHECK USER SUPPLIED LENGTH    @D35CDGL 01292000
*SGLINK  XTRCLNG2,INPUT=(R4,R7,RC,RE),OUTPUT=(R2,RF),WORK=R1            01293000
         DC    AL4(0)            INDICATOR BYTES               @D52..GL 01294000
         B     XTRERREX          LENGTH TOO SMALL              @D35CDGL 01295000
         USING X00BDYPM,R2       X00BDYPM BASE POINTER         @D35CDGL 01296000
         LTR   R3,R3             SYSTEM PIK                    @D52VDGL 01297000
         BZ    XTRBDY14          YES,                          @D52VDGL 01298000
         BAL   R7,XTRGTPCB       GET PCB ADDRESS               @D35CDGL 01299000
*SGLINK  XTRGTPCB,INPUT=(R3,R7,RC),OUTPUT=(R9,RF)              @DA44841 01300000
         USING PCBADR,R9         PCBADR BASE POINTER           @D35CDGL 01301000
         B     XTRERREX          ERR  =======================> @D35CDGL 01302000
         L     R1,SMVPBEG        PARTITION BEGIN ADDRESS       @D35CDGL 01303000
         ST    R1,X00VPBEG       SAVE IT IN USER MAP           @D52VDGL 01304000
         L     R1,SMVGVIS        BEGIN OF GETVIS               @D35CDGL 01305000
         ICM   R1,8,H0           CLEAR BYTE 0                  @D35CDGL 01306000
         BCTR  R1,0              LAST BYTE OF PARTITION        @D35CDGL 01307000
         ST    R1,X00VPPPE       STORE IT IN USER MAP          @D52VDGL 01308000
         L     R1,SMVPEND        END   OF GETVIS               @D35CDGL 01309000
         BCTR  R1,0              LAST BYTE ADDRESS             @D35CDGL 01310000
         ST    R1,X00VPEND       STORE IT IN USER MAP          @D52VDGL 01311000
         L     R1,SMRPBEG        REAL PARTITION BEGIN ADDRESS  @D35CDGL 01312000
         ST    R1,X00RPBEG       STORE IT IN USER MAP          @D52VDGL 01313000
         L     R1,SMRPEND        REAL PARTITION END ADDRESS    @D35CDGL 01314000
         BCTR  R1,0              LAST BYTE OF REAL PARTITION   @D35CDGL 01315000
         ST    R1,X00RPEND       STORE IT IN USER MAP          @D52VDGL 01316000
         CLI   SVC98FL,SVC98FL3  WAS THIS THE OLD MODE=P REQ.  @D52VDGL 01317000
         BE    XTREXC00          YES, =======================> @D52VDGL 01318000
         LA    R0,(5+2)*4        LENGTH OF WHAT WE USED SO FAR @D52VDGL 01319000
         CH    R0,SVC98LN        USER WANTS MORE DATA          @D52VDGL 01320000
         BH    XTREXC00          NO,  =======================> @D52VDGL 01321000
         L     R1,SMAXPFIX       GET PFIX LIMIT                @D52VDGL 01322000
         SLL   R1,PNSHIFT-L10    VALUE IN K-BYTES              @D52VDGL 01323000
         ST    R1,X00PFXLL       STORE IT IN USER MAP          @D52VDGL 01324000
         L     R1,SMAXPFX3       GET PFIX LIMIT                @D52VDGL 01325000
         SLL   R1,PNSHIFT-L10    VALUE IN K-BYTES              @D52VDGL 01326000
         ST    R1,X00PFXL3       STORE IT IN USER MAP          @D52VDGL 01327000
         B     XTREXC00               =======================> @D52VDGL 01328000
         DROP  R9                RELEASE PCB BASE POINTER      @D35CDGL 01329000
XTRBDY14 DS    0H                SYSTEM PARTITION REQUEST      @D52VDGL 01330000
         CLI   SVC98FL,X'06'     IS IT A MODE=PERM REQUEST     @D52VDGL 01331000
         BE    XTREXC04          YES, =======================> @D52VDGL 01332000
         L     R9,IJBSMCOM       ADDRESS OF SMCOM              @D52VDGL 01333000
         USING SMCOM,R9          SMCOM BASE POINTER            @D52VDGL 01334000
         L     R1,SMCSVA         ADDRESS OF BEGIN OF SVA       @D52VDGL 01335000
         ST    R1,X00VPBEG       STORE IT IN USER MAP          @D52VDGL 01336000
         L     R1,SMCSVIS        ADDRESS OF SYSTEM GETVIS AREA @D52VDGL 01337000
         ST    R1,X00VPPPE       STORE IT IN USER MAP          @D52VDGL 01338000
         L     R1,SMCESVA        ADDRESS OF END OF SVA         @D52VDGL 01339000
         ST    R1,X00VPEND       STORE IT IN USER MAP          @D52VDGL 01340000
         DROP  R9                RELEASE SMCOM BASE            @D52VDGL 01341000
         B     XTREXC00               =======================> @D35CDGL 01342000
         DROP  R2                RELEASE X00BDYPM BASE         @D52VDGL 01343000
XTRBDY20 DS    0H                BLOCK 'TEMPORARY BOUNDARIES'  @D35CDGL 01344000
         LA    R4,20             MINIMUM LENGTH                @D35CDGL 01345000
         BAL   R7,XTRCLNG2       DID USER PROVIDE ENOUGH SPACE @D35CDGL 01346000
*SGLINK  XTRCLNG2,INPUT=(R4,R7,RC,RE),OUTPUT=(R2,RF),WORK=R1            01347000
         DC    AL4(0)            INDICATOR BYTES               @D52..GL 01348000
         B     XTRERREX          NO,  =======================> @D35CDGL 01349000
         LR    R7,R2             ADDRESS OF USERS AREA         @D35CDGL 01350000
         L     R9,PCBPTR         ADDRESS OF PCB                @D35CDGL 01351000
         USING PCBADR,R9         PCBADR BASE POINTER           @D35CDGL 01352000
         L     RA,PCEPIB         ADDRESS OF PIB                @D35CDGL 01353000
         USING PIBADR,RA         PIB BASE POINTER              @D35CDGL 01354000
         L     R2,CRADDR         ADDRESS OF COMREG             @D35CDGL 01355000
         USING COMREG,R2         COMREG BASE POINTER           @D35CDGL 01356000
         L     R2,PPEND          ADDRESS OF PROBLEM PROGRAM END@D35CDGL 01357000
         DROP  R2                RELEASE COMREG BASE           @D35CDGL 01358000
         L     R5,SMPFIX         NUMBER OF PFIXED PAGES        @D35CDGL 01359000
         L     R1,SMPSAVE        ADDRESS OF BEGIN OF PARTITION @D35CDGL 01360000
         TM    PIBDATFL,PIBTRAM  PARTITION RUNNING VIRTUAL     @D35CDGL 01361000
         BO    XTRBDY22          NO,                           @D35CDGL 01362000
         LR    R3,R5             COPY PFIXED PAGE COUNT        @D35CDGL 01363000
         SLL   R3,PNSHIFT        PFIXED SPACE IN K-BYTES       @D35CDGL 01364000
         AR    R3,R1             ADD BEGIN ADDRESS             @D35CDGL 01365000
         BCTR  R3,0              LAST BYTE OF REAL PARTITION   @D35CDGL 01366000
         SLR   R4,R4             SET PFIX LIMIT TO ZERO        @D35CDGL 01367000
         B     XTRBDY24          JOIN MAIN LINE                @D35CDGL 01368000
XTRBDY22 DS    0H                PARTITION RUNNING VIRTUAL     @D35CDGL 01369000
         L     R3,SMVPEND        PARTITION END ADDRESS         @D35CDGL 01370000
         BCTR  R3,0              LAST BYTE OF PARTITION        @D35CDGL 01371000
         L     R4,SMAXPFIX       GET PFIX LIMIT                @D35CDGL 01372000
         SLL   R4,PNSHIFT-L10    PFIX LIMIT IN K-BYTES         @DA33621 01373000
XTRBDY24 DS    0H                                              @D35CDGL 01374000
         STM   R1,R5,0(R7)       STORE IN USER AREA            @D35CDGL 01375000
         CLI   SVC98FL,X'05'     WAS THIS A MODE=TEMP REQUEST  @D52VDGL 01376000
         BNE   XTREXC00          NO,  =======================> @D52VDGL 01377000
         LA    R4,7*4            AREA THAT HAS BEEN USED       @D52VDGL 01378000
         CH    R4,SVC98LN        DID USER REQUEST MORE DATA    @D52VDGL 01379000
         BH    XTREXC00          NO,  =======================> @D52VDGL 01380000
         L     R1,SMAXPFX3       GET PFIX LIMIT                @D52VDGL 01381000
         SLL   R1,PNSHIFT-L10    VALUE IN K-BYETS              @D52VDGL 01382000
         ST    R1,5*4(R7)        STORE IT IN USER AREA         @D52VDGL 01383000
         L     R1,SMPFIX3        GET PFIX LIMIT (31 BIT)       @D52VDGL 01384000
         ST    R1,6*4(R7)        STORE IN USER AREA            @D52VDGL 01385000
         B     XTREXC00               =======================> @D35CDGL 01386000
         DROP  RA                RELEASE PIB BASE              @D35CDGL 01387000
         DROP  R9                RELEASE PCB BASE              @D35CDGL 01388000
XTRBDY30 DS    0H                PROVIDE SYSTEM INFORMATION    @D51IDGL 01389000
         LA    R4,X02PPBEG-X02SYSP+L'X02PPBEG MIN. LENGTH      @D41ADAP 01390490
         BAL   R7,XTRCLNG2       CHECK USER SUPPLIED LENGTH    @D51IDGL 01391000
*SGLINK  XTRCLNG2,INPUT=(R4,R7,RC,RE),OUTPUT=(R2,RF),WORK=R1            01392000
         DC    AL4(0)            INDICATOR BYTES               @D52..GL 01393000
         B     XTRERREX          ERR, ======================>> @D51IDGL 01394190
         LH    R4,SVC98LN        GET USER SUPPLIED LENGTH      @D52VDGL 01394380
         USING X02SYSP,R2        BOUNDARY MAPPING BASE         @D41ADAP 01394570
         L     R1,IJBSMCOM       SMCOM BASE ADDRESS            @D51IDGL 01395000
         USING SMCOM,R1          SMCOM BASE POINTER            @D51IDGL 01396000
.*       PROVIDE BASIC DATA                                    @D41ADAP 01397490
         MVC   X02SUPND(X02PPBEG-X02SUPND+L'X02PPBEG),SMCSUPND @D41ADAP 01397980
         LA    R0,X02SGV3E-X02SYSP+L'X02SGV3E BASIC+SVA LEN    @D41ADAP 01398470
         CR    R4,R0             DID USER REQUEST SVA DATA     @D41ADAP 01398960
         BL    XTREXC00          NO,  =======================> @D41ADAP 01399450
.*       PROVIDE SVA DATA                                      @D41ADAP 01399940
         MVC   X02SVA3B(X02SGV3E-X02SVA3B+L'X02SGV3E),SMCSVA31 @D41ADAP 01400430
         LA    R0,X02VSIZE-X02SYSP+L'X02VSIZE BASIC+SVA+VLIB   @D41ADAP 01400920
         CR    R4,R0             DID USER REQUEST VLIB DATA    @D41ADAP 01401410
         BL    XTREXC00          NO,  =======================> @D41ADAP 01401900
.*       PROVIDE VIRTUAL LIBRARY DATA                          @D41ADAP 01402390
         L     R1,IJBSVA         ADDRESS OF SVA HEADER         @D52VDGL 01404000
         ICM   R1,8,F0           CLEAR FLAG BYTE               @D52VDGL 01405490
         USING DSVA,R1           SVA BASE POINTER              @D52VDGL 01406000
         L     R0,DSVAVL31       VIRTUAL LIBRARY ADDRESS       @D52VDGL 01407000
         ST    R0,X02VLB3B       BEGIN OF VIRTUAL LIBRARY      @D41ADAP 01408490
         L     R0,DSVAED31       GET ADDRESS                   @D52VDGL 01409000
         ST    R0,X02VLB3E       END OF VIRTUAL LIBRARY        @D41ADAP 01410490
         L     R0,IJBVSIZE       VIRTUAL STORAGE SIZE          @D52VDGL 01411000
         ST    R0,X02VSIZE       TOTAL VIRT. STORAGE IN K-BYTES@D41ADAP 01412590
         LA    R0,X02SPFC3-X02SYSP+L'X02SPFC3 BASIC+SVA+VLIB+PFIX       01413180
         CR    R4,R0             DID USER REQUEST PFIX DATA    @D41ADAP 01413770
         BL    XTREXC00          NO,  =======================> @D41ADAP 01414360
.*       PROVIDE PFIX AND SYSTEM DATA                          @D41ADAP 01414950
         SLR   R0,R0             CLEAR REGISTER                @D52VDGL 01416000
         L     R3,ASCBATAB       ADDRESS OF SCBATAB            @D52VDGL 01417590
         USING SCBATAB,R3        SCBATAB BASE POINTER          @D52VDGL 01418180
         L     R3,ASCBFPMR       PAGE MANAGER SCB ADDRESS      @D52VDGL 01419000
         USING SCBADR,R3         SCBADR BASE POINTER           @D52VDGL 01420000
         LTR   R1,R3             COPY SCP START ADDRESS        @D52VDGL 01421490
         BNZ   XTRBDY32          PAGE MANAGER SPACE ALLOCATED  @D52VDGL 01422000
         BAL   R5,SYSERROR       NO,  =====================>>> @D52VDGL 01423000
XTRBDY32 DS    0H                PROCESS SCB INFORMATION       @D52VDGL 01424000
         A     R0,SCBSIZE        ADD ITS SCB SIZE              @D52VDGL 01425490
         L     R3,SCBFWPT        POINT TO NEXT SCB             @D52VDGL 01426000
         CR    R1,R3             HAVE WE REACHED THE END       @D52VDGL 01427000
         BNE   XTRBDY32          NO,                           @D52VDGL 01428000
         ST    R0,X02SYSVS       TOTAL SYS.USED VIRTUAL STORAGE@D41ADAP 01429490
         L     R1,APCBATAB       ADDRESS OF PCBATAB            @D52VDGL 01430000
         L     R1,0(,R1)         ADDRESS OF SYSTEM PCB         @D52VDGL 01431490
         USING PCBADR,R1         PCBADR BASE POINTER           @D52VDGL 01432000
         L     R0,SMAXPFIX       GET MAX. PFIX LIMIT           @D52VDGL 01433000
         ST    R0,X02SPFLL       STORE SYSTEM PFIX LIMIT LOW   @D41ADAP 01434490
         L     R0,SMPFIX         GET PFIX LIMIT                @D52VDGL 01435000
         ST    R0,X02SPFCL       STORE SYSTEM PFIX COUNTER LOW @D41ADAP 01436490
         L     R0,SMAXPFX3       GET PFIX31 LIMIT              @D52VDGL 01437000
         ST    R0,X02SPFL3       STORE SYSTEM PFIX LIMIT HIGH  @D41ADAP 01438490
         L     R0,SMPFIX3        GET PFIX31 LIMIT              @D52VDGL 01439000
         ST    R0,X02SPFC3       STORE SYSTEM PFIX COUNTER HIGH@D52VDGL 01440990
         DROP  R1                RELEASE PCB BASE POINTER      @D51IDGL 01442000
         DROP  R3                RELEASE SCB BASE POINTER      @D51IDGL 01443000
         AIF   (NOT &VSE410).N410020                                    01444020
         LA    R0,X02RRSVD-X02SYSP+L'X02RRSVD BASIC+SVA+VLIB+PFIX+REAL  01444040
         CR    R4,R0             DID USER REQUEST MORE DATA    @@@@@@MZ 01444060
         BL    XTREXC00          NO,  =======================> @@@@@@MZ 01444080
         L     R3,IJBSMCOM       SMCOM BASE ADDRESS            @@@@@@MZ 01444100
         USING SMCOM,R3          SMCOM BASE POINTER            @@@@@@MZ 01444120
         LG    R1,SMCPEOR        LAST BYTE OF PHYS. REAL STOR. @@@@@@MZ 01444140
         ALGF  R1,F1             SIZE OF REAL STOR. IN BYTES   @@@@@@MZ 01444160
         SRLG  R1,R1,10          SIZE OF REAL STOR. IN K-BYTES.@@@@@@MZ 01444180
.*                               .. FITS IN ONE REGISTER       @@@@@@MZ 01444200
         ST    R1,X02RSIZE       REAL STORAGE IN K-BYTES       @@@@@@MZ 01444220
         LG    R1,SMCPEOR        LAST BYTE OF PHYS. REAL STOR. @@@@@@MZ 01444240
         CLGF  R1,X2GBM1         MORE THAN 2 G-BYTES           @@@@@@MZ 01444260
         BNH   XTRBDY34          NO                            @@@@@@MZ 01444280
         SLGR  R1,R1             ENSURE BYTE 0 - 3 ARE ZERO    @@@@@@MZ 01444300
         L     R1,X2GBM1         R1 = 2GB MINUS 1              @@@@@@MZ 01444320
XTRBDY34 DS    0H                R1 = MIN (2GB-1, END OF REAL) @@@@@@MZ 01444340
         SL    R1,IJBEOR         AREA RESERVED FOR PMR USE     @@@@@@MZ 01444360
         SRL   R1,10             SIZE IN KBYTES (FITS IN 1 REG)@@@@@@MZ 01444380
         L     R0,SMPPMIN        NO OF PAGES IN MIN. PAGE POOL @@@@@@MZ 01444400
         SLL   R0,2              MIN. PAGE POOL IN K-BYTES     @@@@@@MZ 01444420
         AR    R0,R1             RESERVED STORAGE IN K-BYTES   @@@@@@MZ 01444440
         ST    R0,X02RRSVD       TOTAL RESERVED STOR. IN K-BYTE@@@@@@MZ 01444460
         DROP  R3                RELEASE SMCOM BASE            @@@@@@MZ 01444480
.N410020 ANOP                                                           01444500
         B     XTREXC00               =======================> @D51IDGL 01444520
*        LA    R0,X02XXXXX-X02SYSP+L'X02XXXXX BASIC+SVA+VLIB+PFIX+REAL+ 01444540
*        CR    R4,R0             DID USER REQUEST MORE DATA    @D41ADAP 01444560
*        BL    XTREXC00          NO,  =======================> @D41ADAP 01444580
XTRBDYPM DC    AL1(XTRPMPK)      PERMISSION FOR FOREIGN PIKS   @D41ADAP 01444600
         DROP  R2                RELEASE X02SYSP               @D41ADAP 01444620
         DROP  RC                RELEASE SVC98 BASE            @D52VDGL 01445000
         DROP  RD                RELEASE XTRBDY  BASE          @D52VDGL 01446000
         DROP  RE                RELEASE PARMLIST BASE         @D52VDGL 01447000
         MAPEXTR ID=BDY,MODE=PERM,DSECT=YES,PREFIX=X00         @D52VDGL 01448000
         MAPEXTR ID=BDY,MODE=TEMP,DSECT=YES,PREFIX=X01         @D52VDGL 01449000
         MAPEXTR ID=BDY,MODE=SYSP,DSECT=YES,PREFIX=X02         @D52VDGL 01450000
         MAPEXTR ID=DEVICE,DSECT=YES,RECID=QDIO,PREFIX=QIO     @DSCSI   01452000
         AIF   (NOT &VSE280).N280000                           @D66ADAP 01454000
         MAPEXTR ID=DEVICE,DSECT=YES,RECID=SCSI,PREFIX=QSC     @DSCSI   01455000
.N280000 ANOP                                                           01456000
&SYSECT  CSECT                                                 @D52VDGL 01457000
         TITLE 'VSE SUPERVISOR     SGINF      PROVIDE CR-REG CONTENTS ' 01458000
***************************************************************         01459000
*  FUNCTION: STORE CONTROL REGISTERS TO USER AREA             *         01460000
*  ON ENTRY:                                                  *         01461000
*    RC = BASE, ADDRESS OF SVC98                              *         01462000
*    R6 = RETURN ADDRESS, NOT NECESSARILY DISPAD              *         01463000
*    RE = PTR TO PARAMETERLIST OF SVC98                       *         01464000
*  ON EXIT TO XTREXC00: CONTROL REGS PROVIDED                 *         01465000
*    R0 R3 = WORK                                             *         01466000
***************************************************************         01467000
         USING SVC98,RC          BASE REGISTER                 @D52VDGL 01468000
         USING XTRCR,RD          BASE REGISTER                 @D52VDGL 01469000
         USING SVC98PL,RE        PARAMETER LIST                @D52VDGL 01470000
XTRCR    DS    0H                START OF CODEBLOCK                     01471000
         LA    R0,64             GET CONSTANT                  @D35EDGL 01472000
         CH    R0,SVC98LN        IS USER AREA AT LEAST 64 BYTES@D35EDGL 01473000
         BH    XTREXC16          NO,  ======================>> @DA44841 01474000
         L     R3,SVC98AR        ADDRESS OF USER AREA          @D35EDGL 01475000
PCKEXT20 XC    0(16*4,R3),0(R3)  FORCE PAGE FAULT NOW          @DA44841 01476000
PCKEXT21 EQU   *                 FORCE THE PAGE FAULT NOW      @DA44841 01477000
         TM    SVC98AR+3,X'03'   IS THIS FULLWORD BOUNDARY     @DA44841 01478000
         BNZ   XTRCR010          NO,                           @DA44841 01479000
         STCTL 0,15,0(R3)        SAVE CR-0 TO CR-15            @DA44841 01480000
         B     XTREXC00               ======================>> @DA44841 01481000
XTRCR010 LA    R4,3(,R3)         ADDRESS OF USER AREA PLUS 3   @DA44841 01482000
         LA    R0,4              LOAD CONSTANT                 @DA44841 01483000
         LNR   R0,R0             MAKE IT FFFFFFFC              @DA44841 01484000
         NR    R4,R0             FIRST FULLWORD-BOUNDARY       @DA44841 01485000
         STCTL 15,15,0(R4)       SAVE CR-15 FIRST              @DA44841 01486000
         L     R5,0(R4)          SAVE IT FOR LATER USE         @DA44841 01487000
         STCTL 0,14,0(R4)        SAVE CR-0 TO CR-14            @DA44841 01488000
         MVC   0(15*4,R3),0(R4)  MOVE CR-0 TO CR-14 CONTENTS   @DA44841 01489000
         STCM  R5,15,15*4(R3)    STORE CR-15 DATA TO USER AREA @DA44841 01490000
         B     XTREXC00               ======================>> @D51IDGL 01491000
         DROP  RC                RELEASE SVC98 BASE            @D52VDGL 01492000
         DROP  RD                RELEASE XTRCR BASE            @D52VDGL 01493000
         DROP  RE                RELEASE SVC98PL BASE          @D52VDGL 01494000
         TITLE 'VSE SUPERVISOR     SGINF      PROVIDE PUB INFORMATION ' 01495000
***************************************************************         01496000
*  FUNCTION: EXTRACT INFORMATION FROM PUB.                    *         01497000
*  ON ENTRY:                                                  *         01498000
*    RC = BASE, ADDRESS OF SVC98                              *         01499000
*    R6 = RETURN ADDRESS, NOT NECESSARILY DISPAD              *         01500000
*    RE = PTR TO PARAMETERLIST OF SVC98                       *         01501000
*  ON EXIT TO XTREXC00:   USER AREA IS UPDATED                *         01502000
*    R0-R5,R7-RA = WORK                                       *         01503000
***************************************************************         01504000
         USING SVC98,RC          BASE REGISTER                 @D52VDGL 01505000
         USING XTRPUB,RD         BASE REGISTER                 @D52VDGL 01506000
         USING SVC98PL,RE        PARAMETER LIST                @D52VDGL 01507000
XTRPUB   DS    0H                START OF CODEBLOCK            @D35EDGL 01508000
         LA    R4,XTRPUBPM       POINT TO VALIDATION MASK      @D51IDGL 01509000
         BAL   R8,XTRPBNDX       GET PUB INDEX                 @D51IDGL 01510000
*SGLINK  XTRPBNDX,INPUT=(R2,R4,R8,RC,RE),OUTPUT=(R3,RF),               X01511000
               WORK=(R0,R1,R4,R5,R7)                                    01512000
         B     XTRERREX          ERR, ======================>> @D51IDGL 01513000
         SLL   R3,3              PUB OFFSET                    @D35EDGL 01514000
         AH    R3,YPUBTAB        ADDRESS OF PUB                @D35EDGL 01515000
         LR    R9,R3             COPY PUB ADDRESS              @D35EDGL 01516000
         SR    R5,R5             CLEAR REGISTER                @D35EDGL 01517000
         ICM   R5,3,SVC98DI      GET USER SPECIFIED OFFSET     @D35EDGL 01518000
         LA    R3,PUBLNG         LENGTH OF PUB ENTRY           @D35EDGL 01519000
         BAL   R7,XTRCLNG1       VALIDATE LENGTH SPECIFICATIONS@D35EDGL 01520000
*SGLINK  XTRCLNG1,INPUT=(R3,R5,R7,RC,RE),OUTPUT=(R2,R4,RF),WORK=R1      01521000
         DC    AL4(0)            INDICATOR BYTES               @D52..GL 01522000
         B     XTRERREX          ERR, ======================>> @D35EDGL 01523000
XTRPUB10 DS    0H                GET BYTES FROM PUB            @D35EDGL 01524000
         IC    R0,0(R5,R9)       GET THE PROPER BYTE FROM PUB  @D35EDGL 01525000
         N     R0,0(R5,0)        SET OFF THE IRRELEVANT BITS   @D35EDGL 01526000
         ORG   *-2               MAKE PROVISIONS               @D35EDGL 01527000
         DC    S(XTRPUBM0-3)     TO PREVENT ALIGNMENT ERRORS   @D35EDGL 01528000
         STC   R0,0(R2)          STORE PUB BYTE TO USER AREA   @D35EDGL 01529000
         LA    R5,1(,R5)         ADVANCE TO NEXT SOURCE BYTE   @D35EDGL 01530000
         LA    R2,1(,R2)         ADVANCE TO NEXT USER DATA BYTE@D35EDGL 01531000
         BCT   R4,XTRPUB10       PROCESS NEXT BYTE IN PUB      @D35EDGL 01532000
         B     XTREXC00               ======================>> @D35EDGL 01533000
*-------------------------------------------------------------*@D51IDGL 01534000
*  ALL DEFINITIONS USED FOR XTRPUB. ROUTINE IS NOW REENTRANT  *@D51IDGL 01535000
*-------------------------------------------------------------*@D51IDGL 01536000
XTRPUBM0 DC    X'FF'    0 PUBCHANN SHALL BE SUPPLIED           @D35EDGL 01537000
         DC    X'FF'    1 PUBDEVNO ALSO                        @D35EDGL 01538000
         DC    X'00'    2 PUBCHQPT WILL BE SUPPRESSED          @D35EDGL 01539000
         DC    X'00'    3 PUBERROR OR PUBCHQPH  ALSO           @D52VDGL 01540000
         DC    X'FF'    4 PUBDEVTY DEVICE TYPE IS SUPPLIED     @D35EDGL 01541000
         DC    X'FF'    5 PUBOPTN  ALSO                        @D35EDGL 01542000
         DC    X'03'    6 PUBCSFLG (NOT ALL FLAGS SUPPLIED)    @D35EDGL 01543000
         DC    X'FC'    7 PUBJCFLG (NOT ALL FLAGS SUPPLIED)    @D35EDGL 01544000
         SPACE 1                                               @D35EDGL 01545000
XTRPUBPM DC    AL1(XTRPMPK)  PERMISSION BYTE                   @D35EDGL 01546000
         SPACE 1                                               @D35EDGL 01547000
         DROP  RC                RELEASE SVC98 BASE            @D52VDGL 01548000
         DROP  RD                RELEASE XTRPUB BASE           @D52VDGL 01549000
         DROP  RE                RELEASE SVC98PL BASE          @D52VDGL 01550000
         TITLE 'VSE SUPERVISOR     SGINF      PROVIDE CPU-ID          ' 01551000
***************************************************************         01552000
*  FUNCTION: EXTRACT CPUID AND SYSLOG ID TO USER AREA         *         01553000
*  ON ENTRY:                                                  *         01554000
*    RC = BASE, ADDRESS OF SVC98                              *         01555000
*    RD = BASE, ADDRESS OF XTRCPUID                           *         01556000
*    R6 = RETURN ADDRESS, NOT NECESSARILY DISPAD              *         01557000
*    RE = PTR TO PARAMETER FIELD OF SVC98                     *         01558000
*  ON EXIT TO R6:  USER AREA HAS BEEN UPDATED                 *         01559000
***************************************************************         01560000
         USING SVC98,RC          BASE REGISTER                 @D52VDGL 01561000
         USING SVC98PL,RE        PARAMETER LIST                @D52VDGL 01562000
         USING XTRCPUID,RD       BASE REGISTER                 @D52VDGL 01563000
XTRCPUID DS    0H                EXTRACT CPUID                          01564000
         LH    R1,SVC98LN        LENGTH OF USER SUPPLIED AREA  @D51IDGL 01565000
         LA    RF,16             INDICATE INVALID LENGTH       @DY45383 01566000
         LTR   R1,R1             IS THIS A VALID LENGTH        @DY45383 01567000
         BNP   XTRERREX          NO,  =======================> @D35EDGL 01568000
         L     R2,SVC98AR        USERS DATA AREA               @DY45383 01569000
         LA    R4,18             DOES USER WANT IT ALL         @DY45817 01570000
         CR    R1,R4             DID USER REQUEST MORE BYTES   @DY45383 01571000
         BL    XTRCPU10          NO,                           @DY45383 01572000
         LR    R1,R4             LIMIT TO 18 BYTES ONLY        @DY45817 01573000
XTRCPU10 L     R3,RASLINKA       VIRTUAL CPUID SOURCE ADDRESS  @D51EMGL 01574000
         USING RASLINK,R3        RAS-LINK BASE POINTER         @D51EMGL 01575000
         LA    R4,CPUID          GET SOURCE ADDRESS            @DY45383 01576000
         DROP  R3                RELEASE RASLINK BASE          @DY45817 01577000
         L     R3,AARBUFAR       ARBUFFER BASE ADDRESS         @DA44841 01578000
         USING ARBUFFER,R3       ARBUFFER BASE POINTER         @DA44841 01579000
         CLI   SVC98FL,X'01'     MODE=REAL REQUESTED           @D51EMGL 01580000
         BNE   XTRCPU20          NO,                           @D51EMGL 01581000
         LA    R4,RCPU0ID        REAL CPUID SOURCE ADDRESS     @DY45383 01582000
XTRCPU20 BCTR  R1,0              ADJUST FOR EXECUTE            @DY45383 01583000
         EX    R1,XTREXCPU       MOVE DATA TO USER AREA        @DY45383 01584000
         SH    R1,H8             DID CALLER REQUEST MORE DATA  @DY45383 01585000
         BM    XTREXC00          NO,  =======================> @DY45383 01586000
         L     R9,PCBPTR         PCB ADDRESS                   @D35EDGL 01587000
         USING PCBADR,R9         PCB BASE POINTER              @D35EDGL 01588000
         EX    R1,XTREXLID       MOVE DATA TO USER AREA        @DY45383 01589000
         SH    R1,H2             DID CALLER REQUEST MORE DATA  @DY45383 01590000
         BM    XTREXC00          NO,  =======================> @DY45383 01591000
         EX    R1,XTREXVSE       MOVE DATA TO USER AREA        @DY45383 01592000
         B     XTREXC00          RETURN =====================> @D35EDGL 01593000
XTREXLID MVC   8(0,R2),PCELID    SAVE SYSLOG ID IN USER AREA   @D35EDGL 01594000
XTREXVSE MVC   10(0,R2),ARVSEID  SAVE VSE-MACHINE ID           @DY45817 01595000
         DROP  R9                RELEASE PCB BASE              @D35EDGL 01596000
XTREXCPU MVC   0(0,R2),0(R4)     MOVE CPUID                    @D51EMGL 01597000
         DROP  R3                RELEASE ARBUFFER BASE         @DA44841 01598000
         DROP  RC                RELEASE SVC98 BASE                     01599000
         DROP  RD                RELEASE XTRCPUID BASE                  01600000
         DROP  RE                RELEASE PARAMETER BASE                 01601000
         SPACE 1                                               @D62NDAP 01602000
         MAPEXTR ID=CPUID,DSECT=YES,PREFIX=X10                 @D52VDGL 01603000
&SYSECT  CSECT                                                 @D52VDGL 01604000
         TITLE 'VSE SUPERVISOR     SGINF      PROVIDE STORAGE MAPPING ' 01605000
***************************************************************         01606000
*  CODEBLOCK XTRMAP                                           *         01607000
*  FUNCTION: EXTRACT STRING OF PIKS FOR A USER SUPPLIED SPACE *         01608000
*    WHICH MAY EITHER BE A STATIC SPACE (THE STRING BEING     *         01609000
*    ONE OR MORE IN LENGTH) OR A DYNAMIC SPACE (LENGTH OF ONE)*         01610000
*  ON ENTRY:                                                  *         01611000
*    RC = BASE, ADDRESS OF SVC98                              *         01612000
*    R6 = RETURN ADDRESS, NOT NECESSARILY DISPAD              *         01613000
*    RE = PTR TO PARAMETERLIST OF SVC98                       *         01614000
*  ON EXIT TO XTREXC00: USER AREA UPDATED                     *         01615000
*    R0-R5,R7-RA = WORK                                       *         01616000
***************************************************************         01617000
         USING SVC98,RC          BASE REGISTER                 @D52VDGL 01618000
         USING SVC98PL,RE        PARAMETER LIST                @D52VDGL 01619000
         USING XTRMAP,RD         BASE REGISTER                 @D52VDGL 01620000
XTRMAP   DS    0H                START OF CODEBLOCK                     01621000
         L     R3,ASCBATAB       ADDDRESS OF SCBATAB           @D218DGL 01622000
         USING SCBATAB,R3        SCBATAB BASE                  @D218DGL 01623000
         L     R3,ASCB0          ADDRESS OF SCB-0              @D218DGL 01624000
         USING SCBADR,R3         SCB BASE ADDRESS              @D218DGL 01625000
         LA    R4,L'SCBDSPIK     MIN. LENGTH OF PIK STRING     @D52VDGL 01626000
         BAL   R7,XTRCLNG2       CHECK USER SUPPLIED LENGTH    @D52VDGL 01627000
*SGLINK  XTRCLNG2,INPUT=(R4,R7,RC,RE),OUTPUT=(R2,RF),WORK=R1            01628000
         DC    AL4(0)            INCICATOR BYTES               @D52..GL 01629000
         B     XTRERREX          LENGTH OPERAND TOO SMALL      @D52VDGL 01630000
         L     R1,SVC98SI        GET ADDRESS OF SPACE-ID       @D218DGL 01631000
         LTR   R1,R1             DID USER PROVIDE A SPACE ID   @D218DGL 01632000
         BZ    XTRMAP40          NO,                           @D218DGL 01633000
PCKEXT40 ICM   R0,3,0(R1)        GET SPACE-ID                  @D218DGL 01634000
PCKEXT41 EQU   *                 PROGRAM CHECK POSSIBLE        @D218DGL 01635000
         L     RC,FSVCBASE       SGTINF BASE ADSDRESS          @D52VDGL 01636000
         USING SGTINF,RC         SGTINF BASE POINTER           @D52VDGL 01637000
         LR    RA,RB             SAVE RB                       @D52VDGL 01638000
         LR    R4,R2             SAVE R2                       @D52VDGL 01639000
         BAL   R9,TINFCSID       CHECK SID AND GET SCB ADDRESS @D52VDGL 01640000
*SGLINK  TINFCSID,INPUT=(R0,R9,RC),WORK=R0,R2,R3,RB),OUTPUT=(R3,RF)     01641000
         USING *,R9              TEMPORARY BASE                @D52VDGL 01642000
         NOP   0                 NOOP                          @D52VDGL 01643000
         L     RC,XTRMAPB        SVC98 BASE ADDRESS            @D52VDGL 01644000
         DROP  R9                RELEASE TEMP BASE             @D52VDGL 01645000
         USING SVC98,RC          SVC98 BASE POINTER            @D52VDGL 01646000
         LR    R2,R4             RESTORE R2                    @D52VDGL 01647000
         LR    RB,RA             RESTORE RB                    @D52VDGL 01648000
         L     R1,ASIDSTR        SIDSTR BASE ADDRESS           @D51IDGL 01649000
         USING SIDSTR,R1         SIDSTR BASE POINTER           @D51IDGL 01650000
         CLM   R0,1,SID0+1       IS THIS THE RIGHT SIDSTR      @D51IDGL 01651000
         BNE   XTRMAP20          NO,                           @D51IDGL 01652000
         DROP  R1                DROP SIDSTR BASE              @D51IDGL 01653000
         CH    RF,H12            WAS STATIC SID A POSSIBLE ONE @D52VDGL 01654000
         BE    XTREXC04          NO,                           @D52VDGL 01655000
         LTR   RF,RF             WAS RETURN CODE ZERO          @D52VDGL 01656000
         BNZ   XTREXC00          NO,                           @D52VDGL 01657000
         LA    R4,L'SCBPSTR      LENGTH OF PIK STRING          @D218DGL 01658000
         CH    R4,SVC98LN        GREATER THAN PROVIDED LENGTH  @D218DGL 01659000
         BH    XTREXC16          YES,                          @D218DGL 01660000
         LA    R3,SCBPSTR        POINT TO PIK STRING           @D218DGL 01661000
         B     XTRMAP30                                        @D51IDGL 01662000
XTRMAP20 DS    0H                DYNAMIC SPACE PROCESSING      @D51IDGL 01663000
         LA    R4,L'SCBDSPIK     MIN. LENGTH OF PIK STRING     @D52VDGL 01664000
         LTR   RF,RF             WAS RETURN CODE ZERO          @D52VDGL 01665000
         BNZ   XTREXC04          NO,                           @D52VDGL 01666000
         LA    R3,SCBDSPIK       ADDRESS OF DYN. PIK STRING    @D51IDGL 01667000
XTRMAP30 DS    0H                                              @D51IDGL 01668000
         BCTR  R4,0              ADJUST FOR EXECUTE            @D51IDGL 01669000
         EX    R4,XTRMAPE1       MOVE PIKS TO USER AREA        @D51IDGL 01670000
         B     XTREXC00          RETURN======================> @D51IDGL 01671000
XTRMAP40 DS    0H                                              @D218DGL 01672000
         USING SCBADR,R3         SCB-0 BASE POINTER            @D218DGL 01673000
         LA    R0,L'SCBPSTR      LENGTH OF PIK STRING          @D218DGL 01674000
         CH    R0,SVC98LN        WOULD IT FIT IN USERS AREA    @D218DGL 01675000
         BH    XTREXC16          NO,                           @D218DGL 01676000
         MVC   0(L'SCBPSTR,R2),SCBPSTR STORE PIK STRING        @D218DGL 01677000
         DROP  R3                PTR TO SCBADR                 @D218DGL 01678000
         B     XTREXC00          RETURN ====================>>>@D218DGL 01679000
         SPACE 1                                                        01680000
XTRMAPE1 MVC   0(0,R2),0(R3)     FOR EXECUTE INSTRUCTION       @D218DGL 01681000
         SPACE 1                                                        01682000
XTRMAPB  DC    A(SVC98)          SVC98 BASE ADDRESS            @D52VDGL 01683000
XTRAFSVC DC    A(SGTINF)         SGTINF BASE ADDRESS           @D52VDGL 01684000
         DROP  RC                RELEASE SVC98 BASE                     01685000
         DROP  RD                RELEASE XTRMAP BASE                    01686000
         DROP  RE                RELEASE PARAMETER BASE                 01687000
         TITLE 'VSE SUPERVISOR     SGINF      PROVIDE SENSE DATA      ' 01688000
***************************************************************         01689000
*  FUNCTION: EXTRACT SENSE BYTES OF A DEVICE OR DATA FROM     *         01690000
*            PUBX ENTRY FOR DEVICE                            *         01691000
*  ON ENTRY:                                                  *         01692000
*    RC = BASE, ADDRESS OF SVC98                              *         01693000
*    R6 = RETURN ADDRESS, NOT NECESSARILY DISPAD              *         01694000
*    RE = PTR TO PARAMETERLIST OF SVC98                       *         01695000
*  ON EXIT TO XTREXC00: USER AREA UPDATED                     *         01696000
*    R0-R5,R7-RA = WORK                                       *         01697000
*  DATA RETURNED:                                             *         01697100
*    BYTES 0- 1   CUU            ADDRESS                      *         01697200
*             2   PUBDEVTY       DEVICE TYPE CODE             *         01697300
*          3- 9   SNSID          SENSE-ID CODE                *         01697400
*-----------------OPTIONAL------------------------------------*         01697500
*         10-11   OBR CODE       ASSIGNED OBR CODE            *         01697600
*            12   MDR CODE       ASSIGNED MDR CODE            *         01697700
*         13-N                   DEVICE CLASS SPECIFIC DATA   *         01697800
***************************************************************         01698000
         USING SVC98,RC          BASE REGISTER                 @D52VDGL 01699000
         USING XTRSNDV,RD        BASE REGISTER                 @D52VDGL 01700000
         USING SVC98PL,RE        PARAMETER LIST                @D52VDGL 01701000
XTRSNDV  DS    0H                START OF CODEBLOCK                     01702000
         LA    R4,XTRSDPM        R4: POINT TO PERMISSION BYTE  @D14CDGL 01703000
         BAL   R8,XTRPBNDX       GET PUB INDEX                 @D14CDGL 01704000
*SGLINK  XTRPBNDX,INPUT=(R2,R4,R8,RC,RE),OUTPUT=(R3,RF),               X01705000
               WORK=(R0,R1,R4,R5,R7)                                    01706000
         B     XTRERREX          PUB INDEX NOT FOUND           @D14CDGL 01707000
         LR    R9,R3             COPY PUB INDEX                @D14CDGL 01708000
         LR    R5,R3             SAVE PUB INDEX FOR LATER USE  @D66ADAP 01709000
         SLL   R5,PUBSLEN        PUB OFFSET IN PUB TABLE       @D66ADAP 01710000
         AH    R5,YPUBTAB        ADDRESS OF PUB ENTRY          @D66ADAP 01711000
         USING PUBADR,R5         PUB BASE POINTER              @D66ADAP 01712000
         SLL   R9,2              MULTIPLY WITH FOUR            @D14CDGL 01713000
         A     R9,APBXAREA       ADDRESS OF PUBX ADDRESS       @D14CDGL 01714000
         L     R9,0(,R9)         ADDRESS OF PUBX               @D14CDGL 01715000
         USING PBXADR,R9         PUBX BASE POINTER             @D14CDGL 01716000
         L     R3,SVC98AR        ADDRESS OF USER AREA          @D14CDGL 01717000
         CLI   SVC98ID,DEVEXID   DID USER REQUEST DEVICE       @D21WDGL 01718000
         BNE   XTRSDS10          NO, HE REQUESTED SNS-DATA     @D21WDGL 01719000
         LA    R1,10             MIN. LENGTH REQUIRED          @D21IDGL 01720000
         CH    R1,SVC98LN        DID USER PROVIDE MIN. LENGTH  @D21IDGL 01721000
         BH    XTREXC16          NO,                           @D21IDGL 01722000
         MVC   0(2,R3),PBXCUU    PROVIDE CUU                   @D21IDGL 01723000
         MVC   2(1,R3),PBXPUBCD  PROVIDE DEVICE TYPE CODE      @D21IDGL 01724000
         MVC   3(7,R3),PBXSNSID  DEFAULT TO SENSE-ID INFO.     @D21IDGL 01725000
         TM    PBXFLAG,PBXTAPE   IS THIS TAPE DEVICE           @DY46071 01726000
         BZ    XTRSD30           NO,                           @DY46071 01727000
         ICM   R4,15,PBXVCTE     GET VCTE ADDRESS              @DY46071 01728000
         BZ    XTRSD20           NOT PRESENT                   @DY46071 01729000
         USING VCTEADR,R4        VCTEADR BASE POINTER          @DY46071 01730000
         OC    VCTTCUTY,VCTTCUTY IS DEVICE INFORMATION PRESENT @DY46071 01731000
         BZ    XTRSD20           NO,                           @DY46071 01732000
         MVC   4(6,R3),VCTTCUTY  PROVIDE REAL DEVICE INFO.     @DY46071 01733000
         B     XTRSD30           JOIN MAIN LINE                @DY46071 01734000
XTRC3592 DC    XL6'000000359200' CONSTANT FOR NOTOP 3592 DEVICE@DY46071 01735000
XTRSD20  TM    PBXTREC,PBXT512T  WAS MEDIA A CST5              @DY46071 01736000
         BZ    XTRSD30           NO,                           @DY46071 01737000
         MVC   4(6,R3),XTRC3592  PROVIDE REAL DEVICE INFO.     @DY46071 01738000
XTRSD30  AR    R3,R1             ADJUST TARGET POINTER         @D21IDGL 01739000
         LNR   R1,R1             PROVIDE FOR SUBTRACTION       @D21IDGL 01740000
         AH    R1,SVC98LN        BYTES REMAINING TO BE PROCESS @D21IDGL 01741000
         BZ    XTREXC00          NONE =======================> @D21IDGL 01742000
         LR    R4,R1             SAVE BYTES TO PROCESS COUNT   @DY45299 01743000
         BCTR  R1,0              ADJUST FOR EXECUTE            @D21IDGL 01744000
         LA    R0,PBXCUID-PBXOBR SPECIAL PUBX (MDR/OBR) INFO   @D21IDGL 01745490
         CLR   R1,R0             USER PROVIDED ENOUGH BYTES    @D21IDGL 01746000
         BNH   XTRSD50           NO,                           @D21IDGL 01747000
         LR    R1,R0             LIMIT TO WHAT WE GOT          @D21IDGL 01748000
XTRSD50  EX    R1,XTRSDE1        PROVIDE PUBX INFORMATION      @D21IDGL 01749000
         LA    R1,1(,R1)         RESTORE BYTE COUNT            @DY45299 01750000
         AR    R3,R1             ADJUST TARGET POINTER         @DY45299 01751000
         SLR   R4,R1             NUMBER OF BYTES REMAINING     @DY45299 01752000
         LTR   R1,R4             MORE BYTES TO PROCESS         @D66ADAP 01753000
         BNP   XTREXC00          NO,  =======================> @DY45299 01754000
         AIF   (NOT &VSE260).N260010                           @D66EDAP 01755000
         CLI   PBXPUBCD,TQDIO    IS THIS A QDIO DEVICE         @D66EDAP 01756000
         BE    XTRSD65           YES, SPECIAL PROCESSING       @D66EDAP 01757000
.N260010 ANOP                                                  @D66EDAP 01758000
         TM    PBXFLAG,PBXDASD+PBXTAPE IS THIS A TAPE OR DASD  @D66ADAP 01759000
         BZ    XTREXC00          NO,  =======================> @D66ADAP 01760000
         AIF   (NOT &VSE280).N280010                           @DSCSI   01761000
         TM    PBXFLAG,PBXSCSI   IS THIS A SCSI DEVICE         @DSCSI   01762000
         BO    XTRSD70           YES, SPECIAL PROCESSING       @DSCSI   01763000
.N280010 ANOP                                                  @DSCSI   01764000
         ICM   R9,15,PBXVCTE     GET VCTE ADDRESS IF PRESENT   @DY45299 01765000
         BZ    XTREXC00          NO,  =======================> @DY45299 01766000
         USING VCTEADR,R9        VCTE BASE POINTER             @DY45299 01767000
         CLI   VCTATYPE,VCTARPS  IS THIS THE RIGHT DEVICE      @DY45299 01768000
         BL    XTREXC00          NO,  =======================> @DY45299 01769000
         CLI   VCTATYPE,VCTAECKD IS THIS THE RIGHT DEVICE      @DY45299 01770000
         BH    XTRSD60           NO, CHECK FOR TAPE            @DY45299 01771000
         BCTR  R1,0              ADJUST FOR EXECUTE            @D66ADAP 01772000
         LA    R0,VCTCROBR-VCTCRCUC LENGTH OF REAL DEVICE INFO @DY45299 01773000
         CLR   R1,R0             MORE BYTES THAN AVAILABLE     @D66ADAP 01774000
         BNH   XTRSD55           NO,                           @DY45299 01775000
         LR    R1,R0             LIMIT TO WHAT WE GOT          @D66ADAP 01776000
XTRSD55  EX    R1,XTRSDE3        PROVIDE REAL DEVICE INFO      @D66ADAP 01777000
         B     XTREXC00          DONE =======================> @D21IDGL 01778000
XTRSD60  CLI   VCTATYPE,VCTATAPE IS THIS A TAPE DEVICE         @DY45299 01779000
         BNE   XTREXC00          NO,  =======================> @DY45299 01780000
         MVC   0(1,R3),VCTTEMCM-VCTEADR(R9) GET CU MODEL INFO  @DY45290 01781000
         BCTR  R4,0              SUBTRACT FROM BYTE COUNT      @DY45299 01782000
         LTR   R1,R4             ANY BYTES LEFT                @DY45290 01783000
         BNP   XTREXC00          NO,  =======================> @DY45290 01784000
         MVC   1(1,R3),VCTTEMDM-VCTEADR(R9) GET DEV MODEL INFO @DY45290 01785000
         B     XTREXC00          DONE =======================> @DY45299 01786000
         DROP  R9                RELEASE VCTEADR BASE          @DY45299 01787000
         USING PBXADR,R9         PUBX BASE POINTER             @DY45299 01788000
         AIF   (NOT &VSE260).N260020                           @D66ADAP 01789000
         USING QIODVSCH,R3       EXTENDED INFORMATION BASE     @D66EDAP 01790000
XTRSD65  DS    0H'0'             QDIO DEVICE INFORMATION       @D66EDAP 01791000
         LA    R1,QIODVLEN-(QIODVSCH-QIODVCUU) REMAINING LEN   @D66EDAP 01792000
         CR    R4,R1             IS AREA LONG ENOUGH           @D66EDAP 01793000
         BL    XTREXC16          NO,  =======================> @D66EDAP 01794000
         MVC   QIODVSCH,PBXSCH   PROVIDE SUBCHANNEL NUMBER     @D66EDAP 01795000
         MVC   QIODVDTY,PUBOPTN  COPY OPTION BYTE              @D66EDAP 01796000
         MVC   QIODVCAD,PBXRCDCA GET DEVICE ADDRESSING INFO    @D66EDAP 01797000
         MVC   QIODVEST(6),PBXQEST GET REQUIRED COMMAND INFO   @D66EDAP 01798000
         MVC   QIODFEAT(1),PBXQFEAT PROVIDE DEVICE FEATURES    @D66EDAP 01799000
         MVC   QIODIQNO(1),PBXQIQNO PROVIDE INPUT QUEUE NUMBER @D66EDAP 01800000
         MVC   QIODOQNO(1),PBXQOQNO PROVIDE INPUT QUEUE NUMBER @D66EDAP 01801000
         MVC   QIODQFMT(1),PBXQQFMT PROVIDE QDIO QUEUE FORMAT  @D67FDMZ 01802000
         MVC   QIODCULA(1),PBXQCULA PROVIDE CULA(CNTR.UN.IM ID)@D67FDMZ 01803000
         MVC   QIODFLG1(1),PBXQFLG1 PROVIDE ADD. QDIO FEATURES @D67FDMZ 01804000
         B     XTREXC00          DONE =======================> @D66EDAP 01805000
         DROP  R3                RELEASE QIODVSCH BASE         @D66EDAP 01806000
         AIF   (NOT &VSE280).N260020                           @DSCSI   01807000
.*       APPEND SCSI INFORMATION                               @DSCSI   01808000
XTRSD70  DS    0H'0'             QDIO DEVICE INFORMATION       @DSCSI   01809000
         ICM   R9,15,PBXASCSI    SCSI CONTROL BLOCK BASE       @DSCSI   01810000
         BZ    XTREXC16          ERR  =======================> @DSCSI   01811000
         USING SCSIBLK,R9        SCSI CONTROL BLOCK BASE       @DSCSI   01812000
         L     R1,AXTRSD75       GET CONTINUATION ADDRESS      @DSCSI   01813000
         BSM   0,R1              GET INTO 31-BIT MODE          @DSCSI   01814000
AXTRSD75 DC    A(XTRSD80+X'80000000') 31-BIT MODE ADDRESS      @DSCSI   01815000
         USING QSCDFCPA,R3       EXTENDED INFORMATION BASE     @DSCSI   01816000
XTRSD80  LTR   R4,R4             ANY BYTES LEFT                @DSCSI   01817000
         BNP   XTREXC00          NO,  =======================> @DSCSI   01818000
         LA    R1,QSCDLUN-QSCDFCPA+L'QSCDLUN SCSI EXTENTION    @DSCSI   01819000
         CR    R4,R1             DOES EXTENTION FIT IN BUFFER  @DSCSI   01820000
         BL    XTREXC16          NO,  =======================> @DSCSI   01821000
XTRSD90  MVC   QSCDFCPA,SCIFCPCU PROVIDE FCP ADDRESS (CUU)     @DSCSI   01822000
         MVC   QSCDWWPN,SCIWWPN  PROVIDE WWPN ADDRESS          @DSCSI   01823000
         MVC   QSCDLUN,SCILUN    PROVIDE LUN ADDRESS           @DSCSI   01824000
         AR    R3,R1             ADJUST TARGET POINTER         @DSCSI   01825000
         SLR   R4,R1             ANYTHING LEFT TO BE MOVED     @DSCSI   01826000
         LTR   R4,R4             ANY BYTES LEFT                @DSCSI   01827000
         BNP   XTREXC00          NO,  =======================> @DSCSI   01828000
         BCTR  R4,0              ADJUST FOR EXECUTE            @DSCSI   01829000
         EX    R4,XTRSDCLR       CLEAR WHAT IS LEFT            @DSCSI   01830000
         LA    R4,1(,R4)         RESTORE BYTE COUNT            @DSCSI   01831000
         SLR   R4,R1             ASSUME ANOTHER ENTRY FITS     @DSCSI   01832000
         LTR   R4,R4             DOES IT FIT                   @DSCSI   01833000
         BM    XTREXC00          NO,  =======================> @DSCSI   01834000
         AR    R4,R1             RESTORE BYTES LEFT COUNT      @DSCSI   01835000
         ICM   R9,15,SCINEXT     MORE ADAPTER AVAILABLE        @DSCSI   01836000
         BNZ   XTRSD90           YES, =======================> @DSCSI   01837000
         B     XTREXC00          DONE =======================> @DSCSI   01838000
XTRSDCLR XC    0(0,R3),0(R3)     CLEAR USERS AREA              @DSCSI   01839000
         DROP  R3                RELEASE QSCDVSCH BASE         @DSCSI   01840000
         DROP  R9                RELEASE SCSIBLK  BASE         @DSCSI   01841000
.N260020 ANOP                                                  @DSCSI   01842000
         DROP  R5                RELEASE PUB BASE              @D66EDAP 01843000
         SPACE 3                                                        01844000
         USING PBXADR,R9         PUBX BASE POINTER                      01845000
XTRSDS10 DS    0H                USER REQUESTED SENSE DATA     @D21WDGL 01846000
         L     R9,PBXERBLK       ADDRESS OF ERROR ENTRY        @D51MDGL 01847000
         USING ERBLKADR,R9       ERBLKADR BASE POINTER         @D51MDGL 01848000
         SLR   R3,R3             CLEAR REGISTER                @D51MDGL 01849000
         IC    R3,ERBLKSNL       NUMBER OF SENSE BYTES         @D51MDGL 01850000
         SLR   R4,R4             CLEAR REGISTER                @D51MDGL 01851000
         BAL   R7,XTRCLNG2       CHECK AND CLEAR USER AREA     @D51MDGL 01852000
*SGLINK  XTRCLNG2,INPUT=(R4,R7,RC,RE),OUTPUT=(R2,RF),WORK=R1            01853000
         DC    AL4(0)            INDICATOR BYTES               @D52..GL 01854000
         NOP   0                 NOOP                          @D51MDGL 01855000
         LA    R9,ERRQSNS        ADDRESS OF SENSE BYTES        @D51MDGL 01856000
         DROP  R9                RELEASE ERBLKADR BASE         @D51MDGL 01857000
         CLR   R1,R3             DID USER REQUEST MORE BYTES   @D51MDGL 01858000
         BNH   XTRSDS20          NO,                           @D51MDGL 01859000
         LR    R1,R3             LIMIT TO NUMBER OF SENSE BYTES@D51MDGL 01860000
XTRSDS20 BCTR  R1,0              ADJUST FOE EXECUTE            @D51MDGL 01861000
         EX    R1,XTRSDE2        MOVE SENSE DATA TO USERS AREA @D51MDGL 01862000
         B     XTREXC00          RETURN======================> @D51MDGL 01863000
XTRSDPM  DC    AL1(XTRPMPK+XTRPMCU+XTRPMPU)     PERMISSION BYTE@D14CDGL 01864000
XTRSDE1  MVC   0(0,R3),PBXOBR-PBXADR(R9) FOR EXECUTE           @D21IDGL 01865000
XTRSDE2  MVC   0(0,R2),0(R9)     FOR EX.MOVE OF SENSE DATA     @D21WDGL 01866000
XTRSDE3  MVC   0(0,R3),VCTCRCUC-VCTEADR(R9) GET VCTE DATA      @DY45299 01867000
         SPACE 1                                                        01868000
         DROP  RC                RELEASE SVC98 BASE                     01869000
         DROP  RD                RELEASE XTRSNDV BASE                   01870000
         DROP  RE                RELEASE PARAMETER BASE                 01871000
         TITLE 'VSE SUPERVISOR     SGINF      PROVIDE GETVIS DATA     ' 01872000
***************************************************************         01873000
*  FUNCTION: EXTRACT GETVIS INFORMATION FOR PARTITION         *         01874000
*    SYSTEM GETVIS IN SVA OR DYNAMIC SPACE GETVIS AREA.       *         01875000
*    ORIGINALLY IMPLEMENTED AS APAR DA37428                   *@DA37428 01876000
*  ON ENTRY:                                                  *         01877000
*    RC = BASE, ADDRESS OF SVC98                              *         01878000
*    R6 = RETURN ADDRESS, NOT NECESSARILY DISPAD              *         01879000
*    RE = PTR TO PARAMETERLIST OF SVC98                       *         01880000
*  ON EXIT TO XTREXC00: USER AREA UPDATED                     *         01881000
*    R0-R5,R7-RA = WORK                                       *         01882000
***************************************************************         01883000
         USING SVC98,RC          BASE REGISTER                 @D52VDGL 01884000
         USING XTRGVIS,RD        BASE REGISTER                 @D52VDGL 01885000
         USING SVC98PL,RE        PARAMETER LIST                @D52VDGL 01886000
XTRGVIS  DS    0H                PROVIDE GETVIS INFORMATION             01887000
         LA    R4,XTRGVSPM       POINT TO PERMISSION ENTRY     @D51IDGL 01888000
         BAL   R7,XTRGTPIK       GET PIK                       @D51IDGL 01889000
*SGLINK  XTRGTPIK,INPUT=(R2,R4,R7,RC,RE),OUTPUT=(R3,RF)        @DA44841 01890000
         B     XTRERREX        0 ERROR (NO PIK FOUND)          @D51IDGL 01891000
         B     XTRERR21        4 ERROR (USER NOT AUTHROIZED)   @D51IDGL 01892000
         LA    R4,20             MINIMUM LENGTH REQUIRED       @D51IDGL 01893000
         BAL   R7,XTRCLNG2       CHECK LENGTH                  @D51IDGL 01894000
*SGLINK  XTRCLNG2,INPUT=(R4,R7,RC,RE),OUTPUT=(R2,RF),WORK=R1            01895000
         DC    AL4(0)            INDICATOR BYTES               @D52..GL 01896000
         B     XTRERREX        0 ERROR (LENGTH INSUFFICIENT)   @D51IDGL 01897000
         TM    SVC98FL,XTRGVMA 4 IS IT LOCATION ANY            @D52VDGL 01898000
         BO    XTRGV000          YES,                          @D52VDGL 01899000
         TM    SVC98FL,XTRGVMB   IS IT LOCATION BELOW          @D52VDGL 01900000
         BO    XTRGV008          YES,                          @D52VDGL 01901000
         C     R6,DISPAD         ENTERED VIA SVC               @D52VDGL 01902000
         BNE   XTRGV001          NO, ITS A BAL INTERFACE       @D52VDGL 01903000
         L     R1,TCBPTR         ADDRESS OF TCB                @D52VDGL 01904000
         USING TCBADR,R1         TCB BASE ADDRESS              @D52VDGL 01905000
         TM    TCBEXFLG,TCBEXRM  EXECUTING IN 31-BIT MODE      @D52VDGL 01906000
         BO    XTRGV000          YES,                          @D52VDGL 01907000
         B     XTRGV008          NO,                           @D52VDGL 01908000
         DROP  R1                RELEASE TCB BASE                       01909000
XTRGV001 LTR   RE,RE             EXECUTING IN 31-BIT MODE      @D52VDGL 01910000
         BNM   XTRGV008          NO, ITS 24-BIT MODE           @D52VDGL 01911000
XTRGV000 DS    0H                31-BIT MODE PROCESSING        @D52VDGL 01912000
         O     R3,XTRGV1LA       INDICATE ANY IS OF INTEREST   @D52VDGL 01913000
XTRGV008 DS    0H                24-BIT MODE PROCESSING        @D52VDGL 01914000
*-------------------------------------------------------------*@D51IDGL 01915000
*  ADAPTATION OF OLD INTERFACE: PIK=0 INDIC. SVA GETVIS REQ.  *@D51IDGL 01916000
*-------------------------------------------------------------*@D51IDGL 01917000
         SLR   R2,R2              CLEAR REGISTER               @D51IDGL 01918000
         CLM   R3,3,F0            IS IT A SYSTEM REQUEST       @D51IDGL 01919000
         BE    XTRGV002           YES,                         @D51IDGL 01920000
         TM    SVC98FL,XTRGVSV    IS IT A GETVIS SVA           @D51IDGL 01921000
         BNO   XTRGV010           NO,                          @D51IDGL 01922000
XTRGV002 O     R3,XTRGV1SV        INDICATE SVA CALCULATION     @D51IDGL 01923000
         BAL   R8,XTRLCKSV        CLOSE GETVIS GATE     ====>> @D51IDGL 01924000
*SGLINK  INPUT=(R8,RC),OUTPUT=(RA,RF),WORK=(R0,R1,R4,R5)                01925000
         B     XTRERREX         0 ERROR  EXIT                  @D51IDGL 01926000
         BAL   R7,XTRGVI00      4 GET THE INFO     =========>> @D51IDGL 01927000
*SGLINK  XTRGVI00,INPUT=(R2,R3,R7,RA,RC,RE),OUTPUT=RF,                 X01928000
               WORK=(R0,R1,R4,R5)                                       01929000
         NOP   0                0                              @D51IDGL 01930000
         LR    R7,RF            4 SAVE RETURN CODE             @D51IDGL 01931000
         BAL   R8,XTRFRESV        FREE GETVIS GATE      ====>> @D51IDGL 01932000
*SGLINK  XTRFRESV,INPUT=(R3,R8,RC),OUTPUT=RF,WORK=(R0,R1,R4,R5)         01933000
         LTR   RF,R7              DID WE GET REQUESTED INFO    @D51IDGL 01934000
         BZ    XTREXC00           YES,                         @D51IDGL 01935000
         B     XTRERREX           NO, TAKE ERROR EXIT          @D51IDGL 01936000
XTRGV010 DS    0H                                              @D51IDGL 01937000
         CLI   SVC98FL,X'00'      SPECIAL MODE SETTING         @D51IDGL 01938000
         BZ    XTRGV012           NO,                          @D51IDGL 01939000
         TM    SVC98FL,XTRGVPT    PARTITION GETVIS REQUESTED   @D51IDGL 01940000
         BNO   XTRGV020           NO,                          @D51IDGL 01941000
XTRGV012 O     R3,XTRGV1PT        INDICATE PARTITION REQUEST   @D51IDGL 01942000
*-------------------------------------------------------------*@D61NDKH 01943000
*  ALLOW A PROGRAM RUNNING IN AN ICCF PARTITION TO INQUIRE    *@D61NDKH 01944000
*  ABOUT GETVIS SPACE AVAILABLE IN THAT PARTITION             *@D61NDKH 01945000
*-------------------------------------------------------------*@D61NDKH 01946000
         L     R8,TIBPTR           GET TIB POINTER             @D61NDKH 01947000
         USING TIBADR,R8           TIB BASE POINTER            @D61NDKH 01948000
         TM    TIBFLAG2,ICCFPP     IS IT A PSEUDO PARTITION    @D61NDKH 01949000
         DROP  R8                  RELEASE TIB BASE            @D61NDKH 01950000
         BNO   XTRGV013            NO, JOIN MAIN LINE          @D61NDKH 01951000
         L     R8,SVC98PI          GET PARTITION-ID            @D61NDKH 01952000
         LTR   R8,R8               WAS A PARTITION SPECIFIED   @D61NDKH 01953000
         BNZ   XTRGV013            YES,                        @D61NDKH 01954000
         L     RA,CRADDR           GET COMREG ADDRESS          @D61NDKH 01955000
         MC    4,4                 LET ICCF PROVIDE COMREG     @D61NDKH 01956000
         USING COMREG,RA           COMREG BASE ADDRESS         @D61NDKH 01957000
         L     RA,IJBGVCTL         GETVIS CONTROL INFO         @D61NDKH 01958000
         DROP  RA                  DROP COMREG BASE            @D61NDKH 01959000
         LH    R3,PIK              GET PIK                     @D61NDKH 01960000
         O     R3,XTRGV1PT         INDICATE PARTITION REQUEST  @D61NDKH 01961000
         BAL   R7,XTRGVI00         GET THE INFO   ==========>> @D61NDKH 01962000
*SGLINK  XTRGVI00,INPUT=(R2,R3,R7,RA,RC,RE),OUTPUT=RF,                 X01963000
               WORK=(R0,R1,R4,R5)                                       01964000
         B     XTRERREX          0 ERROR EXIT                  @D61NDKH 01965000
         B     XTREXC00          4 WE GOT THE DATA             @D61NDKH 01966000
XTRGV013 DS    0H                                              @D61NDKH 01967000
         BAL   R8,XTRLCKPT         LOCK THE GETVIS GATE ====>> @D51IDGL 01968000
*SGLINK  XTRLCKPT,INPUT=(R3,R8,RC),OUTPUT=(R9,RA,RF),                  X01969000
               WORK=(R0,R1,R4,R5,R7)                                    01970000
         B     XTRERREX          0 ERROR EXIT                  @D51IDGL 01971000
         BAL   R7,XTRGVI00       4 GET THE INFO ============>> @D51IDGL 01972000
*SGLINK  XTRGVI00,INPUT=(R2,R3,R7,RA,RC,RE),OUTPUT=RF,                 X01973000
               WORK=(R0,R1,R4,R5)                                       01974000
         NOP   0                 0 ERROR EXIT                  @D51IDGL 01975000
         LR    R7,RF             4 PRESERVE RETURN CODE        @D51IDGL 01976000
         BAL   R8,XTRFREPT         FREE GETVIS GATE     ====>> @D51IDGL 01977000
*SGLINK  XTRFREPT,INPUT=(R3,R8,R9,RC),OUTPUT=RF,                       X01978000
               WORK=(R0,R1,R2,R4,R5,RA,RB)                              01979000
         LTR   RF,R7               DID WE GET THE INFO         @D51IDGL 01980000
         BZ    XTREXC00            YES,                        @D51IDGL 01981000
         B     XTRERREX            ERROR (IN CALCULAT.OF INFO) @D51IDGL 01982000
XTRGV020 DS    0H                                              @D51IDGL 01983000
         TM    SVC98FL,XTRGVSP     DYNAMIC SPACE GETVIS REQUEST@D51IDGL 01984000
         BNO   XTRGV030            NO,                         @D51IDGL 01985000
         O     R3,XTRGV1SP         INDICTAE SPACE GETVIS       @D51IDGL 01986000
         BAL   R8,XTRLCKSP         LOCK THE GETVIS GATE ====>> @D51IDGL 01987000
*SGLINK  XTRLCKSP,INPUT=(R3,R8,RC),OUTPUT=(R9,RA,RF),                  X01988000
               WORK=(R0,R1,R4,R5,R7)                                    01989000
         B     XTRERREX          0 ERROR EXIT                  @D51IDGL 01990000
         BAL   R7,XTRGVI00       4 GET THE GETVIS INFO =====>> @D51IDGL 01991000
*SGLINK  XTRGVI00,INPUT=(R2,R3,R7,RA,RC,RE),OUTPUT=RF,                 X01992000
               WORK=(R0,R1,R4,R5)                                       01993000
         NOP   0                 0 ERROR EXIT                  @D51IDGL 01994000
         LR    R7,RF             4 WE DID GET THE INFO         @D51IDGL 01995000
         BAL   R8,XTRFRESP         FREE GETVIS GATE     ====>> @D51IDGL 01996000
*SGLINK  XTRFRESP,INPUT=(R3,R8,R9,RC),OUTPUT=RF,                       X01997000
               WORK=(R0,R1,R2,R4,R5,RA,RB)                              01998000
         LTR   RF,R7               DID WE GET THE INFO         @D51IDGL 01999000
         BZ    XTREXC00            YES,                        @D51IDGL 02000000
         B     XTRERREX            NO, TAKE ERROR EXIT         @D51IDGL 02001000
XTRGV030 DS    0H                                              @D51IDGL 02002000
         B     XTRERR21            UNKNOWN MODE SETTING        @D51IDGL 02003000
         SPACE 1                                               @D51IDGL 02004000
XTRGVSPM DC    AL1(XTRPMPK)        PERMISSION BYTE             @D51IDGL 02005000
         SPACE 1                                               @D51IDGL 02006000
         DROP  RC                  RELEASE SVC98 BASE                   02007000
         DROP  RD                  RELEASE XTRGVIS BASE                 02008000
         DROP  RE                  RELEASE PARAMETER BASE               02009000
         TITLE 'VSE SUPERVISOR     SGINF      PROVIDE PARTITION DATA  ' 02010000
***************************************************************         02011000
*  FUNCTION: EXTRACT ALL PARTITION RELEVANT INFORMATION.      *         02012000
*    THIS SERVICE IS FOR THE INTERACTIVE INTERFACE II ONLY!!  *         02013000
.*   THE MECHANISM BEING USED HERE SHOULD ENSURE THAT FOR A   *         02014000
.*   DYNAMIC AND STATIC PARTITION, THE PARTITION IS:          *         02015000
.*  -EXISTANT, WHEN POINTING TO ITS CONTROL BLOCKS,           *         02016000
.*  -CAN NOT BE DEALLOCATED WHILE RECEIVING A PAGE FAULT      *         02017000
.*   INTERRUPT IN READING THE GETVIS CONTROL INFORMATION,     *         02018000
.*  -CAN NOT CORRUPT THE GETVIS INFORMATION WHILE EXTRACT IS  *         02019000
.*   READING IN IT.                                           *         02020000
*  ON ENTRY:                                                  *         02021000
*    RC = BASE, ADDRESS OF SVC98                              *         02022000
*    R6 = RETURN ADDRESS, NOT NECESSARILY DISPAD              *         02023000
*    RE = PTR TO PARAMETERLIST OF SVC98                       *         02024000
*  ON EXIT TO XTRRCODE: AREA IS UPDATED                       *         02025000
*    R0-R5,R7-RA = WORK                                       *         02026000
*    RF = RETURN CODE.                                        *         02027000
*         VALUES: 16 - INVALID LENGTH SUPPLIED.               *         02028000
*                  4 - PARTITION IS NOT ALLOCATED OR GETVIS   *         02029000
*                      INFORMATION COULD NOT BE OBTAINED      *         02030000
*                      SINCE PARTITION IS IN CLEANUP PHASE.   *         02031000
*                  0 - ALL NON GETVIS RELATED INFORMATION     *         02032000
*                      HAS BEEN OBTAINED. IN CASE THE PTR     *         02033000
*                      TO THE GETVIS CONTROL AREA IS ZERO     *         02034000
*                      GETVIS WAS NOT INITIALIZED. ALL GETVIS *         02035000
*                      RELATED VALUES ARE ZERO.               *         02036000
***************************************************************         02037000
         USING SVC98,RC          BASE REGISTER                 @D52VDGL 02038000
         USING XTRPART,RD        BASE REGISTER                 @D52VDGL 02039000
         USING SVC98PL,RE        PARAMETER LIST                @D52VDGL 02040000
XTRPART  DS    0H                PROVIDE PARTITION GETVIS INFO @D51IDGL 02041000
         LA    R4,XTRPARTP       ADDRESS OF PERMISSION BYTE    @D51IDGL 02042000
         BAL   R7,XTRGTPIK       VALIDATE AND GET PIK          @D51IDGL 02043000
*SGLINK  XTRGTPIK,INPUT=(R2,R4,R7,RC,RE),OUTPUT=(R3,RF)        @DA44841 02044000
         B     XTRERREX        0 ERR, =======================> @D51IDGL 02045000
         B     XTRERR21        4 ERR, =======================> @D51IDGL 02046000
         LA    R4,11*4+2*5*4   8 MINIMUM LENGTH                @D51IDGL 02047000
         BAL   R7,XTRCLNG2       VALIDATE USERS LENGTH         @D51IDGL 02048000
*SGLINK  XTRCLNG2,INPUT=(R4,R7,RC,RE),OUTPUT=(R2,RF),WORK=R1            02049000
         DC    AL4(0)            INDICATOR BYTES               @D52..GL 02050000
         B     XTRERREX          ERR, =======================> @D51IDGL 02051000
         ICM   R3,8,XTRGV1PT     INDICATE PARTITION INFO       @D51IDGL 02052000
         BAL   R8,XTRLCKPT       LOCK THE GETVIS GATE          @D51IDGL 02053000
*SGLINK  XTRLCKPT,INPUT=(R3,R8,RC),OUTPUT=(R9,RA,RF),                  X02054000
               WORK=(R0,R1,R4,R5,R7)                                    02055000
         USING PCBADR,R9         PCB BASE POINTER              @D51IDGL 02056000
         B     XTRPART1        0 ERROR                         @D51IDGL 02057000
         LA    R2,11*4           OFFSET IN USER AREA           @D51IDGL 02058000
         BAL   R7,XTRGVI00       GET THE INFORMATION           @D51IDGL 02059000
*SGLINK  XTRGVI00,INPUT=(R2,R3,R7,RA,RC,RE),OUTPUT=RF,                 X02060000
               WORK=(R0,R1,R4,R5)                                       02061000
         NOP   0               0 NOP                           @D51IDGL 02062000
         O     R3,XTRGV1GG       PREVENT PART. GETVIS LOCKING  @D51IDGL 02063000
         LA    R4,120            LOAD CONSTANT                 @D52VDGL 02064000
         CH    R4,SVC98LN        DID USER PROVIDE 120 BYTE AREA@D52VDGL 02065000
         BL    XTRPART2          NO,                           @D52VDGL 02066000
         O     R3,XTRGV1LA       INDICATE WE NEED 31-BIT INFO  @D52VDGL 02067000
         LA    R2,25*4           OFFSET IN USER AREA           @D51IDGL 02068000
         BAL   R7,XTRGVI00       GET THE INFORMATION WE NEED   @D51IDGL 02069000
*SGLINK  XTRGVI00,INPUT=(R2,R3,R7,RA,RC,RE),OUTPUT=RF,                 X02070000
               WORK=(R0,R1,R4,R5)                                       02071000
         NOP   0               0 NOP ERROR PROCESS             @D51IDGL 02072000
         B     XTRPART2        4 PROCEED                       @D51IDGL 02073000
XTRPART1 DS    0H                ERROR PROCESSING              @D51IDGL 02074000
         LTR   R9,R9             DYNAMIC PARTITION ALLOCATED   @D51IDGL 02075000
         BZ    XTREXC04          NO,  =======================> @D51IDGL 02076000
         CLC   SMVPBEG(4),F0     STATIC PARTITION ALLOCATED    @D51IDGL 02077000
         BE    XTREXC04          NO,  =======================> @D51IDGL 02078000
XTRPART2 DS    0H                ENDIF                         @D51IDGL 02079000
         TM    PCEFLAG,PCEDYNP   IS IT A DYNAMIC PARTITION     @D51IDGL 02080000
         BNO   XTRPART3          NO,                           @D51IDGL 02081000
         L     R0,XTRGV1PT       LOAD GETVIS INFORMATION       @D51IDGL 02082000
         X     R0,XTRGVIM1       PARTITION GETVIS MASK         @D51IDGL 02083000
         NR    R3,R0             TURN PARTITION GETVIS OFF     @D51IDGL 02084000
         O     R3,XTRGV1SP       TURN DYNAMIC SPACE GETVIS ON  @D51IDGL 02085000
         BAL   R8,XTRLCKSP       LOCK THE GETVIS GATE          @D51IDGL 02086000
*SGLINK  XTRLCKSP,INPUT=(R3,R8,RC),OUTPUT=(R9,RA,RF),                  X02087000
               WORK=(R0,R1,R4,R5,R7)                                    02088000
         B     XTRPART3        0 ERROR                         @D51IDGL 02089000
         LA    R2,16*4           OFFSET IN USER AREA           @D51IDGL 02090000
         BAL   R7,XTRGVI00       GET THE GETVIS INFORMATION    @D51IDGL 02091000
*SGLINK  XTRGVI00,INPUT=(R2,R3,R7,RA,RC,RE),OUTPUT=RF,                 X02092000
               WORK=(R0,R1,R4,R5)                                       02093000
         NOP   0               0 NOP ERROR PROCESSING          @D51IDGL 02094000
         BAL   R8,XTRFRESP       FREE THE GETVIS GATE          @D51IDGL 02095000
*SGLINK  XTRFRESP,INPUT=(R3,R8,R9,RC),OUTPUT=RF,                       X02096000
               WORK=(R0,R1,R2,R4,R5,RA,RB)                              02097000
XTRPART3 DS    0H                                              @D51IDGL 02098000
         L     R0,XTRGV1GG       GET MASK FIELD                @D51IDGL 02099000
         NR    R0,R3             DO WE OWN THE PART.GETVIS LOCK@D51IDGL 02100000
         BZ    XTRPART4          NO,                           @D51IDGL 02101000
         ICM   R3,8,XTRGV1PT     INDICATE PARTITION GETVIS     @D51IDGL 02102000
         BAL   R8,XTRFREPT       FREE THE PART. GETVIS LOCK    @D51IDGL 02103000
*SGLINK  XTRFREPT,INPUT=(R3,R8,R9,RC),OUTPUT=RF,                       X02104000
               WORK=(R0,R1,R2,R4,R5,RA,RB)                              02105000
XTRPART4 DS    0H                                              @D51IDGL 02106000
         L     R2,SVC98AR        ADDRESS OF USER AREA          @D51IDGL 02107000
         USING PCBADR,R9         PCB BASE POINTER              @D51IDGL 02108000
         L     R1,PCEPIB         PIB BASE ADDRESS              @D51IDGL 02109000
         USING PIBADR,R1         PIB BASE POINTER              @D51IDGL 02110000
         IC    R0,PIBFLG         GET FLAG BYTE                 @D51IDGL 02111000
         STC   R0,10*4+3(R2)     SAVE IT IN USER AREA          @D51IDGL 02112000
         TM    PIBDATFL,PIBTRAM  PARTITION RUNNING REAL        @D51IDGL 02113000
         BO    XTRPART6          NO,                           @D51IDGL 02114000
         L     R1,SMPSAVE        GET PART START ADDRESS        @D51IDGL 02115000
         DROP  R1                RELEASE PIB BASE              @D51IDGL 02116000
         L     R0,SMPFIX         NUMBER OF PFIXED PAGES        @D51IDGL 02117000
         SLL   R0,PNSHIFT        MULTIPLY WITH BYTES PER PAGE  @D51IDGL 02118000
         AR    R0,R1             ADD START ADDRESS             @D51IDGL 02119000
         BCTR  R0,0              ADJUST FOR LAST BYTE          @D51IDGL 02120000
         B     XTRPART7          JOIN MAIN LINE                @D51IDGL 02121000
XTRPART6 DS    0H                PARTITION IS RUNNING VIRTUAL  @D51IDGL 02122000
         L     R1,SMVPBEG        PARTITION BEGIN ADDRESS       @D51IDGL 02123000
         L     R0,SMVPEND        PARTITION END ADDRESS         @D51IDGL 02124000
         BCTR  R0,0              AST BYTE OF PARTITION         @D51IDGL 02125000
XTRPART7 DS    0H                                              @D51IDGL 02126000
         ST    R1,2*4(R2)        STORE BEGIN ADDRESS           @D51IDGL 02127000
         ST    R0,7*4(R2)        STORE END   ADDRESS           @D51IDGL 02128000
         L     R1,PCECOMRA       COMREG BASE ADDRESS           @D51IDGL 02129000
         USING COMREG,R1         COMREG BASE POINTER           @D51IDGL 02130000
         L     R0,IJBGVCTL       GETVIS CNTL AREA START ADDRESS@D51IDGL 02131000
         ST    R0,0*4(R2)        STORE IT IN USER AREA         @D51IDGL 02132000
         L     R0,PCBDYSPC       DYNAMIC SPACE GETVIS AREA     @D51IDGL 02133000
         ST    R0,1*4(R2)        STORE IT IN USER AREA         @D51IDGL 02134000
         L     R0,IJBHPHLA       ADDRESS OF HIGHEST PHASE LOADE@D51IDGL 02135000
         ST    R0,3*4(R2)        STORE IT IN USER AREA         @D51IDGL 02136000
         MVC   4*4(8,R2),COMNAME STORE JOB-NAME                @D51IDGL 02137000
         L     R0,PPEND          PROBLEM PROGRAM END ADDRESS   @D51IDGL 02138000
         ST    R0,6*4(R2)        STORE IN USER AREA            @D51IDGL 02139000
         DROP  R1                RELEASE COMREG BASE           @D51IDGL 02140000
         TM    PCEFLAG,PCEDYNP   DYNAMIC PARTITION             @D51IDGL 02141000
         BNO   XTRPART5          NO,                           @D51IDGL 02142000
         L     R1,PCBPSCB        SCB BASE ADDRESS              @D51IDGL 02143000
         USING SCBADR,R1         SCB BASE POINTER              @D51IDGL 02144000
         L     R0,SCBSPGVB       BEGIN OF DYN. SPACE GETVIS    @D51IDGL 02145000
         ST    R0,8*4(R2)        STORE IT IN USER AREA         @D51IDGL 02146000
         L     R0,SCBSPGVE       END   OF DYN. SPACE GETVIS    @D51IDGL 02147000
         ST    R0,9*4(R2)        STORE IT IN USER AREA         @D51IDGL 02148000
         DROP  R1                RELEASE SCBADR BASE           @D51IDGL 02149000
XTRPART5 DS    0H                                              @D51IDGL 02150000
         SLR   RF,RF             SET RETURN CODE ZERO          @D51IDGL 02151000
         LA    R4,30*4           LOAD CONSTANT                 @D52VDGL 02152000
         CH    R4,SVC98LN        DID USER REQUEST MORE INFO    @D52VDGL 02153000
         BL    XTRRCODE          NO,                           @D52VDGL 02154000
         L     R0,SMVPBEG        VIRTUAL PARTITION BEGIN ADDR. @D51IDGL 02155000
         ST    R0,21*4(,R2)      STORE IT IN USER AREA         @D51IDGL 02156000
         L     R0,SMVPEND        VIRTUAL PARTITION END   ADDR. @D51IDGL 02157000
         BCTR  R0,0              LAST BYTE OF VIRT. PART.      @D51IDGL 02158000
         ST    R0,22*4(,R2)      STORE IT IN USER AREA         @D51IDGL 02159000
         L     R0,SMRPBEG        FIRST  ADDR.BYTE REAL PART.   @D51IDGL 02160000
         ST    R0,23*4(,R2)      STORE IT IN USER AREA         @D51IDGL 02161000
         L     R0,SMRPEND        END OF REAL PARTITION         @D51IDGL 02162000
         BCTR  R0,0              LAST BYTE OF REAL PARTITION   @D51IDGL 02163000
         ST    R0,24*4(,R2)      STORE IT IN USER AREA         @D51IDGL 02164000
         B     XTRRCODE          RETURN =====================> @D51IDGL 02165000
         DROP  R9                RELEASE PCB BASE              @D51IDGL 02166000
         SPACE 1                                               @D51IDGL 02167000
         DROP  RC                RELEASE SVC98 BASE                     02168000
         DROP  RD                RELEASE XTRPART BASE                   02169000
         DROP  RE                RELEASE PARAMETER BASE                 02170000
XTRPARTP DC    AL1(XTRPMPK)      PERMISSION BYTE               @D51IDGL 02171000
         MAPEXTR ID=PART,DSECT=YES,PREFIX=XB0                  @D52VDGL 02172000
&SYSECT  CSECT                                                 @D52VDGL 02173000
*                                                              @D52VDGL 02174000
         TITLE 'VSE SUPERVISOR     SGINF      PROVIDE SVA DATA        ' 02175000
*                                                              @D52VDGL 02176000
***************************************************************         02177000
*  CODEBLOCK XTRSVA                                           *         02178000
*  FUNCTION: EXTRACT ALL SVA RELEVANT INFORMATION.            *         02179000
*                                                             *         02180000
*  ON ENTRY:                                                  *         02181000
*    RC = BASE, ADDRESS                                       *         02182000
*    R6 = RETURN ADDRESS, NOT NECESSARILY DISPAD              *         02183000
*    RE = PTR TO PARAMETERLIST                                *         02184000
*  ON EXIT TO XTREXC00: USER AREA UPDATED                     *         02185000
*    R0-R5,R7-RA = WORK                                       *         02186000
***************************************************************         02187000
         USING SVC98,RC          BASE REGISTER                 @D52VDGL 02188000
         USING XTRSVA,RD         BASE REGISTER                 @D52VDGL 02189000
         USING SVC98PL,RE        PARAMETER LIST                @D52VDGL 02190000
XTRSVA   DS    0H                                                       02191000
         LA    R4,X0CSVA3B-X0CSVA   MINIMUM LENGTH REQUIRED    @D51MDGL 02192000
         LH    R1,SVC98LN        LENGTH OF USER SUPPLIED AREA  @D66ADAP 02193000
         L     R2,SVC98AR        USERS DATA AREA               @D66ADAP 02194000
         USING X0CSVA,R2         BASE OF USER AREA             @D51MDGL 02195000
         LA    RF,16             ASSUME INCORRECT LENGTH       @D66ADAP 02196000
         CR    R1,R4             DOES LENGTH EXCEED OFFSET     @D66ADAP 02197000
         BL    XTRERREX          YES, ======================>> @D66ADAP 02198000
         SLR   RF,RF             SET RETURN CODE 00            @D66ADAP 02199000
         L     R0,IJBSLACB       GET START OF LABEL AREA       @D51MDGL 02200000
         ST    R0,X0CSLAB        PASS IT TO USER               @D51MDGL 02201000
         BCTR  R0,0              END OF SYSTEM GETVIS AREA     @D51MDGL 02202000
         ST    R0,X0CSVISE       PASS IT TO USER               @D51MDGL 02203000
         L     R1,IJBSMCOM       IJBSMCOM BASE ADDRESS         @D51MDGL 02204000
         USING SMCOM,R1          SMCOM ASE POINTER             @D51MDGL 02205000
         L     R0,SMCESVA        GET SVA END ADDRESS           @D51MDGL 02206000
         ST    R0,X0CSVAE        PASS IT TO USER               @D51MDGL 02207000
         MVC   X0CVPOLB(8),SMCVPBEG PROVIDE VPOOL INFO         @D51MDGL 02208000
         L     R0,SMCVPBEG       VPOOL BEGIN ADDRESS           @D51MDGL 02209000
         BCTR  R0,0              END OF LABEL AREA             @D51MDGL 02210000
         ST    R0,X0CSLAE        PASS IT TO USER               @D51MDGL 02211000
         L     R3,SMCSVA         BEGIN OF SVA                  @D51MDGL 02212000
         USING DSVA,R3           MAPSVAHD BASE POINTER         @D51MDGL 02213000
         DROP  R1                RELEASE SMCOM BASE            @D51MDGL 02214000
         ST    R3,X0CSVAB        STORE BEGIN OF SVA            @D51MDGL 02215000
         L     R0,DSVAVL         START OF VIRTUAL LIBRARY      @D51MDGL 02216000
         ST    R0,X0CVLIBB       PASS IT TO USER               @D51MDGL 02217000
         L     R0,DSVAEND        END OF VIRTUAL LIBRARY        @D51MDGL 02218000
         ST    R0,X0CVLIBE       PASS IT TO USER               @D51MDGL 02219000
         L     R0,DSVAEPTR       GET END ADDRESS               @D51MDGL 02220000
         S     R0,DSVAFPTR       SUBTRACT BEGIN ADDRESS        @D51MDGL 02221000
         ST    R0,X0CVLIBF       VIRTUAL LIBRARY FREE SPACE    @D51MDGL 02222000
         L     R3,XTRGV1SV       INDICATE GETVIS INFO REQ.     @D51MDGL 02223000
         DROP  R3                RELEASE DSVA BASE             @D51MDGL 02224000
         BAL   R8,XTRLCKSV       GET THE GETVIS LOCK           @D51MDGL 02225000
*SGLINK  INPUT=(R8,RC),OUTPUT=(RA,RF),WORK=(R0,R1,R4,R5)                02226000
         B     XTRSVA10          GETVIS LOCK FAILED            @D51MDGL 02227000
         B     XTRSVA12          JOIN MAIN LINE                @D51MDGL 02228000
XTRSVA10 SLR   R0,R0             CLEAR REGISTER                @D51MDGL 02229000
         ST    R0,X0CSVISE       SET GETVIS POINTER TO ZERO    @D51MDGL 02230000
         B     XTRERREX               ======================>> @D51MDGL 02231000
XTRSVA12 DS    0H                WE ARE HOLDING GETVIS LOCK    @D51MDGL 02232000
         LA    R4,X0CSVALN       REQUIRED LENGTH               @D52VDGL 02233000
         CH    R4,SVC98LN        DID USER PROVIDE ENOUGH BYTES @D52VDGL 02234000
         BH    XTRSVA16          NO,                           @D52VDGL 02235000
         L     R1,IJBSMCOM       IJBSMCOM BASE ADDRESS         @D51IDGL 02236000
         USING SMCOM,R1          SMCOM BASE POINTER            @D51IDGL 02237000
         MVC   X0CSVA3B(16),SMCSVA31 PROVIDE NEXT INFO PACKAGE @D52VDGL 02238000
         L     R1,SMCSVA         SMCSVA (SVA HEADER) BASE ADDR.@D52VDGL 02239000
         USING DSVA,R1           DSVA BASE POINTER             @D52VDGL 02240000
         L     R0,DSVAVL31       BEGIN OF HIGH VIRT.LIBRARY    @D52VDGL 02241000
         ST    R0,X0CVLB3B       PASS IT TO USER               @D52VDGL 02242000
         L     R0,DSVAED31       END OF VIRTUAL LIBRARY        @D52VDGL 02243000
         ST    R0,X0CVLB3E       PASS IT TO USER          L    @D52VDGL 02244000
         L     R0,DSVAEF31       HIGH VLA-FREE END ADDRESS     @D52VDGL 02245000
         S     R0,DSVAFP31       SUBTRACT HIGH VLA-FREE BEGIN  @D52VDGL 02246000
         ST    R0,X0CVLB3F       PASS IT TO USER               @D52VDGL 02247000
XTRSVA16 DS    0H                                              @D52VDGL 02248000
         LA    R2,X0CSVGCL-X0CSVA POINT TO NEXT FREE BYTE      @D51MDGL 02249000
         DROP  R1                RELEASE DSVA BASE POINTER     @D51MDGL 02250000
         DROP  R2                RELEASE X0CSVA BASE           @D51MDGL 02251000
         BAL   R7,XTRGVI01       CALL GET INFO ==============>>@D51MDGL 02252000
*SGLINK  XTRGVI01,INPUT=(R2,R3,R7,RA,RC,RE),OUTPUT=RF,                 X02253000
               WORK=(R0,R1,R4,R5)                                       02254000
         NOP   0                 IGNORE ERROR EXIT             @D51MDGL 02255000
         L     R2,SVC98AR        ADDRESS OF USER SUPPLIED AREA @D52VDGL 02256000
         USING X0CSVA,R2         X0CSVA BASE POINTER           @D52VDGL 02257000
         LTR   RE,RE             ARE WE RUNNING IN 24-BIT MODE @DA41099 02258000
         BM    XTRSVA18          NO, ITS 31-BIT MODE           @DA41099 02259000
         ICM   R2,8,F0           PURGE UNUSED BYTE             @DA41099 02260000
XTRSVA18 DS    0H                                              @DA41099 02261000
         ST    RA,X0CSVISC       STORE START OF CONTROL AREA   @D51MDGL 02262000
         USING ANCHTAB,RA        GETVIS ANCHOR BASE            @D51MDGL 02263000
         AMODESW SET,AMODE=31,WR=(R1) GET INTO 31-BIT MODE     @D52VDGL 02264000
         L     R0,BVIRTMEM       BEGIN OF GETVIS AREA          @D51MDGL 02265000
         ST    R0,X0CSVIS        PASS IT TO USER               @D51MDGL 02266000
         SLR   R1,R1             CLEAR REGISTER                @D51MDGL 02267000
         ICM   R1,3,NBRGVPG      NUMBER OF AVAILABLE PAGES     @D51MDGL 02268000
         LR    R0,R1             SAVE NO. OF AVAILABLE PAGES   @D51MDGL 02269000
         ICM   R1,3,GTVSMXCT     MAX. NO. OF PAGES TO BE USED  @D51MDGL 02270000
         SR    R0,R1             REAL FREE PAGES               @D51MDGL 02271000
         SLL   R0,PNSHIFT        REAL FREE AREA IN BYTES       @D51MDGL 02272000
         ST    R0,X0CSVGRS       PASS IT TO USER               @D51MDGL 02273000
         LTR   RE,RE             WE NEED TO GO INTO 24-BIT MODE@D51MDGL 02274000
         BM    XTRSVA19          NO, USER WAS IN 31-BIT MODE   @D51MDGL 02275000
         AMODESW SET,AMODE=24,WR=(R1) GET BACK INTO 24-BIT MODE@D52VDGL 02276000
XTRSVA19 DS    0H                                              @D51MDGL 02277000
         LTR   R7,RF             DID WE GET AN ERROR           @D51MDGL 02278000
         BNZ   XTRSVA20          YES,                          @D52VDGL 02279000
         LA    R4,X0CSVALN       REQUIRED LENGTH               @D52VDGL 02280000
         CH    R4,SVC98LN        USER AREA LARGE ENOUGH        @D52VDGL 02281000
         BH    XTRSVA20          NO, ITS TOO SMALL             @D52VDGL 02282000
         O     R3,XTRGV1LA       REQUEST 31BIT GETVIS INFOS    @D52VDGL 02283000
         LA    R2,X0CSAGCL-X0CSVA OFFSET IN USER AREA          @D51IDGL 02284000
         DROP  R2                  *                           @D52VDGL 02285000
         BAL   R7,XTRGVI01       GET NEXT GETVIS INFORMATION   @D51IDGL 02286000
*SGLINK  XTRGVI01,INPUT=(R2,R3,R7,RA,RC,RE),OUTPUT=RF,                 X02287000
               WORK=(R0,R1,R4,R5)                                       02288000
         NOP   0                 IGNORE ERROR FOR NOW          @D51IDGL 02289000
         LR    R7,RF             SAVE RETURN CODE              @D52VDGL 02290000
XTRSVA20 DS    0H                                              @D52VDGL 02291000
         DROP  RA                BASE OF GETVIS ANCHTAB        @D51MDGL 02292000
         BAL   R8,XTRFRESV       FREE THE LOCK                 @D51MDGL 02293000
*SGLINK  XTRFRESV,INPUT=(R3,R8,RC),OUTPUT=RF,WORK=(R0,R1,R4,R5)         02294000
         LTR   RF,R7             ANY ERROR                     @D51MDGL 02295000
         BZ    XTREXC00          NO, ALL WAS OK                @D51MDGL 02296000
         B     XTRERREX          SAVE RETURN CODE AND EXIT     @D51MDGL 02297000
         SPACE 1                                               @D51IDGL 02298000
         DROP  RC                RELEASE SVC98 BASE                     02299000
         DROP  RD                RELEASE XTRSVA BASE                    02300000
         DROP  RE                RELEASE PARAMETER BASE                 02301000
         MAPEXTR ID=SVA,DSECT=YES,PREFIX=X0C                   @D52VDGL 02302000
&SYSECT  CSECT                   SWITCH TO CSECT AGAIN         @D51MDGL 02303000
         TITLE 'VSE SUPERVISOR     SGINF      PROVIDE DEVICE DATA     ' 02304000
***************************************************************         02305000
*  CODEBLOCK XTRSAINF                                         *         02306000
*  FUNCTION: THIS SERVICE IS INTENDED TO RELATE EXTERNAL      *         02307000
*    DEVICE TYPE CODES TO PUB DEVICE TYPE CODES AND VICE      *         02308000
*    VERSA. IF THE USER SPECIFIED A PUB DEVICE TYPE CODE THE  *         02309000
*    OUTPUT AREA IS FILLED WITH THE FOLLOWING INFORMATION:    *         02310000
*    <4 BYTE NUMBER OF 8 BYTE ENTRIES TO FOLLOW><4 BYTE 0 >   *         02311000
*    <6 BYTE EXTERNAL CODE><1 BYTE INPUT DVTY><1 BYTE MODE>   *         02312000
*    <6 BYTE EXTERNAL CODE><1 BYTE INPUT DVTY><1 BYTE MODE>   *         02313000
*    ... ETC                                                  *         02314000
*    WITH ONE 8 BYTE ENTRY FOR EVERY EXTERNAL DEVICE TYPE     *         02315000
*    CODE THAT MATCHES THIS PUB DEVICE TYPE CODE.             *         02316000
*    IF THE CALLER SPECIFIED AN EXTERNAL DEVICE TYPE CODE     *         02317000
*    ONLY ONE SUCH ENTRY IS RETURNED WHICH IS OF THE SAME     *         02318000
*    FORMAT AS FOR THE PUB DEVICE TYPE CODE INPUT.            *         02319000
*    <4 BYTES WITH A X00000001 IN IT><4 BYTES ALL 0       >   *         02320000
*    <6 BYTE EXTERNAL CODE><1 BYTE PUBDVTY.  ><1 BYTE MODE>   *         02321000
*    IF THE CALLER SPECIFIED EITHER AN INVALID EXTERNAL       *         02322000
*    DEVICE TYPE CODE OR AN INVALID PUB DEVICE TYPE CODE      *         02323000
*    A RETURN CODE IS SUPPLIED TO INDICATE THAT THE SERVICE   *         02324000
*    FAILED.                                                  *         02325000
*    THE INFORMATION IS NOT RELATED TO DEVICES ACTUALLY       *         02326000
*    CONFIGURED IN THE SYSTEM BUT IS RETRIEVED FROM A TABLE   *         02327000
*    IN SGSERI. THIS LIST IS GENERATED BY MACRO VSEDVLST.     *         02328000
*    SPECIFICATION OF THE EXTERNAL DEVICE TYPE CODE OR        *         02329000
*    THE PUB DEVICE TYPE CODE IS DONE IN THE USER OUTPUT      *         02330000
*    AREA IN THE POSITION OF THE FIRST OUTPUT OF THIS         *         02331000
*    VALUE. A MAPPING OF THE OUTPUT (AND INPUT) IS            *         02332000
*    PROVIDED BY MACRO MAPEXTR ID=SAINFO                      *         02333000
*  ON ENTRY:                                                  *         02334000
*    RC = BASE, ADDRESS OF SVC98                              *         02335000
*    R6 = RETURN ADDRESS, NOT NECESSARILY DISPAD              *         02336000
*    RE = PTR TO PARAMETERLIST OF SVC98                       *         02337000
*  ON EXIT TO XTREXC00: USER AREA UPDATED                     *         02338000
*    R0-R5,R7-RA = WORK                                       *         02339000
***************************************************************         02340000
         USING SVC98,RC          BASE REGISTER                 @D61DDGL 02341000
         USING XTRSAINF,RD       BASE REGISTER                 @D61DDGL 02342000
         USING SVC98PL,RE        PARAMETER LIST                @D61DDGL 02343000
XTRSAINF DS    0H                START OF CODEBLOCK                     02344000
         LA    R4,16             MINIMUM LENGTH REQUIRED       @D61DDGL 02345000
         BAL   R7,XTRCLNG2       CALL, CHECK LENGTH =========>>@D61DDGL 02346000
*SGLINK  XTRCLNG2,INPUT=(R4,R7,RC,RE),OUTPUT=(R2,RF),WORK=R1            02347000
         DC    AL1(0,0,0,1)      INDIC.  NO CLEAR OF AREA.     @D61DDGL 02348000
         B     XTRERREX          ERROR (LENGTH INSUFFICIENT)   @D61DDGL 02349000
         USING X0DSAINF,R2       USER INPUT/OUTPUT AREA        @D61DDGL 02350000
         XC    X0DFNDNO(8),X0DFNDNO PURGE INPUT AREA HEADER    @D61DDGL 02351000
         LA    R8,X0DEXTCD       EXTERNAL DEVICE TYPE CODE     @D61DDGL 02352000
         L     R7,XTRSAAD1       TAKE PTR TO DEVICE LIST       @D61DDGL 02353000
         USING DVCLSTE,R7                                      @D61DDGL 02354000
         CLI   SVC98FL,XTRSAPDT  PUB DEVICE TYPE SPECIFIED?    @D61DDGL 02355000
         BE    XTRSA010          YES                           @D61DDGL 02356000
         CLI   SVC98FL,XTRSAEXT  EXTERNAL DEVICE TYPE CODE?    @D61DDGL 02357000
         BE    XTRSA110          YES                           @D61DDGL 02358000
         B     XTREXC16          ERROR (UNKNOWN INPUT SPECIF.) @D61DDGL 02359000
XTRSA010 DS    0H                                              @D61DDGL 02360000
XTRSA015 CLC   X0DPDVTY(1),DEVCODE IS THIS OUR CODE?           @D61DDGL 02361000
         BNE   XTRSA020                                        @D61DDGL 02362000
         L     R9,X0DFNDNO       TAKE NO OF FOUND ENTRIES      @D61DDGL 02363000
         LA    R9,1(,R9)         INCREMENT IT                  @D61DDGL 02364000
         LR    R0,R9             KEEP FOR STORE                @D61DDGL 02365000
         LA    R9,1(,R9)         THINK OF 8 BYTE HEADER        @D61DDGL 02366000
         SLL   R9,3              DOES IT FIT?                  @D61DDGL 02367000
         CH    R9,SVC98LN                                      @D61DDGL 02368000
         BH    XTREXC16          BRANCH IF NO                  @D61DDGL 02369000
         ST    R0,X0DFNDNO       STORE FOR CALLER              @D61DDGL 02370000
         MVC   X0DEXTCD-X0DEXTCD(6,R8),DEVNAME                 @D61DDGL 02371000
         MVC   X0DPDVTY-X0DEXTCD(1,R8),DEVCODE                 @D61DDGL 02372000
         MVC   X0DPMODE-X0DEXTCD(1,R8),DEVMODE                 @D61DDGL 02373000
         LA    R8,X0DENTLN(,R8)  POINT TO NEXT DEVICE          @D61DDGL 02374000
XTRSA020 DS    0H                                              @D61DDGL 02375000
         LA    R7,DVCLSTN        BUMP TO NEXT                  @D61DDGL 02376000
         C     R7,XTRSAAD2       IS THIS THE LAST ONE?         @D61DDGL 02377000
         BL    XTRSA015                                        @D61DDGL 02378000
         B     XTREXC00          RETURN TO CALLER              @D61DDGL 02379000
XTRSA110 DS    0H                                              @D61DDGL 02380000
XTRSA115 CLC   X0DEXTCD(6),DEVNAME IS THIS OUR CODE?           @D61DDGL 02381000
         BNE   XTRSA120                                        @D61DDGL 02382000
         MVI   X0DFNDNO+3,1      TAKE NO OF FOUND ENTRIES      @D61DDGL 02383000
         MVC   X0DEXTCD-X0DEXTCD(6,R8),DEVNAME                 @D61DDGL 02384000
         MVC   X0DPDVTY-X0DEXTCD(1,R8),DEVCODE                 @D61DDGL 02385000
         MVC   X0DPMODE-X0DEXTCD(1,R8),DEVMODE                 @D61DDGL 02386000
         B     XTREXC00          RETURN TO CALLER              @D61DDGL 02387000
XTRSA120 DS    0H                                              @D61DDGL 02388000
         LA    R7,DVCLSTN        BUMP TO NEXT                  @D61DDGL 02389000
         C     R7,XTRSAAD2       IS THIS THE LAST ONE?         @D61DDGL 02390000
         BL    XTRSA115                                        @D61DDGL 02391000
         B     XTREXC08          RETURN TO CALLER              @D61DDGL 02392000
XTRSAAD1 DC    A(DVCLST)                                       @D61DDGL 02393000
XTRSAAD2 DC    A(DLSTLAST)       LAST ENTRY IN DEVICE LIST     @D61DDGL 02394000
         SPACE 1                                               @D61DDGL 02395000
         DROP  R2                RELEASE X0DSAINF                       02396000
         DROP  R7                RELEASE DVCLSTE                        02397000
         SPACE 1                                               @D51IDGL 02398000
         DROP  RC                RELEASE SVC98 BASE                     02399000
         DROP  RD                RELEASE XTRSAINF BASE                  02400000
         DROP  RE                RELEASE PARAMETER BASE                 02401000
         MAPEXTR ID=SAINFO,DSECT=YES,PREFIX=X0D                @D61DDGL 02402000
&SYSECT  CSECT                   . SWITCH TO CSECT AGAIN       @D61DDGL 02403000
         TITLE 'VSE SUPERVISOR     SGINF      PROVIDE LIBRARY CUU     ' 02404000
***************************************************************         02405000
*                                                             *         02406000
*  FUNCTION: THIS SERVICE PROVIDES A CUU ADDRESS FOR A GIVEN  *         02407000
*            DEVICE TYPE AND A SPECIFIED LIBRARY NAME         *         02408000
*                                                             *         02409000
*  INPUT:                                                     *         02410000
*                                                             *         02411000
*    R6 = RETURN ADDRESS                                      *         02412000
*    RC = BASE, ADDRESS OF SVC98                              *         02413000
*    RD = BASE, OF THIS OF CODEBLOCK                          *         02414000
*    RE = PTR TO PARAMETERLIST OF SVC98                       *         02415000
*                                                             *         02416000
*  OUTPUT:                                                    *         02417000
*    RF = RETURN CODE                                         *         02418000
*                                                             *         02419000
***************************************************************         02420000
         USING SVC98,RC          SVC-98 BASE POINTER           @D61ADGL 02421000
         USING XTRATLCU,RD       XTRATLCU BASE POINTER         @D61ADGL 02422000
         USING SVC98PL,RE        PARAMETER LIST BASE POINTER   @D61ADGL 02423000
XTRATLCU DS    0H                EXTRACT ID=ATLCUU                      02424000
         LA    RF,16             ASSUME PARAMETER LENGTH ERROR @D3570   02425000
         LA    R4,X0EATLLN       LENGTH REQUIRED               @D61ADGL 02426000
         CH    R4,SVC98LN        DID USER PROVIDE ENOUGH BYTES @D3570   02427000
         BH    XTRERREX          NO,  =======================> @D3570   02428000
         L     R2,SVC98AR        USERS DATA AREA               @D3570   02429000
         USING X0EATLCU,R2       USER INPUT/OUTPUT AREA        @D61ADGL 02430000
         CLC   X0EATVER,F0       CORRECT VERSION               @D61ADRP 02431000
         BNE   XTREXC28          NO,  =======================> @D61ADRP 02432000
         LA    RB,XTRATSD        ADDRESS OF DEVICE TABLE       @D61ADRP 02433000
         USING ATL#NTRY,RB       ATL#NTRY BASE                 @DY46071 02434000
XTRATC10 CLC   X0EATDVT,ATL#CODE IS THIS THE RIGHT TABLE ENTRY @DY46071 02435000
         BE    XTRATC20          YES,                          @D61ADRP 02436000
         LA    RB,XTRATSDL(,RB)  ADVANCE TO NEXT TABLE ENTRY   @D61ADRP 02437000
         CLI   ATL#CODE,XFF      DID WE REACH TABLE END        @DY46071 02438000
         BNE   XTRATC10          NO, CHECK NEXT ENTRY          @D61ADRP 02439000
         B     XTREXC08          YES, =======================> @D61ADRP 02440000
XTRATC20 L     R5,APBXAREA       ADDRESS OF PUBX ADDRESS VECTOR@D61ADRP 02441000
         S     R5,F4             ADJUST FOR FIRST TIME THROUGH @D61ADRP 02442000
         SLR   RF,RF             CLEAR REGISTER                @DAOME05 02442500
.*                                                             @D3570   02443000
.*  SCAN PUBXTABLE AND FIND A MATCHING PUB ENRY                @D61ADRP 02444000
.*                                                             @D3570   02445000
XTRATC30 LA    R5,4(,R5)         POINT TO FIRST/NEXT PUBX ADDR @D61ADRP 02446000
         ICM   R4,15,0(R5)       HAVE WE REACHED TABLE-END     @D61ADRP 02447590
         BM    XTRATNA0          YES,                          @DAOME05 02448180
         USING PBXADR,R4         PUBX BASE POINTER             @D52CASL 02449000
         TM    PBXFLAG,PBXTAPE   IS THIS A TAPE DEVICE         @D61ADGL 02450000
         BNO   XTRATC30          NO, CHECK NEXT ENTRY          @D61ADGL 02451000
         ICM   R3,15,PBXLBINF    LIBRARY INFO-BLOCK ALLOCATED  @D61ADRP 02452000
         BZ    XTRATC30          NO, CHECK NEXT ENTRY          @D61ADGL 02453000
         USING TLMADR,R3         TMLADR BASE POINTER           @D61ADRP 02454000
         CLC   PBXPUBCD,ATL#DTYP IS IT CORRECT DEVICE TYPE     @DY46071 02455000
         BNE   XTRATC30          NO, FIND ANOTHER DEVICE       @DY46071 02456000
         TM    PBXFLAG2,PBXPPOFF HAS DEVICE BEEN OFFLINED      @DAOME05 02456300
         BO    XTRATC30          YES, FIND ANOTHER DEVICE      @DAOME05 02456600
         TM    IJBFLG09,IJBATL   LIBRARY CONTROLLED BY VM      @DY46071 02457000
         BO    XTRATN20          NO, ITS VSE CONTROLLED        @DY46071 02458490
         AIF   (NOT &VSE270).N270020                           @DTLS    02459000
         TM    IJBFLG0A,IJBTLS   TAPE LIBRARY SUPPORT ACTIVE   @DTLS    02460000
.N270020 ANOP                                                  @DTLS    02461000
         BZ    XTRATV20          NO, ITS VM CONTROLLED         @DTLS    02462490
.*                                                                      02463000
.*    NATIVE DEVICE SUPPORT                                    @D61ADRP 02464000
.*                                                                      02465000
XTRATN20 DS    0H'0'                                           @D61ADRP 02466390
         CLC   TLMLNAME,X0EATLNM IS THIS THE RIGHT LIBRARY     @DAOME05 02466780
         BNE   XTRATC30          NO, FIND ANOTHER DEVICE       @DAOME05 02467170
         CLC   PBXSCH,XFFFF      IS DEVICE NOT-OPERATIONAL     @DAOME05 02467560
         BNE   XTRATN60          NO, ITS OPERATIONAL           @D61ADRP 02467950
         TM    SUPFLAG,VMSYS     RUNNING UNDER VM              @DAOME05 02468340
         BZ    XTRATC30          NO, WE NEED A MATCH           @DAOME05 02468730
XTRATN40 LTR   RF,RF             HAVE WE FOUND A CANDIDATE     @DAOME05 02469120
         BNZ   XTRATC30          YES,                          @DAOME05 02469510
         LR    RF,R5             SAVE PUBX ADDR. OF CANDIDATE  @DAOME05 02469990
         B     XTRATC30          TRY TO FIND ANOTHER ONE       @DAOME05 02470290
XTRATN60 TM    PBXFLAG1,PBXFEAT3 IS LIBRARY ONLINE             @D61ADRP 02470680
         BZ    XTRATC30          NO, FIND ANOTHER DEVICE       @D61ADRP 02472000
         ICM   R1,1,ATL#RON      GET RECORDING INFORMATION     @DY46071 02475000
         BZ    XTRATN80          NONE IS REQUIRED              @DY46071 02476490
         EX    R1,XTRATXTM       DEVICE HAS THAT CAPABILITY    @DY46071 02477000
         BNO   XTRATC30          NO, FIND ANOTHER DEVICE       @DY46071 02478000
*HERE WE MAY WANT TO PROVIDE ADDITIONAL CHECKS (MEDIA TYPE)    @DY46071 02479000
         B     XTRATN80          DO THE NOTSET CHECK NOW       @DY46071 02480490
*CHECK FOR NOT SET                                                      02481000
XTRATN80 ICM   R1,1,ATL#ROFF     GET BITS THAT NEED TO BE OFF  @DY46071 02482490
         EX    R1,XTRATXTM       DEVICE HAS THAT CAPABILITY    @DY46071 02483000
         BNZ   XTRATC30          YES, WE WANT IT EXCLUDED      @DY46071 02484000
         B     XTRATC50          YES, TRY TO RESERVE DEVICE    @D61ADRP 02485090
XTRATNA0 LTR   R5,RF             DID WE FIND A CANDIDATE       @DAOME05 02485180
         BZ    XTREXC20          NO,  =======================> @DAOME05 02485270
         L     R4,0(,R5)         ADDRESS OF PUBX               @DAOME05 02485360
         OI    PBXFLAG2,PBXNOSIO+PBXNOVOL FORCE CHARSTCS. UPD. @DAOME05 02485450
         B     XTRATC50          HAVE USER USE THIS DEVICE     @DAOME05 02485540
         SPACE 1                                                        02486000
XTRATXTM TM    PBXTREC,0         IS THIS A CAPABLE DEVICE      @DY46071 02487000
         DROP  R3                RELEASE TMLADR BASE           @D61ADRP 02488000
         SPACE 1                                                        02489000
.*                                                                      02490000
.*    VM     DEVICE SUPPORT                                    @D61ADRP 02491000
.*                                                                      02492000
XTRATV20 DS    0H                                              @D61ADRP 02493490
         CLC   PBXSCH,XFFFF      IS DEVICE ALREADY ATTACHED    @D61ADRP 02493980
         BNE   XTRATC30          YES, FIND ANOTHER ONE         @D61ADRP 02494470
         LR    RF,R4             SAVE ADDRESS OF PUBX ADDRESS  @DAOME05 02495150
           AGO   .AOME0510                                     @DAOME05 02495450
         CLI   ATL#RON,ZERO      ANY RECORDING FORMAT REQUIRED @DY46071 02496000
         BE    XTRATV40          NO, THIS UNIT IS OK           @DY46071 02497490
         IC    R1,ATL#RON        GET RECORDING INFORMATION     @DY46071 02498000
         EX    R1,XTRATXTM       DEVICE HAS THAT CAPABILITY    @DY46071 02499000
         BNO   XTRATC30          NO, FIND ANOTHER DEVICE       @DY46071 02500000
*HERE WE MAY WANT TO PROVIDE ADDITIONAL CHECKS (MEDIA TYPE)    @DY46071 02501000
*        B     XTRATV40          DO THE NOTSET CHECK NOW       @DY46071 02502490
*CHECK FOR NOT SET                                                      02503000
XTRATV40 IC    R1,ATL#ROFF       GET BITS THAT NEED TO BE OFF  @DY46071 02504490
         EX    R1,XTRATXTM       DEVICE HAS THAT CAPABILITY    @DY46071 02505000
         BNZ   XTRATC30          YES, FIND ANOTHER DEVICE      @DY46071 02506000
.AOME0510  ANOP                                                         02507190
         OI    PBXFLAG2,PBXNOSIO+PBXNOVOL FORCE CHARSTCS. UPD. @DAOME05 02507380
         B     XTRATC50          YES, TRY TO RESERVE DEVICE    @D61ADRP 02507570
         SPACE 1                                                        02508000
.*                                                             @D61ADRP 02509000
.* CHECK IF DEVICE IS FREE AND DO THE MOUNT-RESERVE IF SO      @D61ADRP 02510000
.*                                                             @D61ADRP 02511000
XTRATC50 DS    0H                DEVICE FOUND PROCESSING       @D61ADRP 02512290
         LR    R3,R5             SAVE PUBX ADDRESS POINTER     @DAOME05 02512580
         LR    R0,R5             ADDRESS OF PUBX ADDRESS       @D61ADRP 02513000
         S     R0,APBXAREA       OFFSET IN PUBXAREA            @D61ADRP 02514000
         SRL   R0,2              PUB INDEX                     @D61ADRP 02515000
*        GETFLD FIELD=OWNER,PU=(0),RETURN=YES                  @D61ADRP 02516000
         GETFLD FIELD=OWNER,PU=(0),RETURN=YES                  @D61ADRP 02517000
         LTR   RF,RF             IS DEVICE BEING OWNED ALREADY @D61ADRP 02518000
         BNZ   XTRATC80          YES, FIND ANOTHER DEVICE      @DAOME05 02519490
         LH    R0,PBXCUU         GET CUU ADRESS                @D61ADRP 02520000
*        MODFLD FIELD=MNTRSTMP,CUU=(0),RETURN=YES  MOUNT TEMP  @D61ADRP 02521000
         MODFLD FIELD=MNTRSTMP,CUU=(0),RETURN=YES  MOUNT TEMP  @D61ADRP 02522000
         LTR   RF,RF             DID TEMPORARY MOUNT COMPLETE  @D61ADRP 02523000
         BZ    XTRATC60          YES,                          @D61ADRP 02524490
         CH    RF,H24            DEVICE BEING SHARED           @D68GAAP 02525000
         BE    XTRATC80          YES, GET US ANOTHER DEVICE    @DAOME05 02526490
         TM    IJBFLG08,IJBDEBUG IS DEBUG ACTIVE                        02527000
         BZ    XTRATC60          NO,                                    02528490
         DEBUG STOP,XXDBGMC      ENTER WAIT STATE                       02529000
XTRATC60 DS    0H                                              @D61ADRP 02530490
         TM    IJBFLG09,IJBATL   LIBRARY CONTROLLED BY VM      @D61ADRP 02531000
         BO    XTRATC70          NO, ITS VSE CONTROLLED        @D61ADRP 02532490
         AIF   (NOT &VSE270).N270040                           @DTLS    02533000
         TM    IJBFLG0A,IJBTLS   TAPE LIBRARY SUPPORT ACTIVE   @DTLS    02534000
.N270040 ANOP                                                  @DTLS    02535000
         BZ    XTRATC90          YES, SKIP H/W ASSGIN          @D61ADRP 02536590
XTRATC70 L     R1,TCBPTR         ADDRESS OF TCB                @D61ADRP 02537180
         USING TCBADR,R1         TCB BASE POINTER              @D61ADRP 02538000
         STM   R0,RF,SVCSV3      SAVE REGISTERS IN 3RD AREA    @D61ADRP 02539000
         DROP  R1                RELEASE TCB BASE              @D61ADRP 02540000
         LA    R1,PBXCUU         ADDRESS OF CUU FIELD          @D61ADRP 02541000
         DROP  RD                RELEASE XTRATLCU BASE POINTER @D61CDRP 02542000
.*                                                                      02543000
.* NOTE: R0, R1, RC, RD, RF WILL BE USED BY MODVCE             @D61CDRP 02544000
.*       MODVCE CLASS=TAPE,CHNUNIT=(R1),RESERVE=YES            @D61ADRP 02545000
.*                                                                      02546000
*        MODVCE CLASS=TAPE,CHNUNIT=(1),RESERVE=YES             @D61ADRP 02547000
         MODVCE CLASS=TAPE,CHNUNIT=(1),RESERVE=YES             @D61ADRP 02548000
         L     R1,TCBPTR         TCB BASE ADDRESS              @D61ADRP 02549000
         USING TCBADR,R1         TCB BASE POINTER              @D61ADRP 02550000
         LM    R0,RE,SVCSV3      RESTORE MY REGISTERS          @D61ADRP 02551000
         DROP  R1                RELEASE TCB BASE              @D61ADRP 02552000
         USING XTRATLCU,RD       XTRATLCU BASE POINTER         @D61ADRP 02553000
         LTR   RF,RF             WAS RESERVE SUCCESSFUL        @D61ADRP 02554000
         BZ    XTRATC90          YES, THEN WE ARE DONE         @D61ADRP 02555490
         LH    R0,PBXCUU         NO, FREE DEVICE AGAIN         @D61ADRP 02556000
*        MODFLD FIELD=MNTRLTMP,CUU=(0),RETURN=YES RELEASE TEMP @D61ADRP 02557000
         MODFLD FIELD=MNTRLTMP,CUU=(0),RETURN=YES RELEASE TEMP @D61ADRP 02558000
XTRATC80 LR    R5,R3             RESTORE CONDIDATE PUBX ADDR.  @DAOME05 02558490
         SLR   RF,RF             RESET SAVED PUBX ADDR. PNTR.  @DAOME05 02558680
         B     XTRATC30          GET US ANOTHER DEVICE         @D61ADRP 02559000
XTRATC90 MVC   X0EATCUU,PBXCUU   RETURN CUU IN PARM LIST       @D61ADRP 02560590
         B     XTREXC00          OK, WE ARE DONE               @D61ADRP 02561180
         DROP  R2                DROP X0EATLCU BASE            @D61ADRP 02562000
         DROP  R4                DROP PBXADR BASE              @D61ADRP 02563000
         SPACE 1                                               @D51IDGL 02564000
         DROP  RB                RELEASE ATL#NTRY BASE                  02565000
         DROP  RC                RELEASE SVC98 BASE                     02566000
         DROP  RD                RELEASE XTRLTACU BASE                  02567000
         DROP  RE                RELEASE PARAMETER BASE                 02568000
*                                BYTES 0-5 EXTERNAL CODE       @D61ADRP 02569000
*                                BYTES 6-7 PBXDVTYP VALUE      @D61ADRP 02570000
.*                                                             @DY46071 02571000
.*  THE FOLLOWING TABLE CONTAINS THE EXTERNAL REFERENCE CODE   @DY46071 02572000
.*  THAT THE CALLING PROGRAM MUST PROVIDE IN ORDER TO HAVE     @DY46071 02573000
.*  THE EXTRACT SERVICE SELECT THE PROPER DEVICE.              @DY46071 02574000
.*  DEPENDING ON THIS EXTERNAL CODE THE SERVICE WILL ATTEMPT   @DY46071 02575000
.*  TO FIND A DEVICE THAT MATCHES THE DEVICE TYPE CODE (BYTE-6)@DY46071 02576000
.*  AS WELL AS THE RECORDING FORMAT INFORMATION        (BYTE-7)@DY46071 02577000
.*                                                             @DY46071 02578000
.*  BYTE  0- 5        EXTERNAL REFERENCE CODE SUPPLIED BY USER @DY46071 02579000
.*  BYTE  6           DEVICE TYPE CODE            (PUBDEVTY)   @DY46071 02580000
.*  BYTE  7           FORMAT IDENTIFICATION CODE  (PBXTREC)    @DY46071 02581000
.*                    00     UNSPECIFIED FORMAT                @DY46071 02582000
.*                    01  18 TRACK FORMAT (3480/3490)          @DY46071 02583000
.*                    02  36 TRACK FORMAT (2-XF)               @DY46071 02584000
.*                    03 128 TRACK FORMAT (3590)               @DY46071 02585000
.*                    04 256 TRACK FORMAT (3590)               @DY46071 02586000
.*                    05 384 TRACK FORMAT (3590)               @DY46071 02587000
.*                    06 512 TRACK FORMAT (EFMT1)              @DY46071 02588000
.*                    07 896 TRACK FORMAT (EFMT2)              @DAOME05 02588500
.*  BYTE  8           FORMAT BITS THAT NEED TO BE OFF          @DY46071 02589000
.*                    00     NO BIT NEEDS TO BE OFF            @DY46071 02590000
.*                    01  18 TRACK FORMAT (3480/3490)          @DY46071 02591000
.*                    02  36 TRACK FORMAT (2-XF)               @DY46071 02592000
.*                    03 128 TRACK FORMAT (3590)               @DY46071 02593000
.*                    04 256 TRACK FORMAT (3590)               @DY46071 02594000
.*                    05 384 TRACK FORMAT (3590)               @DY46071 02595000
.*                    06 512 TRACK FORMAT (EFMT1)              @DY46071 02596000
.*                    07 896 TRACK FORMAT (EFMT2)              @DAOME05 02596500
.*                                                             @DY46071 02597000
ATL#NTRY DSECT                                                 @DY46071 02598000
ATL#CODE DS    CL6               EXTERNAL REFERENCE CODE       @DY46071 02599000
ATL#DTYP DS    XL1               DEVICE TYPE CODE              @DY46071 02600000
ATL#RON  DS    XL1               BITS THAT NEED TO BE ON       @DY46071 02601000
ATL#ROFF DS    XL1               BITS THAT NEED TO BE OFF      @DY46071 02602000
XTRATSDL EQU   *-ATL#NTRY        LENGTH OF ONE ENTRY           @DY46071 02603000
         SPACE 1                                               @DY46071 02604000
&SYSECT  CSECT                                                 @DY46071 02605000
XTRATSD  DS    0F                TABLE OF SUPPORTED DEVICES    @D61ADRP 02606000
         DC    CL6'3490E '       EXTERNAL CODE                          02607000
         DC    AL1(T3490E)       DEVICE TYPE CODE              @D62ADMK 02608000
         DC    AL1(0)            UNDEFINED RECORDING FORMAT    @DY46071 02609000
         DC    AL1(0)            MUST BE OFF                   @DY46071 02610000
         SPACE 1                                               @DY46071 02611000
         DC    CL6'TPA   '       EXTERNAL CODE                 @DA43858 02612000
         DC    AL1(TTPA)         DEVICE TYPE CODE              @D62ADMK 02613000
         DC    AL1(0)            UNDEFINED RECORDING FORMAT    @DY46071 02614000
         DC    AL1(PBXT512T)     MUST BE OFF                   @DY46071 02615000
         SPACE 1                                               @DY46071 02616000
         DC    CL6'3570  '       EXTERNAL CODE                 @D3570   02617000
         DC    AL1(T3490E)       DEVICE TYPE CODE              @D3570   02618000
         DC    AL1(0)            UNDEFINED RECORDING FORMAT    @DY46071 02619000
         DC    AL1(0)            MUST BE OFF                   @DY46071 02620000
         SPACE 1                                               @DY46071 02621000
         DC    CL6'CST1  '       SYSTEM CARTRIDGE TAPE (MEDIA1)@DY46071 02622000
         DC    AL1(T3490E)       DEVICE TYPE CODE              @DY46071 02623000
         DC    AL1(0)            18-TRACK FORMAT               @DY46071 02624000
         DC    AL1(0)            MUST BE OFF                   @DY46071 02625000
         SPACE 1                                               @DY46071 02626000
         DC    CL6'CST2  '       SYSTEM CARTRIDGE TAPE (MEDIA1)@DY46071 02627000
         DC    AL1(T3490E)       DEVICE TYPE CODE              @DY46071 02628000
         DC    AL1(PBXT2XF)      36-TRACK FORMAT               @DY46071 02629000
         DC    AL1(0)            MUST BE OFF                   @DY46071 02630000
         SPACE 1                                               @DY46071 02631000
         DC    CL6'ECST  '       ENHANCED CAPACTY CART.(MEDIA2)@DY46071 02632000
         DC    AL1(T3490E)       DEVICE TYPE CODE              @DY46071 02633000
         DC    AL1(PBXT2XF)      36-TRACK FORMAT               @DY46071 02634000
         DC    AL1(0)            MUST BE OFF                   @DY46071 02635000
         SPACE 1                                               @DY46071 02636000
         DC    CL6'HPCT1 '       HIGH PERFORMANCE CART.(MEDIA3)@DY46071 02637000
         DC    AL1(TTPA)         DEVICE TYPE CODE              @DY46071 02638000
         DC    AL1(0)            128-TRACK FORMAT              @DY46071 02639000
         DC    AL1(PBXT256T+PBXT384T+PBXT512T) MUST BE OFF     @DY46071 02640000
         SPACE 1                                               @DY46071 02641000
         DC    CL6'HPCT2 '       HIGH PERFORMANCE CART.(MEDIA3)@DY46071 02642000
         DC    AL1(TTPA)         DEVICE TYPE CODE              @DY46071 02643000
         DC    AL1(PBXT256T)     256-TRACK FORMAT              @DY46071 02644000
         DC    AL1(PBXT384T+PBXT512T) MUST BE OFF              @DY46071 02645000
         SPACE 1                                               @DY46071 02646000
         DC    CL6'HPCT3 '       HIGH PERFORMANCE CART.(MEDIA3)@DY46071 02647000
         DC    AL1(TTPA)         DEVICE TYPE CODE              @DY46071 02648000
         DC    AL1(PBXT384T)     384-TRACK FORMAT              @DY46071 02649000
         DC    AL1(PBXT512T)     BITS MUST BE OFF PBXTREC      @DY46071 02650000
         SPACE 1                                               @DY46071 02651000
         DC    CL6'XHPCT1'       XTENDED HIGH PERF.CART(MEDIA4)@DY46071 02652000
         DC    AL1(TTPA)         DEVICE TYPE CODE              @DY46071 02653000
         DC    AL1(0)            128-TRACK FORMAT              @DY46071 02654000
         DC    AL1(PBXT256T+PBXT384T+PBXT512T) MUST BE OFF     @DY46071 02655000
         SPACE 1                                               @DY46071 02656000
         DC    CL6'XHPCT2'       XTENDED HIGH PERF.CART(MEDIA4)@DY46071 02657000
         DC    AL1(TTPA)         DEVICE TYPE CODE              @DY46071 02658000
         DC    AL1(PBXT256T)     256-TRACK FORMAT              @DY46071 02659000
         DC    AL1(PBXT384T+PBXT512T) MUST BE OFF              @DY46071 02660000
         SPACE 1                                               @DY46071 02661000
         DC    CL6'XHPCT3'       XTENDED HIGH PERF.CART(MEDIA4)@DY46071 02662000
         DC    AL1(TTPA)         DEVICE TYPE CODE              @DY46071 02663000
         DC    AL1(PBXT384T)     384-TRACK FORMAT              @DY46071 02664000
         DC    AL1(PBXT512T)     BITS MUST BE OFF PBXTREC      @DY46071 02665000
         SPACE 1                                               @DY46071 02666000
         DC    CL6'EFMT1 '       EXTERN.CODE (3592-J1A, MEDIA5 @DY46071 02667290
*                                THROUGH MEDIA9, MEDIA10)               02667580
         DC    AL1(TTPA)         DEVICE TYPE CODE              @DY46071 02668000
         DC    AL1(PBXT512T)     512-TRACK FORMAT              @DY46071 02669000
         DC    AL1(PBXT896T)     BITS MUST BE OFF PBXTREC      @D68PGA  02670190
         SPACE 1                                               @D68PGA  02670380
         DC    CL6'EFMT2 '       EXTERN.CODE (3592-E05, MEDIA5 @D68PGA  02670570
*                                THROUGH MEDIA9, MEDIA10)               02670760
         DC    AL1(TTPA)         DEVICE TYPE CODE              @D68PGA  02670950
         DC    AL1(PBXT896T)     896-TRACK FORMAT              @D68PGA  02671140
         DC    AL1(0)            BITS MUST BE OFF PBXTREC      @D68PGA  02671330
         SPACE 1                                               @D68PGA  02671520
         DC    X'FF'             END OF TABLE INDICATOR        @D61ADRP 02672000
         DS    0F                                              @DY46071 02673000
         SPACE 1                                                        02674000
         LTORG ,                                               @D61ADGL 02675000
         SPACE 1                                                        02676000
         MAPEXTR ID=ATLCUU,DSECT=YES,PREFIX=X0E                @D61ADGL 02677000
&SYSECT  CSECT                   SWITCH TO CSECT AGAIN         @D61ADGL 02678000
***************************************************************@D61ADGL 02679000
*  CODEBLOCK XTRMNTL                                          *@D61ADGL 02680000
*  FUNCTION: CODE FOR MODCTB MNTLIST. ATTACH A VOLID LIST     *@D61ADGL 02681000
*    TO THE PUBX OF A SPECIFIED DEVICE. THE LIST IS ONLY      *@D61ADGL 02682000
*    ATTACHED IF THE CALLER SPECIFIES A DEVICE OWNED BY THE   *@D61ADGL 02683000
*    CURRENT PARTITION OR HAS THE TASK ID OF THE ATTENTION    *@D61ADGL 02684000
*    ROUTINE.                                                 *@D61ADGL 02685000
*  ON ENTRY:                                                  *@D61ADGL 02686000
*    RC = BASE, ADDRESS OF SVC98                              *@D61ADGL 02687000
*    R6 = RETURN ADDRESS, NOT NECESSARILY DISPAD              *@D61ADGL 02688000
*    RE = PTR TO PARAMETERLIST OF SVC98                       *@D61ADGL 02689000
*  ON EXIT TO XTREXC00: INPUT VOLID LIST IS PROCESSED         *@D61ADGL 02690000
*    R0-R5,R7-RA = WORK                                       *@D61ADGL 02691000
***************************************************************@D61ADGL 02692000
         USING SVC98,RC          BASE REGISTER                 @D61ADGL 02693000
         USING XTRMNTL,RD        BASE REGISTER                 @D61ADGL 02694000
         USING SVC98PL,RE        PARAMETER LIST                @D61ADGL 02695000
XTRMNTL  DS    0H                START OF CODEBLOCK            @D61ADGL 02696000
         LA    R4,XTRMNTPM       R4: POINT TO PERMISSION BYTE  @D61ADGL 02697000
         BAL   R8,XTRPBNDX       GET PUB INDEX                 @D61ADGL 02698000
*SGLINK  XTRPBNDX,INPUT=(R2,R4,R8,RC,RE),OUTPUT=(R3,RF),               X02699000
               WORK=(R0,R1,R4,R5,R7)                                    02700000
         B     XTREXC20          ERROR (NO PUBINDEX FOUND)     @D61ADGL 02701000
         LA    R4,MNIMINLN       R4: TAKE MINIMUM INPUT LENGTH @D61ADGL 02702000
         BAL   R7,XTRCLNG2       CALL,CHECK LNG OF USER AREA=>>@D61ADGL 02703000
*SGLINK  XTRCLNG2,INPUT=(R4,R7,RC,RE),OUTPUT=(R2,RF),WORK=R1            02704000
         DC    AL1(0,0,0,1)      INDIC.  NO CLEAR OF AREA.     @D61ADGL 02705000
         B     XTREXC16          ERROR (LENGTH INSUFFICIENT)   @D61ADGL 02706000
         LA    R2,0(,R2)         PURGE UPPERMOST DEPENDING ON AMODE  GL 02707000
         USING MNIVLIST,R2       MAPPING FOR USER INPUT        @D61ADGL 02708000
         LH    R5,SVC98LN        ERROR (USER CAME WITH         @D61ADGL 02709000
         S     R5,XTRMNTC0       *      AN IMPOSSIBLE LENGTH   @D61ADGL 02710000
         LA    R0,7              *      OF HIS PARMLIST)       @D61ADGL 02711000
         NR    R0,R5             *                             @D61ADGL 02712000
         BNZ   XTREXC16          *                             @D61ADGL 02713000
         AMODESW SET,AMODE=31,WR=(R4)                          @D61ADGL 02714000
         LA    R4,MNIVOLID       MAKE PTR TO HIS LIST OF       @D61ADGL 02715000
         SRL   R5,3              *  VOLIDS, ONE ENTRY BEFORE   @D61ADGL 02716000
         LA    R5,1(,R5)         TAKE NUMBER OF VOLIDS IN      @D61ADGL 02717000
         B     XTRMNT80          *  HIS LIST                   @D61ADGL 02718000
         DS    0H                LOOP WHILE ENTRY LEFT         @D61ADGL 02719000
XTRMNT70 DS    0H                          ERROR (TYPE OF      @D61ADGL 02720000
         CLI   MNIVOLRW-MNIVOLNM(R4),C'R'  *      ACCESS IS    @D61ADGL 02721000
         BE    XTRMNT72                    *      NEITHER      @D61ADGL 02722000
         CLI   MNIVOLRW-MNIVOLNM(R4),C'W'  *      READ NOR     @D61ADGL 02723000
         BNE   XTREXC08                    *      WRITE )      @D61ADGL 02724000
XTRMNT72 CLI   MNIFLAG,X'00'               *      OR FLAG BYTE @D61ADRP 02725000
         BNE   XTREXC08                    *      NOT ZERO     @D61ADRP 02726000
         LA    R4,L'MNIVOLID(,R4)          BUMP TO NEXT ENTRY  @D61ADGL 02727000
XTRMNT80 BCT   R5,XTRMNT70       WHILE (ENTRIES LEFT)          @D61ADGL 02728000
         DS    0H                LOOPEND                       @D61ADGL 02729000
         SLL   R3,2              MAKE PUBINDEX A POINTER       @D61ADGL 02730000
         A     R3,APBXAREA       *  TO PUBX OF CORRESPONDING   @D61ADGL 02731000
         L     R3,0(,R3)         *  DEVICE                     @D61ADGL 02732000
         USING PBXADR,R3         *                             @D61ADGL 02733000
         TM    PBXFLAG,PBXTAPE   ERROR (DEVICE IS NO TAPE)     @D61ADGL 02734000
         BNO   XTREXC24          *                             @D61ADGL 02735000
         ICM   R4,15,PBXLBINF    ERROR (DEVICE HAS NO LIBINFO) @D61ADGL 02736000
         BZ    XTREXC24          *                             @D61ADGL 02737000
         USING TLMADR,R4         ERROR (DEVICE IS NOT MOUNT    @D61ADGL 02738000
         CLI   TLMMSTAT,X'00'    *      RESERVED FOR ANY       @D61ADGL 02739000
         BE    XTREXC28          *      PARTITION)             @D61ADGL 02740000
         CLC   TID,ARTIDH        ERROR (CALLER IS NOT          @D66ADAP 02741000
         BE    XTRMNT18          *      THE ATTENTION ROUTINE  @D61ADGL 02742000
         CLC   PIK,PBXOWNER      *      NOR IS THE DEVICE MOUNT@D61ADGL 02743000
         BNE   XTREXC28          *      RESERVED FOR THIS      @D61ADGL 02744000
XTRMNT18 DS    0H                *      PARTITION)             @D61ADGL 02745000
         USING MNIVLIST,R2       SET USING FOR USER INPUT      @D61ADGL 02746000
         ICM   R4,15,TLMINFO     IF (THERE IS A LIST FOR THIS  @D61ADRP 02747000
         BZ    XTRMNT10          *   DEVICE ALREADY)           @D61ADGL 02748000
         DROP  R4                ***                           @D61ADGL 02749000
         USING MNTVLIST,R4         IF (THE OLD AREA WOULD BE   @D61ADGL 02750000
         LA    R9,MNTHEADR         *   LARGE ENOUGH FOR THE    @D61ADGL 02751000
         LNR   R9,R9               *   NEW INFORMATION)        @D61ADGL 02752000
         A     R9,MNTARLNG         *                           @D61ADGL 02753000
         CH    R9,SVC98LN          *                           @D61ADGL 02754000
         BL    XTRMNT14            ***                         @D61ADGL 02755000
         LA    R9,L'MNTARLNG         TAKE LENGTH OF AREA       @D61ADGL 02756000
         LNR   R9,R9                 * MINUS                   @D61ADGL 02757000
         A     R9,MNTARLNG           * HEADER                  @D61ADGL 02758000
         LA    R8,MNTLSTNX           POINT TO START FOR CLEAR  @D61ADGL 02759000
         SLR   R1,R1                 PURGE LENGTH OF 2ND OP    @D61ADGL 02760000
         MVCL  R8,R0                 CLEAR AREA                @D61ADGL 02761000
         B     XTRMNT12            ELSE                        @D61ADGL 02762000
XTRMNT14 DS    0H                  ***                         @D61ADGL 02763000
         L     R0,MNTARLNG           TAKE LENGTH OF AREA       @D61ADGL 02764000
         L     RA,TCBPTR             TCB PTR FOR FREEVIS SAVE  @D61ADGL 02765000
         SFREEVIS ADDRESS=(4),LENGTH=(0)                       @D61ADGL 02766000
         L     R1,PBXLBINF           POINT TO LIB INFOS        @D61ADGL 02767000
         USING TLMADR,R1             * AND                     @D61ADGL 02768000
         XC    TLMINFO,TLMINFO       * CLEAR VOLID LIST        @D61ADGL 02769000
         DROP  R1                    *                         @D61ADGL 02770000
XTRMNT10 DS    0H                IF (WE HAD NO AREA AS YET)    @D61ADGL 02771000
         LH    R1,SVC98LN          TAKE LENGTH OF AREA         @D61ADGL 02772000
         LA    R0,MNTHEADR(,R1)    ADD LENGTH OF HEADER INFO   @D61ADGL 02773000
         LR    R9,R0               KEEP FOR MNTARLNG UPDATE    @D61ADGL 02774000
         L     RA,TCBPTR           TCB PTR FOR GETVIS SAVE AREA@D61ADGL 02775000
         SGETVIS ADDRESS=(4),LENGTH=(0),LOC=ANY,               @D61ADGLX02776000
               SPID=XTRSPID1                                   @D61ADGL 02777000
         LTR   RF,RF               ERROR (WE RECEIVED NO       @D61ADGL 02778000
         BNZ   XTREXC12            *      GETVIS)              @D61ADGL 02779000
         ST    R9,MNTARLNG         SET AREA LENGTH INFO        @D61ADGL 02780000
XTRMNT12 DS    0H                ENDIF                         @D61ADGL 02781000
         L     R1,PBXLBINF       POINT TO LIB INFOS            @D61ADGL 02782000
         USING TLMADR,R1         *                             @D61ADGL 02783000
         ST    R4,TLMINFO        *                             @D61ADGL 02784000
         DROP  R1                *                             @D61ADGL 02785000
         DROP  R3                RELEASE PBXADR BASE           @D61ADGL 02786000
         XC    MNTCURRV,MNTCURRV RESET VOLID INFO              @D61ADGL 02787000
         LH    R5,SVC98LN        TAKE NUMBER OF ENTRIES        @D61ADGL 02788000
         S     R5,XTRMNTC0       *  AND STORE IT IN            @D61ADGL 02789000
         SRL   R5,3              *  INDEX OF LAST ENTRY        @D61ADGL 02790000
         ST    R5,MNTLSTNX       *  FIELD                      @D61ADGL 02791000
         LH    R3,SVC98LN        TAKE LENGTH OF USER FIELD     @D61ADGL 02792000
         LA    R8,MNTLIBNM       *  AND MOVE USER DATA INTO    @D61ADGL 02793000
         LR    R9,R3             *  ALLOCATED AREA             @D61ADGL 02794000
         MVCL  R8,R2             *                             @D61ADGL 02795000
         B     XTREXC00          RETURN ====================>>>@D61ADGL 02796000
         DROP  R2                RELEASE MNIVLIST BASE         @D61ADGL 02797000
         DROP  R4                RELEASE MNTVLIST BASE         @D61ADGL 02798000
         SPACE 1                                               @D51IDGL 02799000
         DROP  RC                RELEASE SVC98 BASE                     02800000
         DROP  RD                RELEASE XTRMNTL BASE                   02801000
         DROP  RE                RELEASE PARAMETER BASE                 02802000
         SPACE 1                                               @D61ADGL 02803000
XTRMNTC0 DC    A(L'MNILIBNM)                                   @D61ADGL 02804000
XTRSPID1 DC    C'I3494POL'                                     @D61ADGL 02805000
***************************************************************@D61ADGL 02806000
*  CODEBLOCK XTRMNTN                                          *@D61ADGL 02807000
*  FUNCTION: CODE FOR MODCTB ID=MNTNEXT. IT RETURNS THE VOLID *@D61ADGL 02808000
*    AND LIBRARY NAME INFORMATION FOR THE NEXT VOLID IN A     *@D61ADGL 02809000
*    VOLID LIST OF A SPECIFIED DEVICE AND SETS THE CURRENT    *@D61ADGL 02810000
*    INDEX OF THIS DEVICE TO THE NEXT VOLID IN THE LIST.      *@D61ADGL 02811000
*  ON ENTRY:                                                  *@D61ADGL 02812000
*    RC = BASE, ADDRESS OF SVC98                              *@D61ADGL 02813000
*    R6 = RETURN ADDRESS, NOT NECESSARILY DISPAD              *@D61ADGL 02814000
*    RE = PTR TO PARAMETERLIST OF SVC98                       *@D61ADGL 02815000
*  ON EXIT TO XTREXC00: USER AREA IS UPDATED                  *@D61ADGL 02816000
*    R0-R5,R7-RA = WORK                                       *@D61ADGL 02817000
***************************************************************@D61ADGL 02818000
         USING SVC98,RC          BASE REGISTER                 @D61ADGL 02819000
         USING XTRMNTN,RD        BASE REGISTER                 @D61ADGL 02820000
         USING SVC98PL,RE        PARAMETER LIST                @D61ADGL 02821000
XTRMNTN  DS    0H                                              @D61ADGL 02822000
         LA    R4,XTRMNTPM       AUTHORIZATION BYTE            @D61ADGL 02823000
         BAL   R8,XTRPBNDX       GET PUB INDEX                 @D61ADGL 02824000
*SGLINK  XTRPBNDX,INPUT=(R2,R4,R8,RC,RE),OUTPUT=(R3,RF),               X02825000
               WORK=(R0,R1,R4,R5,R7)                                    02826000
         B     XTREXC20        0 ERROR (NO PUBINDEX FOUND)     @D61ADGL 02827000
         LA    R4,L'MNTLIBNM+L'MNTVOLID TAKE MIN. LENGTH       @D61ADGL 02828000
         BAL   R7,XTRCLNG2       VALIDATE LENGTH SPECIFICATION @D61ADGL 02829000
*SGLINK  XTRCLNG2,INPUT=(R4,R7,RC,RE),OUTPUT=(R2,RF),WORK=R1            02830000
         DC    AL4(0)            INDICATOR BYTE: CLEAR AREA    @D61ADGL 02831000
         B     XTRERREX        0 ERROR (LENGTH INSUFFICIENT)   @D61ADGL 02832000
         SLL   R3,2            4 OFFSET WITHIN PBXAREA         @D61ADGL 02833000
         A     R3,APBXAREA       ADDRESS OF PUBX ENTRY ADDRESS @D61ADGL 02834000
         L     R3,0(,R3)         PUBX ENTRY ADDRESS            @D61ADGL 02835000
         USING PBXADR,R3         PBXADR   BASE POINTER         @D61ADGL 02836000
         AMODESW SET,AMODE=31,WR=(R4) GET INTO 31-BIT MODE     @D61ADGL 02837000
         TM    PBXFLAG,PBXTAPE   IS THIS A TAPE DEVICE         @D61ADGL 02838000
         BNO   XTREXC24          NO,                           @D61ADGL 02839000
         ICM   R4,15,PBXLBINF    LIBRARY ATTACHMENT POSSIBLE   @D61ADGL 02840000
         BZ    XTREXC24          NO,                           @D61ADGL 02841000
         USING TLMADR,R4         TLMADR   BASE POINTER         @D61ADGL 02842000
         ICM   R4,15,TLMINFO     DOES A LIBRARY EXIST          @D61ADGL 02843000
         BZ    XTREXC04          NO,                           @D61ADGL 02844000
         USING MNTVLIST,R4       MNTVLIST BASE POINTER         @D61ADGL 02845000
         CLC   TID,ARTIDH        REQUEST FROM AR TASK          @D66ADAP 02846000
         BE    XTRMNTN1          YES,                          @D61ADGL 02847000
         CLC   PIK,PBXOWNER      IS CALLER THE OWNER           @D61ADGL 02848000
         BNE   XTREXC28          NO,                           @D61ADGL 02849000
XTRMNTN1 DS    0H                TAKE MOUNT INFORMATION        @D61ADGL 02850000
         MVC   0(L'MNTLIBNM,R2),MNTLIBNM  MOVE LIBRARY INFO    @D61ADGL 02851000
         L     R1,MNTCURRV       GET NEXT PUB INDEX            @D61ADGL 02852000
         CL    R1,MNTLSTNX       DID WE REACH THE END          @D61ADGL 02853000
         BNL   XTREXC04          YES,                          @D61ADGL 02854000
         LA    R0,1(,R1)         PROVIDE FOR NEXT PUB INDEX    @D61ADGL 02855000
         ST    R0,MNTCURRV       SAVE NEXT PUB INDEX           @D61ADGL 02856000
         SLL   R1,3              POINT TO VOLID INFO           @D61ADGL 02857000
         LA    R1,MNTVOLID(R1)   ADDRESS OF VOLID              @D61ADGL 02858000
         MVC   L'MNTLIBNM(L'MNTVOLID,R2),0(R1) MOVE TO USER    @D61ADGL 02859000
         B     XTREXC00          RETURN ====================>>>@D61ADGL 02860000
         DROP  R3                RELEASE PBXADR BASE           @D61ADGL 02861000
         DROP  R4                RELEASE MNTVLIST BASE         @D61ADGL 02862000
         SPACE 1                                               @D51IDGL 02863000
         DROP  RC                RELEASE SVC98 BASE                     02864000
         DROP  RD                RELEASE XTRMNTN BASE                   02865000
         DROP  RE                RELEASE PARAMETER BASE                 02866000
*                                                              @D61ADGL 02867000
*   PERMISSION BYTES FOR CALLER OF MODCTB MOUNT SERVICES       @D61ADGL 02868000
*                                                              @D61ADGL 02869000
XTRMNTPM DC    AL1(XTRPMPK+XTRPMCU+XTRPMPU)     PERMISSION BYTE@D61ADGL 02870000
*                                                              @D61ADGL 02871000
*                                                              @D61ADGL 02872000
*   DSECT OF DATA EXPECTED FROM CALLER OF MOUNTLIST SERVICE    @D61ADGL 02873000
*                                                              @D61ADGL 02874000
MNIVLIST DSECT                                                 @D61ADGL 02875000
MNILIBNM DS   XL8    NAME OF LIBRARY.                          @D61ADGL 02876000
MNIMINLN EQU  L'MNILIBNM             MINIMUM LENGTH OF INPUT   @D61ADGL 02877000
MNIVOLID DS  0XL8    ENTRIES WITH VOLID INFORMATION            @D61ADGL 02878000
MNIVOLNM DS   XL6    VOLUME NAME                               @D61ADGL 02879000
MNIFLAG  DS   XL1    FLAG BYTE (RESERVED)                      @D61ADRP 02880000
MNIVOLRW DS   XL1    READ WRITE INFORMATION.                   @D61ADGL 02881000
MNIVOLRD EQU  C'R'   READ MOUNTS REQUIRED                      @D61ADGL 02882000
MNIVOLWR EQU  C'W'   READ/WRITE MOUNT REQUIRED.                @D61ADGL 02883000
*                                                              @D61ADGL 02884000
*   DSECT OF DATA STORED IN HIGH SYSTEM GETVIS.                @D61ADGL 02885000
*                                                              @D61ADGL 02886000
MNTVLIST DSECT                                                 @D61ADGL 02887000
MNTARLNG DS    F     ONE FULLWORD CONTAINING THE AREA LENGTH.  @D61ADGL 02888000
MNTLSTNX DS    F     TOTAL NUMBER OF VOLID ENTRIES             @D61ADGL 02889000
MNTCURRV DS    F     NUMBER OF THE CURRENT VOLID               @D61ADGL 02890000
MNTHEADR EQU   *-MNTVLIST    LENGTH OF HEADER                  @D61ADGL 02891000
MNTLIBNM DS   XL8    NAME OF LIBRARY.                          @D61ADGL 02892000
MNTVOLID DS  0XL8    ENTRIES WITH VOLID INFORMATION            @D61ADGL 02893000
MNTVOLNM DS   XL6    NAME OF VOLID                             @D61ADRP 02894000
MNTFLAG  DS   XL1    FLAG BYTE (RESERVED)                      @D61ADRP 02895000
MNTVOLRW DS   XL1    READ WRITE INFORMATION.                   @D61ADGL 02896000
MNTVOLRD EQU  C'R'   READ MOUNTS REQUIRED                      @D61ADGL 02897000
MNTVOLWR EQU  C'W'   READ/WRITE MOUNT REQUIRED.                @D61ADGL 02898000
&SYSECT  CSECT                                                 @D61ADGL 02899000
***************************************************************@D61ADGL 02900000
*  CODEBLOCK XTRATLST                                         *@D61ADGL 02901000
*  FUNCTION: CODE FOR MODCTB ID=ATLSETUP. IT WILL MODIFY THE  *@D61ADGL 02902000
*    PUBX OF USER SPECIFIED DEVICES TO REFLECT THEIR          *@D61ADGL 02903000
*    MEMBERSHIP IN A SPECIFIED AUTOMATIC TAPE LIBRARY.        *@D61ADGL 02904000
*    IT WILL RECEIVE THE INPUT IN AN INPUT AREA OF THE        *@D61ADGL 02905000
*    FOLLOWING FORMAT:                                        *@D61ADGL 02906000
*    <4 BYTE VERSION DECLARATION (0=LCDD CONTROLLED)>         *@D61ADGL 02907000
*    <4 BYTE NR OF CUUS SPECIFIED IN APPENDED LIST>           *@D61ADGL 02908000
*    <8 BYTE NAME OF THE LIBRARY>                             *@D61ADGL 02909000
*    <2 BYTE CUU>                                             *@D61ADGL 02910000
*      ...         ONE ENTRY FOR EACH CUU THAT CAN BE         *@D61ADGL 02911000
*      ...         SPECIFIED FOR THIS LIBRARY.                *@D61ADGL 02912000
*    <2 BYTE CUU>                                             *@D61ADGL 02913000
*  ON ENTRY:                                                  *@D61ADGL 02914000
*    RC = BASE, ADDRESS OF SVC98                              *@D61ADGL 02915000
*    R6 = RETURN ADDRESS, NOT NECESSARILY DISPAD              *@D61ADGL 02916000
*    RE = PTR TO PARAMETERLIST OF SVC98                       *@D61ADGL 02917000
*  ON EXIT TO XTREXC00: PUBX IS UPDATED                       *@D61ADGL 02918000
*    R0-R5,R7-RA = WORK                                       *@D61ADGL 02919000
***************************************************************@D61ADGL 02920000
         USING SVC98,RC          BASE REGISTER                 @D61ADGL 02921000
         USING XTRATLST,RD       SUBROUTINE BASE REGISTER      @D61ADGL 02922000
         USING SVC98PL,RE        PARAMETER LIST                @D61ADGL 02923000
XTRATLST DS    0H                START OF CODEBLOCK            @D61ADGL 02924000
         LA    R4,ATLSMINL       TAKE MIN. LENGTH              @D61ADRP 02925000
         BAL   R7,XTRCLNG2       VALIDATE USERS LENGTH         @D61ADGL 02926000
*SGLINK  XTRCLNG2,INPUT=(R4,R7,RC,RE),OUTPUT=(R2,RF),WORK=R1            02927000
         DC    AL1(0,0,0,1)      DONT CLEAR USER AREA          @D61ADGL 02928000
         B     XTRERREX        0 ERR, =======================> @D61ADGL 02929000
         USING ATLSETDS,R2       ATLSETDS BASE POINTER         @D61ADRP 02930000
         L     R4,ATLSCUUN     4 GET NUMBER OF CUU ENTRIES     @D61ADRP 02931000
         BCTR  R4,0              SUBTRACT 1                    @D61ADRP 02932000
         LA    R4,ATLSMINL(R4,R4) TOTAL LENGTH REQUIRED        @D61ADRP 02933000
         BAL   R7,XTRCLNG2       VALIDATE TOTAL LENGTH         @D61ADRP 02934000
*SGLINK  XTRCLNG2,INPUT=(R4,R7,RC,RE),OUTPUT=(R2,RF),WORK=R1            02935000
         DC    AL1(0,0,0,1)      DONT CLEAR USER AREA          @D61ADRP 02936000
         B     XTRERREX        0 ERROR (LENGTH INSUFFICIENT)   @D61ADRP 02937000
         CLC   ATLSVERS,F0     4 IS THIS AN LCDD REQUEST       @D61ADRP 02938000
         BNE   XTREXC28          NO,  =======================> @D61ADRP 02939000
         LA    RA,ATLSCUUV       ADDRESS OF 1ST CUU FIELD      @D61ADRP 02940000
         L     R9,ATLSCUUN       GET LOOP COUNT                @D61ADRP 02941000
         SLR   RB,RB             INDICATE NO PHYSICAL LIBARY   @D61ADRP 02942000
         DROP  R2                DROP BASE FOR ATLSETDS        @D61ADRP 02943000
XTRATLS1 DS    0H                LOOP BEGIN                    @D61ADRP 02944000
         SLR   R2,R2             INDICATE KEY-0 REQUEST        @D61ADRP 02945000
         MVI   SVC98FL,SVC98FL1  INDICATE CUU SPECIFIED        @D61ADRP 02946000
         ST    RA,SVC98SE        SET CUU ADDRESS               @D61ADRP 02947000
         LA    R4,XTRATTPM       PRIVILEGE MASK                @D61ADRP 02948000
         BAL   R8,XTRPBNDX       GET PUB INDEX                 @D61ADRP 02949000
*SGLINK  XTRPBNDX,INPUT=(R2,R4,R8,RC,RE),OUTPUT=(R3,RF),               X02950000
               WORK=(R0,R1,R4,R5,R7)                                    02951000
         B     XTRATLSE          ERROR                         @D61ADRP 02952000
         MVI   SVC98FL,X'00'     RESET FLAG BYTE               @D61ADRP 02953000
         XC    SVC98SE,SVC98SE   CLEAR PUB ADDRESS             @D61ADRP 02954000
         SLL   R3,2              MULTIPLY WITH 4               @D61ADRP 02955000
         A     R3,APBXAREA       ADDRESS OF PUBX ADDRESS       @D61ADRP 02956000
         L     R3,0(,R3)         ADDRESS OF PUBX ENTRY         @D61ADRP 02957000
         USING PBXADR,R3         PUBX BASE POINTER             @D61ADRP 02958000
         TM    PBXFLAG,PBXTAPE   IS THIS A TAPE                @D61ADRP 02959000
         BNO   XTREXC12          NO,  =======================> @D61ADRP 02960000
         ICM   R4,15,PBXLBINF    IS IT A TAPE WITH LIBRARY     @D61ADRP 02961000
         BZ    XTREXC12          NO,  =======================> @D61ADRP 02962000
         USING TLMADR,R4         TMLADR BASE POINTER           @D61ADRP 02963000
         SPACE 1                                                        02964000
*  IF RUNNING UNDER VM, DEVICE HAS TO BE NOT OPERATIONAL       @D61ADRP 02965000
         TM    IJBFLG09,IJBATL   IS LIBRARY VM CONTROLLED      @D61ADRP 02966000
         BO    XTRATLS2          NO,                           @D61ADRP 02967000
         CLC   PBXSCH,=X'FFFF'   IS SUBCHANNEL OPERATIONAL              02968000
         BE    XTRATLS5          NO, JOIN MAIN LINE            @D61ADRP 02969000
         B     XTREXC20          ERR, =======================> @D61ADRP 02970000
         SPACE 1                                                        02971000
.*  IF RUNNING NATIVE, DEVICE HAS TO BE OPERATIONAL AND HAS TO @D61ADRP 02972000
.*  BELONG TO THE SAME LIBRARY                                 @D61ADRP 02973000
XTRATLS2 CLC   PBXSCH,=X'FFFF'   IS SUBCHANNEL OPERATIONAL     @D61ADRP 02974000
         BE    XTREXC20          NO,  =======================> @D61ADRP 02975000
         TM    PBXFLAG1,PBXFEAT3 IS LIBARY ONLINE              @D61ADRP 02976000
         BZ    XTREXC12          NO,  =======================> @D61ADRP 02977000
         LTR   RB,RB             FIRST TIME THROUGH            @D61ADRP 02978000
         BNZ   XTRATLS3          NO, LIBRARY SEQ.NO. IS PRESENT@D61ADRP 02979000
         ICM   RB,15,TLMLSEQ     GET PHYSICAL LIBARY INFO      @DY45383 02980000
XTRATLS3 CLM   RB,14,TLMLSEQ     IS THIS THE RIGHT ONE         @DY45988 02981000
         BE    XTRATLS5          YES,                          @D61ADRP 02982000
         OC    TLMLSEQ(4),TLMLSEQ IS THIS ALL ZEROS            @DY45383 02983000
         BNZ   XTREXC24          NO,  =======================> @DY45383 02984000
         ICM   R2,15,PBXVCTE     GET VCTE-ADDRESS PRESENT      @DY45383 02985000
         BZ    XTREXC24          NO,                           @DY45383 02986000
         USING VCTEADR,R2        VCTEADR BASE                  @DY45383 02987000
         TM    VCTTPERF,VCTTMF1A IS THIS MOD-F1A               @DY45383 02988000
         BZ    XTREXC24          NO,                           @DY45383 02989000
         STCM  RB,15,TLMLSEQ     ASSUME IT BELONGS TO LIBRARY  @DY45383 02990000
         DROP  R2                DROP VCTEADR BASE             @DY45383 02991000
XTRATLS5 DS    0H                                              @D61ADRP 02992000
         L     R2,SVC98AR        ADDRESS OF USER AREA          @D61ADRP 02993000
         USING ATLSETDS,R2       ATLSETDS BASE POINER          @D61ADRP 02994000
         MVC   TLMLNAME,ATLSLIBN SET LIBRARY NAME              @D61ADRP 02995000
         OI    TLMLBCTL,TLMLCDD  INDICATE LCDD CONTROLLED      @D28ADAP 02996000
         OI    PBXFLAG2,PBXNOSIO FORCE SVT-TASK TO SUPRESS ATTN@D28ADAP 02997000
         LA    RA,L'ATLSCUUV(,RA) ADVANCE CUU POINER           @D61ADRP 02998000
         BCT   R9,XTRATLS1       ROCESS THIS DEVICE            @D61ADRP 02999000
         B     XTREXC00          RETURN =====================> @D61ADGL 03000000
         DROP  R2                DROP BASE FOR ATLSETDS        @D61ADRP 03001000
         DROP  R3                DROP BASE FOR PBXADR          @D61ADRP 03002000
         DROP  R4                DROP BASE FOR TLMADR          @D61ADRP 03003000
         SPACE 1                                                        03004000
XTRATLSE DS    0H                ERROR EXIT NO PUB AVAILABLE   @D61ADRP 03005000
         MVI   SVC98FL,X'00'     RESTORE FLAG                  @D61ADRP 03006000
         XC    SVC98SE,SVC98SE   RESTORE PUB ADDR              @D61ADRP 03007000
         B     XTREXC08          ERR, =======================> @D61ADRP 03008000
         SPACE 1                                                        03009000
         DROP  RC                DROP SVC98 BASE               @D61ADGL 03010000
         DROP  RD                DROP XTRATLST BASE            @D61ADGL 03011000
         DROP  RE                DROP SVC98PL BASE             @D61ADGL 03012000
XTRATTPM DC    AL1(XTRPMCU)      PERMISSION BYTE               @D61ADRP 03013000
         LTORG ,                                               @D61ADRP 03014000
*                                                              @D61ADGL 03015000
*                                                              @D61ADGL 03016000
*   PERMISSION BYTES FOR CALLER OF MODCTB MOUNT SERVICES       @D61ADGL 03017000
*                                                              @D61ADGL 03018000
XTRATLPM DC    AL1(XTRPMPK+XTRPMCU+XTRPMPU)     PERMISSION BYTE@D61ADGL 03019000
*                                                              @D61ADGL 03020000
*                                                              @D61ADGL 03021000
*   DSECT OF DATA EXPECTED FROM CALLER OF ATLSETUP  SERVICE    @D61ADGL 03022000
*                                                              @D61ADGL 03023000
ATLSETDS DSECT                                                 @D61ADGL 03024000
ATLSVERS DS    XL4   VERSION INDICATOR                         @D61ADGL 03025000
ATLSCUUN DS    XL4   NR OF CUUS MENTIONED IN APPENDED LIST     @D61ADGL 03026000
ATLSLIBN DS    XL8   LOGICAL NAME OF ATL                       @D61ADGL 03027000
ATLSCUUV DS    XL2   FIRST CUU IN APPENDED LIST                @D61ADGL 03028000
ATLSMINL EQU   *-ATLSVERS MINIMUM LENGTH OF USER SUPPL. AREA   @D61ADRP 03029000
*                                                              @D61ADGL 03030000
         AIF   (NOT &VSE280).N280030                           @DSCSI   03031000
         EJECT ,                                               @DSCSI   03032000
.*                                                             @DSCSI   03033000
.*       FBA-SCSI DEVICE CONTROL BLOCK                         @DSCSI   03034000
.*                                                             @DSCSI   03035000
         MAPSCBLK                                              @DSCSI   03036000
.N280030 ANOP                                                  @DSCSI   03037000
&SYSECT  CSECT                                                 @D61ADGL 03038000
XTREND   DS    0F                                              @D61ADGL 03039000
         SPACE 1                                               @D61ADGL 03040000
         DROP ,                  FREE ALL REGISTER USINGS               03041000
         USING SYSS00,R0         LOW CORE BASE                 @DA44841 03042000
***************************************************************         03043000
*  END OF CODE FOR SVC98, EXTRACT SERVICE                     *         03044000
***************************************************************         03045000
         AIF   (NOT &SGINF).NPRT020                            @D61ADRP 03046000
         PRINT NOGEN                                           @D37ZDWK 03047000
.NPRT020 MEXIT                                                 @D37ZDWK 03048000
         MEND                                                  @D34YDWK 03049000
