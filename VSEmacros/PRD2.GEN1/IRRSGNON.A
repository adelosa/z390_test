*/**** START OF SPECIFICATIONS **************************************** 00050000
*********************************************************************** 00100000
************IMPORTANT *******IMPORTANT*********IMPORTANT*************** 00150000
* This macro was developed using the AMG Tool.  The AMG output    @L1A* 00200000
* has been modified due to certain AMG limitations discovered     @L1A* 00250000
* during this macro's development.                                @L2C* 00300000
* This macro will be maintained as you see it.  It is not         @L3A* 00350000
* possible to re-generate it using the AMG tool.                  @L3A* 00400000
************IMPORTANT *******IMPORTANT*********IMPORTANT*************** 00450000
*********************************************************************** 00500000
*                                                                     * 00550000
*01* $MAC(IRRSGNON) COMP(SC1BN) PROD(SAF):               -07/25/89-<> * 00600000
*                                                                     * 00650000
*01* DESCRIPTIVE NAME:  PV SIGNON Interface macro                     * 00700000
*                                                                     * 00750000
*   PROPRIETARY STATEMENT =                                           * 00800000
*                                                                     * 00850000
*   LICENSED MATERIALS - PROGRAM PROPERTY OF IBM                  @P9C* 00900000
*   THIS MODULE IS 'RESTRICTED MATERIALS OF IBM'                  @P9C* 00950000
*   5695-047 (C) COPYRIGHT IBM CORP. 1991                         @P9C* 01000000
*   SEE IBM COPYRIGHT INSTRUCTIONS                                @P9C* 01050000
*                                                                     * 01100000
*                                                                     * 01133300
*   STATUS = JBB4422                                              @P8C* 01166600
*                                                                     * 01200000
*01* FUNCTION:                                                        * 01250000
*                                                                     * 01300000
*                                                                     * 01350000
*      The IRRSGNON macro instruction is invocable ONLY through SAF   * 01400000
*      (via RACROUTE) and is used to provide Resource Access      @L1C* 01450000
*      Control Facility (RACF) Management of LU 6.2 (APPC)        @L1C* 01500000
*      Persistent Verification Signed_On Lists.                   @L1C* 01550000
*                                                                     * 01600000
*      When invoked, it will syntax check the input parameters and    * 01650000
*      build a parameter list.                                        * 01700000
*                                                                     * 01750000
*      SIGNON will setup the parameter list and place its address @P2C* 01800000
*      in register 1.  It will also check to see if invoked via   @P2C* 01850000
*      RACROUTE (checks &ICHRAC).  If invoked via RACROUTE, the   @P2C* 01900000
*      macro will return to RACROUTE.  If not invoked via         @P2C* 01950000
*      RACROUTE, an MNOTE is generated indicating an error and    @P2C* 02000000
*      control will return to the caller.                         @P2C* 02050000
*                                                                     * 02100000
*01* INVOCATION REQUIREMENTS:                                         * 02150000
*                                                                     * 02200000
*                                                                     * 02250000
*      Execution Mode:   Task or SRB mode.                            * 02300000
*                                                                     * 02350000
*      Authorization:                                                 * 02400000
*                          Supervisor State                           * 02450000
*                          Key:       0 - 7                           * 02500000
*                                                                     * 02550000
*      Addressing Mode:  31 bit addressing mode.                      * 02600000
*                                                                     * 02650000
*      Serialization:                                                 * 02700000
*                          Enabled                                    * 02750000
*                                                                     * 02800000
*      Restrictions:                                                  * 02850000
*                          Unlocked                                   * 02900000
*                                                                     * 02950000
*                                                                     * 03000000
*  IRRSGNON Input Register Usage:                                     * 03050000
*                                                                     * 03100000
*  GR1             - Parameter List                                   * 03150000
*  GR14            - Used for 'LA' in building the parm list          * 03200000
*  GR0, GR2 - GR13, GR15, - Irrelevant                                * 03250000
*                                                                     * 03300000
*  IRRSGNON Output Register Usage:                                    * 03350000
*                                                                     * 03400000
*  GR1 - parameter list                                               * 03450000
*  GR0 - not used                                                     * 03500000
*  GR2 - GR15 not used                                                * 03550000
*                                                                     * 03600000
*01* IRRSGNON OUTPUT PARAMETER LIST:                                  * 03650000
*                                                                     * 03700000
*     OFFSETS        VALUE                 CHARACTERISTICS            * 03750000
*     DEC(HEX)                                                    @D2A* 03800000
*       0(0)         SIGPLLEN                 HALFWORD            @D2C* 03850000
*       2(2)         SIGTYPE                  FIXED - 1 BYTE      @D2C* 03900000
*       3(3)         SIGLTYPE                 FIXED - 1 BYTE      @D2C* 03950000
*       4(4)         SIGAPPLP                 (ADDR)->CHAR(8)     @D2C* 04000000
*       8(8)         SIGPOEP                  (ADDR)->CHAR(8)     @D2C* 04050000
*      12(C)         SIGACEPP         (ADDR)->(ADDR)->CHAR(160)   @D2C* 04100000
*      16(10)        SIGGRUPP                 (ADDR)->CHAR(8)     @D4C* 04150000
*      20(14)        SIGSECLP                 (ADDR)->CHAR(8)     @D2C* 04200000
*      24(18)        SIGENVRO                 (ADDR)->CHAR(*)     @L3C* 04250000
*      28(1C)        SIGOTKP                  (ADDR)->CHAR(*)     @D2C* 04300000
*      32(20)        SIGUSRDP                 (ADDR)->CHAR(8)     @D4C* 04350000
*      36(24)        SIGVEXIT                 (ADDR)->FIXED(31)   @D2C* 04400000
*      40(28)        SIGENVRI                 (ADDR)->CHAR(*)     @L3A* 04450000
*                                                                     * 04500000
*01* INVOCATION FORMAT:                                               * 04550000
*                                                                     * 04600000
*<xlabel>  IRRSGNON     TYPE={LISTCRT|LISTDEL|QSIGNON|                * 04650000
*                             SIGNIN|SIGNOFF}                         * 04700000
*                      ,APPL=xappl                                    * 04750000
*                      ,POE=xpoe                                      * 04800000
*                      ,RELEASE=1.9.2                             @L3C* 04850000
*                     <,ACEE={xacee|0}>                               * 04900000
*                     <,GROUP={xgroup|0}>                             * 04950000
*                     <,LSTTYPE={ONFROM}>                             * 05000000
*                     <,SECLABL={xseclabl|0}>                         * 05050000
*                     <,ENVROUT={xenvrout|0}>                     @L3C* 05100000
*                     <,TOKNOUT={xtoknout|0}>                         * 05150000
*                     <,USERID={xuserid|0}>                           * 05200000
*                     <,VERBEXIT={xverbexit|0}>                       * 05250000
*                     <,ENVRIN={xenvrin|0}>                       @L3A* 05300000
*                     <,MF={S|L|(M,xmfctrl)|(E,xmfctrl)}>         @L1C* 05350000
*                                                                     * 05400000
*                                                                     * 05450000
*      Where:                                                         * 05500000
*                                                                     * 05550000
*                                                                     * 05600000
*      <xlabel>                                                       * 05650000
*          is an optional 1 to 8 alphanumeric character input string, * 05700000
*          starting in column 1, that is the assembler label on the   * 05750000
*          IRRSGNON macro.                                            * 05800000
*          DEFAULT: Null label.                                       * 05850000
*                                                                     * 05900000
*                                                                     * 05950000
*                                                                     * 06000000
*      TYPE={LISTCRT|LISTDEL|QSIGNON|SIGNIN|SIGNOFF}                  * 06050000
*          is a keyword input component for the specified port of @D1C* 06100000
*          entry that is required for execution of the macro.     @D1C* 06150000
*                                                                     * 06200000
*                                                                     * 06250000
*           LISTCRT   creates a new Signed_On list of LSTTYPE     @L2C* 06300000
*                                                                     * 06350000
*           LISTDEL   deletes a Signed_On list of LSTTYPE         @L2C* 06400000
*                                                                     * 06450000
*           QSIGNON   checks to see if a user is in a Signed_On   @L2C* 06500000
*                     list of LSTTYPE                             @L2C* 06550000
*                                                                     * 06600000
*           SIGNIN    adds a user to a Signed_On list of LSTTYPE  @L2C* 06650000
*                                                                     * 06700000
*           SIGNOFF   removes users from a Signed_On list of      @L2C* 06750000
*                     LSTTYPE                                     @L2A* 06800000
*                                                                     * 06850000
*          The TYPE input is converted to an index number by      @D2A* 06900000
*          IRRSGNON processing prior to inclusion in the          @D2A* 06950000
*          parameter list it produces.  The index number will be  @D2A* 07000000
*          assigned as follows:                                   @D2A* 07050000
*                                                                 @D2A* 07100000
*              0 - TYPE INCORRECT OR NOT SPECIFIED                @D2A* 07150000
*              1 - LISTCRT                                        @D2A* 07200000
*              2 - LISTDEL                                        @D2A* 07250000
*              3 - SIGNIN                                         @D2A* 07300000
*              4 - SIGNOFF                                        @D2A* 07350000
*              5 - QSIGNON                                        @D2A* 07400000
*                                                                     * 07450000
*                                                                     * 07500000
*      APPL=xappl                                                     * 07550000
*          is the name (RX-type), or address in register (2)-(12), of * 07600000
*          an 8 character input of the local LU name that is      @D1C* 07650000
*          required for execution of the macro.                   @D1A* 07700000
*                                                                     * 07750000
*          When MF=S or MF=L, the APPL may be specified literally @P4A* 07800000
*          (i.e. APPL='applname'), with applname being up to 8    @P4A* 07850000
*          characters in length.                                  @P4A* 07900000
*                                                                     * 07950000
*                                                                     * 08000000
*                                                                     * 08050000
*      POE=xpoe                                                       * 08100000
*          is the name (RX-type), or address in register (2)-(12), of * 08150000
*          an 8 character input of the port of entry into the     @D1C* 08200000
*          system that is required for execution of the macro.    @D1C* 08250000
*                                                                     * 08300000
*          The address points to the remote LU name.  The port of @D1C* 08350000
*          entry is an 8 character field which is left-justified  @D1C* 08400000
*          and padded with blanks.                                @D1C* 08450000
*                                                                     * 08500000
*          The POE name determines which signed_on list is being      * 08550000
*          altered.  A separate list exists for each POE name.        * 08600000
*                                                                     * 08650000
*                                                                     * 08700000
*                                                                     * 08750000
*      RELEASE=1.9.2                                              @L3C* 08800000
*          is a required keyword input                                * 08850000
*                                                                     * 08900000
*                    To use the parameters associated with a release, * 08950000
*                    you must specify the release number of that      * 09000000
*                    release or a later release number.  If you       * 09050000
*                    specify an earlier release level, the parameter  * 09100000
*                    will not be accepted by RACROUTE macro       @D2C* 09150000
*                    processing and an error message will be      @D2C* 09200000
*                    issued by RACROUTE.                          @D2A* 09250000
*                                                                     * 09300000
*                                                                     * 09350000
*                                                                     * 09400000
*                                                                     * 09450000
*       ACEE={xacee|0}                                                * 09500000
*          is the name (RX-type), or address in register (2)-(12), of * 09550000
*          an optional fullword input which specifies the address of  * 09600000
*          an optional 160 character input where QSIGNON is to store  * 09650000
*          an ACEE pointer for a signed-on user.  If the keyword is   * 09700000
*          omitted or 0, an ACEE is not returned.  The caller is      * 09750000
*          responsible for doing a RACROUTE REQUEST=VERIFY            * 09800000
*          ENVIR=DELETE to delete the ACEE when no longer needed.     * 09850000
*          (ACEE is extraneous when TYPE is specified as LISTCRT, @L2A* 09900000
*          LISTDEL, SIGNIN or SIGNOFF.)                           @L2A* 09950000
*                                                                     * 10000000
*          DEFAULT: 0                                                 * 10050000
*                                                                     * 10100000
*                                                                 @L3A* 10150000
*                                                                 @L3A* 10200000
*       ENVRIN={xENVRIN|0}                                        @L3A* 10250000
*          is the name (RX-type), or address in register (2)-(12),@L3A* 10300000
*          of an optional variable length character string.       @L3A* 10350000
*          The character string is a data structure that contains @L3A* 10400000
*          the information necessary to re-create a security      @L3A* 10450000
*          environment.  This structure is used by SIGNIN to      @L3A* 10500000
*          update auditing information relevent to this           @L3A* 10550000
*          security environment.  An indicator will be set so     @L3A* 10600000
*          auditing does not occur on subsequent                  @L3A* 10650000
*          RACROUTE, REQ=VERIFY ENVIR=DELETE invocations          @L3A* 10700000
*          pertaining to this security environment.  A final      @L3A* 10750000
*          audit record will be cut during SIGNOFF processing.    @L3A* 10800000
*          (ENVRIN is extraneous when TYPE is specified as        @L3A* 10850000
*          LISTCRT, LISTDEL, SIGNOFF, or QSIGNON.)                @L3A* 10900000
*                                                                 @L3A* 10950000
*                                                                 @L3A* 11000000
*          DEFAULT: 0                                             @L3A* 11050000
*                                                                 @L3A* 11100000
*                                                                 @L3A* 11150000
*          The ENVR data structure looks like:                    @L3A* 11200000
*                                                                 @L3A* 11250000
*          DESCRIPTION                      LENGTH                @L3A* 11300000
*          ==========================       ======                @L3A* 11350000
*          Object length                      4                   @L3A* 11400000
*          Object Storage Area Length         4                   @L3A* 11450000
*          Object Storage Area Address        4                   @L3A* 11500000
*          Object Storage Area Subpool        1                   @L3A* 11550000
*          Object Storage Area Key            1                   @L3A* 11600000
*                                                                     * 11650000
*                                                                 @L3A* 11700000
*                                                                 @L3A* 11750000
*       ENVROUT={xenvrout|0}                                      @L3A* 11800000
*          is the name (RX-type), or address in register (2)-(12),@L3A* 11850000
*          of an optional variable length character string.       @L3A* 11900000
*          The character string is a data structure that          @L3A* 11950000
*          is to hold the information used to describe a security @L3A* 12000000
*          environment.  ENVROUT may be specified on a QSIGNON.   @L3A* 12050000
*          If the user is Signed On, information is passed back   @L3A* 12100000
*          via the ENVROUT area.                                  @L3A* 12150000
*          This information can be used later on                  @L3A* 12200000
*          a RACROUTE REQ=VERIFY with the ENVRIN keyword to       @L3A* 12250000
*          re-create the security environment without causing     @L3A* 12300000
*          I/O to the RACF Data Base.  The address points to a    @L3A* 12350000
*          data structure as defined above.                       @L3A* 12400000
*          (ENVROUT is extraneous when TYPE is specified as       @L3A* 12450000
*          LISTCRT, LISTDEL, SIGNIN, or SIGNOFF.)                 @L3A* 12500000
*                                                                 @L3A* 12550000
*                                                                 @L3A* 12600000
*          DEFAULT: 0                                             @L3A* 12650000
*                                                                 @L3A* 12700000
*                                                                 @L3A* 12750000
*                                                                     * 12800000
*       GROUP={xgroup|0}                                              * 12850000
*          is the name (RX-type), or address in register (2)-(12), of * 12900000
*          an optional group name to which the user, who has      @L3C* 12950000
*          entered the system, belongs.  The address points       @L3C* 13000000
*          to a 1-byte length field, followed by the group        @L3C* 13050000
*          which can be up to eight characters.                   @L3C* 13100000
*          (GROUP is extraneous when TYPE is specified as LISTCRT @L2A* 13150000
*          or LISTDEL.)                                           @L2A* 13200000
*                                                                 @L3C* 13250000
*          NOTE: The GROUP may be a single character              @L3C* 13300000
*          of *, this signifies that all entries                  @L3C* 13350000
*          matching USERID and SECLABL will be removed            @L3C* 13400000
*          from the signed-on list regardless of GROUP.           @L3C* 13450000
*                                                                 @L3C* 13500000
*          NOTE: The PV architecture allows a ten byte group,     @L3C* 13550000
*          however the caller on a SIGNON request is responsible  @L3C* 13600000
*          for specifying only up to an eight byte group.  A      @L3C* 13650000
*          nine to ten byte group must be rejected prior to       @L3C* 13700000
*          RACF invocation.                                       @L3C* 13750000
*                                                                     * 13800000
*          DEFAULT: 0                                                 * 13850000
*                                                                     * 13900000
*                                                                     * 13950000
*                                                                     * 14000000
*       LSTTYPE={ONFROM}                                              * 14050000
*          is an optional 6 character input specifying the type   @L1C* 14100000
*          of signed_on list for which you are requesting the     @L1C* 14150000
*          operation.                                             @L1A* 14200000
*                                                                     * 14250000
*          DEFAULT:  ONFROM                                           * 14300000
*                                                                     * 14350000
*          ONFROM    ONFROM means default Signed_On_From list         * 14400000
*                                                                     * 14450000
*          The LSTTYPE input is converted to an index number by   @D2A* 14500000
*          IRRSGNON processing prior to inclusion in the          @D2A* 14550000
*          parameter list it produces.  The index number will be  @D2A* 14600000
*          assigned as follows:                                   @D2A* 14650000
*                                                                 @D2A* 14700000
*              0 - LSTTYPE INCORRECT                              @D2A* 14750000
*              1 - ONFROM (OR IF LSTTYPE IS NOT SPECIFIED)        @D2A* 14800000
*                                                                     * 14850000
*                                                                     * 14900000
*       SECLABL={xseclabl|0}                                          * 14950000
*          is the name (RX-type), or address in register (2)-(12), of * 15000000
*          an optional 8 character input of an 8-byte field which     * 15050000
*          contains the user's SECLABL.  The field is left justified  * 15100000
*          and padded to the right with blanks.  (SECLABL is      @L2C* 15150000
*          extraneous when TYPE is specified as LISTCRT or        @L2A* 15200000
*          LISTDEL.)                                              @L2A* 15250000
*                                                                     * 15300000
*          DEFAULT: 0                                                 * 15350000
*                                                                     * 15400000
*                                                                     * 15450000
*                                                               15@L3D* 15500000
*       TOKNOUT={xtoknout|0}                                          * 15550000
*          is the name (RX-type), or address in register (2)-(12), of * 15600000
*          an optional 80 character input of a user provided area in  * 15650000
*          which an output UTOKEN is to be built.  If the keyword is  * 15700000
*          omitted or zero, a UTOKEN is not returned.  (TOKNOUT   @L2C* 15750000
*          is extraneous when TYPE is specified as LISTCRT,       @L2A* 15800000
*          LISTDEL, SIGNIN or SIGNOFF.)                           @L2A* 15850000
*                                                                     * 15900000
*          DEFAULT: 0                                                 * 15950000
*                                                                     * 16000000
*          A sample UTOKEN would look like the following:             * 16050000
*                                                                     * 16100000
*          UTOKEN                                                     * 16150000
*          TOKEN   DS   0CL80           UTOKEN/RTOKEN MAPPING         * 16200000
*          TOKLEN  DS   H               UTOKEN/RTOKEN LENGTH          * 16250000
*          TOKVERS DS   H               UTOKEN/RTOKEN VERSION NUMBER  * 16300000
*                  DS   CL76                                          * 16350000
*                                                                     * 16400000
*                                                                     * 16450000
*       USERID={xuserid|0}                                            * 16500000
*          is the name (RX-type), or address in register (2)-(12), of * 16550000
*          the user identification of the user who has entered    @L3C* 16600000
*          the system.  The address points to a 1-byte length     @L3C* 16650000
*          field, followed by the userid which can be up to eight @L3C* 16700000
*          characters.  USERID is required when TYPE has been     @L3C* 16750000
*          specified as QSIGNON, SIGNIN, or SIGNOFF.  (USERID is  @L3C* 16800000
*          extraneous when TYPE is specified as LISTCRT or        @L3C* 16850000
*          LISTDEL.)                                              @L3C* 16900000
*                                                                 @L3C* 16950000
*          NOTE: The USERID may be a single character             @L3C* 17000000
*          of *, this signifies that all entries                  @L3C* 17050000
*          matching SECLABL and GROUP will be removed             @L3C* 17100000
*          from the signed-on list regardless of USERID.          @L3C* 17150000
*                                                                 @L3C* 17200000
*          NOTE: The PV architecture allows a ten byte userid,    @L3C* 17250000
*          however the caller on a SIGNON request is responsible  @L3C* 17300000
*          for specifying only up to an eight byte userid.  A     @L3C* 17350000
*          nine to ten byte userid must be rejected prior to      @L3C* 17400000
*          RACF invocation.                                       @L3C* 17450000
*                                                                     * 17500000
*          DEFAULT: 0                                                 * 17550000
*                                                                     * 17600000
*                                                                     * 17650000
*                                                                     * 17700000
*       VERBEXIT={xverbexit|0}                                        * 17750000
*          is the name (RX-type), or address in register (2)-(12), of * 17800000
*          an optional fullword input which specifies the address     * 17850000
*          of an exit routine which receives control from RACF during * 17900000
*          SIGNOFF processing.  The exit is responsible for issuing   * 17950000
*          the ALLOCATE of the SIGNOFF TP for the partner LU.  When   * 18000000
*          the exit receives control from RACF, register 1 will point * 18050000
*          to a parameter list mapped by ICHSNGFP.  If the exit       * 18100000
*          address is not passed, or is zero, the signoff TP will not * 18150000
*          run at the partner LU.  (VERBEXIT is extraneous when   @L2C* 18200000
*          TYPE is specified as LISTDEL or QSIGNON.)              @L2A* 18250000
*                                                                     * 18300000
*          DEFAULT: 0                                                 * 18350000
*                                                                     * 18400000
*                                                                     * 18450000
*                                                                     * 18500000
*       MF={S|L|M|E}                                                  * 18550000
*          is a required keyword input which specifies the macro      * 18600000
*          form.  The RACROUTE macro performs all validation for  @L2C* 18650000
*          MF and MFCTRL.                                         @L2A* 18700000
*                                                                     * 18750000
*                                                                     * 18800000
*           MF=S                                                      * 18850000
*              specifies the standard form of the macro.  The "S"     * 18900000
*              form generates code to put the parameters into an      * 18950000
*              in-line parameter list and invoke the desired service. * 19000000
*              Full checking for required macro keys is done along    * 19050000
*              with supplying defaults for optional parameters that   * 19100000
*              are not specified.                                     * 19150000
*                                                                     * 19200000
*           MF=L                                                  @L1C* 19250000
*              specifies the list form of the macro.                  * 19300000
*                                                                     * 19350000
*           MF=(M,xmfctrl)                                        @L1C* 19400000
*              specifies the modify form of the macro.  The "M"   @L1C* 19450000
*              form changes parameters in the parameter list      @L1C* 19500000
*              specified by xmfctrl.                              @L1C* 19550000
*                                                                     * 19600000
*            ,xmfctrl                                                 * 19650000
*              is a required input.  It is the name (RX-type), or     * 19700000
*              address in register (2)-(12), of a storage area for    * 19750000
*              the parameter list.                                    * 19800000
*                                                                     * 19850000
*           MF=(E,xmfctrl)                                        @L1C* 19900000
*              specifies the execute form of the macro.  The "E"  @L1C* 19950000
*              form invokes the desired service using the         @L1C* 20000000
*              parameter list specified by xmfctrl.               @L1C* 20050000
*                                                                     * 20100000
*            ,xmfctrl                                                 * 20150000
*              is a required  input.  It is the name (RX-type), or    * 20200000
*              address in register (2)-(12), of a storage area for    * 20250000
*              the parameter list.                                    * 20300000
*                                                                     * 20350000
*                                                                     * 20400000
*01* MODULE TYPE:  ASSEM MACRO                                        * 20450000
*                                                                     * 20500000
*02*   PROCESSOR:  ASSEM                                              * 20550000
*                                                                     * 20600000
*01* COMPONENT:  SC1BN                                                * 20650000
*                                                                     * 20700000
*01* DISTRIBUTION LIBRARY: AMACLIB                                    * 20750000
*                                                                     * 20800000
*01* MACRO USAGE NOTES:                                               * 20850000
*                                                                     * 20900000
*                                                                     * 20950000
*       1.  Printing of the macro expansion is controlled by the      * 21000000
*           ZPRINT global macro variable.  Any value other than 'NO'  * 21050000
*           will result in the macro expansion being printed.  The    * 21100000
*           default is 'YES'.  The following examples illustrate how  * 21150000
*           the ZPRINT variable should be set.                        * 21200000
*                                                                     * 21250000
*               &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'         * 21300000
*                                                                     * 21350000
*01* CHANGE ACTIVITY:                                                 * 21400000
*                                                                     * 21450000
*   Flag LineItem Prod ID  Date    ID      Comment                @P8C* 21500000
* $L0=   APPCPV   RACF/192 891009  PDSEW1  RACF APPC Support      @L0A* 21550000
* $P1=   PJA0003  RACF/192 891109  PDPSB1  PTM PJA0003            @P1A* 21600000
* $P2=   PJA0006  RACF/192 891109  PDPSB1  PTM PJA0006            @P2A* 21650000
* $P3=   PJA0007  RACF/192 891109  PDPSB1  PTM PJA0007            @P3A* 21700000
* $D1=   DCR0009  RACF/192 891211  PDPSB1  DCR 9                  @D1A* 21750000
* $L1=   APPCPV   RACF/192 891211  PDPSB1  RACF APPC Support      @L1A* 21800000
* $D2=   DCR0014  RACF/192 891211  PDPSB1  DCR 14                 @D2A* 21850000
* $D3=   DCR0015  RACF/192 891211  PDPSB1  DCR 15                 @D3A* 21900000
* $D4=   DCR0005  RACF/192 891211  PDPSB1  DCR 5                  @D4A* 21950000
* $P4=   PJA0009  RACF/192 891211  PDPSB1  PTM PJA0009            @P4A* 22000000
* $P5=   PJA0013  RACF/192 900305  PDPSB1  PTM PJA0013            @P5A* 22050000
* $L2=   APPCPV   RACF/192 900305  PDPSB1  RACF APPC Support      @L2A* 22100000
* $D5=   DCR0021  RACF/192 900305  PDPSB1  DCR 21                 @D5A* 22150000
* $P6    PJA0014  RACF/192 900305  PDPSB1  PTM PJA0014            @P6A* 22200000
* $P7    PJA0015  RACF/192 900430  PDPSB1  PTM PJA0015            @P7A* 22250000
* $L3=   APPCPV   RACF/192 900904  PDDRT1  RACF APPC Support      @L3A* 22300000
* $P8=   PJA0029  RACF/192 910524  PDPSB1  PTM PJA0029            @P8A* 22333300
* $P9=   PKI0318  RACF/192 910621  PDALF1  PTM PKI0318            @P9A* 22366600
*                                                                     * 22400000
*                                                                     * 22450000
*01* CHANGE-DESCRIPTIONS:                                             * 22500000
* A000000-999999 APPC support                                         * 22550000
* A - Prevent defaulted parms being set to zero on M & E forms.   @P1A* 22600000
* D - Internal return code processing/checking that would force   @P2A* 22650000
*     a premature end to IRRSGNON processing.                     @P2A* 22700000
* A - Reject of register notation for MF=L macro invocations.     @P3A* 22750000
* A - Checking and MNOTES for TYPE, POE and APPL keywords being   @D1A* 22800000
*     required when MF=S.                                         @D1A* 22850000
* C - Default of LSTTYPE from ONFROM to zero when MF=S or MF=L    @L1A* 22900000
* D - Code and comments for AMG-specific arguments related to MF  @L1A* 22950000
*     (i.e. partial macro syntax checking)                        @L1A* 23000000
* D - Checking for RELEASE=2.1                                    @L1A* 23050000
* C - TYPE and LSTTYPE to index numbers to pass on to IRRSGN00    @D2A* 23100000
* C - SIGPLLEN position to be at the beginning of the parm list   @D2A* 23150000
* D - SIGRELEA from the parameter list being build by IRRSGNON    @D2A* 23200000
* A - Checking and messages for USERID keyword being required     @D3A* 23250000
*     when MF=S and TYPE=QSIGNON, SIGNIN or SIGNOFF               @D3A* 23300000
* C - USERID and GROUP to be inputted as CHAR(8) fields           @D4A* 23350000
* A - Support for an explicitly specified APPL                    @P4A* 23400000
* A - Declare for system generated variable when MF=E and         @P5A* 23450000
*     APPL has been explicitly defined                            @P5A* 23500000
* A - Checking and mnotes for extraneous parameters               @L2A* 23550000
* A - Descriptive block comments                                  @L2A* 23600000
* D - "Dead" AMG generated code                                   @L2A* 23650000
* C - AMG generated labels to be more meaningful                  @L2A* 23700000
* C - MNOTE structures to be inline code/move to end of macro     @L2A* 23750000
* D - RELEASE and MF validation/MNOTES (RACROUTE does this)       @L2A* 23800000
* A - Checking and MNOTE for TOKNIN being required when TYPE is   @D5A* 23850000
*     specified as SIGNIN                                         @D5A* 23900000
* A - Add checking and MNOTE for 'APPLNAME' (explicitly           @P6A* 23950000
*     specified) being greater than 8 characters in length        @P6A* 24000000
* D - Register checking process and MNOTEs                        @P7A* 24050000
* D - TOKNIN support                                              @L3A* 24100000
* A - ENVRIN, and ENVROUT support                                 @L3A* 24150000
* C - Fix register usage errors                                   @L3A* 24200000
* A - Allow to generate code to update parm list on MF=S          @L3A* 24250000
* C - Fix explicit APPL keyword processing.                       @L3A* 24300000
* C - Fix alignment problem of PLIST on MF=S.                     @L3A* 24350000
* D - More "dead" AMG generated code.                             @L3A* 24400000
* C - Status to correctly correspond to MVS level and change      @P8A* 24437500
*     FMID in Change Activity to a Product ID of RACF/192         @P8A* 24475000
* C - Proprietary statement to Licensed Materials                 @P9A* 24512500
*                                                                     * 24550000
****** END OF SPECIFICATIONS *****************************************/ 24600000
******************************************************************@L3A* 24650000
*  This macro is structured as follows:                           @L3A* 24700000
*       - Prolog                                                  @L3A* 24750000
*       - Macro variable definitions                              @L3A* 24800000
*       - Macro parameter syntax checking                         @L3A* 24850000
*       - DC stmts built and stored in the &ZOPx array. (MF=L/S)  @L3A* 24900000
*       - Assembler instructions to update parameter list are     @L3A* 24950000
*         built and stored in the &ZOPx array. (MF=S/M/E)         @L3A* 25000000
*       - Loop to print the &ZOPx array.                          @L3A* 25050000
*       - MNOTE definitions                                       @L3A* 25100000
******************************************************************@L3A* 25150000
         MACRO                                                          25200000
&XLABEL  IRRSGNON &TYPE=,&APPL=,&POE=,&RELEASE=,&ACEE=,&GROUP=,        *25250000
               &LSTTYPE=,&SECLABL=,&ENVROUT=,&TOKNOUT=,                *25300000
               &USERID=,&VERBEXIT=,&ENVRIN=,&MF=                        25350000
.*                                                                 @L3C 25400000
.**************************************************************** 3@L2D 25450000
.***       GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        25500000
.*******************************************************************    25550000
              GBLC  &ZPRINT     YES=PRINT NO=NO PRINT              @L2D 25600000
              GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX             25650000
.*                                                                      25700000
              GBLC  &ZIRRSGNON  YES=MACRO USED AT LEAST ONCE            25750000
.*******************************************************************    25800000
.***       COMMONLY USED LOCAL MACRO VARIABLES                          25850000
.**************************************************************** 2@L2D 25900000
              LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED              25950000
              LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR             26000000
              LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE       2@L2D 26050000
              LCLA  &ZN         NUMERIC WORK VARIABLE             3@L2D 26100000
.********************************************************************   26150000
.***       INVOKE MVS MACROS TO CONTROL CODE GENERATION                 26200000
.********************************************************************   26250000
              GBLC  &SYSSPLV    SP LEVEL 1,2,3 -SPLEVEL                 26300000
              GBLC  &SYSASCE    SYSTEM STATE P ANY AR-SYSSTATE          26350000
.*                                                                      26400000
              AIF   (K'&SYSASCE GT 0).ZSYS4     SYS STATE DEFINED       26450000
              AIF   (K'&SYSSPLV GT 0).ZSYS2     SP LEVEL DEFINED        26500000
              SPLEVEL  TEST                                             26550000
.ZSYS2        ANOP  ,                                                   26600000
              AIF   ('&SYSSPLV' EQ '1').ZSYS3   PRE SP 3.1              26650000
              AIF   ('&SYSSPLV' EQ '2').ZSYS3   PRE SP 3.1              26700000
              SYSSTATE TEST                                             26750000
              AGO   .ZSYS4                                              26800000
.ZSYS3        ANOP  ,                                                   26850000
&SYSASCE      SETC  'P'         ASSUME SYSSTATE PRIMARY                 26900000
.ZSYS4        ANOP  ,                                                   26950000
.*******************************************************************    27000000
.***  DEFINE ALL MACRO VARIABLES (INPUT VALUES WILL BE COPIED      @L2C 27050000
.***  INTO THESE VARIABLES)                                        @L2A 27100000
.*******************************************************************    27150000
              LCLC  &XTYPE      ++ VALUE                                27200000
              LCLC  &XAPPL      ++ NAME                                 27250000
              LCLC  &EXPLAPPL   ++ NAME (EXPLICIT APPL W/O QUOTES) @P5C 27300000
              LCLC  &XPOE       ++ NAME                                 27350000
              LCLC  &XACEE      ++ NAME                                 27400000
              LCLC  &XGROUP     ++ NAME                                 27450000
              LCLC  &XLSTTYPE   ++ VALUE                                27500000
              LCLC  &XSECLABL   ++ NAME                                 27550000
              LCLC  &XENVROUT   ++ NAME                            @L3C 27600000
              LCLC  &XTOKNOUT   ++ NAME                                 27650000
              LCLC  &XUSERID    ++ NAME                                 27700000
              LCLC  &XVERBEXIT  ++ NAME                                 27750000
              LCLC  &XENVRIN    ++ NAME                            @L3A 27800000
              LCLC  &XMF        ++ VALUE                                27850000
              LCLC  &XMFCTRL    ++ NAME                           2@L2D 27900000
.*******************************************************************    27950000
.***  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           @L2C 28000000
.*******************************************************************    28050000
              LCLC  &ZXTYPE     ++ INPUT VALUE                          28100000
              LCLC  &ZXAPPL     ++ INPUT NAME                           28150000
              LCLC  &ZXPOE      ++ INPUT NAME                           28200000
              LCLC  &ZXACEE     ++ INPUT NAME                           28250000
              LCLC  &ZXGROUP    ++ INPUT NAME                           28300000
              LCLC  &ZXLSTTYPE  ++ INPUT VALUE                          28350000
              LCLC  &ZXSECLABL  ++ INPUT NAME                           28400000
              LCLC  &ZXENVROUT  ++ INPUT NAME                      @L3C 28450000
              LCLC  &ZXTOKNOUT  ++ INPUT NAME                           28500000
              LCLC  &ZXUSERID   ++ INPUT NAME                           28550000
              LCLC  &ZXVERBEXIT ++ INPUT NAME                      @L2C 28600000
              LCLC  &ZXENVRIN   ++ INPUT NAME                      @L3A 28650000
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*- 4@L2D 28700000
              GBLB  &ICHRAC         ICHRAC - A flag which is            28750000
.*                                  initialized in the RACROUTE macro   28800000
.*                                  to communicate to SIGNON that it    28850000
.*                                  is being invoked as an inner        28900000
.*                                  macro to the RACROUTE macro.        28950000
              GBLC  &ICHL           SETS ADDRESSABILITY TO THE          29000000
.*                                  PARAMETER LIST FOR THE              29050000
.*                                  RACROUTE MACRO.                @L2D 29100000
.********************************************************************** 29150000
.*  GENERATE MACRO ERROR MESSAGE AND RETURN TO CALLER IF REQUEST   @L2C 29200000
.*  WAS NOT GENERATED VIA A RACROUTE REQUEST.                      @L2C 29250000
.**************************************************************** 6@L2D 29300000
              AIF   (NOT &ICHRAC).EMSG002  Not called by RACROUTE  @L2C 29350000
.***************************************************************** @L2A 29400000
.***                                                                    29450000
.*** MACRO PARAMETER SYNTAX CHECKING                               @L2C 29500000
.***                                                                    29550000
.***************************************************************** @L2A 29600000
              ACTR  10000   SET CONDITIONAL ASSEMBLY LOOP COUNTER  @L2C 29650000
.***************************************************************** @L3A 29700000
.*** Setting the above loop counter saves the macro from           @L3A 29750000
.*** excessive looping.  The ACTR instruction sets a conditional   @L3A 29800000
.*** counter, and each time the assembler processes an AIF or AGO, @L3A 29850000
.*** it decrements the loop counter by one.                        @L3A 29900000
.***************************************************************** @L3A 29950000
.*                                                                 @L3A 30000000
.*****************************************************************      30050000
.*** SET INTERNAL MACRO VARIABLES FOR MF AND MFCTRL                @L2A 30100000
.*** (NOTE:  ALL VALIDATION PROCESSING FOR MF AND MFCTRL IS        @L2A 30150000
.***  PERFORMED BY THE RACROUTE MACRO.)                            @L2A 30200000
.*****************************************************************      30250000
&XMF          SETC  ''          INITIALIZE XVARIABLE               @L2D 30300000
              AIF   ('&MF(1)' NE 'L').CHKMFS                       @L2C 30350000
&XMF          SETC  'L'         SET KEYWORD TO LIST                @L2M 30400000
              AGO   .ENDMF                                         @L2A 30450000
.CHKMFS       AIF   ('&MF(1)' NE 'S').CHKMFM                       @L2A 30500000
&XMF          SETC  'S'         SET KEYWORD TO STANDARD            @L1C 30550000
              AGO   .ENDMF                                         @L2A 30600000
.CHKMFM       AIF   ('&MF(1)' NE 'M').MFE                          @L2A 30650000
&XMF          SETC  'M'         SET KEYWORD TO MODIFY              @L2M 30700000
              AGO   .SETCTRL                                       @L2A 30750000
.MFE          ANOP  ,           MF=EXECUTE                         @L2A 30800000
&XMF          SETC  'E'         SET KEYWORD TO EXECUTE             @L2M 30850000
.SETCTRL      ANOP  ,                                              @L2A 30900000
&XMFCTRL      SETC  '&MF(2)'    SET XVARIABLE FOR MFCTRL           @L2C 30950000
.ENDMF        ANOP  ,                                              @L2A 31000000
.************************************************************** 119@L2D 31050000
.*** DO PROCESSING TO CHECK THAT THE REGISTER FORM OF AN ADDRESS   @L2C 31100000
.*** IS NOT SPECIFIED WHEN MF=L                                    @L2C 31150000
.********************************************************************   31200000
              AIF   ('&XMF' NE 'L').ENDRGCK                        @P3A 31250000
              AIF   ('&APPL' EQ '').RGCK01                         @P3A 31300000
              AIF   ('&APPL'(1,1) EQ '(').EMSG001                  @L2C 31350000
.RGCK01       ANOP  ,                                              @P3A 31400000
              AIF   ('&POE' EQ '').RGCK02                          @P3A 31450000
              AIF   ('&POE'(1,1) EQ '(').EMSG001                   @L2C 31500000
.RGCK02       ANOP  ,                                              @P3A 31550000
              AIF   ('&ACEE' EQ '').RGCK03                         @P3A 31600000
              AIF   ('&ACEE'(1,1) EQ '(').EMSG001                  @L2C 31650000
.RGCK03       ANOP  ,                                              @P3A 31700000
              AIF   ('&GROUP' EQ '').RGCK04                        @P3A 31750000
              AIF   ('&GROUP'(1,1) EQ '(').EMSG001                 @L2C 31800000
.RGCK04       ANOP  ,                                              @P3A 31850000
              AIF   ('&SECLABL' EQ '').RGCK05                      @P3A 31900000
              AIF   ('&SECLABL'(1,1) EQ '(').EMSG001               @L2C 31950000
.RGCK05       ANOP  ,                                              @P3A 32000000
              AIF   ('&ENVROUT' EQ '').RGCK06                      @L3C 32050000
              AIF   ('&ENVROUT'(1,1) EQ '(').EMSG001               @L3C 32100000
.RGCK06       ANOP  ,                                              @P3A 32150000
              AIF   ('&TOKNOUT' EQ '').RGCK07                      @P3A 32200000
              AIF   ('&TOKNOUT'(1,1) EQ '(').EMSG001               @L2C 32250000
.RGCK07       ANOP  ,                                              @P3A 32300000
              AIF   ('&USERID' EQ '').RGCK08                       @P3A 32350000
              AIF   ('&USERID'(1,1) EQ '(').EMSG001                @L2C 32400000
.RGCK08       ANOP  ,                                              @P3A 32450000
              AIF   ('&VERBEXIT' EQ '').RGCK09                     @L3C 32500000
              AIF   ('&VERBEXIT'(1,1) EQ '(').EMSG001              @L2C 32550000
.RGCK09       ANOP  ,                                              @L3A 32600000
              AIF   ('&ENVRIN' EQ '').ENDRGCK                      @L3A 32650000
              AIF   ('&ENVRIN'(1,1) EQ '(').EMSG001                @L3A 32700000
.ERTN001      ANOP  ,                                              @L2A 32750000
.ENDRGCK      ANOP  ,     END REGISTER CHECK FOR MF=L              @L2C 32800000
.****************************************************************       32850000
.*** VALIDATE TYPE PARAMETER.  IF VALID THEN SET XTYPE TO          @P3C 32900000
.*** CORRESPONDING NUMERICAL IDENTIFIER.                           @P3A 32950000
.***   - VALID TYPES ARE:  LISTCRT, LISTDEL, SIGNIN,               @L2A 33000000
.***     SIGNOFF AND QSIGNON.                                      @L2A 33050000
.***   - ONLY ONE ARGUMENT MAY BE SPECIFIED.                       @L2A 33100000
.***   - REQUIRED FOR EXECUTION OF THE MACRO (TEST WHEN MF=S).     @L2A 33150000
.****************************************************************  @P3A 33200000
              AIF   (N'&TYPE LE 1).TYPCK01   CK NUM OF ARGUMENTS   @L2C 33250000
              AGO   .EMSG003        MORE THAN ONE ARGUMENT         @L2A 33300000
.ERTN003      ANOP  ,                                              @L2A 33350000
.TYPCK01      ANOP  ,                                              @L2C 33400000
.*-------------------------------------------------------------------   33450000
&XTYPE        SETC  ''          INITIALIZE XVARIABLE                    33500000
              AIF   ('&TYPE(1)' NE 'LISTCRT').TYPCK02              @L2C 33550000
&XTYPE        SETC  '1'         SET TYPE TO LISTCRT INDEX          @D2C 33600000
              AGO   .TYPOK                                         @L2C 33650000
.*-------------------------------------------------------------------   33700000
.TYPCK02      AIF   ('&TYPE(1)' NE 'LISTDEL').TYPCK03              @L2C 33750000
&XTYPE        SETC  '2'         SET TYPE TO LISTDEL INDEX          @D2C 33800000
              AGO   .TYPOK                                         @L2C 33850000
.*-------------------------------------------------------------------   33900000
.TYPCK03      AIF   ('&TYPE(1)' NE 'SIGNIN').TYPCK04               @L2C 33950000
&XTYPE        SETC  '3'         SET TYPE TO SIGNIN INDEX           @D2C 34000000
              AGO   .TYPOK                                         @L2C 34050000
.*-------------------------------------------------------------------   34100000
.TYPCK04      AIF   ('&TYPE(1)' NE 'SIGNOFF').TYPCK05              @L2C 34150000
&XTYPE        SETC  '4'         SET TYPE TO SIGNOFF INDEX          @D2C 34200000
              AGO   .TYPOK                                         @L2C 34250000
.*-------------------------------------------------------------------   34300000
.TYPCK05      AIF   ('&TYPE(1)' NE 'QSIGNON').TYPERR               @L2C 34350000
&XTYPE        SETC  '5'         SET TYPE TO QSIGNON INDEX          @D2C 34400000
              AGO   .TYPOK                                         @L2C 34450000
.****************************************************************       34500000
.*** IF TYPE WAS INCORRECTLY SPECIFIED THEN SET IT TO ZERO.        @D1C 34550000
.****************************************************************  @D1A 34600000
.*** TYPE IS REQUIRED WHEN MF=S.  IF TYPE WAS NOT SPECIFIED WITH   @D1C 34650000
.*** MF=L OR WITH MF=S THEN SET TYPE TO ZERO.                      @D1A 34700000
.****************************************************************  @D1A 34750000
.TYPERR       AIF   (K'&TYPE(1) LE 0).TYPNULL    NOT SPECIFIED?    @L2C 34800000
              AGO   .EMSG004    ERROR - UNKNOWN KEYWORD            @L2C 34850000
.TYPNULL      ANOP  ,                      *TYPE NOT SPECIFIED?*   @D1C 34900000
              AIF   (('&XMF' EQ 'M') OR ('&XMF' EQ 'E')).ENDTYPCK  @L2C 34950000
              AIF   ('&XMF' NE 'S').DEFTYP    *MF=L*               @D1A 35000000
&ZXTYPE       SETC  ''          RESET IN/OUTPUT                         35050000
              AGO   .EMSG005    TYPE IS REQUIRED                   @L2C 35100000
.ERTN005      ANOP  ,                                              @L2A 35150000
.*----------------------------------------------------------------***   35200000
.ERTN004      ANOP  ,                                              @L2A 35250000
.DEFTYP       ANOP  ,                                              @L2C 35300000
&XTYPE        SETC  '0'         *SET TYPE TO ZERO*                 @D1A 35350000
.TYPOK        ANOP  ,           VALID TYPE                         @L2C 35400000
&ZXTYPE       SETC  'INPUT'     SET IN/OUTPUT                           35450000
.ENDTYPCK     ANOP  ,           END OF TYPE VALIDATION             @L2C 35500000
.****************************************************************       35550000
.*** VALIDATE APPL PARAMETER:                                      @L2A 35600000
.***   - ONLY ONE ARGUMENT MAY BE SPECIFIED.                       @L2A 35650000
.***   - LENGTH OF EXPLICITLY SPECIFIED 'APPLNAME' MUST NOT BE     @P6A 35700000
.***     GREATER THAN 8 CHARACTERS IN LENGTH.                     2@P7D 35750000
.***   - REQUIRED FOR EXECUTION OF THE MACRO (TEST WHEN MF=S).     @L2A 35800000
.*** COPY PARAMETER AND SET ZXAPPL AS APPROPRIATE.                 @L2A 35850000
.****************************************************************       35900000
              AIF   (N'&APPL LE 1).APPCK01      CK NUM             @L2C 35950000
              AGO   .EMSG006       MORE THAN ONE ARGUMENT          @L2C 36000000
.ERTN006      ANOP  ,                                              @L2A 36050000
.APPCK01      ANOP  ,                                              @L2C 36100000
.*-------------------------------------------------------------------   36150000
&ZXAPPL       SETC  'INPUT'     SET IN/OUTPUT                           36200000
&XAPPL        SETC  '&APPL'     SET XVARIABLE                      @L3C 36250000
              AIF   (K'&APPL(1) GT 0).ENDAPP1                      @L2C 36300000
&ZXAPPL       SETC  ''          RESET IN/OUTPUT (NOT SPECIFIED)    @L2C 36350000
&XAPPL        SETC  '0'         SET DEFAULT                        @L2C 36400000
              AIF   ('&XMF' NE 'S').ENDLENCK                       @L2C 36450000
              AGO   .EMSG007    REQUIRED WHEN MF=S                 @L2A 36500000
.ERTN007      ANOP  ,                                              @L2A 36550000
              AGO   .ENDLENCK  SKIP EXPLICIT CK IF NOT SPECIFIED   @P6A 36600000
.ENDAPP1      ANOP  ,    END OF VARIABLE/PRESENCE VALIDATION       @L2C 36650000
.*-------------------------------------------------------------------   36700000
.APPLENCK     AIF   ('&APPL'(1,1) NE '''').ENDLENCK                @P6A 36750000
&EXPLAPPL     SETC  '&XAPPL'(2,K'&XAPPL-2)  RESET XAPPL W/O QUOTES @P6A 36800000
              AIF   (K'&EXPLAPPL GT 8).EMSG038                     @P6A 36850000
.ERTN038      ANOP  ,                                              @P6A 36900000
.ENDLENCK     ANOP  ,   END OF EXPLICIT 'APPLNAME' LENGTH CHECK    @P6A 36950000
.*                                                                4@L3D 37000000
.****************************************************************       37050000
.*** VALIDATE POE PARAMETER:                                       @L2A 37100000
.***   - ONLY ONE ARGUMENT MAY BE SPECIFIED.                      2@P7D 37150000
.***   - REQUIRED FOR EXECUTION OF THE MACRO (TEST WHEN MF=S).     @L2A 37200000
.*** COPY PARAMETER AND SET ZXPOE AS APPROPRIATE.                  @L2A 37250000
.****************************************************************       37300000
              AIF   (N'&POE LE 1).POECK01       CK NUM             @L2C 37350000
              AGO   .EMSG009        MORE THAN ONE ARGUMENT         @L2A 37400000
.ERTN009      ANOP  ,                                              @L2A 37450000
.POECK01      ANOP  ,                                              @L2C 37500000
.*-------------------------------------------------------------------   37550000
&ZXPOE        SETC  'INPUT'     SET IN/OUTPUT                           37600000
&XPOE         SETC  '&POE'      SET XVARIABLE                      @L3C 37650000
              AIF   (K'&POE(1) GT 0).ENDPOE1                       @L2C 37700000
&ZXPOE        SETC  ''          RESET IN/OUTPUT (NOT SPECIFIED)    @L2C 37750000
&XPOE         SETC  '0'         SET DEFAULT                        @L2C 37800000
              AIF   ('&XMF' NE 'S').ENDPOE1                        @L2C 37850000
              AGO   .EMSG010        REQUIRED WHEN MF=S             @L2A 37900000
.ERTN010      ANOP  ,                                              @L2A 37950000
.ENDPOE1      ANOP  ,   END OF VARIABLE/PRESENCE VALIDATION        @L2C 38000000
.*                                                                4@L3D 38050000
.****************************************************************       38100000
.*** VALIDATE ACEE PARAMETER:                                      @L2A 38150000
.***   - ONLY ONE ARGUMENT MAY BE SPECIFIED.                      2@P7D 38200000
.***   - EXTRANEOUS WHEN TYPE=LISTCRT, LISTDEL, SIGNIN OR SIGNOFF  @L2A 38250000
.*** COPY PARAMETER AND SET ZXACEE AS APPROPRIATE.                 @L2A 38300000
.****************************************************************       38350000
              AIF   (N'&ACEE LE 1).ACECK01      CK NUM             @L2C 38400000
              AGO   .EMSG012     MORE THAN ONE ARGUMENT            @L2A 38450000
.ERTN012      ANOP  ,                                              @L2A 38500000
.ACECK01      ANOP  ,                                              @L2C 38550000
.*-------------------------------------------------------------------   38600000
              AIF   (('&XMF' EQ 'M') OR ('&XMF' EQ 'E')).ACECK02   @L2C 38650000
&XACEE        SETC  '0'                         SET DEFAULT        @L2C 38700000
.ACECK02      ANOP  ,                                              @P1A 38750000
              AIF   (K'&ACEE(1) LE 0).ENDACE1   PARM               @L2C 38800000
&XACEE        SETC  '&ACEE'     SET XVARIABLE                      @L3C 38850000
              AIF   ('&XACEE' EQ '').ENDACE1                       @L2C 38900000
              AIF   ((('&XTYPE' EQ '1') OR ('&XTYPE' EQ '2') OR        X38950000
                    ('&XTYPE' EQ '3') OR ('&XTYPE' EQ '4')) AND        X39000000
                    ('&XMF' EQ 'S')).EMSG029      EXTRANEOUS?      @L2A 39050000
&ZXACEE       SETC  'INPUT'     SET IN/OUTPUT                      @P1M 39100000
.ERTN029      ANOP  ,                                              @L2A 39150000
.ENDACE1      ANOP  ,    END OF VARIABLE/PRESENCE VALIDATION       @L2C 39200000
.*                                                                4@L3D 39250000
.****************************************************************       39300000
.*** VALIDATE GROUP PARAMETER:                                     @L2A 39350000
.***   - ONLY ONE ARGUMENT MAY BE SPECIFIED.                      2@P7D 39400000
.***   - EXTRANEOUS WHEN TYPE=LISTCRT OR LISTDEL                   @L2A 39450000
.*** COPY PARAMETER AND SET ZXGROUP AS APPROPRIATE.                @L2A 39500000
.****************************************************************       39550000
              AIF   (N'&GROUP LE 1).GRPCK01     CK NUM             @L2C 39600000
              AGO   .EMSG014    MORE THAN ONE ARGUMENT             @L2A 39650000
.ERTN014      ANOP  ,                                              @L2A 39700000
.GRPCK01      ANOP  ,                                              @L2C 39750000
.*-------------------------------------------------------------------   39800000
              AIF   (('&XMF' EQ 'M') OR ('&XMF' EQ 'E')).GRPCK02   @L2C 39850000
&XGROUP       SETC  '0'         SET DEFAULT                             39900000
.GRPCK02      ANOP  ,                                              @L2C 39950000
              AIF   (K'&GROUP(1) LE 0).ENDGRP1  PARM               @L2C 40000000
&XGROUP       SETC  '&GROUP'                    SET XVARIABLE      @L3C 40050000
              AIF   ('&XGROUP' EQ '').ENDGRP1                      @L2C 40100000
              AIF   ((('&XTYPE' EQ '1') OR ('&XTYPE' EQ '2'))          X40150000
                    AND ('&XMF' EQ 'S')).EMSG030   EXTRANEOUS?     @L2A 40200000
&ZXGROUP      SETC  'INPUT'     SET IN/OUTPUT                      @P1M 40250000
.ERTN030      ANOP  ,                                              @L2A 40300000
.ENDGRP1      ANOP  ,    END OF VARIABLE/PRESENCE VALIDATION       @L2C 40350000
.*                                                                4@L3D 40400000
.****************************************************************       40450000
.*** VALIDATE THE LSTTYPE PARAMETER.  IF VALID THEN SET LSTTYPE    @D1C 40500000
.*** CORRESPONDING NUMERICAL IDENTIFIER.                           @D1A 40550000
.***   - VALID TYPES ARE:  ONFROM                                  @L2A 40600000
.***   - ONLY ONE ARGUMENT MAY BE SPECIFIED.                       @L2A 40650000
.****************************************************************  @P3A 40700000
              AIF   (N'&LSTTYPE LE 1).LTPCK01   CK NUM             @L2C 40750000
              AGO   .EMSG016    MORE THAN ONE ARGUMENT             @L2A 40800000
.ERTN016      ANOP  ,                                              @L2A 40850000
.LTPCK01      ANOP  ,                                              @L2C 40900000
.*-------------------------------------------------------------------   40950000
&XLSTTYPE     SETC  ''          INITIALIZE XVARIABLE                    41000000
              AIF   ('&LSTTYPE(1)' NE 'ONFROM').LTPCK02            @L2C 41050000
&XLSTTYPE     SETC  '1'                                            @D2C 41100000
              AGO   .LTPOK                                         @L2C 41150000
.****************************************************************       41200000
.*** IF LSTTYPE IS INCORRECTLY SPECIFIED, THEN SET IT TO ZERO      @L1C 41250000
.****************************************************************       41300000
.LTPCK02      AIF   (K'&LSTTYPE(1) LE 0).DEFLTP     *SPECIFIED?*   @L2C 41350000
&XLSTTYPE     SETC  '0'         SET TO 0                           @L2A 41400000
              AGO   .EMSG017    INCORRECT SPECIFICATION            @L2A 41450000
.DEFLTP       ANOP  ,           LSTTYPE NOT SPECIFIED              @L2C 41500000
              AIF   (('&XMF' EQ 'M') OR ('&XMF' EQ 'E')).ENDLTPCK  @L2A 41550000
&XLSTTYPE     SETC  '1'         SET DEFAULT OF ONFROM              @L2C 41600000
              AGO   .EMSG037    WARNING - DEFAULT SET              @L2A 41650000
.ERTN017      ANOP  ,                                              @L2A 41700000
.ERTN037      ANOP  ,                                              @L2A 41750000
.LTPOK        ANOP  ,                                              @L2C 41800000
&ZXLSTTYPE    SETC  'INPUT'     SET IN/OUTPUT                           41850000
.ENDLTPCK     ANOP  ,           END OF LSTTYPE VALIDATION          @L2C 41900000
.****************************************************************       41950000
.*** VALIDATE THE SECLABL PARAMETER:                               @L2A 42000000
.***   - ONLY ONE ARGUMENT MAY BE SPECIFIED.                      2@P7D 42050000
.***   - EXTRANEOUS WHEN TYPE=LISTCRT or LISTDEL                   @L2A 42100000
.*** COPY PARAMETER AND SET ZXSECLABL AS APPROPRIATE.              @L2A 42150000
.****************************************************************       42200000
              AIF   (N'&SECLABL LE 1).SECCK01   CK NUM             @L2C 42250000
              AGO   .EMSG018      MORE THAN ONE ARGUMENT           @L2A 42300000
.ERTN018      ANOP  ,                                              @L2A 42350000
.SECCK01      ANOP  ,                                              @L2C 42400000
.*-------------------------------------------------------------------   42450000
              AIF   (('&XMF' EQ 'M') OR ('&XMF' EQ 'E')).SECCK02   @L2C 42500000
&XSECLABL     SETC  '0'         SET DEFAULT                             42550000
.SECCK02      ANOP  ,                                              @L2C 42600000
              AIF   (K'&SECLABL(1) LE 0).ENDSEC1  PARM             @L2C 42650000
&XSECLABL     SETC  '&SECLABL'                  SET XVARIABLE      @L3C 42700000
              AIF   ('&XSECLABL' EQ '').ENDSEC1                    @L2C 42750000
              AIF   ((('&XTYPE' EQ '1') OR ('&XTYPE' EQ '2'))          X42800000
                    AND ('&XMF' EQ 'S')).EMSG031    EXTRANEOUS?    @L2A 42850000
&ZXSECLABL    SETC  'INPUT'     SET IN/OUTPUT                      @P1M 42900000
.ERTN031      ANOP  ,                                              @L2A 42950000
.ENDSEC1      ANOP  ,    END OF VARIABLE/PRESENCE VALIDATION       @L2C 43000000
.*                                                                4@L3D 43050000
.****************************************************************       43100000
.*** VALIDATE THE ENVROUT PARAMETER:                               @L3C 43150000
.***   - ONLY ONE ARGUMENT MAY BE SPECIFIED.                       @L3C 43200000
.***   - EXTRANEOUS WHEN TYPE=LISTCRT, LISTDEL, SIGNIN OR SIGNOFF. @L3C 43250000
.*** COPY PARAMETER AND SET ZXENVROUT AS APPROPRIATE.              @L3C 43300000
.****************************************************************       43350000
              AIF   (N'&ENVROUT LE 1).ENOCK01   CK NUM             @L3C 43400000
              AGO   .EMSG020     MORE THAN ONE ARGUMENT            @L2A 43450000
.ERTN020      ANOP  ,                                              @L2A 43500000
.ENOCK01      ANOP  ,                                              @L3C 43550000
.*-------------------------------------------------------------------   43600000
              AIF   (('&XMF' EQ 'M') OR ('&XMF' EQ 'E')).ENOCK02   @L3C 43650000
&XENVROUT     SETC  '0'            SET DEFAULT                     @L3C 43700000
.ENOCK02      ANOP  ,                                              @L3C 43750000
              AIF   (K'&ENVROUT(1) LE 0).ENDENO1   PARM            @L3C 43800000
&XENVROUT     SETC  '&ENVROUT'                  SET XVARIABLE      @L3C 43850000
              AIF   ('&XENVROUT' EQ '').ENDENO1                    @L3C 43900000
              AIF   ((('&XTYPE' EQ '1') OR ('&XTYPE' EQ '2') OR        X43950000
                    ('&XTYPE' EQ '3') OR ('&XTYPE' EQ '4'))            X44000000
                    AND ('&XMF' EQ 'S')).EMSG032     EXTRANEOUS?   @L3C 44050000
&ZXENVROUT    SETC  'INPUT'     SET IN/OUTPUT                      @L3C 44100000
.ERTN032      ANOP  ,    WARNING - EXTRANEOUS PARAMETER            @L2A 44150000
.ENDENO1      ANOP  ,     END OF VARIABLE/PRESENCE VALIDATION      @L3C 44200000
.*                                                                4@L3D 44250000
.****************************************************************       44300000
.*** VALIDATE THE TOKNOUT PARAMETER:                               @L2A 44350000
.***   - ONLY ONE ARGUMENT MAY BE SPECIFIED.                      2@P7D 44400000
.***   - EXTRANEOUS WHEN TYPE=LISTCRT, LISTDEL, SIGNIN OR SIGNOFF  @L2A 44450000
.*** COPY PARAMETER AND SET ZXTOKNOUT AS APPROPRIATE.              @L2A 44500000
.****************************************************************       44550000
              AIF   (N'&TOKNOUT LE 1).TKOCK01   CK NUM             @L2C 44600000
              AGO   .EMSG022      MORE THAN ONE ARGUMENT           @L2A 44650000
.ERTN022      ANOP  ,                                              @L2A 44700000
.TKOCK01      ANOP  ,                                              @L2C 44750000
.*-------------------------------------------------------------------   44800000
              AIF   (('&XMF' EQ 'M') OR ('&XMF' EQ 'E')).TKOCK02   @L2C 44850000
&XTOKNOUT     SETC  '0'             SET DEFAULT                         44900000
.TKOCK02      ANOP  ,                                              @P1A 44950000
              AIF   (K'&TOKNOUT(1) LE 0).ENDTKO1   PARM            @L2C 45000000
&XTOKNOUT     SETC  '&TOKNOUT'                  SET XVARIABLE      @L3C 45050000
              AIF   ('&XTOKNOUT' EQ '').ENDTKO1                    @L2C 45100000
              AIF   ((('&XTYPE' EQ '1') OR ('&XTYPE' EQ '2') OR        X45150000
                    ('&XTYPE' EQ '3') OR ('&XTYPE' EQ '4'))            X45200000
                    AND ('&XMF' EQ 'S')).EMSG033   EXTRANEOUS?     @L2A 45250000
&ZXTOKNOUT    SETC  'INPUT'     SET IN/OUTPUT                      @P1M 45300000
.ERTN033      ANOP  ,     ERROR - EXTRANEOUS PARAMETER             @L2A 45350000
.ENDTKO1      ANOP  ,     END OF VARIABLE/PRESENCE VALIDATION      @L2C 45400000
.*                                                                4@L3D 45450000
.****************************************************************       45500000
.*** VALIDATE THE USERID PARAMETER:                                @L2A 45550000
.***   - ONLY ONE ARGUMENT MAY BE SPECIFIED.                      2@P7D 45600000
.***   - REQUIRED FOR EXECUTION OF THE MACRO (TEST WHEN MF=S)      @L2A 45650000
.***     WHEN TYPE HAS BEEN SET TO QSIGNON, SIGNIN OR SIGNOFF.     @L2A 45700000
.***   - EXTRANEOUS WHEN TYPE=LISTCRT OR LISTDEL                   @L2A 45750000
.*** COPY PARAMETER AND SET ZXUSERID AS APPROPRIATE.               @L2A 45800000
.****************************************************************       45850000
              AIF   (N'&USERID LE 1).USRCK01    CK NUM             @L2C 45900000
              AGO   .EMSG024      MORE THAN ONE ARGUMENT           @L2A 45950000
.ERTN024      ANOP  ,                                              @L2A 46000000
.USRCK01      ANOP  ,                                              @L2C 46050000
.*-------------------------------------------------------------------   46100000
              AIF   (('&XMF' EQ 'M') OR ('&XMF' EQ 'E')).USRCK02   @L2C 46150000
&XUSERID      SETC  '0'             SET DEFAULT                         46200000
.USRCK02      ANOP  ,                                              @L2C 46250000
              AIF   (K'&USERID(1) LE 0).USRREQCK  NOT SPECIFIED?   @L2C 46300000
&XUSERID      SETC  '&USERID'                   SET XVARIABLE      @L3C 46350000
              AIF   ('&XUSERID' EQ '').USRREQCK                    @L2C 46400000
              AIF   ((('&XTYPE' EQ '1') OR ('&XTYPE' EQ '2'))          X46450000
                    AND ('&XMF' EQ 'S')).EMSG034    EXTRANEOUS?    @L2A 46500000
&ZXUSERID     SETC  'INPUT'     SET IN/OUTPUT                      @P1M 46550000
.ERTN034      ANOP  ,     WARNING - EXTRANEOUS PARAMETER           @L2A 46600000
              AGO   .ENDUSR1                                       @L2C 46650000
.USRREQCK     ANOP  ,                   * USERID NOT SPECIFIED*    @D3C 46700000
.****  DO CHECKING FOR TYPES REQUIRING USERID  ****                @L2C 46750000
              AIF   ('&XMF' NE 'S').ENDUSR1                        @L2C 46800000
              AIF   (('&XTYPE' NE '3') AND ('&XTYPE' NE '4') AND       *46850000
                    ('&XTYPE' NE '5')).ENDUSR1                     @L2C 46900000
              AGO   .EMSG025    ERROR - USERID REQUIRED WHEN MF=S  @L2A 46950000
.ERTN025      ANOP  ,    AND TYPE=QSIGNON, SIGNIN OR SIGNOFF       @L2A 47000000
.ENDUSR1      ANOP  ,    END OF VARIABLE/PRESENCE VALIDATION       @L2C 47050000
.*                                                                4@L3D 47100000
.****************************************************************       47150000
.*** VALIDATE THE VERBEXIT PARAMETER:                              @L2A 47200000
.***   - ONLY ONE ARGUMENT MAY BE SPECIFIED.                      2@P7D 47250000
.***   - EXTRANEOUS WHEN TYPE=LISTDEL OR QSIGNON                   @L2A 47300000
.*** COPY PARAMETER AND SET ZXVERBEXIT AS APPROPRIATE.             @L2A 47350000
.****************************************************************       47400000
              AIF   (N'&VERBEXIT LE 1).VXTCK01  CK NUM             @L2C 47450000
              AGO   .EMSG027      MORE THAN ONE ARGUMENT           @L2A 47500000
.ERTN027      ANOP  ,                                              @L2A 47550000
.VXTCK01      ANOP  ,                                              @L2C 47600000
.*-------------------------------------------------------------------   47650000
              AIF   (('&XMF' EQ 'M') OR ('&XMF' EQ 'E')).VXTCK02   @L2C 47700000
&XVERBEXIT    SETC  '0'         SET DEFAULT                             47750000
.VXTCK02      ANOP  ,                                              @L2C 47800000
              AIF   (K'&VERBEXIT(1) LE 0).ENDVXT1   PARM           @L2C 47850000
&XVERBEXIT    SETC  '&VERBEXIT'                 SET XVARIABLE      @L3C 47900000
              AIF   ('&XVERBEXIT' EQ '').ENDVXT1                   @L2C 47950000
              AIF   ((('&XTYPE' EQ '2') OR ('&XTYPE' EQ '5'))          X48000000
                    AND ('&XMF' EQ 'S')).EMSG035    EXTRANEOUS?    @L2A 48050000
&ZXVERBEXIT   SETC  'INPUT'     SET IN/OUTPUT                      @P1M 48100000
.ERTN035      ANOP  ,      WARNING - EXTRANEOUS PARAMETER          @L2A 48150000
.ENDVXT1      ANOP  ,      END OF VARIABLE/PRESENCE VALIDATION     @L2C 48200000
.*                                                                4@L3D 48250000
.****************************************************************  @L3A 48300000
.*** VALIDATE THE ENVRIN PARAMETER:                                @L3A 48350000
.***   - ONLY ONE ARGUMENT MAY BE SPECIFIED.                       @L3A 48400000
.***   - EXTRANEOUS WHEN TYPE=LISTCRT, LISTDEL,                    @L3A 48450000
.***                          SIGNOFF, or QSIGNON.                 @L3A 48500000
.*** COPY PARAMETER AND SET ZXENVRIN AS APPROPRIATE.               @L3A 48550000
.****************************************************************  @L3A 48600000
              AIF   (N'&ENVRIN LE 1).ENICK01    CK NUM             @L3A 48650000
              AGO   .EMSG028      MORE THAN ONE ARGUMENT           @L3A 48700000
.ERTN028      ANOP  ,                                              @L3A 48750000
.ENICK01      ANOP  ,                                              @L3A 48800000
.*-----------------------------------------------------------------@L3A 48850000
              AIF   (('&XMF' EQ 'M') OR ('&XMF' EQ 'E')).ENICK02   @L3A 48900000
&XENVRIN      SETC  '0'         SET DEFAULT                        @L3A 48950000
.ENICK02      ANOP  ,                                              @L3A 49000000
              AIF   (K'&ENVRIN(1) LE 0).ENDENI1     PARM           @L3A 49050000
&XENVRIN      SETC  '&ENVRIN'                   SET XVARIABLE      @L3A 49100000
              AIF   ('&XENVRIN' EQ '').ENDENI1                     @L3A 49150000
              AIF   ((('&XTYPE' EQ '1') OR ('&XTYPE' EQ '2')           X49200000
                    OR ('&XTYPE' EQ '4') OR ('&XTYPE' EQ '5'))         X49250000
                    AND ('&XMF' EQ 'S')).EMSG036    EXTRANEOUS?    @L3A 49300000
&ZXENVRIN     SETC  'INPUT'     SET IN/OUTPUT                      @L3A 49350000
.ERTN036      ANOP  ,      WARNING - EXTRANEOUS PARAMETER          @L3A 49400000
.ENDENI1      ANOP  ,      END OF VARIABLE/PRESENCE VALIDATION     @L3A 49450000
.*                                                                 @L3A 49500000
.*************************************************************** 24@L2D 49550000
.*** END OF MACRO PARAMETER SYNTAX CHECKING                        @L2C 49600000
.**************************************************************** 3@L2D 49650000
.***                                                                    49700000
.*** START OF IRRSGNON MACRO CODE                                  @L2C 49750000
.***                                                                    49800000
.*******************************************************************    49850000
              LCLC  &M0M0001                  LABEL NAME                49900000
&M0M0001      SETC  '&XLABEL'                 SET LABEL                 49950000
              AIF   (K'&XLABEL NE 0).LABELOK  LABEL WAS SPECIFIED  @L2C 50000000
&M0M0001      SETC  'M00M&SYSNDX'             DEFAULT LABEL             50050000
.*                                                                      50100000
.LABELOK      ANOP  ,                                              @L2C 50150000
&M0M0001 DS    0H                             IRRSGNON-0                50200000
.*******************************************************************    50250000
.*** ENSURE PRINT IS ON (TO PRINT MACRO EXPANSION)                 @L2C 50300000
.*******************************************************************    50350000
         PUSH  PRINT                                                    50400000
         PRINT ON                                                       50450000
.*******************************************************************    50500000
.*** PRINT CONTROLS, DEFAULT IS YES                                     50550000
.*******************************************************************    50600000
              AIF   ('&ZPRINT' NE 'NO').PRINTON  PRINT IS ON       @L2C 50650000
              PRINT OFF         ++ PR01                                 50700000
.PRINTON      ANOP  ,                                              @L2C 50750000
.********************************************************************   50800000
.*** INTERNAL ARRAY TO PRODUCE FORMATTED CODE                           50850000
.********************************************************************   50900000
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       50950000
.*                                                                 @L2D 51000000
                      LCLC  &ZOPL(4095)    LABEL                        51050000
                      LCLC  &ZOPO(4095)    OPERATION                    51100000
                      LCLC  &ZOPV(4095)    VALUE                        51150000
                      LCLC  &ZOPD(4095)    DESCRIPTION                  51200000
.*                                                                      51250000
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     51300000
.******************************************************************     51350000
.*** IRRSGNON LIST PROCESSING FOR MF=S/L PARAMETERS.               @L2C 51400000
.*** SET ARRAY VARIABLES TO PRODUCE ASSEMBLER STATEMENTS FOR       @L2A 51450000
.*** BUILDING THE PARAMETER LIST.                                  @L2A 51500000
.******************************************************************     51550000
&XMFCTRL              SETC  'ICH'.'&SYSNDX'                             51600000
                      AIF   ('&XMF' EQ 'L').CONTLIST               @L2C 51650000
                      AIF   ('&XMF' NE 'S').PROCMFME               @L2C 51700000
         B     &XMFCTRL.S                                               51750000
.*                                                                      51800000
&ZOPN                 SETA  &ZOPN+1                                     51850000
&ZOPL(&ZOPN)          SETC  ' '                                         51900000
&ZOPO(&ZOPN)          SETC  'SPACE'                                     51950000
&ZOPV(&ZOPN)          SETC  '1'                                         52000000
&ZOPD(&ZOPN)          SETC  ' '                                         52050000
.*                                                                      52100000
.CONTLIST             ANOP  ,     CONTINUE LIST PROCESSING         @L2C 52150000
.***************************************************************** @L3A 52200000
.*** Set to fullword boundary to be sure parameter list does not   @L3A 52250000
.*** have bytes skipped in it before the first address declare.    @L3A 52300000
.*** This could happen if the plist started on a halfword          @L3A 52350000
.*** boundary but not a fullword boundary.  (Done for MF=L/S)      @L3A 52400000
.***************************************************************** @L3A 52450000
.*** ALIGN ON FULLWORD BOUNDARY FOR DECLARES                       @L3A 52500000
&ZOPN                 SETA &ZOPN+1                                 @L3A 52550000
&ZOPL(&ZOPN)          SETC '&ICHL'                                 @L3A 52600000
&ZOPO(&ZOPN)          SETC 'DS'                                    @L3A 52650000
&ZOPV(&ZOPN)          SETC '0F'                                    @L3A 52700000
&ZOPD(&ZOPN)          SETC '++ BOUNDARY ALIGNMENT'                 @L3A 52750000
.*************************************************************** 11@L2D 52800000
.*** SET DECLARES FOR PRODUCING FORMATTED CODE THAT WILL FILL IN   @L2A 52850000
.*** THE PARAMETER LIST WHEN MF=L/S.                               @L2A 52900000
.********************************************************************   52950000
.*** SET UP LISTLEN DECLARE STATEMENT                              @L2C 53000000
&ZOPN                 SETA &ZOPN+1                                      53050000
&ZOPL(&ZOPN)          SETC ' '                                     @L3C 53100000
&ZOPO(&ZOPN)          SETC 'DS'                                         53150000
&ZOPV(&ZOPN)          SETC 'XL2'                                        53200000
&ZOPD(&ZOPN)          SETC '++ SIGPLLEN'                           @L2C 53250000
.*-------------------------------------------------------------------   53300000
.*** SET UP TYPE DECLARE STATEMENT                                 @L2C 53350000
&ZOPN                 SETA &ZOPN+1                                      53400000
&ZOPL(&ZOPN)          SETC ' '                                     @D2C 53450000
&ZOPO(&ZOPN)          SETC 'DC'                                    @P1C 53500000
&ZOPV(&ZOPN)          SETC 'FL1''&XTYPE'''                         @D2C 53550000
&ZOPD(&ZOPN)          SETC '++ &ZXTYPE  SIGTYPE'                   @L2C 53600000
.*-------------------------------------------------------------------   53650000
.*** SET UP LSTTYPE DECLARE STATEMENT                              @L2C 53700000
&ZOPN                 SETA &ZOPN+1                                      53750000
&ZOPL(&ZOPN)          SETC ' '                                          53800000
&ZOPO(&ZOPN)          SETC 'DC'                                    @P1C 53850000
&ZOPV(&ZOPN)          SETC 'FL1''&XLSTTYPE'''                      @D2C 53900000
&ZOPD(&ZOPN)          SETC '++ &ZXLSTTYPE  SIGLTYPE'               @L2C 53950000
.*-------------------------------------------------------------------   54000000
.*** SET UP APPL DECLARE STATEMENT                                 @L2C 54050000
&ZOPN                 SETA &ZOPN+1                                      54100000
&ZOPL(&ZOPN)          SETC ' '                                          54150000
&ZOPO(&ZOPN)          SETC 'DC'                                    @P1C 54200000
                      AIF  (('&XAPPL'(1,1) EQ '''')                    X54250000
                       AND ('&XMF' EQ 'L')).EXPL1    EXPLICIT MF=L @L3A 54300000
                      AIF  (('&XAPPL'(1,1) EQ '''')                    X54350000
                       AND ('&XMF' EQ 'S')).APPLSLOT EXPLICIT MF=S @L3A 54400000
                      AIF  ('&XAPPL'(1,1) EQ '(').APPLSLOT         @L3A 54450000
&ZOPV(&ZOPN)          SETC 'A(&XAPPL)'       PROCESS VARIABLE FORM @P3C 54500000
                      AGO  .APPLCONT                               @P4A 54550000
.EXPL1                ANOP ,                 PROCESS EXPLICIT FORM @L3C 54600000
ICH&SYSNDX DC    CL8&XAPPL                                              54650000
&ZOPV(&ZOPN)          SETC 'A(ICH&SYSNDX)'                        2@P4A 54700000
                      AGO  .APPLCONT                               @L3A 54750000
.APPLSLOT             ANOP ,                 RESERVE SLOT FOR APPL @L3A 54800000
&ZOPV(&ZOPN)          SETC 'A(0)'                                  @L3A 54850000
.APPLCONT             ANOP ,                                       @P4A 54900000
&ZOPD(&ZOPN)          SETC '++ &ZXAPPL ADDR SIGAPPLP'              @L2C 54950000
.*-------------------------------------------------------------------   55000000
.*** SET UP POE DECLARE STATEMENT                                  @L2C 55050000
&ZOPN                 SETA &ZOPN+1                                      55100000
&ZOPL(&ZOPN)          SETC ' '                                          55150000
&ZOPO(&ZOPN)          SETC 'DC'                                    @P1C 55200000
                      AIF  ('&XPOE'(1,1) EQ '(').POEREG            @L3A 55250000
&ZOPV(&ZOPN)          SETC 'A(&XPOE)'        PROCESS VARIABLE FORM @L3C 55300000
                      AGO  .POECONT                                @L3A 55350000
.POEREG               ANOP ,                 PROCESS REGISTER FORM @L3A 55400000
&ZOPV(&ZOPN)          SETC 'A(0)'                                  @L3A 55450000
.POECONT              ANOP ,                                       @L3A 55500000
&ZOPD(&ZOPN)          SETC '++ &ZXPOE ADDR SIGPOEP'                @L2C 55550000
.*-------------------------------------------------------------------   55600000
.*** SET UP ACEE DECLARE STATEMENT                                 @L2C 55650000
&ZOPN                 SETA &ZOPN+1                                      55700000
&ZOPL(&ZOPN)          SETC ' '                                          55750000
&ZOPO(&ZOPN)          SETC 'DC'                                    @P1C 55800000
                      AIF  ('&XACEE'(1,1) EQ '(').ACEEREG          @L3A 55850000
&ZOPV(&ZOPN)          SETC 'A(&XACEE)'       PROCESS VARIABLE FORM @P3C 55900000
                      AGO  .ACEECONT                               @L3A 55950000
.ACEEREG              ANOP ,                 PROCESS REGISTER FORM @L3A 56000000
&ZOPV(&ZOPN)          SETC 'A(0)'                                  @L3A 56050000
.ACEECONT             ANOP ,                                       @L3A 56100000
&ZOPD(&ZOPN)          SETC '++ &ZXACEE ADDR SIGACEPP'              @L2C 56150000
.*-------------------------------------------------------------------   56200000
.*** SET UP GROUP DECLARE STATEMENT                                @L2C 56250000
&ZOPN                 SETA &ZOPN+1                                      56300000
&ZOPL(&ZOPN)          SETC ' '                                          56350000
&ZOPO(&ZOPN)          SETC 'DC'                                    @P1C 56400000
                      AIF  ('&XGROUP'(1,1) EQ '(').GROUPREG        @L3A 56450000
&ZOPV(&ZOPN)          SETC 'A(&XGROUP)'      PROCESS VARIABLE FORM @P3C 56500000
                      AGO  .GROUPCONT                              @L3A 56550000
.GROUPREG             ANOP ,                 PROCESS REGISTER FORM @L3A 56600000
&ZOPV(&ZOPN)          SETC 'A(0)'                                  @L3A 56650000
.GROUPCONT            ANOP ,                                       @L3A 56700000
&ZOPD(&ZOPN)          SETC '++ &ZXGROUP ADDR SIGGRUPP'             @L2C 56750000
.*-------------------------------------------------------------         56800000
.*** SET UP SECLABL DECLARE STATEMENT                              @L2C 56850000
&ZOPN                 SETA &ZOPN+1                                      56900000
&ZOPL(&ZOPN)          SETC ' '                                          56950000
&ZOPO(&ZOPN)          SETC 'DC'                                    @P1C 57000000
                      AIF  ('&XSECLABL'(1,1) EQ '(').SECLBREG      @L3A 57050000
&ZOPV(&ZOPN)          SETC 'A(&XSECLABL)'  PROCESS VARIABLE FORM   @P3C 57100000
                      AGO  .SECLBCONT                              @L3A 57150000
.SECLBREG             ANOP ,                 PROCESS REGISTER FORM @L3A 57200000
&ZOPV(&ZOPN)          SETC 'A(0)'                                  @L3A 57250000
.SECLBCONT            ANOP ,                                       @L3A 57300000
&ZOPD(&ZOPN)          SETC '++ &ZXSECLABL ADDR SIGSECLP'           @L2C 57350000
.*-------------------------------------------------------------------   57400000
.*** SET UP ENVROUT DECLARE STATEMENT                              @L3C 57450000
&ZOPN                 SETA &ZOPN+1                                      57500000
&ZOPL(&ZOPN)          SETC ' '                                          57550000
&ZOPO(&ZOPN)          SETC 'DC'                                    @P1C 57600000
                      AIF  ('&XENVROUT'(1,1) EQ '(').ENVROREG      @L3A 57650000
&ZOPV(&ZOPN)          SETC 'A(&XENVROUT)'    PROCESS VARIABLE FORM @L3C 57700000
                      AGO  .ENVROCONT                              @L3A 57750000
.ENVROREG             ANOP ,                 PROCESS REGISTER FORM @L3A 57800000
&ZOPV(&ZOPN)          SETC 'A(0)'                                  @L3A 57850000
.ENVROCONT            ANOP ,                                       @L3A 57900000
&ZOPD(&ZOPN)          SETC '++ &ZXENVROUT ADDR SIGENVRO'           @L3C 57950000
.*-------------------------------------------------------------------   58000000
.*** SET UP TOKNOUT DECLARE STATEMENT                              @L2C 58050000
&ZOPN                 SETA &ZOPN+1                                      58100000
&ZOPL(&ZOPN)          SETC ' '                                          58150000
&ZOPO(&ZOPN)          SETC 'DC'                                    @P1C 58200000
                      AIF  ('&XTOKNOUT'(1,1) EQ '(').TOKNOREG      @L3A 58250000
&ZOPV(&ZOPN)          SETC 'A(&XTOKNOUT)'    PROCESS VARIABLE FORM @P3C 58300000
                      AGO  .TOKNOCONT                              @L3A 58350000
.TOKNOREG             ANOP ,                 PROCESS REGISTER FORM @L3A 58400000
&ZOPV(&ZOPN)          SETC 'A(0)'                                  @L3A 58450000
.TOKNOCONT            ANOP ,                                       @L3A 58500000
&ZOPD(&ZOPN)          SETC '++ &ZXTOKNOUT ADDR SIGOTKP'            @L2C 58550000
.*-------------------------------------------------------------------   58600000
.*** SET UP USERID DECLARE STATEMENT                               @L2C 58650000
&ZOPN                 SETA &ZOPN+1                                      58700000
&ZOPL(&ZOPN)          SETC ' '                                          58750000
&ZOPO(&ZOPN)          SETC 'DC'                                    @P1C 58800000
                      AIF  ('&XUSERID'(1,1) EQ '(').USERREG        @L3A 58850000
&ZOPV(&ZOPN)          SETC 'A(&XUSERID)'     PROCESS VARIABLE FORM @P3C 58900000
                      AGO  .USERCONT                               @L3A 58950000
.USERREG              ANOP ,                 PROCESS REGISTER FORM @L3A 59000000
&ZOPV(&ZOPN)          SETC 'A(0)'                                  @L3A 59050000
.USERCONT             ANOP ,                                       @L3A 59100000
&ZOPD(&ZOPN)          SETC '++ &ZXUSERID ADDR SIGUSRDP'            @L2C 59150000
.*-------------------------------------------------------------------   59200000
.*** SET UP VERBEXIT DECLARE STATEMENT                             @L2C 59250000
&ZOPN                 SETA &ZOPN+1                                      59300000
&ZOPL(&ZOPN)          SETC ' '                                          59350000
&ZOPO(&ZOPN)          SETC 'DC'                                    @P1C 59400000
                      AIF  ('&XVERBEXIT'(1,1) EQ '(').VERBXREG     @L3A 59450000
&ZOPV(&ZOPN)          SETC 'A(&XVERBEXIT)'   PROCESS VARIABLE FORM @P3C 59500000
                      AGO  .VERBXCONT                              @L3A 59550000
.VERBXREG             ANOP ,                 PROCESS REGISTER FORM @L3A 59600000
&ZOPV(&ZOPN)          SETC 'A(0)'                                  @L3A 59650000
.VERBXCONT            ANOP ,                                       @L3A 59700000
&ZOPD(&ZOPN)          SETC '++ &ZXVERBEXIT ADDR SIGVEXIT'          @L2C 59750000
.*-------------------------------------------------------------------   59800000
.*** SET UP ENVRIN DECLARE STATEMENT                               @L3A 59850000
&ZOPN                 SETA &ZOPN+1                                 @L3A 59900000
&ZOPL(&ZOPN)          SETC ' '                                     @L3A 59950000
&ZOPO(&ZOPN)          SETC 'DC'                                    @L3A 60000000
                      AIF  ('&XENVRIN'(1,1) EQ '(').ENVRIREG       @L3A 60050000
&ZOPV(&ZOPN)          SETC 'A(&XENVRIN)'                           @L3A 60100000
                      AGO  .ENVRICONT                              @L3A 60150000
.ENVRIREG             ANOP ,                 PROCESS REGISTER FORM @L3A 60200000
&ZOPV(&ZOPN)          SETC 'A(0)'                                  @L3A 60250000
.ENVRICONT            ANOP ,                                       @L3A 60300000
&ZOPD(&ZOPN)          SETC '++ &ZXENVRIN ADDR SIGENVRI'            @L3A 60350000
.*-----------------------------------------------------------------@L3A 60400000
.***AM.L10 END OF IRRSGNON LIST PARAMETERS                              60450000
&ZOPN                 SETA &ZOPN+1                                      60500000
&ZOPL(&ZOPN)          SETC '&XMFCTRL.L'                                 60550000
&ZOPO(&ZOPN)          SETC 'EQU'                                        60600000
&ZOPV(&ZOPN)          SETC '*-&ICHL'                                    60650000
&ZOPD(&ZOPN)          SETC '++ LENGTH OF PLIST'                         60700000
.*                                                                      60750000
&ZOPN                 SETA &ZOPN+1                                      60800000
&ZOPL(&ZOPN)          SETC ' '                                          60850000
&ZOPO(&ZOPN)          SETC 'SPACE'                                      60900000
&ZOPV(&ZOPN)          SETC '1'                                          60950000
&ZOPD(&ZOPN)          SETC ' '                                          61000000
.********************************************************************   61050000
.*** FORMATTED CODE SET UP IS COMPLETE FOR MF=L.  SKIP TO          @L2C 61100000
.*** "FORMAT/EXECUTE GENERATED INSTRUCTIONS" SECTION.              @L2A 61150000
.********************************************************************   61200000
                      AIF   ('&XMF' EQ 'L').COMPLSME               @L2C 61250000
.*                                                                      61300000
&ZOPN                 SETA  &ZOPN+1                                     61350000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL.S'                                61400000
&ZOPO(&ZOPN)          SETC  'DC'                                        61450000
&ZOPV(&ZOPN)          SETC  '0H''0'''                                   61500000
&ZOPD(&ZOPN)          SETC  '++ IRRSGNON ARG PARMS'                     61550000
.********************************************************************   61600000
.*** FOR MF=S, WE NOW FALL INTO THE CODE TO BUMP REG1 PAST THE SAF @L3C 61650000
.*** PLIST TO THE BEGINNING OF THE SIGNON PLIST.                   @L3C 61700000
.********************************************************************   61750000
.*                                                                 @L3D 61800000
.PROCMFME             ANOP  ,    UPDATE PARAMETER LIST FOR MF=M/E       61850000
.*                                                                3@L3D 61900000
                      ACTR  10000  SET CONDITIONAL ASSEM. LOOP CTR @L2C 61950000
.***************************************************************** @L3A 62000000
.*** Setting the above loop counter saves the macro from           @L3A 62050000
.*** excessive looping.  The ACTR instruction sets a conditional   @L3A 62100000
.*** counter, and each time the assembler processes an AIF or AGO, @L3A 62150000
.*** it decrements the loop counter by one.                        @L3A 62200000
.***************************************************************** @L3A 62250000
.*                                                                 @L3A 62300000
.*                                                               14@L3D 62350000
.*  Generate an instruction to bump the value in register 1 past   @L3A 62400000
.*  the SAF PLIST.  We do not really use the variable or register  @L3A 62450000
.*  in XMFCTRL.  We assume that RACROUTE has left the address of   @L3A 62500000
.*  the SAF parm list in Reg 1.  We add the appropriate offset to  @L3A 62550000
.*  Reg 1 so it points to the beginning of the SIGNON parm list.   @L3A 62600000
.*  This is done for MF=S/M/E.                                     @L3A 62650000
.*                                                                      62700000
&ZOPN                 SETA  &ZOPN+1                                     62750000
&ZOPL(&ZOPN)          SETC  ' '                                         62800000
&ZOPO(&ZOPN)          SETC  'A'                                         62850000
&ZOPV(&ZOPN)          SETC  '1,36(1)'                                   62900000
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       62950000
.ENDPREP              ANOP  ,   END OF STORAGE AREA PREPARATION    @L2C 63000000
.UPDPLIST             ANOP  ,   UPDATE PARAMETER LIST              @L3A 63050000
.*************************************************************** 12@L2D 63100000
.*** MOVE SPECIFIED PARAMETER VALUES INTO PARAMETER LIST           @L3C 63150000
.***   THIS IS DONE FOR MF=S/M/E FORMS.                            @L3C 63200000
.*** NOTE:  THIS IS THE CODE THAT WILL ENABLE AN ORIGINAL          @L2A 63250000
.***   PARAMETER VALUE (SPECIFIED ON A MF=L REQUEST) TO BE         @L2A 63300000
.***   OVERRIDDEN BY A NEW PARAMETER VALUE SPECIFIED ON A          @L2A 63350000
.***   MF=E/M REQUEST.                                             @L2A 63400000
.***   IT ALSO ALLOWS A REGISTER TO BE STORED ON A MF=S REQUEST.   @L3A 63450000
.********************************************************************   63500000
.*-------------------------------------------------------------------   63550000
.*** IF SPECIFIED, MOVE TYPE INTO THE PARAMETER LIST.              @L2C 63600000
.*-------------------------------------------------------------------   63650000
         AIF   ('&ZXTYPE' EQ '').ENDMETYP      NOT SPECIFIED       @L2C 63700000
.*                                                                 @L2D 63750000
&ZOPN                 SETA  &ZOPN+1                                @D2P 63800000
&ZOPL(&ZOPN)          SETC  ' '                                    @D2P 63850000
&ZOPO(&ZOPN)          SETC  'MVI'                                  @D2A 63900000
&ZOPV(&ZOPN)          SETC  '2(1),&XTYPE'                          @D2A 63950000
&ZOPD(&ZOPN)          SETC  '++ &ZXTYPE SIGTYPE'                   @L2C 64000000
.*                                                                      64050000
.ENDMETYP             ANOP  ,                                      @L2C 64100000
.*-------------------------------------------------------------------   64150000
.*** IF SPECIFIED, MOVE LSTTYPE INTO THE PARAMETER LIST            @L2C 64200000
.*-------------------------------------------------------------------   64250000
         AIF   ('&ZXLSTTYPE' EQ '').ENDMELTP   NOT SPECIFIED       @L2C 64300000
.*                                                                 @L2D 64350000
&ZOPN                 SETA  &ZOPN+1                                     64400000
&ZOPL(&ZOPN)          SETC  ' '                                         64450000
&ZOPO(&ZOPN)          SETC  'MVI'                                  @D2C 64500000
&ZOPV(&ZOPN)          SETC  '3(1),&XLSTTYPE'                       @D2C 64550000
&ZOPD(&ZOPN)          SETC  '++ &ZXLSTTYPE SIGLTYPE'               @L2C 64600000
.*                                                                      64650000
.ENDMELTP             ANOP  ,                                      @L2C 64700000
.*-------------------------------------------------------------------   64750000
.*** IF SPECIFIED, MOVE APPL INTO THE PARAMETER LIST               @L2C 64800000
.*-------------------------------------------------------------------   64850000
         AIF   ('&ZXAPPL' EQ '').ENDMEAPP  NOT SPECIFIED           @L2C 64900000
&ZCLNG                SETC  '&XAPPL'                                    64950000
         AIF   ('&XAPPL'(1,1) EQ '(').REGAPP  IN GPR               @L2C 65000000
         AIF   ('&XAPPL'(1,1) EQ '''').EXPLAPP    EXPLICIT?        @L2C 65050000
.*                                                                      65100000
&ZCGPR                SETC  '0'                                         65150000
.*                                    PROCESS VARIABLE FORM        @L2C 65200000
&ZOPN                 SETA  &ZOPN+1                                     65250000
&ZOPL(&ZOPN)          SETC  ' '                                         65300000
&ZOPO(&ZOPN)          SETC  'LA'                                        65350000
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             65400000
&ZOPD(&ZOPN)          SETC  '++ &ZXAPPL ADDR SIGAPPLP'             @L2C 65450000
.*                                                                      65500000
                      AGO   .STORAPP                                    65550000
.*                                    PROCESS EXPLICIT FORM        @L2C 65600000
.EXPLAPP              ANOP  ,                                      @L2C 65650000
&ZCGPR                SETC  '0'                                    @P4P 65700000
.*                                                                 @L3D 65750000
&ZOPN                 SETA  &ZOPN+1                                @L3A 65800000
&ZOPL(&ZOPN)          SETC  ' '                                    @L3A 65850000
&ZOPO(&ZOPN)          SETC  'B'                                    @L3A 65900000
&ZOPV(&ZOPN)          SETC  '&XMFCTRL.E'                           @L3A 65950000
&ZOPD(&ZOPN)          SETC  '++ BRANCH AROUND DECLARE'             @L3A 66000000
.*                                                                 @L3A 66050000
&ZOPN                 SETA  &ZOPN+1                                @L3A 66100000
&ZOPL(&ZOPN)          SETC  'ICH&SYSNDX'                           @L3A 66150000
&ZOPO(&ZOPN)          SETC  'DC'                                   @L3A 66200000
&ZOPV(&ZOPN)          SETC  'CL8&XAPPL'                            @L3A 66250000
&ZOPD(&ZOPN)          SETC  '++ EXPLICIT APPL DECLARE'             @L3A 66300000
.*                                                                 @L3A 66350000
&ZOPN                 SETA  &ZOPN+1                                @P4P 66400000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL.E'                           @L3C 66450000
&ZOPO(&ZOPN)          SETC  'LA'                                   @P4P 66500000
&ZOPV(&ZOPN)          SETC  '&ZCGPR,ICH&SYSNDX'                    @P4A 66550000
&ZOPD(&ZOPN)          SETC  '++ ADDR OF EXPLICIT APPL DECLARE'     @L3C 66600000
.*                                                                 @P4A 66650000
                      AGO   .STORAPP                               @P4A 66700000
.*                                                                      66750000
.REGAPP               ANOP  ,         PROCESS REGISTER FORM        @L2C 66800000
&ZCGPR   SETC  '&XAPPL'(2,K'&XAPPL-2)                                   66850000
.*                                                                      66900000
.STORAPP              ANOP  ,         STORE NEW APPL               @L2C 66950000
&ZOPN                 SETA  &ZOPN+1                                     67000000
&ZOPL(&ZOPN)          SETC  ' '                                         67050000
&ZOPO(&ZOPN)          SETC  'ST'                                        67100000
&ZOPV(&ZOPN)          SETC  '&ZCGPR,4(,1)'                         @D2C 67150000
&ZOPD(&ZOPN)          SETC  '++ &ZXAPPL ADDR SIGAPPLP'             @L2C 67200000
.*                                                                      67250000
.ENDMEAPP             ANOP  ,         END OF M/E APPL PROCESSING   @L2C 67300000
.*-------------------------------------------------------------------   67350000
.*** IF SPECIFIED, MOVE POE INTO THE PARAMETER LIST                @L2C 67400000
.*-------------------------------------------------------------------   67450000
         AIF   ('&ZXPOE' EQ '').ENDMEPOE   NOT SPECIFIED           @L2C 67500000
&ZCLNG                SETC  '&XPOE'                                     67550000
         AIF   ('&XPOE'(1,1) EQ '(').REGPOE   IN GPR               @L2C 67600000
.*                                                                      67650000
&ZCGPR                SETC  '0'                                         67700000
.*                                    PROCESS VARIABLE FORM        @L2C 67750000
&ZOPN                 SETA  &ZOPN+1                                     67800000
&ZOPL(&ZOPN)          SETC  ' '                                         67850000
&ZOPO(&ZOPN)          SETC  'LA'                                        67900000
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             67950000
&ZOPD(&ZOPN)          SETC  '++ &ZXPOE ADDR SIGPOEP'                    68000000
.*                                                                      68050000
                      AGO   .STORPOE                               @L2C 68100000
.*                                                                      68150000
.REGPOE               ANOP  ,         PROCESS REGISTER FORM        @L2C 68200000
&ZCGPR   SETC  '&XPOE'(2,K'&XPOE-2)                                     68250000
.*                                                                      68300000
.STORPOE              ANOP  ,         STORE NEW POE                @L2C 68350000
&ZOPN                 SETA  &ZOPN+1                                     68400000
&ZOPL(&ZOPN)          SETC  ' '                                         68450000
&ZOPO(&ZOPN)          SETC  'ST'                                        68500000
&ZOPV(&ZOPN)          SETC  '&ZCGPR,8(,1)'                         @D2C 68550000
&ZOPD(&ZOPN)          SETC  '++ &ZXPOE ADDR SIGPOEP'               @L2C 68600000
.*                                                                      68650000
.ENDMEPOE             ANOP  ,         END OF M/E POE PROCESSING    @L2C 68700000
.*-------------------------------------------------------------------   68750000
.*** IF SPECIFIED, MOVE ACEE INTO THE PARAMETER LIST.              @L2C 68800000
.*-------------------------------------------------------------------   68850000
         AIF   ('&ZXACEE' EQ '').ENDMEACE    NOT SPECIFIED         @L2C 68900000
&ZCLNG                SETC  '&XACEE'                                    68950000
         AIF   ('&XACEE'(1,1) EQ '(').REGACE    IN GPR             @L2C 69000000
.*                                                                      69050000
&ZCGPR                SETC  '0'                                         69100000
.*                                    PROCESS VARIABLE FORM        @L2C 69150000
&ZOPN                 SETA  &ZOPN+1                                     69200000
&ZOPL(&ZOPN)          SETC  ' '                                         69250000
&ZOPO(&ZOPN)          SETC  'LA'                                        69300000
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             69350000
&ZOPD(&ZOPN)          SETC  '++ &ZXACEE ADDR SIGACEPP'             @L2C 69400000
.*                                                                      69450000
                      AGO   .STORACE                               @L2C 69500000
.*                                                                      69550000
.REGACE               ANOP  ,         PROCESS REGISTER FORM        @L2C 69600000
&ZCGPR   SETC  '&XACEE'(2,K'&XACEE-2)                                   69650000
.*                                                                      69700000
.STORACE              ANOP  ,         STORE NEW ACEE               @L2C 69750000
&ZOPN                 SETA  &ZOPN+1                                     69800000
&ZOPL(&ZOPN)          SETC  ' '                                         69850000
&ZOPO(&ZOPN)          SETC  'ST'                                        69900000
&ZOPV(&ZOPN)          SETC  '&ZCGPR,12(,1)'                        @D2C 69950000
&ZOPD(&ZOPN)          SETC  '++ &ZXACEE ADDR SIGACEPP'             @L2C 70000000
.*                                                                      70050000
.ENDMEACE             ANOP  ,         END OF M/E ACEE PROCESSING   @L2C 70100000
.*-------------------------------------------------------------------   70150000
.*** IF SPECIFIED, MOVE GROUP INTO THE PARAMETER LIST.             @L2C 70200000
.*-------------------------------------------------------------------   70250000
         AIF   ('&ZXGROUP' EQ '').ENDMEGRP    NOT SPECIFIED        @L2C 70300000
&ZCLNG                SETC  '&XGROUP'                                   70350000
         AIF   ('&XGROUP'(1,1) EQ '(').REGGRP     IN GPR           @L2C 70400000
.*                                                                      70450000
&ZCGPR                SETC  '0'                                         70500000
.*                                    PROCESS VARIABLE FORM        @L2C 70550000
&ZOPN                 SETA  &ZOPN+1                                     70600000
&ZOPL(&ZOPN)          SETC  ' '                                         70650000
&ZOPO(&ZOPN)          SETC  'LA'                                        70700000
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             70750000
&ZOPD(&ZOPN)          SETC  '++ &ZXGROUP ADDR SIGGRUPP'            @L2C 70800000
.*                                                                      70850000
                      AGO   .STORGRP                               @L2C 70900000
.*                                                                      70950000
.REGGRP               ANOP  ,         PROCESS REGISTER FORM        @L2C 71000000
&ZCGPR   SETC  '&XGROUP'(2,K'&XGROUP-2)                                 71050000
.*                                                                      71100000
.STORGRP              ANOP  ,         STORE NEW GROUP              @L2C 71150000
&ZOPN                 SETA  &ZOPN+1                                     71200000
&ZOPL(&ZOPN)          SETC  ' '                                         71250000
&ZOPO(&ZOPN)          SETC  'ST'                                        71300000
&ZOPV(&ZOPN)          SETC  '&ZCGPR,16(,1)'                        @D2C 71350000
&ZOPD(&ZOPN)          SETC  '++ &ZXGROUP ADDR SIGGRUPP'            @L2C 71400000
.*                                                                      71450000
.ENDMEGRP             ANOP  ,         END OF M/E GROUP PROCESSING  @L2C 71500000
.*-------------------------------------------------------------         71550000
.*** IF SPECIFIED, MOVE SECLABL INTO THE PARAMETER LIST.           @L2C 71600000
.*-------------------------------------------------------------------   71650000
         AIF   ('&ZXSECLABL' EQ '').ENDMESEC    NOT SPECIFIED      @L2C 71700000
&ZCLNG                SETC  '&XSECLABL'                                 71750000
         AIF   ('&XSECLABL'(1,1) EQ '(').REGSEC    IN GPR          @L2C 71800000
.*                                                                      71850000
&ZCGPR                SETC  '0'                                         71900000
.*                                    PROCESS VARIABLE FORM        @L2C 71950000
&ZOPN                 SETA  &ZOPN+1                                     72000000
&ZOPL(&ZOPN)          SETC  ' '                                         72050000
&ZOPO(&ZOPN)          SETC  'LA'                                        72100000
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             72150000
&ZOPD(&ZOPN)          SETC  '++ &ZXSECLABL ADDR SIGSECLP'          @L2C 72200000
.*                                                                      72250000
                      AGO   .STORSEC                               @L2C 72300000
.*                                                                      72350000
.REGSEC               ANOP  ,         PROCESS REGISTER FORM        @L2C 72400000
&ZCGPR   SETC  '&XSECLABL'(2,K'&XSECLABL-2)                             72450000
.*                                                                      72500000
.STORSEC              ANOP  ,         STORE NEW SECLABL            @L2C 72550000
&ZOPN                 SETA  &ZOPN+1                                     72600000
&ZOPL(&ZOPN)          SETC  ' '                                         72650000
&ZOPO(&ZOPN)          SETC  'ST'                                        72700000
&ZOPV(&ZOPN)          SETC  '&ZCGPR,20(,1)'                        @D2C 72750000
&ZOPD(&ZOPN)          SETC  '++ &ZXSECLABL ADDR SIGSECLP'          @L2C 72800000
.*                                                                      72850000
.ENDMESEC             ANOP  ,       END OF M/E SECLABL PROCESSING  @L2C 72900000
.*-------------------------------------------------------------------   72950000
.*** IF SPECIFIED, MOVE ENVROUT INTO THE PARAMETER LIST.           @L3C 73000000
.*-------------------------------------------------------------------   73050000
         AIF   ('&ZXENVROUT' EQ '').ENDMEENO   NOT SPECIFIED       @L3C 73100000
&ZCLNG                SETC  '&XENVROUT'                            @L3C 73150000
         AIF   ('&XENVROUT'(1,1) EQ '(').REGENO    IN GPR          @L3C 73200000
.*                                                                      73250000
&ZCGPR                SETC  '0'                                         73300000
.*                                    PROCESS VARIABLE FORM        @L2C 73350000
&ZOPN                 SETA  &ZOPN+1                                     73400000
&ZOPL(&ZOPN)          SETC  ' '                                         73450000
&ZOPO(&ZOPN)          SETC  'LA'                                        73500000
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             73550000
&ZOPD(&ZOPN)          SETC  '++ &ZXENVROUT ADDR SIGENVRO'          @L3C 73600000
.*                                                                      73650000
                      AGO   .STORENO                               @L2C 73700000
.*                                                                      73750000
.REGENO               ANOP  ,         PROCESS REGISTER FORM        @L2C 73800000
&ZCGPR   SETC  '&XENVROUT'(2,K'&XENVROUT-2)                        @L3C 73850000
.*                                                                      73900000
.STORENO              ANOP  ,         STORE NEW ENVROUT            @L3C 73950000
&ZOPN                 SETA  &ZOPN+1                                     74000000
&ZOPL(&ZOPN)          SETC  ' '                                         74050000
&ZOPO(&ZOPN)          SETC  'ST'                                        74100000
&ZOPV(&ZOPN)          SETC  '&ZCGPR,24(,1)'                        @D2C 74150000
&ZOPD(&ZOPN)          SETC  '++ &ZXENVROUT ADDR SIGENVRO'          @L3C 74200000
.*                                                                      74250000
.ENDMEENO             ANOP  ,       END OF M/E ENVROUT PROCESSING  @L3C 74300000
.*-------------------------------------------------------------------   74350000
.*** IF SPECIFIED, MOVE TOKNOUT INTO THE PARAMETER LIST.           @L2C 74400000
.*-------------------------------------------------------------------   74450000
         AIF   ('&ZXTOKNOUT' EQ '').ENDMETKO    NOT SPECIFIED      @L2C 74500000
&ZCLNG                SETC  '&XTOKNOUT'                                 74550000
         AIF   ('&XTOKNOUT'(1,1) EQ '(').REGTKO     IN GPR         @L2C 74600000
.*                                                                      74650000
&ZCGPR                SETC  '0'                                         74700000
.*                                    PROCESS VARIABLE FORM        @L2C 74750000
&ZOPN                 SETA  &ZOPN+1                                     74800000
&ZOPL(&ZOPN)          SETC  ' '                                         74850000
&ZOPO(&ZOPN)          SETC  'LA'                                        74900000
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             74950000
&ZOPD(&ZOPN)          SETC  '++ &ZXTOKNOUT ADDR SIGOTKP'           @L2C 75000000
.*                                                                      75050000
                      AGO   .STORTKO                               @L2C 75100000
.*                                                                      75150000
.REGTKO               ANOP  ,         PROCESS REGISTER FORM        @L2C 75200000
&ZCGPR   SETC  '&XTOKNOUT'(2,K'&XTOKNOUT-2)                             75250000
.*                                                                      75300000
.STORTKO              ANOP  ,         STORE NEW TOKNOUT            @L2C 75350000
&ZOPN                 SETA  &ZOPN+1                                     75400000
&ZOPL(&ZOPN)          SETC  ' '                                         75450000
&ZOPO(&ZOPN)          SETC  'ST'                                        75500000
&ZOPV(&ZOPN)          SETC  '&ZCGPR,28(,1)'                        @D2C 75550000
&ZOPD(&ZOPN)          SETC  '++ &ZXTOKNOUT ADDR SIGOTKP'           @L2C 75600000
.*                                                                      75650000
.ENDMETKO             ANOP  ,       END OF M/E TOKNOUT PROCESSING  @L2C 75700000
.*-------------------------------------------------------------------   75750000
.*** IF SPECIFIED, MOVE USERID INTO THE PARAMETER LIST.            @L2C 75800000
.*-------------------------------------------------------------------   75850000
         AIF   ('&ZXUSERID' EQ '').ENDMEUSR     NOT SPECIFIED      @L2C 75900000
&ZCLNG                SETC  '&XUSERID'                                  75950000
         AIF   ('&XUSERID'(1,1) EQ '(').REGUSR      IN GPR         @L2C 76000000
.*                                                                      76050000
&ZCGPR                SETC  '0'                                         76100000
.*                                    PROCESS VARIABLE FORM        @L2C 76150000
&ZOPN                 SETA  &ZOPN+1                                     76200000
&ZOPL(&ZOPN)          SETC  ' '                                         76250000
&ZOPO(&ZOPN)          SETC  'LA'                                        76300000
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             76350000
&ZOPD(&ZOPN)          SETC  '++ &ZXUSERID ADDR SIGUSRDP'           @L2C 76400000
.*                                                                      76450000
                      AGO   .STORUSR                               @L2C 76500000
.*                                                                      76550000
.REGUSR               ANOP  ,         PROCESS REGISTER FORM        @L2C 76600000
&ZCGPR   SETC  '&XUSERID'(2,K'&XUSERID-2)                               76650000
.*                                                                      76700000
.STORUSR              ANOP  ,         STORE NEW USERID             @L2C 76750000
&ZOPN                 SETA  &ZOPN+1                                     76800000
&ZOPL(&ZOPN)          SETC  ' '                                         76850000
&ZOPO(&ZOPN)          SETC  'ST'                                        76900000
&ZOPV(&ZOPN)          SETC  '&ZCGPR,32(,1)'                        @D2C 76950000
&ZOPD(&ZOPN)          SETC  '++ &ZXUSERID ADDR SIGUSRDP'           @L2C 77000000
.*                                                                      77050000
.ENDMEUSR             ANOP  ,       END OF M/E USERID PROCESSING   @L2C 77100000
.*-------------------------------------------------------------------   77150000
.*** IF SPECIFIED, MOVE VERBEXIT INTO THE PARAMETER LIST.          @L2C 77200000
.*-------------------------------------------------------------------   77250000
         AIF   ('&ZXVERBEXIT' EQ '').ENDMEVXT   NOT SPECIFIED      @L2C 77300000
&ZCLNG                SETC  '&XVERBEXIT'                                77350000
         AIF   ('&XVERBEXIT'(1,1) EQ '(').REGVXT     IN GPR        @L2C 77400000
.*                                                                      77450000
&ZCGPR                SETC  '0'                                         77500000
.*                                    PROCESS VARIABLE FORM        @L2C 77550000
&ZOPN                 SETA  &ZOPN+1                                     77600000
&ZOPL(&ZOPN)          SETC  ' '                                         77650000
&ZOPO(&ZOPN)          SETC  'LA'                                        77700000
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             77750000
&ZOPD(&ZOPN)          SETC  '++ &ZXVERBEXIT ADDR SIGVEXIT'         @L2C 77800000
.*                                                                      77850000
                      AGO   .STORVXT                               @L2C 77900000
.*                                                                      77950000
.REGVXT               ANOP  ,         PROCESS REGISTER FORM        @L2C 78000000
&ZCGPR   SETC  '&XVERBEXIT'(2,K'&XVERBEXIT-2)                           78050000
.*                                                                      78100000
.STORVXT              ANOP  ,         STORE NEW VERBEXIT           @L2C 78150000
&ZOPN                 SETA  &ZOPN+1                                     78200000
&ZOPL(&ZOPN)          SETC  ' '                                         78250000
&ZOPO(&ZOPN)          SETC  'ST'                                        78300000
&ZOPV(&ZOPN)          SETC  '&ZCGPR,36(,1)'                        @D2C 78350000
&ZOPD(&ZOPN)          SETC  '++ &ZXVERBEXIT ADDR SIGVEXIT'         @L2C 78400000
.*                                                                      78450000
.ENDMEVXT             ANOP  ,      END OF M/E VERBEXIT PROCESSING  @L2C 78500000
.*                                                                7@L2D 78550000
.*-------------------------------------------------------------------   78600000
.*** IF SPECIFIED, MOVE ENVRIN INTO THE PARAMETER LIST.            @L3A 78650000
.*-----------------------------------------------------------------@L3A 78700000
         AIF   ('&ZXENVRIN' EQ '').ENDMEENI     NOT SPECIFIED      @L3A 78750000
&ZCLNG                SETC  '&XENVRIN'                             @L3A 78800000
         AIF   ('&XENVRIN'(1,1) EQ '(').REGENI       IN GPR        @L3A 78850000
.*                                                                 @L3A 78900000
&ZCGPR                SETC  '0'                                    @L3A 78950000
.*                                    PROCESS VARIABLE FORM        @L3A 79000000
&ZOPN                 SETA  &ZOPN+1                                @L3A 79050000
&ZOPL(&ZOPN)          SETC  ' '                                    @L3A 79100000
&ZOPO(&ZOPN)          SETC  'LA'                                   @L3A 79150000
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                        @L3A 79200000
&ZOPD(&ZOPN)          SETC  '++ &ZXENVRIN ADDR SIGENVRI'           @L3A 79250000
.*                                                                 @L3A 79300000
                      AGO   .STORENI                               @L3A 79350000
.*                                                                 @L3A 79400000
.REGENI               ANOP  ,         PROCESS REGISTER FORM        @L3A 79450000
&ZCGPR   SETC  '&XENVRIN'(2,K'&XENVRIN-2)                          @L3A 79500000
.*                                                                 @L3A 79550000
.STORENI              ANOP  ,         STORE NEW ENVRIN             @L3A 79600000
&ZOPN                 SETA  &ZOPN+1                                @L3A 79650000
&ZOPL(&ZOPN)          SETC  ' '                                    @L3A 79700000
&ZOPO(&ZOPN)          SETC  'ST'                                   @L3A 79750000
&ZOPV(&ZOPN)          SETC  '&ZCGPR,40(,1)'                        @L3A 79800000
&ZOPD(&ZOPN)          SETC  '++ &ZXENVRIN ADDR SIGENVRI'           @L3A 79850000
.*                                                                 @L3A 79900000
.ENDMEENI             ANOP  ,      END OF M/E ENVRIN PROCESSING    @L3A 79950000
.*                                                                 @L3A 80000000
.*******************************************************************    80050000
.***  END OF MF=S/M/E FORMATTED CODE SET UP                        @L2A 80100000
.*******************************************************************    80150000
.***  COMPLETE MF=L/S/M/E PROCESSING                               @L2A 80200000
.*******************************************************************    80250000
.COMPLSME             ANOP  ,                                      @L2C 80300000
.*******************************************************************    80350000
.***                                                                    80400000
.***  FORMAT/EXECUTE GENERATED INSTRUCTIONS FOR OUTPUT             @L2C 80450000
.***  - SET INDEX COUNTER FOR PARAMETER PROCESSING                 @L2A 80500000
.***  - MOVE LABEL, OPERATION, VALUE AND DESCRIPTION INTO          @L2A 80550000
.***    APPROPRIATE ARRAY VARIABLES                                @L2A 80600000
.***  - LOOP UNTIL THE OPERATION FOR EACH PARAMETER IS EXECUTED    @L2A 80650000
.*******************************************************************    80700000
                      ACTR  10000  SET CONDITIONAL ASSEM LOOP CTR  @L2C 80750000
.***************************************************************** @L3A 80800000
.*** Setting the above loop counter saves the macro from           @L3A 80850000
.*** excessive looping.  The ACTR instruction sets a conditional   @L3A 80900000
.*** counter, and each time the assembler processes an AIF or AGO, @L3A 80950000
.*** it decrements the loop counter by one.                        @L3A 81000000
.***************************************************************** @L3A 81050000
.*                                                                 @L3A 81100000
.*                                                                      81150000
                      LCLA  &ZLC           COLUMN POSITION              81200000
                      LCLA  &ZOPX          LIST TABLE INDEX             81250000
                      LCLC  &ZLL           LABEL                        81300000
                      LCLC  &ZLOP          OPERATION                    81350000
                      LCLC  &ZLV           VALUE                        81400000
                      LCLC  &ZLD           DESCRIPTION                  81450000
.*                                                                      81500000
&ZOPX                 SETA  1            INITIALIZE INDEX COUNTER  @L2C 81550000
.BEGLOOP              AIF   (&ZOPX GT &ZOPN).ENDLOOP  B IF DONE    @L2C 81600000
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              81650000
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              81700000
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              81750000
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              81800000
                      AIF   (K'&ZLD LE 0).NODESCR  NO DESCRIPTION  @L2C 81850000
&ZLC                  SETA  35             COMMENT COLUMN               81900000
                      AIF   ('&ZLD'(1,1) NE '*').CMTLOOP           @L2C 81950000
&ZLC                  SETA  33             COMMMENT COLUMN              82000000
.CMTLOOP              AIF   (K'&ZLV GE &ZLC-16-1).ENDCMT           @L2C 82050000
&ZLV                  SETC  '&ZLV'.' '                                  82100000
                      AGO   .CMTLOOP                               @L2C 82150000
.*                                                                      82200000
.ENDCMT               ANOP  ,      END OF COMMENT PROCESSING       @L2C 82250000
&ZLV                  SETC  '&ZLV'.' '                                  82300000
.NODESCR              ANOP  ,      NO DESCRIPTION                  @L2C 82350000
&ZLV                  SETC  '&ZLV'.'&ZLD'                               82400000
.*                                                                      82450000
&ZLL     &ZLOP &ZLV                                                     82500000
.*                                                                      82550000
&ZOPX                 SETA  &ZOPX+1     NEXT STRUCTURE                  82600000
                      AGO   .BEGLOOP    CONTINUE LOOPING UNTIL ALL      82650000
.*                                        PARAMETERS ARE PROCESSED      82700000
.ENDLOOP              ANOP  ,                                     4@L2D 82750000
.*************************************************************** 30@L2D 82800000
.***  END OF INSTRUCTION PROCESSING                                @L2C 82850000
.*******************************************************************    82900000
.*******************************************************************    82950000
.ERTN002              ANOP  ,  NOT CALLED BY RACROUTE - TERMINATE  @L2A 83000000
.*******************************************************************    83050000
&ZIRRSGNON            SETC  'YES'          SET IRRSGNON USED            83100000
         POP   PRINT                                                    83150000
*                                            IRRSGNON-0                 83200000
         SPACE 1                                                   @L2D 83250000
              AGO     .FINISH                                      @L2C 83300000
.*******************************************************************    83350000
.***                                                                    83400000
.***                     MNOTES                                    @L2A 83450000
.***                                                                    83500000
.*************************************************************** 12@L2D 83550000
.EMSG001      MNOTE 8,'*** REGISTER FORM OF ADDRESS PARAMETER NOT VALIDX83600000
                WITH LIST FORM.***'                                @L2C 83650000
              AGO   .ERTN001                                       @P3A 83700000
.EMSG002      MNOTE 8,'REQUEST NOT GENERATED VIA SAF RACROUTE'     @L2C 83750000
              AGO   .ERTN002              RETURN TO CALLER         @L2C 83800000
.EMSG003      MNOTE 8,'TYPE=&TYPE  "TYPE" CAN HAVE ONLY 1 ARGUMENT.'   *83850000
                                                                   @L2C 83900000
              AGO   .ERTN003                                       @L2A 83950000
.EMSG004      MNOTE 8,'TYPE=&TYPE  ARGUMENT 1 IS AN UNKNOWN KEYWORD.   *84000000
               VALID KEYWORD CHOICE(S) ARE:  "LISTCRT", "LISTDEL", "QSI*84050000
               GNON", "SIGNIN", OR "SIGNOFF".'                     @L2C 84100000
              AGO   .ERTN004                                       @L2A 84150000
.EMSG005      MNOTE 8,'THE "TYPE" KEY AND ITS ARGUMENT ARE REQUIRED WHE*84200000
               N MF=S.  VALID KEYWORD CHOICE(S) ARE:  "LISTCRT", "LISTD*84250000
               EL", "QSIGNON", "SIGNIN" OR "SIGNOFF".'             @L2C 84300000
              AGO   .ERTN005                                       @L2A 84350000
.EMSG006      MNOTE 8,'APPL=&APPL  "APPL" CAN HAVE ONLY 1 ARGUMENT.'   *84400000
                                                                   @L2C 84450000
              AGO   .ERTN006                                       @L2A 84500000
.EMSG007      MNOTE 8,'"APPL" KEY AND ITS ARGUMENT ARE REQUIRED WHEN MF*84550000
               =S.'                                                @L2C 84600000
              AGO   .ERTN007                                      2@P7D 84650000
.EMSG009      MNOTE 8'POE=&POE  "POE" CAN HAVE ONLY 1 ARGUMENT.'   @L2C 84700000
              AGO   .ERTN009                                       @L2A 84750000
.EMSG010      MNOTE 8,'"POE" KEY AND ITS ARGUMENT ARE REQUIRED WHEN MF=*84800000
               S.'                                                 @L2C 84850000
              AGO   .ERTN010                                      2@P7D 84900000
.EMSG012      MNOTE 8,'ACEE=&ACEE  "ACEE" CAN HAVE ONLY 1 ARGUMENT.'   *84950000
                                                                   @L2C 85000000
              AGO   .ERTN012                                      2@P7D 85050000
.EMSG014      MNOTE 8,'GROUP=&GROUP  "GROUP" CAN HAVE ONLY 1 ARGUMENT.'*85100000
                                                                   @L2C 85150000
              AGO   .ERTN014                                      2@P7D 85200000
.EMSG016      MNOTE 8,'LSTTYPE=&LSTTYPE  "LSTTYPE" CAN HAVE ONLY 1 ARGU*85250000
               MENT.'                                              @L2C 85300000
              AGO   .ERTN016                                       @L2A 85350000
.EMSG017      MNOTE 8,'LSTTYPE=&LSTTYPE  ARGUMENT 1 IS AN UNKNOWN KEYWO*85400000
               RD.  VALID KEYWORD CHOICE(S) ARE:  "ONFROM".'       @L2C 85450000
              AGO   .ERTN017                                       @L2A 85500000
.EMSG018      MNOTE 8,'SECLABL=&SECLABL  "SECLABL" CAN HAVE ONLY 1 ARGU*85550000
               MENT.'                                              @L2C 85600000
              AGO   .ERTN018                                      2@P7D 85650000
.EMSG020      MNOTE 8,'ENVROUT=&ENVROUT  "ENVROUT" CAN HAVE ONLY 1 ARGU*85700000
               MENT.'                                              @L3C 85750000
              AGO   .ERTN020                                      2@P7D 85800000
.EMSG022      MNOTE 8,'TOKNOUT=&TOKNOUT  "TOKNOUT" CAN HAVE ONLY 1 ARGU*85850000
               MENT.'                                              @L2C 85900000
              AGO   .ERTN022                                      2@P7D 85950000
.EMSG024      MNOTE 8,'USERID=&USERID  "USERID" CAN HAVE ONLY 1 ARGUMEN*86000000
               T.'                                                 @L2C 86050000
              AGO   .ERTN024                                       @L2A 86100000
.EMSG025      MNOTE 8,'USERID=&USERID  "USERID" KEY AND ITS ARGUMENT AR*86150000
               E REQUIRED WHEN MF=S AND TYPE HAS BEEN SPECIFIED AS QSIG*86200000
               NON, SIGNIN OR SIGNOFF.'                            @L2C 86250000
              AGO   .ERTN025                                      2@P7D 86300000
.EMSG027      MNOTE 8,'VERBEXIT=&VERBEXIT  "VERBEXIT" CAN HAVE ONLY 1 A*86350000
               RGUMENT.'                                           @L2C 86400000
              AGO   .ERTN027                                      2@P7D 86450000
.EMSG028      MNOTE 8,'ENVRIN=&ENVRIN  "ENVRIN" CAN HAVE ONLY 1 ARGUMEN*86500000
               T.'                                                 @L3A 86550000
              AGO   .ERTN028                                      2@P7D 86600000
.EMSG029      MNOTE 4,'"ACEE" IS AN EXTRANEOUS PARAMETER WHEN TYPE=LIST*86650000
               CRT, LISTDEL, SIGNIN OR SIGNOFF.  IT IS IGNORED.'   @L2A 86700000
              AGO   .ERTN029                                       @L2A 86750000
.EMSG030      MNOTE 4,'"GROUP" IS AN EXTRANEOUS PARAMETER WHEN TYPE=LIS*86800000
               TCRT OR LISTDEL.  IT IS IGNORED.'                   @L2A 86850000
              AGO   .ERTN030                                       @L2A 86900000
.EMSG031      MNOTE 4,'"SECLABL" IS AN EXTRANEOUS PARAMETER WHEN TYPE=L*86950000
               ISTCRT OR LISTDEL.  IT IS IGNORED.'                 @L2A 87000000
              AGO   .ERTN031                                       @L2A 87050000
.EMSG032      MNOTE 4,'"ENVROUT" IS AN EXTRANEOUS PARAMETER WHEN TYPE=L*87100000
               ISTCRT, LISTDEL, SIGNIN OR SIGNOFF. IT IS IGNORED.' @L3C 87150000
              AGO   .ERTN032                                       @L2A 87200000
.EMSG033      MNOTE 4,'"TOKNOUT" IS AN EXTRANEOUS PARAMETER WHEN TYPE=L*87250000
               ISTCRT, LISTDEL, SIGNIN OR SIGNOFF. IT IS IGNORED.' @L2A 87300000
              AGO   .ERTN033                                       @L2A 87350000
.EMSG034      MNOTE 4,'"USERID" IS AN EXTRANEOUS PARAMETER WHEN TYPE=LI*87400000
               STCRT OR LISTDEL.  IT IS IGNORED.'                  @L2A 87450000
              AGO   .ERTN034                                       @L2A 87500000
.EMSG035      MNOTE 4,'"VERBEXIT" IS AN EXTRANEOUS PARAMETER WHEN TYPE=*87550000
               LISTDEL OR QSIGNON.  IT IS IGNORED.'                @L2A 87600000
              AGO   .ERTN035                                       @L2A 87650000
.EMSG036      MNOTE 4,'"ENVRIN" IS AN EXTRANEOUS PARAMETER WHEN TYPE=LI*87700000
               STCRT, LISTDEL, SIGNOFF OR QSIGNON. IT IS IGNORED.' @L3A 87750000
              AGO   .ERTN036                                       @L3A 87800000
.EMSG037      MNOTE 4,'"LSTTYPE" WAS NOT SPECIFIED.  A DEFAULT OF "ONFR*87850000
               OM" HAS BEEN SET.'                                  @L2A 87900000
              AGO   .ERTN037                                       @L2A 87950000
.EMSG038      MNOTE 8,'APPL=&EXPLAPPL  THE EXPLICITLY DEFINED "APPLNAME*88000000
               " IS GREATER THAN 8 CHARACTERS IN LENGTH.'          @P6A 88050000
              AGO   .ERTN038                                       @P6A 88100000
.*******************************************************************    88150000
.***  END OF MNOTES                                                @L2A 88200000
.*******************************************************************    88250000
.FINISH  ANOP                                                           88300000
         MEND                                                           88350000
.*********************************************************************/ 88400000
