         MACRO                                                          00001000
         SGTINF                                                         00002000
         GBLA  &NPART                   NUMBER OF STAT. PART.  @D51IDHA 00003000
         GBLA  &AG1                     NUMBER OF PUBS         @D51ODGL 00004000
         GBLB  &BGTT                    TT SUPPORT             @D14BDFR 00005000
         GBLB  &BGDEBUG                 DEBUG SUPPORT          @D37ZDWK 00006000
         GBLB  &SGTINF                  FOR SUPPRINT           @D37ZDWK 00007000
         GBLB  &VSE250                  RELEASE ID             @D25ADAP 00008000
         GBLB  &VSE260                  RELEASE ID             @D26ADAP 00009000
         GBLB  &VSE270                  RELEASE ID             @DY45988 00010000
         GBLB  &VSE280                  RELEASE ID             @D28ADAP 00011000
         TITLE 'VSE SUPERVISOR     SGTINF    SVC107 SERVICE ROUTINES  ' 00012000
         AIF   (NOT &SGTINF).NPRT010                           @D6X..RP 00013000
         PRINT GEN                                             @D37ZDWK 00014000
.NPRT010 ANOP                                                  @D37ZDWK 00015000
***************************************************************         00016000
*                                                             *@D51MDGL 00017000
.*       IBM DISK OPERATING SYSTEM                            *@D51MDGL 00018000
*        SUPERVISOR - SGTINF - 5686-CF7-06                    *@D51MDGL 00019000
.*                                                            *@D51MDGL 00020000
*        LICENSED MATERIALS - PROPERTY OF IBM                 *@D51MDGL 00021000
*        THIS MACRO IS "RESTRICTED MATERIALS OF IBM"          *@D51MDGL 00022000
*        5686-CF7 (C) COPYRIGHT IBM CORP. 1977, 2005          *@D25IDAP 00023490
*        SEE COPYRIGHT INSTRUCTIONS                           *@D51MDGL 00024000
*                                                             *@D51MDGL 00025000
***************************************************************@D51MDGL 00026000
*                                                                       00027000
         SPACE 1                                                        00028000
***** START OF SPECIFICATIONS ***************************************** 00029000
*                                                                       00030000
.*01* MODULE-TYPE = SUPERVISOR GENERATION MACRO                         00031000
.*                                                                      00032000
.*01* DESCRIPTIVE NAME = LOGICAL TASKING INTERFACE                      00033000
.*                       INTERFACE TO ALL FAST PATH SERVICES            00034000
.*  STATUS           =  FIRST RELEASE 35.0                              00035000
*   FUNCTION         =  THIS MACRO CONTAINS THE SERVICE ROUTINES        00036000
*                       FOR SVC 107 GENERATED BY THE COMMUNICATION      00037000
*                       MACROS :                                        00038000
*                       TREADY -->  READY OR CANCEL A TASK/PARTITION    00039000
*                       GETFLD -->  RETRIEVE SUPERVISOR FIELD  @D149DFG 00040000
*                       MODFLD -->  MODIFY SUPERVISOR FIELD    @D149DFG 00041000
*                       TSTOP  -->  DEACTIVATE PARTITION OR TASK        00042000
*                       RLOCK  -->  OBTAIN/WAIT SPEC.RESOURCE  @D379DWK 00043000
*                       SRCHFLD-->  FIND PUB OF SPECIFIED DEV. @D149DWK 00044000
*                       DEVUSE -->  SET USAGE COUNTER AND      @D149DWK 00045000
*                                   OWNERSHIP OF SPEC.DEVICE   @D149DWK 00046000
*                       DEVREL -->  RELEASE OWNERSHIP AND      @D149DWK 00047000
*                                   DECREMENT USAGE COUNTER    @D149DWK 00048000
*                       SENTER -->  ENTER SUBSYSTEM            @D149DFG 00049000
*                       SLEAVE -->  LEAVE SUBSYSTEM            @D149DFG 00050000
*                       VIOPOINT->  POINT TO VIO WORK BLOCK    @D149DWK 00051000
*                       VALID --->  VALIDATE ADDRESS RANGE     @D149DFG 00052000
*                                                                       00053000
*   REGISTER CONVENT.=  REGISTER R0 INPUT REGISTER                      00054000
*                       REGISTER R1 INPUT/OUTPUT AND WORK REGISTER      00055000
*                       REGISTER R2 INPUT REGISTER FOR VALID   @D149DFG 00056000
.*                                  PIB POINTER                @D149DFG 00057000
.*                      REGISTER R3 WORK REGISTER              @D149DWK 00058000
.*                      REGISTER R4 PUBX POINTER               @D149DWK 00059000
.*                      REGISTER R5 PCB POINTER                @D37CDFG 00060000
*                       REGISTER R6 DISPATCHER ADDRESS                  00061000
.*                      REGISTER R7 WORK REGISTER              @D149DWK 00062000
.*                      REGISTER R8 TIB POINTER                         00063000
*                       REGISTER R9 LINK AND WORK REGISTER              00064000
*                       REGISTER RA TCB POINTER                         00065000
*                       REGISTER RB WORK REGISTER                       00066000
.*                      REGISTER RC BASE REGISTER                       00067000
*                       REGISTER RD 2.BASE REGISTER            @D149DFG 00068000
.*                      REGISTER RE INPUT REGISTER             @D149DWK 00069000
*                       REGISTER RF FUNCTION AND RETURN CODE            00070000
*                                                                       00071000
.*  PATCH LABEL      =  NONE                                            00072000
.*  MACRO TYPE       =  ASSEMBLER                                       00073000
.*  PROCESSOR        =  ASSEMBLER                                       00074000
.*  ENTRY POINT      =  SGTINF                                          00075000
.*  PURPOSE          =  SEE FUNCTION                                    00076000
.*  CALLER           =  SVC 107 VIA SVC INTERRUPT HANDLER               00077000
*                                                                       00078000
*   INPUT            =  REGISTER 0  CONTAINS THE TIK/PIK OR ZERO        00079000
*                                   OR SYSLOG ID               @D31LDMZ 00080000
*                       REGISTER 1  USED AS PARAMETER REGISTER          00081000
*                                   CANCEL CODE FOR TREADY REQUEST      00082000
*                                   NEW VALUE FOR MODFLD REQUEST        00083000
*                       REGISTER 2  HIGH ADDRESS FOR VALID     @D149DFG 00084000
*                       REGISTER 14 CONTINUATION ADDRESS       @D149DWK 00085000
*                       REGISTER 15 CONTAINS THE FUNTION CODE.          00086000
*                                                                       00087000
.*     POSSIBLE FUNCTION CODES (ROUTINE IDENTIFIERS) IN                 00088000
.*     REGISTER 15 ARE :                                                00089000
.*                                                                      00090000
.*   ---------------------------------------------------------------    00091000
.*   | MACRO  | COND/FIELD | DEC/HEX | CLASS | AUTHORISATION       |    00092000
.*   ---------------------------------------------------------------    00093000
.*   | TREADY | LQ         | 00 | 00 |   A   | SEC                 |    00094000
.*   | TREADY | NO         | 01 | 01 |   A   | IPL+SEC             |    00095000
.*   | TREADY | IO         | 02 | 02 |   A   | KEY 0               |    00096000
.*   | TREADY | VTAM       | 03 | 03 |   A   | VTAM                |    00097000
.*   | TREADY | CANCEL     | 04 | 04 |   A   | VTAM+POW+ICCF       |    00098000
.*   | TREADY | VCANCEL    | 05 | 05 |   A   | VTAM                |    00099000
.*   | GETFLD | SAVAR      | 06 | 06 |   B   | CURR.TID            |    00100000
.*   | GETFLD | PPSAVAR    | 07 | 07 |   B   | CURR.TID            |    00101000
.*   | GETFLD | LTAPTR     | 08 | 08 |   A   | ALL                 |    00102000
.*   | GETFLD | CNCLCODE   | 09 | 09 |   A   | ALL                 |    00103000
.*   | GETFLD | PIK        | 10 | 0A |   A   | ALL                 |    00104000
.*   | GETFLD | MAINTASK   | 11 | 0B |   A   | ALL                 |    00105000
.*   | GETFLD | VTAMOPEN   | 12 | 0C |   A   | VTAM                |    00106000
.*   | GETFLD | VTAMDISP   | 13 | 0D |   A   | VTAM                |    00107000
.*   | GETFLD | AOTPTR     | 14 | 0E |   A   | VTAM                |    00108000
.*   | MODFLD | SYSRESW    | 15 | 0F |   A   | KEY 0               |    00109000
.*   | MODFLD | CNCLCODE   | 16 | 10 |   A   | VTAM+POW+EOJ        |    00110000
.*   | MODFLD | VTAMOPEN   | 17 | 11 |   A   | VTAM                |    00111000
.*   | MODFLD | VTAMDISP   | 18 | 12 |   A   | VTAM                |    00112000
.*   | TREADY | START PART | 19 | 13 |   A   | JC+POW              |    00113000
.*   | TREADY | OC PART    | 20 | 14 |   A   | JC+POW              |    00114000
.*   | TREADY | CANCEL PART| 21 | 15 |   A   | POW                 |    00115000
.*   | TSTOP  | SYSBND,NO  | 22 | 16 |   C   | SYSTEM              |    00116000
.*   | TSTOP  | SYSBND,YES | 23 | 17 |   A   | SYSTEM              |    00117000
.*   | TSTOP  | STOP       | 24 | 18 |   C   | JC                  |    00118000
.*   | TSTOP  | UNBATCH    | 25 | 19 |   C   | JC                  |    00119000
.*   | GETFLD | CNCLALL    | 26 | 1A |   B   | TERM                |    00120000
.*   | GETFLD | ICCFPP     | 27 | 1B |   A   | ICCF                |    00121000
.*   | MODFLD | SAVAR      | 28 | 1C |   B   | IPL+EOJ             |    00122000
.*   | MODFLD | CNCLALL    | 29 | 1D |   B   | TERM                |    00123000
.*   | GETFLD | SYSRESW    | 30 | 1E |   B   | ALL                 |    00124000
.*   | GETFLD | ICCFRO     | 31 | 1F |   A   | ICCF                |    00125000
.*   | GETFLD | ACLOSE     | 32 | 20 |   B   | CURR.TID            |    00126000
.*   | GETFLD | STATUS     | 33 | 21 |   A   | ICCF                |    00127000
.*   | MODFLD | ICCFPP     | 34 | 22 |   A   | ICCF                |    00128000
.*   | MODFLD | ICCFRO     | 35 | 23 |   A   | ICCF                |    00129000
.*   | MODFLD | ACLOSE     | 36 | 24 |   B   | EOJ                 |    00130000
.*   | GETFLD | NSUB       | 37 | 25 |   A   | ALL                 |    00131000
.*   | GETFLD | CPUTIME    | 38 | 26 |   A   |                     |    00132000
.*   | MODFLD | VSAMOPEN   | 39 | 27 |   B   | OPEN/CLOSE          |    00133000
.*   | GETFLD | ABINPR     | 40 | 28 |   B   | ICCF                |    00134000
.*   | TREADY | ICCF       | 41 | 29 |   A   | ICCF                |    00135000
.*   | GETFLD | LTAACT     | 42 | 2A |   A   | SPEC. TASK          |    00136000
.*   | GETFLD | OPENSVA    | 43 | 2B |   B   | CURRENT TASK        |    00137000
.*   | MODFLD | OPENSVA    | 44 | 2C |   B   | CURRENT TASK        |    00138000
.*   | MODFLD | ICCFSVC    | 45 | 2D |   B   | ICCF                |    00139000
.*   | GETFLD | PAGEIN     | 46 | 2E |   A   | ALL                 |    00140000
.*   | GETFLD | PAGEOUT    | 47 | 2F |   A   | ALL                 |    00141000
.*   | GETFLD | TERMACT    | 48 | 30 |   A   | ICCF                |    00142000
.*   | GETFLD | EOTACT     | 49 | 31 |   A   | ICCF                |    00143000
.*   | GETFLD | PCEXIT     | 50 | 32 |   B   | CURRENT TASK        |    00144000
.*   | GETFLD | ITEXIT     | 51 | 33 |   B   | CURRENT TASK        |    00145000
.*   | GETFLD | CNCLCOD2   | 52 | 34 |   A   | ALL                 |    00146000
.*   | GETFLD | OCEXIT     | 53 | 35 |   B   | CURRENT TASK        |    00147000
.*   |        |            | 54 | 38 |       | UNUSED              |    00148000
.*   |        |            | 55 | 38 |       | UNUSED              |    00149000
.*   |        |            | 56 | 38 |       | UNUSED              |    00150000
.*   | GETFLD | DLIBLK     | 57 | 39 |   A   | CURRENT TASK        |    00151000
.*   | MODFLD | DLIBLK     | 58 | 3A |   A   | CURRENT TASK        |    00152000
.*   | GETFLD | IPANCH     | 59 | 3B |   A   | CURRENT TASK        |    00153000
.*   | MODFLD | IPANCH     | 60 | 3C |   A   | CURRENT TASK        |    00154000
.*   | GETFLD | EXABPRMS   | 61 | 3D |   A   | CURRENT TASK        |    00155000
.*   | GETFLD | BALANCE    | 62 | 3E |   A   | RAS,ERP             |    00156000
.*   | GETFLD | SSFLAGS    | 63 | 3F |   A   | SYSTEM              |    00157000
.*   | GETFLD | COMRGPTR   | 64 | 40 |   A   | ALL                 |    00158000
.*   | GETFLD | ABEXIT     | 65 | 41 |   B   | CURRENT TASK        |    00159000
.*   | SRCHFLD| CHNUNIT    | 66 | 42 |   A   | ALL                 |    00160000
.*   | SRCHFLD| DEVTYPE    | 67 | 43 |   A   | ALL                 |    00161000
.*   | DEVUSE | PU         | 68 | 44 |   A   | ALL                 |    00162000
.*   | DEVREL | PU         | 69 | 45 |   A   | ALL                 |    00163000
.*   | SENTER | LIBR       | 70 | 46 |   A   | ALL                 |    00164000
.*   | SLEAVE |            | 71 | 47 |   B   | SYSTEM              |    00165000
.*   |VIOPOINT|            | 72 | 48 |   B   | ALL                 |    00166000
.*   | GETFLD | USECNT     | 73 | 49 |   A   | ALL                 |    00167000
.*   | GETFLD | PUSECNT    | 74 | 4A |   A   | ALL                 |    00168000
.*   | GETFLD | MOUNTFLG   | 75 | 4B |   A   | ALL                 |    00169000
.*   | MODFLD | MOUNTFLG   | 76 | 4C |   A   | JCL                 |    00170000
.*   | TREADY | POWER      | 77 | 4D |   A   | POWER               |    00171000
.*   | GETFLD | PUBXPTR    | 78 | 4E |   A   | ALL                 |    00172000
.*   | GETFLD | PCBPTR     | 79 | 4F |   A   | ALL                 |    00173000
.*   | GETFLD | TCBPTR     | 80 | 50 |   A   | ALL                 |    00174000
.*   | GETFLD | OWNER      | 81 | 51 |   A   | ALL                 |    00175000
.*   | GETFLD | MSECS      | 82 | 52 |   A   | SYSTEM + JC         |    00176000
.*   | MODFLD | MSECS      | 83 | 53 |   A   | SYSTEM + JC         |    00177000
.*   | VALID  | READ       | 84 | 54 |   A   | ALL                 |    00178000
.*   | VALID  | WRITE      | 85 | 55 |   A   | ALL                 |    00179000
.*   | GETFLD | VSAMOPEN   | 86 | 56 |   B   | ALL                 |    00180000
.*   | MODFLD | PERBIT     | 87 | 57 |   B   | SDAID               |    00181000
.*   | GETFLD | PU LU=     | 88 | 58 |   A   | ALL                 |    00182000
.*   | GETJA  | PART       | 89 | 59 |   C   | ALL                 |    00183000
.*   | MODFLD | RUNMODE    | 90 | 5A |   A   | SYSTEM              |    00184000
.*   | MODFLD | SASCOPE    | 91 | 5B |   A   | SYSTEM              |    00185000
.*   | MODFLD | PASCOPE    | 92 | 5C |   A   | SYSTEM+PWR+OCCF     |    00186000
.*   | RLOCK  | ALLOCR     | 93 | 5D |   A   | SYSTEM              |    00187000
.*   | MODFLD | DB2        | 94 | 5E |   A   | DB2                 |    00188000
.*   | TREADY | ALLOCR     | 95 | 5F |   A   | SYSTEM              |    00189000
.*   |        |            | 96 | 60 |       | UNUSED              |    00190000
.*   | MODFLD | LIBRSERV   | 97 | 61 |   A   | KEY 0               |    00191000
.*   | GETFLD | DEVPROP LU | 98 | 62 |   A   |                     |    00192000
.*   | GETFLD | DEVPROP PU | 99 | 63 |   A   |                     |    00193000
.*   | GETFLD | EOTRTN     |100 | 64 |   A   | ALL                 |    00194000
.*   | GETFLD | MODE    LU |101 | 65 |   A   | ALL                 |    00195000
.*   | GETFLD | MODE    PU |102 | 66 |   A   | ALL                 |    00196000
.*   | GETFLD | PIK  LOGID |103 | 67 |   A   | ALL                 |    00197000
.*   | GETFLD | PSTAT      |104 | 68 |   A   | ALL                 |    00198000
.*   | GETFLD | IVMCB      |105 | 69 |   A   | ALL                 |    00199000
.*   | MODFLD | RIPLAUTH   |106 | 6A |   A   | KEY 0               |    00200000
.*   | TREADY | OCANCEL    |107 | 6B |   A   | OCCF SUBTASKS       |    00201000
.*   | GETFLD | OSAE       |108 | 6C |       | ALL                 |    00202000
.*   |        |            |109 | 6D |       | UNUSED              |    00203000
.*   |        |            |110 | 6E |       | UNUSED              |    00204000
.*   |        |            |111 | 6F |       | UNUSED              |    00205000
.*   |        |            |112 | 70 |       | UNUSED              |    00206000
.*   |        |            |113 | 71 |       | UNUSED              |    00207000
.*   | MODFLD | SCSICUU    |114 | 72 |   A   | SA-ENV ONLY         |    00208000
.*   | GETFLD | COMRGPTR LG|115 | 73 |   A   |                     |    00209000
.*   | GETFLD | PSTAT LOGID|116 | 74 |   A   |                     |    00210000
.*   | GETFLD | DIBPTR PART|117 | 75 |   A   | ALL                 |    00211000
.*   | GETFLD | DIBPTR LGID|118 | 76 |   A   | ALL                 |    00212000
.*   | GETFLD | LUBTAB PART|119 | 77 |   A   |                     |    00213000
.*   | GETFLD | LUBTAB LGID|120 | 78 |   A   |                     |    00214000
.*   | GETFLD | LUB    PART|121 | 79 |   A   |                     |    00215000
.*   | GETFLD | LUB   LOGID|122 | 7A |   A   |                     |    00216000
.*   | GETFLD | FREELUB PRT|123 | 7B |   A   |                     |    00217000
.*   | GETFLD | FREELUB LOG|124 | 7C |   A   |                     |    00218000
.*   | GETFLD | NPART      |125 | 7D |   A   |                     |    00219000
.*   | GETFLD | PUB    PART|126 | 7E |   A   |                     |    00220000
.*   | GETFLD | PUB   LOGID|127 | 7F |   A   |                     |    00221000
.*   | GETFLD | PCEATAB    |128 | 80 |   A   |                     |    00222000
.*   | GETFLD | PCEPTR PART|129 | 81 |   A   |                     |    00223000
.*   | GETFLD | PCEPTR LOGD|130 | 82 |   A   |                     |    00224000
.*   | GETFLD | PIB    PART|131 | 83 |   A   |                     |    00225000
.*   | GETFLD | PIB   LOGID|132 | 84 |   A   |                     |    00226000
.*   | GETFLD | LOGID      |133 | 85 |   A   |                     |    00227000
.*   | GETFLD | STORKEY PRT|134 | 86 |   A   |                     |    00228000
.*   | GETFLD | STORKEY LOG|135 | 87 |   A   |                     |    00229000
.*   | GETFLD | PUBPTR     |136 | 88 |   A   |                     |    00230000
.*   | GETFLD | PUB2       |137 | 89 |   A   |                     |    00231000
.*   | GETFLD | NUMLUB PART|138 | 8A |   A   |                     |    00232000
.*   | GETFLD | NUMLUB LGID|139 | 8B |   A   |                     |    00233000
.*   | GETFLD | CLASSTAB   |140 | 8C |   A   | KEY 0               |    00234000
.*   | GETFLD | IPLTIME    |141 | 8D |   A   |                     |    00235000
.*   | GETFLD | POWJOB PART|142 | 8E |   A   |                     |    00236000
.*   | GETFLD | POWJOB LGID|143 | 8F |   A   |                     |    00237000
.*   | GETFLD | POWSYS     |144 | 90 |   A   |                     |    00238000
.*   | GETFLD | ALET   PART|145 | 91 |   A   | PWR+OCCF+VTAM+CICS  |    00239000
.*   | MODFLD | COPYOWN    |146 | 92 |   A   | PWR/JOB CONTR.      |    00240000
.*   | MODFLD | RESETOWN   |147 | 93 |   A   | PWR/JOB CONTR.      |    00241000
.*   | MODFLD | VSPTFLG    |148 | 94 |   A   | VSPT (EXPLORE)      |    00242000
.*   | MODFLD | SASCOPE1   |149 | 95 |   A   | AR/SUPERVISOR       |    00243000
.*   | MODFLD | PASCOPE1   |150 | 96 |   A   | AR/SUPERVISOR       |    00244000
.*   | GETFLD | LOGBAL     |151 | 97 |   A   | BAM,ASSEMBLER       |    00245000
.*   | GETFLD | ABEXIT1    |152 | 98 |   A   |                     |    00246000
.*   | GETFLD | PCEXIT1    |153 | 99 |   A   |                     |    00247000
.*   | GETFLD | OCEXIT1    |154 | 9A |   A   |                     |    00248000
.*   | GETFLD | ITEXIT1    |155 | 9B |   A   |                     |    00249000
.*   | SENTER | ALET       |156 | 9C |   B   | ALL                 |    00250000
.*   | SLEAVE | ALET       |157 | 9D |   B   |                     |    00251000
.*   | GETFLD | SUBCHN     |158 | 9E |   A   | ALL                 |    00252000
.*   | GETFLD | SAVAR1     |159 | 9F |   B   | ALL / SYSTEM        |    00253000
.*   | MODFLD | CELANCH    |160 | A0 |   B   | ALL                 |    00254000
.*   | GETFLF | VSELEVEL   |161 | A1 |   A   | ALL                 |    00255000
.*   | GETFLD | VSEID      |162 | A2 |   A   | ALL                 |    00256000
.*   | GETFLD | TLSDEF     |163 | A3 |   A   | ALL                 |    00257000
.*   | GETFLD | LIBNAMW    |164 | A4 |   A   | ALL                 |    00258000
.*   | MODFLD | MNTRSTMP   |165 | A5 |   A   | ALL                 |    00259000
.*   | MODFLD | MNTRSPRM   |166 | A6 |   A   | JCL,AR              |    00260000
.*   | MODFLD | MNTRSFRC   |167 | A7 |   C   | AR                  |    00261000
.*   | MODFLD | MNTRLTMP   |168 | A8 |   C   | ALL                 |    00262000
.*   | MODFLD | MNTRLPRM   |169 | A9 |   C   | JCL,AR              |    00263000
.*   | MODFLD | MNTRLTPA   |170 | AA |   C   | JCL                 |    00264000
.*   | GETFLD | PUBXPTR,CUU|171 | AB |   A   | ALL                 |    00265000
.*   | GETFLD | NXTOWNER   |172 | AC |   A   | ALL                 |    00266000
.*   | MODFLD | MNTRLPRA   |173 | AD |   C   | JCL,AR              |    00267000
.*   | GETFLD | POWCAT     |174 | AE |   A   | ALL                 |    00268000
.*   | GETFLD | CELANCH    |175 | AF |   A   | ALL                 |    00269000
.*   | GETFLD | MNTINFO    |176 | B0 |   A   | ALL                 |    00270000
.*   | MODFLD | MNTINFO    |177 | B1 |   A   | ALL / AR            |    00271000
.*   | GETFLD | RXEOJPTR   |178 | B2 |   A   | ALL                 |    00272000
.*   | MODFLD | RXEOJPTR   |179 | B3 |   A   | ALL                 |    00273000
.*   | GETFLD | REALKEY    |180 | B4 |   A   | ALL                 |    00274000
.*   | GETFLD | DSPACE     |181 | B5 |   A   | ALL                 |    00275000
.*   | MODFLD | RID        |182 | B6 |   A   | VTAM                |    00276000
.*   | GETFLD | PTRACE     |183 | B7 |   A   | ALL                 |    00277000
.*   | MODFLD | IPWSEGM    |184 | B8 |   A   | ALL                 |    00278000
.*   | GETFLD | UCB        |185 | B9 |   A   | ALL                 |    00279000
.*   | MODFLD | MODE LU=.. |186 | BA |   A   | ALL                 |    00280000
.*   | MODFLD | MODE PU=.. |187 | BB |   A   | ALL                 |    00281000
.*   | MODFLD | PMODE LU=. |188 | BC |   A   | ALL                 |    00282000
.*   | MODFLD | PMODE PU=. |189 | BD |   A   | ALL                 |    00283000
.*   | GETFLD | PMODE LU=. |190 | BE |   A   | ALL                 |    00284000
.*   | GETFLD | PMODE PU=. |191 | BF |   A   | ALL                 |    00285000
.*   | MODFLD | ACEEPTR    |192 | C0 |   A   | ALL                 |    00286000
.*   | GETFLD | ACEEPTR    |193 | C1 |   A   | ALL                 |    00287000
.*   | MODFLD | SYSAL      |194 | C2 |   A   | TERMACT=ON          |    00288000
.*   | GETFLD | ITACTIVE   |195 | C3 |   A   | ALL                 |    00289000
.*   | GETFLD | JCLPARM    |196 | C4 |   A   | ALL                 |    00290000
.*   | GETFLD | PU CUU=    |197 | C5 |   A   | ALL                 |    00291000
.*   | GETFLD | EXECMODE   |198 | C6 |   A   | ALL                 |    00292000
.*   ---------------------------------------------------------------    00293000
*                                                                       00294000
*   OUTPUT           =  REGISTER 0 CONTAINS (ADDITIONAL) INFORMATION    00295000
*                       FOR SOME GETFLD REQUESTS (OPTIONAL)             00296000
*                    =  REGISTER 1 CONTAINS THE REQUESTED INFORMATION   00297000
*                       FOR A GETFLD REQUEST                            00298000
*                    =  REGISTER 15 CONTAINS THE RETURN CODE   @D379DWK 00299000
*                       IF APPLICABLE.                         @D379DWK 00300000
*                                                                       00301000
*   EXIT NORMAL      =  TO REQUESTOR VIA LOAD PSW                       00302000
*                                                                       00303000
*   EXIT ERROR       =  BY ONE OF THE SGTINF ERROR EXITS.               00304000
*                       THERE IS DIFFERENT EXITS THAT PROVIDE           00305000
*                       RETURN CODES FOR EITHER LEAVING TO THE          00306000
*                       CALLER (FAST PATH SERVICE) WITH AN LPSW         00307000
*                       INSTRUCTION OR FOR LEAVING TO THE DISPATCHER.   00308000
*                       IF THE USER NEEDS TO BE CANCELLED EXIT IS       00309000
*                       TO ONE OF THE LABELS TINFCN.. WHICH WILL        00310000
*                       EITHER BRANCH TO THE ILLEGAL SVC (ERR21)        00311000
*                       OR TO THE ILLEGAL AMODE (ERR45)                 00312000
*                       IF THE CALLER SPECIFIED RETURN=YES, THE         00313000
*                       CANCELLATION IS NOT DONE BUT THE CALLER         00314000
*                       IS PROVIDED A NEGATIVE RETURN CODE. THIS        00315000
*                       CODE HELPS TO IDENTIFY, WHICH OF THE            00316000
*                       INPUT PARAMETERS WOULD HAVE CAUSED A CANCEL     00317000
*                       OTHERWISE.                                      00318000
*                                                                       00319000
.*  EXTERNAL REFEREN.=  NONE                                            00320000
.*  ROUTINES         =  NONE                                            00321000
.*  DATA AREAS       =  NONE                                            00322000
.*                                                                      00323000
.*  CONTROL BLOCKS   =  SYSCOM                                          00324000
.*                      BGCOMREG                                        00325000
.*                      PIBTABLE                                        00326000
.*                      PIB2TABLE                                       00327000
.*                      ISTAVT                                          00328000
.*                      SCYVECDS                                        00329000
.*                      VIORB                                           00330000
.*                      TIB                                    @D149DWK 00331000
.*                      TCB                                    @D149DWK 00332000
.*                      PCB                                    @D149DWK 00333000
.*                      PCE                                    @D51IDHA 00334000
.*                      DSINFOTB                               @D61EDOW 00335000
.*                                                                      00336000
.*  TABLES           =  NONE                                            00337000
.*  MACROS           =  NONE                                            00338000
.*  CHANGE ACTIVITIES=  NEW MACRO   FIRST RELEASE 35.0                  00339000
.*  -SECURITY HOOKS IN RELEASE 35.0                            @D350DWK 00340000
.*  -EXTENSIONS FOR RELEASE AF 1.2                             @D379DWK 00341000
.*  -EXTENSIONS FOR RELEASE AF 1.3                             @D379DWK 00342000
.*  -EXTENSIONS FOR RELEASE AF 2.1                             @D149DWK 00343000
.*  -TCBFLAGS USED INSTEAD OF TCBFLAG2                         @DA23675 00344000
.*  -CHECK FOR ICCF SVC SCREEN FLAG ADDED                      @DA24286 00345000
.*  -INCORRECT VTAM CANCEL SERVICE                             @DA24936 00346000
.*  -BATCH INDICATOR SET ONLY FOR START OF INACTIVE PARTITION  @DA28231 00347000
.*  -PUB2 OPEN FLAGS NOT RESET AT EOT TIME                     @DA33563 00348000
.*  -IGNORE CANCEL CODE ZERO BY MODFLD                         @DA33609 00349000
.*  -GETFLD FIELD=DEVPROP                                      @D219DWK 00350000
.*  -CANCEL OF SUBSYSTEM, NO EARLY ABEND EXIT TAKEN            @DA35410 00351000
.*  -SOFTWAIT POWER QUEIESCE, PREREQ                           @DA35866 00352000
.*  -FOR POWER APAR DY35567                                    @DA35866 00353000
.*  -WAITFFB DUE TO REG 2 CONTAINING A TID WHICH IS NEGATIVE   @DA36200 00354000
.*  -ACTIVATE VTAM ROUTINE ISTAPCKU DURING VCANCEL PROCESSING  @DA36477 00355000
.*   WHEN DELAYED CANCEL PROCESSING IS REQUESTED               @DA36477 00356000
.*  -SET UP SERVICE OWNER FOR IPL TREADY                       @DA37076 00357000
.*  -DEADLOCK SITUATION IN ICCF                                @DA37011 00358000
.*  -ACTIVATE VTAM ISTAPCKU W OPEN ACB                         @DA37326 00359000
.*  -SUPPORT MORE ADDRESS SPACES                               @D218DKH 00360000
.*  -SUPPORT GETFLD FIELD=MODE                                 @D21FDRP 00361000
.*  -SUPPORT GETFLD FIELD=PIK,LOGID=                           @D31LDMZ 00362000
.*  -NEW SERVICE GETFLD FIELD=PSTAT                            @D31LDMZ 00363000
.*  -SUPPORT GETFLD FIELD=IVMCB                                @D31ZDGN 00364000
.*  -SUPPORT RE-IPL AUTHORIZATION                              @D31LDGN 00365000
.*  -SUPPORT OCCF CANCEL MAINTASK                              @D31LDGN 00366000
.*  -'MORE PARTITIONS' NEW SERVICES FOR GETFLD (CODES 115 TO   @D51IDHA 00367000
.*   143 DEC.) REORGANIZED CODE FOR THE REASON OF ADDRESSAB.   @D51IDHA 00368000
.*   FOR FUTURE EXPANSIONS.                                    @D51IDHA 00369000
.*  -GETFLD FIELD=ALET                                         @D51ADGL 00370000
.*  -CHALET TAPE SUPPORT, BIT NO-READ-BACKWARD                 @D31KMGL 00371000
.*  -MODFLD COPYOWN & RESETOWN INTRODUCED                      @D51IDGL 00372000
.*  -MODFLD VSPTFLG INTRODUCED                                 @VSPT.GL 00373000
.*  -PROVIDE RETURNCODE INSTEAD OF CANCEL                      @D51RMGL 00374000
.*  -C370 SUPPORT GETFLD FIELD=ABEXIT1                         @D51ZDGL 00375000
.*  -ALLOW 'CANCEL CUU' INSTEAD OF 'RC'                        @DA40195 00376000
.*  -SUPPORT TREADY COND=POWER,RETURN=YES                      @D51RMGL 00377000
.*  -POWER SPOOLED DEVICES IN GETFLD F=PUB                     @DA40300 00378000
.*  -INTRODUCE 31 BIT ADDRESSING. THE CONVENTION FOLLOWED      @D52VDGL 00379000
.*   HEREIN IS AS FOLLOWS: 31 BIT ADDRESSING IS FIRST          @D52VDGL 00380000
.*   SWITCHED ON FOR ALL SERVICES. THIS FACILITATES THE        @D52VDGL 00381000
.*   SWITCHING FOR SUBROUTINES, THAT PARTLY USE 31 BIT         @D52VDGL 00382000
.*   ADDRESSING.                                               @D52VDGL 00383000
.*   THE NORMAL LPSW INSTRUCTION AT THE END OF A FAST PATH     @D52VDGL 00384000
.*   SVC IS TAKEN TO SWITCH TO THE CALLERS ADDRESSING MODE     @D52VDGL 00385000
.*   AGAIN.                                                    @D52VDGL 00386000
.*   24 BIT ADDRESSING IS SWITCHED TO AGAIN, WHEN THE          @D52VDGL 00387000
.*   THE SUBROUTINE TINFGENT IS ENTERED, TO MAKE THE SERVICE   @D52VDGL 00388000
.*   INTERRUPTABLE. HENCE THE DISPATCHER IS ALWAYS             @D52VDGL 00389000
.*   ENTERED IN 24 BIT MODE AGAIN. IN SOME CASES IT IS         @D52VDGL 00390000
.*   NECESSARY TO SHIFT TO 31 BIT ADDRESSING AFTER A CALL      @D52VDGL 00391000
.*   OF TINFGENT AGAIN.                                        @D52VDGL 00392000
.*   IT IS ASSUMED THAT ALL OTHER ENTRIES OF THIS MODULE ARE   @D52VDGL 00393000
.*   TAKEN WITH 24 BIT ADDRESSING. THESE ENTRIES ARE:          @D52VDGL 00394000
.*     TINFMOPD  = DELAYED PER BIT SETTING MODFLD PERBIT.      @D52VDGL 00395000
.*     TINTTWIC  = CANCEL OF DYNAMIC PARTITION BRING UP.       @D52VDGL 00396000
.*  -ELIMINATE ALL CASES, WHERE A FUNCTION CODE IS STILL       @RETCODE 00397000
.*   CONTAINED IN RF ON RETURN TO THE CALLER.                  @RETCODE 00398000
.*  -L R3,SCB0 WAS TAKEN INSTEAD OF L R3,ASCB0 AT TINFMRMA     @D51ODGL 00399000
.*  -CLASS PCB WAS TESTED FOR PCEDYNP FLAG INSTEAD OF PCB      @D51ODGL 00400000
.*   IN SERVICE TSTOP STOP, UNBATCH AND THE ENTRY FOR          @D51ODGL 00401000
.*   DISPATCHER TINFTWIC.                                      @D51ODGL 00402000
.*  -TINFVLPP TOOK THE OLD PIK OF THE PARTITION FOR COMPARE    @DA...GL 00403000
.*   AGAINST THE HIGHEST STATIC PIK, BUT REALLY WANTS TO KNOW  @DA...GL 00404000
.*   IF THE KEY FROM VALWRITE BELONGS TO AN ICCF PSEUDO        @DA...GL 00405000
.*   PARTITION. AS SUCH IT MUST BE HIGHER THAN THE HIGHEST     @DA...GL 00406000
.*   STATIC PIK                                                @DA...GL 00407000
.*  -ADAPT ACCESS REGISTER SUPPORT TO NEW DATA SPACE SUPPORT   @D52GDOW 00408000
.*  -WRONG TIBEAX IF VTAMEXIT IN VTAM APPL IN VTAMPART@D52GDOW:@KX40507 00409000
.*  -EXTRA SEGMENT TABLE FOR SHARED AREA                       @D61NDGL 00410000
.*  -GETFLD FIELD=DSPACE                                       @D61EDOW 00411000
.*  -FREE TAPE DEVICE IF NO OWNER ANYMORE                      @D6X..RP 00412000
.*  -COND=UNBATCH USE SMVPEND INSTEAD OF PCBABEND              @D6...MK 00413000
.*  -GETFLD FIELD=ABEXIT WRONG BYTE CHECKED FOR EARLYAB        @DA43697 00414000
.*  -TPA DEVICE SUPPORT                                        @D62TAAP 00415000
.*  -IF SDAID IS ACTIVE WITH A PER-TYPE TRACE, THE SYSTEM      @DA44628 00416000
.*   ENTERS A TIGHT LOOP, BECAUSE ROUTINE TINFGSTK IS CHANGING @DA44628 00417000
.*   PC-NEW-PSW AND LET IT POINT TO ITSELF.                    @DA44628 00418000
.*  -DVPINVLD SET WITHIN WRONG BYTE (LEADS TO WRONG TAPE MODE) @D64ADMK 00419000
.*  -ALLOW VENDOR CODE TO ISSUE TREADY CANCEL                  @DA45299 00420000
.*   PROVIDE SERVICE FOR GETFLD FIELD=DLIBLK                   @DA45299 00421000
.*   PROVIDE SERVICE FOR MODFLD FIELD=DLIBLK                   @DA45299 00422000
.*   PROVIDE SERVICE FOR GETFLD FIELD=IPANCH                   @D25IDAP 00423000
.*   PROVIDE SERVICE FOR MODFLD FIELD=IPANCH                   @D25IDAP 00424000
.*   PROVIDE SERVICE FOR GETFLD FIELD=EXABPRMS                 @DA45385 00425000
.*   PROVIDE SERVICE FOR MODFLD FIELD=DB2                      @D65CDOW 00426000
.*   PROVIDE SERVICE TO ACCESS PUBXTAB                         @DA45481 00427000
.*   ENSURE NON-EXISTING DEVICE TO BE RECOGNIZED PROPERLY      @DAOM    00428000
.*   PROVIDE FOR REASON CODE TO BE RETURNED WITH CANC.CODE FE  @DY45849 00429000
.*   PREVENT HARD/WAIT IF PAGE FAULT IN TINFJCWA SERVICE       @DY45849 00430000
.*   USE CORRECT COMREG FOR CANCEL.FORCE REQUESTS              @DY45889 00431000
.*   PROVIDE SERVICE FOR GETFLD FIELD=VSELEVEL                 @D27ADAP 00432000
.*   PROVIDE SERVICE FOR GETFLD FIELD=TLSDEF                   @D27ADAP 00433000
.*   PROVIDE SERVICE FOR GETFLD FIELD=LIBNAME                  @DAOM053 00434000
.*   PROG CHK 2D DUE TO OVERWRITTEN EAX IN CR8                 @DY46182 00435000
.*   CR8 (EAX) DESTROYED AFTER RETRY OF ESTAEX TYPE EXIT RTN   @DY46192 00436000
.*   PROVIDE SERVICE TO MODIFY CUU  FOR SCSI DEVICE IN SA-ENV  @D28ADAP 00437000
.*   TCBXDRSA HANDLING INCORRECT                               @DYXXXOW 00438000
.*   OCEXIT PROVIDES RC=0 ALTHOUGH PREVIOUS EXIT IS ACTIVE     @DY46378 00438500
.*   PROVIDE DEVICE CHARACTERISTICS FOR TPA DEVICES            @DY46413 00438700
.*   SMPFIX COUNTER NOT UPDATED WHEN SPACE GETVIS IS FREED     @DY46530 00438800
.*                                                                      00439000
.*  MODIFIED REGISTER=  R0,R1 AND R15                          @D149DWK 00440000
*                                                                       00441000
.*  A000000-999999                                             @D352DWK 00442000
.*                                                                      00443000
*** END OF SPECICATIONS *********************************************** 00444000
         SPACE 1                                                        00445000
         DC    CL8'SGTINF  '       MACRO NAME AND DATE         @DA35866 00446000
         DC    CL8'DY46530 '       LAST APAR/DEV CHANGE        @DY46530 00447770
*                                                                       00448000
*   SAVE INPUT REGISTERS AND CHECK ENTRY CONDITIONS                     00449000
*                                                                       00450000
         USING SGTINF,RC           SGTINF COMMON BASE          @D36IDFG 00451000
SGTINF   DS    0H                                                       00452000
         STM   RE,R8,TINFSAVE      SAVE UNSAVED REGISTERS      @D14ZDFG 00453000
         MVC   TINFSAV9(5*4),ERA   SAVE SAVED   REGISTERS      @D61DDGL 00454000
         MVC   TINFRID,RID         SAVE CURRENT RID            @D14BDWK 00455000
         MVI   RID+1,SYSTEMID      INDICATE SYSTEM RUNNNG      @D14BDWK 00456000
         L     R5,PCBPTR           PCB BASE ADDRESS            @D14BDWK 00457000
         L     R6,DISPAD           DISP BASE ADDRESS           @D14BDWK 00458000
         L     R8,TIBPTR           TIB BASE ADDRESS            @D14NDFG 00459000
         USING TIBADR,R8           TIB BASE POINTER            @D36IDFG 00460000
*        AMODESW SET,AMODE=31,WR=(RA) SWITCH TO 31 BIT         @D52VDGL 00461000
         AMODESW SET,AMODE=31,WR=(RA) SWITCH TO 31 BIT         @D52VDGL 00462000
         L     RA,TCBPTR           TCB BASE ADDRESS            @D52VDGL 00463000
         USING TCBADR,RA           TCB BASE POINTER            @D52VDGL 00464000
         NI    TIBFLAG3,XFF-TIBSTSV RESET STATUS SAVED FLAG    @D51RMGL 00465000
         N     RF,TINFRCMS         LEAVE FUNCTION CODE ONLY    @D51RMGL 00466000
         LA    RD,TINFFMAX         GET HIGHEST FUNCTION CODE   @D51IDHA 00467000
         CR    RF,RD               IS USERS FC > MAX.FUNCTION  @D51IDHA 00468000
         BH    TINFCNFC            YES, =====================> @D51RMGL 00469000
         AR    RF,RF               FUNCTION CODE TIMES 2       @D14BDWK 00470000
         AR    RF,RF               OFFSET WITHIN ADDRESS TABLE @D14BDWK 00471000
         L     RD,TINFTABA         TABLE ADDRESS BEGIN         @D51IDHA 00472000
         L     RF,0(RD,RF)         ADDRESS OF ROUTINE          @D14BDWK 00473000
         LR    RD,RF               LOAD ROUTINE BASE REGISTER  @D14BDWK 00474000
         C     RD,TINFBORD         ROUTINE REQUIRES OWN BASE   @D51IDHA 00475000
         BNLR  RF                  YES, ====================>> @D51IDHA 00476000
         L     RD,FSVCBAS2         PROVIDE SGTINF SECOND BASE  @D51IDHA 00477000
         BR    RF                  GO   ====================>> @D14BDWK 00478000
         DROP  R8                  DROP TIBADR                 @D61NDOW 00479000
         DROP  RA                  DROP TCBADR                 @D61NDOW 00480000
*---------------------------------------------------------------------- 00481000
*   INTERNAL FIELDS ADDRESSABLE VIA BASE REGISTER RC           @D51IDHA 00482000
*---------------------------------------------------------------------- 00483000
         SPACE 1                                                        00484000
FSVCBAS2 DC    A(SGTINF+X'1000')   SECOND BASE FOR PART 2      @D51IDHA 00485000
TINFTABA DC    A(TINFATAB)         START OF BRANCH TABLE       @D51IDHA 00486000
TINFBORD DC    A(TINFPRT3)         BORDER PART 2 / PART 3      @D51IDHA 00487000
         SPACE 1                                                        00488000
CBALADR  DC    A(CALCBAL)          ADDRESS OF BALANCE ROUTINE  @D37BDWK 00489000
TINFSYAL DC    A(SYSALIST)         ADDRESS OF SYSTEM ACC LIST  @D61NDGL 00490000
TINFRCMS DC    X'7FFFFFFF'         MSK FOR SWITCH OFF RETC.IND.@D14BDFG 00491000
*                                                              @D61DDGL 00492000
TINFSAV9 DS    F                   SAVE AREA FOR R9            @D61DDGL 00493000
TINFSAVA DS    F                   SAVE AREA FOR RA            @D61DDGL 00494000
TINFSAVB DS    F                   SAVE AREA FOR RB            @D61DDGL 00495000
TINFSAVC DS    F                   SAVE AREA FOR RC            @D61DDGL 00496000
TINFSAVD DS    F                   SAVE AREA FOR RD            @D61DDGL 00497000
TINFSAVE DS    F                   SAVE AREA FOR RE            @D61DDGL 00498000
TINFSAVF DS    F                   SAVE AREA FOR RF            @D61DDGL 00499000
TINFSAV0 DS    F                   SAVE AREA FOR R0            @D61DDGL 00500000
TINFSAV1 DS    F                   SAVE AREA FOR R1            @D61DDGL 00501000
TINFSAV2 DS    F                   SAVE AREA FOR R2            @D61DDGL 00502000
TINFSAV3 DS    F                   SAVE AREA FOR R3            @D61DDGL 00503000
TINFSAV4 DS    F                   SAVE AREA FOR R4            @D61DDGL 00504000
TINFSAV5 DS    F                   SAVE AREA FOR R5            @D61DDGL 00505000
TINFSAV6 DS    F                   SAVE AREA FOR R6            @D61DDGL 00506000
TINFSAV7 DS    F                   SAVE AREA FOR R7            @D61DDGL 00507000
TINFSAV8 DS    F                   SAVE AREA FOR R8            @D61DDGL 00508000
*                                                              @D61DDGL 00509000
.*                                                             @D52VDGL 00510000
.*   REGISTERS ARE NOT SAVED FOR CALLS TO SUBROUTINES IN       @D52VDGL 00511000
.*   SGTINF ITSELF. REGS CAN BE SAVED FOR SUCH SUBROUTINES     @D52VDGL 00512000
.*   THAT RUN UNINTERRUPTED (= CAN NOT SUFFER PAGE FAULTS)     @D52VDGL 00513000
.*                                                             @D52VDGL 00514000
TINFSSV  DC    16A(0)              SAVE AREA FOR CALLS TO NON  @D52VDGL 00515000
         ORG   TINFSSV             INTERRUPTABLE SUBROUTINES   @D52VDGL 00516000
TINFSSV0 DS    F                   SAVE AREA FOR R0            @D52VDGL 00517000
TINFSSV1 DS    F                   SAVE AREA FOR R1            @D52VDGL 00518000
TINFSSV2 DS    F                   SAVE AREA FOR R2            @D52VDGL 00519000
TINFSSV3 DS    F                   SAVE AREA FOR R3            @D52VDGL 00520000
TINFSSV4 DS    F                   SAVE AREA FOR R4            @D52VDGL 00521000
TINFSSV5 DS    F                   SAVE AREA FOR R5            @D52VDGL 00522000
TINFSSV6 DS    F                   SAVE AREA FOR R6            @D52VDGL 00523000
TINFSSV7 DS    F                   SAVE AREA FOR R7            @D52VDGL 00524000
TINFSSV8 DS    F                   SAVE AREA FOR R8            @D52VDGL 00525000
TINFSSV9 DS    F                   SAVE AREA FOR R9            @D52VDGL 00526000
TINFSSVA DS    F                   SAVE AREA FOR RA            @D52VDGL 00527000
TINFSSVB DS    F                   SAVE AREA FOR RB            @D52VDGL 00528000
TINFSSVC DS    F                   SAVE AREA FOR RC            @D52VDGL 00529000
TINFSSVD DS    F                   SAVE AREA FOR RD            @D52VDGL 00530000
TINFSSVE DS    F                   SAVE AREA FOR RE            @D52VDGL 00531000
TINFSSVF DS    F                   SAVE AREA FOR RF            @D52VDGL 00532000
         ORG   ,                                               @D52VDGL 00533000
TINFSVRT DC    F'0'                TO SAVE RETURN ADDRESS      @D14BDFG 00534000
TINFSVLU DC    H'0'                LOGICAL UNIT WORK FIELD     @D14BDFG 00535000
TINFHPIK DC    AL2(&NPART*16)      HIGHEST PIK VALUE (STATIC)  @D14BDFG 00536000
TINF1DYN DC    AL2((&NPART+1)*16)  FIRST DYNAMIC PIK           @D51IDGL 00537000
TINFSMSK DC    B'00010000',AL1(0)  SYSTEM OWNERSHIP MASK       @D14BDFG 00538000
TINFPMSK DC    B'01000000',AL1(0)  DYN. PART. OWNERSHIP MASK   @D51IDHA 00539000
         SPACE 1                                                        00540000
*---------------------------------------------------------------------- 00541000
*   EQUATES FOR INTERNAL USE                                   @D51IDHA 00542000
*---------------------------------------------------------------------- 00543000
         SPACE 1                                                        00544000
TINFVMSK EQU   X'80'               VTAM PUB OWNERSHIP MASK     @D14BDFG 00545000
TINFDMSK EQU   X'40'               DYN. PART. OWNERSHIP MASK   @D51IDHA 00546000
TINFIGN  EQU   X'FE'               MASK FOR IGNORE             @D51IDHA 00547000
TINFPROG EQU   X'01'               MASK FOR PROG.UNIT IN LU    @D14BDFG 00548000
TINFOCNC EQU   X'3C'               CANCEL CODE OCCF MAINTASK   @D31LDGN 00549000
         TITLE 'VSE SUPERVISOR     SGTINF    PART-1 COMMON SUBROUTINES' 00550000
.*===================================================================== 00551000
.*=  #  =============================================================== 00552000
.*= ##  =================== PART 1: COMMON ROUTINES =================== 00553000
.*=  #  =================== PART 1: COMMON ROUTINES =================== 00554000
.*=  #  =================== PART 1: COMMON ROUTINES =================== 00555000
.*=  #  =============================================================== 00556000
.*===================================================================== 00557000
.*                                                                      00558000
* PART 1: COMMON ROUTINES                                               00559000
* THIS PART CONTAINS ALL THOSE COMMONLY USED SUBROUTINES                00560000
* WHICH DO NOT REQUIRE MORE THAN REGISTER-12 AS A BASE REGISTER.        00561000
         SPACE 3                                                        00562000
***************************************************************         00563000
*                                                             *         00564000
*   FUNCTION: NORMAL RETURN TO THE USER BY LPSW INSTRUCTION.  *         00565000
*                                                             *         00566000
***************************************************************         00567000
TINFLPSW DS    0H                                                       00568000
TINANSW1 LA    R1,1                   SET SWITCH ON            @D52VDGL 00569000
         B     TINC0ST1               SET RC=00 STORE R1       @D52VDGL 00570000
TINC0ST0 XC    TINFSAVF,TINFSAVF      SET RC=00 STORE R0+R1    @D51MDGL 00571000
TINFSTR0 ST    R0,TINFSAV0            NO RC     STORE R0+R1    @D51MDGL 00572000
         B     TINFSTR1                         STORE R1       @D51MDGL 00573000
TINC0ST1 XC    TINFSAVF,TINFSAVF      SET RC=00 STORE R1       @D51MDGL 00574000
TINFSTR1 ST    R1,TINFSAV1                      STORE R1       @D51MDGL 00575000
TINFEXIT DS    0H                                              @D14BDFG 00576000
         XC    TINFSAVF(1),TINFSAVF   JUST CLEAR THE FLAG BYTE @D51RMGL 00577000
TINFEXI1 DS    0H                     NOTHING                  @D51RMGL 00578000
         MVC   RID,TINFRID            RESTORE CALLER'S RID     @D14BDFG 00579000
         MVC   ERA(16*4),TINFSAV9     RESTORE ERA              @D61DDGL 00580000
         LM    RD,R8,ERARD            RESTORE UNSAVED REGISTERS@D61RDOW 00581000
         LA    RC,SVOLDP              ADDRESS OF RETURN PSW    @D61RDOW 00582000
*        TDLOCK FUNC=RELCOND,TYPE=NP,WR1=R9,INP=(RC)           @D61RDAP 00583000
         TDLOCK FUNC=RELCOND,TYPE=NP,WR1=R9,INP=(RC)           @D61RDAP 00584000
         LM    R9,RC,ERAR9            RELOAD SAVED REGISTERS   @D61RDGL 00585000
 AIF (NOT &BGDEBUG).NOMC00 ....................................#DEBUGGL 00586000
         DEBUG ALLREGS,XXDBGMC        DISPLAY ALL REGS         #DEBUGGL 00587000
.NOMC00  ANOP  ................................................#DEBUGGL 00588000
         LPSW  SVOLDP                      ================>>> @D14BDWK 00589000
         SPACE 3                                                        00590000
***************************************************************         00591000
*   FUNCTION: CANCEL OR RETURN TO CALLER WITH A RETURN        *         00592000
*             CODES THAT INDICATES CANCELLATION REASON.       *         00593000
*                                                             *         00594000
***************************************************************         00595000
         SPACE 1                                                        00596000
TINFCANC DS    0H                                              @D51RMGL 00597000
TINFOSAE DS    0H                  ONLY AS BRANCH INTERFACE    @D26IDAP 00598000
TINFCPUB DS    0H                  NO MATCHING DEVICE FOUND    @D28ADAP 00599000
TINFCNFC BAL   RF,TINFCE21         ERR21 (ILLEGAL FUNC.CODE)   @D51RMGL 00600000
         DC    AL2(4)              REASON CODE                 @D51RMGL 00601000
TINFCNAU BAL   RF,TINFCE21         ERR21 (NOT AUTHORIZED)      @D51RMGL 00602000
         DC    AL2(8)              REASON CODE                 @D51RMGL 00603000
TINFCNPK DS    0H                  PIK ILLEGAL                 @D51RMGL 00604000
TINFCNPC DS    0H                  PIK NOT CURRENT PIK         @D51RMGL 00605000
TINFCNP0 DS    0H                  PIK ZERO NOT ALLOWED        @D51RMGL 00606000
TINFCNPA DS    0H                  PARTITION NOT ALLOC.        @D51RMGL 00607000
TINFCNDY BAL   RF,TINFCE21         PARTITION MUST NOT BE       @KD40324 00608000
         DC    AL2(12)             *     DYNAMIC PARTITION     @KD40324 00609000
TINFCNTC DS    0H                  TID NOT FOR CURRENT         @D51RMGL 00610000
TINFCNT0 DS    0H                  TID ZERO IN CHECKTID        @D51RMGL 00611000
TINFCNTN DS    0H                  TID NEGATIVE                @D51RMGL 00612000
TINFCNTH DS    0H                  TID TOO HIGH                @D51RMGL 00613000
TINFCNTI DS    0H                  TID FOR INACTIVE SUB.       @D51RMGL 00614000
TINFCNTA BAL   RF,TINFCE21         TASK NOT ATTACHED           @D51RMGL 00615000
         DC    AL2(16)             *                           @D51RMGL 00616000
TINFCNPU BAL   RF,TINFCE21         PUBINDEX INVALID            @D51RMGL 00617000
         DC    AL2(20)             *                           @D51RMGL 00618000
TINFCNDP BAL   RF,TINFCE21         DEVICE NOT PWR SPOOLED      @D51RMGL 00619000
         DC    AL2(24)             *     IN TREADY COND.POWER  @D51RMGL 00620000
TINFCNRI DS    0H                  RID NE X'10'                @D61EDOW 00621000
TINFCNSI BAL   RF,TINFCE21         SPACE ID ILLEGAL            @D51RMGL 00622000
         DC    AL2(28)             *                           @D51RMGL 00623000
TINFCNSQ BAL   RF,TINFCE21         ILLEGAL SEQUENCE OF         @D51RMGL 00624000
         DC    AL2(32)             *     SCOPE CHANGES         @D51RMGL 00625000
TINFCNSH BAL   RF,TINFCE21         FALSE HOLD ISSUED BY        @D51RMGL 00626000
         DC    AL2(36)             *     CALLER OF SCOPE CH.   @D51RMGL 00627000
TINFCNEN BAL   RF,TINFCE21         NO AUTH.LIBR CODE           @D51RMGL 00628000
         DC    AL2(40)             *                           @D51RMGL 00629000
TINFCNR0 BAL   RF,TINFCE21         RECORD NUMBER NOT 0         @D51RMGL 00630000
         DC    AL2(44)             *     IN LOGBAL SERVICE     @D51RMGL 00631000
TINFCNN3 BAL   RF,TINFCE45         CALLER NOT IN 31 BIT        @D51RMGL 00632000
         DC    AL2(48)             *     AMODE AS IS REQUIR.   @D51RMGL 00633000
TINFCNAM BAL   RF,TINFCE45         CALLER NOT IN 24 BIT        @D51RMGL 00634000
         DC    AL2(52)             *     AMODE AS IS REQUIR.   @D51RMGL 00635000
TINFCEAX BAL   RF,TINFCE21         LINKAGE STACK CONTAINS PC   @DY46182 00636000
         DC    AL2(56)             *     ENTRIES               @DY46182 00637000
TINFCE45 DS    0H                  ADDRESSING MODE VIOLATION   @D52VDGL 00638000
         L     RD,TINFEA45         GET EXIT ADDRESS            @DY45385 00639000
*        MVC   TINFEOFF,TINFEO45   ENSURE ERR45 EXIT           @D52VDGL 00640000
         B     TINFCN00            JOIN MAIN LINE              @D52VDGL 00641000
TINFCE21 DS    0H                  ILLEGAL SVC                 @D51RMGL 00642000
         L     RD,TINFEA21         GET EXIT ADDRESS            @DY45385 00643000
*        MVC   TINFEOFF,TINFEO21   ENSURE ERR21 EXIT           @D52VDGL 00644000
TINFCN00 DS    0H                                              @D52VDGL 00645000
         DEBUG ALLREGS,XXDBGMC     MAKE DEBUG ENTRY            #DEBUGGL 00646000
         L     R8,TIBPTR           TIB BASE ADDRESS            @D51RMGL 00647000
         USING TIBADR,R8           TIB BASE POINTER            @D61NDOW 00648000
         TM    TIBFLAG3,TIBSTSV    HAS STATUS BEEN SAVED       @D51RMGL 00649000
         BO    TINFCN01            YES,                        @D51RMGL 00650000
         TM    TINFSAVF,X'80'      DID USER REQUEST RETURN     @D51RMGL 00651000
         BNO   TINFER00            NO,                         @D51RMGL 00652000
         XC    TINFSAVF(4),TINFSAVF CLEAR RETURN CODE          @D51RMGL 00653000
         MVI   TINFSAVF,X'80'      INDICATE REASON CODE GIVEN  @D51RMGL 00654000
         MVC   TINFSAVF+2(2),0(RF) SAVE REASON CODE            @D51RMGL 00655000
         B     TINFEXI1            JOIN MAIN EXIT              @D51RMGL 00656000
TINFCN01 DS    0H                                              @D51RMGL 00657000
         L     RA,TIBTCB           TCB ASE ADDRESS             @D51RMGL 00658000
         USING TCBADR,RA           TCB BASE POINTER            @D61NDOW 00659000
         L     RB,TCBSAVE          USERS SAVE AREA ADDRESS     @D51RMGL 00660000
         USING SVEARA,RB           USERS SAVE AREA BASE        @D51RMGL 00661000
*        L     R6,TINFEOFF         SAVE EXIT OFFS. IF PAGE-FLT.@KD40318 00662000
         TM    SVER0F,X'80'        DID USER REQUEST RETURN=YES @D51RMGL 00663000
.* WE COULD GET A PAGE FAULT HERE                                       00664000
*        ST    R6,TINFEOFF         RESTORE EXIT OFFSET         @KD40318 00665000
         BNO   TINFER04            NO, DONT RETURN TO USER     @D51RMGL 00666000
         XC    SVER0F(4),SVER0F    CLEAR RETURN CODE           @D51RMGL 00667000
         MVI   SVER0F,X'80'        INDICATE ERROR CONDITION    @D51RMGL 00668000
         MVC   SVER0F+2(2),0(RF)   PROVIDE REASON CODE         @D51RMGL 00669000
         L     R6,DISPAD           DISP BASE ADDRESS           @D51RMGL 00670000
         BR    R6                       ===================>>> @D51RMGL 00671000
         DROP  R8                  RELEASE TIB BASE            @D61NDOW 00672000
         DROP  RA                  RELEASE TCB BASE            @D61NDOW 00673000
         DROP  RB                  RELEASE SVEARA BASE         @D51RMGL 00674000
TINFER00 DS    0H                                                       00675000
         BAL   R9,TINFGENT         SAVE STATUS                 @D14BDGL 00676000
*SGLINK  TINFGENT,INPUT=(R9,RC),WORK=(R2,R3,R4,R5,R7,RE,RF),           *00677000
               OUTPUT=(R0,R1,R6,R8,FA,RB)                               00678000
TINFER04 L     R7,TINFEOFF         GET ERROR EXIT OFFSET       @D52VDGL 00679000
         L     R6,DISPAD           DISP BASE ADDRESS           @KD40318 00680000
*        B     0(R6,R7)            EXIT ===================>>> @D52VDGL 00681000
         BR    RD                  EXIT ===================>>>          00682000
.*                                 TO ERR21                             00683000
.*                                 OR ERR45                             00684000
TINFEOFF DC    A(0)                                            @D52VDGL 00685000
TINFEO21 DC    A(ERR21-DISP)       ERR21 OFFSET IN DISP        @D52VDGL 00686000
TINFEO45 DC    A(ERR45-DISP)       ERR45 OFFSET IN DISP        @D52VDGL 00687000
TINFEA21 DC    A(ERR21)            ERR21 ADDRESS               @DY45385 00688000
TINFEA45 DC    A(ERR45)            ERR45 ADDRESS               @DY45385 00689000
***************************************************************         00690000
*   CODEBLOCK TINFER01                                        *         00691000
*   FUNCTION: CANCEL OF TASKS, THAT DO NOT HAVE A FREE        *         00692000
*             SAVE AREA.                                      *         00693000
*                                                             *         00694000
***************************************************************         00695000
TINFER01 DS    0H                  IDENTIFY OLD PSW            @D14BDWK 00696000
*        AMODESW SET,AMODE=24,WR=(R9) SWITCH TO 24 BIT         @D52VDGL 00697000
         AMODESW SET,AMODE=24,WR=(R9) SWITCH TO 24 BIT         @D52VDGL 00698000
         MVC   ERA(16*4),TINFSAV9  SETUP LOW CORE              @D61DDGL 00699000
         LA    RC,SVCOPSW          IDENTIFY OLD PSW            @D14BDWK 00700000
         L     RA,SVCINF           IDENTIFY INTERRUPT INFORM.  @D14BDWK 00701000
         L     RD,AFLIH            GET BASE OF GENENT          @D36IDFG 00702000
         USING FLIH,RD                                         @D36IDFG 00703000
         BAL   R9,TIGENENT         SAVE STATUS                 @D14BDWK 00704000
*SGLINK  TIGENENT,INPUT=(R9,RA,RC,RD),WORK=(RA,RB),OUTPUT=R6   @D149DWK 00705000
         USING DISP,R6                                         @D61NDOW 00706000
         B     ERR21               CANCEL DUE TO ILLEGAL SVC            00707000
         DROP  R6                  DISP BASE                   @D61NDOW 00708000
         DROP  RD                  BASE OF GENENT              @D51IDHA 00709000
***************************************************************         00710000
*  COMMON USINGS OF REGISTERS FOR THE FOLLOWING SERVICES      *         00711000
*    RC = BASE, ADDRESS OF LABEL SGTINF                       *         00712000
*    R9 = RETURN ADDRESS                                      *         00713000
***************************************************************         00714000
***************************************************************         00715000
*  TINFGENT    (STATUS SAVING ROUTINE)                        *         00716000
*  FUNCTION:                                                  *         00717000
* BECAUSE THIS ROUTINE IS CALLED FROM PARTS 1 TO 3, IT IS     *         00718000
* IMPORTANT TO SAVE AND RESTORE THE 2ND BASE REGISTER AT EACH *         00719000
* CALL. THIS IS DONE IN SVCWORK+4 (SEE BELOW).                *         00720000
* NORMALLY THE CALLER MUST HAVE BEEN IN RID 8 (USERTID). ONLY *         00721000
* FOR THE TINFLEAL ROUTINE (SERVICE SLEAVE) IT IS POSSIBLE    *         00722000
* TO USE THE SAME ROUTINE IN RID 4.                           *         00723000
*  ON ENTRY: ONLY RC AND R9, SEE ABOVE                        *         00724000
*  ON EXIT TO R9:                                             *         00725000
*    R0 = VALUE AS ON ENTRY TO SVC                            *         00726000
*    R1 = VALUE AS ON ENTRY TO SVC                            *         00727000
*    R6 = DISPATCHER ADDR                                     *         00728000
*    R8 = PTR TO TIB                                          *         00729000
*    RA = PTR TO TCB                                          *         00730000
*    RB = PTR TO PART.SAVE AREA,                              *         00731000
*                                                             *         00732000
***************************************************************         00733000
*SGLINK  TINFGENT,INPUT=(R9,RC),WORK=(R2,R3,R4,R5,R7,RE,RF),           *00734000
               OUTPUT=(R0,R1,R6,R8,RA,RB)                      @D62NDAP 00735000
TINFGENT DS    0H                SAVE USER STATUS                       00736000
         LM    RE,R8,TINFSAVE    RESTORE REQUESTORS REGISTERS  @D14BDWK 00737000
         MVC   ERA(16*4),TINFSAV9 SETUP LOW CORE SAVE AREA     @D61DDGL 00738000
         MVC   RID,TINFRID       RESTORE USERS RID             @D14BDWK 00739000
         CLM   R9,7,TINGENA1+1   ENTERED FROM SLEAVE           @D61NDGL 00740000
         BE    TINFGEN0          YES,                          @D61NDGL 00741000
         CLI   RID+1,USERTID     ENTERED FROM USER CODE        @D14BDWK 00742000
         BNE   TINFER01          NO,                           @D14BDWK 00743000
TINFGEN0 DS    0H                                              @D6X..RP 00744000
         L     R1,TCBPTR         TCB BASE ADDRESS              @D6X..RP 00745000
         USING TCBADR,R1         TCB BASE POINTER              @D6X..RP 00746000
         ST    R9,SVCWORK        SAVE USERS R9 IN TCB SAVE AREA@D6X..RP 00747000
         ST    RD,SVCWORK+4      SAVE USERS RD IN TCB SAVE AREA@D6X..RP 00748000
         DROP  R1                RELEASE TCB BASE POINTER      @D6X..RP 00749000
         L     R1,TINFSAV1       RESTORE USER REGISTER         @D6X..RP 00750000
*        AMODESW SET,AMODE=24,WR=(R9) SWITCH TO 24 BIT         @D52VDGL 00751000
         AMODESW SET,AMODE=24,WR=(R9) SWITCH TO 24 BIT         @D52VDGL 00752000
 AIF (NOT &BGTT).NOTT1 ....................................... @D14ZDFG 00753000
         LA    R9,TINFGEN1       GET LINK ADDRESS              @D14ZDFG 00754000
.NOTT1   ANOP  ............................................... @D14ZDFG 00755000
         L     RD,AFLIH          GENENT BASE ADDRESS           @D36IDFG 00756000
         USING FLIH,RD           FLIH BASE POINTER             @D36IDFG 00757000
 AIF (NOT &BGTT).NOTT2 ....................................... @D14BDFR 00758000
         TM    SUPVFLAG,TTIMESET+TTIMEACT IF (TT INTERRUPT SET)@D14BDFR 00759000
         BNZ   GENENTTT          SAVE TASK TIMER FIELDS        @D14ZDFG 00760000
*SGLINK  GENENTTT,INPUT=(R9,RD),WORK=(RA,RB,RC)                @D36ZDFG 00761000
.NOTT2   ANOP  ............................................... @D14BDFR 00762000
TINFGEN1 LA    RC,SVCOPSW        GENENT ENTERED FROM SVC       @D36IDFG 00763000
         L     RB,SVCINF         SVC INTERRUPTION CODE         @D36IDFG 00764000
         BAL   R9,GENENT         HAVE GENENT SAVE USERS STATUS @D36IDFG 00765000
*SGLINK  GENENT,INPUT=(R9,RB,RC,RD),OUTPUT=(R6,RA,RB)          @D6X..RP 00766000
         MVI   RID+1,REENTRID    SET UP RID FOR REENTRANT SVC  @D36IDFG 00767000
         DROP  RD                RELEASE FLIH BASE POINTER     @D51IDHA 00768000
         L     R8,TIBPTR         TIB BASE ADDRESS              @D36IDFG 00769000
         USING TIBADR,R8         TIB BASE POINTER              @D61NDOW 00770000
         OI    TIBFLAG3,TIBSTSV  INDICATE STATUS HAS BEEN SAVED@D51RMGL 00771000
         DROP  R8                RELEASE TIB BASE              @D61NDOW 00772000
         L     R8,TCBPTR         TCB BASE ADDRESS              @D6X..RP 00773000
         USING TCBADR,R8         TCB BASE POINTER              @D6X..RP 00774000
         L     R9,SVCWORK        RELOAD R9 FROM TCB SAVE AREA  @D6X..RP 00775000
         L     RD,SVCWORK+4      RELOAD RD FROM TCB SAVE AREA  @D6X..RP 00776000
         DROP  R8                RELEASE TCB BASE              @D6X..RP 00777000
         L     R8,TIBPTR         LOAD TIB BASE ADDRESS         @D6X..RP 00778000
         L     RC,FSVCBASE       RESTORE SGTINF BASE ADDRESS   @D36IDFG 00779000
         BR    R9                RETURN =====================>>@D36IDFG 00780000
TINGENA1 DC    A(TINLEALC)       ADDRESS FOR COMPARE           @52SQLGL 00781000
***************************************************************         00782000
*  TINFGTID                                                   *         00783000
*  FUNCTION: GET A TID OR VALIDATE A CALLER SUPPLIED ONE      *         00784000
*  ON ANY ENTRY:                                              *         00785000
*    RC = BASE, ADDRESS OF LABEL SGTINF                       *         00786000
*    R9 = RETURN ADDRESS                                      *         00787000
*  ON ENTRY TO TINFGTID:                                      *         00788000
*    R0 = ZERO OR CALLER SUPPLIED TID                         *         00789000
*  ON ENTRY TO TINFCTID:                                      *         00790000
*    R0 = A NON ZERO VALUE, INTERPRETED AS TID                *         00791000
*  ON EXIT TO R9:                                             *         00792000
*    R2 = EITHER CALLERS TID OR TID OF CURRENT TASK           *         00793000
*    R8 = PTR TO TIB OF TASK IDENTIFIED BY TID                *         00794000
*  ON EXIT TO TINFCNT?: TID INVALID,TASK NOT ATTACHED         *         00795000
*    OR TASK WAS NOT ACTIVE.                                  *         00796000
*                                                             *         00797000
***************************************************************         00798000
*SGLINK  TINFGTID,INPUT=(R0,R9,RC),OUTPUT=(R2,R8)                       00799000
TINFGTID DS    0H                VALIDATE TID AND TIB                   00800000
         LTR   R2,R0             DID USER PROVIDE A TID                 00801000
         BNZ   TINFSTID          YES,                                   00802000
         LH    R2,TID            GET CURRENT TIB               @D36IDFG 00803000
         L     R8,TIBPTR         GET ADDRESS OF TIB            @D36IDFG 00804000
         BR    R9                    RETURN =================>>         00805000
         SPACE 1                                                        00806000
*SGLINK  TINFCTID,INPUT=(R0,R9,RC),OUTPUT=(R2,R8)                       00807000
TINFCTID DS    0H                VALIDATE USERS GIVEN TID      @D14BDWK 00808000
         LTR   R2,R0             DID USER PROVIDE A TID        @D14BDWK 00809000
         BZ    TINFCNT0          NO,                           @D51RMGL 00810000
TINFSTID BM    TINFCNTN          INVALID TID SUPPLIED          @D51RMGL 00811000
         L     R8,IJBCLIM        CLASS LIST TABLE ADDRESS      @D66IDAP 00812000
         USING CLIM,R8           CLIM BASE POINTER             @D66IDAP 00813000
         AIF   (&VSE260).Y260020                                        00814000
         LH    R8,CMAXTASK       HIGHEST POSSIBLE USER TASK    @D66IDAP 00815000
         AGO   .N260020                                                 00816000
.Y260020 ANOP                                                           00817000
         LH    R8,CSTASK         HIGHEST POSSIBLE USER TASK    @D66IDAP 00818000
.N260020 ANOP                                                           00819000
         DROP  R8                RELEASE CLIM BASE             @D66IDAP 00820000
         CR    R2,R8             VALID TASK-ID                 @D14BDWK 00821000
         BH    TINFCNTH          NO, ERROR                     @D51RMGL 00822000
         LR    R8,R2             COPY TASK-ID                  @D66IDAP 00823000
         SLL   R8,2              MULTIPLY WITH FOUR            @D66IDAP 00824000
         AL    R8,ATIBATAB       ADDRESS OF TIB ADDRESS        @D66IDAP 00825000
         ICM   R8,15,0(R8)       ADDRESS OF TIB                @D66IDAP 00826000
         BZ    TINFCNTA          TASK IS INACTIVE              @D51RMGL 00827000
         USING TIBADR,R8         TIB BASE POINTER              @D61NDOW 00828000
         CH    R2,IJBHMTID       IS THIS A MAIN OR SYSTEM TASK @D14BDWK 00829000
         BNHR  R9                YES, =======================> @D14BDFG 00830000
         CLI   TIBRQID,NOTACT    IS TASK INACTIVE              @D14BDFG 00831000
         BE    TINFCNTI          YES,                          @D51RMGL 00832000
         BR    R9                RETURN =====================>>@D14BDWK 00833000
         DROP  R8                DROP TIBADR                   @D61NDOW 00834000
***************************************************************         00835000
*  TINFVLOG                                                   *         00836000
*  FUNCTION: VALIDATE A LOGID OF A DYNAMIC (!) PARTITION      *         00837000
.*   A LOGID IS VALID, IF THE CLASS (FIRST LETTER) OF THE     *         00838000
.*   LOGID IS DEFINED IN THE DYNCLASS TABLE PRESENTLY         *         00839000
.*   BEING LOADED AND (ADDITIONALLY) THE SECOND LETTER IS     *         00840000
.*   A GENERALLY VALID LETTER FOR DYNAMIC PARITITIONS.        *         00841000
.*   A VALID PARTITION LOGID DOES NOT MEAN, THAT THE PAR-     *         00842000
.*   TITION IS PRESENTLY ALLOCATED.                           *         00843000
*  ON ENTRY:                                                  *         00844000
*    RC = BASE REGISTER                                       *         00845000
*    R9 = RETURN REGISTER                                     *         00846000
*    R0 = LOGID,WHICH IS TO BE VALIDATED                      *         00847000
*  ON EXIT TO 0(R9): LOGID NOT VALID                          *         00848000
*    R0,R7,R8 = WORK                                          *         00849000
*    RF = RETURN CODE 16                                      *         00850000
*  ON EXIT TO 4(R9): LOGID VALID                              *         00851000
*    R0,R7 = WORK                                             *         00852000
*    RF = RETURN CODE 0                                       *         00853000
***************************************************************         00854000
*SGLINK  TINFVLOG,INPUT=(R0,R9,RC),WORK=(R0,R7,R8),OUTPUT=RF            00855000
TINFVLOG DS    0H                 VALIDATE SYSLOG-ID           @D51IDGL 00856000
         LA    RF,L'TINFVLDT      SET LOOP COUNT               @D51IDGL 00857000
TINFVLG2 DS    0H                 VALIDATE LAST SYSLOG-ID CHAR @D51IDGL 00858000
         LA    R7,TINFVLDT-1(RF)  POINT TO LAST VALID CHARCTER @D51IDGL 00859000
         CLM   R0,1,0(R7)         IS THIS A MATCH              @D51IDGL 00860000
         BE    TINFVLG4           YES, CHECK NEXT CHARACTER    @D51IDGL 00861000
         BCT   RF,TINFVLG2        CHECK NEXT TABLE ENTRY       @D51IDGL 00862000
         B     TINR9C16           INVALID SYSLOG ID PASSED     @D51IDGL 00863000
TINFVLG4 DS    0H                                              @D51IDGL 00864000
         LA    RF,5               SET LOOP COUNT               @D51IDGL 00865000
         SRL   R0,8               REMOVE LAST SYSLOG-ID CHARC. @D51IDGL 00866000
         STM   R0,RE,TINFSSV      SAVE MY REGISTERS            @D52VDGL 00867000
         L     R8,ATSSERV         ADDRESS OF SUBROUTINE        @D51IDGL 00868000
         BALR  R7,R8              VALIDATE SYSLOG-ID           @D51IDGL 00869000
*SGLINK  TSSERV,INPUT=(7,8,15),OUTPUT=(15),WORK=(0,2,4,5,6,8,12,14)     00870000
         L     RC,FSVCBASE        RESTORE MY BASE ADDRESS      @D52VDGL 00871000
         LM    R0,RE,TINFSSV      RESTORE ALL MY REGISTERS     @D52VDGL 00872000
         LTR   RF,RF              WAS SYSLOG-ID VALID          @D51IDGL 00873000
         BZ    4(,R9)             YES,                         @D51IDGL 00874000
         B     TINR9C16           INVALID CLASS ENTRY          @D51IDGL 00875000
TINFVLDT DC    C'WVUTSRQPONMLKJIHGFEDCBA987654321'             @D51IDGL 00876000
***************************************************************         00877000
*  TINFGLOG                                                   *         00878000
*  FUNCTION: FIND AN ACTIVE PCB POINTER FOR A SYS LOGID       *         00879000
*  ON ENTRY:                                                  *         00880000
*    R0 = LOGID,WHICH IS TO BE SEARCHED FOR                   *         00881000
*  ON EXIT TO 0(R9): PCB FOR LOGID NOT FOUND                  *         00882000
*    RF = RETURN CODE 16                                      *         00883000
*  ON EXIT TO 4(R9):                                          *         00884000
*    R2 = PIK OF PARTITION IF ANY WAS FOUND                   *         00885000
*    R5 = PTR TO PCB OF PARTITION                             *         00886000
*    RF = RETURN CODE 0                                       *         00887000
***************************************************************         00888000
*SGLINK  TINFGLOG,INPUT=(R0,R9,RC),OUTPUT=(R2,R5,RF)                    00889000
TINFGLOG DS    0H                 FIND PCB FOR GIVEN SYSLOG-ID          00890000
         L     RF,IJBCLIM         CLIM BASE ADDRESS            @D51IDHA 00891000
         USING CLIM,RF            CLIM BASE POINTER            @D51IDHA 00892000
         LH    R2,CAPART          GET NUMBER OF PARTITIONS     @D51IDHA 00893000
         LA    R2,1(,R2)          ADD ONE FOR AR PARTITION     @D51GDAP 00894000
         DROP  RF                 RELEASE CLIM BASE            @D51IDHA 00895000
         L     RF,APCBATAB        ADDRESS OF PCBATAB           @D51IDGL 00896000
         S     RF,F4              ADJUST FOR 1ST TIME THROUGH  @D51IDGL 00897000
TINFGLO1 DS    0H                 CHECK NEXT PCB               @D51IDGL 00898000
         LA    RF,4(,RF)          POINT TO NEXT PCB ADDRESS    @D51IDGL 00899000
         L     R5,0(,RF)          GET PCB ADDRESS              @D51IDGL 00900000
         LTR   R5,R5              IS PCB ALLOCATED             @D51IDGL 00901000
         BZ    TINFGLO1           NO,                          @D51IDGL 00902000
         USING PCBADR,R5          PCB BASE POINTER             @D61NDOW 00903000
         CLM   R0,3,PCELID        IS THIS THE RIGHT PCB        @D51IDGL 00904000
         BE    TINFGLO2           YES,                         @D51IDGL 00905000
         BCT   R2,TINFGLO1        MORE PCB'S TO PROCESS        @D51IDGL 00906000
         B     TINR9C16           NO, ERROR  (PCB NOT FOUND)   @D51IDGL 00907000
TINFGLO2 DS    0H                 WE FOUND THE PCB             @D51IDGL 00908000
         LH    R2,PCEPIK          GET THE ASSOCIATED PIK       @D51IDGL 00909000
         DROP  R5                 RELEASE PCB BASE             @D61NDOW 00910000
         SLR   RF,RF              SET RETURN CODE TO ZERO      @D51IDGL 00911000
         B     4(R9)              RETURN ====================>>@D51IDGL 00912000
***************************************************************         00913000
*  CODEBLOCK TINFGPIK                                         *         00914000
*  FUNCTION: CHECK A USER OR CALLER PROVIDED PIK FOR VALIDITY *         00915000
*    OR PROVIDE THE DEFAULT PIK FROM POSITION PIK IN LOWCORE. *         00916000
*  ON ENTRY TO TINFGPIK:                                      *         00917000
*    R0 = ZERO, OR PIK, THAT IS TO BE CHECKED                 *         00918000
*  ON ENTRY TO TINFCPIK:                                      *         00919000
*    R0 = A PIK, WHICH IS TO BE CHECKED                       *         00920000
*  ON EXIT TO 4(R9):                                          *         00921000
*    R2 = VALIDATED PIK OF CALLER OR PIK OF CURRENT PARTITION *         00922000
*  ON EXIT TO TINR9C16: SOME ERROR OCCURED                    *         00923000
***************************************************************         00924000
*SGLINK  TINFGPIK,INPUT=(R0,R9,RC),WORK=R0,OUTPUT=R2                    00925000
TINFGPIK DS    0H                ENSURE PIK IS PROVIDED        @D36IDWK 00926000
         LTR   R2,R0             DID CALLER PROVIDE A PIK      @DA41545 00927000
         BNZ   TINFSPIK          YES, CHECK IT                 @D36IDWK 00928000
         LH    R2,PIK            USE CURRENT PIK               @D36IDFG 00929000
         B     4(,R9)            OK,  =======================> @D36IDFG 00930000
*SGLINK  TINFCPIK,INPUT=(R0,R9,RC),WORK=(R0),OUTPUT=R2                  00931000
TINFCPIK DS    0H                WHEN (ENTRY FOR CHECK ONLY)   @D14BDFG 00932000
         LTR   R2,R0             IS PIK NEGATIVE               @DA41545 00933000
TINFSPIK BM    TINR9C16          YES, =======================> @DA41545 00934000
         N     R0,F15            IS THIS A VALID PIK VALUE     @D36IDFG 00935000
         BNZ   TINR9C16          NO,  =======================> @D36IDFG 00936000
         CH    R2,IJBHPIK        IS THIS A VALID PIK           @D51IDHA 00937000
         BNH   4(,R9)            YES, =======================> @D36IDFG 00938000
         B     TINR9C16          ERROR=======================> @D36IDFG 00939000
***************************************************************         00940000
*  CODEBLOCK TINFCSID                                         *         00941000
*  FUNCTION: FIND AN ACTIVE AND VALID SPACE CONTROL BLOCK FOR *         00942000
*    A SPACE ID SUPPLIED BY THE CALLER.                       *         00943000
*  ON ENTRY:                                                  *         00944000
*    R0 = SPACE ID, WHICH IS TO BE CHECKED                    *         00945000
*  ON EXIT TO 4(R9):                                          *         00946000
*    R3 = PTR TO VALID SCB AND ACTIVE SCB                     *         00947000
*    RF = RETURN CODE 0                                       *         00948000
*    R2,RB = WORK                                             *         00949000
*  ON EXIT TO R9:       SPACE ID IS INVALID                   *         00950000
*    RF = RETURN CODE 8 IF SPACE ID VALID BUT NOT ALLOCATED   *         00951000
*                    12 IF SPACE ID NOT VALID                 *         00952000
*    R0,R2,R3,RB = WORK                                       *         00953000
***************************************************************         00954000
*SGLINK  TINFCSID,INPUT=(R0,R9,RC),WORK=(R0,R2,RB),OUTPUT=(R3,RF)       00955000
TINFCSID DS    0H                                                       00956000
         SLR   RF,RF             CLEAR REGISTER (RET. CODE)    @D51IDGL 00957000
         CLM   R0,1,TINFCSBL     IS THIS A STATIC SPACE-ID     @D51IDGL 00958000
         BNE   TINFCS50          NO,                           @D51IDGL 00959000
         LA    RB,TINFCSTB       ADDRESS OF VALID SPACE-IDS    @D52VDGL 00960000
         LA    R3,L'TINFCSTB     LENGTH OF TABLE (LOOP COUNT)  @D52VDGL 00961000
TINFCS00 DS    0H                VALIDAT USERS GIVEN SPACE-ID  @D52VDGL 00962000
         CLM   R0,2,0(RB)        IS THIS THE RIGHT ENTRY       @D52VDGL 00963000
         BE    TINFCS10          YES,                          @D52VDGL 00964000
         LA    RB,1(,RB)         POINT TO NEXT ENTRY           @D52VDGL 00965000
         BCT   R3,TINFCS00       CHECK NEXT TABLE ENTRY        @D52VDGL 00966000
         SLR   R3,R3             INVALID SPACE-ID              @D52VDGL 00967000
         B     TINR9C12          SET RETURN CODE AND EXIT      @D52VDGL 00968000
TINFCS10 DS    0H                SPACE-ID FOUND PROCESSING     @D52VDGL 00969000
         L     RB,ASIDSTR        ADDRESS OF SHARED SPACE STRING@D52VDGL 00970000
         USING SIDSTR,RB         SIDSTR BASE POINTER           @D52VDGL 00971000
         CLM   R0,M3,SIDS        IS THIS WHAT THE USER WANTED  @D52VDGL 00972000
         BNE   TINFCS12          NO, CONTINUE CHECKING         @D52VDGL 00973000
         DROP  RB                RELEASE SIDSTR BASE           @D61NDOW 00974000
         L     RB,ASCBATAB       SHARED SCB-ADDRESS            @D52VDGL 00975000
         L     R3,ASCBS-SCBATAB(RB) OFFSET WITHIN ASCBATAB     @D52VDGL 00976000
         B     4(R9)             OK,  =======================> @D52VDGL 00977000
TINFCS12 DS    0H                LOOP THROUGH SCBATAB NOW      @D52VDGL 00978000
         L     RB,ASCBATAB       ADDRESS OF SCBATAB            @D14NDFG 00979000
         USING SCBATAB,RB        SCBATAB BASE POINTER          @D14NDGL 00980000
         L     RB,ASCBFSTA       FIRST STATIC SCB              @D218DKH 00981000
         LTR   R3,RB             COPY AND CHECK SCB ADDRESS    @D52VDGL 00982000
         BZ    TINR9C08          SCB IS INACTIVE               @KD40... 00983000
TINFCS20 DS    0H                LOOP THRU SPACE CONT.BLOCKS   @D51GDMZ 00984000
         USING SCBADR,R3         SCBADR BASE POINTER           @D218DKH 00985000
         CLM   R0,M3,SCBID       IS THIS THE RIGHT SCB         @D218DKH 00986000
         BE    4(,R9)            YES, =======================> @D52VDGL 00987000
TINFCS30 L     R3,SCBFWPT        GET NEXT SCB ADDRESS          @D14NDFG 00988000
         CR    R3,RB             DID WE COMPLETE THE LOOP      @D218DKH 00989000
         BNE   TINFCS20          NO,                           @D14NDFG 00990000
         DROP  R3                RELEASE SCBADR BASE POINTER   @D52VDGL 00991000
         DROP  RB                RELEASE SCBATAB BASE          @D52VDGL 00992000
         SLR   R3,R3             INDICATE INACTIVE SCB         @D52VDGL 00993000
         B     TINR9C08          SET RETURN CODE AND EXIT      @D52VDGL 00994000
TINFCS50 DS    0H                PROCESS DYNAMIC PARTITIONS    @D51IDGL 00995000
         L     RB,ASCBATAB       ADDRESS OF ACBATAB            @D51IDGL 00996000
         USING SCBATAB,RB        SCBATAB BASE POINTER          @D51IDGL 00997000
         ICM   RB,15,ASCBFDYN    ADDRESS OF 1ST DYN SPACE SCB  @D51IDGL 00998000
         BZ    TINFCS55          THIS ONE IS INACTIVE          @D51IDGL 00999000
         LR    R3,RB             COPY ADDRESS                  @D52VDGL 01000000
TINFCS52 DS    0H                FIND DYN SPACE SCB            @D51IDGL 01001000
         USING SCBADR,R3         SCBADR BASE POINTER           @D51IDGL 01002000
         CLM   R0,M3,SCBID       IS THIS THE ONE WE NEED       @D51IDGL 01003000
         BE    4(,R9)            YES, =======================> @D51IDGL 01004000
TINFCS54 L     R3,SCBFWPT        NEXT SCB ADDRESS              @D51IDGL 01005000
         CR    R3,RB             DOD WE COMPLETE THE LOOP      @D51IDGL 01006000
         BNE   TINFCS52          NO, CHECK NEXT SCB            @D51IDGL 01007000
         DROP  R3                RELEASE SCB BASE              @D51IDGL 01008000
         DROP  RB                RELEASE  SCBATAB BASE         @D51IDGL 01009000
TINFCS55 DS    0H                                              @D51IDGL 01010000
         LR    R2,R7             R2: PRESERVE CALLERS R7       @D51IDGL 01011000
         LR    R3,R8             R3: PRESERVE CALLERS R8       @D51IDGL 01012000
         LR    RB,R9             R3: PRESERVE CALLERS R9       @D51IDGL 01013000
         BAL   R9,TINFVLOG       CALL TO VALIDATE SPACE ID=>>  @D51IDGL 01014000
*SGLINK  TINFVLOG,INPUT=(R0,R9,RC),WORK=(R0,R7,R8),OUTPUT=RF            01015000
         NOP   0                 *                             @D51IDGL 01016000
         LR    R7,R2             R7: RESTORE CALLERS REG       @D51IDGL 01017000
         LR    R8,R3             R8: RESTORE CALLERS REG       @D51IDGL 01018000
         LR    R9,RB             R9: RESTORE CALLERS REG       @D51IDGL 01019000
         LTR   RF,RF             WHAT KIND OF ERROR            @D51IDGL 01020000
         BZ    TINR9C08          PART.NOT ALLOCATED            @D51IDGL 01021000
         B     TINR9C12          CLASS IS INVALID              @D51IDGL 01022000
TINFCSBL DC    C' '              BLANK FOR TEST DYN./STATIC    @D51IDGL 01023000
TINFCSTB DC    C'SR0123456789AB' TABLE OF LEGAL STATIC SIDS    @D52VDGL 01024000
***************************************************************         01025000
*  CODEBLOCK TINFGLUB                                         *         01026000
*  FUNCTION: PROVIDE A POINTER TO A LUB ENTRY FOR A LOG.UNIT  *         01027000
*  ON ENTRY:                                                  *         01028000
*    R0 = LOGICAL UNIT                                        *         01029000
*    R5 = PTR TO PCB OF PARTITION                             *         01030000
*  ON EXIT TO 4(R9):                                          *         01031000
*    R2 = PTR TO PIB OF PARTITION                             *         01032000
*    R3 = PTR TO A VALID, NORMALLY ASSIGNED LUB ENTRY         *         01033000
*  ON EXIT TO TINR9C04:  LOGICAL UNIT WAS ASSIGNED IGNORE     *         01034000
*  ON EXIT TO TINR9C08:  LOGICAL UNIT WAS UNASSIGNED          *         01035000
*  ON EXIT TO TINR9C12:  LOGICAL UNIT WAS INVALID             *         01036000
***************************************************************         01037000
         USING PCBADR,R5            *                          @D61NDOW 01038000
*SGLINK  TINFGLUB,INPUT=(R0,R5,R9,RC),OUTPUT=(R2,R3,RF)                 01039000
TINFGLUB DS    0H                                                       01040000
         STH   R0,TINFSVLU       STORE LU IN WORK FIELD        @D14BDFG 01041000
         L     R2,PCEPIB         R2: MAKE PTR TO PIB OF        @D51IDHA 01042000
         USING PIBADR,R2         *   PARTITION                 @D51IDIS 01043000
         SLR   R0,R0             R0: CLEAR FOR INSERT          @D14BDFG 01044000
         LR    RF,R0             RF: CLEAR RETURN CODE         @D51IDHA 01045000
         LR    R3,R0             R3: INSERT 2. PART OF LOGICAL @D14BDFG 01046000
         IC    R3,TINFSVLU+1     *   UNIT NUMBER               @D14BDFG 01047000
         TM    TINFSVLU,TINFPROG IF (UNIT IS PROGRAMMER UNIT)  @D14BDGL 01048000
         BZ    TINFGLU1          ***                           @D14BDGL 01049000
         CLM   R3,1,PIBLUBNO       ERROR (UNIT BIGGER THAN     @D14BDGL 01050000
         BNL   TINR9C12            *      MAXIMUM UNIT)        @D51IDGL 01051000
         IC    R0,PIBLUBID         R0: OFFS. TO 1ST PROG.UNIT  @D14BDGL 01052000
         B     TINFGLU2          ELSE                          @D14BDGL 01053000
TINFGLU1 DS    0H                ***  SYSTEM UNIT              @D14BDGL 01054000
         CLM   R3,1,PIBLUBID       ERROR (UNIT BIGGER THAN     @D14BDGL 01055000
         BNL   TINR9C12            *      MAXIMUM)             @D51IDGL 01056000
TINFGLU2 DS    0H                ENDIF                         @D14BDGL 01057000
         AR    R3,R0             R3: POINTER TO LUB ENTRY IS   @D14BDGL 01058000
         AR    R3,R3             *   LUB NUMBER * 2 + BASE OF  @D14BDGL 01059000
         A     R3,PCEALUB        *   LUBTAB+OFFSET OF 1.ENTRY  @D51IDGL 01060000
         CLI   1(R3),X'FF'       RETURN IF ((UNIT IS NORMALLY  @D51IDGL 01061000
         BNE   4(R9)             *  ASSIGNED, I.E. EITHER 2ND  @D51IDGL 01062000
         CLI   0(R3),TINFIGN     *  BYTE NOT FF)|(1ST NOT      @D51IDGL 01063000
         BL    4(R9)             *  LESS THAN FE)) ==========>>@D51IDGL 01064000
         BH    TINR9C08          ERROR (UNIT IS UNASSIGNED)    @D51IDGL 01065000
         B     TINR9C04          ERROR (UNIT ASSGNED IGNORE)   @D51IDGL 01066000
         DROP  R2                DROP PIBADR                   @D61NDOW 01067000
         DROP  R5                DROP PCBADR                   @D61NDOW 01068000
***************************************************************         01069000
*  CODEBLOCK TINFCKPU                                         *         01070000
*  FUNCTION: VALIDATE A PHYSICAL UNIT (I.E. PUB INDEX)        *         01071000
*  ON ENTRY:                                                  *         01072000
*    R0 = PUB INDEX, WHICH IS TO BE VALIDATED                 *         01073000
*  ON EXIT TO 4(R9):                                          *         01074000
*    R3 = PUB INDEX                                           *         01075000
*  ON EXIT TO TINR9C16: PUBINDEX WAS INVALID                  *         01076000
***************************************************************         01077000
*SGLINK  TINFCKPU,INPUT=(R0,R9,RC),OUTPUT=R3                            01078000
TINFCKPU DS    0H                                                       01079000
         LTR   R3,R0             IS THIS A VALIB PUB INDEX     @DAOM024 01080000
         BM    TINR9C16          NO,                           @D14BDFG 01081000
         CH    R3,IJBNDEV        IS IT A VALID INDEX           @D14BDGL 01082000
         BL    4(,R9)            YES, RETURN                   @D21FDGL 01083000
         B     TINR9C16          INVALID PUB INDEX             @D14BDGL 01084000
***************************************************************         01085000
*  TINFGPUB                                                   *         01086000
*  FUNCTION: RETURN PUB ADDRESS FOR GIVEN PUB INDEX           *         01087000
*  ON ENTRY:                                                  *         01088000
*    R3 = PUB INDEX                                           *         01089000
*  ON EXIT TO R9:                                             *         01090000
*    R7 = PTR TO ENTRY IN PUB TABLE                           *         01091000
***************************************************************         01092000
*SGLINK  TINFGPUB,INPUT=(R3,R9,RC),OUTPUT=R7                            01093000
TINFGPUB DS    0H                                                       01094000
         LR    R7,R3             COPY PUB INDEX                @D14BDWK 01095000
         SLL   R7,3              MULTIPLY WITH PUB-ENTRY LENGTH@D14BDWK 01096000
         AH    R7,YPUBTAB        ADD PUBTAB                    @D14BDWK 01097000
         BR    R9                RETURN =====================>>@D14BDWK 01098000
***************************************************************@D61ADGL 01099000
*  TINFCUUP                                                   *@D61ADGL 01100000
*  FUNCTION: PROVIDE PUB-INDEX FOR A GIVEN CUU                *@D61ADGL 01101000
*                                                             *@D61ADGL 01102000
*  ON ENTRY:                                                  *@D61ADGL 01103000
*    R0 = CUU VALUE                                           *@D61ADGL 01104000
*                                                             *@D61ADGL 01105000
*  ON EXIT TO R9+0:                                           *@D61ADGL 01106000
*    ERROR EXIT           CUU NOT FOUND                       *@D61ADGL 01107000
*  ON EXIT TO R9+4:                                           *@D61ADGL 01108000
*    COMPLETED            R3= PUB INDEX                       *@D61ADGL 01109000
***************************************************************@D61ADGL 01110000
*SGLINK  TINFCUUP,INPUT=(R0,R9,RC),WORK=(R1,R8,RA),OUTPUT=R3            01111000
TINFCUUP DS    0H                CALCULATE PUB INDEX FOR CUU   @D61ADGL 01112000
         LH    R7,YPUBTAB        ADDRESS OF PUB-TABLE          @D28ADAP 01113000
         USING PUBADR,R7         PUB BASE POINTER              @D28ADAP 01114000
         SLR   R3,R3             CLEAR PUB INDEX REGISTER      @D28ADAP 01115000
TINFCU20 CLI   PUBCHANN,XFF      IS THIS PUB-TABLE END         @D28ADAP 01116000
         BE    TINFCU40          YES,                          @D28ADAP 01117000
         CH    R0,PUBCHANN       IS THIS THE RIGHT PUB         @D28ADAP 01118000
         BE    4(,R9)            YES, ======================>  @D28ADAP 01119000
         LA    R7,NEXTPUB        POINT TO NEXT PUB             @D28ADAP 01120000
         LA    R3,1(,R3)         NEXT PUB INDEX                @D28ADAP 01121000
         B     TINFCU20                                        @D28ADAP 01122000
TINFCU40 SLR   R3,R3             SET PUB INDEX TO 000          @D28ADAP 01123000
         BCTR  R3,0              INVALIDATE PUB INDEX          @D28ADAP 01124000
         B     0(,R9)            ERR, ======================>  @D28ADAP 01125000
         DROP  R7                RELEASE PUB BASE POINTER      @D28ADAP 01126000
         AGO   .SKIP020          SKIP OLD CODE                 @D28ADAP 01127000
         L     RA,AINTER         IOINTER BASE ADDRESS          @D61ADGL 01128000
         USING INTRTN,RA         IOINTER BASE POINTER          @D61ADGL 01129000
         L     R8,AINTTAB1       GET ADDRESS OF MAIN TABLE     @D61ADGL 01130000
         ICM   R8,8,F0           PURGE UNUSED BYTE             @D61ADGL 01131000
         LA    R1,XFF            LOAD MASK                     @D61ADGL 01132000
         NR    R1,R0             LEAVE (C)UU PORTION ONLY      @D61ADGL 01133000
         AIF   (&AG1 LE 254).LOD0300 ......................... @D61ADGL 01134000
         LA    R3,0(R1,R1)       POINT TO PUB-INDEX            @D61ADGL 01135000
         LH    R3,0(R8,R3)       GET PUB INDEX                 @D61ADGL 01136000
.LOD0300 AIF   (&AG1 GT 254).LOD0301 ......................... @D61ADGL 01137000
         XR    R3,R3             CLEAR REGISTER                @D61ADGL 01138000
         IC    R3,0(R8,R1)       GET PUB PUB-INDEX             @D61ADGL 01139000
.LOD0301 ANOP  ............................................... @D61ADGL 01140000
         LTR   R3,R3             WAS UNIT ADDRESS UNIQUE       @D61ADGL 01141000
         BP    TINFCUP9          YES, WE ARE DONE              @D61ADGL 01142000
         AIF   (&AG1 LE 254).LOD0305 ......................... @D61ADGL 01143000
         BM    0(R9)             UNKNOWN=====================> @D61ADGL 01144000
.LOD0305 ANOP  ............................................... @D61ADGL 01145000
         C     R3,AINTTAB2       DOES SECOND LEVEL TAB EXIST   @D61ADGL 01146000
         BE    0(,R9)            NO,  ======================>  @D61ADGL 01147000
         A     R1,AINTTAB2       SECOND LEVEL TABLE ADDRESS    @D61ADGL 01148000
         ICM   R1,8,F0           PURGE UNUSED BYTE             @D61ADGL 01149000
         IC    R3,0(R1)          GET LINE ENTRY NUMBER         @D61ADGL 01150000
         LTR   R3,R3             IS THERE A LINE ENTRY         @D61ADGL 01151000
         AIF   (&AG1 LE 254).LOD0308 ......................... @D61ADGL 01152000
         BNZ   TINFCUP2          YES,                          @D61ADGL 01153000
         LA    R3,256            GET ROW NUMBER (01 THROUGH 256@D61ADGL 01154000
         AGO   .YMDEV40                                        @D61ADGL 01155000
.LOD0308 ANOP  ............................................... @D61ADGL 01156000
         BZ    0(,R9)            NO,  ======================>  @D61ADGL 01157000
.YMDEV40 ANOP  ............................................... @D61ADGL 01158000
TINFCUP2 BCTR  R3,0              ABSOLUTE LINE ENTRY NUMBER    @D61ADGL 01159000
         LR    R1,R3             COPY LINE ENTRY NUMBER        @D61ADGL 01160000
         LR    R3,R0             GET CUU ADDRESS               @D61ADGL 01161000
         SRL   R3,8              LEAVE CHANNEL PORTION ONLY    @D61ADGL 01162000
         AIF   (&AG1 LE 254).LOD0310 ......................... @D61ADGL 01163000
         AR    R3,R3             EACH ENTRY IS TWO BYTES       @D61ADGL 01164000
         SLL   R1,5              MULTIPLY WITH LINE ENTRY LEN  @D61ADGL 01165000
         A     R1,AINTTAB3       ADDRESS OF PUB INDEX          @D61ADGL 01166000
         ICM   R1,8,F0           PURGE UPPERMOST BYTE OF ADDR. @D61ADGL 01167000
         LH    R3,0(R3,R1)       GET PUB INDEX                 @D61ADGL 01168000
.LOD0310 AIF   (&AG1 GT 254).LOD0311 ......................... @D61ADGL 01169000
         SLL   R1,4              MULTIPLY WITH LINE ENTRY LEN  @D61ADGL 01170000
         A     R1,AINTTAB3       ADD TAB3 BEGIN ADDRESS        @D61ADGL 01171000
         ICM   R1,8,F0           PURGE UPPERMOST BYTE OF ADDR. @D61ADGL 01172000
         IC    R3,0(R3,R1)       GET PUB INDEX                 @D61ADGL 01173000
.LOD0311 ANOP  ............................................... @D61ADGL 01174000
         LTR   R3,R3             IS THERE AN ENTRY NO. AT ALL  @D61ADGL 01175000
         BZ    0(,R9)            NO,  ======================>  @D61ADGL 01176000
TINFCUP9 BCTR  R3,0              PUB INDEX                     @D61ADGL 01177000
         LR    R8,R9             SAVE RETURN REGISTER          @DAOM    01178000
         BAL   R9,TINFGPUB       GET POINTER TO PUB            @DAOM    01179000
*SGLINK  TINFGPUB,INPUT=(R3,R9,RC),OUTPUT=R7                   @DAOM    01180000
         LR    R9,R8             RESTORERETURN REGISTER        @DAOM    01181000
         CH    R0,0(R7)          IS IT THE RIGHT PUB           @DAOM    01182000
         BE    4(,R9)            YES, =======================>>@D61ADGL 01183000
         B     0(,R9)            NO,  ======================>  @DAOM    01184000
         DROP  RA                DROP IOINTER BASE ADDRESS     @D61ADGL 01185000
.SKIP020 ANOP                                                           01186000
***************************************************************         01187000
*  TINFGPB2                                                   *         01188000
*  FUNCTION: RETURN PUB2 POINTER FOR A GIVEN PUB INDEX        *         01189000
*  ON ENTRY:                                                  *         01190000
*    R3 = PUB INDEX                                           *         01191000
*  ON EXIT TO R9:                                             *         01192000
*    R8 = PTR TO ENTRY IN PUB2 TABLE                          *         01193000
***************************************************************         01194000
*SGLINK  TINFGPB2,INPUT=(R3,R9,RC),OUTPUT=R8                            01195000
TINFGPB2 DS    0H                GET PUB2 ADDRESS                       01196000
         LA    R8,0(R3,R3)       PUB INDEX TIMES TWO           @D52VDGL 01197000
         AR    R8,R8             OFFSET WITHIN ADDRESS VECTOR  @D52VDGL 01198000
         A     R8,APB2AREA       ADDRESS OF PUB2 ADDRESS       @D52VDGL 01199000
         L     R8,0(,R8)         ADDRESS OF PUB2               @D52VDGL 01200000
         BR    R9                RETURN =====================>>@D52VDGL 01201000
***************************************************************         01202000
*  CODEBLOCK TINFGPBX                                         *         01203000
*  FUNCTION: TRANSFORM A PUB INDEX INTO PUBX POINTER          *         01204000
*  ON ENTRY:                                                  *         01205000
*    R3 = PUB INDEX                                           *         01206000
*  ON EXIT TO R9:                                             *         01207000
*    R4 = PTR TO ENTRY IN PUBX TABLE                          *         01208000
***************************************************************         01209000
*SGLINK  TINFGPBX,INPUT=(R3,R9,RC),OUTPUT=R4                            01210000
TINFGPBX DS    0H                                                       01211000
         LR    R4,R3             R4: PTR TO PUBX IS IN VECTOR  @D14BDFG 01212000
         SLL   R4,PBXISLEN       *   TABLE PBXAREA AT POSITION @D14BDFG 01213000
         A     R4,APBXAREA       *   PUB INDEX * 4             @D14BDFG 01214000
         L     R4,0(R4)          *                             @D14BDFG 01215000
         BR    R9                RETURN =====================>>@D14BDFG 01216000
***************************************************************         01217000
*  CODEBLOCK TINFGPCB                                         *         01218000
*  FUNCTION: TRANSFORM A PIK INTO A PCB POINTER. THERE IS     *         01219000
*    ALWAYS A PCB FOR A STATIC PARTITION.                     *         01220000
*  ON ENTRY:                                                  *         01221000
*    R2 = PIK                                                 *         01222000
*  ON EXIT TO 0(R9):   DYNAMIC PARTITION IS NOT ALLOCATED     *         01223000
*  ON EXIT TO 4(R9):   STATIC  PARTITION IS NOT ALLOCATED     *         01224000
*  ON EXIT TO 8(R9):   PCB IS THERE, PARTITION IS ALLOCATED.  *         01225000
*    R5 = PTR TO PCB                                          *         01226000
***************************************************************         01227000
*SGLINK  TINFGPCB,INPUT=(R2,R9,RC),OUTPUT=R5                            01228000
TINFGPCB DS    0H                                                       01229000
         LR    R5,R2             R5: PTR TO PCB IS IN VECTOR   @D14BDGL 01230000
         SRL   R5,2              *   TABLE APCBATAB AT POSITION@D14BDGL 01231000
         A     R5,APCBATAB       *   PIK / 4                   @D51IDGL 01232000
         L     R5,0(R5)          *                             @D51IDGL 01233000
         LTR   R5,R5             ERROR (PCB OF DYNAMIC PART.   @D51IDGL 01234000
         BZR   R9                *      IS NOT ALLOCATED)      @D51IDGL 01235000
         USING PCBADR,R5            *                          @D61NDOW 01236000
         CLC   SMVPBEG(4),F0     RETURN IF (PCB BELONGS TO     @D51IDGL 01237000
         BNE   8(,R9)            *          ALLOCATED PART.)   @D51IDGL 01238000
         LTR   R2,R2             RETURN IF (PCB BELONGS TO     @D51IDGL 01239000
         BZ    8(,R9)            *          SYSTEM PARTITION)  @D51IDGL 01240000
         TM    SYSFLAG2,X'01'    RETURN IF (IT IS BG IN IPL)   @D51IDGL 01241000
         BO    8(,R9)            *                             @D51IDGL 01242000
         B     4(,R9)            ERROR (STATIC P. NOT ALLOC.)  @D51IDGL 01243000
         DROP  R5                DROP PCBADR                   @D61NDOW 01244000
*                                END OF CONTROLBLOCK                    01245000
***************************************************************         01246000
*  CODEBLOCK TINFPCNT                                         *         01247000
*  FUNCTION: GET ADDRESS OF DEVICE USAGE COUNTER.             *         01248000
*  ON ENTRY:                                                  *         01249000
*    R4 = PTR TO PUBX OF DEVICE                               *         01250000
*    R5 = PTR TO PCB OF PARTITION OWNING THE DEVICE           *         01251000
*  ON EXIT TO R9:                                             *         01252000
*    R7 = PTR TO DEVICE USAGE COUNT BLOCK                     *         01253000
***************************************************************         01254000
         USING PBXADR,R4         *                             @D61NDOW 01255000
         USING PCBADR,R5         *                             @D61NDOW 01256000
*SGLINK  TINFPCNT,INPUT=(R4,R5,R9,RC),OUTPUT=R7                         01257000
TINFPCNT DS    0H                                                       01258000
         LA    R7,PBXUSCNT       GET USAGE COUNTER             @D14BDFG 01259000
         TM    PBXFLAG1,PBXSHR   IS THIS A SHARABLE DEVICE     @D14BDFG 01260000
         BZR   R9                NO,                           @D14BDFG 01261000
         L     R7,PCBCNT         GET COUNTER OFFSET            @D14BDFG 01262000
         A     R7,PBXUSCNT       ADD USE-COUNTERS BEGIN ADDRESS@D14BDFG 01263000
         BR    R9                RETURN =====================>>@D14BDFG 01264000
         DROP  R4                DROP PBXADR                   @D61NDOW 01265000
         DROP  R5                DROP PCBADR                   @D61NDOW 01266000
***************************************************************         01267000
*  CODEBLOCK TINFCKOW                                         *         01268000
*  FUNCTION: CHECK IF DEVICE IS OWNED BY NO, ONE OR MULTIPLE  *         01269000
*    OWNERS (PARTITIONS). THE INFORMATION IS TAKEN FROM THE   *         01270000
*    TABLE PUBOWNER OR PUBOWNX.                               *         01271000
*  ON ENTRY:                                                  *         01272000
*    R3 = PUBINDEX OF DEVICE                                  *         01273000
*    R4 = PTR TO PUBX OF DEVICE                               *         01274000
*    R5 = PTR TO PCB OF PARTITION OWNING THE DEVICE           *         01275000
*  ON EXIT TO R9:                                             *         01276000
*    R1 = PIK OF UNIQUE OWNER, IF ANY                         *         01277000
*    RF = RETURN CODE: 0-NO OWNER                             *         01278000
*                      4-UNIQUE OWNER                         *         01279000
*                      8-MULTIPLE OWNER                       *         01280000
*    R0,R2,R7,R8,RB = WORK                                    *         01281000
***************************************************************         01282000
.**************************************************************#SECURGL 01283000
.*                                                             @PBXOWGL 01284000
.* EXPLANATION OF HOW THE PBXOWNER FIELD IS TREATED HERE:      @PBXOWGL 01285000
.* THE FIELD CONTAINS THE OWNER OF THAT LAST PIK FOR WHICH     @PBXOWGL 01286000
.* THE MOUNTFLAG FOR A REMOVABLE DEVICE WAS SET TO ONE.        @PBXOWGL 01287000
.* THE FIELD IS NOT RESET TO ZERO, WHEN THE MOUNTFLAG IS       @PBXOWGL 01288000
.* RESET BUT THIS IS ONLY FOR DEBUGGING REASONS. IT IS ONLY    @PBXOWGL 01289000
.* RELEVANT, IF THE MOUNTFLAG IS SET. A MOUNT FLAG CAN ONLY    @PBXOWGL 01290000
.* BE SET IF THERE IS NO OWNER OR THE CALLER IS THE UNIQUE     @PBXOWGL 01291000
.* OWNER OF THIS DEVICE. THE FIELD IS AN INDICATION OF         @PBXOWGL 01292000
.* OWNERSHIP, ALTHOUGH THE CORRESPONDING PUB OWNER TABLE BIT   @PBXOWGL 01293000
.* IS NOT SET (!!!). IN OTHER WORDS, WHEN THE MOUNTFLAG IS     @PBXOWGL 01294000
.* RESET, THE PUBOWNERSHIP (IF IT WAS ESTABLISHED) IS NOT      @PBXOWGL 01295000
.* RESET IN THE PUBOWNER BIT STRING.                           @PBXOWGL 01296000
.* THE FIELD WAS FORMERLY USED BY DEVUSE AND DEVREL ALSO.      @PBXOWGL 01297000
.* IT SHOULD ENSURE, THAT FOR A NON SHARABLE DEVICE THERE IS   @PBXOWGL 01298000
.* ONLY ONE USER THAT IS INCREMENTING AND DECREMENTING THE     @PBXOWGL 01299000
.* DEVICE USAGE COUNTER. A NON SHARABLE DEVICE SHOULD NOT      @PBXOWGL 01300000
.* BE DEVUSED BY ONE PARTITION AND DEVRELLED BY ANOTHER.       @PBXOWGL 01301000
.* PBXOWNER WAS USED AS A SHORTCUT TO IDENTIFY THE OWNER.      @PBXOWGL 01302000
.*                                                             @PBXOWGL 01303000
*SGLINK  TINFCKSP,INPUT=(R3,R4,R9,RC),WORK=(R0,R2,R7,R8,RB),           *01304000
               OUTPUT=(R1,RF)                                  @D62NDAP 01305000
         USING PBXADR,R4         PUBX BASE POINTER             @D61NDOW 01306000
TINFCKSP DS    0H                                              @DA44069 01307000
         ST    R9,TINFSVRT       SAVE RETURN REGISTER          @DA44069 01308000
         SLR   R9,R9             INDICATE SPECIAL CALL         @DA44069 01309000
         B     TINCK00A                                        @DA44069 01310000
*SGLINK  TINFCKOW,INPUT=(R3,R4,R9,RC),WORK=(R0,R2,R7,R8,RB),           *01311000
               OUTPUT=(R1,RF)                                  @D62NDAP 01312000
TINFCKOW DS    0H                                                       01313000
         ST    R9,TINFSVRT       SAVE RETURN REGISTER          @D14BDFG 01314000
TINCK00A LH    R1,PBXOWNER       GET PUB OWNER                 @DA44069 01315000
         TM    PBXFLAG2,PBXMTFLG IS MOUNT ALREADY PENDING      @PBXOWGL 01316000
         BO    TINCK0A0          YES,                          @DA44069 01317000
         TM    PBXFLAG,PBXTAPE   IS THIS A TAPE DEVICE         @D61ADGL 01318000
         BNO   TINCKO00          NO,                           @D61ADGL 01319000
         ICM   R7,15,PBXLBINF    IS MOUNT INFORMATION PRESENT  @D61ADGL 01320000
         BZ    TINCKO00          NO,                           @D61ADGL 01321000
         USING TLMADR,R7         TMLADR BASE POINTER           @D61ADGL 01322000
         CLI   TLMMSTAT,X'00'    IS MOUNT STILL ONGOING        @D61ADRP 01323000
         BNE   TINCK0A0          YES,                          @DA44069 01324000
TINCKO00 SLR   R1,R1             CLEAR REGISTER                @D61ADGL 01325000
         DROP  R7                RELEASE TMLADR BASE           @D61ADGL 01326000
         BAL   R9,TINFPOWN       GET PUB-OWNER ENTRY ADDRESS   @D14BDFG 01327000
*SGLINK  TINFPOWN,INPUT=(R3,R9,RC),OUTPUT=R7                            01328000
         L     R9,TINFSVRT       RESTORE RETURN REG            @D51IDGL 01329000
         AIF   (&AG1 GT 254).LOD0000                           @D51ODGL 01330000
.*                                                             @D51ODGL 01331000
.*  IN ESA 120 THE VTAM FLAG IS NOT SET ANY MORE.              @D51ODGL 01332000
.*                                                             @D51ODGL 01333000
         TM    0(R7),TINFVMSK    IS IT A VTAM OWNED DEVICE     @D14BDFG 01334000
         BZ    TINCKO10          NO,                           @D14BDFG 01335000
         TM    IJBTCAVT,IJBTCACT IS VTAM STILL ACTIVE          @D61NDMZ 01336000
         BZ    TINCKO10          NO,                           @D61NDMZ 01337000
         L     R8,IJBTCAVT       VTAM ADDRESS VECTOR           @D61NDMZ 01338000
         LH    R8,ISTTSKID-ISTAVT(,R8) GET TASK-ID             @D61NDMZ 01339000
         SLL   R8,2              MULTIPLY WITH FOUR            @D66IDAP 01340000
         AL    R8,ATIBATAB       ADDRESS OF TIB ADDRESS        @D66IDAP 01341000
         L     R8,0(,R8)         ADDRESS OF TIB                @D66IDAP 01342000
         USING TIBADR,R8         TIB BASE POINTER              @D61NDOW 01343000
         LH    R1,TIBRPIK        GET PIK OF VTAM PARTITION     @D14BDFG 01344000
         DROP  R8                RELEASE TIB BASE              @D61NDOW 01345000
         B     TINR9C04          UNIQUE======================> @D14BDGL 01346000
.LOD0000 ANOP                                                  @D51ODGL 01347000
TINCKO10 SLR   RF,RF             ASSUME NO OWNER               @D14BDFG 01348000
         L     R0,TINFCKMO       ALL VALID OWNER BITS          @D51IDGL 01349000
         N     R0,0(,R7)         ANY OWNER EXCEPT US           @D51IDGL 01350000
         BZR   R9                NONE =======================> @D51IDGL 01351000
         L     R0,TINFCKMS       VALID STATIC+SYSTEM OWNER BITS@D51IDGL 01352000
         N     R0,0(R7)          ANY STATIC OR SYSTEM OWNER    @D51IDGL 01353000
         BZ    TINCKO40          NO,                           @D51IDGL 01354000
         TM    0(R7),X'40'       ALSO ANY DYNAMIC OWNER        @D51IDGL 01355000
         BO    TINR9C08          MULTIPLE====================> @D51IDGL 01356000
         TM    0(R7),X'10'       IS SYSTEM THE OWNER           @D51IDGL 01357000
         BNO   TINCK015          NO,                           @D51IDGL 01358000
         LA    RF,4              INDICATE SINGLE OWNER         @D51IDGL 01359000
         L     R0,TINFCKMP       VALID STATIC OWNER BITS       @D51IDGL 01360000
         N     R0,0(,R7)         ANY OWNER EXCEPT US           @D51IDGL 01361000
         BZR   R9                NO,  =======================> @D51IDGL 01362000
TINCK015 DS    0H                                              @D51IDGL 01363000
         L     R8,TINFCKMB       INITIALIZE TO BG OWNER        @D51IDGL 01364000
         LA    R2,X'10'          INITIALIZE TO BG PIK          @D51IDGL 01365000
         LA    RB,12             SET LOOP COUNT                @D51IDGL 01366000
TINCKO20 LR    R0,R8             COPY OWNER BIT                @D51IDGL 01367000
         N     R0,0(R7)          IS THIS THE OWNER             @D51IDGL 01368000
         BZ    TINCKO30          NO, KEEP GOING                @D51IDGL 01369000
         CH    RF,H4             DID WE ALREADY FIND AN OWNER  @D51IDGL 01370000
         BNL   TINR9C08          MULTIPLE====================> @D51IDGL 01371000
         LR    R1,R2             SAVE THE PIK                  @D51IDGL 01372000
         LA    RF,4              INDICATE UNIQUE OWNER         @D51IDGL 01373000
TINCKO30 SLL   R8,1              PROVICE FOR NEXT OWNER TEST   @D51IDGL 01374000
         LA    R2,16(R2)         PROVIDE FOR NEXT PIK          @D51IDGL 01375000
         BCT   RB,TINCKO20       CHECK ALL STATIC PARTITIONS   @D51IDGL 01376000
         BR    R9                DONE =======================> @D51IDGL 01377000
TINCKO40 DS    0H                                              @D51IDGL 01378000
         LR    R8,R3             COPY PUB INDEX                @D51IDGL 01379000
         MH    R8,IJBPWNXL       MULTIPLY WITH ENTRY LENGTH    @D51IDGL 01380000
         A     R8,IJBPOWNX       ADDRESS OF PUBOWNER EXTENTION @D51IDGL 01381000
         LR    R0,R7             SAVE OWNER ENTRY ADDRESS      @DY45385 01382000
         L     R7,DISPAD         DISP BASE ADDRESS             @D51IDGL 01383000
         LH    R2,IJBPWNXL       GET PUBOWNER EXT. ENTRY LENGTH@D51IDGL 01384000
         BCTR  R2,0              ADJUST FOR EXECUTE            @D51IDGL 01385000
         EX    R2,TINFCKTR       ANY DYNAMIC OWNER             @D51IDGL 01386000
         BNZ   TINCKO50          YES,                          @D51IDGL 01387000
         AIF (NOT &BGDEBUG).GCKOW10                                     01388000
         BAL   R5,SYSERROR       GOTO HARD WAIT, CORRUP.TAB.   #DEBUGGL 01389000
.GCKOW10 ANOP                                                           01390000
         LR    R7,R0             RESTORE OWNER ENTRY ADDRESS   @DY45385 01391000
         LR    R1,RB             ??????                        @D51IDGL 01392000
         NI    0(R7),X'BF'       RESET OWNER BIT               @D51IDGL 01393000
         BR    R9                     =======================> @D51IDGL 01394000
TINCKO50 DS    0H                                              @D51IDGL 01395000
         LR    R7,R1             SAVE FOUND ADDRESS            @D51IDGL 01396000
         SRL   R2,2              DIVIDE BY FOUR                @D51IDGL 01397000
         SR    R1,R8             OFFSET WITHIN PUBOWN EXTENTION@D51IDGL 01398000
         SLL   R1,3              BYTE POSITION                 @D51IDGL 01399000
         LA    RB,&NPART.(R2,R1) *   POSITION IN BITSTRING     @D51IDGL 01400000
         SLL   RB,4              *                             @D51IDGL 01401000
         LR    R0,R8             SAVE PUBOWNER EXT. ADDRESS    @D51IDGL 01402000
         SLR   R1,R1             CLEAR REGISTER                @D52VDGL 01403000
         SLR   R8,R8             CLEAR REGISTER                @D52VDGL 01404000
         IC    R8,0(R7)          GET OWNER CONTENTS            @D52VDGL 01405000
         N     R8,0(R2)          ANY OTHER OWNER               @D52VDGL 01406000
         ORG   *-2                                             @D52VDGL 01407000
         DC    S(TINFCKTB-4)                                   @D52VDGL 01408000
         BNZ   TINR9C08          YES, =======================> @D52VDGL 01409000
         LR    R8,R7             COPY FOUND ADDRESS            @D51IDGL 01410000
         AL    R8,F1             POINT TO NEXT BYTE            @D51IDGL 01411000
         SR    R7,R0             OFFSET IN PUBOWNER ENTRY LIST @D51IDGL 01412000
         LNR   R2,R7             PROVIDE FOR SUBTRACTION       @D51IDGL 01413000
         AH    R2,IJBPWNXL       ADD EXTENTION ENTRY LENGTH    @D51IDGL 01414000
         BCTR  R2,0              ACORRECT THE ADDRESS          @D51IDGL 01415000
         LTR   R2,R2             ANY MORE BYTES LEFT           @D51IDGL 01416000
         BNP   TINCKO90          NO,                           @D51IDGL 01417000
         SLR   R1,R1             CLEAR REGISTERRETURN VALUE    @D51IDGL 01418000
         BCTR  R2,0              ADJUST FOR EXECUTE            @D51IDGL 01419000
         EX    R2,TINFCKOC       ANY MORE OWNERS               @D51IDGL 01420000
         BNZ   TINR9C08          YES, =======================> @D51IDGL 01421000
TINCKO90 DS    0H                                              @D51IDGL 01422000
         LR    R1,RB             ??????                        @D51IDGL 01423000
         B     TINR9C04          RETURN =====================> @D51IDGL 01424000
         SPACE 2                                                        01425000
TINCK0A0 DS    0H'0'                                           @DA44069 01426000
         LTR   R9,R9             CALLED FROM TINFGTOW          @DA44069 01427000
         BNZ   TINCK0B0          NO,                           @DA44069 01428000
         TM    PBXFLAG,PBXTAPE   IS THIS A TAPE DEVICE         @DA44069 01429000
         BNO   TINCK0B0          NO,                           @DA44069 01430000
         LTR   R2,R1             COPY AND CHECK THE PIK        @DA44069 01431000
         BZ    TINCK0B0          IT IS THE SYSTEM PIK          @DA44069 01432000
         BAL   R9,TINFGPCB       GET PCB ADDRESS               @DA44069 01433000
*SGLINK  TINFGPCB,INPUT=(R2,R9,RC),OUTPUT=R5                   @DA44069 01434000
         B     TINCK0B0        0 DYNAMIC PARTITION NOT THERE   @DA44069 01435000
         B     TINCK0B0        4 STATIC PARTITION  NOT THERE   @DA44069 01436000
         USING PCBADR,R5         PCB BASE POINTER              @DA44069 01437000
         TM    PCBSSFLG,PWR    8 POWER IS OWNER                @DA44069 01438000
         BZ    TINCK0B0          NO,                           @DA44069 01439000
         L     R9,TINFSVRT       RESTORE RETURN REGISTER       @DA44069 01440000
         L     R8,TIBPTR         TIB BASE ADDRESS              @DA44069 01441000
         USING TIBADR,R8         TIB BASE POINTER              @DA44069 01442000
         TM    TIBFLAG2,PWRMTASK IS POWER THE REQUESTOR        @DA44069 01443000
         BO    TINCKO00          YES, =======================> @DA44069 01444000
TINCK0B0 L     R9,TINFSVRT       RESTORE RETURN REGISTER       @DA44069 01445000
         B     TINR9C04          EXIT                          @DA44069 01446000
         DROP  R8                DROP TIB BASE                 @DA44069 01447000
         DROP  R5                DROP PCB BASE                 @DA44069 01448000
         DROP  R4                DROP PBXADR                   @D61NDOW 01449000
TINFCKTR TRT   0(*-*,R8),PREXTTAB-DISP(R7)                     @D51IDGL 01450000
TINFCKOC OC    0(*-*,R8),0(R8)                                 @D51IDGL 01451000
         DS    0F                                              @D51IDGL 01452000
TINFCKTB DC    B'01111111'       . FOR 'ANY OTHER BIT SET?'    @D52VDGL 01453000
         DC    B'10111111'       . FOR 'ANY OTHER BIT SET?'    @D52VDGL 01454000
         DC    B'11011111'       . FOR 'ANY OTHER BIT SET?'    @D52VDGL 01455000
         DC    B'11101111'       . FOR 'ANY OTHER BIT SET?'    @D52VDGL 01456000
         DC    B'11110111'       . FOR 'ANY OTHER BIT SET?'    @D52VDGL 01457000
         DC    B'11111011'       . FOR 'ANY OTHER BIT SET?'    @D52VDGL 01458000
         DC    B'11111101'       . FOR 'ANY OTHER BIT SET?'    @D52VDGL 01459000
         DC    B'11111110'       . FOR 'ANY OTHER BIT SET?'    @D52VDGL 01460000
TINFCKMO DC    X'5FFF0000'       . FOR 'ANY OWNER AT ALL?'     @D51IDGL 01461000
TINFCKMS DC    X'1FFF0000'       . FOR 'STATIC OR SYSTEM?'     @D51IDGL 01462000
TINFCKMP DC    X'0FFF0000'       . FOR 'ANY STATIC OWNER?'     @D51IDGL 01463000
TINFCKMB DC    X'00010000'       . FOR 'WHICH STATIC OWNER?'   @D51IDGL 01464000
***************************************************************         01465000
*  CODEBLOCK TINFSETO                                         *         01466000
*  FUNCTION: SET OWNERSHIP BIT FOR SPECIFIED DEVICE AND       *         01467000
*    PARTITION                                                *         01468000
*  ON ENTRY: SEE STANDARD CONVENTION ABOVE                    *         01469000
*    R2 = PIK OF PARTITION                                    *         01470000
*    R3 = PUBINDEX OF DEVICE                                  *         01471000
*    R4 = PTR TO PUBX OF DEVICE                               *         01472000
*    RA = RETURN REGISTER                                     *         01473000
*  ON EXIT TO RA: BIT IS RESET                                *         01474000
*    R0,R7,R8,R9,RB = WORK                                    *         01475000
***************************************************************         01476000
*SGLINK  TINFSETO,INPUT=(R2,R3,R4,RA,RC),WORK=(R0,R7,R8,R9,RB)          01477000
TINFSETO DS    0H                                              @D51IDGL 01478000
         BAL   R9,TINFGMSK       GET PART OWNERSHIP MASK       @D14BDFG 01479000
*SGLINK  TINFGMSK,INPUT=(R2,R3,R9,RC),WORK=R8,OUTPUT=(R0,RB)            01480000
         BAL   R9,TINFPOWN       POINT TO PUB OWNERSHIP        @D14BDFG 01481000
*SGLINK  TINFPOWN,INPUT=(R3,R9,RC),OUTPUT=R7                            01482000
         IC    R9,0(RB,R7)       SET                           @D14BDGL 01483000
         OR    R9,R0             OWNERSHIP BIT                 @D14BDGL 01484000
         STC   R9,0(RB,R7)       ON                            @D14BDGL 01485000
         C     RB,F1             RETURN IF (PARTITION WAS      @D51IDGL 01486000
         BNHR  RA                * STATIC)                     @D51IDGL 01487000
         OI    0(R7),X'40'       SET BIT IN OWNERSHIP          @D51IDGL 01488000
         BR    RA                RETURN TO CALLER              @D14BDFG 01489000
***************************************************************         01490000
*  CODEBLOCK TINFRESO                                         *         01491000
*  FUNCTION: RESET PUB OWNERSHIP BIT FOR SPECIFIED PARTITION  *         01492000
*    AND DEVICE.                                              *         01493000
*  ON ENTRY: SEE STANDARD CONVENTION ABOVE                    *         01494000
*    R2 = PIK OF PARTITION                                    *         01495000
*    R3 = PUBINDEX OF DEVICE                                  *         01496000
*    R4 = PUBX PTR OF DEVICE                                  *         01497000
*    RA = RETURN REGISTER                                     *         01498000
*  ON EXIT TO RA: BIT IS RESET                                *         01499000
*    R0,R7,R8,R9,RB = WORK                                    *         01500000
***************************************************************         01501000
*SGLINK  TINFRESO,INPUT=(R2,R3,R4,RA,RC),WORK=(R0,R7,R8,R9,RB)          01502000
TINFRESO DS    0H                                              @D51IDGL 01503000
         BAL   R9,TINFGMSK       CALL, GET OWNERSHIP MASK ===>>@D51IDGL 01504000
*SGLINK  TINFGMSK,INPUT=(R2,R3,R9,RC),WORK=R8,OUTPUT=(R0,RB)            01505000
         BAL   R9,TINFPOWN       CALL, FOR PUBOWNER TAB.ENTRY>>@D51IDGL 01506000
*SGLINK  TINFPOWN,INPUT=(R3,R9,RC),OUTPUT=R7                            01507000
         IC    R9,0(RB,R7)       SET PUBOWNERSHIP BIT BY       @D51IDGL 01508000
         X     R0,ADDRMASK       *  CONVERTING ALL BITS IN     @D51IDGL 01509000
         NR    R9,R0             *  MASK AND 'ANDING' THE BIT  @D51IDGL 01510000
         STC   R9,0(RB,R7)       *  OFF IN REGISTER            @D51IDGL 01511000
         C     RB,F1             IF (PARTITION IS DYNAMIC)     @D51IDGL 01512000
         BNH   TINRESO0          ***                           @D51IDGL 01513000
         LR    RB,R3               IF (BIT BEING SET OFF       @D51IDGL 01514000
         MH    RB,IJBPWNXL         *   IN PUBOWNER EXTENTSION  @D51IDGL 01515000
         A     RB,IJBPOWNX         *   TABLE IS THE LAST ONE   @D51IDGL 01516000
         LH    R9,IJBPWNXL         *   IN THIS ENTRY)          @D51IDGL 01517000
         BCTR  R9,0                *                           @D51IDGL 01518000
         EX    R9,TINRESOT         *                           @D51IDGL 01519000
         BNZ   TINRESO0            ***                         @D51IDGL 01520000
         NI    0(R7),X'FF'-X'40'     SET OFF "DYNAMIC USER" BIT@D51IDGL 01521000
*                                  ENDIF                       @D51IDGL 01522000
TINRESO0 DS    0H                ENDIF                         @D51IDGL 01523000
         BAL   R9,TINFRDEV        FREE DEVICE IF POSSIBLE      @D6X..RP 01524000
*SGLINK  TINFRDEV,INPUT=(R3,R4,R9,RC),WORK=R1                           01525000
         BR    RA                RETURN =====================>>@D51IDGL 01526000
TINRESOT OC    0(*-*,RB),0(RB)                                 @D51IDGL 01527000
***************************************************************         01528000
*  CODEBLOCK TINFGMSK                                         *         01529000
*  FUNCTION: GET PARTITION OWNERSHIP MASK AND OFFSET TO       *         01530000
*    CORRESPONDING BYTE IN PUBOWNERSHIP TABLE.                *         01531000
*    FOR A STATIC PARTITION RB IS 0 OR 1, FOR A DYNAMIC       *         01532000
*    PARTITION IT IS AT LEAST PUBOWNX-PUBOWNER TO ADDRESS THE *         01533000
*    FIRST BYTE OF THE PUBOWNX TABLE BY ADDRESS 0(RB,R7).     *         01534000
.*   THE FORMULA FOR THE OFFSET FROM THE FIRST ENTRY IN THE   *         01535000
.*   PUBOWNER TABLE TO THE FIRST ENTRY IN THE PUBOWNER EXT.   *         01536000
.*   TABLE IS CALCULATED BY:                                  *         01537000
.*   L = LENGTH OF PUBOWNER EXTENSION TABLE ENTRY             *         01538000
.*   M = NUMBER OF ENTRIES IN THE PUBOWNER TABLE              *         01539000
.*   X = PUBINDEX                                             *         01540000
.*   AP= ADDRESS OF 1ST BYTE OF PUBOWNER TABLE                *         01541000
.*   AX= ADDRESS OF 1ST BYTE OF PUBOWNER EXTENSION TABLE      *         01542000
.*   OFFSET = (M-N)*2+AX-AP-2*M+N*L                           *         01543000
.*          =  L*N -N-N+AX-AP                                 *         01544000
*  ON ENTRY:                                                  *         01545000
*    R2 = PIK OF PARTITION FOR WHICH MASK IS TO BE BUILT      *         01546000
*  ON EXIT TO R9:                                             *         01547000
*    R0 = LOW ORDER BYTE CONTAINS MASK BYTE, REST IS 0.       *         01548000
*    RB = FOUR BYTE OFFSET TO THE BYTE THE MASK BELONGS TO    *         01549000
***************************************************************         01550000
*SGLINK  TINFGMSK,INPUT=(R2,R3,R9,RC),WORK=R8,OUTPUT=(R0,RB)            01551000
TINFGMSK DS    0H                                              @D14BDFG 01552000
         SLR   R0,R0             CLEAR REGISTER                @D14BDGL 01553000
         IC    R0,TINFSMSK       ASSUME SYSTEM-OWNER FOR NOW   @D14BDFG 01554000
         LTR   RB,R2             IS THIS THE SYSTEM PARTITION  @D14BDFG 01555000
         BZR   R9                YES,                          @D14BDFG 01556000
         CH    R2,TINFHPIK       IS IT A DYNAMIC PARTITION     @D51IDHA 01557000
         BNH   TINFGMS1          NO,                           @D51IDHA 01558000
         LR    R0,R2             COPY PIK                      @D51IDGL 01559000
         SH    R0,TINF1DYN       SUBTRACT FIRST DYNPART        @D51IDGL 01560000
         SRL   R0,4              MASK OFFSET                   @D51IDGL 01561000
         LA    RB,7              SET UPPER SHIFT LIMIT         @D51IDGL 01562000
         NR    RB,R0             OUR CURRENT SHIFT VALUE       @D51IDGL 01563000
         LA    R0,X'80'          INITIALIZE MASK BIT           @D51IDGL 01564000
         SRL   R0,0(RB)          SHIFT MASK TO PROPER POSITION @D51IDGL 01565000
         LR    RB,R2               RB: MAKE OFFSET TO BYTE:    @D51IDGL 01566000
         SH    RB,TINF1DYN         *   SEE FORMULA ABOVE.      @D51IDGL 01567000
         SRL   RB,4+3              *   R3 IS PUBINDEX.         @D51IDGL 01568000
         LR    R8,R3               *   IJBPWNXL = LENGTH OF    @D51IDGL 01569000
         MH    R8,IJBPWNXL         *    PUBOWNER EXTENSION TAB.@D51IDGL 01570000
         SR    R8,R3               *   IJBPWONX = BEG. ADDR.OF @D51IDGL 01571000
         SR    R8,R3               *    PUBOWNER EXTENS. TABLE @D51IDGL 01572000
         A     RB,IJBPOWNX         *   PBOWNPTR = BEG. ADDR.OF @D51IDGL 01573000
         S     RB,PBOWNPTR         *    PUBOWNER TABLE.        @D51IDGL 01574000
         AR    RB,R8               *                           @D51IDGL 01575000
         BR    R9                  RETURN ===================>>@D51IDHA 01576000
TINFGMS1 DS    0H                ELSE  STATIC PARTITION        @D51IDHA 01577000
         LR    RB,R2               RB: TAKE THE SHIFT VALUE    @D14BDGL 01578000
         SRL   RB,4                *   FOR GENERATION OF THE   @D14BDGL 01579000
         BCTR  RB,0                *   MASK OUT OF A 1 BIT     @D14BDGL 01580000
         LA    R0,1                R0: GENERATE MASK IN THE TWO@D14BDGL 01581000
         SLL   R0,0(RB)            *   LOW ORDER BYTES         @D14BDGL 01582000
         LA    RB,1                RB: TAKE DEFAULT OFFSET     @D14BDGL 01583000
         C     R2,TINGMSKV         RETURN IF (PIK IS FOR 2ND   @D14BDGL 01584000
         BNHR  R9                  *      BYTE IN PUBOWNER TAB)@D14BDGL 01585000
         SLR   RB,RB               RB: TAKE OFFSET FOR 1ST BYTE@D14BDGL 01586000
         SRL   R0,8                R0: MAKE MASK IN FIRST BYTE @D14BDGL 01587000
         BR    R9                  RETURN ===================>>@D14BDGL 01588000
         DS    0F                .ALIGNMENT FOR MASK           @D14BDGL 01589000
TINGMSKV DC    A(8*X'10')        .LAST PIK IN 2ND BYTE OF OWNER@D14BDGL 01590000
***************************************************************         01591000
*  CODEBLOCK TINFPOWN                                         *         01592000
*  FUNCTION: GET POINTER TO ENTRY IN PUBOWNER TABLE.          *         01593000
*  ON ENTRY:                                                  *         01594000
*    R3 = PUB INDEX OF DEVICE, WHOSE ENTRY IS REQUIRED        *         01595000
*  ON EXIT TO R9:                                             *         01596000
*    R7 = PTR TO PUBOWNER TABLE ENTRY                         *         01597000
***************************************************************         01598000
*SGLINK  TINFPOWN,INPUT=(R3,R9,RC),OUTPUT=R7                            01599000
TINFPOWN DS    0H                                                       01600000
         LR    R7,R3             R7: POINTER IS POSITION       @D14BDWK 01601000
         AR    R7,R7             *   PUBINDEX * 2 PLUS         @D14BDWK 01602000
         A     R7,PBOWNPTR       *   BASE OF PUBOWNER TABLE    @D14BDWK 01603000
         BR    R9                RETURN =====================>>@D14BDWK 01604000
***************************************************************         01605000
*  CODEBLOCK TINFMTIB                                         *         01606000
*  FUNCTION: CALCULATE THE MAIN TASK TIB POINTER. FOR ICCF    *         01607000
*  PARTITIONS OR CICS UNDER ICCF TAKE THE CURRENT TIB.        *         01608000
*  ON ENTRY:                                                  *         01609000
*    R8 = CURRENT TIB POINTER                                 *         01610000
*  ON EXIT TO R9:                                             *         01611000
*    R8 = PTR TO TIB                                          *         01612000
*    R2,RA = WORK                                             *         01613000
***************************************************************         01614000
         USING TIBADR,R8           *                           @D61NDOW 01615000
*SGLINK  TINFMTIB,INPUT=(R8,R9,RC),WORK=(R2,RA),OUTPUT=R8               01616000
TINFMTIB DS    0H                                                       01617000
         TM    TIBFLAG2,ICCFPP      IS THIS THE ICCCF PARTITION@D14NDFG 01618000
         BOR   R9                   YES,                       @D14CDFG 01619000
         L     RA,TIBTCB            ADDRESS OF TCB             @D14CDFG 01620000
         USING TCBADR,RA            TCB BASE ADDRESS           @D61NDOW 01621000
         TM    TCBFLAGS,ICCFSVC     IS PARTITION ICCF CONTROL. @D14CDFG 01622000
         BOR   R9                   YES                        @D14CDFG 01623000
         L     R2,PIBPTR2           ADDRESS OF PIB             @D51IDIS 01624000
         USING PIB2ADR,R2           PIB BASE POINTER           @D51IDIS 01625000
         LH    R8,PIBMTID           GET TASK ID                @D14CDFG 01626000
         SLL   R8,2                 MULTIPLY WITH FOUR         @D66IDAP 01627000
         AL    R8,ATIBATAB          ADDRESS OF TIB ADDRESS     @D66IDAP 01628000
         L     R8,0(,R8)            ADDRESS OF TIB             @D66IDAP 01629000
         BR    R9                   RETURN TO CALLER           @D14CDFG 01630000
         DROP  R2                   DROP PIBPTR2               @D51IDIS 01631000
         DROP  R8                   DROP TIBADR                @D61NDOW 01632000
         DROP  RA                   DROP TCBADR                @D61NDOW 01633000
***************************************************************         01634000
*  CODEBLOCK TINFAUTS                                         *         01635000
*  FUNCTION: CHECK IF CALLER IS SYSTEM ROUTINE.               *         01636000
*  ON ENTRY TO TINFAUTV                                       *         01637000
*    R8 = POINTER TO TIB OF REQUESTOR                         *         01638000
*    R9 = RETURN ADDRESS FOR 'CALLER IS NOT SYSTEM ROUTINE'   *         01639000
*    RB = RETURN ADDRESS FOR 'CALLER IS SYSTEM ROUTINE'       *         01640000
*  FUNCTION: CHECK IF CALLER IS SYSTEM ROUTINE OR VENDOR      *         01641000
*  ON ENTRY TO TINFAUVE                                       *         01642000
*    RA = POINTER TO CURRENT TCB                              *         01643000
***************************************************************         01644000
         USING TIBADR,R8                                       @D61NDOW 01645000
         USING TCBADR,RA                                       @D61NDOW 01646000
*SGLINK  TINFAUVE,INPUT=(R8,R9,RA,RB,RC)                                01647000
TINFAUVE DS    0H                  RETURN (IF CALL WAS BY      @D52YDGL 01648000
         TM    TCBFLAG3,TCBVEND    *       VENDOR SUBSYSTEM)   @D52YDOW 01649000
         BOR   RB                  *                           @D52YDOW 01650000
         DROP  RA                  DROP TCBADR                 @D61NDOW 01651000
*SGLINK  TINFAUTS,INPUT=(R8,R9,RB,RC)                                   01652000
TINFAUTS DS    0H                                              @D14BDWK 01653000
         CLI   TINFRID+1,USERTID   USER TASK REQUEST           @D14BDWK 01654000
         BNER  RB                  NO,                                  01655000
         CLC   TID,ARTIDH          IS THIS A SYSTEM TASK       @D66IDAP 01656000
         BNHR  RB                  YES,                        @D36IDFG 01657000
         TM    TIBFL,PRIVILEG      PRIVILEGED PROGRAM          @D36IDFG 01658000
         BNZR  RB                  YES,                        @D36IDFG 01659000
         BR    R9                  RETURN, NO SUCH CASE        @D14BDWK 01660000
         DROP  R8                  DROP TIBADR                 @D61NDOW 01661000
***************************************************************         01662000
*  CODEBLOCK TINFAUTV                                         *         01663000
*  FUNCTION: CHECK FOR VTAM AUTHORIZATION.                    *         01664000
*  ON ENTRY:                                                  *         01665000
*    R9 = RETURN ADDRESS FOR 'CALLER IS NOT VTAM ROUTINE'     *         01666000
*    RB = RETURN ADDRESS FOR 'CALLER IS VTAM ROUTINE'         *         01667000
*    R5 = PCBPTR                                              *         01668000
*    RA = TCBPTR                                              *         01669000
***************************************************************         01670000
         USING PCBADR,R5                                       @D61NDOW 01671000
         USING TCBADR,RA                                       @D61NDOW 01672000
*SGLINK  TINFAUTV,INPUT=(R5,R9,RA,RB,RC)                                01673000
TINFAUTV DS    0H                                              @D36IDFG 01674000
         TM    PCBSSFLG,VTAM       RETURN IF ((VTAM PARTITION) @D36IDFG 01675000
         BOR   RB                  *         |(VTAM IN USER             01676000
         TM    VTAMFLG,VTAMK0      *           EXIT))          @D36IDFG 01677000
         BOR   RB                  *                                    01678000
         BR    R9                  RETURN, NO SUCH CASE                 01679000
         DROP  R5                  DROP PVBADR                 @D61NDOW 01680000
         DROP  RA                  DROP TCBADR                 @D61NDOW 01681000
***************************************************************         01682000
*  CODEBLOCK TINFAUTJ                                         *         01683000
*  FUNCTION: CHECK FOR JOB CONTROL AUTHORIZATION.             *         01684000
*  ON ENTRY:                                                  *         01685000
*    R9 = RETURN ADDRESS FOR 'CALLER IS NOT VTAM ROUTINE'     *         01686000
*    RB = RETURN ADDRESS FOR 'CALLER IS VTAM ROUTINE'         *         01687000
***************************************************************         01688000
*SGLINK  TINFAUTJ,INPUT=(R9,RB,RC),OUTPUT=R7                            01689000
TINFAUTJ DS    0H                                              @D37CDFG 01690000
         L     R7,CRADDR           GET COMREG ADDRESS          @D37CDFG 01691000
         USING COMREG,R7           COMREG BASE POINTER         @D37CDFG 01692000
         TM    JCSW5,JCLACTIV      IS JOB CONTROL ACTIVE       @D36IDFG 01693000
         BOR   RB                  YES,                        @D36IDFG 01694000
         BR    R9                  ERROR EXIT                  @D36IDFG 01695000
         DROP  R7                  RELEASE COMREG BASE         @D37CDFG 01696000
*---------------------------------------------------------------------- 01697000
*   DEVUSE/DEVREL AUTHORIZATION CHECK                          @D14BDFG 01698000
*          R9 - RETURN ADDRESS       RC - BASE REGISTER        @D51IDHA 01699000
*          R5 - PCBPTR                                         @D61NDOW 01700000
*---------------------------------------------------------------------- 01701000
         USING PCBADR,R5                                       @D61NDOW 01702000
TINFDAUT DS    0H                  CHECK AUTHORIZATION         @D14BDFG 01703000
         CLI   TINFRID+1,USERTID   IS THIS A USER TASK REQUEST @D14BDFG 01704000
         BNER  R9                  NO, LET IT GO               @D14BDFG 01705000
         TM    SYSFLAG2,IPLBIT     IS IPL ACTIVE               @D14BDFG 01706000
         BOR   R9                  YES, LET IT GO              @D14BDFG 01707000
         TM    PCBSSFLG,PWR        IS THIS THE POWER PARTITION @D14BDFG 01708000
         BOR   R9                  YES, HE IS AUTHORIZED       @D14BDFG 01709000
         B     TINFCNAU            NOT AUTHORIZED              @D51RMGL 01710000
         DROP  R5                  RELEASE PCBADR BASE         @D61NDOW 01711000
***************************************************************@D6X..RP 01712000
* CODEBLOCK TINFRDEV                                           @D6X..RP 01713000
* FUNCTION: FREE DEVICE IDENTIFIED BY R3 AND R4, IF NO OWNER   @D6X..RP 01714000
*   INPUT: R3 = PUBINDEX OF DEVICE                             @D6X..RP 01715000
*          R4 = PTR TO PUBX OF DEVICE                          @D6X..RP 01716000
*          R9 = RETURN ADDRESS                                 @D6X..RP 01717000
*          RC = 1ST BASE ADDRESS                               @D6X..RP 01718000
*   WORK REGISTER: R1                                          @D6X..RP 01719000
***************************************************************@D6X..RP 01720000
         USING PBXADR,R4                                       @D6X..RP 01721000
*SGLINK  TINFRDEV,INPUT=(R3,R4,R9,RC),WORK=R1                           01722000
TINFRDEV DS    0H                                              @D6X..RP 01723000
         TM    PBXFLAG,PBXTAPE    IS DEVICE A TAPE             @D6X..RP 01724000
         BZR   R9                 NO, =======================> @D6X..RP 01725000
         L     R1,TCBPTR                                       @D6X..RP 01726000
         USING TCBADR,R1                                       @D6X..RP 01727000
         STM   R0,RF,SVCSV3       SAVE CALLERS REGISTERS       @D6X..RP 01728000
         DROP  R1                                              @D6X..RP 01729000
         BAL   R9,TINFCKOW        CHECK DEVICE OWNER           @D6X..RP 01730000
*SGLINK  TINFCKOW,INPUT=(R3,R4,R9,RC),WORK=(R0,R2,R7,R8,RB),           *01731000
               OUTPUT=(R1,RF)                                  @D62NDAP 01732000
         LTR   RF,RF              EXISTS STILL AN OWNER        @D6X..RP 01733000
         BNZ   TINFRDV2           YES, DON'T FREE DEVICE       @D6X..RP 01734000
*                                 NO, FREE DEVICE              @D6X..RP 01735000
         L     RC,BASESERI        BASE FOR SGSERI              @D6X..RP 01736000
         USING SGSERI,RC                                       @D6X..RP 01737000
         L     RE,ASERUASG        GET ENTRY POINT ADDRESS      @D6X..RP 01738000
         BASSM RE,RE              CALL UNASSGN FUNCTION        @D6X..RP 01739000
*SGLINK SERUASGN INPUT=(R3,RC,RE),OUTPUT=(RF),WORK=(R0-RE)     @D6X..RP 01740000
         AIF (NOT &BGDEBUG).NODBG10 ...........................@D6X..RP 01741000
         BALR  RC,0                GET TEMPORARY ...           @D6X..RP 01742000
         USING *,RC                ... BASE                    @D6X..RP 01743000
         LTR   RF,RF               UNASSIGN O.K.               @D6X..RP 01744000
         BZ    TINFRDV1            YES, BRANCH                 @D6X..RP 01745000
         BAL   R5,SYSERROR         NO, ENTER HARD WAIT         @D6X..RP 01746000
TINFRDV1 DS    0H                                              @D6X..RP 01747000
         DROP  RC                  DROP TEMP. BASE             @D6X..RP 01748000
.NODBG10 ANOP  ................................................@D6X..RP 01749000
TINFRDV2 L     R1,TCBPTR                                       @D6X..RP 01750000
         USING TCBADR,R1                                       @D6X..RP 01751000
         LM    R0,RF,SVCSV3      RESTORE REGISTERS             @D6X..RP 01752000
         DROP  R1                                              @D6X..RP 01753000
         USING SGTINF,RC          RESET BASE                   @D6X..RP 01754000
         BR    R9                 ===========> RETURN          @D6X..RP 01755000
         DROP  R4                  DROP BASE FOR PBXADR        @D6X..RP 01756000
*                                  END OF CODEBLOCK            @D6X..RP 01757000
***************************************************************         01758000
*  CODEBLOCK TINSETRC                                         *         01759000
*  FUNCTION: SET RETURN CODE, AND RETURN VIA REGISTER 9       *         01760000
*  ON ENTRY TO (TINR9...):                                    *         01761000
*    R9 = RETURN REGISTER                                     *         01762000
***************************************************************         01763000
TINR9C00 SLR   RF,RF             SET RC=00                              01764000
         BR    R9                                                       01765000
TINR9C04 LA    RF,4              SET RC=04                              01766000
         BR    R9                *                                      01767000
TINR9C08 LA    RF,8              SET RC=08                              01768000
         BR    R9                *                                      01769000
TINR9C12 LA    RF,12             SET RC=12                              01770000
         BR    R9                *                                      01771000
TINR9C16 LA    RF,16             SET RC=16                              01772000
         BR    R9                *                                      01773000
TINX0C04 XC    TINFSAV0,TINFSAV0 ENSURE R0=0, R1=0 AND RC=04            01774000
TINX1C04 XC    TINFSAV1,TINFSAV1 ENSURE R1=0       AND RC=04            01775000
TINCOD04 LA    RF,4              SET RC=04                              01776000
         B     TINSET10          JOIN MAIN LINE                         01777000
TINX0C08 XC    TINFSAV0,TINFSAV0 ENSURE R0=0, R1=0 AND RC=08            01778000
TINX1C08 XC    TINFSAV1,TINFSAV1 ENSURE R1=0       AND RC=08            01779000
TINCOD08 LA    RF,8              SET RC=08                              01780000
         B     TINSET10          JOIN MAIN LINE                         01781000
TINX0C12 XC    TINFSAV0,TINFSAV0 ENSURE R0=0, R1=0 AND RC=12            01782000
TINX1C12 XC    TINFSAV1,TINFSAV1 ENSURE R1=0       AND RC=12            01783000
TINCOD12 LA    RF,12             SET RC=12                              01784000
         B     TINSET10          JOIN MAIN LINE                         01785000
TINX0C16 XC    TINFSAV0,TINFSAV0 ENSURE R0=0, R1=0 AND RC=16            01786000
TINX1C16 XC    TINFSAV1,TINFSAV1 ENSURE R1=0       AND RC=16            01787000
TINCOD16 LA    RF,16             SET RC=16                              01788000
         B     TINSET10          JOIN MAIN LINE                         01789000
TINX0C20 XC    TINFSAV0,TINFSAV0 ENSURE R0=0, R1=0 AND RC=20            01790000
TINX1C20 XC    TINFSAV1,TINFSAV1 ENSURE R1=0       AND RC=20            01791000
TINCOD20 LA    RF,20             SET RC=20                              01792000
         B     TINSET10          JOIN MAIN LINE                         01793000
TINX0C24 XC    TINFSAV0,TINFSAV0 ENSURE R0=0, R1=0 AND RC=20   @D68GAAP 01794000
TINX1C24 XC    TINFSAV1,TINFSAV1 ENSURE R1=0       AND RC=20   @D68GAAP 01795000
TINCOD24 LA    RF,24             SET RC=24                     @D68GAAP 01796000
         B     TINSET10          JOIN MAIN LINE                @D68GAAP 01797000
TINX0CRC XC    TINFSAV0,TINFSAV0 ENSURE R0=0, R1=0 AND RC=ANY           01798000
TINX1CRC XC    TINFSAV1,TINFSAV1 ENSURE R1=0       AND RC=ANY           01799000
         B     TINSET10          JOIN MAIN LINE                         01800000
TINX0C00 XC    TINFSAV0,TINFSAV0 ENSURE R0=0, R1=0 AND RC=00            01801000
TINX1C00 XC    TINFSAV1,TINFSAV1 ENSURE R1=0       AND RC=00            01802000
TINCOD00 SLR   RF,RF             SET RC=00                              01803000
TINSETRC DS    0H                                                       01804000
TINSET10 ST    RF,TINFSAVF       SAVE RETURN CODE                       01805000
         B     TINFEXIT               =======================>>         01806000
         USING SVEARA,RB         SAVE-AREA BASE                         01807000
TINX0R00 XC    SVER00,SVER00     ENSURE R0=0, R1=0 AND RC=00            01808000
TINX1R00 XC    SVER01,SVER01     ENSURE R1=0       AND RC=00            01809000
TINXXR00 LA    R6,0              SET RC=00                              01810000
         B     TINXXRXX          JOIN MAIN LINE                         01811000
TINX0R04 XC    SVER00,SVER00     ENSURE R0=0, R1=0 AND RC=04            01812000
TINX1R04 XC    SVER01,SVER01     ENSURE R1=0       AND RC=04            01813000
TINRCR04 LA    R6,4              SET RC=04                              01814000
         B     TINXXRXX          JOIN MAIN LINE                         01815000
TINX0R08 XC    SVER00,SVER00     ENSURE R0=0, R1=0 AND RC=08            01816000
TINX1R08 XC    SVER01,SVER01     ENSURE R1=0       AND RC=08            01817000
         LA    R6,8              SET RC=08                              01818000
         B     TINXXRXX          JOIN MAIN LINE                         01819000
TINX0R12 XC    SVER00,SVER00     ENSURE R0=0, R1=0 AND RC=12            01820000
TINX1R12 XC    SVER01,SVER01     ENSURE R1=0       AND RC=12            01821000
         LA    R6,12             SET RC=12                              01822000
         B     TINXXRXX          JOIN MAIN LINE                         01823000
TINX0R16 XC    SVER00,SVER00     ENSURE R0=0, R1=0 AND RC=16            01824000
TINX1R16 XC    SVER01,SVER01     ENSURE R1=0       AND RC=16            01825000
TINRCR16 LA    R6,16             SET RC=16                              01826000
         B     TINXXRXX          JOIN MAIN LINE                         01827000
TINX0R20 XC    SVER00,SVER00     ENSURE R0=0, R1=0 AND RC=20            01828000
TINX1R20 XC    SVER01,SVER01     ENSURE R1=0       AND RC=20            01829000
         LA    R6,20             SET RC=20                              01830000
         B     TINXXRXX          JOIN MAIN LINE                         01831000
TINX0R32 XC    SVER00,SVER00     ENSURE R0=0, R1=0 AND RC=32            01832000
TINX1R32 XC    SVER01,SVER01     ENSURE R1=0       AND RC=32            01833000
         LA    R6,32             SET RC=32                              01834000
*        B     TINXXRXX          JOIN MAIN LINE                @D61ADGL 01835000
TINXXRXX ST    R6,SVER0F         SAVE RETURN CODE IN SAVE AREA @D61ADGL 01836000
TINFDISP L     R6,DISPAD         RESTORE DISP BASE ADDRESS     @D61ADGL 01837000
         BR    R6                                              @D61ADGL 01838000
         DROP  RB                                              @D61ADGL 01839000
*                                END OF CODEBLOCK                       01840000
         TITLE 'VSE SUPERVISOR     SGTINF    PART-2 COMMON SUBROUTINES' 01841000
.*===================================================================== 01842000
.*=  #  =============================================================== 01843000
.*= # # =================== PART 2: OTHERS THAN GETFLD ================ 01844000
.*=  #  =================== PART 2: OTHERS THAN GETFLD ================ 01845000
.*= #   =================== PART 2: OTHERS THAN GETFLD ================ 01846000
.*= ### =============================================================== 01847000
*=====================================================================  01848000
*== PART 2: OTHERS THAN GETFLD ======================================== 01849000
.* EXISTING ROUTINES WHICH ARE NOT PART OF THE GETFLD SERVICE           01850000
.* ARE KEPT WITHIN THIS SECOND PART. NONE OF THE ROUTINES CALLS         01851000
.* A PROCEDURE OR USES A LABEL FROM PART THREE (GETFLD). THE            01852000
.* ADDRESSABILITY IS PROVIDED VIA BASE REGISTERS RC AND RD.             01853000
*=====================================================================  01854000
***************************************************************         01855000
*                                                             *         01856000
*  COMMON REGISTER USINGS FOR FOLLOWING ROUTINES FO PART 2:   *         01857000
*  ON ENTRY TO ANY ROUTINE BELOW:                             *         01858000
*    R5 = PTR TO PCB OF CURRENTLY ACTIVE TASK                 *         01859000
*    R6 = BASE OF DISPATCHER                                  *         01860000
*    R8 = PTR TO TIB OF CURRENTLY ACTIVE TASK                 *         01861000
*    RA = PTR TO TCB OF CURRENTLY ACTIVE TASK                 *         01862000
*    RB = PTR TO SAVE AREA OF CURRENTLY ACTIVE TASK           *         01863000
*    RC = BASE OF FOLLOWING CODE, ADDRESS OF LABEL SGTINF     *         01864000
*                                                             *         01865000
***************************************************************         01866000
         USING SGTINF+X'1000',RD                               @D14ZDFG 01867000
*---------------------------------------------------------------------- 01868000
*   TSTOP :  STOP CURRENT PARTITION                            @D36IDFG 01869000
*---------------------------------------------------------------------- 01870000
*---------------------------------------------------------------------- 01871000
*   TSTOP :  UNBATCH CURRENT PARTITION                         @D36IDFG 01872000
*---------------------------------------------------------------------- 01873000
*------------------------------------------------------------- @D51IDIS 01874000
*   TINFTWIC:ENTRY POINT, WHEN DYNAMIC PARTITION               @D51IDIS 01875000
*            INITIALIZATION CANCELLED                          @D51IDIS 01876000
*------------------------------------------------------------- @D51IDIS 01877000
TINFTWSP DS    0H                  STOP CURRENT PARTITION      @D52VDGL 01878000
         LA    R9,TINFCNAU         ADDRESS OF ERROR EXIT       @D51RMGL 01879000
         BAL   RB,TINFAUTJ         ENSURE ITS A JCL REQUEST    @D36IDFG 01880000
*SGLINK  TINFAUTJ,INPUT=(R9,RB,RC),OUTPUT=R7                            01881000
         BAL   R9,TINFGENT         SAVE STATUS       =======>> @D36IDFG 01882000
*SGLINK  TINFGENT,INPUT=(R9,RC),WORK=(R2,R3,R4,R5,R7,RE,RF),           *01883000
               OUTPUT=(R0,R1,R6,R8,RA,RB)                      @D62NDAP 01884000
         USING DISP,R6             DISP BASE POINTER           @D61NDOW 01885000
         L     R5,PCBPTR           ADDRESS OF CALLERS PCB      @D51IDIS 01886000
         USING PCBADR,R5           PCB BASE POINTER            @D61NDOW 01887000
         L     R2,PCEPIB           ADDRESS OF CALLERS PIB      @D51IDIS 01888000
         USING PIBADR,R2           PIB BASE POINTER            @D51IDIS 01889000
         MVI   PIBFLG,STOPPED      INDICATE PARTITION STOPPED  @D51IDIS 01890000
         LA    R7,BGTID            BG TID-ID                   @D66IDAP 01891000
         CH    R7,TID              IS THIS BG PARTITION        @D66IDAP 01892000
         BNE   TINFTWAP            NO,                         @D31LDGN 01893000
         L     R7,CRADDR           ADDRESS OF COMREG           @D31LDGN 01894000
         DROP  R2                  RELEASE PIB BASE            @D51IDIS 01895000
         BAL   RB,TINFTWUN         DO UNATTENDED PROCESSING    @D31LDGN 01896000
*SGLINK  TINFTWUN,INPUT=(R6,R7,RB),WORK=(R2,R5,R8,RF)          @D31LDGN 01897000
         B     TINFTWAP            JOIN MAIN LINE              @D52VDGL 01898000
TINFTWUB DS    0H                  UNBATCH PROCESSING          @D36IDFG 01899000
         LA    R9,TINFCNAU         ERROR EXEIT ADDRESS         @D51RMGL 01900000
         BAL   RB,TINFAUTJ         ENSURE ITS A JCL REQUEST    @D36IDFG 01901000
*SGLINK  TINFAUTJ,INPUT=(R9,RB,RC),OUTPUT=R7                            01902000
         BAL   R9,TINFGENT         SAVE STATUS        ======>> @D36IDFG 01903000
*SGLINK  TINFGENT,INPUT=(R9,RC),WORK=(R2,R3,R4,R5,R7,RE,RF),           *01904000
               OUTPUT=(R0,R1,R6,R8,RA,RB)                      @D62NDAP 01905000
         L     R5,PCBPTR           ADDRESS OF CURRENT PCB      @D14NDFG 01906000
         TM    PCEFLAG,PCEDYNP     IS IT A DYNAMIC PARTITION   @D51IDGL 01908000
         BZ    TINFTW00            NO,                         @D51IDGL 01909000
.* THE SPACE GETVIS AREA MUST BE INVALIDATED SEPARATELY. OTHERWISE      01909200
.* THE SMPFIX COUNTERS IN THE SYSTEM PCB ARE NOT RESET. THEY ARE SET    01909400
.* WHEN THE MVS SUBPOOL 255 STILL EXISTS. INVP2ND WORKS WITH THE        01909600
.* SYSTEM PCB ONLY WHEN END ADDRESS IS BELOW SMVPBEG.                   01909800
         L     RD,SCBPTR           GET ACB ADDRESS             @D51IDGL 01910000
         L     R1,SCBSPGVE-SCBADR(,RD) GET SP-GETV END ADDRESS @DY46530 01910500
         L     RD,SCBSPGVB-SCBADR(,RD) GET SPACE-GETVIS ADDRESS@D51IDGL 01911000
         SLR   R5,R5               CLEAR REGISTER              @DY46530 01911100
         BCTR  R5,0                (-1) = DEACTIVATE           @DY46530 01911200
         L     RF,AINVPSUB         ADDR. OF INVALIDATION ROUT  @DY46530 01911300
*        AMODESW CALL,REGS=(RE,RF) INVALIDATE PARTITION        @DY46530 01911400
         AMODESW CALL,REGS=(RE,RF) INVALIDATE PARTITION        @DY46530 01911500
*SGLINK  INVP2ND,INPUT=(R1,R5,RD,RE) *                         @DY46530 01911600
         L     R5,PCBPTR           ADDRESS OF CURRENT PCB      @D14NDFG 01911700
TINFTW00 DS    0H                                              @D51IDGL 01912000
         L     RD,PCBAPBEG         PARTITION BEGIN ADDRESS     @D14NDFG 01912500
         L     R1,SMVPEND          PARTITION END ADDRESS       @D62ADMK 01913000
         BCTR  R1,0                LAST BYTE OF PARTITION      @D36IDFG 01914000
         SLR   R5,R5               CLEAR REGISTER              @D14NDFG 01915000
         BCTR  R5,0                (-1) = DEACTIVATE           @D14NDFG 01916000
         L     RF,AINVPSUB         ADDR. OF VALIDATION ROUTINE @D14NDFG 01917000
*        AMODESW CALL,REGS=(RE,RF) VALIDATE PARTITION          @D14NDFG 01918000
         AMODESW CALL,REGS=(RE,RF) VALIDATE PARTITION          @D14NDFG 01919000
*SGLINK  INVP2ND,INPUT=(R1,R5,RD,RE) *                         @D14NDFG 01920000
         L     RC,FSVCBASE         RESTORE BASE ADDRESS        @D36IDFG 01921000
         L     RD,FSVCBAS2         RESTORE 2.BASE ADDRESS      @D14ZDFG 01922000
TINFTWIC DS    0H                  FROM SGAP OR SGTSLICE       @D51IDIS 01923000
         L     R5,PCBPTR           GET PCB ADDRESS             @D14NDFG 01924000
         L     RA,TCBPTR           GET TCB ADDRESS             @KS30315 01925000
         USING TCBADR,RA           TCB BASE POINTER            @D61NDOW 01926000
         TM    PCEFLAG,PCEDYNP     IS IT A DYNAMIC PARTITION   @D51IDGL 01927000
         BO    TINFTWI1            YES,                        @D51IDGL 01928000
         SFREEVIS SPACE=ROUTED     NO, FREE SPACE GETVIS       @D51IDGL 01929000
TINFTWI1 DS    0H                                              @D51IDGL 01930000
***************************************************************         01931000
*       CALL $IJBLSTK  -  FREE LINKAGE STACK SEGMENTS         *         01932000
*                         INPUT : RA - TCB ADDR               *         01933000
*                                 RC - $IJBLSTK BASE AND ENTRY*         01934000
*                                 RE - RETURN ADDR            *         01935000
*                                 RF - FUNCTION CODE (=12)    *         01936000
***************************************************************         01937000
         STM   R0,RF,SVCWORK       SAVE REGISTER               @D61NDMK 01938000
         L     RC,ASVASVDL         PTR TO SVA RTN ADDR TABLE   @D61NDMK 01939000
         L     RC,AIJBLSTK-SVASVDL(,RC) GET ROUTINE ADDR       @D61NDMK 01940000
         LA    RF,12               SET UP FUNCTION CODE        @D61NDMK 01941000
*        AMODESW CALL,REGS=(RE,RC) CALL ROUTINE                         01942000
         AMODESW CALL,REGS=(RE,RC)                             @D61NDMK 01943000
         LM    R0,RF,SVCWORK       RESTORE REGISTER            @D61NDMK 01944000
         SLR   RF,RF               CLEAR REGISTER              @D14NDFG 01945000
         ST    RF,TCBSAVE          RESET ACT. SAVE AREA ADDR   @KS30315 01946000
         ST    RF,PCBAPBEG         RESET ACT. BEGIN ADDRESS    @D14NDFG 01947000
         ST    RF,PCBAPEND         RESET ACT. END ADDRESS      @D14NDFG 01948000
         ST    RF,PCBASCB          RESET ACT. SPACE SCB ADDR   @D14NDFG 01949000
         L     R7,CRADDR           GET COMREG ADDRESS          @D14NDFG 01950000
         USING COMREG,R7           COMREG BASE POINTER         @D14NDFG 01951000
         STH   RF,IJBASID          RESET ACTIVE SPACE ID       @D14NDFG 01952000
         DROP  R7                  RELEASE COMREG BASE         @D36IDFG 01953000
         L     R2,PCEPIB           PIB BASE ADDRESS            @D51IDIS 01954000
         USING PIBADR,R2           PIB BASE POINTER            @D51IDIS 01955000
         MVI   PIBFLG,INACT        INDICATE PARTITION INACTIVE @D51IDIS 01956000
         DROP  R2                  RELEASE PIBADR BASE         @D51IDIS 01957000
         L     R3,APOWTB           GET POWER CONTROL BLOCK     @D51IDIS 01958000
         USING PADS,R3             PADS BASE POINTER           @D51IDIS 01959000
         CLC   PADS(1),PADS+PDLN   FORCE PAGE FAULT NOW        @D51IDIS 01960000
         BAL   RB,TINFTWI0         CALL UNATTENDED PROCESS.    @D51IDIS 01961000
         BAL   RB,TINFTWUN         UNATTENDED SPECIAL PROCESS  @D31LDGN 01962000
*SGLINK  TINFTWUN,INPUT=(R3,R7,RB),WORK=(R2,R5,R8,RF)          @D31LDGN 01963000
         LTR   R3,R3               WAS POWER UP                @D51IDGL 01964000
         BZ    TINFTWU0            NO, NO NEED TO POST         @D51IDGL 01965000
         TM    PAEB+2,X'80'        MAIN ECB ALREADY POSTED     @D51IDIS 01966000
         BZ    TINFTWU0            NO,                         @D51IDIS 01967000
         LH    R8,CATI             GET POWER MAINTASK ID       @D51IDIS 01968000
         BAL   RF,IOPOST0          SET POWER MAINTASK READY    @D51IDIS 01969000
*SGLINK  IOPOST0,INPUT=(R6,R8,RF),WORK=(R8,RE)                 @D51IDIS 01970000
         DROP  R6                  RELEASE DISP BASE           @D61NDOW 01971000
TINFTWU0 DS    0H                                              @D51IDIS 01972000
         SLR   RF,RF               RESET ADDRESSABILITY        @D31LDGN 01973000
         L     R8,TIBPTR           TIB BASE ADDRESS            @D36IDFG 01974000
         USING TIBADR,R8           TIB BASE POINTER            @D61NDOW 01975000
         ST    RF,TIBSCB           RESET SCB POINTER           @D14NDFG 01976000
         DROP  R8                  RELEASE TIBADR BASE         @D61NDOW 01977000
*        AMODESW SET,AMODE=31,WR=(R7) SWITCH TO 31 BIT         @D61RDOW 01978000
         AMODESW SET,AMODE=31,WR=(R7) SWITCH TO 31 BIT         @D61RDOW 01979000
         LH    R7,PIK              GET PIK OF CURRENT PART     @D61CDGL 01980000
         LA    R7,3*16(,R7)        SKIP RESERVED ENTRIES       @D61CDGL 01981000
         A     R7,TINFSYAL         OUR ENTRY IN SYSTEM ALE     @D61CDGL 01982000
         USING ALE,R7              ALE BASE POINTER            @D61CDGL 01983000
         OI    ALE,ALEI            INVALIDATE ALE              @D61CDGL 01984000
         IC    R5,ALESN            GET ALE SEQUENCE NUMBER     @D61CDGL 01985000
         LA    R5,1(,R5)           ADVANCE ALE SEQUENCE NUMBER @D61CDGL 01986000
         STC   R5,ALESN            NEW ALE SEQUENCE NUMBER     @D61CDGL 01987000
         DROP  R7                  RELEASE ALE BASE POINHTER   @D61CDGL 01988000
         L     R5,PCBPTR           GET PCB ADDRESS             @D52GDOW 01989000
         ICM   R7,15,PCBASTE       ADDRESS OF ASTE             @D52GDOW 01990000
         BZ    TINFTWU9            NO ASTE PRESENT             @D52GDOW 01991000
         USING ASTE,R7             ASTE BASE POINTER           @D52GDOW 01992000
         TM    ASTE,ASTEI          ENTRY ALREADY INVALID       @D52GDOW 01993000
         BO    TINFTWU9            YES,                        @D52GDOW 01994000
         OI    ASTE,ASTEI          MAKE ASTE INVALID NOW       @D52GDOW 01995000
         DROP  R7                      *                       @D52GDOW 01996000
*        DISPMAC FUNC=PALB         PROCESS PALB REQUEST                 01997000
         DISPMAC FUNC=PALB         PROCESS PALB REQUEST        @D61RDIS 01998000
         DROP  RA                  RELEASE TCBADR BASE         @D61NDOW 01999000
         SPACE                                                          02000000
TINFTWU9 DS    0H                                              @D51ADGL 02001000
         L     R6,DISPAD           RESTORE DISP BASE ADDRESS   @D36IDFG 02002000
         USING DISP,R6             DISP BASE POINTER           @D61NDOW 02003000
TINFTWAP L     R1,ACCTPCNT         DECREMENT NUMBER OF         @D14BDFG 02004000
         BCTR  R1,0                *  ACTIVE PARTITIONS FOR    @D14BDFG 02005000
         ST    R1,ACCTPCNT         *  JOB ACCOUNTING           @D14BDFG 02006000
         L     R5,ASRQTAB          POINT TO                    @D61RDGL 02007000
         LA    R5,SRQNOTAC-SRQTAB(,R5) RES.DESCRIPTOR          @D61RDGL 02008000
         BAL   RF,UNPOST           UNPOST PARTITION            @D36IDFG 02009000
*SGLINK  UNPOST,INPUT=(R5,RF,R6),WORK=(R5,RE)                  @D36ZDFG 02010000
         L     R5,PCBPTR           RELOAD CURRENT PCB POINTER  @D51IDIS 02011000
         L     R5,PCBACPCB         GET CORRESP. CLASS PCB      @D51IDGL 02012000
         TM    PCBFLAG,PCBCLFLG    IS THIS A DYNAMIC CLASS     @D52VDGL 02013000
         BOR   R6                  YES,                        @D52VDGL 02014000
         TM    PCBFLAG,SUPPRPFH    PARTITION TO BE DEACTIVATED @D36IDFG 02015000
         BNO   TINTWAP6            NO,                         @D36IDFG 02016000
         NI    PCBFLAG,XFF-SUPPRPFH  RESET DEACTIV.INDICATOR   @D36IDFG 02017000
         L     R1,BIT0OMSK         SET DEVICE MASK             @D61RDOW 02018000
         LA    R3,1                INDICATE SET REQUEST        @D61RDOW 02019000
*        DISPMAC FUNC=PFUPD,INP1=R1,INP2=R3,INP3=R5,WR1=RE     @D61RDAP 02020000
         DISPMAC FUNC=PFUPD,INP1=R1,INP2=R3,INP3=R5,WR1=RE     @D61RDAP 02021000
         DROP  R5                  RELEASE PCBADR BASE         @D61NDOW 02022000
         SLR   R1,R1               CLEAR REGISTER              @D14BDFR 02023000
         IC    R1,NDEACTP          NO. OF DEACTIV. PARTITIONS  @D36IDFG 02024000
         BCTR  R1,0                DECREMENT                   @D36IDFG 02025000
         STC   R1,NDEACTP          STORE NEW VALUE             @D36IDFG 02026000
         BR    R6                  DISP ===================>>> @D36IDFG 02027000
         DROP  R6                  RELEASE DISP BASE           @D61NDOW 02028000
TINTWAP6 DS    0H                                              @D52VDGL 02029000
         LH    R1,IJBAPNO          DECREMENT NUMBER OF         @D51IDHA 02030000
         BCTR  R1,0                *   ACTIVE VIRTUAL          @D36IDFG 02031000
         STH   R1,IJBAPNO          *   PARTITIONS              @D51IDHA 02032000
         LTR   R1,R1               ANY PARTITION STILL ACTIVE  @D36IDFG 02033000
         BNZR  R6                  YES, ===================>>> @D36IDFG 02034000
         CLI   NDEACTP,ZERO        ANY PARTITION DEACTIVATED   @D36IDFG 02035000
         BER   R6                  NO,  ===================>>> @D36IDFG 02036000
         L     RE,APMGMDAT         PMR BASE ADDRESS            @D36IDFG 02037000
         USING PMGMDATA,RE         PMGMDATA BASE POINTER       @D36IDFG 02038000
         L     R5,AREACTEX         REACTIVATION ROUTINE ADDR.  @D36IDFG 02039000
         BR    R5                  REACT===================>>> @D36IDFG 02040000
         DROP  RE                  RELEASE PMGMDATA BASE       @D36IDFG 02041000
*---------------------------------------------------------------------- 02042000
*        TSTOP DYNAMIC PARTITION SPECIAL PROCESSING            @D51IDIS 02043000
*---------------------------------------------------------------------- 02044000
         SPACE 1                                               @D51IDIS 02045000
         USING PCBADR,R5                                       @D61NDOW 02046000
TINFTWI0 DS    0H                                              @D51IDIS 02047000
         TM    PCEFLAG,PCEDYNP     TSTOP FOR DYNAMIC PART.     @D51IDIS 02048000
         BZR   RB                  NO,  =====================> @D51IDIS 02049000
         OI    PCEFLAG,PCEPWPST    POST CLEAN UP PROCESS COMPL.@D51IDIS 02050000
         NI    PCEFLAG,XFF-PCECLEAN CLEAN UP INDICATION        @D51IDIS 02051000
         OI    PAEB+2,X'80'        POST POWER MAIN ECB         @D31LDGN 02052000
         BR    RB                  EXIT =====================> @D31LDGN 02053000
         DROP  R5                  DROP PCBADR                 @D61NDOW 02054000
         SPACE 1                                               @D36IDFG 02055000
*---------------------------------------------------------------------- 02056000
*        TSTOP UNATTENDED SPECIAL PROCESSING                   @D31LDGN 02057000
*---------------------------------------------------------------------- 02058000
         SPACE 1                                               @D31IDGN 02059000
         USING COMREG,R7                                       @D31LDGN 02060000
         USING DISP,R6                                         @D61NDOW 02061000
TINFTWUN DS    0H                                              @D31LDMZ 02062000
         TM    IJBFLG07,IJBUNATT   IPL SYS OPTION UNATT=YES    @D31LDMZ 02063000
         BZR   RB                  NO,  =====================> @D31LDGN 02064000
         TM    IJBFLG07,IJBPOWT    POWER PART TO BE SYNCHRON.  @KD50286 02065000
         BZ    TINFTWUO            NO, CHECK OCCF              @KD50286 02066000
         TM    JCSW9,IJBRSTRT      UNBATCH REQUEST BY POWER    @D31XXGN 02067000
         BZ    TINFTWUO            NO, CHECK OCCF              @D31XXGN 02068000
         OI    CAUNBECB+2,X'80'    POST POWER UNBATCH ECB      @D31LDGN 02069000
         OI    PAEB+2,X'80'        POST POWER MAIN ECB         @D31LDGN 02070000
         L     R5,CAUNBCTP         GET PWR PART UNBATCH COUNT  @D31LDGN 02071000
         LA    R5,1(R5)            INCREASE POWER PARTITION    @D31LDGN 02072000
         ST    R5,CAUNBCTP           COUNT TO BE UNBATCHED     @D31LDGN 02073000
         BR    RB                  EXIT =====================> @D51IDIS 02074000
         SPACE 2                                               @D51IDIS 02075000
TINFTWUO L     RE,IJBOCFCM         GET OCCF COMREG ADDRESS     @D31LDGN 02076000
         LTR   RE,RE               OCCF STILL ACTIVE           @D31LDMZ 02077000
         BZR   RB                  NO,  =====================> @D31LDMZ 02078000
         USING OCFCOM,RE           ADDRESS OCCF COMREG         @D31LDMZ 02079000
*        AMODESW SET,AMODE=31,WR=(R5) SWITCH TO 31 BIT         @D52CDGL 02080000
         AMODESW SET,AMODE=31,WR=(R5) SWITCH TO 31 BIT         @D52CDGL 02081000
         CLC   OCFCOM(1),OCFCOM+OCFCOMLG  AVOID PAGE FAULTS    @D31LDGN*02082000
                                   WHILE REFERENCING OCCF COMREG        02083000
         TM    OCFFLAG1,OCFUNATT   UNATTENDED OCCF             @D31LDMZ 02084000
         BNZ   TINTWUO1            NO, RETURN TO CALLER        @D52CDGL 02085000
*        AMODESW SET,AMODE=24,WR=(R5) SWITCH TO 24 BIT         @D52CDGL 02086000
         AMODESW SET,AMODE=24,WR=(R5) SWITCH TO 24 BIT         @D52CDGL 02087000
         BR    RB                       =====================> @D52CDGL 02088000
TINTWUO1 DS    0H                                              @D52CDGL 02089000
         OI    IJBECBUB,X'80'      POST OCFF UNBATCH ECB       @D31LDGN 02090000
         LH    R8,OCFTIDF          GET OCCF MAINTASK ID        @D31LDMZ 02091000
         DROP  RE                  RELEASE OCCF COMREG         @D31LDMZ 02092000
*        AMODESW SET,AMODE=24,WR=(R5) SWITCH TO 24 BIT         @D52CDGL 02093000
         AMODESW SET,AMODE=24,WR=(R5) SWITCH TO 24 BIT         @D52CDGL 02094000
         BAL   RF,IOPOST0          SET OCCF MAINTASK READY     @D51IDIS 02095000
*SGLINK  IOPOST0,INPUT=(R6,R8,RF),WORK=(R8,RE)                 @D31LDGN 02096000
         BR    RB                  EXIT =====================> @D31LDGN 02097000
         DROP  R3                  RELEASE POWER CONTROL BLOCK @D51IDIS 02098000
         DROP  R6                  RELEASE DISP BASE           @D61NDOW 02099000
         DROP  R7                  RELEASE COMREG BASE         @D52VDGL 02100000
         SPACE 1                                                        02101000
*---------------------------------------------------------------------- 02102000
*   TREADY COND=IO                                             @D319DGN 02103000
*          READY TASK IF TASK IS I/O BOUND                     @D319DGN 02104000
*---------------------------------------------------------------------- 02105000
         USING DISP,R6                                         @D61NDOW 02106000
TINFTRIO DS    0H                                                       02107000
         BAL   R9,TINFCTID         CHECK TID AND GET TIB       @D14BDWK 02108000
*SGLINK  TINFCTID,INPUT=(R0,R9,RC),OUTPUT=(R2,R8)                       02109000
         BAL   RF,IOPOST1          POST TASK IF I/O BOUND      @D14BDWK 02110000
*SGLINK  IOPOST1,INPUT=(R6,R8,RF),WORK=RE                      @D14BDWK 02111000
         B     TINCOD00            GO TO EXIT ROUTINE          @RETCODE 02112000
         DROP  R6                  RELEASE DISP BASE           @D61NDOW 02113000
*---------------------------------------------------------------------- 02114000
*   TREADY COND=NO                                             @D319DGN 02115000
*          READY USER TASK UNCONDITIONAL                       @D319DGN 02116000
*---------------------------------------------------------------------- 02117000
         USING DISP,R6                                         @D61NDOW 02118000
TINFTRNO DS    0H                                              @D36IDFG 02119000
         LA    RB,TINFTRN1         LOAD CONTINUATION ADDRESS   @D36IDFG 02120000
         BAL   R9,TINFAUVE         CHECK FOR SYSTEM REQUEST    @D52YDGL 02121000
*SGLINK  TINFAUVE,INPUT=(R8,R9,RA,RB,RC)                                02122000
         TM    SYSFLAG2,IPLBIT     REQUEST FROM IPL            @D36IDFG 02123000
         BZ    TINFCNAU            IF NOT, ERROR               @D51RMGL 02124000
TINFTRN1 BAL   R9,TINFCTID         CHECK TID AND GET TIB       @D36IDFG 02125000
*SGLINK  TINFCTID,INPUT=(R0,R9,RC),OUTPUT=(R2,R8)                       02126000
         BAL   RF,POST             MAKE TASK DISPATCHABLE      @D36IDFG 02127000
*SGLINK  POST,INPUT=(R6,R8,RF),WORK=RE                         @D36ZDFG 02128000
         SLL   R2,16                                           @D61NDGL 02129000
         SRL   R2,16                                           @D61NDGL 02130000
         LA    RE,SPTTID           SP TASK MUST NOT GET OWNER  @D61NDGL 02131000
         CR    R2,RE                                           @D61NDGL 02132000
         BE    TINCOD00                                        @D61NDGL 02133000
         LA    RE,CSTTID           CS TASK MUST NOT GET OWNER  @D61NDGL 02134000
         CR    R2,RE                                           @D61NDGL 02135000
         BE    TINCOD00                                        @D61NDGL 02136000
         LA    RE,HCFTID           HC TASK MUST NOT GET OWNER  @D61NDGL 02137000
         CR    R2,RE                                           @D61NDGL 02138000
         BE    TINCOD00                                        @D61NDGL 02139000
         CH    R2,ARTIDH           IS IT ATTENTION             @D66IDAP 02140000
         BE    TINCOD00                                        @D61NDGL 02141000
         LH    RE,TID              GET SERVICE REQUESTOR TID   @DA37076 02142000
         STH   RE,TIBRTID-TIBADR(R8) STORE SERVICE OWNER TID   @DA37076 02143000
         LH    RE,PIK              GET PIK OF SERVICED PART.   @DA37076 02144000
         STH   RE,TIBRPIK-TIBADR(R8) STORE SERVICE OWNER PIK   @DA37076 02145000
         B     TINCOD00            GO TO EXIT ROUTINE          @RETCODE 02146000
         DROP  R6                  DROP DISP BASE              @D61NDOW 02147000
*---------------------------------------------------------------------- 02148000
*   TREADY COND=LQ                                             @D319DGN 02149000
*          READY TASKS WAITING FOR SECURITY TASK               @D319DGN 02150000
*---------------------------------------------------------------------- 02151000
         USING DISP,R6                                         @D61NDOW 02152000
TINFTRLQ DS    0H                                              @D14BDWK 02153000
         LA    R9,TINFCNAU         CONTINUATION ADDRESS        @D51RMGL 02154000
         BAL   RB,TINFAUTS         CHECK FOR AUTHORISATION     @D14BDWK 02155000
*SGLINK  TINFAUTS,INPUT=(R8,R9,RB,RC)                                   02156000
         L     R5,ASRQTAB                                      @D61RDGL 02157000
         LA    R5,SRQLQ-SRQTAB(,R5) PT   TO SEC WAIT QUEUE     @D61RDGL 02158000
         BAL   RF,RPOST            POST ALL WAITING TASKS      @D36IDFG 02159000
*SGLINK  RPOST,INPUT=(R5,R6,RF),WORK=(R5,RE)                   @D36ZDFG 02160000
         B     TINCOD00            GO TO EXIT ROUTINE          @RETCODE 02161000
         DROP  R6                  DROP DISP BASE              @D61NDOW 02162000
*---------------------------------------------------------------------- 02163000
*   TREADY COND=ALLOCR                                         @D319DGN 02164000
*          FREE ACCESS TO SYSTEM 'REAL PARTITION'              @D319DGN 02165000
*---------------------------------------------------------------------- 02166000
         USING DISP,R6                                         @D61NDOW 02167000
TINFTRRA DS    0H                  START OF CODEBLOCK          @D14NDFG 02168000
         LA    R9,TINFCNAU         CONTINUATION ADDRESS        @D51RMGL 02169000
         BAL   RB,TINFAUTS         CHECK FOR SYSTEM REQUEST    @D14NDFG 02170000
*SGLINK  TINFAUTS,INPUT=(R8,R9,RB,RC)                                   02171000
         L     R5,ASRQTAB          GET SRQ TABLE ADDRESS       @D61RDGL 02172000
         LA    R5,SRQSPFIX-SRQTAB(,R5) PTR TO SPFIX WAIT Q     @D61RDGL 02173000
         BAL   RF,RPOST            POST ALL WAITING TASKS      @D14NDFG 02174000
*SGLINK  RPOST,INPUT=(R5,R6,RF),WORK=(R5,RE)                   @D14NDFG 02175000
         B     TINCOD00            GO TO EXIT ROUTINE          @RETCODE 02176000
         DROP  R6                  DROP DISP BASE              @D61NDOW 02177000
*---------------------------------------------------------------------- 02178000
*   TREADY COND=VTAM                                           @D319DGN 02179000
*          READY TASK IF TASK IS I/O BOUND AND INDICATE        @D319DGN 02180000
*          VTAM AP-EXIT                                        @D319DGN 02181000
*---------------------------------------------------------------------- 02182000
         USING DISP,R6                                         @D61NDOW 02183000
         USING TIBADR,R8                                       @D61NDOW 02184000
TINFTRVT DS    0H                                                       02185000
         LA    RB,TINFTRV1         CONTINUATION ADDRESS                 02186000
         BAL   R9,TINFAUTS         SYSTEM REQUEST                       02187000
*SGLINK  TINFAUTS,INPUT=(R8,R9,RB,RC)                                   02188000
         BAL   R9,TINFAUTV         NO, VTAM REQUEST                     02189000
*SGLINK  TINFAUTV,INPUT=(R5,R9,RA,RB,RC)                                02190000
         B     TINFCNAU            NO, TAKE ERROR EXIT         @D51RMGL 02191000
TINFTRV1 BAL   R9,TINFCTID         CHECK TID AND GET TIB       @D36IDFG 02192000
*SGLINK  TINFCTID,INPUT=(R0,R9,RC),OUTPUT=(R2,R8)                       02193000
         BAL   RF,SETREADY         READY TASK                  @D14BDWK 02194000
*SGLINK  SETREADY,INPUT=(R6,R8,RF),WORK=RE                     @D14BDWK 02195000
         OI    TIBFLAG,APSEXFLG    SCHEDULE VTAM AP EXIT       @D36IDFG 02196000
         B     TINCOD00            GO TO EXIT ROUTINE          @RETCODE 02197000
         DROP  R6                  DROP DISP BASE              @D61NDOW 02198000
         DROP  R8                  DROP TIBADR                 @D61NDOW 02199000
*---------------------------------------------------------------------- 02200000
*   TREADY COND=VCANCEL                                        @D319DGN 02201000
*          CANCEL ALL TASKS COMMUNICATING WITH VTAM            @D319DGN 02202000
*---------------------------------------------------------------------- 02203000
         USING PCBADR,R5                                       @D61NDOW 02204000
         USING DISP,R6                                         @D61NDOW 02205000
TINFTRVC DS    0H                                              @D37CDFG 02206000
         TM    PCBSSFLG,VTAM       REQUEST FROM VTAM PARTITION @D37CDFG 02207000
         BZ    TINFCNAU            IF NOT, ERROR EXIT          @D51RMGL 02208000
         BAL   R9,TINFGENT         CALL, SAVE CALLERS STATUS=>>@DA24936 02209000
*SGLINK  TINFGENT,INPUT=(R9,RC),WORK=(R2,R3,R4,R5,R7,RE,RF),           *02210000
               OUTPUT=(R0,R1,R6,R8,RA,RB)                      @D62NDAP 02211000
         L     R1,IJBCLIM          GET NUMBER OF PARTITIONS    @D51IDHA 02212000
         USING CLIM,R1                                         @D51IDHA 02213000
         LH    R0,CSPART           NUMBER OF PARTITIONS        @D51IDHA 02214000
         DROP  R1                                              @D51IDHA 02215000
         L     R4,APCBATAB         START OF PCB POINTERS       @D51IDHA 02216000
         LA    R4,4(R4)            IGNORE SYSTEM'S PCB         @D51IDHA 02217000
         L     R1,ASVASVDL         LOAD ADDRESS OF SVA SUBDIR. @DA36477 02218000
         L     R1,AISTAPCK-SVASVDL(R1)  LOAD ISTAPCKU ADDRESS  @DA36477 02219000
TINFTVC1 L     R5,0(R4)            GET THE PCB POINTER         @D51IDHA 02220000
         LTR   R5,R5               IS THIS PCB IN USE          @D51IDHA 02221000
         BZ    TINFTVC3            NO, TRY NEXT PARTITION      @D51IDHA 02222000
         L     R2,PCEPIB2          PIB2 OF THIS PARTITION      @D51IDIS 02223000
         USING PIB2ADR,R2          PIB2 BASE POINTER           @D51IDIS 02224000
         CLI   PCBVTCNT,ZERO       ANY ACB OPEN WITHIN PART.   @D36IDFG 02225000
         BE    TINFTVC3            IF NOT, CHECK NEXT PART.    @D36IDFG 02226000
         MVI   PCBVTCNT,ZERO       RESET COUNT OF OPEN ACB'S   @D36IDFG 02227000
         LH    R8,PIBMTID          GET TID OF MAIN TASK        @D36IDFG 02228000
         AIF   (&VSE260).Y260040                                        02229000
         BAL   R9,TINFVCNL         CANCEL IF COMM.WITH VTAM    @D36IDFG 02230000
*SGLINK  TINFVCNL,INPUT=(R1,R6,R8,R9,RC),WORK=(R8,RE,RF)       @DA36477 02231000
TINFTVC0 LH    R3,PCBLCTSS         GET NUMBER OF SUBTASKS      @D14ZDFG 02232000
         LTR   R3,R3                                           @D36IDFG 02233000
         BZ    TINFTVC3            IF ZERO, CHECK NEXT PART.   @D36IDFG 02234000
         DROP  R2                  RELEASE PIB2 BASE POINTER   @D51IDAP 02235000
         LA    R2,TIDSTR           POINT TO STRING OF TID'S    @D51IDHA 02236000
TINFTVC2 SR    R8,R8                                           @D36IDFG 02237000
         IC    R8,0(R2)                                        @D51IDHA 02238000
         BAL   R9,TINFVCNL         CANCEL IF COMM.WITH VTAM    @D36IDFG 02239000
*SGLINK  TINFVCNL,INPUT=(R1,R6,R8,R9,RC),WORK=(R8,RE,RF)       @DA36477 02240000
         LA    R2,1(R2)            POINT TO NEXT TID, IF ANY   @D51IDHA 02241000
         BCT   R3,TINFTVC2         CHECK NEXT TASK, IF ANY     @D36IDFG 02242000
         AGO   .N260040                                                 02243000
.Y260040 ANOP                                                           02244000
         DROP  R2                  RELEASE PIB BASE            @D66CDAP 02245000
         SLL   R8,2                MULTIPLY WITH FOUR          @D66CDAP 02246000
         AL    R8,ATIBATAB         ADDRESS OF TIB ADDRESS      @D66CDAP 02247000
         L     R8,0(,R8)           ADDRESS OF MAIN-TASK TIB    @D66CDAP 02248000
         BAL   R9,TINFVCNL         CANCEL IF COMM.WITH VTAM    @D36IDFG 02249000
*SGLINK  TINFVCNL,INPUT=(R1,R6,R8,R9,RC),WORK=(R8,RE,RF)       @DA36477 02250000
TINFTVC0 SLR   R8,R8               REQUEST HIGHEST PRIORITY    @D66CDAP 02251000
TINFTVC2 DS    0H'0'                                           @D66CDAP 02252000
*        DISPMAC FUNC=TIB,SFUNC=NEXTLOW,ERREXIT=TINFTVER       @D66CDAP 02253000
         DISPMAC FUNC=TIB,SFUNC=NEXTLOW,ERREXIT=TINFTVER       @D66CDAP 02254000
*SGLINK  DISPMAC INPUT=(R5,R8),OUTPUT=R8                       @D66CDAP 02255000
         LTR   R8,R8               MORE SUBTASKS TO PROCESS    @D66CDAP 02256000
         BZ    TINFTVC3            NO, WE ARE DONE             @D66CDAP 02257000
         BAL   R9,TINFVCNL         CANCEL IF COMM.WITH VTAM    @D66CDAP 02258000
*SGLINK  TINFVCNL,INPUT=(R1,R6,R8,R9,RC),WORK=(R8,RE,RF)       @D66CDAP 02259000
         B     TINFTVC2            PROCESS NEXT SUBTASK        @D66CDAP 02260000
         SPACE 1                                                        02261000
TINFTVER BAL   R5,SYSERROR         ENTER HARD WAIT             @D66CDAP 02262000
.N260040 ANOP                                                  $D66CDAP 02263000
TINFTVC3 LA    R4,4(R4)            POINT TO NEXT PCB ADDRESS   @D51IDHA 02264000
         BCT   R0,TINFTVC1         CHECK NEXT PART., IF ANY    @D14BDFG 02265000
         BR    R6                  EXIT TO DISPATCHER          @DA24936 02266000
         DROP  R5                  DROP PCBADR                 @D61NDOW 02267000
*---------------------------------------------------------------------- 02268000
*   SYMPATHETIC CANCEL OF VTAM USER TASK                       @D36IDFG 02269000
*   IF THE TCB HAS TO BE ACCESSED IN THIS ROUTINE (VTOPEN ON), @D149DFG 02270000
*   A PAGE FAULT MAY OCCUR AND SOME SUBTASKS CAN BE ATTACHED   @D149DFG 02271000
*   OR DETACHED IN THE MEANTIME. THE SUBTASK LOOP IS THEREFORE @D149DFG 02272000
*   RESUMED FROM BEGIN IN THIS CASE. SINCE VTOPEN IS ALWAYS    @D149DFG 02273000
*   RESET, A ENDLESS LOOP IS EXCLUDED.                         @D149DFG 02274000
*---------------------------------------------------------------------- 02275000
TINFVCNL DS    0H                                              @D36IDFG 02276000
         AIF   (&VSE260).Y260060                                        02277000
         SLL   R8,2                MULTIPLY WITH FOUR          @D66IDAP 02278000
         AL    R8,ATIBATAB         ADDRESS OF TIB ADDESS       @D36IDFG 02279000
         L     R8,0(,R8)           ADDRESS OF TIB              @D66IDAP 02280000
.Y260060 ANOP                                                           02281000
         USING TIBADR,R8                                       @D61NDOW 02282000
         TM    TIBFLAG2,VTOPEN     ANY OPEN VTAM ACB           @D14BDFG 02283000
         BZR   R9                  IF NOT, RETURN              @D36IDFG 02284000
         L     RA,TIBTCB           TCBPOINTER FOR THIS TASK    @DA24936 02285000
         USING TCBADR,RA                                       @D61NDOW 02286000
         LTR   R1,R1               AISTAPCK ZERO               @DA36477 02287000
         BZ    TINFVCN2            YES, CONTINUE AS BEFORE     @DA36477 02288000
         CLC   PIK,TIBRPIK         CALL FOR ACTIVE PARTITION   @DA36477 02289000
         BE    TINFVCN2            YES,CONTINUE AS BEFORE      @DA36477 02290000
         CLI   TIBCNCL,ZERO        TASK ALREADY CANCELED       @DA36477 02291000
         BE    TINFVCN1            NO                          @DA36477 02292000
         OI    TIBFLAG3,VTDELCKU    SET DELAY FLAG F. ISTAPCKU @DA36477 02293000
         NI    TIBFLAG,XFF-APSEXFLG  RESET VTAM PP EXIT        @DA36477 02294000
         NI    TIBFLAG2,XFF-VTOPEN   RESET ACB OPEN INDICATOR  @DA36477 02295000
         BR    R9                  CONTINUE TASK LOOP          @DA36477 02296000
TINFVCN1 OI    TIBFLAG3,VTACTCKU   INDICATE ISTAPCKU ACTIVATION@DA36477 02297000
         OI    TIBFLAG,APSEXFLG    SET VTAM PP EXIT            @DA36477 02298000
         NI    TIBFLAG2,XFF-VTOPEN   RESET ACB OPEN INDICATOR  @DA36477 02299000
         BAL   RF,SETREADY         MAKE READY, IF ALLOWED      @DA37326 02300000
*SGLINK  SETREADY,INPUT=(R6,R8,RF),WORK=RE                     @DA37326 02301000
         BR    R9                  CONTINUE TASK LOOP          @DA36477 02302000
TINFVCN2 CLI   TIBCNCL,ZERO        TASK ALREADY CANCELED       @DA36477 02303000
         BE    TINFVCN3            IF NOT, SKIP FURTHER TEST   @DA36477 02304000
         CLC   PIK,TIBRPIK         CALL FOR ACTIVE PARTITION   @DA24936 02305000
         BE    TINFVCN4            YES                         @DA36477 02306000
         TM    VTAMFLG,VTSVC+VTAPP+VTAMK0  ANY VTAM STATUS     @DA24936 02307000
         BZ    TINFVCN4            IF NOT, DON'T CANCEL AGAIN  @DA36477 02308000
         TM    TIBFLAG,FETCHEOJ    CANCEL STILL TO BE ENTERED  @DA24936 02309000
         BO    TINFVCN4            IF YES, DON'T CANCEL AGAIN  @DA36477 02310000
TINFVCN3 OI    TIBFLAG,FETCHEOJ    SCHEDULE FOR EOJ            @DA36477 02311000
         MVI   TIBCNCL,VTCCODE1    STORE CANCEL CODE           @D36IDFG 02312000
         NI    TCBRFLAG,XFF-TCBRCVAL RESET REASON CODE VALID   @DY45849 02313000
         BAL   RF,SETREADY         MAKE READY IF ALLOWED       @D36IDFG 02314000
*SGLINK  SETREADY,INPUT=(R6,R8,RF),WORK=RE                     @D36ZDFG 02315000
TINFVCN4 NI    TIBFLAG,XFF-APSEXFLG  RESET VTAM PP EXIT        @DA36477 02316000
         NI    APSFLAG,XFF-VTLTDLY   RESET LTA DELAY INDICATOR @DA24936 02317000
         NI    VTAMFLG,XFF-VTAPDEL-VTSVC-VTAPP-VTAMK0          @DA24936 02318000
         NI    TIBFLAG2,XFF-VTOPEN   RESET ACB OPEN INDICATOR  @D14BDFG 02319000
         B     TINFTVC0            RESUME TASK LOOP FROM BEGIN @D36IDFG 02320000
         DROP  R6                  DROP DISP BASE              @D61NDOW 02321000
         DROP  R8                  DROP TIBADR                 @D61NDOW 02322000
         DROP  RA                  DROP TCBADR                 @D61NDOW 02323000
*                                  END OF CODEBLOCK                     02324000
*---------------------------------------------------------------------- 02325000
*   TREADY COND = CANCEL                                       @D319DGN 02326000
*          CANCEL TASK AND SET CANCEL CODE                     @D319DGN 02327000
*---------------------------------------------------------------------- 02328000
*--------------------------------------------------------------@D319DGN 02329000
*   TREADY COND = OCANCEL                                      @D319DGN 02330000
*          CANCEL OCCF MAINTASK, ONLY ALLOWED                  @D319DGN 02331000
*          BY OCCF SUBTASK'S                                   @D319DGN 02332000
*--------------------------------------------------------------@D319DGN 02333000
         USING PCBADR,R5           PCB BASE POINTER            @D61NDOW 02334000
         USING DISP,R6             DISP BASE POINTER           @D61NDOW 02335000
         USING TIBADR,R8           TIBADR BASE POINTER         @D61NDOW 02336000
         USING TCBADR,RA           TCBADR BASE POINTER         @DY45299 02337000
TINFTRCA DS    0H                  WHEN (ENTRY FOR COND=CANCEL)@D14BDFG 02338000
         CH    R0,TID              REQUEST FOR CURRENT TASK    @D14BDFG 02339000
         BNE   TINFTRC0            NO,                         @D14BDFG 02340000
         TM    SVOLDP+1,KEY0       KEY-ZERO REQUEST            @D14BDFG 02341000
         BZ    TINFTRC1            YES,                        @D14BDFG 02342000
TINFTRC0 LA    RB,TINFTRC1         LOAD CONTINUATION ADDRESS   @D14BDFG 02343000
         BAL   R9,TINFAUVE         CHECK FOR SYSTEM REQUEST    @DY45299 02344000
*SGLINK  TINFAUVE,INPUT=(R8,R9,RA,RB,RC)                       @DY45299 02345000
         BAL   R9,TINFAUTV         CHECK FOR VTAM REQUEST      @D52VDGL 02346000
*SGLINK  TINFAUTV,INPUT=(R5,R9,RA,RB,RC)                                02347000
         TM    PCBSSFLG,PWR+ICCF+OCCF  A VALID SUBSYSTEM       @D37CDFG 02348000
         BZ    TINFCNAU            NO,                         @D51RMGL 02349000
TINFTRC1 DS    0H                                              @D52VDGL 02350000
         BAL   R9,TINFCTID         CHECK TID AND GET TIB       @D36GDWK 02351000
*SGLINK  TINFCTID,INPUT=(R0,R9,RC),OUTPUT=(R2,R8)                       02352000
         L     RA,TIBTCB           GET TCB OF TARGET TASK      @DY45849 02353000
         OI    TIBFLAG,FETCHEOJ    INDICATE FETCHEOJ           @D36IDFG 02354000
         L     R9,TINFSAV2                                     @DY45849 02355000
         TM    TIBCNCL,XFF         CANCEL CODE ALREADY PRESENT @D36IDWK 02356000
         BM    TINFTRC2            YES,                        @D36IDWK 02357000
         STC   R1,TIBCNCL          SET CANCEL CODE             @D36IDFG 02358000
         NI    TCBRFLAG,XFF-TCBRCVAL RESET REASON CODE VALID   @DY45849 02359000
         CLI   TIBCNCL,X'FE'       IS THIS NEW CANCEL INTERFACE@DY45849 02360000
         BNE   TINFTRC3            NO, JOIN MAIN LINE          @DY45849 02361000
         OI    TCBRFLAG,TCBRCVAL   INDICATE REASON CODE PRESENT@DY45849 02362000
         STC   R9,TIBCNCL          SET CANCEL CODE             @DY45849 02363000
         STCM  R9,14,TCBRCODE      AND ALSO THE REASON CODE    @DY45849 02364000
         B     TINFTRC3                                        @D36IDWK 02365000
TINFTRC2 STC   R1,TIBCNCL2         STORE SECOND CANCEL CODE    @D36IDWK 02366000
         CLI   TIBCNCL2,X'FE'      IS THIS NEW CANCEL INTERFACE@DY45849 02367000
         BNE   TINFTRC3            NO,                         @DY45849 02368000
         STC   R9,TIBCNCL2         STORE CANCEL CODE ONLY      @DY45849 02369000
         B     TINFTRC3                                        @D52VDGL 02370000
TINFTROC DS    0H                                              @D31LDGN 02371000
         TM    PCBSSFLG,OCCF       IS IT THE OCCF PARTITION    @D31LDGN 02372000
         BZ    TINCOD04            NO,                         @RETCODE 02373000
         LH    R2,TID              GET TID                     @D31LDGN 02374000
         CH    R2,IJBHMTID         IS IT A MAIN-TASK TID       @D31LDGN 02375000
         BNH   TINFCNAU            YES,                        @D51RMGL 02376000
         L     R2,PCEPIB2          GET PIB2 ADDRESS            @D52VDGL 02377000
         USING PIB2ADR,R2          PIB2ADR BASE POINTER        @D51IDIS 02378000
         LH    R0,PIBMTID          GET MAIN-TASK TID           @D31LDGN 02379000
         DROP  R2                  RELEASE PIB2ADR BASE        @D51IDAP 02380000
         BAL   R9,TINFCTID         VALIDATE TID AND GET TIB    @D31LDGN 02381000
*SGLINK  TINFCTID,INPUT=(R0,R9,RC),OUTPUT=(R2,R8)                       02382000
         L     RA,TIBTCB           GET TCB OF TARGET TASK      @DY45849 02383000
         TM    TIBCNCL,XFF         CANCEL IN PROCESS           @D31LDGN 02384000
         BNZ   TINCOD00            YES,                        @RETCODE 02385000
         MVI   TIBCNCL,TINFOCNC    OCCF MAIN-TASK CANCELATION  @D31LDGN 02386000
         NI    TCBRFLAG,XFF-TCBRCVAL RESET REASON CODE VALID   @DY45849 02387000
         OI    TIBFLAG,FETCHEOJ    SCHEDULE FETCH OF EOJ       @D31LDGN 02388000
TINFTRC3 DS    0H                                              @D36IDFG 02389000
         DEBUG RATIB,XXDBGMC       SWITCH DEBUG AREAS          @D37ZDWK 02390000
         DEBUG XXDUMPNR,XXDBGMC    PROVIDE DEBUG ENTRY         @D37ZDWK 02391000
         BAL   RF,SETREADY         POST TASK                   @D37ZDWK 02392000
*SGLINK  SETREADY,INPUT=(R6,R8,RF),WORK=RE                     @D36ZDFG 02393000
         B     TINCOD00            GO TO EXIT ROUTINE          @RETCODE 02394000
         DROP  R5                  DROP PCBADR                 @D61NDOW 02395000
         DROP  R6                  DROP DISP BASE              @D61NDOW 02396000
         DROP  R8                  DROP TIBADR                 @D61NDOW 02397000
         DROP  RA                  DROP TCBADR                 @DY45299 02398000
*                                  END OF CODEBLOCK                     02399000
*--------------------------------------------------------------@D36GDWK 02400000
*   TREADY COND = ICCF                                         @D319DGN 02401000
*          READY TASK IF TASK IS ICCF BOUND                    @D319DGN 02402000
*--------------------------------------------------------------@D36GDWK 02403000
         USING PCBADR,R5                                       @D61NDOW 02404000
         USING DISP,R6                                         @D61NDOW 02405000
         USING TCBADR,RA                                       @D61NDOW 02406000
TINFTRIC DS    0H                  START OF CODEBLOCK          @D37CDFG 02407000
         TM    TCBFLAG3,TCBVEND    IS VENDOR CODE ACTIVE       @D52YDOW 02408000
         BO    TINFTRI1            YES,                        @D52YDGL 02409000
         TM    PCBSSFLG,ICCF       IS THIS THE ICCF PARTITION  @D52YDGL 02410000
         BZ    TINFCNAU            NO,                         @D52YDGL 02411000
TINFTRI1 BAL   R9,TINFCTID         CHECK TID AND GET TIB       @D36GDWK 02412000
*SGLINK  TINFCTID,INPUT=(R0,R9,RC),OUTPUT=(R2,R8)                       02413000
         USING TIBADR,R8                                       @D61NDOW 02414000
         CLI   TIBRQID,ICCFBND     TASK ICCF BOUND             @D14BDFR 02415000
         BNE   TINCOD00            IF NOT, EXIT                @RETCODE 02416000
         BAL   RF,POST             POST ICCF TASK              @D36GDWK 02417000
*SGLINK  POST,INPUT=(R6,R8,RF),WORK=RE                         @D36GDWK 02418000
         B     TINCOD00            RETURN                      @RETCODE 02419000
         DROP  R5                  DROP PCBADR                 @D61NDOW 02420000
         DROP  R6                  DROP DISP BASE              @D61NDOW 02421000
         DROP  R8                  DROP TIBADR                 @D61NDOW 02422000
         DROP  RA                  DROP TCBADR                 @D61NDOW 02423000
***************************************************************         02424000
*                                                             *         02425000
*  TREADY : COND=START,PART=...                               *         02426000
*                                                             *         02427000
*  FUNCTION: START THE PARTITION SPECIFIED BY THE PART        *         02428000
*    OPERAND                                                  *         02429000
*  ON ENTRY: SEE STANDARD CONVENTION ABOVE                    *         02430000
*  ON EXIT TO R6: (I.E. DISPATCHER)                           *         02431000
***************************************************************         02432000
         USING PCBADR,R5                                       @D61NDOW 02433000
         USING DISP,R6                                         @D61NDOW 02434000
         USING TIBADR,R8                                       @D61NDOW 02435000
TINFTRST DS    0H                                              @D36IDFG 02436000
         LA    RB,TINFTRS1       SET AUTHORIZED EXIT ADDRESS   @D36IDFG 02437000
         BAL   R9,TINFAUTS       CHECK AUTHORIZATION           @D36IDFG 02438000
*SGLINK  TINFAUTS,INPUT=(R8,R9,RB,RC)                                   02439000
         BAL   R9,TINFAUTJ       CHECK FOR JOB CONTROL         @D36IDFG 02440000
*SGLINK  TINFAUTJ,INPUT=(R9,RB,RC),OUTPUT=R7                            02441000
         TM    PCBSSFLG,PWR+OCCF IS THIS POWER OR OCCF REQUEST @D37CDFG 02442000
         BZ    TINFCNAU          NO, NOT AUTORIZED             @D51RMGL 02443000
TINFTRS1 DS    0H                AUTHORIZED REQUEST PROCESSING @D36IDFG 02444000
         BAL   R9,TINFCPIK       CHECK GIVEN PIK               @D36IDFG 02445000
*SGLINK  TINFCPIK,INPUT=(R0,R9,RC),WORK=(R0),OUTPUT=R2                  02446000
         B     TINFCNPK          ERROR (ILLEGAL PIK)           @D51RMGL 02447000
         LTR   R2,R2             IS PIK ZERO                   @D14BDFG 02448000
         BZ    TINFCNP0          YES, ERROR                    @D51RMGL 02449000
         BAL   R9,TINFGENT       SAVE STATUS                   @D36IDFG 02450000
*SGLINK  TINFGENT,INPUT=(R9,RC),WORK=(R2,R3,R4,R5,R7,RE,RF),           *02451000
               OUTPUT=(R0,R1,R6,R8,RA,RB)                      @D62NDAP 02452000
         L     R2,TINFSAV0       RESTORE CALLERS PIK           @D36IDFG 02453000
         BAL   R9,TINFGPCB       GET PCB ADDRESS               @D51IDHA 02454000
*SGLINK  TINFGPCB,INPUT=(R2,R9,RC),OUTPUT=R5                            02455000
         B     TINCOD16          ERROR (DYN.PART.NOT ALLOC.)   @D51IDGL 02456000
         NOP   0                 * IGN. STAT.PART.NOT ALLOC.   @D51IDGL 02457000
         LR    RE,R5             SAVE PCB ADDRESS              @D51IDIS 02458000
         L     R2,PCEPIB2        PIB2 ADDRESS                  @D51IDIS 02459000
         USING PIB2ADR,R2        PIB2 BASE POINTER             @D51IDIS 02460000
         LH    R1,PIBMTID        MAIN TASK TID                 @D36IDFG 02461000
         LR    R3,R1             SAVE TID                      @D66ADAP 02462000
         SLL   R1,2              MULTIPLY WITH FOUR            @D66IDAP 02463000
         AL    R1,ATIBATAB       ADDRESS OF TIB ADDESS         @D66IDAP 02464000
         L     R8,0(,R1)         ADDRESS OF TIB                @D66IDAP 02465000
         L     R2,PCEPIB         PIB BASE ADDRESS              @D51IDIS 02466000
         USING PIBADR,R2         PIB BASE POINTER              @D51IDIS 02467000
         CLI   PIBFLG,INACT      IS PARTITION INACTIVE         @D51IDIS 02468000
         BNE   TINFTRS8          NO,                           @D14NDFG 02469000
         DROP  R5                RELEASE PCB BASE              @D66ADAP 02470000
         L     R5,ASRQTAB        ADDRESS OF RESOURCE TABLE     @D61RDGL 02471000
         LA    R5,SRQGSM-SRQTAB(,R5) ADDRESS OF RESOURCE GATE  @D61RDGL 02472000
         USING RQADR,R5          RESOURCE DESCRIPTOR BASE      @D66ADAP 02473000
TINFTRS2 TM    RSCDESC,FREEBIT   IS RESORCE FREE               @D66ADAP 02474000
         BO    TINFTRS3          YES,                          @D66ADAP 02475000
         BAL   RC,RWAIT          WAIT FOR RESOURCE             @D14NDFG 02476000
         L     RC,FSVCBASE       RESTORE BASE ADDRESS          @D14NDFG 02477000
         B     TINFTRS2          TRY AGAIN                     @D14NDFG 02478000
TINFTRS3 STH   R3,RSCDESC        OCCUPY RESOURCE AN SET OWNER  @D66ADAP 02479000
         DROP  R5                RELEASE RQADR BASE            @D66ADAP 02480000
         LR    R5,RE             RESTORE PCB ADDRESS           @D51IDIS 02481000
         USING PCBADR,R5         PCBADR BASE POINTER           @D66ADAP 02482000
         L     R3,PCBPSCB        SCB BASE ADDRESS              @D14NDFG 02483000
         USING SCBADR,R3         ACB BASE POINTER              @D14NDFG 02484000
         L     R7,PCECOMRA       COMREG BASE ADDRESS           @D52VDGL 02485000
         USING COMREG,R7         COMREG BASE                   @D52VDGL 02486000
         MVC   IJBASID,SCBID     PROVIDE SCB-ID                @D52VDGL 02487000
         DROP  R7                RELEASE COMREG BASE           @D52VDGL 02488000
         L     R9,ASIDSTR          IF (PARTITION IS NOT        @D218DKH 02489000
         USING SIDSTR,R9           *   ALLOCATED IN            @D218DKH 02490000
         CLC   SCBID,SIDS          *   SHARED SPACE)           @D14NDFG 02491000
         DROP  R9                  *                           @D218DKH 02492000
         BE    TINFTRS4            ***                         @D14NDFG 02493000
         ST    R3,PCBASCB            STORE SCB OF ACTIVE SPACE @D14NDFG 02494000
         ST    R3,TIBSCB             *  & ADDRESSABILITY SCOPE @D14NDFG 02495000
TINFTRS4 DS    0H                  ENDIF                       @D51IDIS 02496000
         DROP  R3                  PTR TO SCB                  @D14NDFG 02497000
         LH    R1,PCEPIK           R1: GET PIK AGAIN           @D51IDIS 02498000
         TM    PCEFLAG,PCEDYNP     IF (PARTITION IS            @D51IDGN 02499000
         BO    TINFTRS6            *** STATIC)                 @D51IDGN 02500000
         LR    RF,R2                 RF: PTR TO PIB            @D51IDIS 02501000
         L     R7,APGRSTRT           CALL LUB ALLOCATION ROUT. @D14BDFG 02502000
         BALR  R7,R7                 *    FOR PROGRAMMER LUBS  @D14BDFG 02503000
*SGLINK  NPGRSTRT,INPUT=(R1,R7),WORK=(R1,R2,R3,R4,R5,RC,RD)    @D149DFG 02504000
         L     RC,FSVCBASE           RC: RESTORE BASE          @D14BDFG 02505000
         L     RD,FSVCBAS2           RD: SECOND BASE           @D14BDFG 02506000
         LR    R5,RE                 R5: PCB ADDRESS           @D51IDIS 02507000
         LR    R2,RF                 R2: AND PIB POINTER       @D51IDIS 02508000
TINFTRS6 DS    0H                  ENDIF                       @D51IDIS 02509000
         MVI   TIBCNCL,NORMEOJ     SET NORMAL END OF JOB       @D36IDFG 02510000
         L     R7,TIBTCB           TCBPOINTER FOR THIS TASK    @DY45849 02511000
         USING TCBADR,R7                                       @DY45849 02512000
         NI    TCBRFLAG,XFF-TCBRCVAL RESET REASON CODE VALID   @DY45849 02513000
         OI    TIBFLAG,FETCHEOJ    *   AND SCHEDULE FOR EOJ    @D36IDFG 02514000
         L     R7,PCECOMRA         R7: POINT TO PARTITION      @D51IDIS 02515000
         USING COMREG,R7           *   COMREG                  @DA28231 02516000
         OI    JCSW4,BATINIT       SET BATCH INIT.INDICATOR    @DA28231 02517000
         L     R4,PCEALUB          COPY SYSLOG ASSIGNMENT      @D14BDFG 02518000
         LH    R3,YLUBTAB          *  FROM THAT OF BG-PARTITION@D14BDFG 02519000
         MVC   2*SYSLOG(2,R4),2*SYSLOG(R3) TO NEW LUBTABLE     @D14BDFG 02520000
         L     R3,IJBOCFCM         IF (OCCF IS STILL ACTIVE)   @D31LDGN 02521000
         LTR   R3,R3               *                           @D31LDGN 02522000
         BZ    TINFTRS7            ***                         @D31LDGN 02523000
*        AMODESW SET,AMODE=31,WR=(R3) SWITCH TO 31 BIT         @D52CDGL 02524000
         AMODESW SET,AMODE=31,WR=(R3) SWITCH TO 31 BIT         @D52CDGL 02525000
         L     R3,IJBOCFCM           RELOAD WORK REGISTER      @D52CDGL 02526000
         USING OCFCOM,R3             R3: ADDRESS OCCF COMREG   @D31LDGN 02527000
         CLC   OCFCOM(1),OCFCOM+OCFCOMLG  AVOID PAGE FAULTS    @D31LDGN 02528000
*                                    * IN REFERENCE OF OCCF COMREG      02529000
         TM    OCFFLAG1,OCFUNATT     IF (UNATTENDED OCCF)      @D31LDGN 02530000
         BZ    TINFTRS7              ***                       @D31LDGN 02531000
         NI    IJBECBUB,X'7F'          RESET UNBATCH ECB       @D31LDGN 02532000
         DROP  R7                      PTR TO PART.COMREG      @DA28231 02533000
         DROP  R3                      PTR TO OCCF COMREG      @D31LDGN 02534000
TINFTRS7 DS    0H                    ENDIF                     @D14NDFG 02535000
*                                  ENDIF                                02536000
*        AMODESW SET,AMODE=24,WR=(R3) SWITCH TO 24 BIT         @D52CDGL 02537000
         AMODESW SET,AMODE=24,WR=(R3) SWITCH TO 24 BIT         @D52CDGL 02538000
         LR    R3,R5               R3: PRESERVE PCB POINTER    @D14NDFG 02539000
         L     R5,ASRQTAB          R5: MAKE A PTR TO           @D61RDGL 02540000
         LA    R5,SRQGSM-SRQTAB(,R5) *        ALLOCATE RES.QUE.@D61RDGL 02541000
         BAL   RF,RPOST            CALL, POST WAITING TASKS =>>@D14NDFG 02542000
         LR    R5,R3               R5: RESTORE PCB POINTER     @D14NDGL 02543000
TINFTRS8 DS    0H                ENDIF                         @D51IDIS 02544000
         MVI   PIBFLG,ZERO       SET INDICATOR PARTITION IS    @D51IDIS 02545000
         DROP  R2                *  ACTIVE                     @D51IDIS 02546000
         BAL   RF,POST           CALL, POST MAIN TASK =======>>@D36IDFG 02547000
*SGLINK  POST,INPUT=(R6,R8,RF),WORK=RE                         @D36ZDFG 02548000
         TM    PCEFLAG,PCEDYNP   IF (PARTITION IS STATIC)      @D51IDGL 02549000
         BO    TINFTRS9          ***                           @D51IDGL 02550000
         LH    R1,IJBAPNO          INCREMENT NUMBER OF         @D51IDHA 02551000
         LA    R1,1(R1)            *  ACTIVE VIRTUAL           @D36IDFG 02552000
         STH   R1,IJBAPNO          *  PARTITIONS               @D51IDHA 02553000
TINFTRS9 DS    0H                ENDIF                         @D51IDGL 02554000
         L     R1,ACCTPCNT       INCREMENT NUMBER OF           @D14BDFG 02555000
         LA    R1,1(R1)          * ACTIVE PARTITIONS FOR       @D14BDFG 02556000
         ST    R1,ACCTPCNT       * JOB ACCOUNTING              @D14BDFG 02557000
         L     R6,ADISPSER       TAKE ADDRESS OF DISP.ROUTINE  @D61NDGL 02558000
         LA    R0,36             TAKE FC FOR ASTE INITIALIZATION     GL 02559000
*SGLINK  DISPSE36,INPUT=(R0,R5,R6,R7),WORK=(R0,R2,RF)          @D61NDGL 02560000
*        AMODESW CALL,REGS=(R7,R6) CALL IT                     @D61NDGL 02561000
         AMODESW CALL,REGS=(R7,R6) CALL IT                     @D61NDGL 02562000
***************************************************************         02563000
*   CALL $IJBLSTK  -  INITIALIZE CONTROL REGISTERS        *             02564000
*     INPUT : R8 - TIB ADDR                                             02565000
*             RA - TCB ADDR                                             02566000
*             RB - TCB EXTENSION                                        02567000
*             RC - $IJBLSTK BASE AND ENTRY                              02568000
*             RE - RETURN ADDR                                          02569000
*             RF - FUNCTION CODE (=08)                                  02570000
***************************************************************         02571000
         LR    R5,RA               SAVE CURRENT TCB            @D64XDMZ 02572000
         L     RA,TIBTCB           TCB OF TASK TO BE STARTED   @D64XDMZ 02573000
         STM   R0,RF,SVCWORK-TCBADR(RA) SAVE REGISTERS         @D64XDMZ 02574000
         L     RB,TCBATCBE-TCBADR(,RA) TCB EXTENSION           @D64XDMZ 02575000
         L     RC,ASVASVDL         PTR TO SVA RTN ADDR TABLE   @D64XDMZ 02576000
         L     RC,AIJBLSTK-SVASVDL(,RC) GET ROUTINE ADDR       @D64XDMZ 02577000
         LA    RF,8                SET UP FUNCTION CODE        @D64XDMZ 02578000
*        AMODESW CALL,REGS=(RE,RC) CALL ROUTINE                @D64XDMZ 02579000
         AMODESW CALL,REGS=(RE,RC)                             @D64XDMZ 02580000
         LM    R0,RF,SVCWORK-TCBADR(RA) RESTORE REGISTERS      @D64XDMZ 02581000
         LR    RA,R5               RESTORE CURRENT TCB         @D64XDMZ 02582000
         L     R6,DISPAD         RELOAD DISPATCHER BASE ADDR.  @D61NDGL 02583000
         BR    R6                RETURN VIA DISPATCHER ======>>@D36IDFG 02584000
*                                END OF CODEBLOCK                       02585000
APGRSTRT DC    A(NPGRSTRT)       . ADDR.OF LUB ALLOC.ROUTINE   @D14BDFG 02586000
         DROP  R5                  DROP PCBADR                 @D61NDOW 02587000
         DROP  R6                  DROP DISP BASE              @D61NDOW 02588000
         DROP  R8                  DROP TIBADR                 @D61NDOW 02589000
         SPACE 1                                               @D36IDFG 02590000
*---------------------------------------------------------------------- 02591000
*   TREADY COND = OC, PART                                     @D319DGN 02592000
*          SCHEDULE OC-EXIT FOR THE SPECIFIED PARTITION        @D319DGN 02593000
*---------------------------------------------------------------------- 02594000
         USING PCBADR,R5                                       @D61NDOW 02595000
         USING DISP,R6                                         @D61NDOW 02596000
         USING TIBADR,R8                                       @D61NDOW 02597000
TINFTROE DS    0H                  START OF CODEBLOCK          @D36IDFG 02598000
         LA    RB,TINFTRO1         CONTINUATION ADDRESS        @D36IDFG 02599000
         BAL   R9,TINFAUTS         SYSTEM REQUEST              @D36IDFG 02600000
*SGLINK  TINFAUTS,INPUT=(R8,R9,RB,RC)                                   02601000
         B     TINFCNAU            NO, ERROR EXIT              @D51RMGL 02602000
TINFTRO1 BAL   R9,TINFCPIK         CHECK PIK                   @D36IDFG 02603000
*SGLINK  TINFCPIK,INPUT=(R0,R9,RC),WORK=(R0),OUTPUT=R2                  02604000
         B     TINFCNPK            ERROR (ILLEGAL PIK)         @D51RMGL 02605000
         LTR   R2,R2               ZERO PIK                    @D14BDFG 02606000
         BZ    TINFCNP0            IF YES, INVALID REQUEST     @D51RMGL 02607000
         BAL   R9,TINFGPCB         AND POINT TO PARTITION PCB  @D51IDHA 02608000
*SGLINK  TINFGPCB,INPUT=(R2,R9,RC),OUTPUT=R5                            02609000
         B     TINCOD16            ERROR (DYN.PART.NOT ALLOC.) @D51IDGL 02610000
         NOP   0                   IGNORE STAT.PART.NOT ALLOC. @D51IDGL 02611000
         L     R2,PCEPIB2          POINT TO PIB2               @D51IDIS 02612000
         USING PIB2ADR,R2          PIB2 BASE POINTER           @D51IDAP 02613000
         ICM   RE,15,PCBOCPTR      ADDRESS OF OC EXIT ROUTINE  @D62NDOW 02614000
         BZ    TINCOD04            EXIT NOT AVAIL., RET.CODE=4 @D62ADOW 02615000
         USING EXITBLK,RE                                      @D62ADOW 02616000
         TM    EXITFLG,DELINT      EXIT DELAYED?               @DY46378 02617190
         BO    TINCOD08            YES, RET.CODE=8             @DY46378 02617380
         ICM   RE,15,EXITADR       OC EXIT ROUTINE DEFINED     @D62NDOW 02617570
         DROP  RE                                              @D62NDOW 02618000
         BM    TINCOD08            EXIT IS ACTIVE, RET.CODE=8  @D51MDGL 02619000
         BZ    TINCOD04            EXIT NOT AVAIL., RET.CODE=4 @D51MDGL 02620000
         LH    R8,PIBMTID          GET MAIN TASK TID           @D36IDFG 02621000
         SLL   R8,2                MULTIPLY WITH FOUR          @D66IDAP 02622000
         AL    R8,ATIBATAB         ADDRESS OF TIB ADDESS       @D66IDAP 02623000
         L     R8,0(,R8)           ADDRESS OF TIB              @D66IDAP 02624000
         TM    TIBFLAG,OCPEND      OCEXIT ALREADY SET?         @DY46378 02624300
         BO    TINCOD08            YES, RET.CODE=8             @DY46378 02624600
         OI    TIBFLAG,OCPEND      ACTIVATE OC DISP.EXIT       @D36IDFG 02625000
         BAL   RF,SETREADY         READY TASK                  @D14BDWK 02626000
*SGLINK  SETREADY,INPUT=(R6,R8,RF),WORK=RE                     @D14BDWK 02627000
         B     TINCOD00            RET.CODE=0                  @D36IDFG 02628000
         DROP  R2                  RELEASE PIB2 BASE POINTER   @D51IDAP 02629000
         DROP  R5                  DROP PCBADR                 @D61NDOW 02630000
         DROP  R6                  DROP DISP BASE              @D61NDOW 02631000
         DROP  R8                  DROP TIBADR                 @D61NDOW 02632000
*                                  END OF CODEBLOCK            @D36IDFG 02633000
*---------------------------------------------------------------------- 02634000
*   TREADY COND = CANCEL, PART                                 @D319DGN 02635000
*          EMERGENCY CANCEL SPECIFIED PARTITION                @D319DGN 02636000
*---------------------------------------------------------------------- 02637000
         USING PCBADR,R5                                       @D61NDOW 02638000
         USING DISP,R6                                         @D61NDOW 02639000
         USING TIBADR,R8                                       @D61NDOW 02640000
TINFTRCE DS    0H                  START OF CODEBLOCK          @D36IDFG 02641000
         LA    RB,TINFTCE1         CONTINUATION ADDRESS        @D36IDFG 02642000
         BAL   R9,TINFAUTS         SYSTEM REQUEST              @D36IDFG 02643000
*SGLINK  TINFAUTS,INPUT=(R8,R9,RB,RC)                                   02644000
         TM    PCBSSFLG,PWR+OCCF   NO, POWER OR OCCF REQUEST   @D31LDMZ 02645000
         BZ    TINFCNAU            NO, ERROR EXIT              @D51RMGL 02646000
TINFTCE1 BAL   R9,TINFCPIK         CHECK AND GET PIK           @D36IDFG 02647000
*SGLINK  TINFCPIK,INPUT=(R0,R9,RC),WORK=(R0),OUTPUT=R2                  02648000
         B     TINFCNPK            ERROR (ILLEGAL PIK)         @D51RMGL 02649000
         LTR   R2,R2               ZERO PIK                    @D14BDFG 02650000
         BZ    TINFCNP0            IF YES, INVALID REQUEST     @D51RMGL 02651000
         BAL   R9,TINFGPCB         AND POINT TO PARTITION PCB  @D51IDHA 02652000
*SGLINK  TINFGPCB,INPUT=(R2,R9,RC),OUTPUT=R5                            02653000
         B     TINCOD16            ERROR (DYN.PART.NOT ALLOC.) @D51IDGL 02654000
         NOP   0                   IGNORE STAT.PART.NOT ALLOC. @D51IDGL 02655000
         L     R2,PCEPIB           POINT TO PIB                @D51IDHA 02656000
         USING PIBADR,R2           PIB BASE POINTER            @D51IDIS 02657000
         L     R3,PCEPIB2          PIB2 BASE ADDRESS           @D66IDAP 02658000
         USING PIB2ADR,R3          PIB2 BASE POINTER           @D66IDAP 02659000
         LH    R3,PIBMTID          GET MAIN TASK TID           @D66IDAP 02660000
         DROP  R3                  RELEASE PIB2 BASE           @D66IDAP 02661000
         SLL   R3,2                MULTIPLY WITH FOUR          @D66IDAP 02662000
         AL    R3,ATIBATAB         ADDRESS OF TIB ADDRESS      @D66IDAP 02663000
         L     R8,0(,R3)           MAIN TASK TID ADDRESS       @D66IDAP 02664000
         CLI   TINFSAV1+3,CANCX24  OPERATOR INTERVENTION X'24' @DA35410 02665000
         BNE   TINFTCE2            NO, SKIP STATUS SAVING      @DA35410 02666000
         OI    PCBFLAG1,OPCANCLD   INDICATE OPERATOR CANCEL    @D64ADOW 02667000
         IC    R3,TIBRQID          GET MAINTASKS STATUS BYTE   @DA35410 02668000
         STC   R3,PIBOLDST         SAVE IN PIB                 @D37CDFG 02669000
         DROP  R2                  RELEASE PIB BASE POINTER    @D51IDIS 02670000
         DROP  R5                  DROP PCBADR                 @DY45889 02671000
TINFTCE2 LR    R9,R5               PCB POINTER FOR RDYCNCL     @D37CDWK 02672000
         USING PCBADR,R9           ADDRESSABILITY              @DY45889 02673000
         LA    R7,TINCOD00         RETURN FROM RDYCNCL (Y)     @RETCODE 02674000
         L     R3,AARBUFAR         POINT TO ATTENTION BUFFER   @DA35410 02675000
         TM    ARCMDFLG-ARBUFFER(R3),ARCMDCAN CANCEL FORCE     @DA35410 02676000
         BO    RDYCNCL             YES, CANCEL PARTITION       @DA35410 02677000
*SGLINK  RDYCNCL,INPUT=(R1,R6,R7,R9),WORK=(R5,R8,RE,RF)        @D36IDFG 02678000
         L     R3,PCECOMRA         GET COMREG ADDRESS          @DY45889 02679000
         TM    JCSW8-COMREG(R3),IJBSKPAB SKIP AB-EXIT PROC REQD@D64ADOW 02680000
         BO    RDYCNCL             YES,CANCEL PARTITION        @D64ADOW 02681000
*SGLINK  RDYCNCL,INPUT=(R1,R6,R7,R9),WORK=(R5,R8,RE,RF)        @D36IDFG 02682000
         TM    PCBFLAG,PCBMVSEM    EXEC ...,MVS                @D62ADMK 02683000
         BO    TINFTCE3            YES                         @D64ADMK 02684000
         L     R3,TIBTCB           GET TCBPTR                  @DA35410 02685000
         ICM   R5,15,TCBABEX-TCBADR(R3) GET AB EXIT BLOCK      @D62ADMK 02686000
         BZ    RDYCNCL             NO EXIT AVAILABLE --->      @D62ADMK 02687000
*SGLINK  RDYCNCL,INPUT=(R1,R6,R7,R9),WORK=(R5,R8,RE,RF)        @D36IDFG 02688000
         USING EXITBLK,R5                                      @D62ADMK 02689000
         TM    EXITFLG2,EARLYAB+EXESTAEX EARLY AB OR EXTSAEX   @D64ADMK 02690000
         BZ    RDYCNCL             NO, CANCEL PARTITION        @DA35410 02691000
*SGLINK  RDYCNCL,INPUT=(R1,R6,R7,R9),WORK=(R5,R8,RE,RF)        @D36IDFG 02692000
         DROP  R5                  RELEASE EXITBLK BASE        @D62ADMK 02693000
         DROP  R9                  RELEASE PCBADR BASE         @D62ADMK 02694000
TINFTCE3 DS    0H                                              @D62ADMK 02695000
         SLR   R5,R5               CLEAR REGISTER              @DA35410 02696000
         BCTR  R5,0                SET NEGATIV                 @DA35410 02697000
         B     RDYCNCLY            PROPAGATE MAINTASK TERMIN.  @DA35410 02698000
*SGLINK  RDYCNCLY,INPUT=(R1,R5,R6,R7,R9),WORK=(R5,R8,RE,RF)    @DA35410 02699000
         DROP  R6                  DROP DISP BASE              @D61NDOW 02700000
         DROP  R8                  DROP TIBADR                 @D61NDOW 02701000
*--------------------------------------------------------------@D149DWK 02702000
*   TREADY COND = POWER                                        @D319DGN 02703000
*          POST OWNER OF POWER SPOOLED DEVICES                 @D319DGN 02704000
*--------------------------------------------------------------@D149DWK 02705000
         USING PCBADR,R5                                       @D61NDOW 02706000
         USING DISP,R6                                         @D61NDOW 02707000
         USING TIBADR,R8                                       @D61NDOW 02708000
TINFTRPO DS    0H                  START OF CODEBLOCK          @D14CDFG 02709000
         TM    PCBSSFLG,PWR        REQUEST FROM POWER          @D14CDFG 02710000
         BZ    TINFCNAU            NO, TAKE ERROR EXIT         @D51RMGL 02711000
         BAL   R9,TINFCTID         CHECK TID AND GET TIB       @D14CDFG 02712000
*SGLINK  TINFCTID,INPUT=(R0,R9,RC),OUTPUT=(R2,R8)                       02713000
         LR    R0,R1               GET SPECIFIED PU            @D14BDFG 02714000
         BAL   R9,TINFCKPU         CHECK SPEC.PHYSICAL UNIT    @D14BDFG 02715000
*SGLINK  TINFCKPU,INPUT=(R0,R9,RC),OUTPUT=R3                            02716000
         B     TINFCNPU            ERROR (INVALID INDEX)       @D51RMGL 02717000
         BAL   R9,TINFGPBX         POINT TO PUBX               @D14BDFG 02718000
*SGLINK  TINFGPBX,INPUT=(R3,R9,RC),OUTPUT=R4                            02719000
         LR    R0,R2               SAVE TASK ID                @D14BDFG 02720000
         LH    R2,TIBPIK           PIK OF OWNING PARTITION     @D14BDFG 02721000
         BAL   R9,TINFGPCB         POINT TO PCB                @D14BDFG 02722000
*SGLINK  TINFGPCB,INPUT=(R2,R9,RC),OUTPUT=R5                            02723000
         B     TINCOD16            ERROR (DYN.PART.NOT ALLOC.) @D51IDGL 02724000
         NOP   0                   IGNORE STAT.PART.NOT ALLOC. @D51IDGL 02725000
         BAL   R9,TINFPCNT         POINT TO USAGE COUNTERS     @D14BDFG 02726000
*SGLINK  TINFPCNT,INPUT=(R4,R5,R9,RC),OUTPUT=R7                         02727000
         USING DVCUSCNT,R7                                     @D14BDFG 02728000
         TM    DVCLUFLG,DVCPWRSP   POWER SPOOLED DEVICE        @D14BDFG 02729000
         BZ    TINFCNDP            NO, CANCEL                  @D51RMGL 02730000
         CH    R0,DVCPWRTD         REQUEST FOR SPECIFIED TASK  @D14BDFG 02731000
         BNE   TINFTRP0            NO, JUST POST TASK          @D51RMGL 02732000
         XR    RF,RF                                           @D14BDFG 02733000
         STH   RF,DVCPWRTD         CLEAR REQUESTOR TID         @D14BDFG 02734000
         DROP  R7                                              @D14BDFG 02735000
TINFTRP0 BAL   RF,IOPOST1          POST TASK IF I/O BOUND      @D51RMGL 02736000
         TM    PCBFLAG,PWSRVFLG    TASK WAITING FOR SERVICE    @D14CDFG 02737000
         BZ    TINCOD00            IF NOT, RETURN              @D14CDFG 02738000
         NI    PCBFLAG,XFF-PWSRVFLG  RESET INDICATOR           @D14CDFG 02739000
         LR    R1,R2               POST ONLY WITHIN PARTITION  @D14CDFG 02740000
         L     R5,ASRQTAB                                      @D61RDGL 02741000
         LA    R5,SRQPWSRV-SRQTAB(,R5) PTR TO RESOURCE DESCR.  @D61RDGL 02742000
         BAL   RF,RPOST            POST ALL WAITING TASKS      @D14CDFG 02743000
*SGLINK  RPOST,INPUT=(R1,R5,R6,RF),WORK=(R5,RE)                @D149DFG 02744000
         B     TINCOD00                                        @D14CDFG 02745000
         DROP  R5                  DROP PCBADR                 @D61NDOW 02746000
         DROP  R6                  DROP DISP BASE              @D61NDOW 02747000
         DROP  R8                  DROP TIBADR                 @D61NDOW 02748000
*                                  END OF CODEBLOCK            @D36IDFG 02749000
*---------------------------------------------------------------------- 02750000
*   TSTOP :  DEACTIVATE SYSTEM TASK, RETURN = NO               @D36IDFG 02751000
*---------------------------------------------------------------------- 02752000
         USING DISP,R6                                         @D61NDOW 02753000
TINFTWSN DS    0H                                              @D36IDFG 02754000
         CLC   TID,ARTIDH          SYSTEM TASK REQUEST         @D66ADAP 02755000
         BH    TINFCNAU            NO,                         @D51RMGL 02756000
         BAL   R9,TINFGENT         SAVE STATUS                 @D36IDFG 02757000
*SGLINK  TINFGENT,INPUT=(R9,RC),WORK=(R2,R3,R4,R5,R7,RE,RF),           *02758000
               OUTPUT=(R0,R1,R6,R8,RA,RB)                      @D62NDAP 02759000
***      SGSETUP UNPOST                                        @D14NDFG 02760000
         SGSETUP UNPOST            UNPOST CALLER               @D14NDFG 02761000
         DROP  R6                  RELEASE DISP BASE           @D61NDOW 02762000
*---------------------------------------------------------------------- 02763000
*   TSTOP :  DEACTIVATE SYSTEM TASK, RETURN = YES              @D36IDFG 02764000
*---------------------------------------------------------------------- 02765000
         USING DISP,R6                                         @D61NDOW 02766000
TINFTWSY DS    0H                                              @D36IDFG 02767000
         CLC   TID,ARTIDH          SYSTEM TASK REQUEST         @D66IDAP 02768000
         BH    TINFCNAU            NO,                         @D51RMGL 02769000
         BAL   RF,SYSDEACT         DEACTIVATE SYSTEM TASK      @D14NDFG 02770000
*SGLINK  SYSDEACT,INPUT=(RF,R6),WORK=(R5,RE)                   @D14NDFG 02771000
         B     TINCOD00            GO TO EXIT ROUTINE          @RETCODE 02772000
         DROP  R6                  RELEASE DISP BASE           @D61NDOW 02773000
*--------------------------------------------------------------@D149DFG 02774000
*   MODFLD : MODIFY MSECS PARAMETER                            @D149DFG 02775000
*--------------------------------------------------------------@D149DFG 02776000
         SPACE 1                                               @D149DFG 02777000
TINFMOMS DS    0H                   START OF CODEBLOCK         @D14BDFG 02778000
         LA    RB,TINFMMS1          CONTINUATION ADDRESS       @D14BDFG 02779000
         BAL   R9,TINFAUTS          SYSTEM REQUEST             @D14BDFG 02780000
*SGLINK  TINFAUTS,INPUT=(R8,R9,RB,RC)                                   02781000
         BAL   R9,TINFAUTJ          REQUEST FROM JOB CONTROL   @D14BDFG 02782000
*SGLINK  TINFAUTJ,INPUT=(R9,RB,RC),OUTPUT=R7                            02783000
         B     TINFCNAU             NO, ERROR EXIT             @D51RMGL 02784000
TINFMMS1 C     R1,MSECSL            BELOW MINIMUM              @D14BDFG 02785000
         BL    TINCOD08             IF YES, REJECT             @D14BDFG 02786000
         C     R1,MSECSH            ABOVE MAXIMUM              @D14BDFG 02787000
         BH    TINCOD08             IF YES, REJECT             @D14BDFG 02788000
         L     R3,AEXTCPUT          BASE OF EXT.INT.HANDLER    @D51IDIS 02789000
         USING EXTCPUT,R3                                      @D14BDFG 02790000
         SLL   R1,6                 CONVERT MSECS -> 16 MICSEC @D14BDFG 02791000
         ST    R1,MSECS             UPDATE INTERNAL VALUE      @D14BDFG 02792000
         SLL   R1,3                 VALUE TIMES 8              @D14BDFG 02793000
         ST    R1,MAXMSECS          UPDATE INTERNAL LIMIT      @D14BDFG 02794000
         DROP  R3                                              @D14BDFG 02795000
         B     TINCOD00             SET RETURN CODE            @D14BDFG 02796000
MSECSL   DC    F'10'                LOW  LIMIT 10 MILLI-SECONDS@D27ADAP 02797000
MSECSH   DC    F'10000'             HIGH LIMIT 10       SECONDS@D14BDFG 02798000
*                                   END OF CODEBLOCK           @D149DFG 02799000
*---------------------------------------------------------------------- 02800000
*   MODFLD : MODIFY SAVE AREA ADDRESS OF CURRENT TASK          @D36IDFG 02801000
*---------------------------------------------------------------------- 02802000
         USING TCBADR,RA                                       @D61NDOW 02803000
TINFMOSA DS    0H                   START OF CODEBLOCK         @D36IDFG 02804000
         LA    RB,TINFMSA1          CONTINUATION ADDRESS       @D36IDFG 02805000
         BAL   R9,TINFAUTS          SYSTEM REQUEST             @D36IDFG 02806000
*SGLINK  TINFAUTS,INPUT=(R8,R9,RB,RC)                                   02807000
         TM    SYSFLAG2,IPLBIT      NO, IPL REQUEST            @D36IDFG 02808000
         BZ    TINFCNAU             NO, ERROR EXIT             @D51RMGL 02809000
TINFMSA1 DS    0H                   GET TCB POINTER            @D52VDGL 02810000
         ST    R1,TCBSAVE           STORE NEW SAVE AREA ADDR.  @D36IDFG 02811000
         B     TINCOD00             GO TO EXIT ROUTINE         @RETCODE 02812000
         DROP  RA                   DROP TCBADR                @D61NDOW 02813000
*                                   END OF CODEBLOCK           @D149DFG 02814000
*---------------------------------------------------------------------- 02815000
*   MODFLD : MODIFY DASD FILE PROTECTION INDICATOR             @D369DWK 02816000
*---------------------------------------------------------------------- 02817000
         USING TCBADR,RA                                       @D61NDOW 02818000
TINFMOSY DS    0H                   START OF CODEBLOCK                  02819000
         TM    SVOLDP+1,KEY0        HAS REQUESTOR KEY 0                 02820000
         BNZ   TINFCNAU             NO, TAKE ERROR EXIT        @D51RMGL 02821000
         BAL   R9,TINFGTID          CALL, CHECK TID =========>>@D36IDFG 02822000
*SGLINK  TINFGTID,INPUT=(R0,R9,RC),OUTPUT=(R2,R8)                       02823000
         CH    R2,TID               REQUEST FOR CURRENT TASK   @D36IDFG 02824000
         BNE   TINFCNTC             IF NOT, ERROR EXIT         @D51RMGL 02825000
         NI    TCBFLAGS,XFF-SYSRESW SET DASD FP FOR TASK       @D36IDFG 02826000
         LTR   R1,R1                MODIFY TO ON OR OFF                 02827000
         BZ    TINCOD00             OFF, SKIP                  @RETCODE 02828000
         OI    TCBFLAGS,SYSRESW     BYPASS DASD FP FOR TASK    @D36IDFG 02829000
         B     TINCOD00             GO TO EXIT ROUTINE         @RETCODE 02830000
         DROP  RA                   DROP TCBADR                @D61NDOW 02831000
*                                   END OF CODEBLOCK           @D149DFG 02832000
*---------------------------------------------------------------------- 02833000
*   MODFLD : MODIFY CANCEL CODE                                         02834000
*---------------------------------------------------------------------- 02835000
         USING PCBADR,R5                                       @D61NDOW 02836000
         USING TIBADR,R8                                       @D61NDOW 02837000
TINFMOCC DS    0H                  START OF CODEBLOCK          @DA33609 02838000
         N     R1,F255             CANCEL CODE ZERO            @DA33609 02839000
         BZ    TINCOD00            YES IGNORE REQUEST          @RETCODE 02840000
         LA    RB,TINFMOC1         CONTINUATION ADDRESS        @DA33609 02841000
         BAL   R9,TINFAUTS         SYSTEM REQUEST                       02842000
*SGLINK  TINFAUTS,INPUT=(R8,R9,RB,RC)                                   02843000
         BAL   R9,TINFAUTV         VTAM REQUEST                         02844000
*SGLINK  TINFAUTV,INPUT=(R5,R9,RA,RB,RC)                                02845000
         TM    PCBSSFLG,PWR        NO, POWER REQUEST           @D37CDFG 02846000
         BZ    TINFCNAU            NO, TAKE ERROR EXIT         @D51RMGL 02847000
TINFMOC1 BAL   R9,TINFGTID         CALL,CHECK TID/GET TIB ==>> @D36IDFG 02848000
*SGLINK  TINFGTID,INPUT=(R0,R9,RC),OUTPUT=(R2,R8)                       02849000
         STC   R1,TIBCNCL          UPDATE CANCEL CODE          @D36IDFG 02850000
         L     RA,TIBTCB           TCBPOINTER FOR THIS TASK    @DY45849 02851000
         USING TCBADR,RA                                       @DY45849 02852000
         NI    TCBRFLAG,XFF-TCBRCVAL RESET REASON CODE VALID   @DY45849 02853000
         B     TINCOD00            GO TO EXIT ROUTINE          @RETCODE 02854000
         DROP  R5                  DROP PCBADR                 @D61NDOW 02855000
         DROP  R8                  DROP TIBADR                 @D61NDOW 02856000
         DROP  RA                  DROP TCBADR                 @DY45849 02857000
*                                  END OF CODEBLOCK            @D149DFG 02858000
*---------------------------------------------------------------------- 02859000
*   MODFLD : MODIFY CANCEL PROPAGTION FLAG                     @D36IDFG 02860000
*---------------------------------------------------------------------- 02861000
         USING TCBADR,RA                                       @D61NDOW 02862000
TINFMOCA DS    0H                   START OF CODEBLOCK         @D36IDFG 02863000
         LA    RB,TINFCNAU          NOTE: SYSTEM MAY NOT       @D51RMGL 02864000
         BAL   R9,TINFAUTS          USER MAY MODIFY CANCEL ALL @D36IDFG 02865000
*SGLINK  TINFAUTS,INPUT=(R8,R9,RB,RC)                                   02866000
         NI    TCBFLAG2,XFF-CNCLALL RESET CANCEL PROPAG.FLAG   @D36IDFG 02867000
         LTR   R1,R1                MODIFY TO ON OR OFF                 02868000
         BZ    TINCOD00             OFF, SKIP                  @RETCODE 02869000
         OI    TCBFLAG2,CNCLALL     SET CANCEL PROPAGATION FLG @D36IDFG 02870000
         B     TINCOD00             GO TO EXIT ROUTINE         @RETCODE 02871000
         DROP  RA                   DROP TCBADR                @D61NDOW 02872000
*                                   END OF CODEBLOCK           @D149DFG 02873000
*---------------------------------------------------------------------- 02874000
*   MODFLD : MODIFY VTAM OPEN FLAG                                      02875000
*---------------------------------------------------------------------- 02876000
         USING PCBADR,R5                                       @D61NDOW 02877000
         USING TIBADR,R8                                       @D61NDOW 02878000
TINFMOVO DS    0H                   START OF CODEBLOCK                  02879000
         LA    RB,TINFMVO1          CONTINUATION ADDRESS                02880000
         BAL   R9,TINFAUTS          SYSTEM REQUEST                      02881000
*SGLINK  TINFAUTS,INPUT=(R8,R9,RB,RC)                                   02882000
         BAL   R9,TINFAUTV          NO, VTAM REQUEST                    02883000
*SGLINK  TINFAUTV,INPUT=(R5,R9,RA,RB,RC)                                02884000
         B     TINFCNAU             NO, TAKE ERROR EXIT        @D51RMGL 02885000
TINFMVO1 BAL   R9,TINFGTID          CALL,CHECK TID/GET TIB===>>@D36IDFG 02886000
*SGLINK  TINFGTID,INPUT=(R0,R9,RC),OUTPUT=(R2,R8)                       02887000
         SLR   R2,R2                CLEAR FOR INSERT           @D51IDGL 02888000
         IC    R2,PCBVTCNT          GET TASK COUNTER           @D36IDFG 02889000
         LTR   R1,R1                MODIFY TO ON OR OFF        @D36IDFG 02890000
         BZ    TINFMVO3             OFF, SKIP                  @D36IDFG 02891000
         TM    TIBFLAG2,VTOPEN      OPEN ACB BIT ALREADY ON    @D14BDFG 02892000
         BO    TINCOD00             RETURN IF YES              @RETCODE 02893000
         OI    TIBFLAG2,VTOPEN      SET VTAM OPEN ACB BIT      @D14BDFG 02894000
         LA    R2,1(R2)             INCREMENT TASK COUNTER     @D36IDFG 02895000
         B     TINFMVO4             RETURN                     @D36IDFG 02896000
TINFMVO3 TM    TIBFLAG2,VTOPEN      OPEN ACB BIT ALREADY OFF   @D14BDFG 02897000
         BZ    TINCOD00             RETURN IF YES              @RETCODE 02898000
         NI    TIBFLAG2,XFF-VTOPEN  RESET VTAM OPEN ACB BIT    @D14BDFG 02899000
         BCTR  R2,0                 DECREMENT TASK COUNTER     @D36IDFG 02900000
TINFMVO4 STC   R2,PCBVTCNT          STORE COUNTER BACK         @D36IDFG 02901000
         B     TINCOD00             GO TO EXIT ROUTINE         @RETCODE 02902000
         DROP  R5                   DROP PCBADR                @D61NDOW 02903000
         DROP  R8                   DROP TIBADR                @D61NDOW 02904000
*                                   END OF CODEBLOCK                    02905000
*---------------------------------------------------------------------- 02906000
*   MODFLD : MODIFY VTAM AP EXIT STATUS                                 02907000
*---------------------------------------------------------------------- 02908000
         USING TIBADR,R8                                       @D61NDOW 02909000
TINFMOVD DS    0H                   START OF CODEBLOCK         @D36IDFG 02910000
         LA    RB,TINFMVD1          CONTINUATION ADDRESS       @D36IDFG 02911000
         BAL   R9,TINFAUTS          SYSTEM REQUEST             @D36IDFG 02912000
*SGLINK  TINFAUTS,INPUT=(R8,R9,RB,RC)                                   02913000
         BAL   R9,TINFAUTV          NO, VTAM REQUEST           @D36IDFG 02914000
*SGLINK  TINFAUTV,INPUT=(R5,R9,RA,RB,RC)                                02915000
         B     TINFCNAU             NO, TAKE ERROR EXIT        @D51RMGL 02916000
TINFMVD1 DS    0H                   *                          @D36IDFG 02917000
         NI    TIBFLAG,XFF-APSEXFLG RESET VTAM AP EXIT BIT     @D36IDFG 02918000
         LTR   R1,R1                MODIFY TO ON OR OFF        @D36IDFG 02919000
         BZ    TINCOD00             OFF, SKIP                  @RETCODE 02920000
         OI    TIBFLAG,APSEXFLG     SET VTAM AP EXIT BIT       @D36IDFG 02921000
         B     TINCOD00             GO TO EXIT ROUTINE         @RETCODE 02922000
         DROP  R8                   DROP TIBADR                @D61NDOW 02923000
*                                   END OF CODEBLOCK                    02924000
*---------------------------------------------------------------------- 02925000
*   MODFLD : MODIFY ICCF PSEUDO PARTITION INDICATOR            @D36IDWK 02926000
*---------------------------------------------------------------------- 02927000
         USING PCBADR,R5                                       @D61NDOW 02928000
         USING DISP,R6                                         @D61NDOW 02929000
TINFMOEP DS    0H                   START OF CODEBLOCK         @D37CDFG 02930000
         TM    PCBSSFLG,ICCF        ICCF REQUEST               @D37CDFG 02931000
         BZ    TINFCNAU             NO, ERROR EXIT             @D51RMGL 02932000
         BAL   R9,TINFGTID          CALL,CHECK TID/GET TIB===>>@D36GDWK 02933000
*SGLINK  TINFGTID,INPUT=(R0,R9,RC),OUTPUT=(R2,R8)                       02934000
         USING TIBADR,R8            TIB BASE POINTER           @DY45789 02935000
         L     R7,TINFSAV2          GET COMREG ADDRESS         @D62ADMK 02936000
         LTR   R7,R7                COMREG GIVEN               @D62ADMK 02937000
         BZ    TINFMOE1             NO,                        @D62ADMK 02938000
         L     R10,TIBTCB           ADDRESS OF TCB             @DY45789 02939000
         USING TCBADR,R10           GET ADDRESSABILITY         @D62ADMK 02940000
         L     R15,TCBATCBE         TCB EXTENSION              @D62ADMK 02941000
         DROP  R10                  ADDRESSABILITY             @D62ADMK 02942000
         ST    R7,TCBXICOM-TCBXADR(R15) STORE COMREG PTR       @D62ADMK 02943000
TINFMOE1 DS    0H                                              @D62ADMK 02944000
         L     RF,ADISPICP          GET ADDR. OF SET/RESET ROUT@D52VDIS 02945000
         LA    R7,TINCOD00          SET RET.CODE AFTER RETURN  @D52VDIS 02946000
         BR    RF                   CALL SET/RESET ROUTINE     @D52VDIS 02947000
*SGLINK  DISPICP,INPUT=(1,6,7,8,15),WORK=(1,15)                         02948000
         DROP  R8                   DROP TIB      BASE         @DY45789 02949000
         DROP  R5                   DROP PCBADR   BASE         @D61NDOW 02950000
         DROP  R6                   DROP DISP     BASE         @D61NDOW 02951000
*                                   END OF CODEBLOCK                    02952000
*---------------------------------------------------------------------- 02953000
*   MODFLD : MODIFY ICCF ROLL OUT FLAG                         @D36IDWK 02954000
*---------------------------------------------------------------------- 02955000
         USING PCBADR,R5                                       @D61NDOW 02956000
         USING TIBADR,R8                                       @D61NDOW 02957000
TINFMORO DS    0H                   START OF CODEBLOCK         @D37CDFG 02958000
         TM    PCBSSFLG,ICCF        ICCF REQUEST               @D37CDFG 02959000
         BZ    TINFCNAU             NO, ERROR EXIT             @D51RMGL 02960000
         BAL   R9,TINFGTID          CALL,CHECK TID/GET TIB===>>@D36GDWK 02961000
*SGLINK  TINFGTID,INPUT=(R0,R9,RC),OUTPUT=(R2,R8)                       02962000
         NI    TIBFLAG,XFF-ROLLOUT  RESET ICCF RO FLAG         @D36IDWK 02963000
         LTR   R1,R1                MODIFY TO ON OR OFF        @D36IDFG 02964000
         BZ    TINCOD00             OFF, SKIP                  @RETCODE 02965000
         OI    TIBFLAG,ROLLOUT      SET ICCF RO FLAG           @D36IDWK 02966000
         B     TINCOD00             GO TO EXIT ROUTINE         @RETCODE 02967000
         DROP  R5                   DROP PCBADR                @D61NDOW 02968000
         DROP  R8                   DROP TIBADR                @D61NDOW 02969000
*                                   END OF CODEBLOCK                    02970000
*--------------------------------------------------------------@D36GDWK 02971000
*   MODFLD : MODIFY ICCF SVC SCREENING FLAG                    @D36GDWK 02972000
*--------------------------------------------------------------@D36GDWK 02973000
         USING PCBADR,R5                                       @D61NDOW 02974000
         USING TIBADR,R8                                       @D61NDOW 02975000
         USING TCBADR,RA                                       @D61NDOW 02976000
TINFMOIC DS    0H                   START OF CODEBLOCK         @D37CDFG 02977000
         TM    PCBSSFLG,ICCF        ICCF REQUEST               @D37CDFG 02978000
         BZ    TINFCNAU             NO, ERROR EXIT             @D51RMGL 02979000
         BAL   R9,TINFGTID          CALL,CHECK TID/GET TIB ==>>@D36GDWK 02980000
*SGLINK  TINFGTID,INPUT=(R0,R9,RC),OUTPUT=(R2,R8)                       02981000
         CH    R2,TID               REQUEST FOR CURRENT TASK   @D36GDWK 02982000
         BE    TINFMOI0             YES, TAKE FAST PATH        @D36GDWK 02983000
         BAL   R9,TINFGENT          CALL, SAVE STATUS =======>>@D36GDWK 02984000
*SGLINK  TINFGENT,INPUT=(R9,RC),WORK=(R2,R3,R4,R5,R7,RE,RF),           *02985000
               OUTPUT=(R0,R1,R6,R8,RA,RB)                      @D62NDAP 02986000
         BAL   R9,TINFGTID          CALL,RELOAD TIB PTR =====>>@D36GDWK 02987000
*SGLINK  TINFGTID,INPUT=(R0,R9,RC),OUTPUT=(R2,R8)                       02988000
         BAL   R9,TINFMOI1          HANDLE REQUEST             @D36GDWK 02989000
         USING SVEARA,RB            SET RETURN CODE IN SAVE    @KD40320 02990000
         XC    SVER0F,SVER0F        *  AREA ADDRESSED BY       @KD40320 02991000
         DROP  RB                   *  REGISTER RB             @KD40320 02992000
         BR    R6                   EXIT TO DISPATCHER         @D36GDWK 02993000
TINFMOI0 LA    R9,TINCOD00          GET RETURN ADDRESS         @RETCODE 02994000
TINFMOI1 L     RA,TIBTCB            GET TCB ADDRESS            @D36GDWK 02995000
         NI    TCBFLAGS,XFF-ICCFSVC RESET ICCF SVC SCREEN.FLAG @D36GDWK 02996000
         LTR   R1,R1                MODIFY TO ON OR OFF        @D36GDWK 02997000
         BZR   R9                   OFF, SKIP                  @D36GDWK 02998000
         OI    TCBFLAGS,ICCFSVC     SET ICCF SVC SCREEN.FLAG   @D36GDWK 02999000
         BR    R9                   GO TO EXIT ROUTINE         @D36GDWK 03000000
         DROP  R5                   DROP PCBADR                @D61NDOW 03001000
         DROP  R8                   DROP TIBADR                @D61NDOW 03002000
         DROP  RA                   DROP TCBADR                @D61NDOW 03003000
*                                   END OF CODEBLOCK                    03004000
*---------------------------------------------------------------------- 03005000
*   MODFLD : MODIFY ACLOS FLAG                                 @D36IDWK 03006000
*---------------------------------------------------------------------- 03007000
         USING TCBADR,RA                                       @D61NDOW 03008000
TINFMOAC DS    0H                   START OF CODEBLOCK         @D36IDWK 03009000
         LA    R9,TINFCNAU          SET ERROR RETURN           @D51RMGL 03010000
         BAL   RB,TINFAUTS          SYSTEM REQUEST             @D36IDWK 03011000
*SGLINK  TINFAUTS,INPUT=(R8,R9,RB,RC)                                   03012000
         NI    TCBFLAGS,XFF-ACLOSE  RESET ACLOSE FLAG          @D36IDWK 03013000
         LTR   R1,R1                CHECK NEW VALUE            @D36IDWK 03014000
         BZ    TINCOD00             ZERO, RESET FLAG           @RETCODE 03015000
         OI    TCBFLAGS,ACLOSE      SET ACLOSE FLAG            @D36IDWK 03016000
         B     TINCOD00             GO TO EXIT ROUTINE         @RETCODE 03017000
         DROP  RA                   DROP TCBADR                @D61NDOW 03018000
*                                   END OF CODEBLOCK           @D36IDWK 03019000
*---------------------------------------------------------------------- 03020000
*   MODFLD : MODIFY VSAMOPEN FLAG                              @D369DWK 03021000
*            AUTHORIZATION CHECK FOR OPEN/CLOSE NOT YET        @D369DWK 03022000
*            POSSIBLE                                          @D369DWK 03023000
*---------------------------------------------------------------------- 03024000
         USING TIBADR,R8                                       @D61NDOW 03025000
         USING TCBADR,RA                                       @D61NDOW 03026000
TINFMVSO DS    0H                   START OF CODEBLOCK         @D14CDFG 03027000
         BAL   R9,TINFMTIB          POINT TO 'MAIN TASK' TIB   @D14CDFG 03028000
*SGLINK  TINFMTIB,INPUT=(R8,R9,RC),WORK=(R2,RA),OUTPUT=R8               03029000
         L     RA,TIBTCB            POINT TO APPROPRIATE TCB   @D36IDWK 03030000
         NI    TCBFLAGS,XFF-VSMOPEN RESET VSAMOPEN FLAG        @D14CDFG 03031000
         LTR   R1,R1                CHECK NEW VALUE            @D36IDWK 03032000
         BZ    TINCOD00             ZERO, RESET FLAG           @RETCODE 03033000
         OI    TCBFLAGS,VSMOPEN     SET VSAMOPEN FLAG          @D36IDWK 03034000
         B     TINCOD00             GO TO EXIT ROUTINE         @RETCODE 03035000
         DROP  R8                   DROP TIBADR                @D61NDOW 03036000
         DROP  RA                   DROP TCBADR                @D61NDOW 03037000
*                                   END OF CODEBLOCK           @D36IDWK 03038000
*--------------------------------------------------------------@D149DWK 03039000
*   MODFLD : MODIFY LIBRARIAN SERVICE INDICATOR                @D149DWK 03040000
*--------------------------------------------------------------@D149DWK 03041000
         USING TIBADR,R8                                       @D61NDOW 03042000
         USING PCBADR,R5                                       @D61NDOW 03043000
TINFMLIB DS    0H                   START OF CODEBLOCK         @D14CDWK 03044000
         BAL   R9,TINFGTID          CALL,CHECK TID ==========>>@D14CDWK 03045000
*SGLINK  TINFGTID,INPUT=(R0,R9,RC),OUTPUT=(R2,R8)                       03046000
         NI    TIBFLAG2,XFF-LIBRSERA LIBRARIAN SERVICE INACTIVE@D14CDWK 03047000
         LTR   R1,R1                MODIFY TO ON OR OFF        @D14CDWK 03048000
         BZ    TINCOD00             RETURN IF OFF              @RETCODE 03049000
         OI    TIBFLAG2,LIBRSERA    LIBRARIAN SERVICE ACTIVE   @D14CDWK 03050000
         LR    R3,R2                SAVE TID JUST HANDLED      @D14CDWK 03051000
         L     R2,PCEPIB2           POINT TO CURRENT PIB       @D52VDGL 03052000
         USING PIB2ADR,R2           PIB2 BASE POINTER          @D51IDIS 03053000
         CH    R3,PIBMTID           MAINTASK ALREADY HANDLED   @D14CDWK 03054000
         BE    TINCOD00             YES, EXIT                  @RETCODE 03055000
         LH    R8,PIBMTID           GET MAINTASK ID            @D14CDWK 03056000
         SLL   R8,2                MULTIPLY WITH FOUR          @D66IDAP 03057000
         AL    R8,ATIBATAB         ADDRESS OF TIB ADDESS       @D66IDAP 03058000
         L     R8,0(,R8)           ADDRESS OF TIB              @D66IDAP 03059000
         OI    TIBFLAG2,LIBRSERA    LIBRARIAN SERVICE ACTIVE   @D14CDWK 03060000
         B     TINCOD00             EXIT                       @RETCODE 03061000
         DROP  R2                   RELEASE PIB2 BASE POINTER  @D51IDAP 03062000
         DROP  R8                   DROP TIBADR                @D61NDOW 03063000
         DROP  R5                   DROP PCBADR                @D61NDOW 03064000
*                                   END OF CODEBLOCK           @D36IDWK 03065000
*--------------------------------------------------------------@D36BDWK 03066000
*   MODFLD : STATUS OF OPEN ROUTINE IN SVA                     @D36BDWK 03067000
*--------------------------------------------------------------@D36BDWK 03068000
         USING TCBADR,RA                                       @D61NDOW 03069000
TINFMOPS DS    0H                   START OF CODEBLOCK         @D36BDFG 03070000
         BAL   R9,TINFGTID          CALL,CHECK TID ==========>>@D36BDFG 03071000
*SGLINK  TINFGTID,INPUT=(R0,R9,RC),OUTPUT=(R2,R8)                       03072000
         CH    R2,TID               REQUEST FOR CURRENT TASK   @D36BDFG 03073000
         BNE   TINFCNTC             IF NOT, ERROR EXIT         @D51RMGL 03074000
         NI    TCBFLAG2,XFF-OPENSVA RESET FLAG                 @DA23675 03075000
         LTR   R1,R1                MODIFY TO ON OR OFF        @D36BDFG 03076000
         BZ    TINCOD00             OFF, SKIP                  @RETCODE 03077000
         OI    TCBFLAG2,OPENSVA     SET FLAG ON                @DA23675 03078000
         B     TINCOD00             GO TO EXIT ROUTINE         @RETCODE 03079000
         DROP  RA                   DROP TCBADR                @D61NDOW 03080000
*                                   END OF CODEBLOCK           @D36IDWK 03081000
*--------------------------------------------------------------@D149DWK 03082000
*   MODFLD : RESERVED-FOR-VOLUME-CHANGE INDICATOR STATUS       @D149DWK 03083000
*--------------------------------------------------------------@D149DWK 03084000
         USING PBXADR,R4                                       @D61NDOW 03085000
TINFMOMF DS    0H                  START OF CODEBLOCK          @D14BDFG 03086000
         LA    RB,TINFMOM1         CONTINUATION ADDRESS        @D14BDFG 03087000
         BAL   R9,TINFAUTS         CHECK FOR SYSTEM REQUEST    @D14BDFG 03088000
*SGLINK  TINFAUTS,INPUT=(R8,R9,RB,RC)                                   03089000
         BAL   R9,TINFAUTJ         CHECK FOR JOB CONTROL       @D14BDFG 03090000
*SGLINK  TINFAUTJ,INPUT=(R9,RB,RC),OUTPUT=R7                            03091000
         B     TINFCNAU            REQUESTOR NOT AUTHORIZED    @D51RMGL 03092000
TINFMOM1 BAL   R9,TINFCKPU         CHECK SPEC.PHYSICAL UNIT    @D14BDWK 03093000
*SGLINK  TINFCKPU,INPUT=(R0,R9,RC),OUTPUT=R3                            03094000
         B     TINFCNPU            ERROR (INVALID INDEX)       @D51RMGL 03095000
         BAL   R9,TINFGPBX         POINT TO PUBX               @D14BDFG 03096000
*SGLINK  TINFGPBX,INPUT=(R3,R9,RC),OUTPUT=R4                            03097000
         LR    RE,R1               SAVE NEW VALUE              @DA33563 03098000
         BAL   R9,TINFCKOW         CHECK DEVICE OWNER          @D14BDFG 03099000
*SGLINK  TINFCKOW,INPUT=(R3,R4,R9,RC),WORK=(R0,R2,R7,R8,RB),           *03100000
               OUTPUT=(R1,RF)                                  @D62NDAP 03101000
         C     RF,F4               NO/UNIQUE/MULTIPLE OWNER    @D14BDFG 03102000
         BH    TINSETRC            MULTIPLE OWNER, REJECT      @D14BDFG 03103000
         BL    TINFMOM2            NO OWNER, ACCEPT            @D14BDFG 03104000
         CH    R1,PIK              OWNED BY REQUESTOR          @D14BDFG 03105000
         BNE   TINCOD08            IF NOT, REJECT              @D51MDGL 03106000
TINFMOM2 DS    0H                                              @D51MDGL 03107000
         LH    R2,PIK              TAKE CURRENT PIK            @PBXOWGL 03108000
         LTR   RE,RE               MODIFY TO ON OR OFF         @PBXOWGL 03109000
         BNZ   TINFMOM4            MODIFY TO ON                @PBXOWGL 03110000
         TM    PBXFLAG2,PBXMTFLG   IS IT ON AT ALL             @D6X..RP 03111000
         BZ    TINCOD00            NO, ========> RETURN        @D6X..RP 03112000
         NI    PBXFLAG2,XFF-PBXMTFLG RESET MOUNT FLAG          @PBXOWGL 03113000
         BAL   R9,TINFRDEV        FREE DEVICE IF POSSIBLE      @D6X..RP 03114000
*SGLINK  TINFRDEV,INPUT=(R3,R4,R9,RC),WORK=R1                           03115000
         B     TINCOD00            ===========> RETURN         @PBXOWGL 03116000
TINFMOM4 OI    PBXFLAG2,PBXMTFLG   SET MOUNT FLAG ON           @PBXOWGL 03117000
         MVC   PBXOWNER,PIK        SET PIK OF MOUNTING PARTIT. @PBXOWGL 03118000
         B     TINCOD00            RETURN                      @PBXOWGL 03119000
         DROP  R4                  DROP PBXADR                 @D61NDOW 03120000
*                                  END OF CODEBLOCK            @PBXOWGL 03121000
*---------------------------------------------------------------------- 03122000
*   MODFLD : TURN ON/OFF PER BITS IN PARTITION PSW'S FOR SDAID @D14BDFR 03123000
*---------------------------------------------------------------------- 03124000
         SPACE 1                                               @D14BDFR 03125000
         USING PCBADR,R5                                       @D61NDOW 03126000
TINFMOPB DS    0H               TEMPORARY VALIDATION SKIP      @DXBCDWK 03127000
         BAL   R9,TINFCPIK         CHECK PIK                   @D14BDFR 03128000
*SGLINK  TINFCPIK,INPUT=(R0,R9,RC),WORK=(R0),OUTPUT=R2                  03129000
         B     TINFCNPK            ERROR (ILLEGAL PIK)         @D51RMGL 03130000
         BAL   R9,TINFGPCB         POINT TO PCB                @D14BDFR 03131000
*SGLINK  TINFGPCB,INPUT=(R2,R9,RC),OUTPUT=R5                            03132000
         B     TINCOD16            ERROR (DYN.PART.NOT ALLOC.) @D51IDGL 03133000
         NOP   0                   IGNORE STAT.PART.NOT ALLOC  @D51IDGL 03134000
         SR    R9,R9               RESET WORKREG               @D14BDFR 03135000
         LR    R4,R9               RESET WORKREG               @D14BDFR 03136000
         SPACE 1                                               @D14BDFR 03137000
         NI    PCBFLAG,XFF-PERACT  RESET PER BIT IN PCBFLAG    @D14BDFR 03138000
         LTR   R1,R1               PER BIT TO BE SET           @D14BDFR 03139000
         BZ    TINFMOP2            NO, GOTO PROC.TASK SAVEAREAS@D14BDFR 03140000
         OI    PCBFLAG,PERACT      TURN ON PER BIT IN PCBFLAG  @D14BDFR 03141000
         AIF   (&VSE260).Y260080                                        03142000
TINFMOP2 LH    R3,PCBLCTSS         GET NUMBER OF SUBTASKS      @D14BDFR 03143000
         LA    R3,1(,R3)           POINT BEHIND MAINTASKS ID   @D14BDFR 03144000
         SPACE 1                                               @D14BDFR 03145000
TINFMOP3 LA    RB,TIDSTR-1(R3)     GET ADDRESS OF TASK-ID      @KS30630 03146000
         CLI   0(RB),ARTID         ATTENTION TASK              @D66IDAP 03147000
         BE    TINFMOP4            YES, SPECIAL AR PROCESSING  @KS30630 03148000
         SLR   R8,R8                                                    03149000
         IC    R8,TIDSTR-1(R3)     GET TASK ID                 @KS30630 03150000
         SLL   R8,2                MULTIPLY WITH FOUR          @D14BDFR 03151000
         AL    R8,ATIBATAB         ADDRESS OF TIB ADDRESS      @D66ADAP 03152000
         L     R8,0(,R8)           TIB ADDRESS                 @D66ADAP 03153000
         USING TIBADR,R8                                       @D61NDOW 03154000
         OI    TIBFLAG,TIBDELMV    GENERAL DELAYED MOVE EXIT   @D14NDFG 03155000
         OI    TIBDMFLG,TIBPERST   DELAYED PER BIT SETTING     @D14NDFG 03156000
         BCT   R3,TINFMOP3         REPEAT LOOP FOR ANY NEXT ID @D14BDFR 03157000
         B     TINCOD00            RETURN TO CALLER            @RETCODE 03158000
         SPACE 1                                               @D14NDFG 03159000
TINFMOP4 L     RB,ASYSPCB          GET SYSTEM PCB ADDRESS      @D51IDIS 03160000
         L     RB,PCEPIB-PCBADR(,RB)  GET AR PIB ADDRESS       @D51IDIS 03161000
         L     RB,PIBSAV2N-PIBADR(,RB) GET AR SAVE AREA        @D51IDIS 03162000
         USING SVEARA,RB                                       @KS30630 03163000
         NI    SVEPSW,XFF-PERMASK  RESET PER BIT IN PSW        @KS30630 03164000
         LTR   R1,R1               PER BIT TO SET              @KS30630 03165000
         BZ    TINFMOP5                                        @FIX..GL 03166000
         OI    SVEPSW,PERMASK      SET PER BIT IN PSW          @KS30630 03167000
TINFMOP5 BCT   R3,TINFMOP3         PROCESS NEXT TASK           @KS30630 03168000
         B     TINCOD00            RETURN TO CALLER            @RETCODE 03169000
         DROP  RB                                              @KS30630 03170000
         AGO   .NMTSK40                                                 03171000
.Y260080 ANOP                                                           03172000
TINFMOP2 DS    0H                                              @D66IDAP 03173000
         L     R8,PCEPIB2                                      @DY99999 03174000
         USING PIB2ADR,R8                                      @D66ODOW 03175000
         LH    R8,PIBMTID          GET MAINTASK ID             @D66ODOW 03176000
         SLL   R8,2                GET TIB ...                 @D66ODOW 03177000
         AL    R8,ATIBATAB         ...OF MAINTASK              @D66ODOW 03178000
         USING TIBADR,R8                                       @D66ODOW 03179000
         CLI   TIBRQID,NOTACT      MAINTASK ACTIVE             @DY99999 03180000
         BNE   TINFMOPX            YES --->                    @DY99999 03181000
         OI    TIBFLAG,TIBDELMV    GENERAL DELAYED MOVE EXIT   @D66ODOW 03182000
         OI    TIBDMFLG,TIBPERST   DELAYED PER BIT SETTING     @D66ODOW 03183000
         DROP  R8                                              @D66ODOW 03184000
         B     TINCOD00                                        @D66ODOW 03185000
TINFMOPX DS    0H                                              @D66IDAP 03186000
         SLR   R8,R8               REQUEST HIGHEST PRIORITY    @D66IDAP 03187000
TINFMOP3 DS    0H'0'                                                    03188000
*        DISPMAC FUNC=TIB,SFUNC=NEXTLOW,ERREXIT=TINFMOER       @D66CDAP 03189000
         DISPMAC FUNC=TIB,SFUNC=NEXTLOW,ERREXIT=TINFMOER       @D66CDAP 03190000
*SGLINK  DISPMAC INPUT=(R5,R8),OUTPUT=R8                       @D66CDAP 03191000
         LTR   R8,R8               MORE SUBTASKS TO PROCESS    @D66CDAP 03192000
         BZ    TINCOD00            NO, WE ARE DONE             @D66CDAP 03193000
         USING TIBADR,R8           TIB BASE POINTER            @D66CDAP 03194000
         C     R8,AARTIB           ATTENTION TASK              @D66CDAP 03195000
         BE    TINFMOP4            YES,                        @D66CDAP 03196000
         OI    TIBFLAG,TIBDELMV    GENERAL DELAYED MOVE EXIT   @D14NDFG 03197000
         OI    TIBDMFLG,TIBPERST   DELAYED PER BIT SETTING     @D14NDFG 03198000
         B     TINFMOP3            PROCESS NEXT SUBTASK        @D66CDAP 03199000
TINFMOP4 L     RB,ASYSPCB          GET SYSTEM PCB ADDRESS      @D51IDIS 03200000
         L     RB,PCEPIB-PCBADR(,RB)  GET AR PIB ADDRESS       @D51IDIS 03201000
         L     RB,PIBSAV2N-PIBADR(,RB) GET AR SAVE AREA        @D51IDIS 03202000
         USING SVEARA,RB                                       @KS30630 03203000
         NI    SVEPSW,XFF-PERMASK  RESET PER BIT IN PSW        @KS30630 03204000
         LTR   R1,R1               PER BIT TO SET              @KS30630 03205000
         BZ    TINFMOP3            NO, PROCESS NEXT SUBASK     @D66IDAP 03206000
         OI    SVEPSW,PERMASK      SET PER BIT IN PSW          @KS30630 03207000
         B     TINFMOP3            PROCESS NEXT SUBASK         @D66IDAP 03208000
         SPACE 1                                                        03209000
TINFMOER BAL   R5,SYSERROR                                     @D66CDAP 03210000
         DROP  RB                                              @KS30630 03211000
.NMTSK40 ANOP                                                  @D66CDAP 03212000
         SPACE 1                                               @D14NDFG 03213000
*                                                              @D52VDGL 03214000
*  THE NEXT LABEL IS AN ENTRY TAKEN BY THE DISPATCHER.         @D52VDGL 03215000
*  FOR DELAYED MOVE PROCESSING.                                @D52VDGL 03216000
*                                                              @D52VDGL 03217000
TINFMOPD DS    0H                  DISPATCHER EXIT ROUTINE     @D14NDFG 03218000
         LTR   RB,RB               SAVE AREA PROVIDED          @KS30315 03219000
         BZR   R6                  EXIT TO DISPATCHER          @KS30315 03220000
         L     RC,FSVCBASE         FIRST BASE REGISTER         @D14NDFG 03221000
         L     RD,FSVCBAS2         SECOND BASE REGISTER        @D14BDFR 03222000
         USING SVEARA,RB                                       @D14BDFR 03223000
         NI    SVEPSW,XFF-PERMASK  RESET PER BIT IN PSW        @D14BDFR 03224000
         TM    PCBFLAG,PERACT      PER BIT TO BE SET           @D14NDFG 03225000
         BZR   R6                  NO, RETURN TO DISPATCHER    @D14NDFG 03226000
         OI    SVEPSW,PERMASK      TURN ON PER BIT IN PSW      @D14BDFR 03227000
         DROP  RB                                              @D14BDFR 03228000
         BR    R6                  EXIT TO DISPATCHER          @D14BDFR 03229000
         DROP  R5                  DROP PCBADR                 @D61NDOW 03230000
         DROP  R8                  DROP TIBADR                 @D61NDOW 03231000
         SPACE 1                                               @D36BDWK 03232000
***************************************************************@D51IDGL 03233000
*                                                             *@D51IDGL 03234000
*  MODFLD : FIELD=COPYOWN,PU=...,NEWVAL=...                   *@D51IDGL 03235000
*                                                             *@D51IDGL 03236000
*  FUNCTION: COPY ALL PUBOWNERSHIP BITS FROM THE DEVICE IDEN- *@D51IDGL 03237000
*    TIFIED BY PU= TO THE OWNERSHIP ENTRY OF THE DEVICE GIVEN *@D51IDGL 03238000
*    BY NEWVAL=...                                            *@D51IDGL 03239000
*  ON ENTRY: SEE STANDARD CONVENTION ABOVE                    *@D51IDGL 03240000
*    R0 = PUBINDEX OF OLD DEVICE FROM WHICH TO TAKE DATA      *@D51IDGL 03241000
*    R1 = PUBINDEX OF NEW DEVICE TO WHICH DATA SHALL BE COPIED*@D51IDGL 03242000
*  ON EXIT TO TINCOD00:  REQUEST IS PROCESSED.                *@D51IDGL 03243000
***************************************************************@D51IDGL 03244000
         USING PCBADR,R5                                       @D61NDOW 03245000
TINFCPOW DS    0H                START OF CODEBLOCK            @D51IDGL 03246000
         CLC   TID,ARTIDH        ERROR (IT IS NOT ATTENTION    @D66IDAP 03247000
         BE    TINCPOW1          *      TASK)&                 @KD40386 03248000
         LA    RB,TINCPOW1       *     (CALLER IS NOT JOB      @D52VDGL 03249000
         BAL   R9,TINFAUTJ       *      CONTROL,               @D52VDGL 03250000
*SGLINK  TINFAUTJ,INPUT=(R9,RB,RC),OUTPUT=R7                            03251000
         TM    PCBSSFLG,PWR      *     )&(NOT POWER))          @D52VDGL 03252000
         BNO   TINFCNAU          *                             @D52VDGL 03253000
TINCPOW1 DS    0H                *                             @D51IDGL 03254000
         BAL   R9,TINFCKPU       CALL, CHECK NEW INDEX ======>>@D51IDGL 03255000
*SGLINK  TINFCKPU,INPUT=(R0,R9,RC),OUTPUT=R3                            03256000
         B     TINSETRC          ERROR (INVALID PUBINDEX)      @D51IDGL 03257000
         LR    R4,R3             R4: TAKE VALID OLD INDEX      @D51IDGL 03258000
         LR    R0,R1             R0: TAKE NEW INDEX            @D51IDGL 03259000
         BAL   R9,TINFCKPU       CALL, CHECK VALIDITY =======>>@D51IDGL 03260000
*SGLINK  TINFCKPU,INPUT=(R0,R9,RC),OUTPUT=R3                            03261000
         B     TINSETRC          ERROR (INVALID PUBINDEX)      @D51IDGL 03262000
         BAL   R9,TINFPOWN       CALL,GET OWNERSHIP ENTRY ===>>@D51IDGL 03263000
*SGLINK  TINFPOWN,INPUT=(R3,R9,RC),OUTPUT=R7                            03264000
         LR    R5,R7             R5: POINTER TO NEW OWNER      @D51IDGL 03265000
         LR    R3,R4             R3: TAKE OLD OWNER INDEX      @D51IDGL 03266000
         BAL   R9,TINFPOWN       CALL,GET OWNERSHIP ENTRY ===>>@D51IDGL 03267000
*SGLINK  TINFPOWN,INPUT=(R3,R9,RC),OUTPUT=R7                            03268000
         LH    R2,0(,R7)         TAKE OLD PUBOWNER ENTRY       @D51IDGL 03269000
         STH   R2,0(,R5)         *  AND STORE TO NEW ENTRY     @D51IDGL 03270000
         SLR   R2,R2             RESET OWNERSHIP BITS IN       @D51IDGL 03271000
         STH   R2,0(,R7)         *  OLD PUBOWNER ENTRY         @D51IDGL 03272000
         LH    R2,IJBPWNXL       RETURN IF (LENGTH OF          @D51IDGL 03273000
         LTR   R5,R2             *  ENTRY IN PUBOWNER EXTEN-   @D51IDGL 03274000
         BZ    TINCOD00          *  SION IS ZERO)              @D51IDGL 03275000
         MR    R2,R2             R3: POINT TO ENTRY OF OLD     @D51IDGL 03276000
         A     R3,IJBPOWNX       *   DEVICE                    @D51IDGL 03277000
         MR    R4,R1             R4: POINT TO ENTRY OF NEW     @D51IDGL 03278000
         A     R5,IJBPOWNX       *   DEVICE                    @D51IDGL 03279000
         LH    R2,IJBPWNXL       R2: TAKE LENGTH OF ENTRY - 1  @D51IDGL 03280000
         BCTR  R2,0              *   I.E. ADJUSTED FOR EX INST.@D51IDGL 03281000
         EX    R2,TINCPOWM       COPY ENTRY AND                @D51IDGL 03282000
         EX    R2,TINCPOWC       CLEAR THE OLD ENTRY           @D51IDGL 03283000
         B     TINCOD00          RETURN =====================>>@D51IDGL 03284000
         DROP  R5                  DROP PCBADR                 @D61NDOW 03285000
*                                END OF CODEBLOCK              @D51IDGL 03286000
TINCPOWM MVC   0(*-*,R5),0(R3)   . FOR COPY OF PUBOWNER BYTES  @D51IDGL 03287000
TINCPOWC XC    0(*-*,R3),0(R3)   . FOR CLEAR OF OLD PUBOWNER   @D51IDGL 03288000
***************************************************************@D51IDGL 03289000
*                                                             *@D51IDGL 03290000
*  MODFLD : FIELD=RESETOWN,PU=..,PART=...                     *@D51IDGL 03291000
*                                                             *@D51IDGL 03292000
*  FUNCTION: RESET OWNERSHIP BIT FOR PARTITION PART=... IN    *@D51IDGL 03293000
*    THE PUB OWNERSHIP ENTRY OF DEVICE PU=... BUT DO NOT      *@D51IDGL 03294000
*    TAKE CARE OF THE DEVICE USAGE COUNTER.                   *@D51IDGL 03295000
*  ON ENTRY: SEE STANDARD CONVENTION ABOVE                    *@D51IDGL 03296000
*    R0 = PUBINDEX GIVEN IN PU PARAMETER                      *@D51IDGL 03297000
*    R1 = PIK OF PARTITION OR ZERO                            *@D51IDGL 03298000
*  ON EXIT TO TINCOD00:  REQUEST IS PROCESSED.                *@D51IDGL 03299000
***************************************************************@D51IDGL 03300000
         USING PCBADR,R5                                       @D61NDOW 03301000
TINFRSOW DS    0H                START OF CODEBLOCK            @D51IDGL 03302000
         LA    RB,TINRSOW1       ERROR (CALLER IS NOT JOB      @D52VDGL 03303000
         BAL   R9,TINFAUTJ       *      CONTROL,               @D52VDGL 03304000
*SGLINK  TINFAUTJ,INPUT=(R9,RB,RC),OUTPUT=R7                            03305000
         TM    PCBSSFLG,PWR      *     )&(NOT POWER))          @D52VDGL 03306000
         BNO   TINFCNAU          *                             @D52VDGL 03307000
TINRSOW1 DS    0H                *                             @D51IDGL 03308000
         BAL   R9,TINFCKPU       CALL, CHECK NEW INDEX ======>>@D51IDGL 03309000
*SGLINK  TINFCKPU,INPUT=(R0,R9,RC),OUTPUT=R3                            03310000
         B     TINSETRC          ERROR (INVALID PUBINDEX)      @D51IDGL 03311000
         LR    R0,R1             R0: TAKE USERS PIK, IF ANY    @D51IDGL 03312000
         BAL   R9,TINFCPIK       CALL,CHECK PIK =============>>@D51IDGL 03313000
*SGLINK  TINFCPIK,INPUT=(R0,R9,RC),WORK=(R0),OUTPUT=R2                  03314000
         B     TINSETRC          ERROR (ILLEGAL PIK)           @D51IDGL 03315000
         BAL   R9,TINFGPBX       POINT TO PUBX                 @PBXOWGL 03316000
*SGLINK  TINFGPBX,INPUT=(R3,R9,RC),OUTPUT=R4                            03317000
         BAL   RA,TINFRESO       CALL,RESET PUBOWNERSHIP ====>>@D51IDGL 03318000
*SGLINK  TINFRESO,INPUT=(R2,R3,R4,RA,RC),WORK=(R0,R7,R8,R9,RB)          03319000
         B     TINCOD00          RETURN =====================>>@D51IDGL 03320000
         DROP  R5                  DROP PCBADR                 @D61NDOW 03321000
*                                END OF CODEBLOCK              @D51IDGL 03322000
***************************************************************         03323000
*                                                             *         03324000
*  MODFLD : FIELD=RUNMODE                                     *         03325000
*                                                             *         03326000
*  FUNCTION: SWITCH RUN MODE FROM REAL TO VIRTUAL AND VICE    *         03327000
*    VERSA AND UPDATE NUMBER OF ACTIVE PARTITIONS.            *         03328000
*  ON ENTRY: SEE STANDARD CONVENTION ABOVE                    *         03329000
*  ON EXIT TO TINCOD00:  REQUEST IS PROCESSED.                *         03330000
***************************************************************         03331000
         USING PCBADR,R5                                       @D61NDOW 03332000
         USING TIBADR,R8                                       @D61NDOW 03333000
TINFMORM DS    0H                START OF CODEBLOCK            @D14NDFG 03334000
         LA    R9,TINFCNAU       CALL CHECK FOR SYSTEM REQUEST @D51RMGL 03335000
         BAL   RB,TINFAUTS       * ON RETURN TO R9: ERROR      @D14NDFG 03336000
*SGLINK  TINFAUTS,INPUT=(R8,R9,RB,RC)                                   03337000
         TM    PCEFLAG,PCEDYNP   CANCEL IF CALLER CAME FOR     @KD40324 03338000
         BO    TINFCNDY          *  DYNAMIC PARTITION          @KD40324 03339000
         L     R2,PCEPIB         R2: TAKE POINTER TO CURRENT   @D51IDIS 03340000
         USING PIBADR,R2         *   PIB FROM PCB              @D51IDIS 03341000
         L     R7,CRADDR         R7: AND POINTER TO PARTITION  @D51IDAP 03342000
         USING COMREG,R7         *   COMREG FROM LOW CORE      @D51IDAP 03343000
         LTR   R1,R1             IF (SWITCH TO REAL WAS RE-    @D14NDFG 03344000
         BNZ   TINFMRM5          *** QUESTED)                  @D14NDFG 03345000
         TM    PCBFLAG,SUPPRPFH    IF (PARTITION IS DEACTI-    @D14NDFG 03346000
         BZ    TINFMRM3            *** VATED)                  @D14NDFG 03347000
         L     R1,BIT0OMSK           SET DEVICE MASK           @D61RDAP 03348000
         LA    R3,1                  INDICATE SET REQUEST      @D61RDOW 03349000
*        DISPMAC FUNC=PFUPD,INP1=R1,INP2=R3,INP3=R5,WR1=RB     @D51RDAP 03350000
         DISPMAC FUNC=PFUPD,INP1=R1,INP2=R3,INP3=R5,WR1=RB     @D61RDAP 03351000
         IC    R3,NDEACTP              DECREMENT NUMBER        @D14NDFG 03352000
         BCTR  R3,0                    *  OF DEACTIVATED       @D14NDFG 03353000
         STC   R3,NDEACTP              *  PARTITIONS           @D14NDFG 03354000
*                                    ENDIF                     @D51IDHA 03355000
         B     TINFMRM4            ELSE                        @D14NDFG 03356000
TINFMRM3 DS    0H                  ***                         @D51IDHA 03357000
         LH    R3,IJBAPNO              DECREMENT NUMBER OF     @D51IDHA 03358000
         BCTR  R3,0                    *  ACTIVE VIRTUAL       @D14NDFG 03359000
         STH   R3,IJBAPNO              *  PARTITIONS           @D51IDHA 03360000
*                                    ENDIF                     @D51IDHA 03361000
TINFMRM4 DS    0H                  ENDIF                       @D51IDHA 03362000
         NI    PIBDATFL,XFF-PIBTRAM RESET VIRTUAL MODE FLAG    @D51IDIS 03363000
         L     R3,ASCBATAB         R3:TAKE ADDRESS OF REAL     @D14NDFG 03364000
         USING SCBATAB,R3          *  SPACE CONTR.BLOCK OUT OF @D14NDFG 03365000
         L     R3,ASCBR            *  SCB ADDRESS TABLE,       @D14NDFG 03366000
         ST    R3,PCBASCB          SET IT AS ACTIVE SPACE,     @D14NDFG 03367000
         ST    R3,TIBSCB           *  ADDRESSAB.SCOPE OF TASK  @D14NDFG 03368000
         ST    R3,SCBPTR           *  AND NEW CURRENT SPACE    @D14NDFG 03369000
         B     TINFMRM9          ELSE                          @D51ADGL 03370000
TINFMRM5 DS    0H                ***  SWITCH TO VIRTUAL        @D51IDHA 03371000
         LH    R3,IJBAPNO            INCREMENT NUMBER OF       @D51IDHA 03372000
         LA    R3,1(R3)              *  ACTIVE VIRTUAL         @D14NDFG 03373000
         STH   R3,IJBAPNO            *  PARTITIONS             @D51IDHA 03374000
         OI    PIBDATFL,PIBTRAM    SET VIRTUAL MODE FLAG       @D51IDIS 03375000
         L     R3,PCBPSCB          R3: POINT TO SCB OF SPACE,  @D14NDFG 03376000
         USING SCBADR,R3                                       @D64XDMZ 03377000
         ST    R3,SCBPTR           SET CURRENT SPACE           @D61NDGL 03378000
         TM    SCBFLG,SCBSHA       IF (ALLOC.SPACE IS SHARED)  @D61NDGL 03379000
         BNO   TINFMRM8            ***                         @D61NDGL 03380000
         DROP  R3                    * DROP BASE FOR SCB       @D61NDGL 03381000
         SLR   R3,R3                 R3:RESET ACTIVE SPACE     @D61NDGL 03382000
TINFMRM8 DS    0H                  ENDIF                       @D61NDGL 03383000
         ST    R3,PCBASCB          SET UP PARTITION SPACE      @D61NDGL 03384000
         ST    R3,TIBSCB           *  ADDR.SCOPE OF TASK       @D61NDGL 03385000
TINFMRM9 DS    0H                ENDIF                         @D51ADGL 03386000
         L     R3,SCBPTR           *  ADDR.SCOPE OF TASK       @D61NDGL 03387000
         USING SCBADR,R3           *   IN WHICH PART.WAS ALLOC.@D14NDFG 03388000
         USING COMREG,R7                                       @D64XDMZ 03389000
         MVC   IJBASID,SCBID       IDENTIFY ACTIVE SPACE       @D14NDFG 03390000
         DROP  R7                  RELEASE COMREG              @D64XDMZ 03391000
         LCTL  CR1,CR1,SCBRSTO     ACTIVATE SEGMENT TABLE      @D61NDGL 03392000
         LCTL  CR7,CR7,SCBRSTO     *  FOR 370 AND XA MODE      @D61NDGL 03393000
         LCTL  CRD,CRD,SCBRSTO     *  SET UP HOME SPACE        @D64XDMZ 03394000
         L     R7,TIBTCB                                       @D64XDMZ 03395000
         USING TCBADR,R7                                       @D64XDMZ 03396000
         L     R7,TCBATCBE                                     @D64XDMZ 03397000
         USING TCBXADR,R7                                      @D64XDMZ 03398000
* THE CALLER OF THE SERVICE MAY RETURN TO THE DISPATCHER WITHOUT        03399000
* AN INTERRUPT. SO THE CREG SAVE AREA MUST BE UPDATED                   03400000
         MVC   TCBX1CR1,SCBRSTO    * CR SAVE AREA MUST NOW     @D64XDMZ 03401000
         MVC   TCBX1CR7,SCBRSTO    * CONTAIN THE ACTUAL CREGS  @D64XDMZ 03402000
         MVC   TCBX1CRD,SCBRSTO    * FOR NEXT DISP. CYLE       @D64XDMZ 03403000
         DROP  R7                  RELEASE TCBX                @D64XDMZ 03404000
         DROP  R2                PTR TO PIB                    @D51IDIS 03405000
         L     R7,PCBAPCBX         R7: TAKE ADDRESS OF PCB EX. @D64XDMZ 03406000
         USING PCBXADR,R7          *   OUT OF PCB              @D64XDMZ 03407000
         MVC   PCBXTOK1,SCBPTR     * MOVE FIRST HALF OF SCBPTR @D64XDMZ 03408000
         MVC   PCBXTOK4,SCBPTR+2   * MOVE 2ND HALF             @D64XDMZ 03409000
         OI    PCBXTOK4+1,PCBXTOKA * INDICATE ADDR SPACE TOKEN @D64XDMZ 03410000
         DROP  R7                  * RELEASE PCBX              @D64XDMZ 03411000
         LH    R7,PIK            GET PIK OF CURRENT PART       @D61CDGL 03412000
         LA    R7,3*16(,R7)      SKIP RESERVED ENTRIES         @D61CDGL 03413000
         A     R7,TINFSYAL       OUR ENTRY IN SYSTEM AL        @D61CDGL 03414000
         USING ALE,R7            ADDRESSABILITY TO ALE         @D61CDGL 03415000
         OI    ALE,ALEI          MAKE IT UNCOND INVALID        @D61CDGL 03416000
         IC    R1,ALESN          CHANGE ALE SEQUENCE NUMBER    @D61CDGL 03417000
         LA    R1,1(,R1)         *                             @D61CDGL 03418000
         STC   R1,ALESN          *                             @D61CDGL 03419000
         DROP  R7                *                             @D61CDGL 03420000
         L     R7,PCBASTE        R7: PTR TO ASTE               @D52GDOW 03421000
         USING ASTE,R7           *                             @D52GDOW 03422000
*        AMODESW SET,AMODE=31,WR=(R1) *                        @D52GDOW 03423000
         AMODESW SET,AMODE=31,WR=(R1) *                        @D52GDOW 03424000
         MVC   ASTESTD(4),SCBRSTO MOVE IN SEGM TABLE ORIGIN    @D52GDOW 03425000
         ST    R3,ASTESCB        SCB POINTER TO ASTE           @D52GDOW 03426000
*        DISPMAC FUNC=PALB       PROCESS PALB REQUEST                   03427000
         DISPMAC FUNC=PALB                                     @D61RDIS 03428000
         DROP  R3                PTR TO SPACE CONTROL BLOCK    @D51ADGL 03429000
         DROP  R7                PTR TO ASTE                   @D51ADGL 03430000
*        AMODESW SET,AMODE=24,WR=(R1) *                        @D52GDOW 03431000
         AMODESW SET,AMODE=24,WR=(R1) *                        @D52GDOW 03432000
         B     TINCOD00          RETURN TO CALLER ===========>>@RETCODE 03433000
         DROP  R5                  DROP PCBADR                 @D61NDOW 03434000
         DROP  R8                  DROP TIBADR                 @D61NDOW 03435000
*                                END OF CODEBLOCK              @D14NDFG 03436000
***************************************************************@D14NDGL 03437000
*                                                             *@D14NDGL 03438000
*  MODFLD : FIELD=SASCOPE1,NEWVAL=SPACEID                     *@D14NDGL 03439000
*           (SASCOPE NO LONGER SUPPORTED)                     *@D64XDMZ 03440000
*  MODFLD : FIELD=PASCOPE,NEWVAL=PIK-OF-PARTITION             *@D14NDGL 03441000
*                                                             *@D14NDGL 03442000
*    TO THE SPACE INDICATED BY NEWVAL.                        *@D14NDGL 03443000
*  ON ENTRY TO TINFMOAS:                                      *@D14NDGL 03444000
*    R0 = SPACE ID SPECIFIED IN NEWVAL PARAMETER              *@D14NDGL 03445000
*  ON ENTRY TO TINFMOAP:                                      *@D14NDGL 03446000
*    R0 = PIK OF PARTITION THAT SHALL BE IN SCOPE OF TASK     *@D14NDGL 03447000
*  ON EXIT TO TINFMAP2:                                       *@D14NDGL 03448000
*    R3 = PTR TO SCB, OR ZERO, IF INDICATED SPACE WAS SHARED  *@D14NDGL 03449000
*  ON EXIT TO TINFEXIT: SOME ERROR HAS OCCURED, OR MODE IS    *@D14NDGL 03450000
*    RF = IF CALLER IS ANY OTHER THAN ATTENTION ROUTINE:      *@D14NDGL 03451000
*         8 = SPACE ID INVALID OR SPACE IS NOT ALLOCATED      *@D14NDGL 03452000
*         IF CALLER IS ATTENTION ROUTINE:                     *@D14NDGL 03453000
*         8 = SPACE ID IS VALID, BUT SPACE IS NOT ALLOCATED   *@D14NDGL 03454000
*         12= SPACE ID IS NOT VALID                           *@D14NDGL 03455000
***************************************************************@D14NDGL 03456000
         USING PCBADR,R5                                       @D61NDOW 03457000
         USING TIBADR,R8                                       @D61NDOW 03458000
*                                START OF CODEBLOCK            @D14NDFG 03459000
*                                SELECT ENTRY POINTS           @D14NDFG 03460000
TINFMOAS DS    0H                WHEN (SPACE ID GIVEN SASCOPE) @D14NDFG 03461000
TINFMOS1 DS    0H                ***  | (SASCOPE1 SERVICE)     @D61NDGL 03462000
         CLI   TINFSAVF+3,X'5B'  SASCOPE NO LONGER VALID       @D64XDMZ 03463000
         BE    TINFCE21          CANCEL WITH ILLEGAL SVC       @D64XDMZ 03464000
.* PWR DOES NO LONGER USE SASCOPE SERVICE                               03465000
*        TM    PCBSSFLG,PWR        IF (CALL IS NOT BY POWER)   @D14NDFG 03466000
*        BNZ   TINFMAS1            ***                         @D14NDFG 03467000
         LA    R9,TINFCNAU           CALL, CHECK IF REQUEST    @D51RMGL 03468000
         BAL   RB,TINFAUTS           *     BY NON-USERTASK     @D14NDFG 03469000
*SGLINK  TINFAUTS,INPUT=(R8,R9,RB,RC)                                   03470000
TINFMAS1 DS    0H                  ENDIF                       @D14NDFG 03471000
         LR    R0,R1               R0: GET SPECIFIED SPACE ID  @D14NDFG 03472000
         BAL   R9,TINFCSID         CALL,CHECK SID+GET SCB PTR  @D14NDFG 03473000
*SGLINK  TINFCSID,INPUT=(R0,R9,RC),WORK=(R0,R2,RB),OUTPUT=(R3,RF)       03474000
         B     TINFMOA2            IF (CALLERS SID WAS O.K.)   @D51IDGL 03475000
         USING SCBADR,R3           ***                         @D51IDGL 03476000
         TM    TIBFLAG3,TIBPHMO      IF (MODFLD ONCE ISSUED    @D51IDGL 03477000
         BNO   TINFMOA0              *** HOLD REQUEST FOR CALLER)    GL 03478000
         CLI   TINFSAVF+3,X'95'        ERROR (INCONSISTENT SEQUENCE  GL 03479000
         BNE   TINFCNSQ                * OF SCOPE CHANGES)     @D51RMGL 03480000
         STM   R0,RF,TINFSSV           SAVE ALL REGISTERS      @D52VDGL 03481000
         LA    RF,7                    CALL, FREE PARTITION    @D51IDGL 03482000
         L     R8,ATSSERV              *                       @D51IDGL 03483000
         BALR  R7,R8                   *                       @D51IDGL 03484000
*SGLINK  TSSERV,INPUT=(7,8,15),OUTPUT=(15),WORK=(0,2,4,5,6,8,12,14)     03485000
         L     RC,FSVCBASE             RC: RESTORE BASE        @D51IDGL 03486000
         LM    R0,RF,TINFSSV           RESTORE ALL OTHERS.     @D52VDGL 03487000
TINFMOA0 DS    0H                    ENDIF                     @D51IDGL 03488000
         L     RF,ASIDSTR            IF (USER SUPPLIED SPACE   @D218DKH 03489000
         USING SIDSTR,RF             *   ID IS NOT THE ID OF   @D218DKH 03490000
         CLC   SCBID,SIDS            *   THE SHARED SPACE)     @D14NDFG 03491000
         BE    TINFMOA1              ***                       @D14NDFG 03492000
         CLI   TINFSAVF+3,X'95'        IF ((I SHOULD DO HOLD   @D51IDGL 03493000
         BNE   TINFMAS5                *    AND FREE BUSINESS) @D51IDGL 03494000
         CLC   SCBID,SIDR              *  &(ACCESSED SPACE IS  @D51IDGL 03495000
         BE    TINFMAS5                *    NOT REAL SPACE)    @D51IDGL 03496000
*        CLC   SCBID,SID0              *  &(ACCESSED SPACE IS  @D52VDGL 03497000
*        BE    TINFMAS5                *    NOT SPACE 0  )     @D52VDGL 03498000
         DROP  RF                      *  &(NOT CALLERS OWN    @D218DKH 03499000
         C     R3,PCBASCB              *    ORIGINAL SPACE)    @D51IDGL 03500000
         BE    TINFMAS5                *                       @D51IDGL 03501000
         L     R7,PCECOMRA             *  &((PARTITION IS      @D52VDGL 03502000
         USING COMREG,R7               *     NOT A POWER       @D52VDGL 03503000
         TM    POWFLG1,POWUPART        *     CONTROLLED ONE)   @D52VDGL 03504000
         DROP  R7                      *                       @D52VDGL 03505000
         BNO   TINFMOA3                *   |(IT IS POWER       @D51IDGL 03506000
         LH    R5,IJBPWPIK             *     CONTROLLED BUT    @D51IDGL 03507000
         SRL   R5,2                    *     POWER DOES NOT    @D51IDGL 03508000
         A     R5,APCBATAB             *     RESIDE IN THE     @D51IDGL 03509000
         L     R5,0(,R5)               *     ADDRESS SPACE THE @D51IDGL 03510000
         C     R3,PCBASCB              *     TASK WANTS TO     @D51IDGL 03511000
         BE    TINFMAS5                *     ACCESS)))         @D51IDGL 03512000
TINFMOA3 DS    0H                      ***                     @D51IDGL 03513000
         XC    TINFSAVF+1(3),TINFSAVF+1  SET RETURN CODE TO 0  @D51RMGL 03514000
         TM    TIBFLAG3,TIBPHRQ          IF (CALLER HOLDS SOMEONE    GL 03515000
         BNO   TINFMOA4                  *** ALREADY)          @D51IDGL 03516000
         LH    R5,TIBRQPIK                 ERROR (CALLER       @D51IDGL 03517000
         SRL   R5,2                        *  DOES NOT WANT    @D51IDGL 03518000
         A     R5,APCBATAB                 *  TO SWITCH TO     @D51IDGL 03519000
         L     R5,0(,R5)                   *  THE PARTITION    @D51IDGL 03520000
         C     R3,PCBASCB                  *  HE HAD PUT INTO  @D51IDGL 03521000
         BNE   TINFCNSH                    *  A HELD STATE)    @D51RMGL 03522000
         B     TINFMAP2                  ELSE                  @D51IDGL 03523000
TINFMOA4 DS    0H                        ***                   @D51IDGL 03524000
         LA    RB,SCBPSTR                  RB: POINT TO PIKS   @D51IDGL 03525000
TINFMOA6 DS    0H                          LOOP FOR HOLDABLE PART.   GL 03526000
         LH    R5,0(,RB)                     R5: TAKE POINTER  @D51IDGL 03527000
         SRL   R5,2                          *   TO PCB OF NEXT@D51IDGL 03528000
         A     R5,APCBATAB                   *   PARTITION IN  @D51IDGL 03529000
         L     R5,0(,R5)                     *   THIS SPACE    @D51IDGL 03530000
         LA    RF,6                          RF: FUNCTION CODE @D51IDGL 03531000
         STM   R0,RF,TINFSSV                 PRESERVE REGS     @D52VDGL 03532000
         L     R8,ATSSERV                    R8:BASE OF SERVICE@D51IDGL 03533000
         BALR  R7,R8                         CALL, HOLD PART.  @D51IDGL 03534000
*SGLINK  TSSERV,INPUT=(7,8,15),OUTPUT=(15),WORK=(0,2,4,5,6,8,12,14)     03535000
         L     RC,FSVCBASE                   RESTORE BASE      @D52VDGL 03536000
         LM    R0,RE,TINFSSV                 RESTORE OTHERS    @D52VDGL 03537000
         LTR   RF,RF                         LEAVE IF (HOLD    @D51IDGL 03538000
         BZ    TINFMOA7                      *  SUCCESSFUL)    @D51IDGL 03539000
         LA    RB,2(,RB)                   UNTIL (ALL PARTITIONS     GL 03540000
         CLC   0(2,RB),H0                  *  OF THIS ADDR. SPACE    GL 03541000
         BNE   TINFMOA6                    *  ARE THRU)        @D51IDGL 03542000
TINFMOA8 DS    0H                          LOOPEND             @D51IDGL 03543000
         DS    0H                          IF (NO HOLDABLE FOUND)    GL 03544000
         L     RC,FSVCBASE                   SET RETURN CODE AND     GL 03545000
         MVI   TINFSAVF+3,16                 * DIRECT CALLER   @D51IDGL 03546000
         L     R5,PCBPTR                     * TO HIS OWN ORIG.@D51IDGL 03547000
         L     R3,PCBASCB                    * ADDRESS SPACE   @D51IDGL 03548000
         B     TINFMAP2                      LEAVE SELECT      @D51IDGL 03549000
TINFMOA7 DS    0H                          ENDIF               @D51IDGL 03550000
         L     R8,TIBPTR                   R8: RESTORE TIBPTR  @D51IDGL 03551000
         L     RC,FSVCBASE                 RC: RESTORE BASE    @D51IDGL 03552000
         OI    TIBFLAG3,TIBPHMO            SET BIT MODFLDHOLD  @D51IDGL 03553000
*                                        ENDIF                 @D51IDGL 03554000
         B     TINFMAP2                ELSE NO HOLD NECESSARY  @D51IDGL 03555000
TINFMAS5 DS    0H                      ***  FOR SCOPECHANGE    @D14NDFG 03556000
         XC    TINFSAVF+1(3),TINFSAVF+1  SET RCODE TO 0        @D51RMGL 03557000
*                                      ENDIF                   @D51IDGL 03558000
         B     TINFMAP2              ELSE                      @D51IDGL 03559000
TINFMOA1 DS    0H                    ***  IT IS SHARED SPACE   @D14NDFG 03560000
         SLR   R3,R3                   R3: INDICATE SHARED SP. @D51MDGL 03561000
         STCM  R3,7,TINFSAVF+1         *   AND PREPARE RCODE   @D51RMGL 03562000
         L     R5,APCBATAB             R5 : SYSTEM PCB         @D64XDMZ 03563000
         L     R5,0(,R5)               *                       @D64XDMZ 03564000
*                                    ENDIF                     @D14NDFG 03565000
         B     TINFMAP2            ELSE                        @D51MDGL 03566000
TINFMOA2 DS    0H                  ***  ERROR IN TINFCSID      @D14NDFG 03567000
         CLI   TINFSAVF+3,X'95'      IF (CALL FOR SASCOPE1)    @D51IDGL 03568000
         BNE   TINFMAS3              ***                       @D51IDGL 03569000
         STCM  RF,7,TINFSAVF+1         STORE RETURN CODE AND   @D51RMGL 03570000
         L     R3,PCBASCB              * SEND CALLER HOME      @D51IDGL 03571000
         B     TINFMAP2              ELSE                      @D51IDGL 03572000
TINFMAS3 DS    0H                    ***                       @D51IDGL 03573000
         C     RF,F8                   RETURN IF (SPACE WAS NOT@D51IDGL 03574000
         BE    TINSETRC                *   ALLOCATED BUT VALID)@D51IDGL 03575000
         B     TINFCNSI                ERROR (SPACE INVALID)   @D51RMGL 03576000
*                                    ENDIF                     @D51IDGL 03577000
*                                  ENDIF                       @D51IDGL 03578000
TINFMOAP DS    0H                WHEN (PIK AND PASCOPE)        @D14NDFG 03579000
         TM    PCBSSFLG,TINMOAPU   IF (REQUEST NOT BY SUBSYS-  @D14NDFG 03580000
         BNZ   TINFMAPI            *** TEM NAMED BELOW)        @D14NDFG 03581000
         LA    R9,TINFCNAU           CALL, CHECK FOR SYSTEM    @D51RMGL 03582000
         BAL   RB,TINFAUTS           *     REQUEST ==========>>@D14NDFG 03583000
*SGLINK  TINFAUTS,INPUT=(R8,R9,RB,RC)                                   03584000
TINFMAPI DS    0H                  ENDIF                       @D14NDFG 03585000
         XC    TINFSAVF+1(3),TINFSAVF+1 RESET RETURN CODE      @D51RMGL 03586000
         LR    R0,R1               R0: GET SPECIFIED PIK       @D14NDFG 03587000
         BAL   R9,TINFCPIK         CALL, CHECK GIVEN PIK ====>>@D14NDFG 03588000
*SGLINK  TINFCPIK,INPUT=(R0,R9,RC),WORK=(R0),OUTPUT=R2                  03589000
         B     TINFCNPK            ERROR (ILLEGAL PIK)         @D51RMGL 03590000
         LR    R3,R5               R3: PRESERVE CURRENT PCB    @D51IDGL 03591000
         BAL   R9,TINFGPCB         CALL, POINT TO PART.PCB ==>>@D51IDHA 03592000
*SGLINK  TINFGPCB,INPUT=(R2,R9,RC),OUTPUT=R5                            03593000
         B     TINCOD08            ERROR(DYN.PART NOT ALLOCAT.)@D51IDGL 03594000
         B     TINCOD08            ERROR(STATIC PART NOT ALLOC)@D51IDGL 03595000
         L     R2,PCEPIB           ERROR (PARTITION THAT SHALL @D51IDHA 03596000
         USING PIBADR,R2           *      BE MADE ADDRESSABLE  @D51IDIS 03597000
         CLI   PIBFLG,INACT        *      IS NOT ACTIVE)       @D51IDIS 03598000
         BE    TINCOD08            *                           @D14NDFG 03599000
         DROP  R2                  *                           @D51IDIS 03600000
         TM    TIBFLAG3,TIBPHMO    ERROR (INCONSISTENT SCOPE   @D51IDGL 03601000
         BO    TINFCNSQ            *      CHANGE SEQUENCE)     @D51RMGL 03602000
         L     R3,PCBASCB          R3: TAKE PTR TO SCB         @D14NDFG 03603000
         B     TINFMAP2            LEAVE SELECT                @D51IDGL 03604000
TINFMOP1 DS    0H                WHEN (PASCOPE1 SERVICE)       @D14NDFG 03605000
         TM    PCBSSFLG,TINMOAPU   IF (REQUEST NOT BY SUBSYS-  @D14NDFG 03606000
         BNZ   TINFMAP1            *** TEM NAMED BELOW)        @D14NDFG 03607000
         LA    R9,TINFCNAU           CALL, CHECK FOR SYSTEM    @D51RMGL 03608000
         BAL   RB,TINFAUVE           *     REQUEST ==========>>@D52YDOW 03609000
*SGLINK  TINFAUVE,INPUT=(R8,R9,RA,RB,RC)                                03610000
TINFMAP1 DS    0H                  ENDIF                       @D14NDFG 03611000
         XC    TINFSAVF+1(3),TINFSAVF+1 RESET RETURN CODE      @D51RMGL 03612000
         LR    R0,R1               R0: GET SPECIFIED PIK       @D14NDFG 03613000
         BAL   R9,TINFCPIK         CALL, CHECK GIVEN PIK ====>>@D14NDFG 03614000
*SGLINK  TINFCPIK,INPUT=(R0,R9,RC),WORK=(R0),OUTPUT=R2                  03615000
         B     TINFCNPK            ERROR (ILLEGAL PIK)         @D51RMGL 03616000
         LR    R3,R5               R3: PRESERVE PCB POINTER    @D51IDGL 03617000
         L     RB,TINFSAV1         RB: PRESERVE USERS INPUT    @D51IDGL 03618000
         BAL   R9,TINFGPCB         CALL, POINT TO PART.PCB ==>>@D51IDHA 03619000
*SGLINK  TINFGPCB,INPUT=(R2,R9,RC),OUTPUT=R5                            03620000
         B     TINFMAPB            IF ((THE PARTITION TO BE    @D51IDGL 03621000
         B     TINFMAPB            * ACCESSED IS NOT ALLOCATED)@D51IDGL 03622000
         LTR   R2,R2               *  |((PARTITION THAT SHALL  @D51IDGL 03623000
         BZ    TINFMAPD            *     BE MADE ADDRESSABLE   @D51IDGL 03624000
         L     R2,PCEPIB           *     IS NOT SYSTEM PART.)  @D51IDGL 03625000
         USING PIBADR,R2           *     &(IT IS INACTIVE)))   @D51IDIS 03626000
         CLI   PIBFLG,INACT        *                           @D51IDIS 03627000
         BNE   TINFMAPD            *                           @D14NDFG 03628000
         DROP  R2                  ***                         @D51IDIS 03629000
         DS    0H                    IF (PARTITION INACTIVE)   @D51IDGL 03630000
         MVI   TINFSAVF+3,8            SET RETURN CODE         @D51IDGL 03631000
         B     TINFMAPC              ELSE PARTITION IS NOT     @D51IDGL 03632000
TINFMAPB DS    0H                    ***  ALLOCATED            @D51IDGL 03633000
         MVI   TINFSAVF+3,16           SET RETURN CODE         @D51IDGL 03634000
TINFMAPC DS    0H                    ENDIF                     @D51IDGL 03635000
         L     R5,PCBPTR             R5: DIRECT CALLER TO HIS  @D51IDGL 03636000
         MVC   TINFSAV1+2(2),TIBPIK  *  OWN ORIGINAL PARTITION @D51IDGL 03637000
TINFMAPD DS    0H                  ENDIF                       @D51IDGL 03638000
         TM    TIBFLAG3,TIBPHMO    IF (MODFLD ONCE ISSUED A    @D51IDGL 03639000
         BNO   TINFMAP3            *** HOLD FOR CALLER)        @D51IDGL 03640000
         STM   R0,RF,TINFSSV         PRESERVE REGS             @D52VDGL 03641000
         L     R8,ATSSERV            R8: AND BASE OF TSSERV    @D51IDGL 03642000
         LA    RF,7                  RF: TAKE FUNCTION CODE    @D51IDGL 03643000
         BALR  R7,R8                 CALL, FREE HELD PARTITION @D51IDGL 03644000
*SGLINK  TSSERV,INPUT=(7,8,15),OUTPUT=(15),WORK=(0,2,4,5,6,8,12,14)     03645000
         L     RC,FSVCBASE           RESTORE BASE              @D52VDGL 03646000
         LM    R0,RF,TINFSSV         RESTORE OTHERS            @D52VDGL 03647000
TINFMAP3 DS    0H                  ENDIF                       @D51IDGL 03648000
         CLC TIBPIK(2),TINFSAV1+2  IF (HE IS NOT ON HIS WAY    @D51IDGL 03649000
         BE    TINFMAP4            *** BACK TO HIS OWN PART.)  @D51IDGL 03650000
         TM    TIBFLAG3,TIBPHRQ      IF (USER DID HOLDING)     @D51IDGL 03651000
         BNO   TINFMAP5              ***                       @D51IDGL 03652000
         CLC TINFSAV1+2(2),TIBRQPIK    ERROR (HE DID NOT HOLD  @D51IDGL 03653000
         BE    TINFMAP4                *    THE PARTITION HE   @D51IDGL 03654000
         B     TINFCNSH                *    WANTS TO SWITCH TO)@D51RMGL 03655000
TINFMAP5 DS    0H                    ELSE                      @D51IDGL 03656000
         STM   R0,RE,TINFSSV           PRESERVE REGS           @D52VDGL 03657000
         LA    RF,6                    RF: TAKE FUNCTION CODE  @D51IDGL 03658000
         L     R8,ATSSERV              R8: AND BASE OF TSSERV  @D51IDGL 03659000
         BALR  R7,R8                   CALL, HOLD PARTITION    @D51IDGL 03660000
*SGLINK  TSSERV,INPUT=(7,8,15),OUTPUT=(15),WORK=(0,2,4,5,6,8,12,14)     03661000
         L     RC,FSVCBASE             RC: RESTORE BASE        @D51IDGL 03662000
         LM    R0,RE,TINFSSV           RESTORE ALL OTHERS      @D52VDGL 03663000
         LTR   RF,RF                   IF (RETURN CODE IS NOT  @D51IDGL 03664000
         BZ    TINFMAP6                *** ZERO)               @D52VDGL 03665000
         MVI   TINFSAVF+3,16             SET RETURN CODE       @D51IDGL 03666000
         L     R5,PCBPTR                 R5: TAKE NEW DESTINATION    GL 03667000
         B     TINFMAP4                ELSE                    @D51IDGL 03668000
TINFMAP6 DS    0H                      ***                     @D51IDGL 03669000
         OI    TIBFLAG3,TIBPHMO          SET BIT MODFLDHOLD    @D51IDGL 03670000
TINFMAP7 DS    0H                      ENDIF                   @D51IDGL 03671000
*                                    ENDIF                     @D51IDGL 03672000
TINFMAP4 DS    0H                  ENDIF                       @D51IDGL 03673000
         L     R3,PCBASCB          R3: TAKE PTR TO SCB         @D14NDFG 03674000
         ST    RB,TINFSAV1         RESTORE INPUT REGISTER      @D51IDGL 03675000
TINFMAP2 DS    0H                ENDSELECT                              03676000
         CLC   TINFSAVF+1(3),F0  IF ((THE RETURN CODE UNTIL    @D51RMGL 03677000
         BE    TINFMAPH          *    HERE IS NOT ZERO) &      @D51IDGL 03678000
         TM    TIBFLAG3,TIBPHRQ  *   (CALLER HOLDS SOMEONE))   @D51IDGL 03679000
         BNO   TINFMAPH          ***                           @D51IDGL 03680000
         STM   R0,RF,TINFSSV       PRESERVE REGS               @D52VDGL 03681000
         L     R8,ATSSERV          R8: AND BASE OF TSSERV      @D51IDGL 03682000
         LA    RF,7                RF: TAKE FUNCTION CODE      @D51IDGL 03683000
         BALR  R7,R8               CALL, FREE HELD PARTITION   @D51IDGL 03684000
*SGLINK  TSSERV,INPUT=(7,8,15),OUTPUT=(15),WORK=(0,2,4,5,6,8,12,14)     03685000
         L     RC,FSVCBASE         RC: RESTORE BASE            @D51IDGL 03686000
         LM    R0,RF,TINFSSV       RESTORE ALL OTHERS          @D52VDGL 03687000
TINFMAPH DS    0H                ENDIF                         @D51IDGL 03688000
         ST    R3,TIBSCB         SET NEW ADDRESSABILITY SCOPE  @D14NDFG 03689000
         LTR   R3,R3             IF ( SPACE IS SHARED)         @D61NDGL 03690000
         BNZ   TINFMAPX          ***                           @D61NDGL 03691000
         L     R3,ASCBATAB         R3: TAKE PTR TO SHARED      @D61NDGL 03692000
         L     R3,ASCBS-SCBATAB(R3) *  SCB OUT OF SCBATAB      @D61NDGL 03693000
TINFMAPX DS    0H                ENDIF                         @D61NDGL 03694000
         C     R3,SCBPTR         RETURN IF (SPACE IS IDENTICAL @D61NDGL 03695000
         BE    TINFEXIT          * WITH CURRENT SPACE)         @D61NDGL 03696000
         ST    R3,SCBPTR         SET UP NEW ADDRESSAB. SCOPE   @D14NDFG 03697000
         USING SCBADR,R3         *  AS CURRENT AND             @D14NDFG 03698000
         LCTL  CR1,CR1,SCBRSTO   *  ACTIVATE NEW SEGMENT TABLE @D14NDFG 03699000
         LCTL  CR7,CR7,SCBRSTO   *                             @D51ADGL 03700000
         LCTL  CRD,CRD,SCBRSTO   *                             @D64XDMZ 03701000
         STCTL CR3,CR3,TINFSCR3  * GET CONTENTS OF CR3         @D64XDMZ 03702000
         STCTL CR4,CR4,TINFSCR4  * GET CONTENTS OF CR4         @D64XDMZ 03703000
         LH    R7,PCBPIK         * GET NEW PIK                 @D64XDMZ 03704000
         SRL   R7,4              * ASN=PIK/16                  @D64XDMZ 03705000
         STH   R7,TINFSCR3+2     * STORE NEW ASN               @D64XDMZ 03706000
         STH   R7,TINFSCR4+2     * STORE NEW ASN               @D64XDMZ 03707000
         LCTL  CR3,CR3,TINFSCR3  * LOAD NEW ASN IN CR3         @D64XDMZ 03708000
         LCTL  CR4,CR4,TINFSCR4  * LOAD NEW ASN IN CR4         @D64XDMZ 03709000
.* IF CALLER WAS IN RID 8, UPDATE OF CR SAVE AREA IS NOT NECESSARY      03710000
.* SINCE CALLER GET'S CONTROL WITH ACTUAL CONTENTS OF CREGS.            03711000
.* (SERVICE RETURN'S IMMEDIATELY)                                       03712000
.* IF CALLER WAS IN RID /= 8 CR FIRST SAVE MUST BE UPDATED.             03713000
.* IF CALLER IS DISPATCHED LATERON IN RID 8, CONTENTS OF CR 1ST SAVE    03714000
.* AREA IS TAKEN, WHICH DOES NOT REFLECT THE SPACE SWITCH               03715000
.* THIS IS SAFETY CODE, SINCE CURRENTLY NO USER IS KNOWN, WHO IS        03716000
.* BEHAVING LIKE THAT.                                                  03717000
         CLI   TINFRID+1,USERTID IF CALLER IN RID 8 DO NOT     @D64XDMZ 03718000
         BE    TINFEXIT          ..UPDATE CR SAVE AREA         @D64XDMZ 03719000
         L     R7,TIBTCB         GET CURRENT TCB               @D64XDMZ 03720000
         L     R7,TCBATCBE-TCBADR(,R7) GET TCB EXTENSION       @D64XDMZ 03721000
         USING TCBXADR,R7                                      @D64XDMZ 03722000
         MVC   TCBX1CR1,SCBRSTO   * CR FIRST SAVE AREA         @D64XDMZ 03723000
         MVC   TCBX1CR7,SCBRSTO   * MUST CONTAIN               @D64XDMZ 03724000
         MVC   TCBX1CRD,SCBRSTO   * ACTUAL CONTENTS FOR        @D64XDMZ 03725000
         MVC   TCBX1CR3,TINFSCR3  * NEXT DISPATCHING           @D64XDMZ 03726000
         MVC   TCBX1CR4,TINFSCR4  * CYCLE                      @D64XDMZ 03727000
         DROP  R7                RELEASE TCBX                  @D64XDMZ 03728000
         B     TINFEXIT          RETURN TO CALLER ===========>>@D14NDFG 03729000
         DROP  R3                PTR TO SPACE CONTROL BLOCK    @D14NDFG 03730000
         DROP  R5                DROP PCBADR                   @D61NDOW 03731000
         DROP  R8                DROP TIBADR                   @D61NDOW 03732000
*                                END OF CODEBLOCK                       03733000
TINMOAPU EQU   PWR+OCCF+VTAM     .AUTHORIZED USERS OF PASCOPE  @D14NDGL 03734000
TINFMO16 DC    A(16)                                           @D51IDGL 03735000
TINFSCR4 DC    F'0'              USED TO MODIFY ASN            @D64XDMZ 03736000
TINFSCR3 DC    F'0'              USED TO MODIFY ASN            @D64XDMZ 03737000
         SPACE 1                                               @D14NDFG 03738000
*---------------------------------------------------------------------- 03739000
*   MODFLD : GIVE REIPL AUTHORIZATION                          @D31QDMZ 03740000
*---------------------------------------------------------------------- 03741000
         USING PCBADR,R5                                       @D61NDOW 03742000
         USING TIBADR,R8                                       @D61NDOW 03743000
TINFMORA DS    0H                  START OF CODEBLOCK          @D31QDMZ 03744000
         TM    SVOLDKEY,KEY0       REQUESTOR HAS KEY ZERO      @D31QDMZ 03745000
         BNZ   TINFCNAU            NO, CANCEL                  @D51RMGL 03746000
         OI    PCBSSFL2,PCBARIPL   SET REIPL AUTHO. IN ADVANCE @D31QDMZ 03747000
         LTR   R1,R1               CHECK REQUEST (SET,RESET)   @D31QDMZ 03748000
         BNZ   TINCOD00            RETURN, SET ALREADY DOEN    @RETCODE 03749000
         NI    PCBSSFL2,X'FF'-PCBARIPL SET OFF REIPL AUTHORIZ. @D31QDMZ 03750000
         B     TINCOD00            RETURN                      @RETCODE 03751000
         DROP  R5                  DROP PCBADR                 @D61NDOW 03752000
         DROP  R8                  DROP TIBADR                 @D61NDOW 03753000
*                                  END OF CODEBLOCK                     03754000
         AIF   (NOT &VSE280).N280020                           @D28ADAP 03755000
         EJECT ,                                               @D28ADAP 03756000
*--------------------------------------------------------------@D28ADAP 03757000
*   MODFLD : MODIFY CUU ADDRESSES FOR SCSI DEVICES IN SA-ENV.  @D28ADAP 03758000
*--------------------------------------------------------------@D28ADAP 03759000
TINFMSCI DS    0H                  START OF CODEBLOCK          @D28ADAP 03760000
         TM    IJBFLG08,IJBSAENV   REQUEST FROM SA-ENVIRONMENT @D28ADAP 03761000
         BNO   TINFCNAU            NO, CANCEL                  @D28ADAP 03762000
         LH    R3,YPUBTAB          CLEAR INDEX REGISTER        @D28ADAP 03763000
         SH    R3,H8               ADJUST FOR 1ST PATH THROUGH @D28ADAP 03764000
         L     R4,APBXAREA         ADDR. OF PUBX ADDRESS VECT. @D28ADAP 03765000
         USING PUBADR,R3           PUB BASE POINTER            @D28ADAP 03766000
TINFMS10 LA    R3,NEXTPUB          PUB ADDRESS                 @D28ADAP 03767000
         ICM   R2,15,0(R4)         GET PUBX ENTRY ADDRESS      @D28ADAP 03768000
         BM    TINFCPUB            ERR, NO SUITABLE DEVICE     @D28ADAP 03769000
         LA    R4,4(,R4)           ADVANCE PUBX ADDRESS PNTR.  @D28ADAP 03770000
         USING PBXADR,R2           PUBX ENTRY BASE             @D28ADAP 03771000
         CLI   PUBDEVTY,TFBA       IS THIS AN FBA DEVICE       @D28ADAP 03772000
         BNE   TINFMS10            NO, PROCEED                 @D28ADAP 03773000
         CLC   PBXSCH(2),XFFFF     DOES A SUBCHANNEL EXIST     @D28ADAP 03774000
         BNE   TINFMS10            YES, ITS NOT WHAT WE WANT   @D28ADAP 03775000
         CLI   PUBCHQPT,NOTQUED    IS REQUEST PENDING          @D28ADAP 03776000
         BM    TINFCPUB            ERR, IMPROPER DEVICE STATUS @D28ADAP 03777000
         CLI   PUBJCFLG,PUBDVCUP   IS DEVICE UP                @D28ADAP 03778000
         BE    TINFMS10            YES, FIND ANOTHER ONE       @D28ADAP 03779000
         OI    PUBJCFLG,PUBDVCUP   FORCE DEVICE UP             @D28ADAP 03780000
         STCM  R0,3,PBXCUU         SET NEW CUU ADDRESS IN PUBX @D28ADAP 03781000
         STCM  R0,3,PUBCHANN       SET NEW CUU ADDRESS IN PUB  @D28ADAP 03782000
         B     TINCOD00            RETURN                      @D28ADAP 03783000
         DROP  R2                  RELEASE PBXADR BASE         @D28ADAP 03784000
         DROP  R3                  RELEASE PUBADR BASE         @D28ADAP 03785000
.N280020 ANOP                                                           03786000
***************************************************************@VSPT.GL 03787000
*                                                             *@VSPT.GL 03788000
*  MODFLD : FIELD=VSPTFLG,NEWVAL=..                           *@VSPT.GL 03789000
*                                                             *@VSPT.GL 03790000
*  FUNCTION: SWITCH ON OR OFF SYSCOM BIT OF VSE PERFORMANCE   *@VSPT.GL 03791000
*    TOOL, DEPENDING ON BIT IN REGISTER R1. FOR VSPT ONLY.    *@VSPT.GL 03792000
*  ON ENTRY: SEE STANDARD CONVENTION ABOVE                    *@VSPT.GL 03793000
*    R1 = VALUE 0 OR 1 FOR BIT IN SYSCOM                      *@VSPT.GL 03794000
*  ON EXIT TO TINCOD00:  REQUEST IS PROCESSED.                *@VSPT.GL 03795000
*    RF = RETURN CODE ZERO                                    *@VSPT.GL 03796000
*  ON EXIT TO TINFCNAU:  REQUESTOR WAS NOT AUTHORIZED         *@VSPT.GL 03797000
***************************************************************@VSPT.GL 03798000
         USING TCBADR,RA                                       @D61NDOW 03799000
TINFVSPT DS    0H                  START OF CODEBLOCK          @VSPT.GL 03800000
         TM    TCBFLAG3,VSPT       *    VSE PERFORMANCE TOOL?  @VSPT.GL 03801000
         BNO   TINFCNAU            *                           @D51RMGL 03802000
         LA    R2,1                IF (PERFORMANCE MEASUREMENT @VSPT.GL 03803000
         NR    R2,R1               *   SHALL BE SWITCHED ON)   @VSPT.GL 03804000
         BZ    TINVSPT1            ***                         @VSPT.GL 03805000
         L     R1,IJBPTCOM           SET UP POINTER TO         @VSPT.GL 03806000
         L     R1,PTACMBG-VSEPTCOM(,R1) THAT ROUTINE           @VSPT.GL 03807000
         ST    R1,AVSEPTCC           *                         @VSPT.GL 03808000
         B     TINCOD00              RETURN =================>>@VSPT.GL 03809000
TINVSPT1 DS    0H                  ELSE SWITCH IT OFF          @VSPT.GL 03810000
         L     R1,IJBPTCOM           SET UP POINTER FOR        @VSPT.GL 03811000
         L     R1,PTACMEND-VSEPTCOM(,R1) NO PERFORMANCE        @VSPT.GL 03812000
         ST    R1,AVSEPTCC           *   MEASUREMENT           @VSPT.GL 03813000
         B     TINCOD00              RETURN =================>>@VSPT.GL 03814000
         DROP  RA                                              @D61NDOW 03815000
*---------------------------------------------------------------------- 03816000
*   RLOCK : ACCESS INFORMATION OF SYSTEM 'REAL PARTITION'      @D14NDFG 03817000
*---------------------------------------------------------------------- 03818000
         USING DISP,R6                                         @D61NDOW 03819000
TINFRLRA DS    0H                  START OF CODEBLOCK          @D14NDFG 03820000
         LA    R9,TINFCNAU         CONTINUATION ADDRESS        @D51RMGL 03821000
         BAL   RB,TINFAUTS         CHECK FOR SYSTEM REQUEST    @D14NDFG 03822000
*SGLINK  TINFAUTS,INPUT=(R8,R9,RB,RC)                                   03823000
         L     R5,ASRQTAB          GET SRQ TABLE ADDRESS       @D61RDGL 03824000
         LA    R5,SRQSPFIX-SRQTAB(,R5) PTR TO RESOURCE Q       @D61RDGL 03825000
         USING RQADR,R5            RESOURCE DESCRIPTOR BASE    @D66ADAP 03826000
         TM    RSCDESC,FREEBIT     IS RESOURCE AVAILABLE       @D66ADAP 03827000
         BZ    TINFRLR2            NO, WAIT                    @D66ADAP 03828000
         MVC   RSCDESC,NFREEVAL    SET IN USE                  @D66ADAP 03829000
         B     TINFEXIT            IF AVAILABLE, EXIT          @D14NDFG 03830000
         DROP  R5                  RELEASE RQADR BASE          @D66ADAP 03831000
TINFRLR2 STM   R0,RF,TINFSSV       SAVE ALL REGISTERS          @D14NDFG 03832000
         BAL   RF,UNPOST           MAKE TASK UNDISPATCHABLE    @D14NDFG 03833000
         L     RC,FSVCBASE         RESTORE ALL REGISTERS       @D61DDGL 03834000
         LM    R0,RF,TINFSSV       ..                          @D61DDGL 03835000
         L     R5,SVOLDADR         UPDATE SVC PSW              @D14NDFG 03836000
         S     R5,F2               TO REISSUE                  @D14NDFG 03837000
         ST    R5,SVOLDADR         SVC 107                     @D14NDFG 03838000
         MVC   RID,TINFRID         RESTORE CALLER'S RID        @D14NDFG 03839000
         LM    RE,R8,TINFSAVE      RESTORE REQUESTORS REGISTER @D14NDFG 03840000
         MVC   ERA(16*4),TINFSAV9  SETUP LOW CORE FOR SETUPSAS @D61DDGL 03841000
         L     RD,AFLIH            BASE FOR SETUPSAS           @D14NDFG 03842000
         USING FLIH,RD                                         @D14NDFG 03843000
         BAL   R9,SETUPSAS         SAVE STATUS OF CALLER       @D14NDFG 03844000
         BR    R6                  EXIT TO DISPATCHER          @D14NDFG 03845000
         DROP  R6                  DROP DISP BASE              @D61NDOW 03846000
         DROP  RD                  DROP FLIH BASE              @D61NDOW 03847000
         USING SGTINF+X'1000',RD   REESTALISH SECOND BASE ADDR @D14NDFG 03848000
*                                  END OF CODEBLOCK            @D149DWK 03849000
*--------------------------------------------------------------@D149DWK 03850000
*   SRCHFLD : FIND PUB FOR SPECIFIED DEVICE TYPE               @D149DWK 03851000
*--------------------------------------------------------------@D149DWK 03852000
TINFSFDT DS    0H                  START OF CODEBLOCK          @D14BDWK 03853000
         USING PUBADR,R7           *                           @D14BDWK 03854000
         BAL   R9,TINFCKPU         CHECK SPEC.PHYSICAL UNIT    @D14BDWK 03855000
*SGLINK  TINFCKPU,INPUT=(R0,R9,RC),OUTPUT=R3                            03856000
         B     TINFCNPU            ERROR (INVALID INDEX)       @D51RMGL 03857000
         BAL   R9,TINFGPUB         GET POINTER TO PUB          @D14BDWK 03858000
*SGLINK  TINFGPUB,INPUT=(R3,R9,RC),OUTPUT=R7                            03859000
         LA    R9,TINFSFD1         RETURN FROM GET NEXT PUB    @D14BDWK 03860000
TINFSFD1 CLM   R1,1,PUBDEVTY       DEVICE TYPE EQUAL           @D14BDWK 03861000
         BE    TINFPUEX            YES, RETURN                 @D14BDWK 03862000
         B     TINFPU01            GET NEXT PUB IF ANY         @D14BDWK 03863000
         SPACE 1                                               @D149DWK 03864000
*--------------------------------------------------------------@D149DWK 03865000
*   SRCHFLD : FIND PUB FOR SPECIFIED CUU                       @D149DWK 03866000
*--------------------------------------------------------------@D149DWK 03867000
TINFSFCU DS    0H                  *                           @D14BDWK 03868000
         BAL   R9,TINFCKPU         CHECK SPEC.PHYSICAL UNIT    @D14BDWK 03869000
*SGLINK  TINFCKPU,INPUT=(R0,R9,RC),OUTPUT=R3                            03870000
         B     TINFCNPU            ERROR (INVALID INDEX)       @D51RMGL 03871000
         BAL   R9,TINFGPUB         GET POINTER TO PUB          @D14BDWK 03872000
*SGLINK  TINFGPUB,INPUT=(R3,R9,RC),OUTPUT=R7                            03873000
         LA    R9,TINFSFC1         RETURN FROM GET NEXT PUB    @D14BDWK 03874000
TINFSFC1 CLM   R1,3,PUBCHANN       CHANNEL/UNIT EQUAL          @D14BDWK 03875000
         BE    TINFPUEX            YES, RETURN                 @D14BDWK 03876000
*--------------------------------------------------------------@D149DWK 03877000
*   SRCHFLD : COMMON PUB SCAN ROUTINE                          @D149DWK 03878000
*--------------------------------------------------------------@D149DWK 03879000
TINFPU01 DS    0H                  *                           @D14BDWK 03880000
         LA    R7,PUBLNG(R7)       NO, POINT TO NEXT PUB       @D14BDWK 03881000
         CLI   0(R7),XFF           END OF PUBTABLE REACHED     @D14BDWK 03882000
         BE    TINCOD04            YES, PREPARE RETURN         @D14BDWK 03883000
         LA    R3,1(R3)            INCREASE PHYSICAL UNIT      @D14BDWK 03884000
         BR    R9                  KEEP SCANNING               @D14BDWK 03885000
TINFPUEX ST    R3,TINFSAV1         SET RETURN VALUE            @D14BDWK 03886000
         B     TINCOD00            PASS RETURN CODE            @D14BDWK 03887000
         DROP  R7                                              @D14BDKW 03888000
*                                  END OF CODEBLOCK                     03889000
*--------------------------------------------------------------@D149DWK 03890000
*   DEVUSE : INCREMENT USAGE COUNTER AND UPDATE PUB OWNERSHIP  @D149DWK 03891000
*--------------------------------------------------------------@D149DWK 03892000
TINFDVUS DS    0H                  START OF CODEBLOCK          @D14BDWK 03893000
         BAL   R9,TINFCKPU         VALIDATE PUB INDEX          @D14BDWK 03894000
*SGLINK  TINFCKPU,INPUT=(R0,R9,RC),OUTPUT=R3                            03895000
         B     TINFCNPU            ERROR (INVALID INDEX)       @D51RMGL 03896000
         LR    R0,R1               COPY SPECIFIED PIK          @D14BDFG 03897000
         BAL   R9,TINFCPIK         VALIDATE PIK VALUE          @D14BDWK 03898000
*SGLINK  TINFCPIK,INPUT=(R0,R9,RC),WORK=(R0),OUTPUT=R2                  03899000
         B     TINFCNPK            ERROR (ILLEGAL PIK)         @D51RMGL 03900000
         BAL   R9,TINFGPBX         POINT TO PUBX               @D14BDFG 03901000
*SGLINK  TINFGPBX,INPUT=(R3,R9,RC),OUTPUT=R4                            03902000
         USING PBXADR,R4           PUBX BASE POINTER           @D66ADAP 03903000
         CLI   PBXPUBCD,X'E0' TQDIO IS THIS QDIO DEVICE        @D66ADAP 03904000
         BE    TINFDVUA            YES, LET IT GO              @D66ADAP 03905000
         BAL   R9,TINFDAUT         CHECK DEVUSE/DEVREL AUTH.   @D14BDFG 03906000
*SGLINK  TINFDAUT,INPUT=(R9,RC)                                @D14BDFG 03907000
TINFDVUA BAL   R9,TINFGPUB         GET POINTER TO PUB          @D14BDWK 03908000
*SGLINK  TINFGPUB,INPUT=(R3,R9,RC),OUTPUT=R7                            03909000
         USING PUBADR,R7                                       @D14BDFG 03910000
         TM    PUBJCFLG,PUBDVCUP   IS DEVICE UP                @D14BDFG 03911000
         BZ    TINCOD12            RETURN CODE 'DEVICE DOWN'   @D14BDFG 03912000
         DROP  R7                  RELEASE PUB BASE            @D14BDFG 03913000
TINFDVU0 LR    RE,R2               SAVE REQUESTOR PIK          @D14BDFG 03914000
         BAL   R9,TINFCKOW         CHECK DEVICE OWNER          @D14BDFG 03915000
*SGLINK  TINFCKOW,INPUT=(R3,R4,R9,RC),WORK=(R0,R2,R7,R8,RB),           *03916000
               OUTPUT=(R1,RF)                                  @D62NDAP 03917000
         C     RF,F4               NO/UNIQUE/MULTIPLE OWNER    @D14BDFG 03918000
         BNE   TINFDVU3            NO OWNER OR MULTIPLE OWNERS @PBXOWGL 03919000
         TM    PBXFLAG2,PBXMTFLG   IS MOUNT REQUEST PENDING    @D21LDAP 03920000
         BO    TINFDVU1            IF YES, CHECK OWNER         @D14BDFG 03921000
         TM    PBXFLAG1,PBXSHR     PARTITION SHARABLE DEVICE   @D14BDFG 03922000
         BZ    TINFDVU1            IF NOT, CHECK OWNER         @D14BDFG 03923000
         TM    PBXFLAG,PBXUR       UNIT RECORD DEVICE          @D14BDFG 03924000
         BZ    TINFDVU3            IF NOT, SKIP OWNER CHECK    @D14BDFG 03925000
TINFDVU1 CR    RE,R1               IS REQUESTOR EQUAL OWNER    @D14BDFG 03926000
         BNE   TINCOD08            IF NO, GO STORE RETURN CODE @D14BDFG 03927000
TINFDVU3 LR    R2,RE               RESTORE REQUESTOR PIK       @D14BDFG 03928000
         BAL   R9,TINFGPCB         POINT TO PCB                @D14BDFG 03929000
*SGLINK  TINFGPCB,INPUT=(R2,R9,RC),OUTPUT=R5                            03930000
         B     TINCOD16            ERROR (DYN.PART.NOT ALLOC.) @D51IDGL 03931000
         B     TINCOD16            ERROR (STAT.PART.NOT ALLOC.)@D51IDGL 03932000
         BAL   RA,TINFSETO         CALL,SET PUB OWNERSHIP  ==>>@D51IDGL 03933000
*SGLINK  TINFSETO,INPUT=(R2,R3,R4,RA,RC),WORK=(R0,R7,R8,R9,RB)          03934000
         BAL   R9,TINFPCNT         POINT TO USAGE COUNTERS     @D14BDFG 03935000
*SGLINK  TINFPCNT,INPUT=(R4,R5,R9,RC),OUTPUT=R7                         03936000
         USING DVCUSCNT,R7                                     @D14BDFG 03937000
         LH    R9,DVCPUCNT         GET PHYSICAL USAGE COUNTER  @D14BDFG 03938000
         LA    R9,1(R9)            INCREMENT AND               @D14BDFG 03939000
         STH   R9,DVCPUCNT         STORE PHYS. USAGE COUNTER   @D14BDFG 03940000
         DROP  R7                                              @D14BDFG 03941000
         B     TINCOD00            RETURN                      @PBXOWGL 03942000
         DROP  R4                  DROP PBXADR                 @D61NDOW 03943000
*                                  END OF CODEBLOCK            @D149DWK 03944000
*--------------------------------------------------------------@D149DWK 03945000
*   DEVREL : DECREMENT USAGE COUNTER AND UPDATE PUB OWNERSHIP  @D149DWK 03946000
*--------------------------------------------------------------@D149DWK 03947000
         USING PBXADR,R4                                       @D6NRDOW 03948000
TINFDVRL DS    0H                  START OF CODEBLOCK          @D14BDWK 03949000
         BAL   R9,TINFCKPU         CHECK SPEC.PHYSICAL UNIT    @D14BDWK 03950000
*SGLINK  TINFCKPU,INPUT=(R0,R9,RC),OUTPUT=R3                            03951000
         B     TINFCNPU            ERROR (INVALID INDEX)       @D51RMGL 03952000
         LR    R0,R1               GET SPECIFIED PIK           @D14BDFG 03953000
         BAL   R9,TINFCPIK         CHECK SPECIFIED PIK         @D14BDWK 03954000
*SGLINK  TINFCPIK,INPUT=(R0,R9,RC),WORK=(R0),OUTPUT=R2                  03955000
         B     TINFCNPK            ERROR (ILLEGAL PIK)         @D51RMGL 03956000
         BAL   R9,TINFGPBX         POINT TO PUBX               @D14BDFG 03957000
*SGLINK  TINFGPBX,INPUT=(R3,R9,RC),OUTPUT=R4                            03958000
         BAL   R9,TINFDAUT         CHECK DEVUSE/DEVREL AUTH.   @D14BDFG 03959000
*SGLINK  TINFDAUT,INPUT=(R9,RC)                                @D14BDFG 03960000
         BAL   R9,TINFGPCB         POINT TO PCB                @D14BDFG 03961000
*SGLINK  TINFGPCB,INPUT=(R2,R9,RC),OUTPUT=R5                            03962000
         B     TINCOD16            ERROR (DYN.PART.NOT ALLOC.) @D51IDGL 03963000
         B     TINCOD16            ERROR (STAT.PART.NOT ALLOC.)@D51IDGL 03964000
*                                                              @PBXOWGL 03965000
*   IF THERE IS ONLY ONE DEVICE USAGE COUNTER FOR THE DEVICE   @PBXOWGL 03966000
*   AND NOT ONE PER PARTITION WE HAVE TO MAKE SURE, THAT NO    @PBXOWGL 03967000
*   OTHER PARTITION CAN DECREMENT IT THAN THE ONE THAT         @PBXOWGL 03968000
*   INCREMENTED IT.                                            @PBXOWGL 03969000
*                                                              @PBXOWGL 03970000
         TM    PBXFLAG1,PBXSHR     BRANCH IF ONE OWNER ENTRY   @PBXOWGL 03971000
         BNZ   TINFDVR1            FOR EACH  POSSIBLE OWNER    @PBXOWGL 03972000
         LR    RA,R2               PRESERVE REQUESTORS PIK     @PBXOWGL 03973000
         BAL   R9,TINFCKOW         CHECK DEVICE OWNER          @PBXOWGL 03974000
*SGLINK  TINFCKOW,INPUT=(R3,R4,R9,RC),WORK=(R0,R2,R7,R8,RB),           *03975000
               OUTPUT=(R1,RF)                                  @D62NDAP 03976000
         C     RF,F4               NO/UNIQUE/MILTIPLE OWNER    @PBXOWGL 03977000
         BNE   TINCOD08            LEAVE IF NOT UNIQUE OWNER   @PBXOWGL 03978000
         LR    R2,RA               RESTORE PIK                 @PBXOWGL 03979000
         CR    R2,R1               IF NOT, SKIP OWNER CHECK    @PBXOWGL 03980000
         BNE   TINCOD08            PRESERVE REGISTER           @PBXOWGL 03981000
*                                                              @PBXOWGL 03982000
TINFDVR1 BAL   R9,TINFPCNT         POINT TO USAGE COUNTERS     @PBXOWGL 03983000
*SGLINK  TINFPCNT,INPUT=(R4,R5,R9,RC),OUTPUT=R7                         03984000
         USING DVCUSCNT,R7                                     @PBXOWGL 03985000
         LH    R9,DVCPUCNT         GET PHYSICAL USAGE COUNTER  @PBXOWGL 03986000
         LTR   R9,R9               USAGE COUNTER ALREADY ZERO  @D14BDFG 03987000
         BZ    TINCOD08            IF YES, GIVE RETURN CODE    @D14BDFG 03988000
         BCTR  R9,0                DECREMENT AND               @D14BDFG 03989000
         STH   R9,DVCPUCNT         STORE PHYS. USAGE COUNTER   @D14BDFG 03990000
         DROP  R7                                              @D14BDFG 03991000
         LTR   R9,R9               COUNTER NOW ZERO            @D14BDFG 03992000
         BNZ   TINCOD00            IF NOT, RETURN TO CALLER    @D14BDFG 03993000
         BAL   RA,TINFRESO         CALL,RESET PUBOWNERSHIP     @D14BDFG 03994000
*SGLINK  TINFRESO,INPUT=(R2,R3,R4,RA,RC),WORK=(R0,R7,R8,R9,RB)          03995000
         TM    PBXFLAG,PBXTAPE     CURRENT DEVICE TAPE ?       @DXXXXGN 03996000
         BZ    TINCOD00            NO                          @DXXXXGN 03997000
         BAL   R9,TINFGPB2         POINT TO PUB2               @D14BDFG 03998000
*SGLINK  TINFGPB2,INPUT=(R3,R9,RC),OUTPUT=R8                            03999000
         USING PUB2ADR,R8          PUB2 BASE POINTER           @DXXXXGN 04000000
         NI    P2FLAGS,XFF-P2OPEN  RESET VOLUME OPEN           @DXXXXGN 04001000
         B     TINCOD00            RETURN TO CALLER            @D14BDFG 04002000
         DROP  R4                  DROP PBXADR                 @D61NDOW 04003000
         DROP  R8                  DROP PUB2ADR                @D61NDOW 04004000
*                                  END OF CODEBLOCK            @D149DWK 04005000
*--------------------------------------------------------------@D149DWK 04006000
*   SENTER : LINKAGE TO AUTHORIZED LIBRARIAN CODE              @D149DWK 04007000
*--------------------------------------------------------------@D149DWK 04008000
         USING TIBADR,R8                                       @D61NDOW 04009000
TINFENLI DS    0H                  START OF CODEBLOCK          @D14BDFG 04010000
         L     RF,ASVASVDL         SVA SUPERVISOR DIRECTORY    @D14BDFG 04011000
         L     RF,ALIBRAR-SVASVDL(RF) AUTH.LIBR. ENTRY POINT   @D14BDFG 04012000
         LTR   RF,RF               IS IT AVAILABLE             @D14BDFG 04013000
         BZ    TINFCNEN            IF NOT, CANCEL              @D51RMGL 04014000
         OI    TIBFLAG1,SYSACT     INDICATE SYSTEM CODE ACTIVE @D14BDFG 04015000
         MVC   TINFSAVE,SVOLDP+4   PASS A(NEXT INSTR.) IN RE   @D14BDFG 04016000
         ST    RF,TINFSAVF         PASS ENTRY POINT IN RF      @D14BDFG 04017000
         ST    RF,SVOLDP+4         SET ENTRY POINT IN PSW      @D14BDFG 04018000
         B     TINFEXI1            ENTER AUTHORIZED CODE       @D14BDFG 04019000
         DROP  R8                  DROP TIBADR                 @D61NDOW 04020000
*                                  END OF CODEBLOCK            @D149DWK 04021000
*--------------------------------------------------------------@D149DWK 04022000
*   SLEAVE : EXIT FROM AUTHORIZED LIBRARIAN CODE               @D149DWK 04023000
*--------------------------------------------------------------@D149DWK 04024000
         USING TIBADR,R8                                       @D61NDOW 04025000
         USING TCBADR,RA                                       @D61NDOW 04026000
TINFLELI DS    0H                  START OF CODEBLOCK          @D14BDFG 04027000
         CLC   TID,ARTIDH          REQUEST BY SYSTEM TASK      @D66IDAP 04028000
         BNH   TINLELI1            YES, DO NOT RESET SYSACT    @D14BDFG 04029000
         TM    TCBDYNFL,TCBDACT    DYNCLASS SERVICE ACTIVE     @D51IDGL 04030000
         BO    TINLELI1            YES, DO NOT RESET SYSACT    @D14BDFG 04031000
         NI    TIBFLAG1,XFF-SYSACT RESET PRIV. CODE INDICATOR  @D14BDFG 04032000
TINLELI1 LTR   RE,RE               RETURN ADDRESS SPECIFIED    @D14BDFG 04033000
         BZ    TINFEXI1            IF NOT, RETURN TO CALLER    @D14BDFG 04034000
         ST    R0,TINFSAVF         TRANSFER RET.CODE TO RF     @D14BDFG 04035000
         ST    RE,SVOLDP+4         SET RETURN ADDRESS IN PSW   @D14BDFG 04036000
         B     TINFEXI1            RETURN TO SPEC.ADDRESS      @D14BDFG 04037000
         DROP  R8                  DROP TIBADR                 @D61NDOW 04038000
         DROP  RA                  DROP TCBADR                 @D61NDOW 04039000
*                                  END OF CODEBLOCK            @D149DFG 04040000
*--------------------------------------------------------------@D149DWK 04041000
*   SENTER : LINKAGE TO AUTHORIZED IJBALET CODE IN SVA         @D149DWK 04042000
*--------------------------------------------------------------@D149DWK 04043000
         USING TIBADR,R8                                       @D61NDOW 04044000
TINFENAL DS    0H                  START OF CODEBLOCK          @D14BDFG 04045000
         L     RF,ASVASVDL         SVA SUPERVISOR DIRECTORY    @D52VDGL 04046000
         L     RF,AIJBALET-SVASVDL(RF)  AUTH.LIBR. ENTRY POINT @D52VDGL 04047000
         LTR   RF,RF               IS IT AVAILABLE             @D52VDGL 04048000
         BZ    TINFCNEN            IF NOT, CANCEL              @D52VDGL 04049000
         OI    TIBFLAG1,SYSACT     INDICATE SYSTEM CODE ACTIVE @D52VDGL 04050000
         BALR  R5,0                SEE IF SOMEONE CAME ALTHOUGH@D52VDGL 04051000
         OC    TINFOPSW,TINFOPSW   IJBALET SHOULD RUN DISABLED @D52VDGL 04052000
         BNZ   SYSERROR                                        @D52VDGL 04053000
         TM    SVOLDP+4,X'80'      CANCEL IF NOT IN 31 BIT     @D52VDGL 04054000
         BNO   TINFCNN3            ADDRESSING MODE.            @D52VDGL 04055000
         MVC   TINFOPSW,SVOLDP     PASS A(NEXT INSTR.) IN RE   @D52VDGL 04056000
         NC    SVOLDP(4),TINENALM                              @D52VDGL 04057000
         ST    RF,TINFSAVF         PASS ENTRY POINT IN RF      @D52VDGL 04058000
         ST    RF,SVOLDP+4         SET ENTRY POINT IN PSW      @D52VDGL 04059000
         B     TINFEXI1            ENTER AUTHORIZED CODE       @D52VDGL 04060000
         DROP  R8                  DROP TIBADR                 @D61NDOW 04061000
TINENALM DC    X'440C0000'                                     @D52VDGL 04062000
*--------------------------------------------------------------@D149DWK 04063000
*   SLEAVE : EXIT FROM AUTHORIZED IJBALET CODE IN SVA          @D149DWK 04064000
*--------------------------------------------------------------@D149DWK 04065000
         USING TIBADR,R8                                       @D61NDOW 04066000
         USING TCBADR,RA                                       @D61NDOW 04067000
TINFLEAL DS    0H                  START OF CODEBLOCK          @D14BDFG 04068000
         CLC   TID,ARTIDH          REQUEST BY SYSTEM TASK      @D66IDAP 04069000
         BNH   TINLEAL1            YES, DO NOT RESET SYSACT    @D52VDGL 04070000
         TM    TCBDYNFL,TCBDACT    DYNCLASS SERVICE ACTIVE     @D52VDGL 04071000
         BO    TINLEAL1            YES, DO NOT RESET SYSACT    @D52VDGL 04072000
         NI    TIBFLAG1,XFF-SYSACT RESET PRIV. CODE INDICATOR  @D52VDGL 04073000
TINLEAL1 MVC   SVOLDP(8),TINFOPSW  RESET CALLERS PSW VALUES    @D52VDGL 04074000
         XC    TINFOPSW,TINFOPSW   PURGE IT FOR FUTURE USE     @D52VDGL 04075000
         ST    R0,TINFSAVF         TRANSFER RET.CODE TO RF     @D52VDGL 04076000
         BAL   R9,TINFGENT         CALL, SAVE STATUS ========>>@D37CDFG 04077000
*SGLINK  TINFGENT,INPUT=(R9,RC),WORK=(R2,R3,R4,R5,R7,RE,RF),           *04078000
               OUTPUT=(R0,R1,R6,R8,RA,RB)                      @D62NDAP 04079000
TINLEALC EQU   *                   TO CHECK ADDRESS IN TINFGENT@52SQLGL 04080000
         B     TINFDISP            RETURN VIA DISPATCHER       @D52VDGL 04081000
         DROP  R8                  DROP TIBADR                 @D61NDOW 04082000
         DROP  RA                  DROP TCBADR                 @D61NDOW 04083000
*                                  END OF CODEBLOCK            @D52VDGL 04084000
TINFOPSW DC    D'0'                                            @D52VDGL 04085000
***************************************************************@D51IDGL 04086000
*                                                             *@D51IDGL 04087000
*  VALID : CHECK=READ,BEGIN=...,END=...,SVA=YES/NO            *@D51IDGL 04088000
*                                                             *@D51IDGL 04089000
*  FUNCTION: VALIDATE ADDRESS RANGE BETWEEN BEGIN AND END,    *@D51IDGL 04090000
*    IF OWNER TASK OF ISSUEING TASK IS PERMITTED TO READ      *@D51IDGL 04091000
*    FROM THIS AREA.                                          *@D51IDGL 04092000
*  ON ENTRY:                                                  *@D51IDGL 04093000
*    R0 = BIT 8-31: ZERO.                                     *@D51IDGL 04094000
*         BIT 0   : FLAG BIT FOR SVA=YES                      *@D51IDGL 04095000
*    R1 = PTR TO BEGIN OF RANGE TO BE CHECKED                 *@D51IDGL 04096000
*    R2 = PTR TO END   OF RANGE TO BE CHECKED                 *@D51IDGL 04097000
*  ON EXIT TO TINCOD12:  AREA CONTAINS INVALID ADDRESS        *@D51IDGL 04098000
*  ON EXIT TO TINCOD08:  AREA IS FETCH PROTECTED              *@D51IDGL 04099000
*  ON EXIT TO TINSETRC:                                       *@D51IDGL 04100000
*    RF = RETURN CODE. IF SVA=YES SPECIFIED, '4' INDICATES,   *@D51IDGL 04101000
*         THAT BEGIN AND END ADDRESS WERE BOTH PART OF SVA.   *@D51IDGL 04102000
***************************************************************@D51IDGL 04103000
         USING PCBADR,R5                                       @D61NDOW 04104000
         USING DISP,R6                                         @D61NDOW 04105000
TINFVLRD DS    0H                START OF CODEBLOCK            @D14BDFG 04106000
         TM    SVOLDP+4,X'80'    IF (CALLER HAD BEEN IN 24     @D52VDGL 04107000
         BO    TINVLRD1          *** BIT ADDRESSING MODE)      @D52VDGL 04108000
         ICM   R1,8,F0             SWITCH OFF THE FIRST BYTE   @D52VDGL 04109000
         ICM   R2,8,F0             *  OF ADDRESSES TO VALIDATE @D52VDGL 04110000
TINVLRD1 DS    0H                ENDIF                         @D52VDGL 04111000
         LR    R3,R2             R3: SAVE UPPER ADDRESS LIMIT  @D14BDFG 04112000
         LR    R7,R0             R7: PRESERVE SVA=YES OPERAND  @D51IDGL 04113000
         ICM   R0,8,H0           R0: SET OFF FLAGS FOR TINFGTID@D51IDGL 04114000
         BAL   R9,TINFGTID       CALL,CHECK OR GET TID ======>>@D14BDFG 04115000
*SGLINK  TINFGTID,INPUT=(R0,R9,RC),OUTPUT=(R2,R8)                       04116000
         CH    R2,TID            CANCEL IF CALL WAS NOT FOR    @KD40323 04117000
         BNE   TINFCNTC          *  CURRENT TASK ID.           @KD40323 04118000
         LR    R2,R3             R3: RESTORE UPPER ADDR. LIMIT @D14BDFG 04119000
* R5 IS NO LONGER INPUT. PKM OF CURRENT TASK IS TAKEN FOR VALIDATION    04120000
         XR    RF,RF             RF: INITIALIZE RETURN CODE    @D14BDFG 04121000
         LR    RA,R1             RA: PRESERVE START ADDR.      @D51IDGL 04122000
         LR    RB,R2             RB: PRESERVE END ADDR.        @D51IDGL 04123000
         BAL   R8,VALREADN       CALL,VALIDATE ADDR.RANGE ===>>@D64XDMZ 04124000
*SGLINK  VALREADN,INPUT=(R1,R2,R6,R8),OUTPUT=(R5),WORK=(R1,R2,R3,R4)    04125000
         B     TINCOD12          ERROR (INVALID ADDRESS)       @D14BDFG 04126000
         B     TINCOD08          ERROR (FETCH PROTECT.STOR)    @D14BDFG 04127000
         LTR   R7,R7             RETURN IF ((USER DID NOT      @D51IDGL 04128000
         BNM   TINSETRC          *    SPECIFY SVA=YES)         @D51IDGL 04129000
         L     R1,IJBSMCOM       *  |(BEGIN ADDRESS OF AREA    @D52VDGL 04130000
         USING SMCOM,R1          *    LOWER THAN THE LOW SVA   @D52VDGL 04131000
         CL    RA,SMCSVA         *    BEGIN ADDRESS))          @D52VDGL 04132000
         BL    TINSETRC          *                             @D52VDGL 04133000
         CL    RB,SMCESVA        RETURN IF (UPPER BORDER OF    @D52VDGL 04134000
         BNH   TINCOD04          *  AREA IS IN LOWER SVA)      @D52VDGL 04135000
         CLC   SMCSVA31,SMCESV31 RETURN IF (THERE IS NO        @KD40323 04136000
         BNL   TINSETRC          *    HIGH SVA)                @KD40323 04137000
         CL    RA,SMCSVA31       RETURN IF (BEGIN OF AREA IS   @D52VDGL 04138000
         BL    TINSETRC          *          IN HIGH SVA)       @D52VDGL 04139000
         B     TINCOD04          RETURN, RCODE=4 ============>>@D51IDGL 04140000
         DROP  R1                DROP BASE FOR SMCOM           @D61ADRP 04141000
         DROP  R5                DROP PCBADR                   @D61NDOW 04142000
         DROP  R6                DROP DISP BASE                @D61NDOW 04143000
*                                END OF CODEBLOCK              @D149DFG 04144000
***************************************************************@D51IDGL 04145000
*                                                             *@D51IDGL 04146000
*  VALID : CHECK=UPDATE,BEGIN=...,END=...,SVA=YES/NO          *@D51IDGL 04147000
*                                                             *@D51IDGL 04148000
*  FUNCTION: VALIDATE ADDRESS RANGE INCLUDING BEGIN AND END   *@D51IDGL 04149000
*    ADDRESS, IF USER OF ISSUEING TASK IS PERMITTED TO WRITE  *@D51IDGL 04150000
*    TO THIS AREA.                                            *@D51IDGL 04151000
*  ON ENTRY:                                                  *@D51IDGL 04152000
*    R0 = BIT 8-31: ZERO.                                     *@D51IDGL 04153000
*         BIT 0   : FLAG BIT FOR SVA=YES                      *@D51IDGL 04154000
*    R1 = PTR TO 1ST BYTE OF RANGE TO BE CHECKED              *@D51IDGL 04155000
*    R2 = PTR TO LAST BYTE IN RANGE.                          *@D51IDGL 04156000
*  ON EXIT TO TINCOD12:  AREA CONTAINS INVALID ADDRESS        *@D51IDGL 04157000
*  ON EXIT TO TINCOD08:  AREA IS FETCH PROTECTED              *@D51IDGL 04158000
*  ON EXIT TO TINSETRC:                                       *@D51IDGL 04159000
*    RF = RETURN CODE. IF SVA=YES SPECIFIED, '4' INDICATES,   *@D51IDGL 04160000
*         THAT BEGIN AND END ADDRESS WERE BOTH PART OF SVA.   *@D51IDGL 04161000
***************************************************************@D51IDGL 04162000
         USING PCBADR,R5                                       @D61NDOW 04163000
         USING TIBADR,R8                                       @D61NDOW 04164000
         USING DISP,R6                                         @D61NDOW 04165000
TINFVLWR DS    0H                START OF CODEBLOCK            @D14BDFG 04166000
         TM    SVOLDP+4,X'80'    IF (CALLER HAD BEEN IN 24     @D52VDGL 04167000
         BO    TINVLWR1          *** BIT ADDRESSING MODE)      @D52VDGL 04168000
         ICM   R1,8,F0             SWITCH OFF THE FIRST BYTE   @D52VDGL 04169000
         ICM   R2,8,F0             *  OF ADDRESSES TO VALIDATE @D52VDGL 04170000
TINVLWR1 DS    0H                ENDIF                         @D52VDGL 04171000
         LR    RA,R1             RA: SAVE LOWER ADDRESS LIMIT  @D14BDFG 04172000
         LR    RB,R2             RB: SAVE UPPER ADDRESS LIMIT  @D14BDFG 04173000
         LR    R4,R0             R4: PRESERVE CALLERS FLAGS    @D51IDGL 04174000
         ICM   R0,8,H0           R0: RESET TO FORMER VALUE.    @D51IDGL 04175000
         BAL   R9,TINFGTID       CALL,CHECK OR GET TID ======>>@D14BDFG 04176000
*SGLINK  TINFGTID,INPUT=(R0,R9,RC),OUTPUT=(R2,R8)                       04177000
         CH    R2,TID            CANCEL IF CALL WAS NOT FOR    @KD40323 04178000
         BNE   TINFCNTC          *  CURRENT TASK ID.           @KD40323 04179000
         LR    R2,RB             R2: RESTORE UPPER LIMIT       @D14BDFG 04180000
         LH    R5,TIBRPIK        R5,7: GET PIK OF SERVICE      @D14BDFG 04181000
         LR    R7,R5             *     OWNER                   @D14BDFG 04182000
         LR    R9,R8             R9: SAVE TIB POINTER          @D14BDFG 04183000
         XR    RF,RF             RF: INITIALIZE RETURN CODE    @D14BDFG 04184000
         BAL   R8,VALWRITE       CALL VALIDATION ============>>@D14BDFG 04185000
*SGLINK  VALWRITE,INPUT=(R1,R2,R5,R6,R8),OUTPUT=(R5),WORK=(R1,R2)       04186000
         B     TINCOD12          ERROR (INVALID ADDRESS,RC=12) @D14BDFG 04187000
         B     TINCOD08          ERROR (KEY MISMATCH,RC=8)     @D14BDFG 04188000
         LR    R8,R9             R8: RESTORE TIB POINTER       @D14BDFG 04189000
         TM    TIBFLAG2,ICCFPP   IF (VALIDATION NOT FOR PSEUDO @D14BDFG 04190000
         BO    TINFVLPP          *** PARTITION OF ICCF)        @D14BDFG 04191000
         LH    R7,TIBRTID        GET TID OF OWNER TASK         @D64ADMS 04192000
         SLL   R7,2              SHIFT TO MAKE AN INDEX        @D64ADMS 04193000
         AL    R7,ATIBATAB       ADDRESS OF TIB ADDRESS        @D66IDAP 04194000
         L     R7,0(,R7)         TIB BASE ADDRESS              @D66IDAP 04195000
         L     R7,TIBTCB-TIBADR(0,R7) GET TCB POINTER FROM TIB @D64ADMS 04196000
         L     R7,TCBATCBE-TCBADR(0,R7) GET POINTER TO TCBX    @D64ADMS 04197000
         USING TCBXADR,R7        TCB BASE ADDRESS              @D64ADMS 04198000
         SRL   R5,4              SHIFT KEY TO LAST 4 BITS      @D64ADMS 04199000
         L     R1,BIT0OMSK       MAKE BIT MASK                 @D64ADMS 04200000
         SRL   R1,0(R5)          SHIFT BIT TO PROPER POSITION  @D64ADMS 04201000
         N     R1,TCBX1CR3       TEST BIT IN PSW KEY MASK      @D64ADMS 04202000
         DROP  R7                                              @D64ADMS 04203000
         BNZ   TINFVLW1          VALID ADDRESS RANGE, RETURN   @D64ADMS 04204000
         B     TINCOD08          TASK NOT ALLOWED TO USE KEY   @D64ADMS 04205000
TINFVLPP DS    0H                ***  PSEUDO PARTITION         @D51IDHA 04206000
         DROP  R8                RELEASE TIB BASE POINTER      @D61NDOW 04207000
         LH    R8,TINFHPIK       GET PIK VALUE                 @D51IDHA 04208000
         CR    R5,R8             PIK GREATER MAX. STATIC PIK   @DA...GL 04209000
         BNH   TINCOD08          NO,                           @D14BDFG 04210000
TINFVLW1 DS    0H                                              @D14BDFG 04211000
         LTR   R4,R4             SVA=YES                       @D51IDGL 04212000
         BNM   TINCOD00          NO,                           @D51IDGL 04213000
         L     R1,IJBSMCOM       SMCOM BASE ADDRESS            @D52VDGL 04214000
         USING SMCOM,R1          SMCOM BASE POINTER            @D52VDGL 04215000
         CL    RA,SMCSVA         INSIDE SVA                    @D52VDGL 04216000
         BL    TINCOD00          NO,                           @D52VDGL 04217000
         CL    RB,SMCESVA        REALLY INSIDE SVA             @D52VDGL 04218000
         BNH   TINCOD04          YES,                          @D52VDGL 04219000
         CLC   SMCSVA31,SMCESV31 DOES HIGH SVA EXIST           @KD40323 04220000
         BNL   TINCOD00          NO,                           @KD40323 04221000
         CL    RA,SMCSVA31       INSIDE HIGH SVA               @D52VDGL 04222000
         BL    TINCOD00          NO,                           @D52VDGL 04223000
         B     TINCOD04          YES,                          @D51IDGL 04224000
         DROP  R1                DROP BASE FOR SMCOM           @D61ADRP 04225000
         DROP  R5                DROP PCBADR                   @D61NDOW 04226000
         DROP  R6                DROP DISP BASE                @D61NDOW 04227000
*                                END OF CODEBLOCK              @D14BDFG 04228000
*--------------------------------------------------------------@D149DWK 04229000
*   VIOPOINT : POINT TO A SPECIFIED WORK BLOCK IN VIO AREA     @D149DWK 04230000
*--------------------------------------------------------------@D149DWK 04231000
TINFVIOP DS    0H                START OF CODEBLOCK            @D14BDRP 04232000
         TM    SVOLDP+4,X'80'    CANCEL IF IN 31 BIT           @D52VDGL 04233000
         BO    TINFCNAM          * ADDRESSING MODE.            @D52VDGL 04234000
*        AMODESW SET,AMODE=24,WR=(R9) SWITCH TO 24 BIT         @D52VDGL 04235000
         AMODESW SET,AMODE=24,WR=(R9) SWITCH TO 24 BIT         @D52VDGL 04236000
         L     R8,APMGMDAT       GET BASE FOR DATA AREA        @D14BDRP 04237000
         USING PMGMDATA,R8                                     @D14BDRP 04238000
         L     R9,ASGPSVC        GET ADDR OF VIOPOINT          @D14BDRP 04239000
         BR    R9                BRANCH TO VIOPOINT SERVICE    @D14BDRP 04240000
         DROP  R8                DROP PMGMDATA                 @D61NDOW 04241000
*                                END OF CODEBLOCK                       04242000
*--------        ------------------------------------------------------ 04243000
         DROP  RD                  DROP BECAUSE OF DIFFERENT   @D51IDHA 04244000
*                                  USE OF RD IN PART 3         @D51IDHA 04245000
*---------------------------------------------------------------------- 04246000
         TITLE 'VSE SUPERVISOR     SGTINF    PART-3 COMMON SUBROUTINES' 04247000
.*===================================================================== 04248000
.*= ### =============================================================== 04249000
.*=   # =================== PART 3: GETFLD ROUTINES =================== 04250000
.*=  ## =================== PART 3: GETFLD ROUTINES =================== 04251000
.*=   # =================== PART 3: GETFLD ROUTINES =================== 04252000
.*= ### =============================================================== 04253000
.*===================================================================== 04254000
*== PART 3: GETFLD ROUTINES =========================================== 04255000
* ALL ROUTINES, BELONGING TO THE GETFLD SERVICE ARE GROUPED IN          04256000
* THIS PART 3. FOR EACH ROUTINE THE BASE REGISTER RD IS SET             04257000
* SEPERATELY. THEREFORE UNLIMITED EXTENSIONS CAN BE MADE.               04258000
* THE COMMON ROUTINES, USED BY THIS PART ARE KEPT IN PART ONE           04259000
* AND USE THE BASE REGISTER RC, WHICH IS NOT AFFECTED BY CODE           04260000
* WITHIN PART THREE.                                                    04261000
*====================================================================== 04262000
         SPACE 1                                                        04263000
TINFPRT3 DS    0F                  START ADDRESS OF PART 3     @D51IDHA 04264000
         SPACE 1                                                        04265000
*---------------------------------------------------------------------- 04266000
*   GETFLD : RETRIEVE VSAMOPEN FLAG  (VSAMOPEN)                @D149DFG 04267000
*---------------------------------------------------------------------- 04268000
TINFGVSO DS    0H                   START OF CODEBLOCK                  04269000
         USING TINFGVSO,RD          BASE LOADED AT BRANCH TIME @D51IDHA 04270000
         BAL   R9,TINFMTIB          GET 'MAIN TASK' TIB        @D14CDFG 04271000
*SGLINK  TINFMTIB,INPUT=(R8,R9,RC),WORK=(R2,RA),OUTPUT=R8               04272000
         USING TIBADR,R8                                       @D61NDOW 04273000
         L     RA,TIBTCB            POINT TO APPROPRIATE TCB   @D14CDFG 04274000
         USING TCBADR,RA                                       @D61NDOW 04275000
         TM    TCBFLAGS,VSMOPEN     VSAMOPEN FLAG ON           @D14CDFG 04276000
         BZ    TINX1C00             NO, RETURN ZERO            @RETCODE 04277000
         B     TINANSW1             GO TO EXIT ROUTINE         @RETCODE 04278000
         DROP  R8                   DROP TIBADR                @D61NDOW 04279000
         DROP  RA                   DROP TCBADR                @D61NDOW 04280000
         DROP  RD                   RELEASE BASE REGISTER      @D51IDHA 04281000
*                                   END OF CODEBLOCK                    04282000
*---------------------------------------------------------------------- 04283000
*   GETFLD : GET CURRENT SAVE AREA ADDRESS  (SAVAR)                     04284000
*---------------------------------------------------------------------- 04285000
TINFGSAV DS    0H                  START OF CODEBLOCK                   04286000
TINFGSA1 DS    0H                  ENTRY FOR SAVAR1 SERVICE    @D61ADGL 04287000
         USING TINFGSAV,RD         BASE LOADED AT BRANCH TIME  @D51IDHA 04288000
         BAL   R9,TINFGTID         CALL,CHECK TID ===========>>@D36IDFG 04289000
*SGLINK  TINFGTID,INPUT=(R0,R9,RC),OUTPUT=(R2,R8)                       04290000
         CH    R2,TID              REQUEST FOR CURRENT TASK    @D36IDFG 04291000
         BE    TINFGTS4            YES, TAKE FAST PATH         @D36IDFG 04292000
         L     R8,TIBPTR           RELOAD TASKS TIB POINTER    @D61RDOW 04293000
         LA    R9,TINFCNAU         ERROR EXIT                  @D51RMGL 04294000
         BAL   RB,TINFAUTS         CHECK FOR SYSTEM REQUEST    @D36IDFG 04295000
*SGLINK  TINFAUTS,INPUT=(R8,R9,RB,RC)                                   04296000
         BAL   R9,TINFGENT         CALL,SAVE STATUS =========>>@D36IDFG 04297000
*SGLINK  TINFGENT,INPUT=(R9,RC),WORK=(R2,R3,R4,R5,R7,RE,RF),           *04298000
               OUTPUT=(R0,R1,R6,R8,RA,RB)                      @D62NDAP 04299000
         BAL   R9,TINFGTID         CALL,GET TIBPTR AGAIN ====>>@D36IDFG 04300000
*SGLINK  TINFGTID,INPUT=(R0,R9,RC),OUTPUT=(R2,R8)                       04301000
         USING TIBADR,R8                                       @D61NDOW 04302000
         L     RA,TIBTCB           GET TCB POINTER             @D36IDFG 04303000
         USING TCBADR,RA                                       @D61NDOW 04304000
         L     R1,TCBSAVE          LOAD SAVEAREA ADDRESS       @D36IDFG 04305000
         TM    SUPFLAG,TDACT       TURBO DISPATCHER ACTIVE     @D61RDOW 04306000
         BZ    TINFGTS0            NO --->                     @D61RDOW 04307000
         DISPMAC FUNC=GETSAVAR     GET REALLY USER SAVE AREA   @D61RDOW 04308000
TINFGTS0 DS    0H                                              @D61RDOW 04309000
         USING SVEARA,RB                                       @D36IDFG 04310000
         ST    R1,SVER01           RETURN IN REG.1 OF CALLER   @D36IDFG 04311000
         CLI   SVER0F+3,TIN#GSA1   CALL FOR SAVAR1 SERVICE     @KD40391 04312000
         BNE   TINFGTS2            BRANCH IF NOT               @KD40391 04313000
         L     R2,TCBARSAV         TAKE AR SAVEAREA POINTER    @KD40391 04314000
         ST    R2,SVER02           STORE IN SAVEAREA           @KD40391 04315000
TINFGTS2 XC    SVER0F,SVER0F       RESET RETURN CODE           @D51MDGL 04316000
         DROP  RB                                              @D36IDFG 04317000
         BR    R6                  EXIT TO DISPATCHER          @D36IDFG 04318000
TINFGTS4 DS    0H                  EXECUTE FAST PATH           @D52VDGL 04319000
         L     R1,TCBSAVE          LOAD SAVEAREA ADDRESS       @D36IDFG 04320000
         CLI   TINFSAVF+3,TIN#GSA1 CALL FOR SAVAR1 SERVICE     @KD40391 04321000
         BNE   TINC0ST1            GO TO EXIT ROUTINE          @KD40391 04322000
         L     R2,TCBARSAV         TAKE ACCESS REG SAVE AREA   @KD40391 04323000
         ST    R2,TINFSAV2         STORE FOR ANSWER            @KD40391 04324000
         B     TINC0ST1            GO TO EXIT ROUTINE          @KD40391 04325000
         DROP  R8                  RELEASE TIBADR   BASE       @D61NDOW 04326000
         DROP  RA                  RELEASE TCBADR   BASE       @D61NDOW 04327000
         DROP  RD                  RELEASE BASE REGISTER       @D51IDHA 04328000
*---------------------------------------------------------------------- 04329000
*   GETFLD : PROVIDE VSE SYSTEM LEVEL INFORMATION   FC=A1      @D27ADAP 04330000
*---------------------------------------------------------------------- 04331000
         USING TINFVSEL,RD         TINFVSEL BASE POINTER       @D27ADAP 04332000
TINFVSEL DS    0H                  PROVIDE SYSTEM INFORMATION  @D27ADAP 04333000
         ICM   R0,15,TINFBLNK      LOAD ALL BLANKS             @D27ADAP 04334000
         ICM   R1,15,TINFBLNK      LOAD ALL BLANKS             @D27ADAP 04335000
         L     RF,AARBUFAR         ATTENTION BUFFER ADDRESS    @D27ADAP 04336000
         USING ARBUFFAR,RF         ATTENTION BUFFER BASE       @D27ADAP 04337000
         ICM   RF,15,ATTLEVEL      IS LEVEL INFORMAT. PRESENT  @D27ADAP 04338000
         BZ    TINFCNFC            NO, NOT SUPPORTED           @D27ADAP 04339000
         USING ARVSENAM,RF         SYSTEM INFORMATION MAPPING  @D27ADAP 04340000
         IC    R0,ARRFREID         GET VERSION NUMBER IN R0    @D27ADAP 04341000
         ICM   R1,4,ARRFREID+2     GET RELEASE NUMBER          @D27ADAP 04342000
         ICM   R1,1,ARRFREID+4     GET REFRESH LEVEL           @D27ADAP 04343000
         B     TINC0ST0            RETURN DATA AND SET RC=0    @D27ADAP 04344000
TINFBLNK DC    CL4' '              BLANK CONSTANT              @D27ADAP 04345000
         DROP  RF                  RELEASE ARVSENAM BASE       @D27ADAP 04346000
         DROP  RD                  RELEASE TINFVSEL BASE       @D27ADAP 04347000
*---------------------------------------------------------------------- 04348000
*   GETFLD : PROVIDE SYSTEM-ID INFORMATION          FC=A2      @D27ADAP 04349000
*---------------------------------------------------------------------- 04350000
         USING TINFVSID,RD         TINFVSID BASE POINTER       @D27ADAP 04351000
TINFVSID DS    0H                  PROVIDE SYSTEM INFORMATION  @D27ADAP 04352000
         L     RF,AARBUFAR         ATTENTION BUFFER ADDRESS    @D27ADAP 04353000
         USING ARBUFFAR,RF         ATTENTION BUFFER BASE       @D27ADAP 04354000
         LA    R1,ATTVSEID         GET POINTER TO VSEID        @D27ADAP 04355000
         B     TINC0ST0            RETURN DATA AND SET RC=0    @D27ADAP 04356000
         DROP  RF                  RELEASE ARVSENAM BASE       @D27ADAP 04357000
         DROP  RD                  RELEASE TINFVSID BASE       @D27ADAP 04358000
         AIF   (NOT &VSE270).N270020                           @DY45988 04359000
*---------------------------------------------------------------------- 04360000
*   GETFLD : PROVIDE LIBRARY DEFINITION INFORMATION FC=A3      @D27ADAP 04361000
*---------------------------------------------------------------------- 04362000
         USING TINFTLSD,RD         TINFTLSD BASE POINTER       @D27ADAP 04363000
TINFTLSD DS    0H                  PROVIDE SYSTEM INFORMATION  @D27ADAP 04364000
         L     RF,AARBUFAR         ATTENTION BUFFER ADDRESS    @D27ADAP 04365000
         USING ARBUFFAR,RF         ATTENTION BUFFER BASE       @D27ADAP 04366000
         ICM   RF,15,ATTTLSTB      GET TLS GLOBAL INFO ADDRESS @D27ADAP 04367000
         BZ    TINFCNFC            INFORMATION NOT AVAILABLE   @D27ADAP 04368000
         USING TLSGLOBAL,RF        TLS INFORMATION MAPPING     @D27ADAP 04369000
         LA    R1,TLSLBNAMES       POINT TO NAME FIELDS        @D27ADAP 04370000
         B     TINC0ST0            RETURN DATA AND SET RC=0    @D27ADAP 04371000
         DROP  RF                  RELEASE ARVSENAM BASE       @D27ADAP 04372000
         DROP  RD                  RELEASE TINFTLSD BASE       @D27ADAP 04373000
.N270020 ANOP                                                           04374000
*---------------------------------------------------------------------- 04375000
*   GETFLD : PROVIDE LIBRARY NAME FOR GIVEN CUU     FC=A4      @DAOM053 04376000
*---------------------------------------------------------------------- 04377000
         USING TINFGLBN,RD         TINFGLBN BASE POINTER       @D27ADAP 04378000
TINFGLBN DS    0H                  PROVIDE SYSTEM INFORMATION  @DAOM053 04379000
         BAL   R9,TINFCUUP         GET POINTER TO PUB          @DAOM053 04380000
*SGLINK  TINFCUUP,INPUT=(R0,R9,RC),WORK=(R1,R8,RA),OUTPUT=R3   @DAOM053 04381000
         B     TINX0C16         0  ERROR CUU NOT FOUND         @DAOM053 04382000
         BAL   R9,TINFGPBX      4  POINT TO PUBX               @DAOM053 04383000
*SGLINK  TINFGPBX,INPUT=(R3,R9,RC),OUTPUT=R4                   @DAOM053 04384000
         USING PBXADR,R4           PBXADR   BASE POINTER       @DAOM053 04385000
         TM    PBXFLAG,PBXTAPE     IS THIS A TAPE DEVICE       @DAOM053 04386000
         BNO   TINX0C16            NO,                         @DAOM053 04387000
         ICM   R7,15,PBXLBINF      LIBRARY INFORMATION PRESENT @DAOM053 04388000
         BZ    TINCKO00            NO,                         @DAOM053 04389000
         USING TLMADR,R7           TMLADR BASE POINTER         @DAOM053 04390000
         LA    R1,TLMLNAME         PROVIDE LIB-NAME ADDRESS    @DAOM053 04391000
         B     TINC0ST0            RETURN DATA AND SET RC=0    @DAOM053 04392000
         DROP  R4                  RELEASE PBXADR   BASE       @DAOM053 04393000
         DROP  R7                  RELEASE TLMADR   BASE       @DAOM053 04394000
         DROP  RD                  RELEASE TINFGLBN BASE       @DAOM053 04395000
*---------------------------------------------------------------------- 04396000
*   GETFLD : GET PP SAVE AREA ADDRESS  (PPSAVAR)    FC=07               04397000
*---------------------------------------------------------------------- 04398000
         USING TCBADR,RA                                       @D61NDOW 04399000
TINFGTPP DS    0H                  START OF CODEBLOCK          @D36IDFG 04400000
         USING TINFGTPP,RD         BASE LOADED AT BRANCH TIME  @D51IDHA 04401000
         BAL   R9,TINFGTID         CALL,CHECK TID ===========>>@D36IDFG 04402000
*SGLINK  TINFGTID,INPUT=(R0,R9,RC),OUTPUT=(R2,R8)                       04403000
         CH    R2,TID              REQUEST FOR CURRENT TASK    @D36IDFG 04404000
         BNE   TINFCNTC            IF NOT, ERROR EXIT          @D51RMGL 04405000
         L     R1,TCBSAVE          LOAD SAVE AREA ADDRESS      @D36IDFG 04406000
         C     R1,ALTASAVE         LTA REALLY ACTIVE           @D36IDFG 04407000
         BNE   TINC0ST1            YES, GO TO EXIT ROUTINE     @D51MDGL 04408000
         L     R2,ASYSPCB          POINT TO ATTENTION'S PCB    @D51IDIS 04409000
         L     R2,PCEPIB-PCBADR(,R2) GET ATTENTION'S PIB       @D51IDIS 04410000
         USING PIBADR,R2           PIB BASE POINTER            @D52VDGL 04411000
         L     R1,PIBSAV2N         LOAD SAVEAREA ADDRESS       @D51IDIS 04412000
         ICM   R1,8,F0             CLEAR HIGH ORDER BYTE       @D52VDGL 04413000
         B     TINC0ST1            GO TO EXIT ROUTINE          @D51MDGL 04414000
         DROP  R2                  RELEASE PIB BASE POINTER    @D37CDFG 04415000
         DROP  RA                  RELEASE TCBADR              @D61NDOW 04416000
         DROP  RD                  RELEASE BASE REGISTER       @D51IDHA 04417000
*                                  END OF CODEBLOCK                     04418000
*---------------------------------------------------------------------- 04419000
*   GETFLD : GET LOGICAL TRANSIENT AREA ADDRESS  (LTAPTR)               04420000
*---------------------------------------------------------------------- 04421000
TINFGTLT DS    0H                  START OF CODEBLOCK                   04422000
         USING TINFGTLT,RD         BASE LOADED AT BRANCH TIME  @D51IDHA 04423000
         BAL   R9,TINFGTID         CALL FOR TID AND TIB =====>>@D36IDFG 04424000
*SGLINK  TINFGTID,INPUT=(R0,R9,RC),OUTPUT=(R2,R8)                       04425000
         SLR   R1,R1               CLEAR REGISTER 1                     04426000
         CH    R2,LTID             LTA OWNED BY SPECIFIED TASK @D36IDFG 04427000
         BNE   TINC0ST1            NO, GO TO EXIT ROUTINE      @D51MDGL 04428000
         L     R1,ALTA             LOAD LTA ADDRESS                     04429000
TINFVEN1 DS    0H                  VENDOR                      @D61EDOW 04430000
         NOP   *                   ......H                     @D61EDOW 04431000
         NOP   *                    ......O                    @D61EDOW 04432000
         NOP   *                     ......O                   @D61EDOW 04433000
         NOP   *                      ......K                  @D61EDOW 04434000
         B     TINC0ST1            GO TO EXIT ROUTINE          @D51MDGL 04435000
         DROP  RD                  RELEASE BASE REGISTER RD    @D51IDHA 04436000
*                                  END OF CODEBLOCK                     04437000
*---------------------------------------------------------------------- 04438000
*   GETFLD : GET FIRST CANCEL CODE  (TIBCNCL)                  @D36ZDWK 04439000
*---------------------------------------------------------------------- 04440000
         USING TIBADR,R8                                       @D61NDOW 04441000
TINFGTCC DS    0H                  START OF CODEBLOCK          @D36IDFG 04442000
         USING TINFGTCC,RD         BASE LOADED AT BRANCH TIME  @D51IDHA 04443000
         BAL   R9,TINFGTID         CALL FOR TID AND TIB =====>>@D36IDFG 04444000
*SGLINK  TINFGTID,INPUT=(R0,R9,RC),OUTPUT=(R2,R8)                       04445000
         SLR   R1,R1               CLEAR REGISTER 1            @D36ZDWK 04446000
         IC    R1,TIBCNCL          GET FIRST CANCEL CODE       @D36IDFG 04447000
         B     TINC0ST1            GO TO EXIT ROUTINE          @D51MDGL 04448000
         DROP  R8                  RELEASE TIBADR              @D61NDOW 04449000
         DROP  RD                  RELEASE BASE REGISTER RD    @D51IDHA 04450000
*                                  END OF CODEBLOCK                     04451000
*---------------------------------------------------------------------- 04452000
*   GETFLD : GET SECOND CANCEL CODE (TIBCNCL2)                 @D36ZDWK 04453000
*---------------------------------------------------------------------- 04454000
         USING TIBADR,R8                                       @D61NDOW 04455000
TINFGTC2 DS    0H                  START OF CODEBLOCK                   04456000
         USING TINFGTC2,RD         BASE LOADED AT BRANCH TIME  @D51IDHA 04457000
         BAL   R9,TINFGTID         CALL FOR TID AND TIB =====>>@D36ZDWK 04458000
*SGLINK  TINFGTID,INPUT=(R0,R9,RC),OUTPUT=(R2,R8)                       04459000
         SLR   R1,R1               CLEAR REGISTER 1            @D36ZDWK 04460000
         IC    R1,TIBCNCL2         GET SECOND CANCEL CODE      @D36ZDWK 04461000
         B     TINC0ST1            GO TO EXIT ROUTINE          @D51MDGL 04462000
         DROP  R8                  RELEASE TIBADR              @D61NDOW 04463000
         DROP  RD                  RELEASE BASE REGISTER RD    @D51IDHA 04464000
*                                  END OF CODEBLOCK                     04465000
*---------------------------------------------------------------------- 04466000
*   GETFLD : GET CANCEL PROPAGATION FLAG  (CNCLALL)                     04467000
*---------------------------------------------------------------------- 04468000
         USING TCBADR,RA                                       @D61NDOW 04469000
TINFGTCA DS    0H                  START OF CODEBLOCK          @D36IDFG 04470000
         USING TINFGTCA,RD         BASE LOADED AT BRANCH TIME  @D51IDHA 04471000
         LA    R9,TINFCNAU         ERROR EXIT                  @D51RMGL 04472000
         BAL   RB,TINFAUTS         CHECK FOR SYSTEM REQUEST    @D36IDFG 04473000
*SGLINK  TINFAUTS,INPUT=(R8,R9,RB,RC)                                   04474000
         TM    TCBFLAG2,CNCLALL    CANCEL PROPAGATION ON       @D36IDFG 04475000
         BZ    TINX1C00            NO, GO TO EXIT ROUTINE      @RETCODE 04476000
         B     TINANSW1            GO TO EXIT ROUTINE          @RETCODE 04477000
         DROP  RA                  RELEASE TCBADR              @D61NDOW 04478000
         DROP  RD                  RELEASE BASE REGISTER RD    @D51IDHA 04479000
*                                  END OF CODEBLOCK                     04480000
*---------------------------------------------------------------------- 04481000
*   GETFLD : GET ICCF PSEUDO PARTITION INDICATOR (ICCFPP)      @D36IDFG 04482000
*---------------------------------------------------------------------- 04483000
         USING TIBADR,R8                                       @D61NDOW 04484000
TINFGTEP DS    0H                  START OF CODEBLOCK          @D36IDFG 04485000
         USING TINFGTEP,RD         BASE LOADED AT BRANCH TIME  @D51IDHA 04486000
         BAL   R9,TINFGTID         CALL FOR TID AND TIB =====>>@D36IDFG 04487000
*SGLINK  TINFGTID,INPUT=(R0,R9,RC),OUTPUT=(R2,R8)                       04488000
         TM    TIBFLAG2,ICCFPP     ICCF PSEUDO PARTITION       @D36IDFG 04489000
         BZ    TINX1C00            NO, GO TO EXIT ROUTINE      @RETCODE 04490000
         B     TINANSW1            GO TO EXIT ROUTINE          @RETCODE 04491000
         DROP  R8                  RELEASE TIBADR              @D61NDOW 04492000
         DROP  RD                  RELEASE BASE REGISTER RD    @D51IDHA 04493000
*                                  END OF CODEBLOCK                     04494000
*---------------------------------------------------------------------- 04495000
*   GETFLD : GET ICCF ROLL OUT FLAG STATUS  (ICCFRO)           @D36IDWK 04496000
*---------------------------------------------------------------------- 04497000
         USING TIBADR,R8                                       @D61NDOW 04498000
TINFGTRO DS    0H                   START OF CODEBLOCK         @D36IDFG 04499000
         USING TINFGTRO,RD          BASE LOADED AT BRANCH TIME @D51IDHA 04500000
         BAL   R9,TINFGTID          CALL FOR TID AND TIB ====>>@D36IDFG 04501000
*SGLINK  TINFGTID,INPUT=(R0,R9,RC),OUTPUT=(R2,R8)                       04502000
         TM    TIBFLAG,ROLLOUT      PP ELIGIBLE FOR ROLL OUT   @D36IDFG 04503000
         BZ    TINX1C00             NO, GO TO EXIT ROUTINE     @RETCODE 04504000
         B     TINANSW1             GO TO EXIT ROUTINE         @RETCODE 04505000
         DROP  R8                  RELEASE TIBADR              @D61NDOW 04506000
         DROP  RD                   RELEASE BASE REGISTER RD   @D51IDHA 04507000
*                                   END OF CODEBLOCK                    04508000
*---------------------------------------------------------------------- 04509000
*   GETFLD : GET STATUS OF ABEXIT ROUTINE  (ABINPR)            @D369DWK 04510000
*---------------------------------------------------------------------- 04511000
TINFGTAB DS    0H                   START OF CODEBLOCK         @D36IDWK 04512000
         USING TINFGTAB,RD          BASE LOADED AT BRANCH TIME @D51IDHA 04513000
         BAL   R9,TINFGTID         CALL, CHECK TID ==========>>@D36IDWK 04514000
*SGLINK  TINFGTID,INPUT=(R0,R9,RC),OUTPUT=(R2,R8)                       04515000
         CH    R2,TID              REQUEST FOR CURRENT TASK    @D36IDWK 04516000
         BE    TINGAB04            YES, TAKE FAST PATH         @D36IDWK 04517000
         BAL   R9,TINFGENT         SAVE STATUS OF REQUESTOR    @D36IDWK 04518000
*SGLINK  TINFGENT,INPUT=(R9,RC),WORK=(R2,R3,R4,R5,R7,RE,RF),           *04519000
               OUTPUT=(R0,R1,R6,R8,RA,RB)                      @D62NDAP 04520000
         BAL   R9,TINFGTID         CALL FOR TID AND TIB AGAIN>>@D36IDWK 04521000
*SGLINK  TINFGTID,INPUT=(R0,R9,RC),OUTPUT=(R2,R8)                       04522000
         USING TIBADR,R8                                       @D61NDOW 04523000
         L     RA,TIBTCB           GET TCB POINTER             @D36IDWK 04524000
         USING TCBADR,RA                                       @D61NDOW 04525000
         USING SVEARA,RB                                       @D36IDWK 04526000
         XC    SVER0F,SVER0F       CLEAR CALLERS RETURN CODE   @D51MDGL 04527000
         SLR   R1,R1               CLEAR RETURN REGISTER       @D36IDWK 04528000
.***     IT IS REQUIRED TO CHECK FOR THE OLD AB-EXIT           @@@@@@OW 04529000
         TM    TCBABEX,EXITACT     ABEXIT ACTIVE               @D62ADMK 04530000
         BZ    TINGAB02            NO, RETURN ZERO             @D36IDWK 04531000
         LA    R1,1                INDICATE ACTIVE             @D36IDWK 04532000
TINGAB02 ST    R1,SVER01           RETURN IN REG.1 OF CALLER   @D36IDWK 04533000
         DROP  RB                                              @D36IDWK 04534000
         BR    R6                  EXIT TO DISPATCHER          @D36IDWK 04535000
TINGAB04 DS    0H                  CHECK FOR CURRENT TASK      @D52VDGL 04536000
.***     IT IS REQUIRED TO CHECK FOR THE OLD AB-EXIT           @@@@@@OW 04537000
         TM    TCBABEX,EXITACT     ABEXIT ACTIVE               @D62ADMK 04538000
         BZ    TINX1C00            NO, RETURN ZERO             @D36IDWK 04539000
         B     TINANSW1            GO TO EXIT ROUTINE          @D36IDWK 04540000
         DROP  R8                  DROP TIBADR                 @D61NDOW 04541000
         DROP  RA                  DROP TCBADR                 @D61NDOW 04542000
         DROP  RD                   RELEASE BASE REGISTER      @D51IDHA 04543000
*                                   END OF CODEBLOCK                    04544000
*---------------------------------------------------------------------- 04545000
*   GETFLD : GET FLAG FOR LTA ACTIVE  (LTAACT)                 @D369DWK 04546000
*---------------------------------------------------------------------- 04547000
TINFGTLA DS    0H                   START OF CODEBLOCK         @D36GDWK 04548000
         USING TINFGTLA,RD          BASE LOADED AT BRANCH TIME @D51IDHA 04549000
         BAL   R9,TINFGTID          CALL FOR TID AND TIB ====>>@D36GDWK 04550000
*SGLINK  TINFGTID,INPUT=(R0,R9,RC),OUTPUT=(R2,R8)                       04551000
         USING TIBADR,R8                                       @D61NDOW 04552000
         TM    TIBFLAG1,LTAACT      LTA ACTIVE FOR SPEC. TASK  @D36GDWK 04553000
         BZ    TINX1C00             NO, GO TO EXIT ROUTINE     @RETCODE 04554000
         B     TINANSW1             GO TO EXIT ROUTINE         @RETCODE 04555000
         DROP  R8                   DROP TIBADR                @D61NDOW 04556000
         DROP  RD                   RELEASE BASE REGISTER RD   @D51IDHA 04557000
*                                   END OF CODEBLOCK                    04558000
*---------------------------------------------------------------------- 04559000
*   GETFLD : GET FLAG FOR TERMINATOR ACTIVE  (TERMACT)         @D369DFG 04560000
*---------------------------------------------------------------------- 04561000
TINFGTTA DS    0H                   START OF CODEBLOCK         @D36GDFG 04562000
         USING TINFGTTA,RD          BASE LOADED AT BRANCH TIME @D51IDHA 04563000
         BAL   R9,TINFGTID          CALL FOR TID AND TIB ====>>@D36GDFG 04564000
*SGLINK  TINFGTID,INPUT=(R0,R9,RC),OUTPUT=(R2,R8)                       04565000
         USING TIBADR,R8                                       @D61NDOW 04566000
         TM    TIBFLAG1,TERMACT     TERMINATOR ACTIVE          @D36GDFG 04567000
         BZ    TINX1C00             NO, GO TO EXIT ROUTINE     @RETCODE 04568000
         B     TINANSW1             GO TO EXIT ROUTINE         @RETCODE 04569000
         DROP  R8                   DROP TIBADR                @D61NDOW 04570000
         DROP  RD                   RELEASE BASE REGISTER RD   @D51IDHA 04571000
*                                   END OF CODEBLOCK                    04572000
*---------------------------------------------------------------------- 04573000
*   GETFLD : GET FLAG FOR END OF TASK ACTIVE  (EOTACT)         @D369DFG 04574000
*---------------------------------------------------------------------- 04575000
TINFGTEA DS    0H                   START OF CODEBLOCK                  04576000
         USING TINFGTEA,RD          BASE LOADED AT BRANCH TIME @D51IDHA 04577000
         BAL   R9,TINFGTID          CALL FOR TID AND TIB ====>>@D36GDFG 04578000
*SGLINK  TINFGTID,INPUT=(R0,R9,RC),OUTPUT=(R2,R8)                       04579000
         USING TIBADR,R8                                       @D61NDOW 04580000
         TM    TIBFLAG1,EOTACT+EOTINPR  EOT OR CLEAN-UP ACTIVE @D14CDFG 04581000
         BZ    TINX1C00             NO, GO TO EXIT ROUTINE     @RETCODE 04582000
         B     TINANSW1             GO TO EXIT ROUTINE         @RETCODE 04583000
         DROP  R8                   DROP TIBADR                @D61NDOW 04584000
         DROP  RD                   RELEASE BASE REGISTER RD   @D51IDHA 04585000
*                                   END OF CODEBLOCK                    04586000
*---------------------------------------------------------------------- 04587000
*   GETFLD : GET FLAG FOR END OF TASK ROUTINE ACTIVE  (EOTRTN) @DA37011 04588000
*---------------------------------------------------------------------- 04589000
TINFGTER DS    0H                   START OF CODEBLOCK                  04590000
         USING TINFGTER,RD          BASE LOADED AT BRANCH TIME @D51IDHA 04591000
         BAL   R9,TINFGTID          CALL FOR TID AND TIB ====>>@DA37011 04592000
*SGLINK  TINFGTID,INPUT=(R0,R9,RC),OUTPUT=(R2,R8)                       04593000
         USING TIBADR,R8                                       @D61NDOW 04594000
         TM    TIBFLAG1,EOTACT      EOT ROUTINE ACTIVE         @DA37011 04595000
         BZ    TINX1C00             NO, GO TO EXIT ROUTINE     @RETCODE 04596000
         B     TINANSW1             GO TO EXIT ROUTINE         @RETCODE 04597000
         DROP  R8                   DROP TIBADR                @D61NDOW 04598000
         DROP  RD                   RELEASE BASE REGISTER RD   @D51IDHA 04599000
*                                   END OF CODEBLOCK                    04600000
*---------------------------------------------------------------------- 04601000
*   GETFLD : STATUS OF DASD FILE PROTECTION FOR CURRENT TASK   @D369DWK 04602000
*            (SYSRESW)                                         @D51IDHA 04603000
*---------------------------------------------------------------------- 04604000
         USING TCBADR,RA                                       @D61NDOW 04605000
TINFGTSY DS    0H                   START OF CODEBLOCK         @D36IDFG 04606000
         USING TINFGTSY,RD          BASE LOADED AT BRANCH TIME @D51IDHA 04607000
         TM    TCBFLAGS,SYSRESW     DASD FP BYPASSED FOR TASK  @D36IDFG 04608000
         BZ    TINX1C00             NO, GO TO EXIT ROUTINE     @RETCODE 04609000
         B     TINANSW1             GO TO EXIT ROUTINE         @RETCODE 04610000
         DROP  RA                   DROP TCBADR                @D61NDOW 04611000
         DROP  RD                   RELEASE BASE REGISTER RD   @D51IDHA 04612000
*                                   END OF CODEBLOCK                    04613000
*---------------------------------------------------------------------- 04614000
*   GETFLD : GET PIK FOR A GIVEN TID  (PIK)                    @D36IDFG 04615000
*---------------------------------------------------------------------- 04616000
TINFGTPI DS    0H                   START OF CODEBLOCK                  04617000
         USING TINFGTPI,RD          BASE LOADED AT BRANCH TIME @D51IDHA 04618000
         BAL   R9,TINFGTID          CALL FOR TID AND TIB ====>>@D36IDFG 04619000
*SGLINK  TINFGTID,INPUT=(R0,R9,RC),OUTPUT=(R2,R8)                       04620000
         USING TIBADR,R8                                       @D61NDOW 04621000
         CH    R2,IJBHSTID          IS IT A SYSTEM TASK        @D14BDFG 04622000
         BNH   TINX1C00             YES, RETURN PIK=0          @D14BDFG 04623000
         LH    R1,TIBPIK            GET PIK                    @D36IDFG 04624000
         B     TINC0ST1             GO TO EXIT ROUTINE         @D36IDFG 04625000
         DROP  R8                   DROP TIBADR                @D61NDOW 04626000
         DROP  RD                   RELEASE BASE REGISTER RD   @D51IDHA 04627000
*                                   END OF CODEBLOCK                    04628000
*---------------------------------------------------------------------- 04629000
*   GETFLD : GET MAINTASK TID  (MAINTASK)                      @D36IDFG 04630000
*---------------------------------------------------------------------- 04631000
TINFGTMA DS    0H                   START OF CODEBLOCK                  04632000
         USING TINFGTMA,RD          BASE LOADED AT BRANCH TIME @D51IDHA 04633000
         BAL   R9,TINFGTID          CALL FOR TID AND TIB ====>>@D36IDFG 04634000
*SGLINK  TINFGTID,INPUT=(R0,R9,RC),OUTPUT=(R2,R8)                       04635000
         USING TIBADR,R8                                       @D61NDOW 04636000
         LR    R1,R2                INITIALIZE FOR SYSTEM TASK @D14BDFG 04637000
         CH    R2,IJBHSTID          IS IT A SYSTEM TASK        @D14BDFG 04638000
         BNH   TINC0ST1             YES, RETURN ITS OWN TID    @D14BDFG 04639000
         LH    R2,TIBPIK            GET PIK                    @D36IDFG 04640000
         BAL   R9,TINFGPCB          POINT TO PARTITION PCB     @D51IDHA 04641000
*SGLINK  TINFGPCB,INPUT=(R2,R9,RC),OUTPUT=R5                            04642000
         B     TINX1C16             ERROR (DYN.PART.NOT ALLOC.)@D51IDGL 04643000
         NOP   0                    IGNORE STAT.PART.NOT ALLOC.@D51IDGL 04644000
         USING PCBADR,R5                                       @D61NDOW 04645000
         L     R2,PCEPIB2           POINT TO PIB               @D51IDIS 04646000
         USING PIB2ADR,R2           PIB2 BASE POINTER          @D51IDIS 04647000
         LH    R1,PIBMTID           GET MAINTASK TID           @D36IDFG 04648000
         B     TINC0ST1             GO TO EXIT ROUTINE         @D36IDGL 04649000
         DROP  R2                   RELEASE PIB2 BASE POINTER  @D51IDIS 04650000
         DROP  R5                   DROP PCBADR                @D61NDOW 04651000
         DROP  R8                   DROP TIBADR                @D61NDOW 04652000
         DROP  RD                   RELEASE BASE REGISTER RD   @D51IDHA 04653000
*                                   END OF CODEBLOCK                    04654000
*---------------------------------------------------------------------- 04655000
*   GETFLD : GET VTAMOPEN FLAG  (VTAMOPEN)                              04656000
*---------------------------------------------------------------------- 04657000
TINFGTVO DS    0H                   START OF CODEBLOCK                  04658000
         USING TINFGTVO,RD          BASE LOADED AT BRANCH TIME @D51IDHA 04659000
         BAL   R9,TINFGTID          CALL FOR TID AND TIB ====>>@D36IDFG 04660000
*SGLINK  TINFGTID,INPUT=(R0,R9,RC),OUTPUT=(R2,R8)                       04661000
         USING TIBADR,R8                                       @D61NDOW 04662000
         TM    TIBFLAG2,VTOPEN      ANY ACB OPEN               @D14BDFG 04663000
         BZ    TINX1C00             NO, GO TO EXIT ROUTINE     @RETCODE 04664000
         B     TINANSW1             GO TO EXIT ROUTINE         @RETCODE 04665000
         DROP  R8                   DROP TIBADR                @D61NDOW 04666000
         DROP  RD                   RELEASE BASE REGISTER RD   @D51IDHA 04667000
*                                   END OF CODEBLOCK                    04668000
*---------------------------------------------------------------------- 04669000
*   GETFLD : GET VTAM AP EXIT STATUS  (VTAMDISP)                        04670000
*---------------------------------------------------------------------- 04671000
TINFGTVD DS    0H                   START OF CODEBLOCK                  04672000
         USING TINFGTVD,RD          BASE LOADED AT BRANCH TIME @D51IDHA 04673000
         BAL   R9,TINFGTID          CALL FOR TID AND TIB ====>>@D36IDFG 04674000
*SGLINK  TINFGTID,INPUT=(R0,R9,RC),OUTPUT=(R2,R8)                       04675000
         USING TIBADR,R8                                       @D61NDOW 04676000
         TM    TIBFLAG,APSEXFLG     AP EXIT SCHEDULED          @D36IDFG 04677000
         BZ    TINX1C00             NO, GO TO EXIT ROUTINE     @RETCODE 04678000
         B     TINANSW1             GO TO EXIT ROUTINE         @RETCODE 04679000
         DROP  R8                   DROP TIBADR                @D61NDOW 04680000
         DROP  RD                   RELEASE BASE REGISTER RD   @D51IDHA 04681000
*                                   END OF CODEBLOCK                    04682000
*---------------------------------------------------------------------- 04683000
*   GETFLD : GET POINTER TO VTAM ANCHOR BLOCK FOR SPECIFIED TASK        04684000
*            (AOTPTR)                                          @D51IDHA 04685000
*---------------------------------------------------------------------- 04686000
TINFGTAO DS    0H                   START OF CODEBLOCK                  04687000
         USING TINFGTAO,RD          BASE LOADED AT BRANCH TIME @D51IDHA 04688000
         BAL   R9,TINFGTID          CALL FOR TID AND TIB ====>>@D36IDFG 04689000
*SGLINK  TINFGTID,INPUT=(R0,R9,RC),OUTPUT=(R2,R8)                       04690000
         USING TIBADR,R8                                       @D61NDOW 04691000
         L     RA,TIBTCB            POINT TO TCB               @D36IDFG 04692000
         USING TCBADR,RA                                       @D61NDOW 04693000
         LA    R1,AOTADR            GET AOT POINTER            @D36IDFG 04694000
         B     TINC0ST1             GO TO EXIT ROUTINE         @D51MDGL 04695000
         DROP  R8                   DROP TIBADR                @D61NDOW 04696000
         DROP  RA                   DROP TCBADR                @D61NDOW 04697000
         DROP  RD                   RELEASE BASE REGISTER RD   @D51IDHA 04698000
*                                   END OF CODEBLOCK                    04699000
*---------------------------------------------------------------------- 04700000
*   GETFLD : GET ACLOS FLAG STATUS  (ACLOSE)                   @D36IDWK 04701000
*---------------------------------------------------------------------- 04702000
         USING TCBADR,RA                                       @D61NDOW 04703000
TINFGTAC DS    0H                   START OF CODEBLOCK                  04704000
         USING TINFGTAC,RD          BASE LOADED AT BRANCH TIME @D51IDHA 04705000
         BAL   R9,TINFGTID          CALL FOR TID AND TIB ====>>@D36IDWK 04706000
*SGLINK  TINFGTID,INPUT=(R0,R9,RC),OUTPUT=(R2,R8)                       04707000
         USING TIBADR,R8                                       @D61NDOW 04708000
         CH    R2,TID               CHECK FOR CURRENT TASK     @D36IDWK 04709000
         BNE   TINFCNTC             NOT CURRENT --> ERROR EXIT @D51RMGL 04710000
         TM    TCBFLAGS,ACLOSE      ACLOSE IN PROCESS          @D36IDWK 04711000
         BZ    TINX1C00             NO, GO TO EXIT ROUTINE     @RETCODE 04712000
         B     TINANSW1             GO TO EXIT ROUTINE         @RETCODE 04713000
         DROP  R8                   DROP TIBADR                @D61NDOW 04714000
         DROP  RA                   DROP TCBADR                @D61NDOW 04715000
         DROP  RD                   RELEASE BASE REGISTER RD   @D51IDHA 04716000
*                                   END OF CODEBLOCK                    04717000
*---------------------------------------------------------------------- 04718000
*   GETFLD : GET TASK STATUS FLAG  (STATUS)                    @D36IDWK 04719000
*---------------------------------------------------------------------- 04720000
TINFGTST DS    0H                   START OF CODEBLOCK                  04721000
         USING TINFGTST,RD          BASE LOADED AT BRANCH TIME @D51IDHA 04722000
         BAL   R9,TINFGTID          CALL FOR TID AND TIB ====>>@D36IDWK 04723000
*SGLINK  TINFGTID,INPUT=(R0,R9,RC),OUTPUT=(R2,R8)                       04724000
         USING TIBADR,R8                                       @D61NDOW 04725000
         SLR   R1,R1                MOVE STATUS BYTE           @D36IDWK 04726000
         IC    R1,TIBRQID           TO RETURN REGISTER         @D14BDFR 04727000
         B     TINC0ST1             GO TO EXIT ROUTINE         @D36IDWK 04728000
         DROP  R8                   DROP TIBADR                @D61NDOW 04729000
         DROP  RD                   RELEASE BASE REGISTER RD   @D51IDHA 04730000
*                                   END OF CODEBLOCK                    04731000
*---------------------------------------------------------------------- 04732000
*   GETFLD : GET SUBSYSTEM FLAG BYTE  (SSFLAGS)                @D37CDFG 04733000
*---------------------------------------------------------------------- 04734000
TINFGTSF DS    0H                   START OF CODEBLOCK                  04735000
         USING TINFGTSF,RD          BASE LOADED AT BRANCH TIME @D51IDHA 04736000
         BAL   R9,TINFGPIK          GET AND CHECK PIK          @D37CDFG 04737000
*SGLINK  TINFGPIK,INPUT=(R0,R9,RC),WORK=R0,OUTPUT=R2                    04738000
         B     TINFCNPK             ERROR (ILLEGAL PIK)        @D51RMGL 04739000
         BAL   R9,TINFGPCB          AND POINT TO PARTITION PCB @D51IDHA 04740000
*SGLINK  TINFGPCB,INPUT=(R2,R9,RC),OUTPUT=R5                            04741000
         B     TINX1C16             ERROR (DYN.PART.NOT ALLOC.)@D51IDGL 04742000
         NOP   0                    IGN.  STAT.PART NOT ALLOC. @D51IDGL 04743000
         USING PCBADR,R5                                       @D61NDOW 04744000
         SLR   R1,R1                INIT REGISTER              @D37CDFG 04745000
         ICM   R1,3,PCBSSFL1        GET SUBSYSTEM FLAG BYTES   @D14CDWK 04746000
         ICM   R1,B'1100',PCBSSFL3  GET SUBSYSTEM FLAG BYTES   @D64ADMZ 04747000
         B     TINC0ST1             GO TO EXIT ROUTINE         @D37CDFG 04748000
         DROP  R5                   DROP PCBADR                @D61NDOW 04749000
         DROP  RD                   RELEASE BASE REGISTER RD   @D51IDHA 04750000
*                                   END OF CODEBLOCK                    04751000
*---------------------------------------------------------------------- 04752000
*   GETFLD : GET NUMBER OF SUBTASK ATTACHED  (NSUB)            @D369DWK 04753000
*---------------------------------------------------------------------- 04754000
TINFGTSU DS    0H                   START OF CODEBLOCK         @D36IDWK 04755000
         USING TINFGTSU,RD          BASE LOADED AT BRANCH TIME @D51MDGL 04756000
         BAL   R9,TINFGPIK          GET AND CHECK PIK          @D36IDWK 04757000
*SGLINK  TINFGPIK,INPUT=(R0,R9,RC),WORK=R0,OUTPUT=R2                    04758000
         B     TINFCNPK             ERROR (ILLEGAL PIK)        @D51RMGL 04759000
         BAL   R9,TINFGPCB          AND POINT TO PARTITION PCB @D51IDHA 04760000
*SGLINK  TINFGPCB,INPUT=(R2,R9,RC),OUTPUT=R5                            04761000
         B     TINX1C16             ERROR (DYN.PART.NOT ALLOC.)@D51IDGL 04762000
         NOP   0                    IGN.  STAT.PART.NOT ALLOC. @D51IDGL 04763000
         USING PCBADR,R5                                       @D61NDOW 04764000
         LH    R1,PCBLCTSS          GET NUMBER OF SUBTASKS     @D14BDFR 04765000
         B     TINC0ST1             GO TO EXIT ROUTINE         @D36IDWK 04766000
         DROP  R5                   DROP PCBADR                @D61NDOW 04767000
         DROP  RD                   RELEASE BASE REGISTER RD   @D51IDHA 04768000
*                                   END OF CODEBLOCK                    04769000
*---------------------------------------------------------------------- 04770000
*   GETJA : ENTRY POINT FOR SELECTIVE UPDATE OF JA TABLES      @D149DFG 04771000
*   INPUT : R0 = ACTION SPECIFICATION                          @D149DFG 04772000
*           R1 = PIK OR 0 FOR CURRENT PIK                      @D149DFG 04773000
*           RF = SVC 107 FUNCTION CODE                         @D149DFG 04774000
*---------------------------------------------------------------------- 04775000
TINFGTJA DS    0H                   START OF CODEBLOCK                  04776000
         USING TINFGTJA,RD          BASE LOADED AT BRANCH TIME @D51IDHA 04777000
         BAL   R9,TINFGENT          CALL,SAVE STATUS ========>>@D149DFG 04778000
*SGLINK  TINFGENT,INPUT=(R9,RC),WORK=(R2,R3,R4,R5,R7,RE,RF),           *04779000
               OUTPUT=(R0,R1,R6,R8,RA,RB)                      @D62NDAP 04780000
TINFGTJ1 DS    0H                                              @D61RDIS 04781000
         L     R5,ASRQTAB                                      @D61RDGL 04782000
         LA    R5,SRQSAT-SRQTAB(,R5) COMMON MSAT/GETJA GATE    @D61RDGL 04783000
         USING RQADR,R5             RESOURCE DESCRIPTOR BASE   @D66ADAP 04784000
         TM    RSCDESC,FREEBIT      IS GATE OPEN               @D66ADAP 04785000
         BO    TINFGTJ2             YES,                       @D66ADAP 04786000
         DROP  R5                   RELEASE RQADR BASE         @D66ADAP 04787000
         BAL   RC,RWAIT             NO, SET RESOURCE BOUND     @D14BDFG 04788000
         L     RC,FSVCBASE          RESTORE FIRST BASE ADDRESS @D14BDFG 04789000
         B     TINFGTJ1             CHECK GATE AGAIN           @D14BDFG 04790000
TINFGTJ2 MVI   RID+1,SATBND         SET PAGE FAULT GATE        @D14BDFG 04791000
         LR    R5,R0                SAVE ACTION PARAMETER      @D14BDFG 04792000
         LR    R0,R1                GET PART SPECIFICATION     @D14BDFG 04793000
         BAL   R9,TINFGPIK          GET AND CHECK PIK          @D14BDFG 04794000
*SGLINK  TINFGPIK,INPUT=(R0,R9,RC),WORK=R0,OUTPUT=R2                    04795000
         B     TINFCNPK             ERROR (ILLEGAL PIK)        @D51RMGL 04796000
*        AMODESW SET,AMODE=24,WR=(R1) SWITCH TO 24 BIT         @D52VDGL 04797000
         AMODESW SET,AMODE=24,WR=(R1) SWITCH TO 24 BIT         @D52VDGL 04798000
         LR    R0,R5                RESTORE ACTION PARAMETER   @D14BDFG 04799000
         LR    R1,R2                GET PIK                    @D14BDFG 04800000
         L     RC,AGETJA            GETJA BASE ADDRESS         @D14BDFG 04801000
         B     GETJAP-GETJA(RC)     TAKE SECOND ENTRY POINT    @D14BDFG 04802000
*SGLINK  GETJAP,INPUT=(R0,R1,R6,RC)                            @D149DFG 04803000
AGETJA   DC    A(GETJA)             BASE ADDRESS FOR GETJA     @D14BDFG 04804000
         DROP  RD                   RELEASE BASE REGISTER      @D51IDHA 04805000
*                                   END OF CODEBLOCK                    04806000
*---------------------------------------------------------------------- 04807000
*   GETFLD : GET PARTITION CPU TIME FOR CURRENT JOB STEP       @D149DFG 04808000
*            (CPUTIME)                                         @D51IDHA 04809000
*---------------------------------------------------------------------- 04810000
TINFGTCT DS    0H                   START OF CODEBLOCK                  04811000
         USING TINFGTCT,RD          BASE LOADED AT BRANCH TIME @D51IDHA 04812000
         BAL   R9,TINFGPIK          CALL,GET/CHECK PIK ======>>@D14BDFG 04813000
*SGLINK  TINFGPIK,INPUT=(R0,R9,RC),WORK=R0,OUTPUT=R2                    04814000
         B     TINFCNPK             ERROR (ILLEGAL PIK)        @D51RMGL 04815000
         BAL   R9,TINFGPCB          CALL, GET PCB              @D51IDHA 04816000
*SGLINK  TINFGPCB,INPUT=(R2,R9,RC),OUTPUT=R5                            04817000
         B     TINX0C16             ERROR (DYN.PART.NOT ALLOC.)@D51IDGL 04818000
         NOP   0                    IGN.  STAT.PART.NOT ALLOC. @D51IDGL 04819000
         USING PCBADR,R5                                       @D61NDOW 04820000
         L     R7,PCECOMRA          R7: POINT TO PARTITION     @D52VDGL 04821000
         USING COMREG,R7            *   COMREG                 @D52VDGL 04822000
         TM    JCSW1,JASWITCH       RETURN IF (NO JOB ACCOUNT- @D14BDFG 04823000
         BO    TINX0C00             *          ING AT PRESENT) @D51MDGL 04824000
         DROP  R7                   *                          @D52VDGL 04825000
         LM    R0,R1,PCPUTIME       R0,1: TAKE LST CPUTIME UPD.@D14BDFG 04826000
         C     R5,PCBPTR            RETURN IF (REQUEST NOT FOR @D14BDFG 04827000
         BNE   TINC0ST0             *          CURRENT PART.)  @D51MDGL 04828000
         SGSETUP UPDTIME,WR1=R3,WR2=R7,WR3=R9                  @D14BDFR 04829000
         AL    R1,RUNTIME           R1: ADD NEW VALUE TO OLD   @D14BDFG 04830000
         BC    NOCARRY,TINC0ST0     RETURN IF (NO CARRY)       @D51MDGL 04831000
         A     R0,F1                R0: UPDATE HIGH ORDER CNTR @D14BDFG 04832000
         B     TINC0ST0             RETURN VALUE IN R0/R1      @D51MDGL 04833000
         DROP  R5                   DROP PCBADR                @D61NDOW 04834000
         DROP  RD                   BASE REGISTER              @D51IDHA 04835000
*                                   END OF CODEBLOCK                    04836000
*---------------------------------------------------------------------- 04837000
*   GETFLD : GET NUMBER OF PAGE-IN I/O'S  (PAGEIN)             @D369DFG 04838000
*---------------------------------------------------------------------- 04839000
TINFGTPN DS    0H                   START OF CODEBLOCK                  04840000
         USING TINFGTPN,RD          BASE LOADED AT BRANCH TIME @D51IDHA 04841000
         L     R3,APMGMDAT          POINT TO PMR DATA AREA     @D37CDFG 04842000
         USING PMGMDATA,R3                                     @D37CDFG 04843000
         L     R1,PICTR             GET PAGE-IN COUNTER        @D365DFG 04844000
         DROP  R3                                              @D37CDFG 04845000
         B     TINC0ST1             GO TO EXIT ROUTINE         @D51MDGL 04846000
         DROP  RD                   RELEASE BASE REGISTER      @D51IDHA 04847000
*                                   END OF CODEBLOCK                    04848000
*---------------------------------------------------------------------- 04849000
*   GETFLD : GET NUMBER OF PAGE-OUT I/O'S  (PAGEOUT)           @D369DFG 04850000
*---------------------------------------------------------------------- 04851000
TINFGTPO DS    0H                   START OF CODEBLOCK                  04852000
         USING TINFGTPO,RD          BASE LOADED AT BRANCH TIME @D51IDHA 04853000
         L     R3,APMGMDAT          POINT TO PMR DATA AREA     @D37CDFG 04854000
         USING PMGMDATA,R3                                     @D37CDFG 04855000
         L     R1,POCTR             GET PAGE-OUT COUNTER       @D365DFG 04856000
         DROP  R3                                              @D37CDFG 04857000
         B     TINC0ST1             GO TO EXIT ROUTINE         @D51MDGL 04858000
         DROP  RD                   RELEASE BASE REGISTER      @D51IDHA 04859000
*                                   END OF CODEBLOCK                    04860000
*--------------------------------------------------------------@D36BDWK 04861000
*   GETFLD : FLAG FOR OPEN IN SVA  (OPENSVA)                   @D36BDWK 04862000
*--------------------------------------------------------------@D36BDWK 04863000
         USING TCBADR,RA                                       @D61NDOW 04864000
TINFGTPS DS    0H                   START OF CODEBLOCK         @D36BDFG 04865000
         USING TINFGTPS,RD          BASE LOADED AT BRANCH TIME @D51IDHA 04866000
         TM    TCBFLAG2,OPENSVA     OPEN ACTIVE IN SVA         @DA23675 04867000
         BZ    TINX1C00             NO, GO TO EXIT ROUTINE     @RETCODE 04868000
         B     TINANSW1             GO TO EXIT ROUTINE         @RETCODE 04869000
         DROP  RA                   DROP TCBADR                @D61NDOW 04870000
         DROP  RD                   RELEASE BASE REGISTER      @D51IDHA 04871000
*                                   END OF CODEBLOCK                    04872000
*---------------------------------------------------------------------- 04873000
*   GETFLD : GET ADDRESS OF PC EXIT ROUTINE AND SAVE AREA      @D36ZDWK 04874000
*            (PCEXIT) AND (PCEXIT1)                            @D51IDHA 04875000
*---------------------------------------------------------------------- 04876000
         USING TCBADR,RA                                       @D61NDOW 04877000
TINFGPCX DS    0H                   START OF CODEBLOCK                  04878000
TINFGPC1 DS    0H                   ENTRY FOR PCEXIT1 SERVICE  @D61ADGL 04879000
         USING TINFGPCX,RD          BASE LOADED AT BRANCH TIME @D51IDHA 04880000
         BAL   R9,TINFGTID          CALL FOR TID AND TIB ====>>@D36ZDWK 04881000
*SGLINK  TINFGTID,INPUT=(R0,R9,RC),OUTPUT=(R2,R8)                       04882000
         CH    R2,TID               ERROR (REQUEST NO FOR      @D36ZDWK 04883000
         BNE   TINFCNTC             *      CURRENT TASK)       @D51RMGL 04884000
         SLR   R0,R0                  INITIALIZE OUTPUT REG    @D62ADMK 04885000
         ICM   R1,15,TCBPCEX          GET PC EXIT BLOCK ADDRESS@D62ADMK 04886000
         BZ    TINGTPC4                                        @D62ADMK 04887000
         USING EXITBLK,R1                                      @D62ADMK 04888000
         TM    EXITFLG2,EXVSEPC     IS IT FROM STXIT PC?       @D62ADMK 04889000
         BZ    TINGTPC4             NO                         @D62ADMK 04890000
         CLI   TINFSAVF+3,X'99'     IF (CALLER CAME FOR GETFLD @D52VDGL 04891000
         BNE   TINGTPC2             *** FIELD=PCEXIT1 SERVICE) @KD40321 04892000
         XC    TINFSAV2,TINFSAV2      CLEAR FLAG OUTPUT        @D52VDGL 04893000
         TM    EXITFLG,EXITANY        IF (AMODE ANY SPECIFIED) @D52VDGL 04894000
         BNO   TINGTPC2               ***                      @D52VDGL 04895000
         OI    TINFSAV2+3,X'08'         SET FLAG FOR IT        @D52VDGL 04896000
TINGTPC2 DS    0H                     ENDIF                    @D52VDGL 04897000
         LM    R0,R1,EXITADR        EXIT ROUTINE & SAVE AREA   @D62ADMK 04898000
         DROP  R1                                              @D62ADMK 04899000
TINGTPC4 DS    0H                     ENDIF                    @D....MP 04900000
         B     TINC0ST0             GO TO EXIT ROUTINE         @D36ZDWK 04901000
         DROP  RA                   RELEASE TCBADR             @D61NDOW 04902000
         DROP  RD                   RELEASE BASE REGISTER      @D51IDHA 04903000
*                                   END OF CODEBLOCK                    04904000
*---------------------------------------------------------------------- 04905000
*   GETFLD : GET ADDRESS OF IT EXIT ROUTINE AND SAVE AREA      @D36ZDWK 04906000
*            (ITEXIT) AND (ITEXIT1)                            @D51IDHA 04907000
*---------------------------------------------------------------------- 04908000
         USING TCBADR,RA                                       @D61NDOW 04909000
TINFGITX DS    0H                   START OF CODEBLOCK                  04910000
TINFGIT1 DS    0H                   ENTRY FOR ITEXIT1 SERVICE  @D61ADGL 04911000
         USING TINFGITX,RD          BASE LOADED AT BRANCH TIME @D51IDHA 04912000
         BAL   R9,TINFGTID          CALL FOR TID AND TIB ====>>@D36ZDWK 04913000
*SGLINK  TINFGTID,INPUT=(R0,R9,RC),OUTPUT=(R2,R8)                       04914000
         CH    R2,TID               ERROR (REQUEST NOT FOR     @D36ZDWK 04915000
         BNE   TINFCNTC             *      CURRENT TASK)       @D51RMGL 04916000
         SLR   R0,R0                INITIALIZE REGISTER        @D62NDOW 04917000
         SLR   R1,R1                INITIALIZE REGISTER        @D62NDOW 04918000
         L     R9,TCBATCBE          GET ADDR OF TCB EXTENSION  @D62ADOW 04919000
         USING TCBXADR,R9                                      @D62ADOW 04920000
         L     R9,TCBXTAVS          GET ADDR OF IT-EXIT-BLOCK  @D62ADOW 04921000
         USING EXITBLK,R9                                      @D62ADOW 04922000
         CLI   TINFSAVF+3,X'9B'     IF (CALLER CAME FOR GETFLD @D52VDGL 04923000
         BNE   TINGTIT2             *** FIELD=ITEXIT1 SERVICE) @KD40321 04924000
         XC    TINFSAV2,TINFSAV2      CLEAR FLAG OUTPUT        @D52VDGL 04925000
         LTR   R9,R9                EXIT AVAILABLE?            @D62ADOW 04926000
         BZ    TINGTIT8             NOT AVAILABLE              @D62ADOW 04927000
         TM    EXITFLG,EXITANY        IF (AMODE ANY SPECIFIED) @D52VDGL 04928000
         BNO   TINGTIT2               ***                      @D52VDGL 04929000
         OI    TINFSAV2+3,X'08'         SET FLAG FOR IT        @D52VDGL 04930000
TINGTIT2 DS    0H                     ENDIF                    @D52VDGL 04931000
         LTR   R9,R9                EXIT AVAILABLE?            @D62ADOW 04932000
         BZ    TINGTIT8             NOT AVAILABLE              @D62ADOW 04933000
         LM    R0,R1,EXITADR        EXIT ROUTINE +SAVEAREA ADDR@D62ADOW 04934000
TINGTIT8 DS    0H                   ENDIF                      @D62NDOW 04935000
         LTR   R1,R1                IS IT A TECB               @D36ZDWK 04936000
         BNZ   TINC0ST0             NO, GO TO EXIT ROUTINE     @D51MDGL 04937000
         B     TINX0C00             RETURN ALL ZERO VALUES     @D51MDGL 04938000
         DROP  R9                   RELEASE TCBADR             @D62ADOW 04939000
         DROP  RA                   RELEASE TCBADR             @D61NDOW 04940000
         DROP  RD                   RELEASE BASE REGISTER      @D51IDHA 04941000
*                                   END OF CODEBLOCK                    04942000
*---------------------------------------------------------------------- 04943000
*   GETFLD : GET ADDRESS OF AB EXIT ROUTINE AND SAVE AREA      @D14CDFG 04944000
*            (ABEXIT) AND (ABEXIT1)                            @D51IDHA 04945000
*---------------------------------------------------------------------- 04946000
         USING TCBADR,RA                                       @D61NDOW 04947000
TINFGABX DS    0H                   START OF CODEBLOCK                  04948000
TINFGAB1 DS    0H                   ENTRY FOR ABEXIT1 SERVICE  @D61ADGL 04949000
         USING TINFGABX,RD          BASE LOADED AT BRANCH TIME @D51IDHA 04950000
         BAL   R9,TINFGTID          CALL,CHECK TID ==========>>@D14CDFG 04951000
*SGLINK  TINFGTID,INPUT=(R0,R9,RC),OUTPUT=(R2,R8)                       04952000
         CH    R2,TID               ERROR (REQUEST IS NOT      @D14CDFG 04953000
         BNE   TINFCNTC             *      FOR CURRENT TASK)   @D14CDFG 04954000
         SLR   R2,R2                PURGE POSSIBLE BITMAP      @KD40321 04955000
         SLR   R0,R0                INITIALIZE NO AB-EXIT      @D62ADMK 04956000
         ICM   R1,15,TCBABEX        POINT TO ABEXIT CNTL BLK   @D62ADMK 04957000
         BZ    TINGTAE9                                        @D62ADMK 04958000
         USING EXITBLK,R1           PTR TO ABEXIT INFO         @D62ADMK 04959000
TINGTEXX DS    0H                                              @D64ADMK 04960000
         TM    EXITFLG2,EXESTAEX    IF (OPTION EARLY SET)      @D64ADMK 04961000
         BZ    TINGTAE1                                        @D64ADMK 04962000
         L     R1,EXITNEXT          GET NEXT EXIT BLOCK IN CHN @D64ADMK 04963000
         BZ    TINGTAE9                                        @D64ADMK 04964000
         B     TINGTEXX                                        @D64ADMK 04965000
TINGTAE1 DS    0H                                              @D64ADMK 04966000
         TM    EXITFLG2,EARLYAB     IF (OPTION EARLY SET)      @D62ADMK 04967000
         BNO   TINGTAE2             ***                        @D61NDOW 04968000
         LA    R2,X'02'(,R2)          SET FLAG FOR IT          @KD40321 04969000
TINGTAE2 DS    0H                   ENDIF                      @KD40321 04970000
         TM    EXITFLG2,SKIPMSG     IF (OPTION NODUMP SET)     @KD40321 04971000
         BNO   TINGTAE4             ***                        @KD40321 04972000
         LA    R2,X'01'(,R2)          SET FLAG FOR IT          @KD40321 04973000
TINGTAE4 DS    0H                   ENDIF                      @KD40321 04974000
         TM    EXITFLG2,PRTMSG      IF (MSGONLY SPECIF.)       @D61NDOW 04975000
         BNO   TINGTAE6             ***                        @D61NDOW 04976000
         LA    R2,X'04'(,R2)          SET FLAG FOR IT          @D61NDOW 04977000
TINGTAE6 DS    0H                                              @D61RDOW 04978000
         TM    EXITFLG,EXITANY      IF (AMODE ANY SPECIF.)     @D62ADOW 04979000
         BNO   TINGTAE8             ***                        @KD40321 04980000
         LA    R2,X'08'(,R2)          SET FLAG FOR IT          @KD40321 04981000
TINGTAE8 DS    0H                   ENDIF                      @D52VDGL 04982000
         LM    R0,R1,EXITADR        TAKE EXIT+SAVEAREA ADDRESS @D61NDOW 04983000
         DROP  R1                   DROP PTR TO EXIT INFO      @KD40321 04984000
TINGTAE9 DS    0H                                              @D62ADMK 04985000
         CLI   TINFSAVF+3,X'98'     RETURN IF (CALLER DID NOT  @D51ZDGL 04986000
         BNE   TINC0ST0             *  COME FOR ABEXIT1 SERV.) @D51ZDGL 04987000
         ST    R2,TINFSAV2          SUPPLY BIT MAP INFORMATION @KD40321 04988000
         B     TINC0ST0             RETURN                     @KD40321 04989000
         DROP  RA                   RELEASE TCBADR             @D61NDOW 04990000
         DROP  RD                   RELEASE BASE REGISTER      @D51IDHA 04991000
*                                   END OF CODEBLOCK                    04992000
*---------------------------------------------------------------------- 04993000
*   GETFLD : GET ADDRESS OF OC EXIT ROUTINE AND SAVE AREA      @D36ZDWK 04994000
*            (OCEXIT) AND (OCEXIT1)                            @D51IDHA 04995000
*---------------------------------------------------------------------- 04996000
         USING PCBADR,R5                                       @D61NDOW 04997000
TINFGOCX DS    0H                   START OF CODEBLOCK                  04998000
TINFGOC1 DS    0H                   ENTRY OF OCEXIT1 SERVICE   @D61ADGL 04999000
         USING TINFGOCX,RD          BASE LOADED AT BRANCH TIME @D51MDGL 05000000
         LTR   R0,R0                ERROR ((USER SUPPLIED PIK  @D51MDGL 05001000
         BZ    TINGTOC1             *       NEITHER 0) & (NOR  @D51MDGL 05002000
         CH    R0,PIK               *       THAT OF CURRENT    @D51MDGL 05003000
         BNE   TINFCNPC             *       PARTITION))        @D51RMGL 05004000
TINGTOC1 DS    0H                   *                          @D52VDGL 05005000
         SLR   R0,R0                                           @D62ADOW 05006000
         SLR   R1,R1                                           @D62ADOW 05007000
         L     R9,PCBOCPTR                                     @D62ADOW 05008000
         USING EXITBLK,R9                                      @D62ADOW 05009000
         CLI   TINFSAVF+3,X'9A'     IF (CALLER CAME FOR GETFLD @D51ZDGL 05010000
         BNE   TINGTOC6             *** FIELD=OCEXIT1 SERVICE) @D51ZDGL 05011000
         XC    TINFSAV2,TINFSAV2      CLEAR FLAG OUTPUT        @D51ZDGL 05012000
         LTR   R9,R9                OC-EXIT BLOCK AVAILABLE    @D62ADOW 05013000
         BZ    TINGTOC8             NO, --->                   @D62ADOW 05014000
         TM    EXITFLG1,EXOCSAV     MSG WITH DATA              @D62ADOW 05015000
         BNE   TINGTOC2             NO,                        @D62ADOW 05016000
         OI    TINFSAV2+3,X'04'     INDICATE MSG WITH DATA     @D51ZDGL 05017000
TINGTOC2 DS    0H                     ENDIF                    @D51ZDGL 05018000
         TM    EXITFLG,EXITANY        IF (AMODE ANY SPECIF.)   @D62ADOW 05019000
         BNO   TINGTOC6               ***                      @D52VDGL 05020000
         OI    TINFSAV2+3,X'08'         SET FLAG FOR IT        @D52VDGL 05021000
TINGTOC6 DS    0H                   ENDIF                      @D52VDGL 05022000
         LTR   R9,R9                OC-EXIT BLOCK AVAILABLE    @D62ADOW 05023000
         BZ    TINGTOC8             NO, --->                   @D62ADOW 05024000
         LM    R0,R1,EXITADR        R0,1: TAKE ADDR. OF EXIT   @D64ADMK 05025000
*                                   *     ROUTINE AND SAVEAREA @D51MDGL 05026000
TINGTOC8 DS    0H                                              @D62ADOW 05027000
         B     TINC0ST0             RETURN ==================>>@D51MDGL 05028000
         DROP  R5                   DROP PCBADR                @D61NDOW 05029000
         DROP  R9                                              @D62ADOW 05030000
         DROP  RD                   BASE REGISTER              @D51IDHA 05031000
*                                   END OF CODEBLOCK                    05032000
*---------------------------------------------------------------------- 05033000
*   GETFLD : CALCULATE NEW BALANCE  (BALANCE) AND (LOGBAL)     @D51EDGL 05034000
*---------------------------------------------------------------------- 05035000
*                                   START OF CODEBLOCK                  05036000
TINFGTCB DS    0H                   WHEN (BALANCE SERVICE)              05037000
         USING *,RD                   BASE REGISTER            @D51IDGL 05038000
         LA    RF,X'3E'               RF: TAKE BALANCE CODE    @D51EDGL 05039000
*        AMODESW SET,AMODE=24,WR=(R2) SHIFT AMODE              @D52VDGL 05040000
         AMODESW SET,AMODE=24,WR=(R2) SHIFT AMODE              @D52VDGL 05041000
         B     TINGTBL2               LEAVE SELECT             @D51EDGL 05042000
         DROP  RD                     BASE INVAL.F.OTHER SERV. @D51IDGL 05043000
TINFGTCG DS    0H                   WHEN (LOGBAL SERVICE)               05044000
         USING *,RD                   BASE REGISTER            @D52VDGL 05045000
         LA    RF,LOGBAL              RF: TAKE CODE FOR LOGBAL @D51EDGL 05046000
         CLI   TINFSAV0+3,X'00'       ERROR (RECORD NUMBER IS  @D51IDGL 05047000
         BNE   TINFCNR0               *      NOT ZERO)         @D51RMGL 05048000
*        AMODESW SET,AMODE=24,WR=(R2) SHIFT AMODE              @D52VDGL 05049000
         AMODESW SET,AMODE=24,WR=(R2) SHIFT AMODE              @D52VDGL 05050000
         DROP  RD                     BASE INVAL.F.OTHER SERV. @D51IDGL 05051000
TINGTBL2 DS    0H                   ENDSELECT                  @D51EDGL 05052000
         L     RD,CBALADR           RD: ADDR. OF BALANCE ROUT. @D37BDWK 05053000
         BALR  RB,RD                CALL FOR BALANCE ========>>@D37BDWK 05054000
*SGLINK  CALCBAL,INPUT=(R0,R1,RB,RD,RF),OUTPUT=(R0,R1)                  05055000
         B     TINFSTR0             RETURN ==================>>@D37BDWK 05056000
*                                   END OF CODEBLOCK                    05057000
*---------------------------------------------------------------------- 05058000
*   GETFLD : GET ADDRESS OF COMREG (COMREG)                    @D51IDHA 05059000
*        1) WITH LOGID                                         @D51IDHA 05060000
*        2) WITH OPTIONAL PIK                                  @D51IDHA 05061000
*---------------------------------------------------------------------- 05062000
*    1)  GET ADDRESS OF COMREG FOR GIVEN LOGID                          05063000
*--------------------------------------------------------------         05064000
TINFGCPL DS    0H                   START OF CODEBLOCK                  05065000
         USING TINFGCPL,RD          BASE LOADED AT BRANCH TIME @D51IDHA 05066000
         BAL   R9,TINFGLOG          CALL FOR PIK AND PCB ====>>@D51IDHA 05067000
*SGLINK  TINFGLOG,INPUT=(R0,R9,RC),OUTPUT=(R2,R5,RF)                    05068000
         B     TINX1C16             ERROR (PCB NOT FOUND)      @D51IDGL 05069000
         B     TINFGCP1             CONTINUE WITH COMMON PART  @D51IDHA 05070000
*--------------------------------------------------------------         05071000
*    2)  GET ADDRESS OF COMREG FOR OPTIONAL PIK                         05072000
*--------------------------------------------------------------         05073000
TINFGTCP DS    0H                   *                                   05074000
         USING TINFGTCP,RD          BASE LOADED AT BRANCH TIME @D51IDHA 05075000
         BAL   R9,TINFGPIK          CALL, CHECK PIK =========>>@D51IDHA 05076000
*SGLINK  TINFGPIK,INPUT=(R0,R9,RC),WORK=R0,OUTPUT=R2                    05077000
         B     TINFCNPK             ERROR (ILLEGAL PIK)        @D51RMGL 05078000
         BAL   R9,TINFGPCB          POINT TO PCB               @D51IDHA 05079000
*SGLINK  TINFGPCB,INPUT=(R2,R9,RC),OUTPUT=R5                            05080000
         B     TINX1C16             ERROR (DYN.PART.NOT ALLOC.)@D51IDGL 05081000
         NOP   0                    IGN.  STAT.PART.NOT ALLOC. @D51IDGL 05082000
TINFGCP1 BALR  RD,0                 ESTABLISH ADDRESSABILITY   @D51IDHA 05083000
         USING *,RD                 FOR THE COMMON PARTS       @D51IDHA 05084000
         USING PCBADR,R5                                       @D61NDOW 05085000
         L     R1,PCECOMRA          POINT TO PARTITION COMREG  @D51IDHA 05086000
         B     TINC0ST1             GO TO EXIT ROUTINE         @D51IDHA 05087000
         DROP  R5                   DROP PCBADR                @D61NDOW 05088000
         DROP  RD                   RELEASE BASE REGISTER RD   @D51IDHA 05089000
*                                   END OF CODEBLOCK                    05090000
***************************************************************         05091000
*                                                             *         05092000
*  GETFLD : FIELD=PU,LU=...(,PART=...)                        *         05093000
*                                                             *         05094000
*  FUNCTION: GET PUB INDEX ASSIGNED TO A SPECIFIED LOGICAL    *         05095000
*    UNIT OF AN OPTIONALLY SPECIFIED PARTITION.               *         05096000
*  ON ENTRY:                                                  *         05097000
*    R0 = LOGICAL UNIT NUMBER                                 *         05098000
*    R1 = USER SUPPLIED PIK OR ZERO.                          *         05099000
*  ON EXIT TO TINFSTR1:                                       *         05100000
*    R1 = PUBINDEX OR ZERO OR FIRST BYTE OF LUB ENTRY         *         05101000
*    RF = RETURN CODE                                         *         05102000
*         0 IF PUBINDEX IS RETURNED                           *         05103000
*         4 IF LOGICAL UNIT IS ASSIGNED 'IGNORE'              *         05104000
*         8 IF LOGICAL UNIT IS UNASSIGNED                     *         05105000
*        12 IF LOGICAL UNIT IS INVALID                        *         05106000
***************************************************************         05107000
TINFGTPU DS    0H                START OF CODEBLOCK            @D14BDFG 05108000
         USING TINFGTPU,RD       BASE, LOADED AT BRANCH TIME   @D51IDHA 05109000
         LR    R3,R0             R3: SAVE LU PARAMETER         @D14BDFG 05110000
         LR    R0,R1             R0: GET PIK                   @D14BDFG 05111000
         BAL   R9,TINFCPIK       CALL, CHECK PIK ============>>@D14BDFG 05112000
*SGLINK  TINFCPIK,INPUT=(R0,R9,RC),WORK=(R0),OUTPUT=R2                  05113000
         B     TINFCNPK          ERROR (ILLEGAL PIK)           @D51RMGL 05114000
         BAL   R9,TINFGPCB       CALL, GET PCB FOR PIK ======>>@D51IDHA 05115000
*SGLINK  TINFGPCB,INPUT=(R2,R9,RC),OUTPUT=R5                            05116000
         B     TINX1C16          ERROR (DYN.PART.NOT ALLOC.)   @D51IDGL 05117000
         B     TINX1C16          ERROR (STATIC PART. NOT ALL.) @D51IDGL 05118000
         LR    R0,R3             R0: TAKE LU PARAMETER AGAIN   @D14BDFG 05119000
         BAL   R9,TINFGLUB       CALL, GET LUB FOR LU =======>>@D14BDFG 05120000
*SGLINK  TINFGLUB,INPUT=(R0,R5,R9,RC),OUTPUT=(R2,R3,RF)                 05121000
         B     TINGTPU6          IF (DEVICE WAS NORMALLY ASS.) @D51IDGL 05122000
         SLR   R1,R1               IF (HIGH ORDER BYTE OF      @D51ODGL 05123000
         ICM   R1,2,1(R3)          *   PUB INDEX IN LUB IS FF) @D51ODGL 05124000
         BNM   TINGTPU2            ***                         @D51ODGL 05125000
         SLR   R1,R1                 R1: RESET HI BYTE AGAIN   @D51ODGL 05126000
TINGTPU2 DS    0H                  ENDIF                       @D51ODGL 05127000
         IC    R1,0(R3)            R1: INSERT LOW ORDER BYTE   @D51ODGL 05128000
         LR    R3,R1               R3: TAKE PUBINDEX FOR CALL  @D51ODGL 05129000
         BAL   R9,TINFGPBX         CALL, GET PUBX POINTER ===>>@D14BDFG 05130000
*SGLINK  TINFGPBX,INPUT=(R3,R9,RC),OUTPUT=R4                            05131000
         BAL   R9,TINFPCNT         CALL,CHECK PWR CONTR.DEV.=>>@D51IDHA 05132000
*SGLINK  TINFPCNT,INPUT=(R4,R5,R9,RC),OUTPUT=R7                         05133000
         USING DVCUSCNT,R7         PTR TO DEV.USAGE INFORM.    @D51IDHA 05134000
         TM    DVCLUFLG,DVCPWRSP   RETURN IF (DEVICE NOT PWR   @D51IDHA 05135000
         BZ    TINC0ST1            *          SPOOLED)         @D51IDHA 05136000
         LA    RF,20               SET RETURN CODE OF 20 TO    @D51IDHA 05137000
         ST    RF,TINFSAVF         *  INDICATE POWER SPOOLED   @D51IDHA 05138000
         B     TINFSTR1            RETURN PUB-INDEX =========>>@D14BDFG 05139000
         DROP  R7                  *                           @D51IDHA 05140000
TINGTPU6 DS    0H                ELSE LOGUNIT NOT OK.          @D51IDGL 05141000
         ST    RF,TINFSAVF         STORE RETURN CODE           @D51IDGL 05142000
         SLR   R1,R1               R1: RESET TO ZERO           @D51IDGL 05143000
         LA    R2,12               RETURN IF (RCODE MEANT THAT @D51IDGL 05144000
         CR    RF,R2               *          LOGICAL UNIT IS  @D51IDGL 05145000
         BE    TINFSTR1            *          INVALID)  =====>>@D51IDGL 05146000
         IC    R1,0(R3)            R1: TELL IF IGNORE OR UNASS.@D51IDGL 05147000
         B     TINFSTR1            RETURN ===================>>@D14BDFG 05148000
*                                ENDIF                         @D51IDHA 05149000
         DROP  RD                END OF CODEBLOCK              @D51IDHA 05150000
*--------------------------------------------------------------@D149DWK 05151000
*   GETFLD : GET OWNER OF SPECIFIED DEVICE  (OWNER)            @D149DWK 05152000
*--------------------------------------------------------------@D149DWK 05153000
TINFGTOW DS    0H                   START OF CODEBLOCK                  05154000
         USING TINFGTOW,RD          BASE LOADED AT BRANCH TIME @D51IDHA 05155000
         BAL   R9,TINFCKPU          CALL, CHECK PUBINDEX ====>>@D14BDWK 05156000
*SGLINK  TINFCKPU,INPUT=(R0,R9,RC),OUTPUT=R3                            05157000
         B     TINFCNPU             ERROR (INVALID INDEX)      @D51RMGL 05158000
         BAL   R9,TINFGPBX          CALL, GET PUBX POINTER ==>>@D14BDFG 05159000
*SGLINK  TINFGPBX,INPUT=(R3,R9,RC),OUTPUT=R4                            05160000
         BAL   R9,TINFCKSP          CALL, CHECK DEVICE OWNER=>>@DA44069 05161000
*SGLINK  TINFCKSP,INPUT=(R3,R4,R9,RC),WORK=(R0,R2,R5,R7,R8,RB),        *05162000
               OUTPUT=(R1,RF)                                  @D62NDAP 05163000
         ST    RF,TINFSAVF          PASS RETURN CODE           @D14BDFG 05164000
         B     TINFSTR1             PASS R1 AND EXIT           @D14BDWK 05165000
         DROP  RD                   RELEASE BASE REGISTER      @D51IDHA 05166000
*                                   END OF CODEBLOCK                    05167000
*--------------------------------------------------------------@D149DWK 05168000
*   GETFLD : TOTAL USAGE COUNTER FOR SPECIFIED PARTITION       @D149DWK 05169000
*            (USECNT)                                          @D51IDHA 05170000
*--------------------------------------------------------------@D149DWK 05171000
TINFGTUT DS    0H                   START OF CODEBLOCK         @D14BDFG 05172000
         USING TINFGTUT,RD          BASE LOADED AT BRANCH TIME @D51IDHA 05173000
         LA    RA,1                 TOTAL COUNTER              @D14BDFG 05174000
         B     TINFGTP0             CONTINUE AS FOR PHYS.CNTR  @D14BDFG 05175000
         DROP  RD                   RELEASE BASE REGISTER      @D51IDHA 05176000
*                                   END OF CODEBLOCK                    05177000
*--------------------------------------------------------------@D149DWK 05178000
*   GETFLD : PHYS.ADDR. USAGE COUNTER FOR SPECIFIED PARTITION  @D149DWK 05179000
*            (PUSECNT)                                         @D51IDHA 05180000
*--------------------------------------------------------------@D149DWK 05181000
TINFGTUP DS    0H                  START OF CODEBLOCK                   05182000
         SR    RA,RA               PHYS.ADDRESSING COUNTER     @D14BDFG 05183000
TINFGTP0 BALR  RD,0                SET BASE FOR THIS PART      @D51IDHA 05184000
         USING *,RD                                            @D51IDHA 05185000
         BAL   R9,TINFCKPU         CHECK SPEC.PHYSICAL UNIT    @D14BDWK 05186000
*SGLINK  TINFCKPU,INPUT=(R0,R9,RC),OUTPUT=R3                            05187000
         B     TINFCNPU            ERROR (INVALID INDEX)       @D51RMGL 05188000
         LR    R0,R1               GET SPECIFIED PIK           @D14BDFG 05189000
         BAL   R9,TINFCPIK         CHECK SPECIFIED PIK         @D14BDWK 05190000
*SGLINK  TINFCPIK,INPUT=(R0,R9,RC),WORK=(R0),OUTPUT=R2                  05191000
         B     TINFCNPK            ERROR (ILLEGAL PIK)         @D51RMGL 05192000
         BAL   R9,TINFGPCB         POINT TO PCB                @D51IDHA 05193000
*SGLINK  TINFGPCB,INPUT=(R2,R9,RC),OUTPUT=R5                            05194000
         B     TINX1C16            ERROR (DYN.PART.NOT ALLOC.) @D51IDGL 05195000
         NOP   0                   * IGN.STAT.PART.NOT ALLOC.  @D51IDGL 05196000
         BAL   R9,TINFGPBX         POINT TO PUBX               @D14BDFG 05197000
*SGLINK  TINFGPBX,INPUT=(R3,R9,RC),OUTPUT=R4                            05198000
         USING PBXADR,R4                                       @D61NDOW 05199000
         TM    PBXFLAG1,PBXSHR     SHARABLE DEVICE             @D14BDFG 05200000
         BO    TINFGTP3            IF YES, SKIP                @D14BDFG 05201000
         BAL   R9,TINFCKOW         CHECK DEVICE OWNER          @D14BDFG 05202000
*SGLINK  TINFCKOW,INPUT=(R3,R4,R9,RC),WORK=(R0,R2,R7,R8,RB),           *05203000
               OUTPUT=(R1,RF)                                  @D62NDAP 05204000
         L     R2,TINFSAV1         LOAD SPECIFIED PIK AGAIN    @D51IDHA 05205000
         LTR   RF,RF               ANY OWNER                   @D14BDFG 05206000
         BZ    TINX1C00            NO, RETURN ZERO             @D51MDGL 05207000
         CR    R1,R2               REQUEST FOR CURRENT OWNER   @D14BDFG 05208000
         BNE   TINX1C00            NO => RCODE 0, VALUE 0      @D51MDGL 05209000
TINFGTP2 BAL   R9,TINFPOWN         POINT TO PUB OWNERSHIP      @D14BDFG 05210000
*SGLINK  TINFPOWN,INPUT=(R3,R9,RC),OUTPUT=R7                            05211000
         TM    0(R7),TINFVMSK      VTAM OWNED (OLD INTERFACE)  @D14BDFG 05212000
         BZ    TINFGTP3            NO, ACCESS USAGE COUNTERS   @D14BDFG 05213000
         LA    R1,1                ASSUME USAGE COUNTER = 1    @D14BDFG 05214000
         B     TINC0ST1            RETURN                      @D14BDFG 05215000
TINFGTP3 SR    R1,R1               INITIALIZE RETURNED VALUE   @D14BDFG 05216000
         BAL   R9,TINFPCNT         POINT TO USAGE COUNTERS     @D14BDFG 05217000
*SGLINK  TINFPCNT,INPUT=(R4,R5,R9,RC),OUTPUT=R7                         05218000
         USING DVCUSCNT,R7                                     @D14BDFG 05219000
         TM    DVCLUFLG,DVCPWRSP   POWER SPOOLED DEVICE        @D14BDFG 05220000
         BZ    TINFGTP4            NO                          @D14BDFG 05221000
         TM    PBXFLAG,PBXSLOG     SYSLOG DEVICE               @D14BDFG 05222000
         BO    TINC0ST1            YES, RETURN 0 FOR BOTH      @D14BDFG 05223000
         B     TINFGTP5            TOTAL USAGE COUNTER IS 0    @D14BDFG 05224000
TINFGTP4 LH    R1,DVCPUCNT         TOTAL PHYS.USAGE COUNTER    @D14BDFG 05225000
TINFGTP5 LTR   RA,RA               REQUEST FOR TOTAL COUNTER   @D14BDFG 05226000
         BNZ   TINC0ST1            IF YES, STORE R1 AND RETURN @D14BDFG 05227000
         SH    R1,DVCLUCNT         MINUS ASSIGNMENT COUNTER    @D14BDFG 05228000
         B     TINC0ST1            STORE R1 AND RETURN         @D14BDFG 05229000
         DROP  R4                  DROP PBXADR                 @D61NDOW 05230000
         DROP  R7                  DROP DVCUSCNT               @D14BDFG 05231000
         DROP  RD                  RELEASE BASE REGISTER       @D51IDHA 05232000
*                                  END OF CODEBLOCK                     05233000
*--------------------------------------------------------------@D149DWK 05234000
*   GETFLD : RESERVED-FOR-VOLUME-CHANGE INDICATOR STATUS       @D149DWK 05235000
*            (MOUNTFLG)                                        @D51IDHA 05236000
*--------------------------------------------------------------@D149DWK 05237000
TINFGTMF DS    0H                START OF CODEBLOCK                     05238000
         USING TINFGTMF,RD       BASE LOADED AT BRANCH TIME    @D51IDHA 05239000
         BAL   R9,TINFCKPU       CALL, CHECK PUBINDEX =======>>@D14BDWK 05240000
*SGLINK  TINFCKPU,INPUT=(R0,R9,RC),OUTPUT=R3                            05241000
         B     TINFCNPU          ERROR (INVALID INDEX)         @D51RMGL 05242000
         BAL   R9,TINFGPBX       POINT TO PUBX                 @D14BDFG 05243000
*SGLINK  TINFGPBX,INPUT=(R3,R9,RC),OUTPUT=R4                            05244000
         USING PBXADR,R4                                       @D61NDOW 05245000
         TM    PBXFLAG2,PBXMTFLG MOUNT FLAG ON                 @D21LDAP 05246000
         BZ    TINX1C00          IF NOT, RETURN                @RETCODE 05247000
         B     TINANSW1          GO TO EXIT ROUTINE            @RETCODE 05248000
         DROP  R4                  DROP PBXADR                 @D61NDOW 05249000
         DROP  RD                RELEASE BASE REGISTER RD      @D51IDHA 05250000
*                                END OF CODEBLOCK                       05251000
*--------------------------------------------------------------@D61ADGL 05252000
*   GETFLD : SAME AS GETFLD FIELD=PUBXPTR BUT FOR CUU= SPEC.   @D61ADGL 05253000
*            (PUBXPTR)                                         @D61ADGL 05254000
*--------------------------------------------------------------@D61ADGL 05255000
TINFGPX1 DS    0H                   START OF CODEBLOCK         @D61ADGL 05256000
         USING TINFGPX1,RD          SET USING                  @D61ADGL 05257000
         BAL   R9,TINFCUUP          GET POINTER TO PUB         @D61ADGL 05258000
*SGLINK  TINFCUUP,INPUT=(R0,R9,RC),WORK=(R1,R8,RA),OUTPUT=R3            05259000
         B     TINX0C16             ERROR CUU NOT FOUND        @D61ADGL 05260000
         B     TINGTPX1             CONTINUE AS USUAL          @D61ADGL 05261000
*--------------------------------------------------------------@D149DWK 05262000
*   GETFLD : GET POINTER IN PUBEXT TABLE FOR SPECIFIED DEVICE  @D149DWK 05263000
*            (PUBXPTR)                                         @D51IDHA 05264000
*--------------------------------------------------------------@D149DWK 05265000
TINFGTPX DS    0H                   START OF CODEBLOCK                  05266000
         USING TINFGTPX,RD          BASE LOADED AT BRANCH TIME @D51IDHA 05267000
         SLR   R9,R9                CLEAR REGISTER             @DY45481 05268000
         BCTR  R9,0                 MAKEIT FFFFFFFF            @DY45481 05269000
         CLR   R0,R9                USER WANTS ADDRESS         @DY45481 05270000
         BNE   TINGTPX0             NO                         @DY45481 05271000
         L     R1,APBXAREA          ADDRESS OF ADDRESS VECTOR  @DY45481 05272000
         B     TINC0ST1             GO TO EXIT ROUTINE         @DY45481 05273000
TINGTPX0 BAL   R9,TINFCKPU          CALL,CHECK PUBINDEX =====>>@D14BDWK 05274000
*SGLINK  TINFCKPU,INPUT=(R0,R9,RC),OUTPUT=R3                            05275000
         B     TINFCNPU             ERROR (INVALID INDEX)      @D51RMGL 05276000
TINGTPX1 BALR  RD,0                 ENTRY POINT FOR SERV.ABOVE @D61NDGL 05277000
         USING *,RD                 REESTABLISH BASE           @D61NDGL 05278000
         BAL   R9,TINFGPBX          CALL, GET PUBX POINTER ==>>@D14BDWK 05279000
*SGLINK  TINFGPBX,INPUT=(R3,R9,RC),OUTPUT=R4                            05280000
         LR    R1,R4                RETURN PUBX TO CALLER      @D51MDGL 05281000
         B     TINC0ST1             GO TO EXIT ROUTINE         @D51MDGL 05282000
         DROP  RD                   RELEASE BASE REGISTER RD   @D51IDHA 05283000
*                                   END OF CODEBLOCK                    05284000
*--------------------------------------------------------------@D149DWK 05285000
*   GETFLD : GET POINTER TO PCB FOR SPECIFIED PARTITION        @D149DWK 05286000
*            (PCBPTR)                                          @D51IDHA 05287000
*--------------------------------------------------------------@D149DWK 05288000
TINFGTPB DS    0H                   START OF CODEBLOCK                  05289000
         USING TINFGTPB,RD          BASE LOADED AT BRANCH TIME @D51IDHA 05290000
         BAL   R9,TINFCPIK          CHECK SPECIFIED PIK        @D14BDWK 05291000
*SGLINK  TINFCPIK,INPUT=(R0,R9,RC),WORK=(R0),OUTPUT=R2                  05292000
         B     TINFCNPK             ERROR (ILLEGAL PIK)        @D51RMGL 05293000
         BAL   R9,TINFGPCB          POINT TO PCB               @D14BDWK 05294000
*SGLINK  TINFGPCB,INPUT=(R2,R9,RC),OUTPUT=R5                            05295000
         B     TINX1C16             ERROR (DYN.PART.NOT ALLOC.)@D51IDGL 05296000
         NOP   0                    IGN.  STAT.PART.NOT ALLOC. @D51IDGL 05297000
         LR    R1,R5                RETURN PCBPTR TO CALLER    @D51MDGL 05298000
         B     TINC0ST1             GO TO EXIT ROUTINE         @D51MDGL 05299000
         DROP  RD                   RELEASE BASE REGISTER RD   @D51IDHA 05300000
*                                   END OF CODEBLOCK                    05301000
*--------------------------------------------------------------@D149DWK 05302000
*   GETFLD : GET POINTER TO TCB FOR SPECIFIED TASK  (TCBPTR)   @D149DWK 05303000
*--------------------------------------------------------------@D149DWK 05304000
TINFGTTP DS    0H                   START OF CODEBLOCK                  05305000
         USING TINFGTTP,RD          BASE LOADED AT BRANCH TIME @D51IDHA 05306000
         BAL   R9,TINFGTID          CALL, CHECK TID =========>>@D14BDWK 05307000
*SGLINK  TINFGTID,INPUT=(R0,R9,RC),OUTPUT=(R2,R8)                       05308000
         USING TIBADR,R8                                       @D61NDOW 05309000
         L     R1,TIBTCB            GET TCB POINTER            @D14BDWK 05310000
         B     TINC0ST1             GO TO EXIT ROUTINE         @D51MDGL 05311000
         DROP  R8                   DROP TIBADR                @D61NDOW 05312000
         DROP  RD                   RELEASE BASE REGISTER RD   @D51IDHA 05313000
*                                   END OF CODEBLOCK                    05314000
*--------------------------------------------------------------@D149DFG 05315000
*   GETFLD : GET CURRENT VALUE OF MSECS PARAMETER  (MSECS)     @D149DFG 05316000
*--------------------------------------------------------------@D149DFG 05317000
TINFGTMS DS    0H                   START OF CODEBLOCK         @D51IDIS 05318000
         USING TINFGTMS,RD          BASE LOADED AT BRANCH TIME @D51IDHA 05319000
         L     R3,AEXTCPUT          BASE OF EXT.INT.HANDLER    @D51IDIS 05320000
         USING EXTCPUT,R3                                      @D14BDFG 05321000
         L     R1,MSECS             GET CURRENT MSECS VALUE    @D14BDFG 05322000
         DROP  R3                                              @D14BDFG 05323000
         SRL   R1,6                 CONVERT TO MILLISECS       @D14BDFG 05324000
         B     TINC0ST1             RETURN VALUE               @D51MDGL 05325000
         DROP  RD                   RELEASE BASE REGISTER RD   @D51IDHA 05326000
*                                   END OF CODEBLOCK                    05327000
*--------------------------------------------------------------@D219DWK 05328000
*   GETFLD : GET DEVICE PROPERTIES FOR LOGICAL UNIT OR         @D219DWK 05329000
*            GET MODE BYTE FOR LOGICAL UNIT  (MODE, LU)        @D219DRP 05330000
*--------------------------------------------------------------@D219DWK 05331000
TINFGTDL DS    0H                GET DEVICE PROPERTIES                  05332000
TINFGTDM DS    0H                GET MODE PROCESSING                    05333000
         USING TINFGTDL,RD       SUBROUTINE BASE               @D51IDHA 05334000
         LR    R3,R0             PRESERVE LU PARAMETER         @D21CDWK 05335000
         LR    R0,R1             COPY PIK                      @D21CDWK 05336000
         BAL   R9,TINFGPIK       VALIDATE PIK VALUE            @D21CDWK 05337000
*SGLINK  TINFGPIK,INPUT=(R0,R9,RC),WORK=R0,OUTPUT=R2                    05338000
         B     TINFCNPK        0 ERROR (ILLEGAL PIK)           @D51RMGL 05339000
         BAL   R9,TINFGPCB     4 GET PCB ADDRESS               @D51IDHA 05340000
*SGLINK  TINFGPCB,INPUT=(R2,R9,RC),OUTPUT=R5                            05341000
         B     TINX1C16        0 ERROR (DYN.PART.NOT ALLOC.)   @D51IDGL 05342000
         NOP   0               4 ERROR STAT.PART.NOT ALLOCATED @D51IDGL 05343000
         LR    R0,R3           8 RESTORE LU PARAMETER          @D21CDWK 05344000
         BAL   R9,TINFGLUB       GET LUB ADDRESS               @D21CDWK 05345000
*SGLINK  TINFGLUB,INPUT=(R0,R5,R9,RC),OUTPUT=(R2,R3,RF)                 05346000
         B     TINX1C12        0 ERROR, NO VALID LUB ASSIGNMENT@D51IDGL 05347000
         LR    R1,R3           4 SAVE LUB ADDRESS              @D21CDWK 05348000
         SLR   R3,R3             CLEAR REGISTER                @D51ODGL 05349000
         ICM   R3,2,1(R1)        GET PUB INDEX-HIGH            @D51ODGL 05350000
         BNM   TINGTDL2          2-BYTES PUB INDEX             @D51ODGL 05351000
         SLR   R3,R3             SET HIGH INDEX TO ZERO        @D51ODGL 05352000
TINGTDL2 DS    0H                                              @D51ODGL 05353000
         IC    R3,0(R1)          COMPLETE PUB INDEX            @D51ODGL 05354000
         CLI   TINFSAVF+3,TIN#GTDM HAS MODE BEEN REQUESTED     @D21FDRP 05355000
         BE    TINFGTM1          YES,                          @D21FDRP 05356000
         CLI   TINFSAVF+3,TIN#GPDM HAS MODE BEEN REQUESTED     @D63ADMK 05357000
         BE    TINFGTM1          YES,                          @D63ADMK 05358000
         B     TINFGTD1          WE WANT DEVICE PROPERTIES     @D21CDWK 05359000
         DROP  RD                RELEASE BASE REGISTER RD      @D51IDHA 05360000
*--------------------------------------------------------------@D219DWK 05361000
*   GETFLD : GET DEVICE PROPERTIES FOR PHYSICAL UNIT (DEVPROP) @D219DWK 05362000
*--------------------------------------------------------------@D219DWK 05363000
TINFGTDP DS    0H                  START OF CODEBLOCK                   05364000
         BAL   R9,TINFCKPU         VALIDATE PHYSICAL UNIT      @D21CDWK 05365000
*SGLINK  TINFCKPU,INPUT=(R0,R9,RC),OUTPUT=R3                            05366000
         B     TINFCNPU          0 ERROR INVALID PUB-INDEX     @D51RMGL 05367000
TINFGTD1 DS    0H                4 SECOND ENTRY                @D51IDHA 05368000
         BALR  RD,0                SET NEW BASE                @D51IDHA 05369000
         USING *,RD                THIS COMMON PART            @D51IDHA 05370000
         BAL   R9,TINFGPBX         GET PUBX ADDRESS            @D21CDWK 05371000
*SGLINK  TINFGPBX,INPUT=(R3,R9,RC),OUTPUT=R4                            05372000
         USING PBXADR,R4           PBXADR BASE                 @D61NDOW 05373000
         XC    TINFSAV1(4),TINFSAV1 CLEAR RETURN INFORMATION   @D21LDAP 05374000
         MVC   TINFSAV1(1),PBXFLAG GET DEVICE CLASS CODE       @D21LDAP 05375000
         NI    TINFSAV1,TINGTDM1   CLEAR UNUSED BITS           @D21LDGL 05376000
         MVC   TINFSAV1+1(1),PBXFLAG1 GET DEVICE PROPERTIES    @D21LDAP 05377000
         NI    TINFSAV1+1,TINGTDM2 CLEAR UNUSED BITS           @D31KMGL 05378000
         TM    PBXFLAG,PBXTAPE     IS THIS A TAPE DEVICE       @D21LDAP 05379000
         BZ    TINCOD00            NO,  =====================> @D51MDGL 05380490
         NI    TINFSAV1+1,XFF-DVPRDFWD-DVPRDPRE RESET BITS     @DY45988 05381000
         L     R9,PBXVCTE          ADDRESS OF VCTE ENTRY       @D62TAAP 05382000
         LTR   R9,R9               VCT ENTRY ALREADY PRESENT   @D62TAAP 05383000
         BZ    TINFDP20            NO,                         @DAOME05 05384490
         USING VCTEADR,R9          VCT ENTRY BASE              @D62TAAP 05385000
         TM    VCTTFS21,VCTTRDFW   READ FORWARD SUPPORTED      @D62TAAP 05386000
         BZ    TINFDP10            NO,                         @D62TAAP 05387000
         OI    TINFSAV1+1,DVPRDFWD INDICATE READ FORWARD       @D62TAMK 05388000
TINFDP10 TM    VCTTFS21,VCTTRDPR   READ PREVIOUS SUPPORTED     @D62TAAP 05389000
         BZ    TINFDP20            NO,                         @D62TAAP 05390000
         OI    TINFSAV1+1,DVPRDPRE INDICATE READ PREVIOUS      @D62TAMK 05391000
         DROP  R9                  RELEASE VCTEADR BASE        @D62TAAP 05393000
TINFDP20 TM    PBXFLAG2,PBXNOSIO   IS DEVICE INFO VALID        @D21LDAP 05394590
         BZ    TINFDP50            YES,                        @D21LDAP 05395180
         OI    TINFSAV1,DVPINVLD   INDICATE INFORMATION INVALID@D64ADMK 05396000
         TM    SUPFLAG,VMSYS       RUNNING UNDER VM            @DAOME05 05397030
         BZ    TINFDP50            NO, PROCEED NORMAL          @DAOME05 05397060
         CLC   PBXSCH,XFFFF        DEVICE ALREADY ATTACHED     @DAOME05 05397090
         BNE   TINFDP50            YES,                        @DAOME05 05397120
         CLI   PBXPUBCD,TCARTRG    IS THIS A CARTRIDGE DEVICE  @DAOME05 05397150
         BL    TINFDP50            NO,                         @DAOME05 05397180
         CLI   PBXPUBCD,TTPA       IS THIS A 3590/3592         @DAOME05 05397210
         BL    TINFDP30            NO, IT WAS A 3480/3490/3490E@DAOME05 05397240
         BH    TINFDP50            NO, UNSUPPORTED TAPE DEVICE @DAOME05 05397270
.*       SET CAPABILITIES FOR TPA                                       05397300
         OI    TINFSAV1+1,DVPRDPRE+DVPRDFWD ASSUME IT CAN      @DAOME05 05397330
         OI    TINFSAV1+2,PBXT896T+PBXT512T+PBXT384T+PBXT256T  @DAOME05 05397360
         OI    TINFSAV1+2,PBXTCTG  CARTRIDGE DEVICE            @DY46413 05397370
         OI    TINFSAV1+3,PBXTDBUF+PBXTWORM+PBXTWOWR           @DAOME05 05397390
         B     TINFDP40            PROCEED MAIN LINE           @DAOME05 05397420
.*       SET CAPABILITIES FOR 3480/3490/3490E                           05397450
TINFDP30 DS    0H'0'               3480/3490 CAPABILITIES      @DAOME05 05397480
         OI    TINFSAV1+1,DVPRDPRE+DVPRDFWD ASSUME IT CAN      @DAOME05 05397510
         OI    TINFSAV1+2,PBXT2XF  2-XF FORMAT CAPABLE         @DAOME05 05397540
         OI    TINFSAV1+2,PBXTCTG  CARTRIDGE DEVICE            @DY46413 05397550
         OI    TINFSAV1+3,PBXTDBUF BUFFERED DEVICE             @DAOME05 05397570
TINFDP40 OI    PBXFLAG2,PBXNOSIO+PBXNOVOL FORCE CHARSTCS. UPD. @DAOME05 05397600
         B     TINCOD00                 =====================> @DAOME05 05397630
TINFDP50 MVC   TINFSAV1+2(1),PBXTREC GET TAPE RECORDING INFO   @D21LDAP 05397660
         MVC   TINFSAV1+3(1),PBXTDEN GET TAPE DENSITY CAPABIL. @D21LDAP 05398000
         B     TINCOD00                 =====================> @D51MDGL 05399490
         DROP  R4                  RELEASE PBXADR BASE         @D61NDOW 05400000
         DROP  RD                  RELEASE BASE REGISTER RD    @D51IDHA 05401000
TINGTDM1 EQU   PBXDASD+PBXTAPE+PBXUR+PBXMSSDV+PBXFBAVD         @D28DR06 05402000
TINGTDM2 EQU   XFF-PBXSHR                                      @DY45988 05403000
*--------------------------------------------------------------@D219DRP 05404000
*   GETFLD : GET MODE BYTE FOR PHYSICAL UNIT  (MODE, PU)       @D219DRP 05405000
*--------------------------------------------------------------@D219DRP 05406000
TINFGTMD DS    0H                  GET MODE PROCESSING                  05407000
         BAL   R9,TINFCKPU         VALIDATE PU VALUE           @D21FDRP 05408000
*SGLINK  TINFCKPU,INPUT=(R0,R9,RC),OUTPUT=R3                            05409000
         B     TINFCNPU          0 ERROR (INVALID INDEX)       @D51RMGL 05410000
TINFGTM1 DS    0H                4 SECOND ENTRY                @D51IDGL 05411000
         BALR  RD,0                ESTABLISH ADDRESSABILITY    @D51IDHA 05412000
         USING *,RD                FOR THIS PART               @D51IDHA 05413000
         BAL   R9,TINFGPBX         GET PUBX ADDRESS            @D21FDRP 05414000
*SGLINK  TINFGPBX,INPUT=(R3,R9,RC),OUTPUT=R4                            05415000
         USING PBXADR,R4           PBXADR BASE                 @D61NDOW 05416000
         SR    R1,R1               CLEAR REGISTER1             @D21FDRP 05417000
         TM    PBXFLAG,PBXTAPE     IS DEVICE TAPE              @D21FDRP 05418000
         BZ    TINX1C08            NO, INDICATE IT IN REG 15   @D51MDGL 05419000
         BAL   R9,TINFGPUB         GET PUB ADDRESS             @D14BDWK 05420000
*SGLINK  TINFGPUB,INPUT=(R3,R9,RC),OUTPUT=R7                            05421000
         USING PUBADR,R7           SET BASE FOR PUB            @D21FDRP 05422000
         IC    R1,PBXABYT          ASSUME MODE WITH DATA BYTE  @D21FDRP 05423000
         CLI   TINFSAVF+3,TIN#GPDM IS IT FIELD=PMODE           @D63ADMK 05424000
         BE    TINFGTM2            YES                         @D63ADMK 05425000
         CLI   TINFSAVF+3,TIN#GPMD IS IT FIELD=PMODE           @D63ADMK 05426000
         BNE   TINFGTM3            NO                          @D63ADMK 05427000
TINFGTM2 IC    R1,PBXSBYT          ASSUME MODE WITH DATA BYTE  @D63ADMK 05428000
TINFGTM3 DS    0H                                              @D63ADMK 05429000
         N     R1,TINFGTMK         TAKE ONLY MODE PART         @D62ADMK 05430000
         TM    PBXFLAG1,PBXDBCCW   MODE REALY WITH DATA BYTE   @D21FDRP 05431000
         BO    TINC0ST1            YES, RETURN VALUE           @D51MDGL 05432000
         IC    R1,PUBOPTN          NO, GET MODE FROM PUB       @D21FDRP 05433000
         B     TINC0ST1            RETURN VALUE                @D51MDGL 05434000
TINFGTMK DC    F'239'              MODE BYTE MASK              @D62ADMK 05435000
         DROP  R4                  DROP PBXADR                 @D61NDOW 05436000
         DROP  RD                  RELEASE BASE REGISTER RD    @D51IDHA 05437000
         DROP  R7                  FORGET PUBADR               @D21FDRP 05438000
*--------------------------------------------------------------@D31LDMZ 05439000
*   GETFLD : GET PIK FOR A GIVEN SYSLOG ID  (PIK)              @D31LDMZ 05440000
*--------------------------------------------------------------@D31LDMZ 05441000
TINFGTPL DS    0H                  GET PIK FOR SYSLOG ID                05442000
         USING TINFGTPL,RD         ROUTINE BASE POINTER        @D51IDHA 05443000
         BAL   R9,TINFGLOG         VALIDATE SYSLOG-ID          @D31LDMZ 05444000
*SGLINK  TINFGLOG,INPUT=(R0,R9,RC),OUTPUT=(R2,R5,RF)                    05445000
         B     TINX1CRC          0 ERROR (PCB NOT FOUND)       @D51IDGL 05446000
         LR    R1,R2             4 PROVIDE PIK VALUE           @D51IDGL 05447000
         B     TINC0ST1            RETURN                      @D51IDGL 05448000
         DROP  RD                  RELEASE ROUTINE BASE        @D51IDHA 05449000
***************************************************************         05450000
*                                                             *         05451000
*  GETFLD : FIELD=PSTAT,(PART=..|LOGID=..)                    *         05452000
*                                                             *         05453000
*  FUNCTION: GET STATUS OF A PARTITION SPECIFIED BY PART.     *         05454000
*    THE PARTITION CAN BE ALLOCATED, INACTIVE, DYNAMIC OR     *         05455000
*    STOPPED. THE ATTENTION ROUTINE IS NOT ACCEPTED AS A      *         05456000
*    VALID IDENTIFICATION OF A PARTITION.                     *         05457000
*  ON ENTRY TO TINFGPSL:                                      *         05458000
*    R0 = LOGICAL UNIT NUMBER                                 *         05459000
*  ON ENTRY TO TINFGPS0:                                      *         05460000
*    R0 = PIK OF PARTITION OR ZERO                            *         05461000
*    TINFSAV0 = LOGICAL UNIT NUMBER                           *         05462000
***************************************************************         05463000
         USING TINFGPSL,RD         ROUTINE BASE POINTER        @D51IDHA 05464000
TINFGPSL DS    0H                  SYSLOG-ID WAS PASSED        @D51IDHA 05465000
         CLM   R0,3,TINGPSAR       DID USER SPECIFY 'AR'       @D51IDGL 05466000
         BE    TINX1C16            YES, INVALID SYSLOG-ID      @D51IDGL 05467000
         BAL   R9,TINFGLOG         GET PIK/PCB ADDRESSES       @D51IDHA 05468000
*SGLINK  TINFGLOG,INPUT=(R0,R9,RC),OUTPUT=(R2,R5,RF)                    05469000
         B     TINGPS10          0 PCB HAS NOT BEEN FOUND      @D51IDGL 05470000
         B     TINFGPS3          4 INVALID SYSLOG-ID           @D51IDGL 05471000
TINGPS10 DS    0H                8 ***                         @D51IDGL 05472000
         BAL   R9,TINFVLOG         VALIDATE LOGID              @D51IDGL 05473000
*SGLINK  TINFCUUP,INPUT=(R0,R9,RC),WORK=(R0,R7,R8),OUTPUT=RF            05474000
         B     TINX1C16          0 CLASS INVALID               @D51IDGL 05475000
         B     TINGPS20                                        @D51IDGL 05476000
TINFGPS0 DS    0H                  PIK WAS PASSED              @D51IDHA 05477000
         USING TINFGPS0,RD         *                           @D51IDHA 05478000
         BAL   R9,TINFGPIK         VALIDATE PIK VALUE          @D31LDMZ 05479000
*SGLINK  TINFGPIK,INPUT=(R0,R9,RC),WORK=R0,OUTPUT=R2                    05480000
         B     TINFCNPK          0 ILLEGAL PIK                 @D51RMGL 05481000
         BAL   R9,TINFGPCB       4 GET PCB ADDRESS             @D51IDGL 05482000
*SGLINK  TINFGPCB,INPUT=(R2,R9,RC),OUTPUT=R5                            05483000
         B     TINGPS20          0 LEAVE IF (DYN.P.NOT ALLOC.) @D51IDGL 05484000
         NOP   0                 4 * IGN.STAT.PART.NOT ALLOCAT.@D51IDGL 05485000
TINFGPS3 DS    0H                                              @D51IDHA 05486000
         BALR  RD,0                SET ROUTINE BASE            @D51IDHA 05487000
         USING *,RD                ROUTINE BASE POINTER        @D51IDHA 05488000
         USING PCBADR,R5           PCB BASE POINTER            @D61NDOW 05489000
         SLR   R1,R1               CLEAR REGISTER              @D51IDHA 05490000
         L     R2,PCEPIB           GET PIB ADDRESS             @D51IDHA 05491000
         USING PIBADR,R2           PIBADR BASE POINTER         @D51GDAP 05492000
         TM    PCEFLAG,PCEDYNP     DYNAQMIC PARTITION          @D51IDHA 05493000
         BZ    TINFGPS4            NO,                         @D51IDHA 05494000
         LA    R1,TINFPSDY         INDICATE DYNAMIC PARTITION  @D51IDHA 05495000
TINFGPS4 DS    0H                                              @D31LDMZ 05496000
         L     R0,SMVPBEG          PARTITION BEGIN ADDRESS     @D31LDMZ 05497000
         LTR   R0,R0               PARTITION ALREADY ALLOCATED @D31LDMZ 05498000
         BZ    TINFGPS2            NO,                         @D31LDMZ 05499000
         LA    R1,TINFPSAL(R1)     INDICATE ALLOCATED          @D51IDHA 05500000
         CLI   PIBFLG,ZERO         IS PARTITION ACTIVE         @D51IDIS 05501000
         BNE   TINFGPS1            NO,                         @D51IDHA 05502000
         LA    R1,TINFPSAC(R1)     INDICATE PARTITION ACTIVE   @D31LDMZ 05503000
         B     TINFGPS2            JOIN MAIN LINE              @D31LDMZ 05504000
TINFGPS1 CLI   PIBFLG,STOPPED      IS PARTITION STOPPED        @D51IDIS 05505000
         BNE   TINFGPS2            NO,                         @D31LDMZ 05506000
         LA    R1,TINFPSST(R1)     INDICATE PARTITION STOPPED  @D31LDMZ 05507000
TINFGPS2 DS    0H                                                       05508000
         B     TINC0ST1            RETURN WITH R1 ===========>>@D51MDGL 05509000
TINGPS20 DS    0H                  DYNAMIC PARTITION NOT ALLOC.         05510000
         LA    R1,TINFPSDY         INDICATE DYNAMIC PARTITION  @D51IDGL 05511000
         B     TINC0ST1            RETURN WITH STATUS ONLY ==>>@D51IDGL 05512000
*                                ENDSELECT                              05513000
*                                END OF CODEBLOCK                       05514000
TINFPSAL EQU   X'40'             . PARTITION ALLOCATED         @D31QDMZ 05515000
TINFPSAC EQU   X'20'             . PARTITION ACTIVE            @D31QDMZ 05516000
TINFPSDY EQU   X'10'             . PARTITION DYNAMIC           @D51IDHA 05517000
TINFPSST EQU   X'08'             . PARTITION STOPPED           @D31QDMZ 05518000
TINGPSAR DC    C'AR'             . FOR TEST IF ATTENTION ROUT. @D51IDGL 05519000
         DROP  RD                . RELEASE BASE REGISTER RD    @D51IDHA 05520000
         DROP  R2                . RELEASE PIB BASE POINTER    @D51GDAP 05521000
         DROP  R5                . RELEASE PCBADR              @D61NDOW 05522000
*--------------------------------------------------------------@D319DGN 05523000
*   GETFLD : GET IVM CONTROL BLOCK ADDRESS  (IVMCB)            @D319DGN 05524000
*             NOT VALID FOR SYSTEM TASKS                       @D319DGN 05525000
*--------------------------------------------------------------@D319DGN 05526000
TINFGIVM DS    0H                  START OF CODEBLOCK                   05527000
         USING TINFGIVM,RD         BASE LOADED AT BRANCH TIME  @D51IDHA 05528000
         CLC   TID,ARTIDH          SERV. REQU. BY SYSTEM TASK  @D66IDAP 05529000
         BL    TINFCNAU            YES, ILLEGAL SVC            @D51RMGL 05530000
         LTR   R0,R0               ISSUER'S  VMCB REQUESTED    @D31ZDGN 05531000
         BNM   TINFGIV0            NO, OTHER PART IVMCB REQ.   @D31ZDGN 05532000
         SLR   R0,R0               INDICATE ISSUER'S PIK       @D31ZDGN 05533000
         BAL   R9,TINFGPIK         CALL,GET/CHECK PIK =======>>@D31ZDGN 05534000
*SGLINK  TINFGPIK,INPUT=(R0,R9,RC),WORK=R0,OUTPUT=R2                    05535000
         B     TINFCNPK            ERROR (ILLEGAL PIK)         @D51RMGL 05536000
         B     TINFGIV2            PIK VALID                   @D31ZDGN 05537000
TINFGIV0 BAL   R9,TINFCPIK         CHECK REQUESTED PIK         @D31ZDGN 05538000
*SGLINK  TINFCPIK,INPUT=(R0,R9,RC),WORK=(R0),OUTPUT=R2                  05539000
         B     TINFCNPK            ERROR (ILLEGAL PIK)         @D51RMGL 05540000
TINFGIV2 LR    R1,R2               IVM SYSTEM CB REQUEST       @D31ZDGN 05541000
         BAL   R9,TINFGPCB         GET PCB POINTER             @D51IDHA 05542000
*SGLINK  TINFGPCB,INPUT=(R2,R9,RC),OUTPUT=R5                            05543000
         B     TINX0C16            ERROR (DYN.PART.NOT ALLOC.) @D51IDGL 05544000
         NOP   0                   * IGN.STAT.PART.NOT ALLOCAT.@D51IDGL 05545000
         USING PCBADR,R5                                       @D61NDOW 05546000
         LH    R0,PCELID           PROVIDE PARTITION LOGID     @D51IDHA 05547000
         LTR   R1,R1               IVM SYSTEM CB REQUEST       @D31ZDGN 05548000
         BNZ   TINFGIV4            NO                          @D31ZDGN 05549000
         L     R1,IJBIVMCB         GET IVM SYS CB ADDRESS      @D31ZDGN 05550000
         B     TINC0ST0            PROVIDE OUTPUT R0, R1       @D31ZDGN 05551000
TINFGIV4 L     R1,PCBIVMPT         GET IVM PART CB ADDRESS     @D31ZDGN 05552000
         B     TINC0ST0            PROVIDE OUTPUT R0, R1       @D31ZDGN 05553000
         DROP  R5                  DROP PCBADR                 @D61NDOW 05554000
         DROP  RD                  RELEASE BASE REGISTER RD    @D51IDHA 05555000
*                                  END OF CODEBLOCK                     05556000
*---------------------------------------------------------------------- 05557000
*   GETFLD : GET DIBPTR OF LOGICAL UNIT LU  (DIBPTR)           @D51IDHA 05558000
*         1) WITH LOGID                                        @D51IDHA 05559000
*         2) WITH OPTIONAL PIK                                 @D51IDHA 05560000
*        IN BOTH CASES IS THE VALUE FOR LU  ALREADY AVAILABLE  @D51IDHA 05561000
*        IN TINFSAV0, TO WHERE IT WAS SAVED ON ENTRY           @D51IDHA 05562000
*---------------------------------------------------------------------- 05563000
*    1)  GET DIBPTR OF LOGICAL UNIT LU FOR GIVEN LOGID                  05564000
*--------------------------------------------------------------         05565000
TINFGDPL DS    0H                  START OF CODEBLOCK                   05566000
         USING TINFGDPL,RD         BASE LOADED AT BRANCH TIME  @D51IDHA 05567000
         LR    R0,R1               1)  GET LOGID OUT OF REG1   @D51IDHA 05568000
         BAL   R9,TINFGLOG         CHECK LOGID AND GET PIK/PCB @D51IDHA 05569000
*SGLINK  TINFGLOG,INPUT=(R0,R9,RC),OUTPUT=(R2,R5,RF)                    05570000
         B     TINX1CRC            ERROR (PCB NOT FOUND)       @D51IDGL 05571000
         B     TINFGDP0            CONTINUE WITH NORMAL EXEC.  @D51IDHA 05572000
*--------------------------------------------------------------         05573000
*    2)  GET DIBPTR OF LOGICAL UNIT LU FOR OPTIONAL PIK                 05574000
*--------------------------------------------------------------         05575000
TINFGDPP DS    0H                  SECOND ENTRY                         05576000
         USING TINFGDPP,RD         BASE LOADED AT BRANCH TIME  @D51IDHA 05577000
         LR    R0,R1               2)  GET PIK OUT OF REG1     @D51IDHA 05578000
         BAL   R9,TINFGPIK         CHECK PIK                   @D51IDHA 05579000
*SGLINK  TINFGPIK,INPUT=(R0,R9,RC),WORK=R0,OUTPUT=R2                    05580000
         B     TINFCNPK            ERROR (ILLEGAL PIK)         @D51RMGL 05581000
         BAL   R9,TINFGPCB         GET PCB POINTER OF PARTITION@D51IDHA 05582000
*SGLINK  TINFGPCB,INPUT=(R2,R9,RC),OUTPUT=R5                            05583000
         B     TINX1C16          0 ERROR (DYN.PART.NOT ALLOC.) @D51IDGL 05584000
         NOP   0                 4 * IGN.STAT.PART.NOT ALLOC.  @D51IDGL 05585000
TINFGDP0 BALR  RD,0              8 PROVIDE BASE REGISTER       @D51IDHA 05586000
         USING *,RD                FOR COMMON PARTS            @D51IDHA 05587000
         USING PCBADR,R5                                       @D61NDOW 05588000
         CLI   TINFSAV0+2,0        SYSTEM LOGICAL UNIT         @D51IDGL 05589000
         BNE   TINX1C12            NO, INVALID LU PARAMETER    @D51IDGL 05590000
         LH    R3,TINFSAV0+2       GET SYSTEM LOGICAL UNIT     @D51IDGL 05591000
         CLI   TINFSAV0+3,5        IS IT ONE WE HANDLE         @D51IDGL 05592000
         BH    TINX1C12            NO,  PASS RETURN CODE       @D51IDGL 05593000
         CLI   TINFSAV0+3,4        IS IT ONE WE HANDLE         @D51IDGL 05594000
         BE    TINX1C12            NO,  PASS RETURN CODE       @D51IDGL 05595000
*        TM    PCEFLAG,PCEDYNP     PARTITION DYNAMIC           @DDIB    05596000
*        BZ    TINFGDP1            NO, GET DIB POINTER         @DDIB    05597000
*        CLI   TINFSAV0+3,5        LU EQUAL 5 (=SYSLNK)?       @DDIB    05598000
*        BNE   TINX1C08            NO, LU NOT SYSLNK           @DDIB    05599000
TINFGDP1 AR    R3,R3               GET OFFSET FOR TRANSL.TABLE @D51IDGL 05600000
         LH    R1,TRDIBLU(R3)      GET LU OFFSET IN DIBTABLE   @D51IDGL 05601000
         A     R1,PCEADIB          GET DIB POINTER FOR LU      @D51IDGL 05602000
         B     TINC0ST1            GOTO EXIT ROUTINE           @D51IDGL 05603000
*                                  END OF CODEBLOCK                     05604000
TRDIBLU  DS    0F                  LU TRANSLATION TABLE        @D51IDHA 05605000
         DC    H'24'             0 OFFSET FOR SYSRDR ENTRY     @D51IDHA 05606000
         DC    H'24'             1 OFFSET FOR SYSIPT ENTRY     @D51IDHA 05607000
         DC    H'48'             2 OFFSET FOR SYSPCH ENTRY     @D51IDHA 05608000
         DC    H'72'             3 OFFSET FOR SYSLST ENTRY     @D51IDHA 05609000
         DC    H'00'             4 UNUSED                      @D51IDHA 05610000
         DC    H'00'             5 OFFSET FOR SYSLNK ENTRY     @D51IDHA 05611000
         DROP  R5                  DROP PCBADR                 @D61NDOW 05612000
         DROP  RD                   RELEASE BASE REGISTER RD   @D51IDHA 05613000
*---------------------------------------------------------------------- 05614000
*   GETFLD : GET POINTER TO LOGICAL UNIT BLOCK TABLE AND TO    @D51IDHA 05615000
*            FIRST PROGRAMMERS LOGICAL UNIT  (LUBTAB)          @D51IDHA 05616000
*         1) WITH LOGID                                        @D51IDHA 05617000
*         2) WITH OPTIONAL PIK                                 @D51IDHA 05618000
*---------------------------------------------------------------------- 05619000
*     1) GET POINTERS TO LUBTAB AND FIRST PROG. UNIT WITH LOGID         05620000
*--------------------------------------------------------------         05621000
TINFGLTL DS    0H                  START OF CODEBLOCK                   05622000
         USING TINFGLTL,RD         BASE LOADED AT BRANCH TIME  @D51IDHA 05623000
         BAL   R9,TINFGLOG         1) CHECK LOGID, GET PIK/PCB @D51IDHA 05624000
*SGLINK  TINFGLOG,INPUT=(R0,R9,RC),OUTPUT=(R2,R5,RF)                    05625000
         B     TINX0CRC            ERROR (PCB NOT FOUND)       @D51IDGL 05626000
         B     TINFGLT0            CONTINUE WITH NORMAL EXEC.  @D51IDHA 05627000
*--------------------------------------------------------------         05628000
*     2) GET POINTERS TO LUBTAB AND FIRST PROG. UNIT WITH OPT. PIK      05629000
*--------------------------------------------------------------         05630000
TINFGLTP DS    0H                  SECOND ENTRY                @D51IDHA 05631000
         USING TINFGLTP,RD         BASE LOADED AT BRANCH TIME  @D51IDHA 05632000
         BAL   R9,TINFGPIK         2) CHECK PIK                @D51IDHA 05633000
*SGLINK  TINFGPIK,INPUT=(R0,R9,RC),WORK=R0,OUTPUT=R2                    05634000
         B     TINFCNPK            ERROR (ILLEGAL PIK)         @D51RMGL 05635000
         BAL   R9,TINFGPCB         GET PCB POINTER OF PART     @D51IDHA 05636000
*SGLINK  TINFGPCB,INPUT=(R2,R9,RC),OUTPUT=R5                            05637000
         B     TINX0C16            ERROR (DYN.PART.NOT ALLOC.) @D51IDGL 05638000
         NOP   0                   * IGN.STAT.PART.NOT ALLOCAT.@D51IDGL 05639000
         SPACE 1                                                        05640000
TINFGLT0 BALR  RD,0                PROVIDE ADDRESSABILITY      @D51IDHA 05641000
         USING *,RD                FOR THE COMMON PARTS        @D51IDHA 05642000
         USING PCBADR,R5                                       @D61NDOW 05643000
         L     R2,PCEPIB           LOAD PIB POINTER            @D51IDHA 05644000
         USING PIBADR,R2           PIB BASE POINTER            @D51GDAP 05645000
         L     R1,PCEALUB          POINTER TO FIRST SYSTEM LUB @D51IDHA 05646000
         SLR   R0,R0               CLEAR R0 FOR INSERT         @D51IDHA 05647000
         IC    R0,PIBLUBID         GET NUMBER OF SYSTEM LUBS   @D51IDHA 05648000
         AR    R0,R0               GET OFFSET OF PROGR. LUB    @D51IDHA 05649000
         AR    R0,R1               GET PTR TO FIRST PROGR. LUB @D51IDHA 05650000
         B     TINC0ST0            GOTO EXIT ROUTINE           @D51IDGL 05651000
         DROP  RD                  RELEASE BASE REGISTER RD    @D51IDHA 05652000
         DROP  R2                  RELEASE PIB BASE POINTER    @D51GDAP 05653000
         DROP  R5                  DROP PCBADR                 @D61NDOW 05654000
*                                  END OF CODEBLOCK                     05655000
*---------------------------------------------------------------------- 05656000
*   GETFLD : GET POINTER TO LOGICAL UNIT BLOCK FOR A           @D51IDHA 05657000
*            SPECIFIED LOGICAL UNIT  (LUB)                     @D51IDHA 05658000
*         1) WITH LOGID                                        @D51IDHA 05659000
*         2) WITH OPTIONAL PIK                                 @D51IDHA 05660000
*        IN BOTH CASES IS THE VALUE FOR LU  ALREADY AVAILABLE  @D51IDHA 05661000
*        IN TINFSAV1, TO WHERE IT WAS SAVED ON ENTRY           @D51IDHA 05662000
*--------------------------------------------------------------         05663000
*    1)  GET PTR TO LUB FOR LOG.UNIT WITH GIVEN LOGID                   05664000
*--------------------------------------------------------------         05665000
TINFGLBL DS    0H                  START OF CODEBLOCK                   05666000
         USING TINFGLBL,RD         BASE LOADED AT BRANCH TIME  @D51IDHA 05667000
         LR    R0,R1               1)  GET LOGID OUT OF REG1   @D51IDHA 05668000
         BAL   R9,TINFGLOG         CHECK LOGID AND GET PIK/PCB @D51IDHA 05669000
*SGLINK  TINFGLOG,INPUT=(R0,R9,RC),OUTPUT=(R2,R5,RF)                    05670000
         B     TINX1CRC            ERROR (PCB NOT FOUND)       @D51IDGL 05671000
         B     TINFGLB0            CONTINUE WITH NORMAL EXEC.  @D51IDHA 05672000
*--------------------------------------------------------------         05673000
*    2)  GET PTR TO LUB FOR LOG.UNIT WITH OPTIONAL PIK                  05674000
*--------------------------------------------------------------         05675000
TINFGLBP DS    0H                  SECOND ENTRY                         05676000
         USING TINFGLBP,RD         BASE LOADED AT BRANCH TIME  @D51IDHA 05677000
         LR    R0,R1               2)  GET PIK OUT OF REG1     @D51IDHA 05678000
         BAL   R9,TINFGPIK         CHECK PIK                   @D51IDHA 05679000
*SGLINK  TINFGPIK,INPUT=(R0,R9,RC),WORK=R0,OUTPUT=R2                    05680000
         B     TINFCNPK            ERROR (ILLEGAL PIK)         @D51RMGL 05681000
         BAL   R9,TINFGPCB         GET PCB POINTER OF PART     @D51IDHA 05682000
*SGLINK  TINFGPCB,INPUT=(R2,R9,RC),OUTPUT=R5                            05683000
         B     TINX1C16            ERROR (DYN.PART.NOT ALLOC.) @D51IDGL 05684000
         NOP   0                   * IGN.STAT.PART.NOT ALLOC.  @D51IDGL 05685000
         SPACE 1                                                        05686000
TINFGLB0 BALR  RD,0                PROVIDE ADDRESSABILITY      @D51IDHA 05687000
         USING *,RD                FOR THE COMMON PARTS        @D51IDHA 05688000
         USING PCBADR,R5                                       @D61NDOW 05689000
         L     R0,TINFSAV0         LOAD LU OUT OF SAVE AREA    @D51IDHA 05690000
         BAL   R9,TINFGLUB         CHECK LU AND GET LUB PNTR   @D51IDHA 05691000
*SGLINK  TINFGLUB,INPUT=(R0,R5,R9,RC),OUTPUT=(R2,R3,RF)                 05692000
         B     TINX1CRC            FOR ERROR EXIT OF TINFGLUB  @D51IDGL 05693000
         LR    R1,R3               TAKE  LUB POINTER FOR LU    @D51IDGL 05694000
         B     TINC0ST1            RETURN                      @D51IDGL 05695000
         DROP  R5                  DROP PCBADR                 @D61NDOW 05696000
         DROP  RD                  RELEASE BASE REGISTER RD    @D51IDHA 05697000
*                                  END OF CODEBLOCK                     05698000
*---------------------------------------------------------------------- 05699000
*   GETFLD : GET POINTER TO A FREE PROGRAMMER LUB  (FREELUB)   @D51IDHA 05700000
*         1) WITH LOGID                                        @D51IDHA 05701000
*         2) WITH OPTIONAL PIK                                 @D51IDHA 05702000
*---------------------------------------------------------------------- 05703000
*    1)  GET PTR TO FREE PROG.LUB FOR GIVEN LOGID                       05704000
*--------------------------------------------------------------         05705000
TINFGFLL DS    0H                  START OF CODEBLOCK                   05706000
         USING TINFGFLL,RD         BASE LOADED AT BRANCH TIME  @D51IDHA 05707000
         BAL   R9,TINFGLOG         1)  CHECK LOGID GET PIK/PCB @D51IDHA 05708000
*SGLINK  TINFGLOG,INPUT=(R0,R9,RC),OUTPUT=(R2,R5,RF)                    05709000
         B     TINX0CRC            ERROR (PCB NOT FOUND)       @D51IDGL 05710000
         B     TINFGFL0            CONTINUE WITH NORMAL EXEC.  @D51IDHA 05711000
*--------------------------------------------------------------         05712000
*    2)  GET PTR TO FREE PROG.LUB FOR OPTIONAL PIK                      05713000
*--------------------------------------------------------------         05714000
TINFGFLP DS    0H                  SECOND ENTRY                         05715000
         USING TINFGFLP,RD         BASE LOADED AT BRANCH TIME  @D51IDHA 05716000
         BAL   R9,TINFGPIK         2)  GET PIK                 @D51IDHA 05717000
*SGLINK  TINFGPIK,INPUT=(R0,R9,RC),WORK=R0,OUTPUT=R2                    05718000
         B     TINFCNPK            ERROR (ILLEGAL PIK)         @D51RMGL 05719000
         BAL   R9,TINFGPCB         GET PCB POINTER OF PART     @D51IDHA 05720000
*SGLINK  TINFGPCB,INPUT=(R2,R9,RC),OUTPUT=R5                            05721000
         B     TINX0C16            ERROR (DYN.PART.NOT ALLOC.) @D51IDGL 05722000
         NOP   0                   * IGN.STAT.PART NOT ALLOCAT.@D51IDGL 05723000
         SPACE 1                                                        05724000
TINFGFL0 BALR  RD,0                PROVIDE ADDRESSABILITY      @D51IDHA 05725000
         USING *,RD                FOR THE COMMON PARTS        @D51IDHA 05726000
         USING PCBADR,R5                                       @D61NDOW 05727000
         L     R3,PCEPIB           LOAD PIB POINTER            @D51IDGL 05728000
         USING PIBADR,R3           PIB BASE POINTER            @D51GDGL 05729000
         SLR   R1,R1               CLEAR FOR INSERT            @D51IDGL 05730000
         IC    R1,PIBLUBID         NUMBER OF SYSTEM LUBS       @D51IDGL 05731000
         AR    R1,R1               OFFSET FOR PROGRAMMERS LUBS @D51IDGL 05732000
         A     R1,PCEALUB          POINT TO FIRST PROG. LUB    @D51IDGL 05733000
         SLR   R2,R2               CLEAR INDEX COUNTER         @D51IDGL 05734000
         IC    R2,PIBLUBNO         NUMBER OF PROGRAMMERS LUBS  @D51IDGL 05735000
         LTR   R2,R2               RETURN IF NO PROGRAMMER     @D51IDGL 05736000
         BZ    TINX0C04            LUBS AT ALL                 @D51IDGL 05737000
TINFGFL1 CLC   0(2,R1),XFFFF       LU UNASSIGNED?              @D51IDGL 05738000
         BE    TINFGFL2            YES, EXIT LOOP              @D51IDGL 05739000
         LA    R1,2(R1)            POINT TO NEXT LUB ENTRY     @D51IDGL 05740000
         BCT   R2,TINFGFL1         ARE ALL LUBS CHECKED        @D51IDGL 05741000
         B     TINX0C04            RETURN, NO LUB FOUND        @D51IDGL 05742000
TINFGFL2 SLR   R0,R0               CALCULATE CORRECT LUBINDEX  @D51IDGL 05743000
         IC    R0,PIBLUBNO                                     @D51IDGL 05744000
         SR    R0,R2                                           @D51IDGL 05745000
         B     TINC0ST0            AND STORE                   @D51IDGL 05746000
         DROP  R3                  RELEASE PIB BASE            @D51IDGL 05747000
         DROP  R5                  DROP PCBADR                 @D61NDOW 05748000
         DROP  RD                  RELEASE BASE REGISTER RD    @D51IDGL 05749000
*                                  END OF CODEBLOCK                     05750000
*---------------------------------------------------------------------- 05751000
*   GETFLD : GET NUMBER OF STATIC PARTITIONS AND MAXIMUM       @D51IDHA 05752000
*            NUMBER OF PARTITIONS  (NPART)                     @D51IDHA 05753000
*---------------------------------------------------------------------- 05754000
TINFGNPT DS    0H                  START OF CODEBLOCK                   05755000
         USING TINFGNPT,RD         BASE LOADED AT BRANCH TIME  @D51IDHA 05756000
         L     RF,IJBCLIM          BASE FOR TABLE CLIM         @D51IDHA 05757000
         USING CLIM,RF                                         @D51IDHA 05758000
         LH    R0,CMAXPART         MAX.PART. DEF BY GENERATION @D51IDHA 05759000
         ICM   R0,M12,IJBNPART     NO. OF STATIC PARTITIONS    @D51IDHA 05760000
         LH    R1,CSPART           MAX. PART. VIA SYS COMMAND  @D51IDHA 05761000
         ICM   R1,M12,CAPART       MAX. NO. OF PARTITIONS, SPECIFIED   *05762000
                                   BY USER COMMANDS            @D51IDHA 05763000
         DROP  RF                                              @D51IDHA 05764000
         B     TINC0ST0            RETURN CODE 0               @D51IDGL 05765000
         DROP  RD                  RELEASE BASE REGISTER RD    @D51IDHA 05766000
*                                  END OF CODEBLOCK                     05767000
***************************************************************         05768000
*                                                             *         05769000
*  GETFLD : FIELD=PUB,(PART=|LOGID=),LU=..                    *         05770000
*                                                             *         05771000
*  CODEBLOCK TINFGPBL                                         *         05772000
*  FUNCTION: GET POINTER TO PUB TABLE ENTRY FOR A GIVEN       *         05773000
*    LOGICAL UNIT IN A SPECIFIED PARTITION                    *         05774000
*  ON ENTRY TO TINFGPBL:                                      *         05775000
*    R1 = LOGICAL UNIT NUMBER                                 *         05776000
*  ON ENTRY TO TINFGPBP:                                      *         05777000
*    R1 = PIK OF PARTITION OR ZERO                            *         05778000
*    TINFSAV0 = LOGICAL UNIT NUMBER                           *         05779000
***************************************************************         05780000
         USING TIBADR,R8                                       @D61NDOW 05781000
         USING TINFGPBL,RD         BASE, LOADED AT BRANCH TIME @D51IDHA 05782000
TINFGPBL DS    0H                  LOGICAL UNIT PROCESSING     @D51IDHA 05783000
         LR    R0,R1               PROVIDE LOGID               @D51IDHA 05784000
         BAL   R9,TINFGLOG         GET PIK AND PCB ADDRESS     @D51IDHA 05785000
*SGLINK  TINFGLOG,INPUT=(R0,R9,RC),OUTPUT=(R2,R5,RF)                    05786000
         B     TINX0CRC          0 ERROR (PCB NOT FOUND)       @D51IDGL 05787000
         B     TINGPBP0          4 PROCEED MAIN LINE           @D51IDHA 05788000
         USING TINFGPBP,RD         BASE, LOADED AT BRANCH TIME @D51IDGL 05789000
TINFGPBP DS    0H                  PIK PROCESSING ROUTINE      @D51IDHA 05790000
         LR    R0,R1               COPY PIK                    @D51IDHA 05791000
         BAL   R9,TINFGPIK         VALIDATE PIK                @D51IDHA 05792000
*SGLINK  TINFGPIK,INPUT=(R0,R9,RC),WORK=R0,OUTPUT=R2                    05793000
         B     TINFCNPK          0 ERROR (ILLEGAL PIK)         @D51RMGL 05794000
         BAL   R9,TINFGPCB       4 GET PCB ADDRESS             @D51IDHA 05795000
*SGLINK  TINFGPCB,INPUT=(R2,R9,RC),OUTPUT=R5                            05796000
         B     TINX0C16          0 ERROR (DYN.PART.NOT ALLOC.) @D51IDGL 05797000
         NOP   0                 4 STAT.PART.NOT ALLOCATED     @D51IDGL 05798000
TINGPBP0 BALR  RD,0                PROVIDE NEW BASE ADDRESS    @D51IDHA 05799000
         USING *,RD                SUBROUTINE BASE POINTER     @D51IDHA 05800000
         L     R0,TINFSAV0         GET LOGICAL UNIT NUMBER     @D51IDHA 05801000
         BAL   R9,TINFGLUB         VALIDATE AND GET LUB ENTRY  @D51IDHA 05802000
*SGLINK  TINFGLUB,INPUT=(R0,R5,R9,RC),OUTPUT=(R2,R3,RF)                 05803000
         B     TINX0CRC          0 ERROR (LUB NOT OK)          @D51IDGL 05804000
         SLR   R0,R0             4 SET PUB INDEX TO 0000       @D51ODFG 05805000
         ICM   R0,2,1(R3)          PUB-INDEX HIGH PRESENT      @D51ODGL 05806000
         BNM   TINGPBP2            YES,                        @D51ODGL 05807000
         SLR   R0,R0               INDICATE <256 DEVICE SYSTEM @D51ODGL 05808000
TINGPBP2 DS    0H                  >256 DEVICE PROCESSING      @D51ODGL 05809000
         IC    R0,0(R3)            GET PUB-INDEX LOW BYTE      @D51ODGL 05810000
         LR    R1,R0               COPY PUB INDEX              @D51IDHA 05811000
         SLL   R1,3                OFFSET WITHIN PUB TABLE     @D51IDHA 05812000
         AH    R1,YPUBTAB          ADDRESS OF PUB ENTRY        @D51IDHA 05813000
         LR    R3,R0               COPY PUB-INDEX              @D51IDGL 05814000
         BAL   R9,TINFGPBX         CALCULATE PUBX ENTRY ADDRESS@D51IDGL 05815000
*SGLINK  TINFGPBX,INPUT=(R3,R9,RC),OUTPUT=R4                            05816000
         TM    TIBFLAG2,PWRMTASK   IS THIS A POWER REQUEST     @DA40300 05817000
         BO    TINGPBP4            YES,                        @DA40300 05818000
         BAL   R9,TINFPCNT         GET PTR TO USAGE CNT.       @D51IDHA 05819000
*SGLINK  TINFPCNT,INPUT=(R4,R5,R9,RC),OUTPUT=R7                         05820000
         USING DVCUSCNT,R7         USAGE COUNT BASE POINTER    @D51IDHA 05821000
         TM    DVCLUFLG,DVCPWRSP   IS IT A POWER SPOOLED DEVICE@D51IDHA 05822000
         BZ    TINGPBP4            NO,                         @D51IDHA 05823000
         LA    RF,20               SET RCODE 20                @D51IDHA 05824000
         DROP  R7                  RELEASE USAGE COUNT BASE    @D51IDHA 05825000
TINGPBP4 DS    0H                                              @D51IDHA 05826000
         ST    RF,TINFSAVF         SAVE RETURN CODE            @D51IDHA 05827000
         B     TINFSTR0            RETURN ==================>> @D51IDHA 05828000
         DROP  R8                  RELEASE TIB BASE            @D61NDOW 05829000
         DROP  RD                  RELEASE SUBROUTINE BASE     @D51IDHA 05830000
*---------------------------------------------------------------------- 05831000
*   GETFLD : GET POINTER TO THE ADDRESS TABLE FOR THE PCE      @D51IDHA 05832000
*            BLOCKS WITH PARTITION RELATED INFORMATIONS        @D51IDHA 05833000
*            (PCEATAB)                                         @D51IDHA 05834000
*---------------------------------------------------------------------- 05835000
TINFGPCT DS    0H                  START OF CODEBLOCK                   05836000
         USING TINFGPCT,RD         BASE LOADED AT BRANCH TIME  @D51IDHA 05837000
         L     R1,APCEATAB         LOAD ADDRESS OF TABLE       @D51IDHA 05838000
         B     TINC0ST1            AND RETURN                  @D51IDHA 05839000
         DROP  RD                  RELEASE BASE REGISTER RD    @D51IDHA 05840000
*                                  END OF CODEBLOCK                     05841000
*---------------------------------------------------------------------- 05842000
*   GETFLD : GET POINTER TO PARTITION CONTROL BLOCK EXTENSION  @D51IDHA 05843000
*            (PCEPTR)                                          @D51IDHA 05844000
*         1) WITH LOGID                                        @D51IDHA 05845000
*         2) WITH OPTIONAL PIK                                 @D51IDHA 05846000
*---------------------------------------------------------------------- 05847000
*    1)  GET PCE POINTER FOR GIVEN LOGID                                05848000
*--------------------------------------------------------------         05849000
TINFGPCL DS    0H                  START OF CODEBLOCK                   05850000
         USING TINFGPCL,RD         BASE LOADED AT BRANCH TIME  @D51IDHA 05851000
         BAL   R9,TINFGLOG         1)  CHECK LOGID GET PIK/PCB @D51IDHA 05852000
*SGLINK  TINFGLOG,INPUT=(R0,R9,RC),OUTPUT=(R2,R5,RF)                    05853000
         B     TINX1CRC            ERROR (PCB NOT FOUND)       @D51IDGL 05854000
         B     TINFGPC0            CONTINUE WITH NORMAL EXEC.  @D51IDHA 05855000
*--------------------------------------------------------------         05856000
*    2)  GET PCE POINTER FOR OPTIONAL PIK                               05857000
*--------------------------------------------------------------         05858000
TINFGPCP DS    0H                  SECOND ENTRY                         05859000
         USING TINFGPCP,RD         BASE LOADED AT BRANCH TIME  @D51IDHA 05860000
         BAL   R9,TINFGPIK         2)  CHECK/GET PIK           @D51IDHA 05861000
*SGLINK  TINFGPIK,INPUT=(R0,R9,RC),WORK=R0,OUTPUT=R2                    05862000
         B     TINFCNPK            ERROR (ILLEGAL PIK)         @D51RMGL 05863000
TINFGPC0 BALR  RD,0                PROVIDE ADDRESSABILITY      @D51IDHA 05864000
         USING *,RD                FOR THE COMMON PARTS        @D51IDHA 05865000
         SRL   R2,2                COMPUTE OFFSET IN PCETAB    @D51IDHA 05866000
         L     R1,APCEATAB         LOAD BASE ADDRESS OF TABLE  @D51IDHA 05867000
         L     R1,0(R1,R2)         POINT TO PCE OF PARTITION   @D51IDHA 05868000
         B     TINC0ST1            RETURN                      @D51IDHA 05869000
         DROP  RD                  RELEASE BASE REGISTER RD    @D51IDHA 05870000
*                                  END OF CODEBLOCK                     05871000
*---------------------------------------------------------------------- 05872000
*   GETFLD : GET LOGID OF A PARTITION FOR GIVEN PIK  (LOGID)   @D51IDHA 05873000
*---------------------------------------------------------------------- 05874000
TINFGLGD DS    0H                  START OF CODEBLOCK                   05875000
         USING TINFGLGD,RD         BASE LOADED AT BRANCH TIME  @D51IDHA 05876000
         BAL   R9,TINFGPIK         CHECK/GET PIK               @D51IDHA 05877000
*SGLINK  TINFGPIK,INPUT=(R0,R9,RC),WORK=R0,OUTPUT=R2                    05878000
         B     TINFCNPK            ERROR (ILLEGAL PIK)         @D51RMGL 05879000
         BAL   R9,TINFGPCB         GET PCB POINTER OF PART     @D51IDHA 05880000
*SGLINK  TINFGPCB,INPUT=(R2,R9,RC),OUTPUT=R5                            05881000
         B     TINX1C16            ERROR (DYN.PART.NOT ALLOC.) @D51IDGL 05882000
         NOP   0                   * IGN.STAT.PART.NOT ALLOC.  @D51IDGL 05883000
         USING PCBADR,R5                                       @D61NDOW 05884000
         LH    R1,PCELID           LOAD LOGID OF THE PARTITION @D51IDHA 05885000
         B     TINC0ST1            RETURN                      @D51IDHA 05886000
         DROP  R5                  RELEASE PCBADR              @D61NDOW 05887000
         DROP  RD                  RELEASE BASE REGISTER RD    @D51IDHA 05888000
*                                  END OF CODEBLOCK                     05889000
*---------------------------------------------------------------------- 05890000
*   GETFLD : GET POINTER TO PARTITION INFORMATION BLOCK PIB    @D51IDHA 05891000
*            AND PIB2  (PIB)                                   @D51IDHA 05892000
*         1) WITH LOGID                                        @D51IDHA 05893000
*         2) WITH OPTIONAL PIK                                 @D51IDHA 05894000
*---------------------------------------------------------------------- 05895000
*    1)  GET POINTERS TO PIB AND PIB2 FOR GIVEN LOGID                   05896000
*--------------------------------------------------------------         05897000
TINFGPIL DS    0H                  START OF CODEBLOCK                   05898000
         USING TINFGPIL,RD         BASE LOADED AT BRANCH TIME  @D51IDHA 05899000
         BAL   R9,TINFGLOG         1)  CHECK LOGID GET PIK/PCB @D51IDHA 05900000
*SGLINK  TINFGLOG,INPUT=(R0,R9,RC),OUTPUT=(R2,R5,RF)                    05901000
         B     TINX0CRC            ERROR (PCB NOT FOUND)       @D51IDGL 05902000
         B     TINFGPI0            CONTINUE WITH NORMAL EXEC.  @D51IDHA 05903000
*--------------------------------------------------------------         05904000
*    2)  GET POINTERS TO PIB AND PIB2 FOR OPTIONAL PIK                  05905000
*--------------------------------------------------------------         05906000
TINFGPIP DS    0H                  SECOND ENTRY                         05907000
         USING TINFGPIP,RD         BASE LOADED AT BRANCH TIME  @D51IDHA 05908000
         BAL   R9,TINFGPIK         2)  CHECK/GET PIK           @D51IDHA 05909000
*SGLINK  TINFGPIK,INPUT=(R0,R9,RC),WORK=R0,OUTPUT=R2                    05910000
         B     TINFCNPK            ERROR (ILLEGAL PIK)         @D51RMGL 05911000
         BAL   R9,TINFGPCB         GET PCB POINTER OF PART ==>>@D51IDGL 05912000
*SGLINK  TINFGPCB,INPUT=(R2,R9,RC),OUTPUT=R5                            05913000
         B     TINX0C16            ERROR (DYN.PART.NOT ALLOC.) @D51IDGL 05914000
         NOP   0                   * IGN.STAT.PART.NOT ALLOC.  @D51IDGL 05915000
TINFGPI0 BALR  RD,0                PROVIDE ADDRESSABILITY      @D51IDHA 05916000
         USING *,RD                FOR THE COMMON PARTS        @D51IDHA 05917000
         USING PCBADR,R5                                       @D61NDOW 05918000
         L     R0,PCEPIB           LOAD POINTER TO PIB         @D51IDHA 05919000
         L     R1,PCEPIB2          LOAD POINTER TO PIB2        @D51IDHA 05920000
         B     TINC0ST0            RETURN                      @D51IDHA 05921000
         DROP  R5                  RELEASE PCBADR              @D61NDOW 05922000
         DROP  RD                  RELEASE BASE REGISTER RD    @D51IDHA 05923000
*                                  END OF CODEBLOCK                     05924000
*---------------------------------------------------------------------- 05925000
*   GETFLD : GET THE STORAGE KEY OF THE PARTITION (STORKEY)    @D51IDHA 05926000
*         1) WITH LOGID                                        @D51IDHA 05927000
*         2) WITH OPTIONAL PIK                                 @D51IDHA 05928000
*---------------------------------------------------------------------- 05929000
*    1)  GET STORAGEKEY FOR PARTITION WITH GIVEN LOGID                  05930000
*--------------------------------------------------------------         05931000
TINFGSKL DS    0H                  START OF CODEBLOCK                   05932000
         USING TINFGSKL,RD         BASE LOADED AT BRANCH TIME  @D51IDHA 05933000
         BAL   R9,TINFGLOG         1)  CHECK LOGID GET PIK/PCB @D51IDHA 05934000
*SGLINK  TINFGLOG,INPUT=(R0,R9,RC),OUTPUT=(R2,R5,RF)                    05935000
         B     TINX1CRC            ERROR (PCB NOT FOUND)       @D51IDGL 05936000
         B     TINFGSK0            CONTINUE WITH NORMAL EXEC.  @D51IDHA 05937000
*--------------------------------------------------------------         05938000
*    2)  GET STORAGEKEY FOR PARTITION WITH OPTIONAL PIK                 05939000
*--------------------------------------------------------------         05940000
TINFGSKP DS    0H                  SECOND ENTRY                         05941000
         USING TINFGSKP,RD         BASE LOADED AT BRANCH TIME  @D51IDHA 05942000
         BAL   R9,TINFGPIK         2)  CHECK/GET PIK           @D51IDHA 05943000
*SGLINK  TINFGPIK,INPUT=(R0,R9,RC),WORK=R0,OUTPUT=R2                    05944000
         B     TINFCNPK            ERROR (ILLEGAL PIK)         @D51RMGL 05945000
         BAL   R9,TINFGPCB         GET PCB POINTER OF PART     @D51IDHA 05946000
*SGLINK  TINFGPCB,INPUT=(R2,R9,RC),OUTPUT=R5                            05947000
         B     TINX1C16            ERROR (DYN.PART.NOT ALLOC.) @D51IDGL 05948000
         NOP   0                   * IGN.STAT.PART.NOT ALLOC.  @D51IDGL 05949000
TINFGSK0 BALR  RD,0                PROVIDE ADDRESSABILITY      @D51IDHA 05950000
         USING *,RD                FOR THE COMMON PARTS        @D51IDHA 05951000
         USING PCBADR,R5                                       @D61NDOW 05952000
         SLR   R1,R1               CLEAR FOR INSERTION         @D51IDHA 05953000
         IC    R1,PCEKEY           LOAD PARTITION STORAGE KEY  @D51IDHA 05954000
         B     TINC0ST1            RETURN                      @D51IDHA 05955000
         DROP  R5                  RELEASE PCBADR              @D61NDOW 05956000
         DROP  RD                  RELEASE BASE REGISTER RD    @D51IDHA 05957000
*                                  END OF CODEBLOCK                     05958000
*---------------------------------------------------------------------- 05959000
*   GETFLD : GET THE POINTER TO THE PUB TABLE (PUBPTR)         @D51IDHA 05960000
*---------------------------------------------------------------------- 05961000
TINFGPPT DS    0H                  START OF CODEBLOCK                   05962000
         USING TINFGPPT,RD         BASE LOADED AT BRANCH TIME  @D51IDHA 05963000
         LH    R1,YPUBTAB          LOAD POINTER TO PUB TABLE   @D51IDHA 05964000
         B     TINC0ST1            RETURN                      @D51IDHA 05965000
         DROP  RD                  RELEASE BASE REGISTER RD    @D51IDHA 05966000
*                                  END OF CODEBLOCK                     05967000
*---------------------------------------------------------------------- 05968000
*   GETFLD : GET THE PUB2 POINTER (PUB2)                       @D51IDHA 05969000
*---------------------------------------------------------------------- 05970000
.*  -?-  IN THE WORKBOOK A RETURN CODE OF 4 IS DESCRIBED FOR AN INVALID 05971000
.*       PUB INDEX. CORRECT EITHER THE CODE OR THE WORKBOOK.            05972000
.*--------------------------------------------------------------------- 05973000
TINFGPP2 DS    0H                  START OF CODEBLOCK                   05974000
         USING TINFGPP2,RD         BASE LOADED AT BRANCH TIME  @D51IDHA 05975000
         BAL   R9,TINFCKPU         CHECK PUB INDEX ON ENTRY    @D51IDHA 05976000
*SGLINK  TINFCKPU,INPUT=(R0,R9,RC),OUTPUT=R3                            05977000
         B     TINFCNPU            ERROR (INVALID INDEX)       @D51RMGL 05978000
         BAL   R9,TINFGPB2         POINT TO PUBX               @D52VDGL 05979000
*SGLINK  TINFGPB2,INPUT=(R3,R9,RC),OUTPUT=R8                            05980000
         LR    R1,R8               LOAD PUB2 POINTER           @D52VDGL 05981000
         B     TINC0ST1            RETURN                      @D52VDGL 05982000
         DROP  RD                  RELEASE BASE REGISTER RD    @D52VDGL 05983000
*                                  END OF CODEBLOCK                     05984000
*---------------------------------------------------------------------- 05985000
*   GETFLD : GET THE SUBCHANNEL NUMBER FOR A PUBINDEX (SUBCHN) @D51IDHA 05986000
*---------------------------------------------------------------------- 05987000
TINFSCHN DS    0H                  START OF CODEBLOCK                   05988000
         USING TINFSCHN,RD         BASE LOADED AT BRANCH TIME  @D51IDHA 05989000
         BAL   R9,TINFCKPU         CHECK PUB INDEX ON ENTRY    @D51IDHA 05990000
*SGLINK  TINFCKPU,INPUT=(R0,R9,RC),OUTPUT=R3                            05991000
         B     TINFCNPU            ERROR (INVALID INDEX)       @D51RMGL 05992000
         BAL   R9,TINFGPBX         POINT TO PUBX               @PBXOWGL 05993000
*SGLINK  TINFGPBX,INPUT=(R3,R9,RC),OUTPUT=R4                            05994000
         USING PBXADR,R4                                       @D61NDOW 05995000
         SLR   R1,R1               CLEAR OUTPUT REGISTER       @D52VDGL 05996000
         ICM   R1,3,PBXSCH         AND INSERT SUBCHANNEL NUMBER@D52VDGL 05997000
         B     TINC0ST1            RETURN                      @D52VDGL 05998000
         DROP  R4                  RELEASE PBXADR              @D61NDOW 05999000
         DROP  RD                  RELEASE BASE REGISTER RD    @D52VDGL 06000000
*                                  END OF CODEBLOCK                     06001000
*---------------------------------------------------------------------- 06002000
*   GETFLD : GET THE NUMBER OF SYSTEM LUBS AND PROGRAMMER LUBS @D51IDHA 06003000
*            FOR A PARTITION (NUMLUB)                          @D51IDHA 06004000
*         1) WITH LOGID                                        @D51IDHA 06005000
*         2) WITH OPTIONAL PIK                                 @D51IDHA 06006000
*---------------------------------------------------------------------- 06007000
*    1)  GET NUMBER OF LUBS FOR GIVEN LOGID                             06008000
*--------------------------------------------------------------         06009000
TINFGNLL DS    0H                  START OF CODEBLOCK                   06010000
         USING TINFGNLL,RD         BASE LOADED AT BRANCH TIME  @D51IDHA 06011000
         BAL   R9,TINFGLOG         1)  CHECK LOGID GET PIK/PCB @D51IDHA 06012000
*SGLINK  TINFGLOG,INPUT=(R0,R9,RC),OUTPUT=(R2,R5,RF)                    06013000
         B     TINX0CRC            ERROR (PCB NOT FOUND)       @D51IDGL 06014000
         B     TINFGNL0            CONTINUE WITH NORMAL EXEC.  @D51IDHA 06015000
*--------------------------------------------------------------         06016000
*    2)  GET NUMBER OF LUBS FOR OPTIONAL PIK                            06017000
*--------------------------------------------------------------         06018000
TINFGNLP DS    0H                  SECOND ENTRY                @D51IDHA 06019000
         USING TINFGNLP,RD         BASE LOADED AT BRANCH TIME  @D51IDHA 06020000
         BAL   R9,TINFGPIK         2)  CHECK/GET PIK           @D51IDHA 06021000
*SGLINK  TINFGPIK,INPUT=(R0,R9,RC),WORK=R0,OUTPUT=R2                    06022000
         B     TINFCNPK            ERROR (ILLEGAL PIK)         @D51RMGL 06023000
         BAL   R9,TINFGPCB         GET PCB POINTER OF PART     @D51IDHA 06024000
*SGLINK  TINFGPCB,INPUT=(R2,R9,RC),OUTPUT=R5                            06025000
         B     TINX0C16            ERROR (DYN.PART.NOT ALLOC.) @D51IDGL 06026000
         NOP   0                   * IGN.STAT.PART.NOT ALLOC.  @D51IDGL 06027000
TINFGNL0 BALR  RD,0                PROVIDE ADDRESSABILITY      @D51IDHA 06028000
         USING *,RD                FOR THE COMMON PARTS        @D51IDHA 06029000
         USING PCBADR,R5                                       @D61NDOW 06030000
         L     R2,PCEPIB           POINT TO PIB                @D51IDHA 06031000
         USING PIBADR,R2           PIB BASE POINTER            @D51GDAP 06032000
         SLR   R0,R0               CLEAR REGISTERS FOR INSERT  @D51IDHA 06033000
         LR    R1,R0                                           @D51IDHA 06034000
         IC    R0,PIBLUBID         NO. OF SYSTEM LUBS          @D51IDHA 06035000
         IC    R1,PIBLUBNO         NO. OF PROGRAMMER LUBS      @D51IDHA 06036000
         B     TINC0ST0            RETURN                      @D51IDHA 06037000
         DROP  R2                  RELEASE PIB BASE POINTER    @D51GDAP 06038000
         DROP  R5                  RELEASE PCBADR              @D61NDOW 06039000
         DROP  RD                  RELEASE BASE REGISTER RD    @D51IDHA 06040000
*                                  END OF CODEBLOCK                     06041000
*---------------------------------------------------------------------- 06042000
*   GETFLD : GET THE TABLE ADDRESS OF ALL KNOWN DYNAMIC        @D51IDHA 06043000
*            PARTITION CLASSES (CLASSTAB)                      @D51IDHA 06044000
*---------------------------------------------------------------------- 06045000
TINFGCLT DS    0H                  START OF CODEBLOCK                   06046000
         USING TINFGCLT,RD         BASE LOADED AT BRANCH TIME  @D51IDHA 06047000
         TM    SVOLDKEY,KEY0       REQUESTOR AUTHORIZED?       @D51IDHA 06048000
         BNZ   TINFCNAU            NO, CANCEL                  @D51RMGL 06049000
         L     R1,IJBCLTAB         ADDRESS OF THE TABLE        @D51IDHA 06050000
         B     TINC0ST1            RETURN                      @D51IDHA 06051000
         DROP  RD                  RELEASE BASE REGISTER RD    @D51IDHA 06052000
*                                  END OF CODEBLOCK                     06053000
*---------------------------------------------------------------------- 06054000
*   GETFLD : GET THE IPL TIME STAMP (IPLTIME)                  @D51IDHA 06055000
*---------------------------------------------------------------------- 06056000
.* -?- IS THE TIME STAMP VALID FOR EACH SYSTEM? IF NOT, CHECK THE       06057000
.*     PRESENCE OF IT.                                                  06058000
.*--------------------------------------------------------------------- 06059000
TINFGIPL DS    0H                  START OF CODEBLOCK                   06060000
         USING TINFGIPL,RD         BASE LOADED AT BRANCH TIME  @D51IDHA 06061000
         L     R2,IJBUNCBP         POINT TO UNATTCB            @D51IDHA 06062000
         USING UNATTCB,R2          SET ADDRESSABILITY          @D51IDHA 06063000
         LM    R0,R1,UNAITS        LOAD TIME STAMP OF IPL      @D51IDHA 06064000
         B     TINC0ST0            RETURN                      @D51IDHA 06065000
         DROP  R2                  RELEASE UNATTCB BASE POINTER@D51IDHA 06066000
         DROP  RD                  RELEASE BASE REGISTER RD    @D51IDHA 06067000
*                                  END OF CODEBLOCK                     06068000
*---------------------------------------------------------------------- 06069000
*   GETFLD : GET THE ADDRESS OF THE POWER JOB INFORMATION      @D51IDHA 06070000
*            ACTIVE IN THE SPECIFIED PARTITION (POWJOB)        @D51IDHA 06071000
*         1) WITH LOGID                                        @D51IDHA 06072000
*         2) WITH OPTIONAL PIK                                 @D51IDHA 06073000
*---------------------------------------------------------------------- 06074000
*    1)  GET ADDRESS OF POWER JOB INFORMATION FOR GIVEN LOGID           06075000
*--------------------------------------------------------------         06076000
TINFGPJL DS    0H                  START OF CODEBLOCK                   06077000
         USING TINFGPJL,RD         BASE LOADED AT BRANCH TIME  @D51IDHA 06078000
         BAL   R9,TINFGLOG         1)  CHECK LOGID GET PIK/PCB @D51IDHA 06079000
*SGLINK  TINFGLOG,INPUT=(R0,R9,RC),OUTPUT=(R2,R5,RF)                    06080000
         B     TINX1CRC            ERROR (PCB NOT FOUND)       @D51IDGL 06081000
         B     TINFGPJ0            CONTINUE WITH NORMAL EXEC.  @D51IDHA 06082000
*--------------------------------------------------------------         06083000
*    2)  GET ADDRESS OF POWER JOB INFORMATION FOR OPTIONAL PIK          06084000
*--------------------------------------------------------------         06085000
TINFGPJP DS    0H                  SECOND ENTRY                         06086000
         USING TINFGPJP,RD         BASE LOADED AT BRANCH TIME  @D51IDHA 06087000
         BAL   R9,TINFGPIK         2)  CHECK/GET PIK           @D51IDHA 06088000
*SGLINK  TINFGPIK,INPUT=(R0,R9,RC),WORK=R0,OUTPUT=R2                    06089000
         B     TINFCNPK            ERROR (ILLEGAL PIK)         @D51RMGL 06090000
         BAL   R9,TINFGPCB         GET PCB POINTER OF PART     @D51IDHA 06091000
*SGLINK  TINFGPCB,INPUT=(R2,R9,RC),OUTPUT=R5                            06092000
         B     TINX1C16            ERROR (DYN.PART.NOT ALLOC.) @D51IDGL 06093000
         NOP   0                   * IGN.STAT.PART.NOT ALLOC.  @D51IDGL 06094000
TINFGPJ0 BALR  RD,0                PROVIDE ADDRESSABILITY      @D51IDHA 06095000
         USING *,RD                FOR THE COMMON PARTS        @D51IDHA 06096000
         USING PCBADR,R5                                       @D61NDOW 06097000
         L     R1,PCEPOWJB         ADDRESS OF POWER JOB INFOR. @D51IDHA 06098000
         B     TINC0ST1            RETURN                      @D51IDHA 06099000
         DROP  R5                  RELEASE PCBADR              @D61NDOW 06100000
         DROP  RD                  RELEASE BASE REGISTER RD    @D51IDHA 06101000
*                                  END OF CODEBLOCK                     06102000
*---------------------------------------------------------------------- 06103000
*   GETFLD : GET ADDRESS OF POWER SYSTEM INFORMATION (POWSYS)  @D51IDHA 06104000
*---------------------------------------------------------------------- 06105000
TINFGPSY DS    0H                  START OF CODEBLOCK                   06106000
         USING TINFGPSY,RD          BASE LOADED AT BRANCH TIME @D51IDHA 06107000
         L     R1,IJBPSYSI         GET POINTER TO POWER SYSTEM INFOR-  *06108000
                                   MATION TABLE IN SYSCOM      @D51IDHA 06109000
         SLR   R0,R0               CLEAR REGISTER              @D51IDIS 06110000
         IC    R0,8(R1)            GET VSE/POWER SYSID         @D51IDIS 06111000
         B     TINC0ST0            RETURN                      @D51IDIS 06112000
         DROP  RD                  RELEASE BASE REGISTER RD    @D51IDHA 06113000
*                                  END OF CODEBLOCK                     06114000
***************************************************************@D51ADGL 06115000
*                                                             *@D51ADGL 06116000
*  GETFLD : FIELD=ALET,PART=...                               *@D51ADGL 06117000
*                                                             *@D51ADGL 06118000
*  FUNCTION: PROVIDE AN ACCESS LIST ENTRY TOKEN (ALET) FOR    *@D51ADGL 06119000
*    AUTHORIZED CALLER.                                       *@D51ADGL 06120000
*  ON ENTRY: SEE REGISTER CONVENTION ABOVE                    *@D51ADGL 06121000
*  ON EXIT TO TINFSTR1:                                       *@D51ADGL 06122000
*    R1 = VALUE OF ALET, IF RF = 0. OTHERWISE ERROR OCCURED.  *@D51ADGL 06123000
*    RF = RETURN CODE. IF NOT ZERO, R1 IS INVALID.            *@D51ADGL 06124000
*  ON EXIT TO TINFCNAU: USER HAD NOT BEEN AUTHORIZED.         *@D51ADGL 06125000
***************************************************************@D51ADGL 06126000
TINFGTAL DS    0H                ACCESS LIST TOKEN PROCESSING  @D51ADGL 06127000
         USING TINFGTAL,RD       ROUTINE BASE POINTER          @D51ADGL 06128000
         BAL   R9,TINFGENT       SAVE CALLERS STATUS           @D52GDOW 06129000
*SGLINK  TINFGENT,INPUT=(R9,RC),WORK=(R2,R3,R4,R5,R7,RE,RF),           *06130000
               OUTPUT=(R0,R1,R6,R8,RA,RB)                      @D62NDAP 06131000
         L     R5,PCBPTR         ADDRESS OF PCB                @D52GDOW 06132000
         USING PCBADR,R5         PCBADR BASE POINTER           @D61NDOW 06133000
         L     RA,TCBPTR         ADDRESS OF TCB                @D52GDOW 06134000
         USING TCBADR,RA         TCBADR BASE POINTER           @D61NDOW 06135000
         TM    VTAMFLG,VTURX     VTAM EXIT ACTIVE              @D52GDOW 06136000
         BNO   TINFGTA0          NO, JOIN MAIN LINE            @KX40507 06137000
         TM    PCBSSFLG,VTAM     IS THIS VTAM ITSELF           @KX40507 06138000
         BO    TINFGTA1          YES                           @KX40507 06139000
         LA    RE,2              ASSUME VTAM PRIVATE PASN-AL   @D52GDOW 06140000
         B     TINFGTA2          *                             @KX40507 06141000
TINFGTA0 SLR   RE,RE             ADD TO OWN DUAL               @KX40507 06142000
         TM    PCBSSFLG,OCCF+CICS+PWR SPECIAL SUBSYSTEMS       @D52GDOW 06143000
         BNZ   TINFGTA2          YES,                          @D52GDOW 06144000
         TM    TCBFLAG3,VSPT     IS IT VSPT (PERFORMANCE TOOL) @D52GDOW 06145000
         BO    TINFGTA2          YES,                          @D52GDOW 06146000
         TM    TCBFLAG3,TCBVEND  IS IT A VENDOR CALL           @D52GDOW 06147000
         BO    TINFGTA2          YES,                          @D52GDOW 06148000
TINFGTA1 LA    RE,1              INDICATE ADD TO PRIVATE PASN  @KX40507 06149000
         TM    PCBSSFLG,VTAM     IS IT A VTAM REQUEST          @D52GDOW 06150000
         BNO   TINFCNAU          NO, NOT AUTHORIZED =========> @D51RMGL 06151000
TINFGTA2 DS    0H                *                             @D51ADGL 06152000
         BAL   R9,TINFGPIK       VALIDATE THE PIK              @D51ADGL 06153000
*SGLINK  TINFGPIK,INPUT=(R0,R9,RC),WORK=R0,OUTPUT=R2                    06154000
         B     TINFCNPK       0  ERR (ILLEGAL PIK)  =========> @D51RMGL 06155000
         BAL   R9,TINFGPCB    4  GET PCB ADDRESS               @D51ADGL 06156000
*SGLINK  TINFGPCB,INPUT=(R2,R9,RC),OUTPUT=R5                            06157000
         B     TINX1C16       0  ERR (NO DYN PART)  =========> @D51IDGL 06158000
         B     TINX1C16       4  ERR (NO STAT PART) =========> @D51IDGL 06159000
         L     R9,ATNFGTA3    8  GET CONTINUATION ADDR         @DY46182 06160000
         BSM   0,R9              GET INTO 31-BIT MODE          @DY46182 06161000
ATNFGTA3 DC    A(X'80000000'+TINFGTA3) 31-BIT ADDRESS          @DY46182 06162000
TINFGTA3 DS    0H                EXECUTE IN 31-BIT MODE        @DY46182 06163000
         C     RE,F2             VTAM PRIV. PASN-AL            @D64XDOW 06164000
         BE    TINFGTA7          YES,                          @D64XDOW 06165000
         L     R7,TCBATCBE       ADDRESS OF TCB EXTENTION      @D64XDOW 06166000
         USING TCBXADR,R7        TCBXADR BASE POINTER          @D64XDOW 06167000
         L     R2,TCBX1CRF       GET PTR TO ENTRY DESCRIPTOR   @DY46182 06168000
.*                               OF CURRENT LINKAGE STACK ENTRY         06169000
.* GETFLD ALET SETS THE EAX TO 0001 (SYSTEM EAX).                       06169100
.* IN CASE ESTAEX IS DEFINED, THE CURRENT EAX IS SAVED.                 06169200
.* IF AN ABEND CONDITION OCCURS AND THE ESTAEX RECOVERS, THE SAVED      06169300
.* EAX IS RESTORED.                                                     06169400
.* IF GETFLD ALET IS DONE AFTER THE ESTAEX IS DEFINED, THE EAX OF 0001  06169500
.* IS OVERWRITTEN BY THE SAVED EAX.                                     06169600
TINFGTA4 DS    0H                                              @DY46182 06170000
         USING LSTKEDSC,R2       LINKAGE STACK BASE POINTER    @DY46182 06171000
         CLI   LSTKET,LSTKPENT   IS THIS A PC-TYPE STATE ENTRY @DY46182 06172000
         BE    TINFCEAX          YES, CANCEL                   @DY46182 06173000
         CLI   LSTKET,LSTKHENT   IS THIS A HEADER ENTRY        @DY46182 06174000
         BE    TINFGTA6          YES, PROCEED                  @DY46182 06175000
         LA    R3,L'LSTKTBDY+L'LSTKEDS3 LENGTH OF TAILOR ENTRY @DY46182 06176000
         CLI   LSTKET,LSTKTENT   IS THIS A TRAILOR ENTRY       @DY46182 06177000
         BE    TINFGTA5          YES, PROCEED                  @DY46182 06178000
         DROP  R2                RELEASE LINKAGE STACK BASE    @DY46182 06179000
         LA    R3,LSTKEDS3-LSTKSTAT+L'LSTKEDS3 BRANCH ENTRY LEN@DY46182 06180000
TINFGTA5 DS    0H                POINT TO PREVIOUS ENTRY       @DY46182 06181000
         SR    R2,R3             SUBTRACT ENTRY LENGTH         @DY46182 06182000
         B     TINFGTA4          FIND A HEADER ENTRY           @DY46182 06183000
TINFGTA6 DS    0H                HEADER ENTRY PROCESSING       @DY46182 06184000
         LA    R3,L'LSTKTHDY     LENGTH OF HEADER              @DY46182 06185000
         SR    R2,R3             POINT TO BEGIN OF HEADER      @DY46182 06186000
         USING LSTKHDR,R2        STACK-HEADER BASE POINTER     @DY46182 06187000
         ICM   R2,15,LSTKBSEA    GET PREVIOUS ENTRY DESCRIPTO  @DY46182 06188000
         BM    TINFGTA4          WE GOT ONE                    @DY46182 06189000
         DROP  R2                RELEASE STACK-HEADER BASE     @DY46182 06190000
         MVC   TCBX1CR8(2),CSYSEAX SETUP EAX IN SAVE AREA      @D64XDOW 06191000
         LCTL  CR8,CR8,TCBX1CR8  ALSO THE CONTROL REGISTER     @DY46182 06192000
         OI    TCBXFLG1,TCBXGETF REMEMBER THIS CHANGE          @DY46192 06193000
         DROP  R7                RELEASE TCBXADR BASE POINTER  @D52GDOW 06194000
TINFGTA7 DS    0H                                              @D64XDOW 06195000
         L     R8,ASVASVDL       ADDR OF SVA LOAD LIST         @D52GDOW 06196000
         USING SVASVDL,R8        SVA-LOAD-LIST BASE POINTER    @D52GDOW 06197000
         L     R8,AALESERV       ADDR OF ALESERV ROUTINE       @D52GDOW 06198000
         DROP  R8                ALESERV BASE POINTER          @D52GDOW 06199000
         SLR   R4,R4             INDIACTE CALLED BY SGTINF     @D61NDOW 06200000
*        AMODESW CALL,REGS=(R8,R8) GO TO ALESERV ROUTINE       @D52GDOW 06201000
         AMODESW CALL,REGS=(R8,R8) GO TO ALESERV ROUTINE       @D52GDOW 06202000
*SGLINK  ALESERV INPUT=(R4,R5,R8,RE),OUTPUT=(R1,RF),WORK=(R0,R2,R3,R4, X06203000
               R5,R6,R7,R9,RA,RB,RC,RE)                                 06204000
         DROP  R5                DROP PCBADR                   @D28ADAP 06205000
         DROP  RA                RELEASE TCBADR BASE POINTER   @D28ADAP 06206000
         DROP  RD                RELEASE SUBROUTINE BASE       @D52GDOW 06207000
         USING *,R8              USE R8 AS TEMP BASE           @D52GDOW 06208000
         L     RD,TINFGBAS       RELOAD SUBROUTINE PERM BASE   @D52GDOW 06209000
         DROP  R8                RELEASE TEM BASE              @D52GDOW 06210000
         USING TINFGTAL,RD       SUBROUTINE PERM BASE          @D52GDOW 06211000
TINFGTA9 DS    0H                EXIT PROCESSING               @D51ADGL 06212000
         L     RA,TCBPTR         GET TCB POINTER               @D52GDOW 06213000
         USING TCBADR,RA         TCB BASE POINTER              @D28ADAP 06214000
         L     RB,TCBSAVE        GET SAVEAREA ADDR             @D52GDOW 06215000
         USING SVEARA,RB                                       @D52GDOW 06216000
         ST    RF,SVER0F         RETURN CODE TO USER REG       @D52GDOW 06217000
         ST    R1,SVER01         ALET/DS-RET-CODE TO USER REG  @D52GDOW 06218000
         DROP  RB                RELEASE TCBSAVE BASE POINTER  @D52GDOW 06219000
         L     R6,DISPAD         GET DISPATCHER ADDR           @D52GDOW 06220000
         BR    R6                DISP =====================>>> @D52GDOW 06221000
         DROP  RA                DROP TCBADR                   @D61NDOW 06222000
         DROP  RD                RELEASE SUBROUTINE BASE       @D51ADGL 06223000
TINFGBAS DC    A(TINFGTAL)       SUBROUTINE BASE ADDRESS       @D52GDOW 06224000
         SPACE 2                                                        06225000
*---------------------------------------------------------------------- 06226000
*   GETFLD : GET DLI CONTROL BLOCK ADDRESS                     @DY45299 06227000
*---------------------------------------------------------------------- 06228000
         USING TINFGDLI,RD          TINFGDLI BASE POINTER      @DY45299 06229000
         USING TCBADR,RA            TCB BASE ADDRESS           @DY45299 06230000
TINFGDLI DS    0H                   GET DLI CNTL.BLK. ADDRESS  @DY45299 06231000
         L     RE,TCBATCBE          ADDRESS OF TCB EXTENTION   @DY45299 06232000
         USING TCBXADR,RE           TCB EXTENTION BASE         @DY45299 06233000
         L     R1,TCBXDLIP          GET ADDRESS IF PRESENT     @DY45299 06234000
         ST    R1,TINFSAV1          SAVE ADDRESS IN SAVE AREA  @DY45385 06235000
         B     TINCOD00             RETURN                     @DY45299 06236000
         DROP  RE                   RELEASE TCBX BASE          @DY45299 06237000
         DROP  RA                   RELEASE TCBADR BASE        @DY45299 06238000
         DROP  RD                   RELEASE TINFGDLI BASE      @DY45299 06239000
         AIF   (NOT &VSE250).N250020                           @D27XDAP 06240000
         SPACE 2                                               @D25IDAP 06241000
*---------------------------------------------------------------------- 06242000
*   GETFLD : RETRIEVE ADDRESS IP-ANCHOR ADDRESS                @D25IDAP 06243000
*---------------------------------------------------------------------- 06244000
         USING TINFGIPA,RD          TINFGIPA BASE POINTER      @D25IDAP 06245000
         USING TCBADR,RA            TCB BASE ADDRESS           @D25IDAP 06246000
TINFGIPA DS    0H                   GET IP-ANCHOR              @D25IDAP 06247000
         L     RE,TCBATCBE          ADDRESS OF TCB EXTENTION   @D25IDAP 06248000
         USING TCBXADR,RE           TCB EXTENTION BASE         @D25IDAP 06249000
         L     R1,TCBXIPAN          GET IP-ANCHOR TABLE ADDR.  @D25IDAP 06250000
         B     TINC0ST1             RETURN                     @D25IDAP 06251000
         DROP  RE                   RELEASE TCBX BASE          @D25IDAP 06252000
         DROP  RA                   DROP TCBADR                @D25IDAP 06253000
         DROP  RD                   RELEASE TINFGIPA BASE      @D25IDAP 06254000
.N250020 ANOP                                                  @D25IDAP 06255000
*---------------------------------------------------------------------- 06256000
*   GETFLD : RETRIEVE EXITAB-PARMLIST                          @DY45385 06257000
*---------------------------------------------------------------------- 06258000
         USING TINFGEXA,RD          TINFGEXA BASE POINTER      @DY45385 06259000
         USING TCBADR,RA            TCB BASE ADDRESS           @DY45385 06260000
TINFGEXA DS    0H                   GET EXIT-AB PARMLIST       @DY45385 06261000
         LA    RE,EXABMSCB-EXITBLK  GET MSCB OFFSET IN EXITBLK @DY45385 06262000
         LNR   RE,RE                PROVIDE FOR SUBTRACTION    @DY45385 06263000
         A     RE,TINFSAV1          ADD MVS-SCB ADDRESS        @DY45385 06264000
         USING EXITBLK,RE           EXIT-BLOCK BASE POINTER    @DY45385 06265000
         ICM   R5,15,TCBABEX        GET EXIT BLOCK ADDRESS     @DY45385 06266000
         BZ    TINFCNFC             ERR21====================> @DY45385 06267000
TINFGE10 CLR   R5,RE                IS THIS A VALID EXITBLK    @DY45385 06268000
         BE    TINFGE20             YES,                       @DY45385 06269000
         ICM   R5,15,EXITNEXT-EXITBLK(R5) ADVANCE EXITBLK PNTR.@DY45385 06270000
         BNZ   TINFGE10             CHECK IF IT IS RIGHT BLK   @DY45385 06271000
         B     TINFCNFC             ERR21====================> @DY45385 06272000
TINFGE20 L     R0,EXABTOKN          GET TOKEN INTO R0          @DY45385 06273000
         L     R1,EXABPRMS          GET PARAMETER              @DY45385 06274000
         LAM   R1,R1,EXABPRMS+4     LOAD ACCESS REGISTER       @DY45385 06275000
         B     TINC0ST0             RC=0 ST0RE R0+R1           @DY45385 06276000
         DROP  RE                   RELEASE EXITBLK BASE       @DY45385 06277000
         DROP  RA                   DROP TCBADR                @DY45385 06278000
         DROP  RD                   RELEASE TINFGEXA BASE      @DY45385 06279000
***************************************************************@D61ADGL 06280000
*                                                             *@D61ADGL 06281000
*  MODFLD : FIELD=MNTRSTMP    (MOUNT RESERVE TEMPORARY)       *@D61ADGL 06282000
*  FUNCTION: GIVE A TEMPORARY MOUNT SPECIFICATION FOR THE     *@D61ADGL 06283000
*            DEVICE SPECIFIED IN THE CUU= PARAMETER.          *@D61ADGL 06284000
*  ON ENTRY: R0 CONTAINS CUU                                  *@D61ADGL 06285000
*                                                             *@D61ADGL 06286000
*  MODFLD : FIELD=MNTRSPRM   (MOUNT RESERVE PERMANENT)        *@D61ADGL 06287000
*  FUNCTION: GIVE A PERMANENT MOUNT SPECIFICATION FOR THE     *@D61ADGL 06288000
*            DEVICE SPECIFIED IN THE CUU= PARAMETER.          *@D61ADGL 06289000
*  ON ENTRY: R0 CONTAINS CUU                                  *@D61ADGL 06290000
*                                                             *@D61ADGL 06291000
*  MODFLD : FIELD=MNTRLTMP    (MOUNT RELEASE TEMPORARY)       *@D61ADGL 06292000
*  FUNCTION: RELEASE A TEMPORARY MOUNTED STATE FOR A DEVICE   *@D61ADGL 06293000
*            SPECIFIED IN THE CUU= PARAMETER.                 *@D61ADGL 06294000
*  ON ENTRY: R0 CONTAINS CUU                                  *@D61ADGL 06295000
*                                                             *@D61ADGL 06296000
*  MODFLD : FIELD=MNTRLPRM    (MOUNT RELEASE PERMANENT)       *@D61ADGL 06297000
*  FUNCTION: RELEASE A PERMANENT AND TEMPORARY MOUNT          *@D61ADGL 06298000
*            RESERVATION FOR DEVICE SPECIFIED IN CUU=.        *@D61ADGL 06299000
*  ON ENTRY: R0 CONTAINS CUU                                  *@D61ADGL 06300000
*                                                             *@D61ADGL 06301000
***************************************************************@D61ADGL 06302000
         USING TINFMRST,RD         TINFMRST BASE POINTER       @D61ADMK 06303000
TINFMRST DS    0H                  ENTRY FOR RESERVE TEMP.     @D61ADGL 06304000
TINFMRLT DS    0H                  ENTRY FOR RELEASE TEMP.     @D61ADGL 06305000
         B     TINMRX00            * SKIP AUTHORIZATION        @D61ADMK 06306000
TINFMRSP DS    0H                  ENTRY FOR RESERVE PERM.     @D61ADGL 06307000
TINFMRLP DS    0H                  ENTRY FOR RELEASE PERM.     @D61ADGL 06308000
         LA    R9,TINFMRSP-TINFMRST OFFSET OF OUR ENTY POINT   @D61ADMK 06309000
         SR    RD,R9               ADJUST THE BASE POINTER     @D61ADMK 06310000
         CLC   TID,ARTIDH          CALLED FROM ATTENTION       @D66IDAP 06311000
         BE    TINMRX00            YES,                        @D61ADGL 06312000
         CLI   TINFRID+1,REENTRID  IS IT A USER TASK REQUEST   @D61ADRP 06313000
         BE    TINMRX00            NO,                         @D61ADRP 06314000
         LA    R9,TINFCNAU         PTR TO 'NOT AUTHORIZED'     @D61ADGL 06315000
         BAL   RB,TINFAUTJ         CHECK AUTHORIZATION         @D61ADGL 06316000
*SGLINK  TINFAUTJ,INPUT=(R9,RB,RC),OUTPUT=R7                            06317000
TINMRX00 DS    0H                  *                           @D61ADMK 06318000
         BAL   R9,TINFCUUP         GET POINTER TO PUB          @D61ADGL 06319000
*SGLINK  TINFCUUP,INPUT=(R0,R9,RC),WORK=(R1,R8,RA),OUTPUT=R3            06320000
         B     TINX0C16            ERROR CUU NOT FOUND         @D61ADGL 06321000
         CLC   TID,ARTIDH          CALLED FROM ATTENTION       @D66IDAP 06322000
         BNE   TINMRX02            NO,                         @D61ADGL 06323000
         LH    R0,TINFSAV1+2       TAKE PROVIDED PIK           @D61ADGL 06324000
         BAL   R9,TINFGPIK         CHECK THE PIK               @D61ADGL 06325000
*SGLINK  TINFGPIK,INPUT=(R0,R9,RC),WORK=R0,OUTPUT=R2                    06326000
         B     TINFCNPK          0 ERROR (ILLEGAL PIK)         @D61ADGL 06327000
         LR    R6,R2             4 COPY PIK VALUE              @D61ADGL 06328000
         B     TINMRX04            CONTINUE                    @D61ADGL 06329000
         SPACE 1                                                        06330000
TINMRX02 DS    0H                  CALLER IS NOT ATTENTION     @D61ADGL 06331000
         LH    R6,PIK              TAKE CURRENT PIK            @D61ADGL 06332000
TINMRX04 BAL   R9,TINFGPBX         GET PUBX ADDRESS            @D61ADGL 06333000
*SGLINK  TINFGPBX,INPUT=(R3,R9,RC),OUTPUT=R4                            06334000
         USING PBXADR,R4           PBXADR BASE POINTER         @D61ADGL 06335000
         TM    PBXFLAG,PBXTAPE     IS THIS A TAPE              @D61ADGL 06336000
         BNO   TINX0C20            NO,                         @D61ADGL 06337000
         OC    PBXLBINF,PBXLBINF   LIBRARY ATTACHED            @D61ADGL 06338000
         BZ    TINX0C20            NO,  =====================> @D61ADGL 06339000
         BAL   R9,TINFCKOW         CHECK DEVICE OWNER          @D61ADGL 06340000
*SGLINK  TINFCKOW,INPUT=(R3,R4,R9,RC),WORK=(R0,R2,R7,R8,RB),           *06341000
               OUTPUT=(R1,RF)                                  @D62NDAP 06342000
         C     RF,F4               NO/UNIQUE/MULTIPLE OWNER    @D61ADGL 06343000
         BH    TINX0C12            MULTI=====================> @D61ADGL 06344000
         BL    TINMRX06            NO OWNER                    @D61ADGL 06345000
         CLC   TID,ARTIDH          IS IT ATTENTION             @D66IDAP 06346000
         BNE   TINMRX05            NO, CHECK THE OWNER         @D61ADGL 06347000
         CLI   TINFSAVF+3,TIN#MRLT CALL FOR MNT RELEASE TEMP.  @D61ADGL 06348000
         BE    TINMRX06            YES, LET IT GO              @D61ADGL 06349000
         CLI   TINFSAVF+3,TIN#MRLP CALL FOR MNT RELEASE PERM.  @D61ADGL 06350000
         BE    TINMRX06            YES, LET IT GO              @D61ADGL 06351000
TINMRX05 CR    R1,R6               DEVICE OWNED BY CALLER      @D61ADGL 06352000
         BNE   TINX0C12            NO,  =====================> @D61ADGL 06353000
TINMRX06 DS    0H                                              @D61ADRP 06354000
         L     R7,PBXVCTE          ADDRESS OF VCTE ENTRY       @D68GAAP 06355000
         LTR   R7,R7               VCT ENTRY ALREADY PRESENT   @D68GAAP 06356000
         BZ    TINX0C20            NO,  =====================> @D68GAAP 06357000
         USING VCTEADR,R7          VCT ENTRY BASE              @D68GAAP 06358000
         TM    VCTAFLAG,VCTASHR    IS TAPE USED ELSEWHERE      @D68GAAP 06359000
         BO    TINX0C24            YES, =====================> @D68GAAP 06360000
         L     R7,PBXLBINF         LIBRARY INFORMATION ADDRESS @D61ADGL 06361000
         USING TLMADR,R7           TLMADR BASE POINTER         @D61ADGL 06362000
         CLI   TINFSAVF+3,TIN#MRST MOUNT RESERVE TEMP.         @D61ADGL 06363000
         BE    TINMRST1            YES,                        @D61ADGL 06364000
         CLI   TINFSAVF+3,TIN#MRSP MOUNT RESERVE PERM.         @D61ADGL 06365000
         BE    TINMRSP1            YES,                        @D61ADGL 06366000
         CLI   TINFSAVF+3,TIN#MRLT MOUNT RELEASE TEMP.         @D61ADGL 06367000
         BE    TINMRLT1            YES,                        @D61ADGL 06368000
         CLI   TINFSAVF+3,TIN#MRLP MOUNT RELEASE PERM.         @D61ADGL 06369000
         BE    TINMRLP1            YES,                        @D61ADGL 06370000
         BAL   R5,SYSERROR         VERY STRANGE                @D61ADGL 06371000
.*                                                             @D61ADGL 06372000
.* CODE FOR TEMPORARY MOUNT RESERVE                            @D61ADGL 06373000
.*                                                             @D61ADGL 06374000
TINMRST1 DS    0H                                              @D61ADGL 06375000
         TM    TLMMSTAT,TLMMTTMP   TEMP MOUNT ALREADY ACTIVE   @D61ADRP 06376000
         BO    TINX0C04            YES, =====================> @D61ADGL 06377000
         TM    TLMMSTAT,TLMMTPRM   PERM MOUNT ALREADY PENDING  @D61ADRP 06378000
         BO    TINX0C08            YES, =====================> @D61ADGL 06379000
         OI    TLMMSTAT,TLMMTTMP   INDICATE TEMP MOUNT ACTIVE  @D61ADRP 06380000
         B     TINMRSSO            JOIN MAIN LINE              @D61ADGL 06381000
.*                                                             @D61ADGL 06382000
.* CODE FOR PERMANENT MOUNT RESERVE                            @D61ADGL 06383000
.*                                                             @D61ADGL 06384000
TINMRSP1 DS    0H                                              @D61ADGL 06385000
         TM    TLMMSTAT,TLMMTPRM   PERM MOUNT ALREADY ACTIVE   @D61ADRP 06386000
         BO    TINX0C08            YES, =====================> @D61ADGL 06387000
         OI    TLMMSTAT,TLMMTPRM   INDICATE PERM MOUNT ACTIVE  @D61ADRP 06388000
         TM    TLMMSTAT,TLMMTTMP   TEMP MOUNT ALREADY ACTIVE   @D61ADRP 06389000
         BO    TINX0C04            YES, =====================> @D61ADGL 06390000
TINMRSSO STH   R6,PBXOWNER         SAVE PIK OF OWNER           @D61ADGL 06391000
         B     TINX0C00            RETURN WITH RCODE 0         @D61ADGL 06392000
.*                                                             @D61ADGL 06393000
.* CODE FOR RELEASE OF TEMPORARY MOUNT RESERVE                 @D61ADGL 06394000
.*                                                             @D61ADGL 06395000
TINMRLT1 DS    0H                                              @D61ADGL 06396000
         CLI   TLMMSTAT,X'00'      IS ANY MOUNT ACTIVE         @D61ADRP 06397000
         BE    TINX0C04            NO,  =====================> @D61ADRP 06398000
         NI    TLMMSTAT,XFF-TLMMTTMP RESET TEMP MOUNT          @D61ADRP 06399000
         TM    TLMMSTAT,TLMMTPRM   IS PERM MOUNT ACTIVE        @D61ADRP 06400000
         BO    TINX0C08            YES, =====================> @D61ADGL 06401000
         ICM   R1,15,TLMINFO       IS VOLUME LIST STILL ALLOC  @D61ADRP 06402000
         BNZ   TINMRLP3            YES, FREE AREA              @D61ADRP 06403000
         B     TINMRL00            RELEASE DEVICE AND SET RC=0 @D61ADRP 06404000
         SPACE 1                                                        06405000
.*                                                             @D61ADGL 06406000
.* CODE FOR RELEASE OF PERMANENT MOUNT RESERVE                 @D61ADGL 06407000
.*                                                             @D61ADGL 06408000
TINMRLP1 DS    0H                                              @D61ADGL 06409000
         CLI   TLMMSTAT,X'00'      IS ANY MOUNT ACTIVE         @D61ADRP 06410000
         BE    TINX0C04            NO,  =====================> @D61ADRP 06411000
         ICM   R1,15,TLMINFO       IS VOLUME LIST STILL ALLOC  @D61ADRP 06412000
         BNZ   TINMRLP3            YES, FREE AREA              @D61ADRP 06413000
         TM    TLMMSTAT,TLMMTTMP   IS TEMP MOUNT ACTIVE        @D61ADRP 06414000
         BNO   TINMRLP2            NO,                         @D61ADGL 06415000
         NI    TLMMSTAT,XFF-TLMMTTMP-TLMMTPRM RESET MOUNTS     @D61ADRP 06416000
         B     TINMRL08            RELEASE DEVICE AND SET RC=8 @D61ADRP 06417000
TINMRLP2 DS    0H                  PERMANENT MOUNTED,          @D61ADGL 06418000
         NI    TLMMSTAT,XFF-TLMMTPRM RESET PERMANENT MOUNT     @D61ADRP 06419000
         B     TINMRL00            RELEASE DEVICE AND SET RC=0 @D61ADRP 06420000
         SPACE 1                                                        06421000
.*                                                                      06422000
.* NO MORE FAST SVC, COMMON CODE FOR RELEASE OF TEMP/PERM      @D61ADRP 06423000
.* MOUNT, IF VOLID LIST HAS TO BE FREED                        @D61ADRP 06424000
.*                                                                      06425000
TINMRLP3 DS    0H                                              @D61ADRP 06426000
         CLI   TINFRID+1,USERTID   IS THIS A USER TASK REQUEST @D61ADRP 06427000
         BE    TINMRLP4            YES,                        @D61ADRP 06428000
         BAL   R5,SYSERROR         NO, SYSTEM ERROR            @D61ADRP 06429000
TINMRLP4 DS    0H                                              @D61ADRP 06430000
         L     R1,TCBPTR           TCB ADDRESS                 @D6X..RP 06431000
         USING TCBADR,R1           TCB BASE POINTER            @D6X..RP 06432000
         STM   R0,R7,SVCSV3        SAVE REGISTERS IN 3RD AREA  @D6X..RP 06433000
         DROP  R1                  RELEASE TCB BASE            @D6X..RP 06434000
         BAL   R9,TINFGENT         SAVE STATUS                 @D61ADRP 06435000
*SGLINK  TINFGENT,INPUT=(R9,RC),WORK=(R2,R3,R4,R5,R7,RE,RF),           *06436000
               OUTPUT=(R0,R1,R6,R8,RA,RB)                      @D62NDAP 06437000
         USING SVEARA,RB           SAVE AREA BASE POINTER      @D61ADRP 06438000
         L     R1,TCBPTR           TCB ADDRESS                 @D6X..RP 06439000
         USING TCBADR,R1           TCB BASE POINTER            @D6X..RP 06440000
         LM    R0,R7,SVCSV3        RESTORE REGISTERS           @D6X..RP 06441000
         DROP  R1                  RELEASE TCB BASE            @D6X..RP 06442000
*        AMODESW SET,AMODE=31,WR=(R5) SWITCH TO 31 BIT         @D61ADRP 06443000
         AMODESW SET,AMODE=31,WR=(R5) SWITCH TO 31 BIT         @D61ADRP 06444000
         USING PBXADR,R4           PUBX BASE POINTER           @D61ADRP 06445000
         L     R7,PBXLBINF         LIBRARY INFORMATION BLOCK   @D61ADRP 06446000
         USING TLMADR,R7           TLMADR BASE POINTER         @D61ADRP 06447000
         L     R1,TLMINFO          ADDRESS VOLUME LIST         @D61ADRP 06448000
         USING MNTVLIST,R1         MNTVLIST BASE POINTER       @D61ADGL 06449000
         L     R0,MNTARLNG         LENGTH OF VOLUME LIST       @D61ADGL 06450000
         DROP  R1                  RELEASE TLMINFO BASE        @D61ADGL 06451000
         L     RA,TCBPTR           PTR TO TCB FOR SFREEVIS     @D61ADGL 06452000
         SFREEVIS ADDRESS=(1),LENGTH=(0) FREE VOLUME LIST      @D61ADGL 06453000
         XC    TLMINFO,TLMINFO     INDICATE NO MORE VOLUME LIST@D61ADGL 06454000
         CLI   SVER0F+3,TIN#MRLT   IS IT TEMP MOUNT RELEASE    @D61ADRP 06455000
         BE    TINMRL00            YES, RELEASE DEVICE RC=0             06456000
.*                                 NO, PERMANENT MOUNT RELEASE @D61ADRP 06457000
         TM    TLMMSTAT,TLMMTTMP   IS TEMP MOUNT ACTIVE        @D61ADRP 06458000
         BNO   TINMRLP6            NO,                         @D61ADRP 06459000
         NI    TLMMSTAT,XFF-TLMMTTMP-TLMMTPRM RESET MOUNTS     @D61ADRP 06460000
         B     TINMRL08            RELEASE DEVICE AND SET RC=8 @D61ADRP 06461000
TINMRLP6 NI    TLMMSTAT,XFF-TLMMTTMP-TLMMTPRM RESET BOTH MOUNTS@D61ADRP 06462000
         B     TINMRL00            RELEASE DEVICE AND SET RC=0 @D61ADRP 06463000
         DROP  RB                  RELEASE SAVE AREA BASE      @D61ADRP 06464000
         SPACE 2                                                        06465000
*  CHECK WHETHER THE DEVICE IS STILL OWNED, IF NOT FREE UP     @D6X..RP 06466000
*  THE DEVICE AND RETURN TO USER WITH CORRECT RETURN CODE      @D6X..RP 06467000
*  IF STATUS SAVED, RB PTR TO SVEARA                           @D6X..RP 06468000
TINMRL00 LA    RF,0               INDICATE RETURN WITH RCODE 0 @D6X..RP 06469000
         B     TINMRLX1                                        @D6X..RP 06470000
TINMRL08 LA    RF,8               INDICATE RETURN WITH RCODE 8 @D6X..RP 06471000
TINMRLX1 CLI   TINFRID+1,REENTRID CALLED FROM WITHIN SUPERV.            06472000
*                                 (EXTRACT ID=ATLCUU)          @D6X..RP 06473000
         BE    TINMRLX2           YES, DON'T FREE DEVICE       @D6X..RP 06474000
         BAL   R9,TINFRDEV        FREE DEVICE IF POSSIBLE      @D6X..RP 06475000
*SGLINK  TINFRDEV,INPUT=(R3,R4,R9,RC),WORK=R1                           06476000
TINMRLX2 L     R1,TIBPTR          GET TIB                               06477000
         USING TIBADR,R1                                       @D6X..RP 06478000
         TM    TIBFLAG3,TIBSTSV   STATUS SAVED                 @D6X..RP 06479000
         BZ    TINMRLR3           NO, RETURN FAST PATH         @D6X..RP 06480000
*                                 YES, RETURN VIA DISP         @D6X..RP 06481000
         LTR   RF,RF              RETURN WITH RCODE 0          @D6X..RP 06482000
         BZ    TINX0R00           YES, DO IT                   @D6X..RP 06483000
         B     TINX0R08           NO, HAS TO BE WITH RCODE 8   @D6X..RP 06484000
*    RETURN FAST PATH                                          @D6X..RP 06485000
TINMRLR3 LTR   RF,RF              RETURN WITH RCODE 0          @D6X..RP 06486000
         BZ    TINX0C00           YES, DO IT                   @D6X..RP 06487000
         B     TINX0C08           NO, HAS TO BE WITH RCODE 8   @D6X..RP 06488000
         DROP  R7                  DROP BASE FOR TLMADR        @D61ADGL 06489000
         DROP  R4                  DROP BASE FOR PBXADR        @D61ADRP 06490000
         DROP  RD                 DROP BASE FOR THIS SERVICE   @D6X..RP 06491000
*                                  END OF CODEBLOCK            @D61ADGL 06492000
*                                                              @D61ADGL 06493000
***************************************************************@D61ADGL 06494000
*                                                             *@D61ADGL 06495000
*  MODFLD : FIELD=MNTRLTPA    (RELEASE ALL TEMP. RESERVATIONS)*@D61ADGL 06496000
*           FIELD=MNTRLPRA    (RELEASE ALL PERM. RESERVATIONS)*@D61ADGL 06497000
*  FUNCTION: THIS FUNCTION IS INVOKED FOR CLEANUP PURPOSES    *@D61ADGL 06498000
*            AND SHALL DO A TEMPORARY/PERMANENT RELEASE FOR   *@D61ADGL 06499000
*            ALL MOUNT RESERVATIONS FOR THE ISSUEING PARTITION*@D61ADGL 06500000
*            STARTING WITH THE DEVICE SPECIFIED IN THE PU=    *@D61ADGL 06501000
*            PARAMETER OR WITH THE 1ST DEVICE, IF THE PU=  .  *@D61ADGL 06502000
*            PARAMETER IS NEGATIVE.                           *@D61ADRP 06503000
*            IF A DEVICE IS FOUND AND IT IS THE FIRST DEVICE  *@D61ADRP 06504000
*            FOR A SECONDARY INVOCATION, THE MOUNT STATE IS   *@D61ADRP 06505000
*            RESET AND SCAN CONTINUES.                        *@D61ADRP 06506000
*            IN ALL OTHER CASES, IF A DEVICE IS FOUND AND THE *@D61ADRP 06507000
*            DEVICE IS OPERATIONAL, WE RETURN TO THE CALLER   *@D61ADRP 06508000
*            WITH THE PUBINDEX IN R1, THE CUU IN R0 AND IF    *@D61ADRP 06509000
*            NO MOUNT IS PENDING, A RETURN CODE OF 4 IN RF;   *@D61ADRP 06510000
*            IF A MOUNT IS PENDING R2 CONTAINS THE SERVICELIST*@D61ADRP 06511000
*            ADDRESS IN ADDITION AND RF CONTAINS RET. CODE 16.*@D61ADRP 06512000
*            AN AVAILABLE VOLUME LIST WILL BE FREED IN ADDIT. *@D61ADRP 06513000
*            WHEN ALL DEVICES ARE SCANNED, WE RETURN WITH A   *@D61ADGL 06514000
*            RETURN CODE OF 0.                                *@D61ADGL 06515000
*  ON ENTRY: R1 CONTAINS A PUBINDEX FROM PU= PARAMETER        *@D61ADGL 06516000
*          : R1 NEGATIVE INDICATES 1ST INVOCATION             *@D61ADGL 06517000
***************************************************************@D61ADGL 06518000
TINFMRLA DS    0H                                              @D61ADGL 06519000
         USING TINFMRLA,RD         TINFMRLA BASE POINTER       @D61ADGL 06520000
         LA    R9,TINFCNAU         PTR TO 'NOT AUTHORIZED'     @D61ADGL 06521000
         BAL   RB,TINFAUTJ         CHECK AUTHORIZATION         @D61ADGL 06522000
*SGLINK  TINFAUTJ,INPUT=(R9,RB,RC),OUTPUT=R7                            06523000
         LTR   R0,R1               DID CALLER PROVIDE PUB INDEX@D61ADRP 06524000
         BNM   TINMRLAA            YES,                        @D61ADRP 06525000
         SLR   R0,R0               START WITH PUB INDEX ZERO   @D61ADRP 06526000
TINMRLAA BAL   R9,TINFCKPU         CHECK DEVICE TYPE           @D61ADGL 06527000
*SGLINK  TINFCKPU,INPUT=(R0,R9,RC),OUTPUT=R3                            06528000
         B     TINFCNPU            ERROR (INVALID PUB INDEX)   @D61ADGL 06529000
         BAL   R9,TINFGENT         SAVE STATUS                 @D61ADGL 06530000
*SGLINK  TINFGENT,INPUT=(R9,RC),WORK=(R2,R3,R4,R5,R7,RE,RF),           *06531000
               OUTPUT=(R0,R1,R6,R8,RA,RB)                      @D62NDAP 06532000
         USING SVEARA,RB           SVEARA BASE POINTER         @D61ADRP 06533000
*        AMODESW SET,AMODE=31,WR=(R5)     SWITCH TO 31 BIT     @D61ADGL 06534000
         AMODESW SET,AMODE=31,WR=(R5)     SWITCH TO 31 BIT     @D61ADGL 06535000
         SLR   R6,R6               INDICATE RESET TEMPORARE    @D61ADGL 06536000
         CLI   SVER0F+3,TIN#MRPA   DID CALLER WANT PERM        @D61ADGL 06537000
         BNE   TINMRLA0            NO,                         @D61ADGL 06538000
         LA    R6,1                INDICATE RESET PERMANENT    @D61ADGL 06539000
TINMRLA0 L     R5,APBXAREA         ADDRESS OF PUBX ADDRESS TAB.@D61ADGL 06540000
         ICM   R3,15,SVER01        GET USERS PROVIDED PUB INDEX@D61ADRP 06541000
         BNM   TINMRLA1            DID USER REQUEST ALL        @D61ADRP 06542000
         SLR   R3,R3               YES, FORCE PUB-INDEX TO ZERO@D61ADRP 06543000
TINMRLA1 SLL   R3,2                MULTIPLY WITH FOUR          @D61ADGL 06544000
         AR    R5,R3               ADDRESS OF PUBX ADDRESS     @D61ADGL 06545000
         B     TINMRLA2            JOIN MAIN PATH              @D61ADRP 06546000
TINMRLAI MVI   SVER01,XFF          ADJUST R1 FOR NEXT PATH THR.@D61ADRP 06547000
         LA    R5,4(,R5)           ADJUST PUBX ADDRESS POINTER @D61ADGL 06548000
TINMRLA2 L     R4,0(,R5)           ADDRESS OF PUBX ENTRY       @D61ADGL 06549000
         LTR   R4,R4               ARE WE ALL DONE             @D61ADGL 06550000
         BM    TINMRLA9            YES,                        @D61ADGL 06551000
         USING PBXADR,R4           PBXADR BASE POINTER         @D61ADRP 06552000
         CLC   PBXOWNER(2),PIK     IS ISSUING PART THE OWNER   @D61ADGL 06553000
         BNE   TINMRLAI            NO,                         @D61ADGL 06554000
         TM    PBXFLAG,PBXTAPE     IS THIS A TAPE DEVICE       @D61ADGL 06555000
         BNO   TINMRLAI            NO,                         @D61ADGL 06556000
         ICM   R7,15,PBXLBINF      LIBRARY INFO AVAILABLE      @D61ADGL 06557000
         BZ    TINMRLAI            NO,                         @D61ADGL 06558000
         USING TLMADR,R7           TMLADR BASE POINTER         @D61ADGL 06559000
         CLI   TLMMSTAT,X'00'      ANY MOUNT INFO PRESENT      @D61ADRP 06560000
         BE    TINMRLAI            NO,                         @D61ADRP 06561000
         ICM   RA,15,SVER01        IS THIS THE FIRST PUB       @D61ADRP 06562000
         BM    TINMRLA5            NO,                         @D61ADRP 06563000
TINMRLA3 DS    0H                                              @D61ADRP 06564000
         NI    TLMMSTAT,XFF-TLMMTTMP RESET TEMP ASSIGNED       @D61ADRP 06565000
         LTR   R6,R6               USER REQUESTED TEMP RELEASE @D61ADGL 06566000
         BZ    TINMRLA4            YES,                        @D61ADRP 06567000
         NI    TLMMSTAT,XFF-TLMMTPRM  RESET PERM ASSIGNED      @D61ADRP 06568000
TINMRLA4 CLI   TLMMSTAT,X'00'      ANY OTHER MOUNT STATUS      @D61ADRP 06569000
         BNE   TINMRLAI            YES, DONT TOUCH SERVICE LIST@D61ADRP 06570000
         XC    TLMECBSV,TLMECBSV   CLEAR SERVICE LIST PTR      @D61ADAP 06571000
*                                  IN CASE OF STRANGE ERROR    @D61ADRP 06572000
         LR    R3,R5               COPY PUBX ADDRESS POINTER   @D6X..RP 06573000
         S     R3,APBXAREA         OFFSET WITHIN PUBX ADDR.TAB.@D6X..RP 06574000
         SRL   R3,2                PUB INDEX                   @D6X..RP 06575000
         BAL   R9,TINFRDEV         FREE DEVICE IF POSSIBLE     @D6X..RP 06576000
*SGLINK  TINFRDEV,INPUT=(R3,R4,R9,RC),WORK=R1                           06577000
         B     TINMRLAI            PROCESS NEXT DEVICE         @D61ADRP 06578000
         SPACE 1                                                        06579000
.*                                                                      06580000
.*   NOT 1ST DEVICE FOR 2ND INVOCATION, ANY DEVICE FOR 1ST     @D61ADRP 06581000
.*   INVOCATION                                                @D61ADRP 06582000
.*                                                                      06583000
TINMRLA5 LTR   R6,R6                      REQ. FOR PERMANENT   @D61ADRP 06584000
         BNZ   TINMRLA6                   YES, BRANCH          @D61ADRP 06585000
         TM    TLMMSTAT,TLMMTTMP          TEMPORAY MOUNT       @D61ADRP 06586000
         BZ    TINMRLAI                   NO, ITERATE          @D61ADRP 06587000
         TM    TLMMSTAT,TLMMTPRM          ONLY TEMP. MOUNT     @D61ADRP 06588000
         BZ    TINMRLA6                   YES, BRANCH          @D61ADRP 06589000
         NI    TLMMSTAT,XFF-TLMMTTMP      NO, SET OFF TEMPORARY@D61ADRP 06590000
         B     TINMRLAI                   * INDIC. AND ITERATE @D61ADRP 06591000
TINMRLA6 DS    0H                                              @D61ADRP 06592000
         ICM   R1,15,TLMINFO              VOLID LIST PTR AVAIL.@D61ADRP 06593000
         BZ    TINMRLA7                   NO, BRANCH           @D61ADRP 06594000
         USING MNTVLIST,R1                PTR TO INFO IN GETVIS@D61ADGL 06595000
         L     R0,MNTARLNG                TAKE LENGTH OF AREA  @D61ADGL 06596000
         L     RA,TCBPTR                  TCB FOR SFREEVIS     @D61ADGL 06597000
         SFREEVIS ADDRESS=(1),LENGTH=(0)  FREE AREA            @D61ADGL 06598000
         DROP  R1                         DROP MNTVLIST BASE   @D61ADRP 06599000
         XC    TLMINFO,TLMINFO            CLEAR VOLID LIST PTR @D61ADGL 06600000
TINMRLA7 DS    0H                                              @D61ADRP 06601000
         ICM   R3,15,TLMECBSV             MOUNT PENDING        @D61ADRP 06602000
         BNZ   TINMRLA8                   YES, SKIP CHECK               06603000
         CLC   PBXSCH,XFFFF               DEVICE NOT OPERAT.   @D61NDOW 06604000
         BE    TINMRLA3                   YES, RESET AND CONT. @D61ADRP 06605000
TINMRLA8 DS    0H                                              @D61ADRP 06606000
         S     R5,APBXAREA                GET PUB              @D61ADGL 06607000
         SRL   R5,2                       * INDEX              @D61ADRP 06608000
         XC    SVER00,SVER00              CLEAR OUTPUT REG.    @D61ADGL 06609000
         MVC   SVER00+2(2),PBXCUU         PROVIDE CUU          @D61ADRP 06610000
         ST    R5,SVER01                  STORE PUBINDEX       @D61ADGL 06611000
         ICM   R3,15,TLMECBSV             MOUNT PENDING        @D61ADRP 06612000
         BZ    TINRCR04                   NO, RETURN FOR NEXT  @D61ADRP 06613000
         ST    R3,SVER02                  YES, SET SERVL. ADDR.@D61ADRP 06614000
         B     TINRCR16                   RETURN FOR NEXT CALL @D61ADGL 06615000
TINMRLA9 DS    0H                                              @D61DDGL 06616000
         B     TINX0R00                   RETURN WITH RCODE 0  @D61ADGL 06617000
         DROP  R4                         DROP BASE FOR PBXADR @D61ADRP 06618000
         DROP  R7                         DROP BASE FOR TLMADR @D61ADGL 06619000
         DROP  RB                         DROP BASE FOR SVEARA @D61ADRP 06620000
         DROP  RD                  DROP ROUTINE BASE           @D61ADRP 06621000
*                                         END OF CODEBLOCK     @D61ADGL 06622000
*                                                              @D61ADGL 06623000
***************************************************************@D61ADGL 06624000
*                                                             *@D61ADGL 06625000
*  MODFLD : FIELD=MNTRSFRC    (MOUNT RESERVE FORCED)          *@D61ADGL 06626000
*  FUNCTION: SET A DEVICE SPECIFIED BY CUU= INTO AN           *@D61ADGL 06627000
*            PERMANENTLY MOUNTED STATE FOR THE PARTITION      *@D61ADGL 06628000
*            SPECIFIED IN THE PART= PARAMETER. THIS SERVICE   *@D61ADGL 06629000
*            IS FOR AR ONLY.                                  *@D61ADGL 06630000
*  ON ENTRY: REGISTER R0 CONTAINS CUU                         *@D61ADGL 06631000
*            REGISTER R1 CONTAINS A PIK FROM PART= PARAMETER  *@D61ADGL 06632000
***************************************************************@D61ADGL 06633000
TINFMRSF DS    0H                  START OF CODEBLOCK          @D61ADGL 06634000
         USING TINFMRSF,RD         *                           @D61ADGL 06635000
         CLC   TID,ARTIDH          IS CALLER ATTENTION ROUTINE?@D66IDAP 06636000
         BNE   TINFCNAU            CANCEL IF NOT.              @D61ADGL 06637000
         BAL   R9,TINFGENT         CALL, SAVE STATUS ======>>  @D61ADGL 06638000
*SGLINK  TINFGENT,INPUT=(R9,RC),WORK=(R2,R3,R4,R5,R7,RE,RF),           *06639000
               OUTPUT=(R0,R1,R6,R8,RA,RB)                      @D62NDAP 06640000
         USING SVEARA,RB                                       @D61ADRP 06641000
         BAL   R9,TINFCUUP         GET POINTER TO PUB          @D61ADGL 06642000
*SGLINK  TINFCUUP,INPUT=(R0,R9,RC),WORK=(R1,R8,RA),OUTPUT=R3            06643000
         B     TINX0C16            ERROR CUU NOT FOUND         @D61ADGL 06644000
         BAL   R9,TINFGPBX         POINT TO PUBX               @D61ADGL 06645000
*SGLINK  TINFGPBX,INPUT=(R3,R9,RC),OUTPUT=R4                            06646000
         USING PBXADR,R4           *                           @D61ADGL 06647000
         TM    PBXFLAG,PBXTAPE     ERROR (DEVICE IS NO TAPE )  @D61ADGL 06648000
         BNO   TINX0R20            *                           @D61ADGL 06649000
         OC    PBXLBINF,PBXLBINF   ERROR (DEVICE IS NO 3494 )  @D61ADGL 06650000
         BZ    TINX0R20            *                           @D61ADGL 06651000
         LH    R0,SVER01+2         TAKE PART= INDICATION       @D61ADGL 06652000
         BAL   R9,TINFGPIK         GET AND CHECK PIK           @D61ADGL 06653000
*SGLINK  TINFGPIK,INPUT=(R0,R9,RC),WORK=R0,OUTPUT=R2                    06654000
         B     TINFCNPK            ERROR (ILLEGAL PIK)         @D61ADGL 06655000
         LR    R6,R2               KEEP PIK FOR FUTURE USE     @D61ADGL 06656000
         LR    RA,RB               KEEP SAVE AREA POINTER      @D61ADGL 06657000
         BAL   R9,TINFCKOW         CHECK DEVICE OWNER          @D61ADGL 06658000
*SGLINK  TINFCKOW,INPUT=(R3,R4,R9,RC),WORK=(R0,R2,R7,R8,RB),           *06659000
               OUTPUT=(R1,RF)                                  @D62NDAP 06660000
         L     R7,PBXLBINF         TAKE PTR TO LIB INFOS       @D61ADGL 06661000
         USING TLMADR,R7           *                           @D61ADGL 06662000
         LR    RB,RA               RESTORE SAVE AREA POINTER   @D61ADGL 06663000
         C     RF,F4               NO/UNIQUE/MILTIPLE OWNER    @D61ADGL 06664000
         BH    TINX0R04            MULTIPLE? IMPOSSIBLE ...    @D61ADGL 06665000
         BL    TINMRSF2            NO OWNER, ACCEPT            @D61ADGL 06666000
         CR    R1,R6               BRANCH IF OWNING PARTITION  @D61ADGL 06667000
         BE    TINMRSF2            *  IS NOT SAME AS PART=     @D61ADGL 06668000
*                                                              @D61ADGL 06669000
*   FIND OUT IF THE OLD OWNING PARTITION HAD JUST MOUNT        @D61ADGL 06670000
*   RESERVED THE DEVICE OR IF IT HAD ANY OTHER REASON TO       @D61ADGL 06671000
*   OWN IT, FOR EXAMPLE MOUNT REQUEST OR ASSIGNMENT.           @D61ADGL 06672000
*                                                              @D61ADGL 06673000
         IC    R5,TLMMSTAT         TAKE OLD MOUNT INFO         @D61ADRP 06674000
         MVI   TLMMSTAT,X'00'      PURGE MOUNT INFORMATION     @D61ADRP 06675000
         BAL   R9,TINFCKOW         CHECK DEVICE OWNER          @D61ADGL 06676000
*SGLINK  TINFCKOW,INPUT=(R3,R4,R9,RC),WORK=(R0,R2,R7,R8,RB),           *06677000
               OUTPUT=(R1,RF)                                  @D62NDAP 06678000
         L     R7,PBXLBINF         *                           @D61ADGL 06679000
         LR    RB,RA               RESTORE SAVEAREA POINTER    @D61ADGL 06680000
         STC   R5,TLMMSTAT         RESTORE THE OLD INFO        @D61ADRP 06681000
         LTR   RF,RF               NO OWNER NOW?               @D61ADGL 06682000
         BNZ   TINX0R04            NO, STILL OWNED, GIVE RC 4  @D61ADGL 06683000
*                                                              @D61ADGL 06684000
*   DEVICE IS AVAILABLE FOR FORCIBLE MOUNT RESERVE.            @D61ADGL 06685000
*                                                              @D61ADGL 06686000
TINMRSF2 DS    0H                                              @D61ADRP 06687000
         ICM   R5,15,TLMINFO       IF NO VOLID LIST AVAILABLE  @D61ADGL 06688000
         BZ    TINX0R12            =====> RETURN WTH RC=12     @D61ADGL 06689000
         OI    TLMMSTAT,TLMMTPRM   SET PERMANENT MOUNT INDIC.  @D61ADRP 06690000
         STH   R6,PBXOWNER         SET OWNER IN PUBX           @D61ADGL 06691000
         B     TINX0R00            END OF CODEBLOCK            @D61ADGL 06692000
         DROP  R4                  DROP PBXADR                 @D61NDOW 06693000
         DROP  R7                  DROP BASE FOR TLMADR        @D61ADGL 06694000
         DROP  RB                  DROP SVERAR                 @D61NDOW 06695000
         DROP  RD                  DROP RTN BASE               @D61NDOW 06696000
*                                                              @D61ADGL 06697000
***************************************************************@D61NDGL 06698000
*                                                             *@D61NDGL 06699000
*  GETFLD : FIELD=NXTOWNER    (GET NEXT OWNER OF DEVICE)      *@D61NDGL 06700000
*  FUNCTION: GET THE NEXT OWNER FOR A SPECIFIED DEVICE.       *@D61NDGL 06701000
*  ON ENTRY:                                                  *@D61NDGL 06702000
*    R0 = PUB INDEX OF THE DEVICE IN QUESTION                 *@D61NDGL 06703000
*    R1 = PIK OF PARTITION TO START OWNER TABLE SCAN WITH     *@D61NDGL 06704000
*  ON EXIT :                                                  *@D61NDGL 06705000
*    RF = 0 FOR FURTHER OWNER FOUND                            @D61NDGL 06706000
*         4 FOR NO FURTHER OWNER FOUND                         @D61NDGL 06707000
*         8 FOR INPUT PIK WAS WRONG ALREADY                    @D61NDGL 06708000
*    R1 = PIK OF OWNER OR ZERO.                                @D61NDGL 06709000
***************************************************************@D61NDGL 06710000
TINFGNXO DS    0H                  START OF CODEBLOCK          @D61NDGL 06711000
         USING TINFGNXO,RD         *                           @D61NDGL 06712000
         BAL   R9,TINFCKPU         CHECK SPEC.PHYSICAL UNIT    @D61NDGL 06713000
*SGLINK  TINFCKPU,INPUT=(R0,R9,RC),OUTPUT=R3                            06714000
         B     TINFCNPU            ERROR (INVALID INDEX)       @D61NDGL 06715000
         LR    R0,R1               TAKE INPUT PIK              @D61NDGL 06716000
         BAL   R9,TINFCPIK         CALL, CHECK GIVEN PIK       @D61NDGL 06717000
*SGLINK  TINFCPIK,INPUT=(R0,R9,RC),WORK=(R0),OUTPUT=R2                  06718000
         B     TINX0C08            ERROR (ILLEGAL PIK)         @D61NDGL 06719000
TINGNXO1 BAL   R9,TINFGMSK         GET PART OWNERSHIP MASK     @D61NDGL 06720000
*SGLINK  TINFGMSK,INPUT=(R2,R3,R9,RC),WORK=R8,OUTPUT=(R0,RB)            06721000
         BAL   R9,TINFPOWN         POINT TO PUB OWNERSHIP      @D61NDGL 06722000
*SGLINK  TINFPOWN,INPUT=(R3,R9,RC),OUTPUT=R7                            06723000
         LA    R9,0(RB,R7)         TAKE OWNERTABLE PTR         @D61NDGL 06724000
         LR    R1,R0               AND MASK FOR BIT            @D61NDGL 06725000
         EX    R1,TINGNXOT         EXECUTE TM INSTRUCTION      @D61NDGL 06726000
         BO    TINGNXO2            RETURN IF ITS ON            @D61NDGL 06727000
         LA    R2,X'10'(,R2)       INCREMENT PIK VALUE         @D61NDGL 06728000
         LR    R0,R2               TAKE INTO INPUT REG         @D61NDGL 06729000
         BAL   R9,TINFCPIK         CALL, CHECK GIVEN PIK       @D61NDGL 06730000
*SGLINK  TINFCPIK,INPUT=(R0,R9,RC),WORK=(R0),OUTPUT=R2                  06731000
         B     TINX0C04            RETURN IF NO FURTHER PIK    @D61NDGL 06732000
         B     TINGNXO1            LOOP FOR OTHER PIK          @D61NDGL 06733000
TINGNXO2 LR    R1,R2               PREPARE PIK IN R1           @D61NDGL 06734000
         SLR   R0,R0               PREPARE 0 IN R0             @D61NDGL 06735000
         B     TINC0ST0            RETURN TO CALLER            @D61NDGL 06736000
TINGNXOT TM    0(R9),*-*           EXECUTED TM INSTRUCTION     @D61NDGL 06737000
         DROP  RD                  DROP RTN BASE               @D61NDOW 06738000
*                                  END OF CODEBLOCK            @D61NDGL 06739000
***************************************************************@D61NDGL 06740000
*                                                             *@D61NDGL 06741000
*  GETFLD : FIELD=POWCAT      (GET POWER CAT FROM SYSCOM)     *@D61NDGL 06742000
*  FUNCTION: NO PARAMETERS ARE PROVIDED.                      *@D61NDGL 06743000
*  ON ENTRY: REGISTER R1 CONTAINS A PIK FROM PART= PARAMETER  *@D61NDGL 06744000
*  ON EXIT:  IF THE RETURN CODE IN RF IS 0, R1 CONTAINS THE   *@D61NDGL 06745000
***************************************************************@D61NDGL 06746000
TINFGPOC DS    0H                  START OF CODEBLOCK          @D61NDGL 06747000
         USING TINFGPOC,RD         *                           @D61NDGL 06748000
         SLR   R0,R0               PURGE OUTPUT REG            @D61NDGL 06749000
         L     R1,APOWTB           TAKE POWER CAT FROM SYSCOM  @D61NDGL 06750000
         LTR   RF,R1               RETURN IF THERE IS A TABLE  @D61NDGL 06751000
         BNZ   TINC0ST0            *                           @D61NDGL 06752000
         B     TINX0C04            END OF CODEBLOCK            @D61NDGL 06753000
         DROP  RD                  DROP RTN BASE               @D61NDOW 06754000
*                                                              @D61NDGL 06755000
***************************************************************@D61NDGL 06756000
*                                                             *@D61NDGL 06757000
*  GETFLD : FIELD=CELANCH     (CEL ANCHOR VECTOR ADDRESS)     *@D61NDGL 06758000
*  FUNCTION: RETRIEVE ADDRESS OF ADDRESS OF CEL ANCHOR        *@D61NDGL 06759000
*    VECTOR IN THE TCB.                                       *@D61NDGL 06760000
*  ON ENTRY: NO SPECIAL INPUT. CURRENT TASK IS TASK FOR TCB.  *@D61NDGL 06761000
*  ON EXIT:  R1 CONTAINS THE VALUE. RF=0, R0=0 IN ALL CASES.  *@D61NDGL 06762000
***************************************************************@D61NDGL 06763000
         USING TCBADR,RA                                       @D61NDOW 06764000
TINFGCEL DS    0H                  START OF CODEBLOCK          @D61NDGL 06765000
         SLR   R0,R0               PURGE REG FOR OUTPUT        @D61NDGL 06766000
         L     R1,TCBLECAV         TAKE VECTOR FROM TCB        @D61NDGL 06767000
         B     TINC0ST0            RETURN TO CALLER            @D61NDGL 06768000
         DROP  RA                  DROP TCBADR                 @D61NDOW 06769000
*                                  END OF CODEBLOCK            @D61NDGL 06770000
***************************************************************@D61NDGL 06771000
*                                                             *@D61NDGL 06772000
*  MODFLD : FIELD=CELANCH     (CEL ANCHOR VECTOR ADDRESS)     *@D61NDGL 06773000
*  FUNCTION: SET THE ADDRESS OF THE CEL ANCHOR                *@D61NDGL 06774000
*    VECTOR IN THE TCB.                                       *@D61NDGL 06775000
*  ON ENTRY: TASK IS CURRENT TASK, NEWVAL IS IN R1.           *@D61NDGL 06776000
*  ON EXIT:  R0 AND R1 UNCHANGED, RF IS 0.                    *@D61NDGL 06777000
***************************************************************@D61NDGL 06778000
         USING TCBADR,RA                                       @D61NDOW 06779000
TINFMCEL DS    0H                  START OF CODEBLOCK          @D61NDGL 06780000
         ST    R1,TCBLECAV         STORE NEW VECTOR            @D61NDGL 06781000
         B     TINCOD00            RETURN TO CALLER            @61NDSGL 06782000
         DROP  RA                  DROP TCBADR                 @D61NDOW 06783000
*                                                              @D61NDGL 06784000
*                                  END OF CODEBLOCK            @D61NDGL 06785000
***************************************************************@D61ADGL 06786000
*                                                             *@D61ADGL 06787000
*  MODFLD : FIELD=MNTINFO     (SET LIBRARY INFORMATION)       *@D61ADGL 06788000
*  GETFLD : FIELD=MNTINFO     (GET LIBRARY INFORMATION)       *@D61ADGL 06789000
*  FUNCTION: RETRIEVE INFORMATION ABOUT THE DEVICE SPECIFIED  *@D61ADGL 06790000
*    IN THE CUU= PARAMETER.                                   *@D61ADGL 06791000
*  ON ENTRY: R0 CONTAINS THE CUU OF THE DEVICE IN QUESTION    *@D61ADGL 06792000
*    R0 = <2BYTE UNKNOWN><2 BYTE CUU OF DEVICE IN QUESTION>   *@D61ADGL 06793000
*    R1 = FOR MODFLD: PTR VALUE FOR TLMECBSV                  *@D61ADGL 06794000
*  ON EXIT:                                                   *@D61ADGL 06795000
*    RF = RETURNCODE. 0 IF DEVICE IS OK AND THE POINTER IN    *@D61ADGL 06796000
*         R1 IS VALID. THE DEVICE IS MOUNT RESERVED FOR THE   *@D61ADGL 06797000
*         PARTITION AND CONDITION MENTIONED IN R0             *@D61ADGL 06798000
*         RETURNCODE=4 INDICATES THAT THE DEVICE IS NOT       *@D61ADGL 06799000
*         MOUNTED OR MOUNT RESERVED.                          *@D61ADGL 06800000
*         RETURNCODE=16 INDICATES INVALID INPUT CUU           *@D61ADGL 06801000
*         RETURNCODE=20 INDICATES CUU IS NO TAPE OR NO LIB..  *@D61ADGL 06802000
*    R1 = POINTER TO THE SERVICE LIST OF LBSERV MACRO CODE.   *@D61ADGL 06803000
*         THE POINTER IS ONLY VALID IF THE RETURN CODE IS 0   *@D61ADGL 06804000
*    R0 = <2BYTES MOUNT STATUS> <2 BYTES PIK OF OWNER>        *@D61ADGL 06805000
*         THE MOUNT STATUS IS AS FOLLOWS:                     *@D61ADGL 06806000
*         X'0001' DEVICE IS TEMPORARY MOUNTED                 *@D61ADGL 06807000
*         X'0002' DEVICE IS PERMANENTLY MOUNTED               *@D61ADGL 06808000
*         THE PIK OF THE OWNER IS A TWO BYTE FIELD            *@D61ADGL 06809000
***************************************************************@D61ADGL 06810000
TINFMINF DS    0H                                              @D61ADGL 06811000
         USING TINFMINF,RD         TINFMINF BASE POINTER       @D61ADGL 06812000
         LR    R6,R1               SAVE NEWVAL VALUE           @D61ADGL 06813000
         BAL   R9,TINFCUUP         GET POINTER TO PUB          @D61ADGL 06814000
*SGLINK  TINFCUUP,INPUT=(R0,R9,RC),WORK=(R1,R8,RA),OUTPUT=R3            06815000
         B     TINX0C16            ERROR CUU NOT FOUND         @D61ADGL 06816000
         BAL   R9,TINFGPBX         GET PUBX ADDRESS            @D61ADGL 06817000
*SGLINK  TINFGPBX,INPUT=(R3,R9,RC),OUTPUT=R4                            06818000
         USING PBXADR,R4           PBXADR BASE                 @D61ADGL 06819000
         TM    PBXFLAG,PBXTAPE     IS THIS A TAPE DEVICE       @D61ADGL 06820000
         BNO   TINX0C20            NO,                         @D61ADGL 06821000
         L     R9,PBXLBINF         TMLADR BASE ADDRESS         @D61ADGL 06822000
         LTR   R9,R9               DOES A LIBRARY EXIST        @D61ADGL 06823000
         BZ    TINX0C20            NO,                         @D61ADGL 06824000
         USING TLMADR,R9           TLMADR BASE POINTER         @D61ADGL 06825000
         CLI   TINFSAVF+3,TIN#GMNF IS THE A GETFLD REQUEST     @D61ADGL 06826000
         BNE   TINMINF4            NO, ITS A MODFLD            @D61ADGL 06827000
         CLI   TLMMSTAT,X'00'      ANY MOUNT INFORMATION       @D61ADRP 06828000
         BE    TINX0C04            NO,  =====================> @D61ADRP 06829000
         L     R1,TLMECBSV         GET LIBSERV POINTER         @D61ADGL 06830000
         SLR   R0,R0               CLEAR REGISTER              @D61ADRP 06831000
         ICM   R0,3,PBXOWNER       GET DEVICE OWNER INFO       @D61ADRP 06832000
         ICM   R0,4,TLMMSTAT       ADD MOUNT STATUS            @D61ADRP 06833000
         B     TINC0ST0            DONE =====================> @D61ADRP 06834000
TINMINF4 DS    0H                  MODFLD PROCESSING           @D61ADGL 06835000
         CLC   TID,ARTIDH          REQUEST FROM AR-TASK        @D66IDAP 06836000
         BE    TINMINF6            YES, SKIP OWNER CHECK       @D61ADGL 06837000
         DROP  R9                  RELEASE TLMADR BASE         @D61ADRP 06838000
         BAL   R9,TINFCKOW         GET OWNER INFORMATION       @D61ADGL 06839000
*SGLINK  TINFCKOW,INPUT=(R3,R4,R9,RC),WORK=(R0,R2,R7,R8,RB),           *06840000
               OUTPUT=(R1,RF)                                  @D62NDAP 06841000
         C     RF,F4               UNIQUE OWNER                @D61ADGL 06842000
         BNE   TINCOD12            NO,                         @D61ADRP 06843000
         CH    R1,PIK              OWNED BY REQUESTOR          @D61ADGL 06844000
         BNE   TINCOD12            NO,                         @D61ADRP 06845000
         L     R9,PBXLBINF         RESTORE LIBINFO POINTER     @D61ADRP 06846000
         USING TLMADR,R9                                       @D61ADGL 06847000
TINMINF6 DS    0H                                              @D61ADGL 06848000
         LTR   R6,R6               IS NEWVAL ZERO              @D61ADRP 06849000
         BZ    TINMINF7            YES, CHECK FOR TLMECBSV=0   @D61ADRP 06850000
         OC    TLMECBSV,TLMECBSV   TLMECBSV & NEWVAL NOT ZERO  @D61ADRP 06851000
         BZ    TINMINF8            NO, SET NEW VALUE           @D61ADRP 06852000
         B     TINCOD04            YES, =====================> @D61ADRP 06853000
TINMINF7 OC    TLMECBSV,TLMECBSV   TLMECBSV AND NEWVAL ZERO    @D61ADRP 06854000
         BZ    TINCOD08            YES, =====================> @D61ADRP 06855000
TINMINF8 ST    R6,TLMECBSV         AS PROVIDED BY CALLER       @D61ADGL 06856000
         B     TINCOD00            RETURN====================> @D61ADGL 06857000
         DROP  R9                  RELEASE TMLADR BASE         @D61ADGL 06858000
         DROP  R4                  RELEASE PBXADR BASE         @D61NDOW 06859000
         DROP  RD                  RELEASE TINFMINF BASE       @D61NDOW 06860000
***************************************************************@D61IDGL 06861000
*                                                             *@D61IDGL 06862000
*  MODFLD : FIELD=RXEOJPTR    (SET REXX EOJ POINTER)          *@D61IDGL 06863000
*  GETFLD : FIELD=RXEOJPTR    (GET REXX EOJ POINTER)          *@D61IDGL 06864000
*  FUNCTION: SET OR RETRIEVE A POINTER FROM TCB EXTENSION     *@D61IDGL 06865000
*            FOR REXX INTERPRETER PROGRAM                     *@D61IDGL 06866000
*  ON ENTRY: FOR MODFLD THE NEWVAL PARAMETER IS PROVIDED IN   *@D61IDGL 06867000
*    REGISTER R1. NO INPUT EXPECTED FOR GETFLD SERVICE.       *@D61IDGL 06868000
*  ON EXIT:                                                   *@D61IDGL 06869000
*    RF = RETURNCODE. ALWAYS ZERO.                            *@D61IDGL 06870000
*    R1 = FOR GETFLD CONTAINS THE CONTENT OF FIELD TCBXRXEO   *@D61IDGL 06871000
*         IN THE TCB EXTENSION OF THE CURRENT TASK.           *@D61IDGL 06872000
*    R0 = 0                                                   *@D61IDGL 06873000
***************************************************************@D61IDGL 06874000
         USING TCBADR,RA                                       @D61NDGL 06875000
TINFGRXE DS    0H                  START OF CODEBLOCK          @D61IDGL 06876000
TINFMRXE DS    0H                                              @D61IDGL 06877000
         USING TINFGRXE,RD         SET BASE                    @D61IDGL 06878000
         L     R2,TCBATCBE         TAKE PTR TO TCB EXTENSION   @D61IDGL 06879000
         LR    R3,R1               PRESERVE NEWVAL CONTENTS    @D61IDGL 06880000
         L     R1,TCBXRXEO-TCBXADR(,R2) TAKE OLD POINTER       @D61IDGL 06881000
         CLI   TINFSAVF+3,TIN#GRXE IS THIS THE GETFLD CALL?    @D61IDGL 06882000
         BE    TINC0ST1            RETURN WITH RCODE 0 IF YES  @D61IDGL 06883000
         ST    R3,TCBXRXEO-TCBXADR(,R2) SET NEW POINTER        @D61IDGL 06884000
         B     TINCOD00            RETURN WITH RCODE 0         @D61IDGL 06885000
         DROP  RA                  DROP TCBADR                 @D61NDOW 06886000
         DROP  RD                  DROP ROUTINE BASE           @D61NDOW 06887000
         DS    0H                  END OF CODEBLOCK            @D61IDGL 06888000
***************************************************************@D61NNGL 06889000
*                                                             *@D61NNGL 06890000
*  GETFLD : FIELD=REALKEY     (GET STORAGE KEY OF ADDRESS)    *@D61NNGL 06891000
*  FUNCTION: RETRIEVE THE STORAGE KEY OF AN ADDRESS IN        *@D61NNGL 06892000
*            CURRENT SPACE OR ACCESS REGISTER SPACE           *@D61NNGL 06893000
*  ON ENTRY:                                                  *@D61NNGL 06894000
*    R0 = ACCESS LIST ENTRY TOKEN (ALET) TO BE USED OR ZERO   *@D61NNGL 06895000
*    R1 = ADDRESS OF STORAGE LOCATION.                        *@D61NNGL 06896000
*  ON EXIT:                                                   *@D61NNGL 06897000
*    RF = RETURNCODE. 0 IF R1 IS SET, 4 IF ADDRESS INVALID    *@D61NNGL 06898000
*    R1 = STORAGE KEY, IF RF=0. KEY IS IN BYTE 3              *@D61NNGL 06899000
***************************************************************@D61NNGL 06900000
TINFGSTK DS    0H                  START OF CODEBLOCK          @D61NNGL 06901000
         USING TINFGSTK,RD         SET BASE                    @D61NNGL 06902000
         STAM  R1,R1,TINGSTA1      SAVE ACCESS REGS            @D61NNGL 06903000
         ST    R0,TINGSTN1         STORE ACCESS REG            @D61NNGL 06904000
         LAM   R1,R1,TINGSTN1      SET ACCESS REG 1 CORRECTLY  @D61NNGL 06905000
         SAC   512                 SET ON ACCESS REG MODE      @D61NNGL 06906000
         LRA   R7,0(,R1)           TAKE REAL ADDRESS           @D61NNGL 06907000
         BC    8,TINGSTK4          BR IF VALID REAL ADDRESS    @D61NNGL 06908000
         BC    4,TINGSTK2          BR IF SEGMENT ENTRY INVALID @D61NNGL 06909000
         BC    2,TINGSTK6          BR IF PAGE TABLE ENTRY INV. @D61NNGL 06910000
*        BC    1,TINGSTK2          PERFORM NEXT SEQU. INSTRUCT.@DA44628 06911000
TINGSTK2 SAC   0                   ACCESS MODE OFF             @D61NNGL 06912000
TINGSTK3 LAM   R1,R1,TINGSTA1      RESTORE OLD ACCESS REG      @DA44628 06913000
         B     TINX0C04            RETURN WITH RCODE 4         @D61NNGL 06914000
TINGSTK4 SAC   0                   SET ACCESS MODE OFF         @D61NNGL 06915000
         XR    R8,R8               PURGE FOR ISKE              @D61NNGL 06916000
         ISKE  R8,R7               INSERT STORAGE KEY (PCK ??) @D61NNGL 06917000
TINGSTK5 ST    R8,TINFSAV1         SET RETURN VALUE            @D61NNGL 06918000
         NI    TINFSAV1+3,X'F0'    RESET UNUSED BITS IN KEY    @D61RDGL 06919000
         LAM   R1,R1,TINGSTA1      RESTORE OLD ACCESS REG      @D61NNGL 06920000
         B     TINCOD00            RETURN WITH RCODE 0         @D61NNGL 06921000
*                                                                       06922000
*    ADDRESS IS VALID, BUT WOULD CAUSE PAGE FAULT.                      06923000
*                                                                       06924000
TINGSTK6 SAC   0                   SET OFF ACCESS MODE         @D61NNGL 06925000
         XR    R8,R8               PURGE FOR INSERT            @D61NNGL 06926000
         STNSM PSWMASK,XFF-DATMASK SET OFF DAT                 @D61NNGL 06927000
         TM    PTESTAT-PTE(R7),PTEINVAD IS ADDRESS INVALID?    @D61NNGL 06928000
         BO    TINGSTK7                                        @D61NNGL 06929000
         IC    R8,PTEKEY-PTE(,R7)  INSERT STORAGE KEY          @D61NNGL 06930000
         STOSM PSWMASK,DATMASK     SET DAT ON AGAIN            @D61NNGL 06931000
         B     TINGSTK5            BRANCH TO RETURN            @D61NNGL 06932000
TINGSTK7 STOSM PSWMASK,DATMASK     SET DAT ON AGAIN            @D61NNGL 06933000
         B     TINGSTK3                                        @D61NNGL 06934000
*                                  END OF CODEBLOCK            @D61NNGL 06935000
TINGSTA1 DC    A(0)                                            @D61NNGL 06936000
TINGSTN1 DC    A(0)                                            @D61NNGL 06937000
         DROP  RD                  RELEASE BASE REGISTER RD    @D61NNGL 06938000
*---------------------------------------------------------------------- 06939000
*  GETFLD : FIELD=DSPACE      (GET DATA SPACE INFORMATION)              06940000
*  FUNCTION: RETRIEVE                                                   06941000
*            - TOTAL AMOUNT OF VIRTUAL STORAGE WHICH                    06942000
*            MAY BE ALLOCATED BY DATA SPACES IN A PARTITION             06943000
*            - DEFAULT SIZE FOR CREATION OF A SINGLE DATA SPACE         06944000
*  ON ENTRY:                                                            06945000
*    R0 = PIK OR ZERO                                                   06946000
*  ON EXIT:                                                             06947000
*    RF = RETURNCODE. ALWAYS ZERO                                       06948000
*    R0 = DFSIZE FROM SYSDEF-COMMAND                                    06949000
*    R1 = PCBDSPAC                                                      06950000
*---------------------------------------------------------------------- 06951000
TINFDSPA DS    0H                                              @D61EDOW 06952000
         USING TINFDSPA,RD         ROUTINE BASE                @D61EDOW 06953000
         BAL   R9,TINFGPIK          GET AND CHECK PIK          @D61EDOW 06954000
*SGLINK  TINFGPIK,INPUT=(R0,R9,RC),WORK=R0,OUTPUT=R2                    06955000
         B     TINFCNPK             ERROR (ILLEGAL PIK)        @D61EDOW 06956000
         BAL   R9,TINFGPCB          AND POINT TO PARTITION PCB @D61EDOW 06957000
*SGLINK  TINFGPCB,INPUT=(R2,R9,RC),OUTPUT=R5                            06958000
         B     TINX1C16             ERROR (DYN.PART.NOT ALLOC.)@D61EDOW 06959000
         NOP   0                    IGN.  STAT.PART.NOT ALLOC. @D61EDOW 06960000
         USING PCBADR,R5                                       @D61EDOW 06961000
         L     R1,PCBDSPAC         LIMIT FOR SUM OF SIZE OF    @D61EDOW 06962000
***                                ALL DATA SPACES             @D61EDOW 06963000
         DROP  R5                                              @D61EDOW 06964000
         L     R2,IJBDSICB         GET ADDR OF DATA SPACE CB   @D61EDOW 06965000
         USING DSINFOTB,R2                                     @D61EDOW 06966000
         L     R0,DSSDDFSZ         DEFAULT DATA SPACE SIZE     @D61EDOW 06967000
         SRL   R0,2                ... IN MULTIPLE OF 4K       @D61EDOW 06968000
         B     TINC0ST0                                        @D61EDOW 06969000
         DROP  R2                                              @D61EDOW 06970000
         DROP  RD                  RELEASE BASE REGISTER RD    @D61EDOW 06971000
*                                                                       06972000
*---------------------------------------------------------------------- 06973000
*   MODFLD FIELD = RID             CHANGE RID                           06974000
*          CHANGE RID (ROUTINE ID IN LOC X'242') TO SPECIFIED VALUE     06975000
*  ON ENTRY:                                                            06976000
*    R1 = RID                                                           06977000
*  ON EXIT:                                                             06978000
*    RF = RETURNCODE. ALWAYS ZERO                                       06979000
*---------------------------------------------------------------------- 06980000
TINFRIDE DS    0H                  START OF CODEBLOCK                   06981000
         USING TINFRIDE,RD         ROUTINE BASE                @D61EDOW 06982000
         USING PCBADR,R5           PCBPTR IS INPUT             @D61EDOW 06983000
         USING TIBADR,R8           TIBPTR IS INPUT             @D61EDOW 06984000
         USING TCBADR,RA           TCBPTR IS INPUT             @D61EDOW 06985000
         LA    RB,TINFRID1         CONTINUATION ADDRESS        @D61EDOW 06986000
         BAL   R9,TINFAUTV         NO, VTAM REQUEST            @D61EDOW 06987000
*SGLINK  TINFAUTV,INPUT=(R5,R9,RA,RB,RC)                                06988000
         B     TINFCNAU            NO, TAKE ERROR EXIT         @D61EDOW 06989000
TINFRID1 DS    0H                                              @D61EDOW 06990000
         L     R9,TCBATCBE         GET ADDR OF TCB EXTENSION   @D61EDOW 06991000
         USING TCBXADR,R9                                      @D61EDOW 06992000
         STCTL CRF,CRF,TINFRIDS    GET CURRENT LINK STACK ENTRY@D62ADOW 06993000
         L     R4,TINFRIDS                                     @D62ADOW 06994000
         LA    R2,RESVCID          RID X'10' ALLOWED           @D61EDOW 06995000
         CLI   TINFRID+1,REENTRID  ... IF CALLER IS RID X'04'  @D61EDOW 06996000
         BE    TINFRID2            ---> OK                     @D61EDOW 06997000
         ICM   R4,15,TCBXTLSA      GET USERS LINK STACK ENTRY  @D61EDOW 06998000
         BZ    TINFCNRI            NOT SAVED, ERROR EXIT       @D61EDOW 06999000
         LA    R2,REENTRID         RID X'04' ALLOWED           @D61EDOW 07000000
         CLI   TINFRID+1,USERTID   ... IF CALLER IS RID X'08'  @D61EDOW 07001000
         BE    TINFRID2            ,,, OR                      @D61EDOW 07002000
         CLI   TINFRID+1,RESVCID   ... IF CALLER IS RID X'10'  @D61EDOW 07003000
         BNE   TINFCNRI            TAKE ERROR EXIT             @D61EDOW 07004000
TINFRID2 DS    0H                                              @D61EDOW 07005000
         CR    R2,R1               CHECK ALLOWED AGAINST       @D61EDOW 07006000
***                                REQUESTED RID                        07007000
         BNE   TINFCNRI            NOT EQUAL ---> ERR21        @D61EDOW 07008000
         CLI   TINFRID+1,REENTRID  FROM RID 4 TO RID 16        @D61EDOW 07009000
         BNE   TINFRID3            NO, --->                    @D61EDOW 07010000
****                               HANDLE FROM RID 4 TO RID 16          07011000
         ST    R4,TCBXTLSA         SAVE CURRENT LINK STACK ENTR@D62ADOW 07012000
         B     TINFRID4                                        @D61EDOW 07013000
TINFRID3 DS    0H                  HANDLE FROM RID 8|16 TO 4   @D61EDOW 07014000
         ST    R4,TCBX1CRF         SET UP LINKAGE STACK        @D61EDOW 07015000
         XC    TCBXTLSA,TCBXTLSA   INDICATE ENTRY NOT SAVED    @D61RDOW 07016000
         C     R4,TINFRIDS         SAVED AND CURRENT EQUAL?    @D61EDOW 07017000
         BNE   TINFCNRI            NOT EQUAL ---> ERR21        @D61EDOW 07018000
TINFRID4 DS    0H                                              @D61EDOW 07019000
         DROP  R9                  DROP TCBXADR                @D61EDOW 07020000
         STH   R1,TINFRID          CONTINUE WITH SPECIFIED RID @D61EDOW 07021000
         B     TINFEXIT            RETURN TO CALLER            @D61EDOW 07022000
TINFRIDS DC    A(0)                WORK FIELD                  @D61EDOW 07023000
         DROP  R5                  DROP PCBADR                 @D61EDOW 07024000
         DROP  R8                  DROP TIBADR                 @D61EDOW 07025000
         DROP  RA                  DROP TCBADR                 @D61EDOW 07026000
         DROP  RD                  DROP ROUTINE BASE           @D61EDOW 07027000
*                                  END OF CODEBLOCK                     07028000
*--------------------------------------------------------------@D62ADMK 07029000
*   GETFLD : FIELD=PTRACE                                      @D62ADMK 07030000
*     CHECK IF INTERACVTIVE TRACE PROGRAM IS INITIALIZED       @D62ADMK 07031000
*   ON ENTRY: R0 = PIK OR 0 FOR CURRENT PARTITION              @D62ADMK 07032000
*   ON EXIT : RF = 0  IF NO TRACE IS ACTIVE                    @D62ADMK 07033000
*           : RF = 16 IF TRACE IS ACTIVE                       @D62ADMK 07034000
*--------------------------------------------------------------@D62ADMK 07035000
TINFGPTC DS    0H                  START OF CODEBLOCK                   07036000
         USING TINFGPTC,RD         BASE LOADED AT BRANCH TIME  @D62ADMK 07037000
         BAL   R9,TINFGPIK         GET/CHECK REQUESTED PIK     @D62ADMK 07038000
*SGLINK  TINFGPIK,INPUT=(R0,R9,RC),WORK=R0,OUTPUT=R2                    07039000
         B     TINFCNPK            ERROR (ILLEGAL PIK)         @D62ADMK 07040000
         BAL   R9,TINFGPCB         GET PCB POINTER             @D62ADMK 07041000
*SGLINK  TINFGPCB,INPUT=(R2,R9,RC),OUTPUT=R5                            07042000
         B     TINCOD16            ERROR (DYN.PART.NOT ALLOC.) @D62ADMK 07043000
         NOP   0                   * IGN.STAT.PART.NOT ALLOCAT.@D62ADMK 07044000
         USING PCBADR,R5                                       @D62ADMK 07045000
         L     R0,PCBATRAX         GET ADDR OF TRACE TABLE     @D62ADMK 07046000
         LTR   R0,R0               TRACE TABLE AVAILABLE       @D62ADMK 07047000
         BNZ   TINCOD16            YES                         @D62ADMK 07048000
         B     TINCOD00            EXIT / NO OUTPUT            @D62ADMK 07049000
         DROP  R5                  DROP PCBADR                 @D62ADMK 07050000
         DROP  RD                  RELEASE BASE REGISTER RD    @D62ADMK 07051000
*--------------------------------------------------------------@D62ADMK 07052000
*   MODFLD : FIELD=IPWSEGM                                     @D62ADMK 07053000
*     SET TIBFLAG5 BIT TIBSEGM (X'40')                                  07054000
*   OF CURRENT TASK                                                     07055000
*   ON EXIT : RF = ALWAYS 0                                    @D62ADMK 07056000
*--------------------------------------------------------------@D62ADMK 07057000
         USING TIBADR,R8           CURRENT TIB                 @D62ADMK 07058000
TINFIPWS DS    0H                  START OF CODEBLOCK                   07059000
         USING TINFIPWS,RD         BASE LOADED AT BRANCH TIME  @D62ADMK 07060000
         OI    TIBFLAG5,TIBSEGM    IPWSEGM REQUEST             @D62ADMK 07061000
         B     TINCOD00            EXIT / RC = 0               @D62ADMK 07062000
         DROP  R8                  CURRENT TIB                 @D62ADMK 07063000
         DROP  RD                  RELEASE BASE REGISTER RD    @D62ADMK 07064000
*--------------------------------------------------------------@D62ADMK 07065000
*   GETFLD : FIELD=UCB                                         @D62ADMK 07066000
*   ON ENTRY: R0 = CUU, FOR WHICH INFORMATION IS TO BE RETRIEVEDD62ADMK 07067000
*   ON ENTRY: R1 = USER'S ADDRESS OF UCB COPY                  @D62ADMK 07068000
*   ON EXIT : R1 = 0  AN ATTENTION ADDRESS IS ALREADY SET      @D62ADMK 07069000
*                     ELSE R1 = R1 FROM INPUT                  @D62ADMK 07070000
*           : RF = 0  INFORMATION RETIRVED                     @D62ADMK 07071000
*           : RF = 16 NO INFO FOR THIS CUU                     @D62ADMK 07072000
*--------------------------------------------------------------@D62ADMK 07073000
UCBCMSEG DSECT                     UCB MAPPING, COMMON SEGMENT          07074000
         DS    3B                  RESERVED                             07075000
UCBSTAT  DS    BL1                 DEVICE STATUS                        07076000
UCBONLI  EQU   X'80'               DEVICE IS ONLINE                     07077000
UCBALOC  EQU   X'08'               DEVICE IS ALLOCATED                  07078000
UCBCHAN  DS    FL2                 BINARY DEVICE NUMBER                 07079000
UCBFLA   DS    BL1                 I/O SUPERVISOR FLAG BYTE A           07080000
UCBBOX   EQU   X'01'               THIS DEVICE HAS BEEN FORCED OFFLINE  07081000
         DS    BL1                 RESERVED                             07082000
UCBPBIDX DS    H                   PUB INDEX                            07083000
         ORG   UCBPBIDX            MVS MAPPING                          07084000
UCBNXUCB DS    F                   ADDRESS OF THE NEXT UCB              07085000
         DS    F                   RESERVED                             07086000
         DS    H                   RESERVED                             07087000
UCBOBR   DS    H                   OBR                                  07088000
UCBEND   EQU   *-UCBCMSEG          LENGTH                               07089000
*                                  DUE TO AN ERROR                      07090000
&SYSECT  CSECT                                                          07091000
TINFUCBS DS    0H                  START OF CODEBLOCK                   07092000
         USING TINFUCBS,RD         BASE LOADED AT BRANCH TIME  @D62ADMK 07093000
         LA    R2,UCBEND           USER'S UCB AREA LENGTH      @D62ADMK 07094000
         AR    R2,R1               USER'S UCB LAST BYTE        @D62ADMK 07095000
         L     R6,DISPAD           ADDRESSABILITY              @D62ADMK 07096000
         USING DISP,R6             ADDRESSABILITY              @D62ADMK 07097000
         BAL   R8,VALIDSVA         SIZE IN R2                  @D62ADMK 07098000
*SGLINK VALIDSVA,INPUT=(R1,R2,R6,R8),WORK=(R2,R5,R8)                    07099000
         DROP  R6                  ADDRESSABILITY              @D62ADMK 07100000
         LR    R2,R1               USER'S UCB AREA             @D62ADMK 07101000
         USING UCBCMSEG,R2         ADDRESSABILITY              @D62ADMK 07102000
         STH   R0,UCBCHAN          INITIALIZE                  @D62ADMK 07103000
         XC    UCBSTAT,UCBSTAT     INITIALIZE                  @D62ADMK 07104000
         XC    UCBFLA,UCBFLA       INITIALIZE                  @D62ADMK 07105000
         XC    UCBPBIDX,UCBPBIDX   INITIALIZE                  @D62ADMK 07106000
         BAL   R9,TINFCUUP         GET POINTER TO PUB          @D62ADMK 07107000
*SGLINK  TINFCUUP,INPUT=(R0,R9,RC),WORK=(R1,R8,RA),OUTPUT=R3            07108000
TINFUCBB DS    0H                  BOXED CHECK                 @D62ADMK 07109000
         B     TINCOD16            ERROR CUU NOT FOUND         @D62ADMK 07110000
         USING PUBADR,R5           ADDRESSABILITY              @D62ADMK 07111000
         LR    R5,3                TRANSFORM TO                @D62ADMK 07112000
         SLL   R5,3                TRANSFORM TO                @D62ADMK 07113000
         AH    R5,YPUBTAB          PUB ADDRESS                 @D62ADMK 07114000
         CLC   PUBCHANN,UCBCHAN    IS IT REALLY THIS CUU?      @D62ADMK 07115000
         BNE   TINCOD16            ERROR CUU NOT FOUND         @D62ADMK 07116000
         CLI   PUBJCFLG,PUBDVCUP   IS DEVICE UP?                        07117000
         BE    TINFUCBO            YES, CHECK IF OPERATIONAL   @D62ADMK 07118000
         OI    UCBFLA,UCBBOX       DEVICE IN ERROR (BOXED)     @D62ADMK 07119000
         DROP  R5                  ADDRESSABILITY              @D62ADMK 07120000
TINFUCBO DS    0H                  OPERATIONAL CHECK           @D62ADMK 07121000
         SLR   R5,R5               CLEAR                       @D62ADMK 07122000
         BAL   R9,TINFGPBX         CALL, GET PUBX POINTER ==>> @D62ADMK 07123000
*SGLINK  TINFGPBX,INPUT=(R3,R9,RC),OUTPUT=R4                            07124000
         USING PBXADR,R4           ADDRESSABILITY              @D62ADMK 07125000
         MVC   UCBOBR,PBXOBR       OBR                         @D62ADMK 07126000
         CLC   PBXSCH,XFFFF        IS DEVICE OPERATIONAL?      @D62ADMK 07127000
         BE    TINFUCBA            NO                          @D62ADMK 07128000
         OI    UCBSTAT,UCBONLI     DEVICE OPERATIONAL          @D62ADMK 07129000
         ICM   R5,15,PBXATTIB      GET ATTENTION TASK          @D62ADMK 07130000
         DROP  R4                  ADDRESSABILITY              @D62ADMK 07131000
TINFUCBA DS    0H                  ALLOCATED CHECK             @D62ADMK 07132000
         STH   R3,UCBPBIDX         PUT PUB INDEX IN USER'S UCB @D62ADMK 07133000
         BAL   R9,TINFCKOW         CALL, CHECK DEVICE OWNER=>> @D62ADMK 07134000
*SGLINK  TINFCKOW,INPUT=(R3,R4,R9,RC),WORK=(R0,R2,R7,R8,RB),           *07135000
               OUTPUT=(R1,RF)                                  @D62NDMK 07136000
         LTR   R15,R15             ANY OWNER?                  @D62ADMK 07137000
         BZ    TINFUCBX            NO                          @D62ADMK 07138000
         OI    UCBSTAT,UCBALOC     DEVICE ASSIGNED (ALLOCATED) @D62ADMK 07139000
TINFUCBX DS    0H                                              @D62ADMK 07140000
         LTR   R5,R5               WAS ATTENTION ADDRESS THERE @D62ADMK 07141000
         BNZ   TINX1C00            YES, EXIT WITH CLEAR R1     @D62ADMK 07142000
         B     TINCOD00            EXIT / NO OUTPUT            @D62ADMK 07143000
         DROP  R2                  ADDRESSABILITY              @D62ADMK 07144000
         DROP  RD                  RELEASE BASE REGISTER RD    @D62ADMK 07145000
         B     TINCOD00            EXIT / RC = 0               @D62ADMK 07146000
*--------------------------------------------------------------@D63ADMK 07147000
*   GETFLD : FIELD=ACEEPTR                                     @D63ADMK 07148000
*     GET ACCESSOR ENVIRONMENT ELEMENT (ACEE)                  @D63ADMK 07149000
*   ON EXIT : R0 = 0  NO ACEE FOUND                            @D63ADMK 07150000
*           : R0 = 1  ACEE FOUND AT TASK                       @D63ADMK 07151000
*           : R0 = 2  ACEE FOUND AT PARTITION                  @D63ADMK 07152000
*           : R0 = 4  ACEE FOUND AT TASK JPL                   @D63ADMK 07153000
*           : R0 = 8  ACEE FOUND AT PARTITION JPL              @D63ADMK 07154000
*           : R0 = 256 DTSECTAB UID AT PARTITION JPL FOUND     @D64ADMK 07155000
*           : R1 = 0  NO ACEE FOUND                            @D63ADMK 07156000
*           : R1 ELSE: ADDRESS OF CURRENT ACEE                 @D63ADMK 07157000
*           : RF = 0  INFORMATION RETIRVED                     @D63ADMK 07158000
*           : RF = 8  NO ACEE FOR THIS TASK                    @D63ADMK 07159000
*--------------------------------------------------------------@D63ADMK 07160000
TINFACEG DS    0H                                                       07161000
         USING TINFACEG,RD         BASE LOADED AT BRANCH TIME  @D63ADMK 07162000
         SLR   R15,R15             CLEAR ACEE RETURN REGISTER  @D63ADMK 07163000
         LA    RB,TINFACG0         CONTINUATION ADDRESS        @D63ADMK 07164000
         BAL   R9,TINFAUVE         SYSTEM REQUEST              @D64ADMK 07165000
*SGLINK  TINFAUTS,INPUT=(R8,R9,RB,RC)                          @D64ADMK 07166000
         BAL   R9,TINFAUTJ         NO, JCL REQUEST             @D64ADMK 07167000
*SGLINK  TINFAUTV,INPUT=(R5,R9,RA,RB,RC)                       @D64ADMK 07168000
         L     R5,PCBPTR           CURRENT PCB                 @D51RMGL 07169000
         USING PCBADR,R5                                       @D51RMGL 07170000
         CLI   PCBSSFLG,ZERO       *       ANY SUBSYSTEM?      @D64ADMK 07171000
         BNE   TINFACG0            *                           @D64ADMK 07172000
         DROP  R5                                              @D64ADMK 07173000
         B     TINFCNAU            NO, TAKE ERROR EXIT         @D51RMGL 07174000
TINFACG0 DS    0H                                              @D63ADMK 07175000
         SLR   R2,R2               CLEAR LOCATION RETURN REGISTER63ADMK 07176000
*        EQU   X'08'               ACEE CONNECTED TO PARTITION JPL3ADMK 07177000
*        EQU   X'04'               ACEE CONNECTED TO TASK JPL  @D63ADMK 07178000
*        EQU   X'02'               ACEE CONNECTED TO PARTITION @D63ADMK 07179000
*        EQU   X'01'               ACEE CONNECTED TO TASK      @D63ADMK 07180000
*        EQU   X'00'               NO ACEE SET                 @D63ADMK 07181000
         USING TCBADR,R10          ADDRESS TCB                 @D63ADMK 07182000
         ICM   R3,15,TCBUCNTL      GET CURRENT JPL             @D63ADMK 07183000
         BZ    TINFACGB            NO JPL ADDRESS              @D63ADMK 07184000
         USING DTSJPL,R3           ADDRESS JPL                 @D63ADMK 07185000
         ICM   R15,15,JPUCNTL      GET ACEE ADDRESS            @D63ADMK 07186000
         BZ    TINFACGB            NO ACEE AT JPL              @D63ADMK 07187000
         DROP  R3                  RELEASE JPL                 @D63ADMK 07188000
         LA    R2,X'04'            ACEE ADDRESS FOUND AT TASK JPL63ADMK 07189000
         B     TINFACGX            ACEE ADDRESS SAVED IN R15   @D63ADMK 07190000
TINFACGB DS    0H                  NO ACEE AT JPL FOUND        @D63ADMK 07191000
         L     R3,TCBATCBE         GET TCBX ADDRESS            @D63ADMK 07192000
         USING TCBXADR,R3          ADDRESS TCBX                @D63ADMK 07193000
         ICM   R15,15,TCBXSENV     GET ACEE ADDRESS            @D63ADMK 07194000
         BZ    TINFACGA            NO ACEE FROM TASK           @D63ADMK 07195000
         LA    R2,X'01'            ACEE ADDRESS AT TASK FOUND  @D63ADMK 07196000
         B     TINFACGX            ACEE ADDRESS SAVED IN R15   @D63ADMK 07197000
************************************************************** @D63ADMK 07198000
*      TASK HAS NOT PROVIDED AN ACEE ADDRESS.                  @D63ADMK 07199000
*      GET ACEE ADDRESS FROM CURRENT PARTITION.                @D63ADMK 07200000
************************************************************** @D63ADMK 07201000
TINFACGA DS    0H                                              @D63ADMK 07202000
         USING TIBADR,R8           ADDRESS TIB                 @D63ADMK 07203000
         TM    TIBFLAG2,ICCFPP     IS IT AN ICCF PSEUDO PARTITION63ADMK 07204000
         BNO   TINFACGC            NO, LOOK FOR NORMAL PARTITIOND63ADMK 07205000
         DROP  R8                  RELEASE TIB                 @D63ADMK 07206000
         ICM   R4,15,TCBXICOM      GET ICCF PP COMREG ADDRESS  @D63ADMK 07207000
         BZ    TINFACGX            NO ICCF COMREG ADDRESS      @D63ADMK 07208000
         DROP  R3                  RELEASE TCBX                @D63ADMK 07209000
         DROP  R10                 RELEASE TCB                 @D63ADMK 07210000
         B     TINFACGD            ICCF COMREG ADDRESS LOADED  @D63ADMK 07211000
TINFACGC L     R4,CRADDR           GET COMREG ADDRESS          @D63ADMK 07212000
         USING COMREG,R4           ADDRESS COMREG              @D63ADMK 07213000
TINFACGD ICM   R1,15,IJBJPL        GET CURRENT JPL             @D63ADMK 07214000
         BZ    TINFACGE            NO JPL ADDRESS              @D63ADMK 07215000
         USING DTSJPL,R1           ADDRESS JPL                 @D63ADMK 07216000
         ICM   15,15,JPUCNTL       GET ACEE ADDRESS            @D63ADMK 07217000
         BZ    TINFACGE            NO ACEE AT JPL              @D63ADMK 07218000
         L     R3,FWDALLF          SET USED BY DTSECTAB MASK   @D64ADMK 07219000
         CLR   R3,R15              HAS THE JPL A DTSECTAB USERIDD64ADMK 07220000
         BE    TINFACGF            NO ACEE AT JPL BUT OTHER USERD64ADMK 07221000
         DROP  R1                  RELEASE JPL                 @D63ADMK 07222000
         LA    R2,X'08'            ACEE ADDRESS AT PARTITION JPLD63ADMK 07223000
         B     TINFACGX            ACEE ADDRESS SAVED IN R15   @D63ADMK 07224000
TINFACGE DS    0H                  NO ACEE AT JPL FOUND        @D63ADMK 07225000
         ICM   R15,15,IJBSENV      GET ACEE ADDRESS            @D63ADMK 07226000
         BZ    TINFACGX            NO ACEE FROM PARTITION      @D63ADMK 07227000
         LA    R2,X'02'            ACEE ADDRESS AT PARTITION FOUND3ADMK 07228000
         B     TINFACGX            ACEE ADDRESS SAVED IN R15   @D63ADMK 07229000
TINFACGF DS    0H                  NO ACEE AT JPL BUT OTHER USERID4ADMK 07230000
         SLR   R15,R15             CLEAR                       @D64ADMK 07231000
         LA    R2,X'0100'          DTSECTAB UID AT PARTITION F.@D64ADMK 07232000
         DROP  R4                  RELEASE COMREG              @D63ADMK 07233000
************************************************************** @D63ADMK 07234000
*      TERMINATE                                               @D63ADMK 07235000
************************************************************** @D63ADMK 07236000
TINFACGX DS    0H                                              @D63ADMK 07237000
         ST    R2,TINFSAV0         DETAILED INFO IN USER R0    @D63ADMK 07238000
         ST    R15,TINFSAV1        ACEE ADDRESS IN USER R1     @D63ADMK 07239000
         SLR   R2,R2               DEFAULT RETURN CODE         @D63ADMK 07240000
         LTR   R15,R15             ACEEADDR THERE?             @D63ADMK 07241000
         BNZ   TINFACGY            YES                         @D63ADMK 07242000
         LA    R2,8                RETURN CODE: NO ACEE        @D63ADMK 07243000
TINFACGY ST    R2,TINFSAVF         RETURN CODE IN USER F15     @D63ADMK 07244000
         B     TINFEXI1            EXIT                        @D63ADMK 07245000
         DROP  RD                  BASE                        @D63ADMK 07246000
*--------------------------------------------------------------@D63ADMK 07247000
*   MODFLD : FIELD=ACEEPTR                                     @D63ADMK 07248000
*     MODIFY ACCESSOR ENVIRONMENT ELEMENT (ACEE) ADDRESS FIELD @D63ADMK 07249000
*   ON ENTRY: R1  = 0, REMOVE ACEE OF CURRENT TASK             &D63ADMK 07250000
*   ON ENTRY: R1 <> 0, CONNECT CURRENT TASK TO THIS ACEE       &D63ADMK 07251000
*   ON EXIT : R0 = 0, NO ACEE CONNECTED/CLEARED                @D63ADMK 07252000
*           : R0 = 1, ACEE CONNECTED TO/CLEARED FOR TASK       @D63ADMK 07253000
*           : R0 = 2, ACEE CONNECTED TO/CLEARED FOR PARTITION  @D63ADMK 07254000
*           : R0 = 4, ACEE CONNECTED TO/CLEARED FOR TASK JPL   @D63ADMK 07255000
*           : R0 = 8, ACEE CONNECTED TO/CLEARED FOR PARTITON JPLD63ADMK 07256000
*           : R0 =10, ACEE CONNECTED TO/CLEARED FOR MVS TCB    @D63ADMK 07257000
*           : R0 =20, ACEE CONNECTED TO/CLEARED FOR MVS ASXB   @D63ADMK 07258000
*           : R1 = 0, CLEAR: NO ACEE FOUND                     @D63ADMK 07259000
*           : R1 <> 0, CLEAR: ADDRESS OF REMOVED ACEE          @D63ADMK 07260000
*           : RF = 0  INFORMATION RETIRVED                     @D63ADMK 07261000
*           : RF = 8  NO ACEE FOR THIS TASK                    @D63ADMK 07262000
*--------------------------------------------------------------@D63ADMK 07263000
TINFACEM DS    0H                                                       07264000
         USING TINFACEM,RD         BASE LOADED AT BRANCH TIME  @D63ADMK 07265000
         LA    RB,TINFACMX         CONTINUATION ADDRESS        @D63ADMK 07266000
         BAL   R9,TINFAUVE         SYSTEM REQUEST/VENDOR       @D64ADMK 07267000
*SGLINK  TINFAUTS,INPUT=(R8,R9,RB,RC)                          @D64ADMK 07268000
         BAL   R9,TINFAUTJ         NO, JCL REQUEST             @D64ADMK 07269000
*SGLINK  TINFAUTV,INPUT=(R5,R9,RA,RB,RC)                       @D64ADMK 07270000
         L     R5,PCBPTR           CURRENT PCB                 @D51RMGL 07271000
         USING PCBADR,R5                                       @D51RMGL 07272000
         CLI   PCBSSFLG,ZERO       *       ANY SUBSYSTEM?      @D64ADMK 07273000
         BNE   TINFACMX            *                           @D64ADMK 07274000
         DROP  R5                                              @D64ADMK 07275000
         B     TINFCNAU            NO, TAKE ERROR EXIT         @D51RMGL 07276000
TINFACMX DS    0H                                              @D63ADMK 07277000
         LTR   R1,R1               IS IT CLEAR FUNCTION?       @D63ADMK 07278000
         BNZ   TINFACS             NO IT'S SET                 @D63ADMK 07279000
*********************************************************************** 07280000
*      CLEAR FUNCTION                                          @D63ADMK 07281000
*********************************************************************** 07282000
*********************************************************************** 07283000
*      FIRST DO INTERNAL GET                                   @D63ADMK 07284000
*********************************************************************** 07285000
         SLR   R2,R2               CLEAR LOCATION RETURN REGISTER63ADMK 07286000
*        EQU   X'08'               ACEE CONNECTED TO PARTITION JPL3ADMK 07287000
*        EQU   X'04'               ACEE CONNECTED TO TASK JPL  @D63ADMK 07288000
*        EQU   X'02'               ACEE CONNECTED TO PARTITION @D63ADMK 07289000
*        EQU   X'01'               ACEE CONNECTED TO TASK      @D63ADMK 07290000
*        EQU   X'00'               NO ACEE SET                 @D63ADMK 07291000
         USING TCBADR,R10          ADDRESS TCB                 @D63ADMK 07292000
         ICM   R3,15,TCBUCNTL      GET CURRENT JPL             @D63ADMK 07293000
         BZ    TINFACFB            NO JPL ADDRESS              @D63ADMK 07294000
         USING DTSJPL,R3           ADDRESS JPL                 @D63ADMK 07295000
         ICM   R15,15,JPUCNTL      GET ACEE ADDRESS            @D63ADMK 07296000
         BZ    TINFACFB            NO ACEE AT JPL              @D63ADMK 07297000
         DROP  R3                  RELEASE JPL                 @D63ADMK 07298000
         LA    R2,X'04'            ACEE ADDRESS FOUND AT TASK JPL63ADMK 07299000
         B     TINFACFX            ACEE ADDRESS SAVED IN R15   @D63ADMK 07300000
TINFACFB DS    0H                  NO ACEE AT JPL FOUND        @D63ADMK 07301000
         L     R3,TCBATCBE         GET TCBX ADDRESS            @D63ADMK 07302000
         USING TCBXADR,R3          ADDRESS TCBX                @D63ADMK 07303000
         ICM   R15,15,TCBXSENV     GET ACEE ADDRESS            @D63ADMK 07304000
         BZ    TINFACFA            NO ACEE FROM TASK           @D63ADMK 07305000
         LA    R2,X'01'            ACEE ADDRESS AT TASK FOUND  @D63ADMK 07306000
         B     TINFACFX            ACEE ADDRESS SAVED IN R15   @D63ADMK 07307000
************************************************************** @D63ADMK 07308000
*      TASK HAS NOT PROVIDED AN ACEE ADDRESS.                  @D63ADMK 07309000
*      GET ACEE ADDRESS FROM CURRENT PARTITION.                @D63ADMK 07310000
************************************************************** @D63ADMK 07311000
TINFACFA DS    0H                                              @D63ADMK 07312000
         USING TIBADR,R8           ADDRESS TIB                 @D63ADMK 07313000
         TM    TIBFLAG2,ICCFPP     IS IT AN ICCF PSEUDO PARTITION63ADMK 07314000
         BNO   TINFACFC            NO, LOOK FOR NORMAL PARTITIOND63ADMK 07315000
         ICM   R4,15,TCBXICOM      GET ICCF PP COMREG ADDRESS  @D63ADMK 07316000
         BZ    TINFACFX            NO ICCF COMREG ADDRESS      @D63ADMK 07317000
         DROP  R3                  RELEASE TCBX                @D63ADMK 07318000
         B     TINFACFD            ICCF COMREG ADDRESS LOADED  @D63ADMK 07319000
TINFACFC L     R4,CRADDR           GET COMREG ADDRESS          @D63ADMK 07320000
         USING COMREG,R4           ADDRESS COMREG              @D63ADMK 07321000
TINFACFD ICM   R1,15,IJBJPL        GET CURRENT JPL             @D63ADMK 07322000
         BZ    TINFACFE            NO JPL ADDRESS              @D63ADMK 07323000
         USING DTSJPL,R1           ADDRESS JPL                 @D63ADMK 07324000
         ICM   15,15,JPUCNTL       GET ACEE ADDRESS            @D63ADMK 07325000
         BZ    TINFACFE            NO ACEE AT JPL              @D63ADMK 07326000
         L     R3,FWDALLF          SET USED BY DTSECTAB MASK   @D64ADMK 07327000
         CLR   R3,R15              HAS THE JPL A DTSECTAB USERIDD64ADMK 07328000
         BE    TINFACFX            NO ACEE AT JPL BUT OTHER USERD64ADMK 07329000
         DROP  R1                  RELEASE JPL                 @D63ADMK 07330000
         LA    R2,X'08'            ACEE ADDRESS AT PARTITION JPLD63ADMK 07331000
         B     TINFACFX            ACEE ADDRESS SAVED IN R15   @D63ADMK 07332000
TINFACFE DS    0H                  NO ACEE AT JPL FOUND        @D63ADMK 07333000
         ICM   R15,15,IJBSENV      GET ACEE ADDRESS            @D63ADMK 07334000
         BZ    TINFACFX            NO ACEE FROM PARTITION      @D63ADMK 07335000
         LA    R2,X'02'            ACEE ADDRESS AT PARTITION FOUND3ADMK 07336000
         DROP  R4                  RELEASE COMREG              @D63ADMK 07337000
TINFACFX DS    0H                                              @D63ADMK 07338000
         LTR   R2,R2               ACEE FOUND?                 @D63ADMK 07339000
         BZ    TINFACCX            NO, CANNOT CLEAR ANYTHING   @D63ADMK 07340000
************************************************************** @D63ADMK 07341000
*      NOW CLEAR INFO                                          @D63ADMK 07342000
************************************************************** @D63ADMK 07343000
         LR    R1,R15              GET ACEE ADDR FROM GET FUNC @D63ADMK 07344000
         SLR   R15,R15             CLEAR RETURN REGISTER       @D63ADMK 07345000
         SLA   R2,28               SHIFT PARTITION JPL FLAG OUT@D63ADMK 07346000
         BO    TINFACCC            IT WAS 1, START WITH PARTITION63ADMK 07347000
         SLA   R2,1                SHIFT TASK JPL FLAG OUT     @D63ADMK 07348000
         BO    TINFACCD            IT WAS 1, START WITH TASK JPLD63ADMK 07349000
         SLA   R2,1                SHIFT PARTITION FLAG OUT    @D63ADMK 07350000
         BO    TINFACCC            IT WAS 1, START WITH PARTITION63ADMK 07351000
         SLA   R2,1                SHIFT TASK FLAG OUT         @D63ADMK 07352000
         BO    TINFACCF            IT WAS 1, START WITH TASK   @D63ADMK 07353000
         SLR   R2,R2               CLEAR LOCATION RETURN REGISTER63ADMK 07354000
*        EQU   X'20'               ACEE CLEARED FOR MVS ASXB   @D63ADMK 07355000
*        EQU   X'10'               ACEE CLEARED FOR MVS TCB    @D63ADMK 07356000
*        EQU   X'08'               ACEE CLEARED FOR PARTITION JPL63ADMK 07357000
*        EQU   X'04'               ACEE CLEARED FOR TASK JPL   @D63ADMK 07358000
*        EQU   X'02'               ACEE CLEARED FOR PARTITION  @D63ADMK 07359000
*        EQU   X'01'               ACEE CLEARED FOR TASK       @D63ADMK 07360000
*        EQU   X'00'               NO ACEE SET                 @D63ADMK 07361000
*                                                              @D63ADMK 07362000
TINFACCD DS    0H                  START WITH TASK JPL         @D63ADMK 07363000
         ICM   R4,15,TCBUCNTL      GET CURRENT JPL             @D63ADMK 07364000
         BZ    TINFACCF            NO JPL ADDRESS              @D63ADMK 07365000
         USING DTSJPL,R4           ADDRESS JPL                 @D63ADMK 07366000
         CL    R1,JPUCNTL          IS IT THIS ACEE ADDRESS     @D63ADMK 07367000
         BNE   TINFACCF            LOOK AT THE TCB             @D63ADMK 07368000
         XC    JPUCNTL,JPUCNTL     CLEAR ACEE ADDRESS          @D63ADMK 07369000
         LA    R2,X'04'            ACEE ADDRESS CLEARED AT TASK@JPLADMK 07370000
TINFACCF DS    0H                  CLEAR ACEE OF TCBX          @D63ADMK 07371000
         L     R3,TCBATCBE         GET TCBX ADDRESS            @D63ADMK 07372000
         USING TCBXADR,R3          ADDRESS TCBX                @D63ADMK 07373000
         CL    R1,TCBXSENV         IS IT THIS ACEE ADDRESS?    @D63ADMK 07374000
         BNE   TINFACCC            LOOK AT THE PARTITION JPL   @D63ADMK 07375000
TINFACCG XC    TCBXSENV,TCBXSENV   CLEAR ACEE ADDRESS          @D63ADMK 07376000
         DROP  R4                  RELEASE JPL                 @D63ADMK 07377000
         LA    R7,X'01'            ACEE CLEARED AT TASK        @D63ADMK 07378000
         OR    R2,R7               SET FLAG                    @D63ADMK 07379000
         ICM   R5,15,TCBXMVST      IS THERE AN MVS TCB         @D63ADMK 07380000
         BZ    TINFACCC            NO, PROCESS PARTITION       @D63ADMK 07381000
         USING TCB,R5              ADDRESS MVS TCB             @D63ADMK 07382000
         XC    TCBSENV,TCBSENV     CLEAR ACEE ADDRESS          @D63ADMK 07383000
         LA    R7,X'10'            ACEE CLEARED AT MVS TCB     @D63ADMK 07384000
         OR    R2,R7               SET FLAG                    @D63ADMK 07385000
         DROP  R5                  RELEASE MVSTCB              @D63ADMK 07386000
*********************************************************************** 07387000
*      ACEE PROCESSING FOR THE CURRENT TASK IS DONE.           @D63ADMK 07388000
*      CHECK THE ACEE ADDRESS FIELDS OF THE CURRENT PARTITION. @D63ADMK 07389000
*      IF THE ACEE ADDRESS IS NOT THE SAME, LEAVE IT, ELSE CLEARD63ADMK 07390000
*      THE SPECIFIED ACEE ADDRESS AT THE CURRENT PARTITION     @D63ADMK 07391000
*      AND MVS ASXB.                                           @D63ADMK 07392000
*********************************************************************** 07393000
TINFACCC DS    0H                                              @D63ADMK 07394000
         TM    TIBFLAG2,ICCFPP     IS IT AN ICCF PSEUDO PARTITION63ADMK 07395000
         BNO   TINFACCH            NO, LOOK FOR NORMAL PARTITIOND63ADMK 07396000
         DROP  R8                  RELEASE TIB                 @D63ADMK 07397000
         ICM   R5,15,TCBXICOM      GET ICCF PP COMREG ADDRESS  @D63ADMK 07398000
         BZ    TINFACCX            NO ICCF COMREG ADDRESS      @D63ADMK 07399000
         DROP  R3                  RELEASE TCBX                @D63ADMK 07400000
         DROP  R10                 RELEASE TCB                 @D63ADMK 07401000
         B     TINFACCI            ICCF COMREG ADDRESS LOADED  @D63ADMK 07402000
TINFACCH L     R5,CRADDR           GET COMREG ADDRESS          @D63ADMK 07403000
         USING COMREG,R5           ADDRESS COMREG              @D63ADMK 07404000
TINFACCI ICM   R3,15,IJBJPL        GET CURRENT JPL             @D63ADMK 07405000
         BZ    TINFACCE            NO JPL ADDRESS              @D63ADMK 07406000
         USING DTSJPL,R3           ADDRESS JPL                 @D63ADMK 07407000
         CL    R1,JPUCNTL          IS IT THIS ACEE ADDRESS     @D63ADMK 07408000
         BNE   TINFACCE            LOOK AT THE COMREG ITSELF   @D63ADMK 07409000
         XC    JPUCNTL,JPUCNTL     CLEAR ACEE ADDRESS          @D63ADMK 07410000
         LA    R7,X'08'            ACEE CLEARED AT PARTITION JPLD63ADMK 07411000
         OR    R2,R7               SET FLAG                    @D63ADMK 07412000
         DROP  R3                  RELEASE JPL                 @D63ADMK 07413000
         B     TINFACCJ            CLEAR ALSO ASXB             @D63ADMK 07414000
TINFACCE DS    0H                  NO JPL FOUND                @D63ADMK 07415000
         CL    R1,IJBSENV          IS IT THIS ACEE ADDRESS     @D63ADMK 07416000
         BNE   TINFACCX            NO MATCH AT PARTITION, TERMINATEADMK 07417000
         XC    IJBSENV,IJBSENV     CLEAR ACEE ADDRESS          @D63ADMK 07418000
         LA    R7,X'02'            ACEE CLEARED AT PARTITION   @D63ADMK 07419000
         OR    R2,R7               SET FLAG                    @D63ADMK 07420000
         DROP  R5                  RELEASE COMREG              @D63ADMK 07421000
TINFACCJ DS    0H                  CLEAR MVS ASXB ALSO         @D63ADMK 07422000
         ICM   R3,15,PSAAOLD       GET ASCB ADDRESS            @D63ADMK 07423000
         BZ    TINFACCX            NO ASCB - NO MVS EMULATION  @D63ADMK 07424000
         USING ASCB,R3             ADDRESS ASCB                @D63ADMK 07425000
         ICM   R4,15,ASCBASXB      GET ASXB ADDRESS            @D63ADMK 07426000
         BZ    TINFACCX            NO ASXB FOUND, TERMINATE    @D63ADMK 07427000
         USING ASXB,R4             ADDRESS ASXB                @D63ADMK 07428000
         XC    ASXBSENV,ASXBSENV   CLEAR ACEE ADDRESS          @D63ADMK 07429000
         LA    R7,X'20'            ACEE CLEARED FROM MVS ASXB  @D63ADMK 07430000
         OR    R2,R7               SET FLAG                    @D63ADMK 07431000
         DROP  R4                  RELEASE ASXB                @D63ADMK 07432000
         DROP  R3                  RELEASE ASCB                @D63ADMK 07433000
*********************************************************************** 07434000
*      SET RETURN CODE AND TERMINATE                           @D63ADMK 07435000
*********************************************************************** 07436000
TINFACCX DS    0H                                              @D63ADMK 07437000
         LTR   R2,R2               WAS AN ACEE CLEARED         @D63ADMK 07438000
         BZ    TINFACCY            NO                          @D63ADMK 07439000
         SLR   R15,R15             YES, SET RETURN CODE 0      @D63ADMK 07440000
         B     TINFACCZ            TERMINATE                   @D63ADMK 07441000
TINFACCY DS    0H                                              @D63ADMK 07442000
         LA    R15,8               NOTHING CLEARED, RETURN 8   @D63ADMK 07443000
TINFACCZ B     TINFACM0            SET USER REGISTER           @D63ADMK 07444000
*********************************************************************** 07445000
*      SET FUNCTION                                            @D63ADMK 07446000
*********************************************************************** 07447000
TINFACS  SLR   R15,R15             CLEAR RETURN REGISTER       @D63ADMK 07448000
         SLR   R2,R2               CLEAR LOCATION RETURN REGISTER63ADMK 07449000
*        EQU   X'20'               ACEE CONNECTED TO MVS ASXB  @D63ADMK 07450000
*        EQU   X'10'               ACEE CONNECTED TO MVS TCB   @D63ADMK 07451000
*        EQU   X'08'               ACEE CONNECTED TO PARTITION JPL3ADMK 07452000
*        EQU   X'04'               ACEE CONNECTED TO TASK JPL  @D63ADMK 07453000
*        EQU   X'02'               ACEE CONNECTED TO PARTITION @D63ADMK 07454000
*        EQU   X'01'               ACEE CONNECTED TO TASK      @D63ADMK 07455000
*        EQU   X'00'               NO ACEE SET                 @D63ADMK 07456000
         USING TCBADR,R10          ADDRESS TCB                 @D63ADMK 07457000
         ICM   R4,15,TCBUCNTL      GET CURRENT JPL             @D63ADMK 07458000
         BZ    TINFACSB            NO JPL ADDRESS              @D63ADMK 07459000
         USING DTSJPL,R4           ADDRESS JPL                 @D63ADMK 07460000
         ST    R1,JPUCNTL          SET ACEE ADDRESS            @D63ADMK 07461000
         LA    R2,X'04'            ACEE ADDRESS SET AT TASK JPL@D63ADMK 07462000
         DROP  R4                  RELEASE JPL                 @D63ADMK 07463000
TINFACSB DS    0H                  CONNECT ACEE TO TCBX        @D63ADMK 07464000
         L     R4,TCBATCBE         GET TCBX ADDRESS            @D63ADMK 07465000
         USING TCBXADR,R4          ADDRESS TCBX                @D63ADMK 07466000
         ST    R1,TCBXSENV         SET ACEE ADDRESS            @D63ADMK 07467000
         LA    R7,X'01'            ACEE CONNECTED TO TASK      @D63ADMK 07468000
         OR    R2,R7               SET FLAG                    @D63ADMK 07469000
         ICM   R5,15,TCBXMVST      IS THERE AN MVS TCB         @D63ADMK 07470000
         BZ    TINFACSA            NO                          @D63ADMK 07471000
         USING TCB,R5              ADDRESS MVS TCB             @D63ADMK 07472000
         ST    R1,TCBSENV          SET ACEE ADDRESS            @D63ADMK 07473000
         LA    R7,X'10'            ACEE CONNECTED TO MVS TCB   @D63ADMK 07474000
         OR    R2,R7               SET FLAG                    @D63ADMK 07475000
         DROP  R5                  RELEASE TCBX                @D63ADMK 07476000
*********************************************************************** 07477000
*      ACEE PROCESSING FOR THE CURRENT TASK IS DONE.           @D63ADMK 07478000
*      CHECK THE ACEE ADDRESS FIELDS OF THE CURRENT PARTITION. @D63ADMK 07479000
*      IF THE IS ALREADY A ACEE ADDRESS, LEAVE IT. ELSE CONNECT@D63ADMK 07480000
*      THE SPECIFIED ACEE ADDRESS TO THE CURRENT PARTITION     @D63ADMK 07481000
*      AND MVS ASXB.                                           @D63ADMK 07482000
*********************************************************************** 07483000
TINFACSA DS    0H                                              @D63ADMK 07484000
         USING TIBADR,R8           ADDRESS TIB                 @D63ADMK 07485000
         TM    TIBFLAG2,ICCFPP     IS IT AN ICCF PSEUDO PARTITION63ADMK 07486000
         BNO   TINFACSC            NO, LOOK FOR NORMAL PARTITIOND63ADMK 07487000
         DROP  R8                  RELEASE TIB                 @D63ADMK 07488000
         ICM   R5,15,TCBXICOM      GET ICCF PP COMREG ADDRESS  @D63ADMK 07489000
         BZ    TINFACSX            NO ICCF COMREG ADDRESS      @D63ADMK 07490000
         DROP  R4                  RELEASE TCBX                @D63ADMK 07491000
         DROP  R10                 RELEASE TCB                 @D63ADMK 07492000
         B     TINFACSD            ICCF COMREG ADDRESS LOADED  @D63ADMK 07493000
TINFACSC L     R5,CRADDR           GET COMREG ADDRESS          @D63ADMK 07494000
         USING COMREG,R5           ADDRESS COMREG              @D63ADMK 07495000
TINFACSD ICM   R3,15,IJBJPL        GET CURRENT JPL             @D63ADMK 07496000
         BZ    TINFACSE            NO JPL ADDRESS              @D63ADMK 07497000
         USING DTSJPL,R3           ADDRESS JPL                 @D63ADMK 07498000
         ICM   R15,15,JPUCNTL      CHECK ACEE ADDRESS          @D63ADMK 07499000
         BNZ   TINFACSX            ACEE FOUND AT JPL, TERMINATE@D63ADMK 07500000
         ST    R1,JPUCNTL          SET ACEE ADDRESS            @D63ADMK 07501000
         LA    R7,X'08'            ACEE CONNECTED TO PARTITION JPL3ADMK 07502000
         OR    R2,R7               SET FLAG                    @D63ADMK 07503000
         DROP  R3                  RELEASE JPL                 @D63ADMK 07504000
         B     TINFACSG            ACEE SET AT PARTITION, SET ASXB3ADMK 07505000
TINFACSE DS    0H                  NO JPL FOUND                @D63ADMK 07506000
         ICM   R15,15,IJBSENV      GET ACEE ADDRESS            @D63ADMK 07507000
         BNZ   TINFACSX            ACEE FOUND, TERMINATE       @D63ADMK 07508000
         ST    R1,IJBSENV          SET ACEE ADDRESS            @D63ADMK 07509000
         LA    R7,X'02'            ACEE CONNECTED TO PARTITION @D63ADMK 07510000
         OR    R2,R7               SET FLAG                    @D63ADMK 07511000
         DROP  R5                  RELEASE COMREG              @D63ADMK 07512000
TINFACSG DS    0H                  SET MVS ASXB ALSO           @D63ADMK 07513000
         ICM   R3,15,PSAAOLD       GET ASCB ADDRESS            @D63ADMK 07514000
         BZ    TINFACSX            NO ASCB - NO MVS EMULATION  @D63ADMK 07515000
         USING ASCB,R3             ADDRESS MVS ASCB            @D63ADMK 07516000
         ICM   R4,15,ASCBASXB      GET ASXB ADDRESS            @D63ADMK 07517000
         BZ    TINFACSX            NO ASXB FOUND, TERMINATE    @D63ADMK 07518000
         USING ASXB,R4             ADDRESS MVS ASXB            @D63ADMK 07519000
         ST    R1,ASXBSENV         SET ACEE ADDRESS            @D63ADMK 07520000
         LA    R7,X'20'            ACEE CONNECTED TO MVS ASXB  @D63ADMK 07521000
         OR    R2,R7               SET FLAG                    @D63ADMK 07522000
         DROP  R4                  RELEASE ASXB                @D63ADMK 07523000
         DROP  R3                  RELEASE ASCB                @D63ADMK 07524000
*********************************************************************** 07525000
*      SET RETURN CODE AND TERMINATE                           @D63ADMK 07526000
*********************************************************************** 07527000
TINFACSX DS    0H                                              @D63ADMK 07528000
         LTR   R2,R2               IS ACEE CONNECTED           @D63ADMK 07529000
         BZ    TINFACSY            NO                          @D63ADMK 07530000
         SLR   R15,R15             YES, SET RETURN CODE 0      @D63ADMK 07531000
         B     TINFACSZ            TERMINATE                   @D63ADMK 07532000
TINFACSY DS    0H                                              @D63ADMK 07533000
         LA    R15,8               NOTHING SET, RETURN 8       @D63ADMK 07534000
TINFACSZ DS    0H                                              @D63ADMK 07535000
TINFACM0 DS    0H                                              @D63ADMK 07536000
         ST    R2,TINFSAV0         DETAILED INFO IN USER R0    @D63ADMK 07537000
         ST    R1,TINFSAV1         ACEE ADDRESS IN USER R1     @D63ADMK 07538000
         ST    R15,TINFSAVF        RETURN CODE IN USER R15     @D63ADMK 07539000
         B     TINFEXI1            EXIT                        @D63ADMK 07540000
         DROP  RD                  BASE                        @D63ADMK 07541000
*                                  END OF CODEBLOCK                     07542000
*--------------------------------------------------------------@D62ADMK 07543000
*   MODFLD : FIELD=MODE                                        @D62ADMK 07544000
*            SET MODE BYTE FOR LOGICAL UNIT  (MODE, LU)        @D62ADMK 07545000
*            PIK IN R0, LU IN R2, NEWVAL IN R1                 @D62ADMK 07546000
*--------------------------------------------------------------@D62ADMK 07547000
TINFMODM DS    0H                ENTRY FOR MODE                         07548000
         USING TINFMODM,RD       BASE, LOADED AT BRANCH TIME   @D62ADMK 07549000
         LR    R3,R2             SAVE LU                       @D62ADMK 07550000
         LR    R7,R1             SAVE NEWVAL                   @D62ADMK 07551000
         BAL   R9,TINFGPIK       CALL PIK VALIDATION ========>>@D62ADMK 07552000
*SGLINK  TINFGPIK,INPUT=(R0,R9,RC),WORK=R0,OUTPUT=R2                    07553000
         B     TINFCNPK          ERROR (ILLEGAL PIK)           @D62ADMK 07554000
         BAL   R9,TINFGPCB       CALL,GET PCB PTR ===========>>@D62ADMK 07555000
*SGLINK  TINFGPCB,INPUT=(R2,R9,RC),OUTPUT=R5                            07556000
         B     TINCOD16          ERROR (DYN.PART.NOT ALLOC.)   @D62ADMK 07557000
         NOP   0                 * IGN.STAT.PART.NOT ALLOCATED @D62ADMK 07558000
         LR    R0,R3             R0: RESTORE LU PARAMETER      @D62ADMK 07559000
         BAL   R9,TINFGLUB       CALL,GET LUB PTR ===========>>@D62ADMK 07560000
*SGLINK  TINFGLUB,INPUT=(R0,R5,R9,RC),OUTPUT=(R2,R3,RF)                 07561000
         B     TINCOD12          ERROR (LUB NOT NORM.ASSIGNED) @D62ADMK 07562000
         LR    R1,R3             R1: SAVE LUB POINTER          @D62ADMK 07563000
         SLR   R3,R3             IF (HIGH ORDER BYTE OF        @D62ADMK 07564000
         ICM   R3,2,1(R1)        *   PUB INDEX IN LUB IS FF)   @D62ADMK 07565000
         BNM   TINMODL2          ***                           @D62ADMK 07566000
         SLR   R3,R3               R3: RESET HI BYTE AGAIN     @D62ADMK 07567000
TINMODL2 DS    0H                ENDIF                         @D62ADMK 07568000
         IC    R3,0(R1)          R3: INSERT LOW ORDER BYTE     @D62ADMK 07569000
         LR    R1,R7             RESTORE NEWVAL                @D62ADMK 07570000
         B     TINFMOMX          *     LOGICAL UNIT)           @D62ADMK 07571000
         DROP  RD                . RELEASE BASE REGISTER RD    @D62ADMK 07572000
*--------------------------------------------------------------@D62ADMK 07573000
*   MODFLD : SET MODE BYTE FOR PHYSICAL UNIT  (MODE, PU)       @D62ADMK 07574000
*--------------------------------------------------------------@D62ADMK 07575000
TINFMOMD DS    0H                  START OF CODEBLOCK                   07576000
         BAL   R9,TINFCKPU         CHECK SPEC.PHYSICAL UNIT    @D62ADMK 07577000
*SGLINK  TINFCKPU,INPUT=(R0,R9,RC),OUTPUT=R3                            07578000
         B     TINFCNPU            ERROR (INVALID INDEX)       @D62ADMK 07579000
TINFMOMX DS    0H                  SECOND ENTRY                @D62ADMK 07580000
         BALR  RD,0                ESTABLISH ADDRESSABILITY    @D62ADMK 07581000
         USING *,RD                FOR THIS PART               @D62ADMK 07582000
         BAL   R9,TINFGPBX         POINT TO PUBX               @D62ADMK 07583000
*SGLINK  TINFGPBX,INPUT=(R3,R9,RC),OUTPUT=R4                            07584000
         USING PBXADR,R4                                       @D62ADMK 07585000
         TM    PBXFLAG,PBXTAPE     IS DEVICE TAPE              @D62ADMK 07586000
         BZ    TINCOD08            NO, INDICATE IT IN REG 15   @D62ADMK 07587000
*        LR    R7,R1               SAVE NEWVAL                 @D62ADMK 07588000
*        LA    R0,TPWLEN+TPPLEN    LENGTH                      @D62ADMK 07589000
*        SGETVIS                                                        07590000
*        LTR   R15,R15             GOT STORAGE?                @D62ADMK 07591000
*        BNZ   TINX1C16            NO, INDICATE IT IN REG 15   @D62ADMK 07592000
*        LR    R2,R1               WORKAREA                    @D62ADMK 07593000
*        LA    R1,TPWLEN(,R2)      PARMLIST                    @D62ADMK 07594000
*        MVC   TPCUU,PBXCUU        CUU -> PARMLIST             @D62ADMK 07595000
*        STC   R7,TPMODE           NEWVAL -> PARMLIST          @D62ADMK 07596000
         BAL   R9,TINFGPUB         GET POINTER TO PUB          @D62ADMK 07597000
*SGLINK  TINFGPUB,INPUT=(R3,R9,RC),OUTPUT=R7                            07598000
         USING PUBADR,R7           SET BASE FOR PUB            @D62ADMK 07599000
         TM    PBXFLAG1,PBXDBCCW   MODE REALY WITH DATA BYTE   @D62ADMK 07600000
         BNO   TINFMOMY            NO                          @D62ADMK 07601000
         CLI   TINFSAVF+3,TIN#MPDM IS IT FIELD=PMODE?          @D63ADMK 07602000
         BE    TINFMOM9            YES                         @D63ADMK 07603000
         CLI   TINFSAVF+3,TIN#MPMD IS IT FIELD=PMODE?          @D63ADMK 07604000
         BNE   TINFMOM8            NO                          @D63ADMK 07605000
TINFMOM9 STC   R1,PBXSBYT          ASSUME MODE WITH DATA BYTE  @D63ADMK 07606000
         B     TINCOD00            RETURN VALUE                @D63ADMK 07607000
TINFMOM8 DS    0H                                              @D63ADMK 07608000
         STC   R1,PBXABYT          ASSUME MODE WITH DATA BYTE  @D62ADMK 07609000
         B     TINCOD00            YES, RETURN VALUE           @D62ADMK 07610000
TINFMOMY STC   R1,PUBOPTN          NO, PUT MODE INTO PUB       @D62ADMK 07611000
         B     TINCOD00            RETURN VALUE                @D62ADMK 07612000
         DROP  R4                  DROP PBXADR                 @D62ADMK 07613000
         DROP  RD                  RELEASE BASE REGISTER RD    @D62ADMK 07614000
         DROP  R7                  FORGET PUBADR               @D62ADMK 07615000
*                                  END OF CODEBLOCK            @D62ADMK 07616000
*--------------------------------------------------------------@D64ADMK 07617000
*   MODFLD : FIELD = SYSAL                                     @D64ADMK 07618000
*   INPUT: R0 = 0 OR PIK                                       @D64ADMK 07619000
*          R1 = FUNCTION CODE                                  @D64ADMK 07620000
*     SUPPORTED FUNCTION CODES ARE                             @D64ADMK 07621000
*     R1 = 0 : GIVE TASK SYSTEM ACCESS LIST AND RETURN ALET    @D64ADMK 07622000
*              FOR SPECIFIED PARTITION                         @D64ADMK 07623000
*     R1 = 1 : GIVE TASK ORIGINAL ACCESS LIST                  @D64ADMK 07624000
*   OUTPUT: R1 = ALET IF FUNCTION CODE = 0 AND R15 = 0         @D64ADMK 07625000
*           R15= RETURN CODE                                   @D64ADMK 07626000
*--------------------------------------------------------------@D64ADMK 07627000
TINFSYSL DS    0H                  START OF CODEBLOCK                   07628000
         USING TINFSYSL,RD         BASE LOADED AT BRANCH TIME  @D64ADMK 07629000
         LR    R11,R1              SAVE FUNCTION CODE          @D64ADMK 07630000
         C     R11,F1              FUNCTION VALID              @D64ADMK 07631000
         BH    TINFCNAU            NO, NOT AUTHORIZED          @D64ADMK 07632000
         USING TIBADR,R8                                       @D64ADMK 07633000
         TM    TIBFLAG1,TERMACT    IS TERMINATOR ACTIVE?       @D64ADMK 07634000
         DROP  R8                                              @D64ADMK 07635000
         BNO   TINFCNAU            NO, NOT AUTHORIZED          @D64ADMK 07636000
         BAL   R9,TINFGPIK         GET/CHECK REQUESTED PIK     @D64ADMK 07637000
*SGLINK  TINFGPIK,INPUT=(R0,R9,RC),WORK=R0,OUTPUT=R2                    07638000
         B     TINFCNPK            ERROR (ILLEGAL PIK)         @D64ADMK 07639000
         LR    R1,R2               GET PIK                     @D64ADMK 07640000
         L     R14,TINFSYA2                                    @DYXXXOW 07641000
         BSM   0,R14              ENTER 31 BIT MODE            @DYXXXOW 07642000
TINFSYA2 DC    A(TINFSYL2+X'80000000')                         @DYXXXOW 07643000
TINFSYL2 DS    0H                                              @DYXXXOW 07644000
         USING TCBADR,R10                                      @D64ADMK 07645000
         L     R5,TCBATCBE         GET EXTENSION               @D64ADMK 07646000
         LA    R0,16               SET SYSAL                   @D64ADMK 07647000
         LTR   R11,R11             FUNCTION CODE 0 ?           @D64ADMK 07648000
         BZ    TINFSYL1            YES                         @D64ADMK 07649000
         NI    TCBXFLG1-TCBXADR(R5),XFF-TCBXDRSA INDICATOR     @DYXXXOW 07650000
         LA    R0,20               RESET SYSAL                 @D64ADMK 07651000
TINFSYL1 DS    0H                                              @DYXXXOW 07652000
         L     R6,ADISPSER         BASE OF DISPSERV            @D64ADMK 07653000
         BASSM R7,R6               DISPSERV                    @D64ADMK 07654000
         L     R6,DISPAD           GET DISP ADDRESS BACK       @D64ADMK 07655000
         DROP  R10                                             @D64ADMK 07656000
         LTR   R11,R11             FUNCTION CODE 0 ?           @D64ADMK 07657000
         BNZ   TINCOD00            NO, NO OUTPUT               @D64ADMK 07658000
         OI    TCBXFLG1-TCBXADR(R5),TCBXDRSA INDICATOR         @DYXXXOW 07659000
         B     TINC0ST1            SAVE REG 1 AND EXIT         @D64ADMK 07660000
         DROP  RD                  RELEASE BASE REGISTER RD    @D62ADMK 07661000
*---------------------------------------------------------------------- 07662000
*   GETFLD : FIELD=ITACTIVE                                    @D64ADMK 07663000
*            GET ADDRESS OF A CURRENT ACTIVE TIMER EXIT        @D64ADMK 07664000
*            AND IT'S SAVE AREA                                @D64ADMK 07665000
*            INPUT: REG0=TID                                   @D64ADMK 07666000
*            OUTPUT:REG0=EXIT ADDRESS, REG1=SAVE AREA PTR      @D64ADMK 07667000
*                   REG2=TYPE OF TIMER EXIT                    @D64ADMK 07668000
*                        01=VSE TIMER                          @D64ADMK 07669000
*                        02=MVS STIMER TASK                    @D64ADMK 07670000
*                        03=MVS STIMER REAL                    @D64ADMK 07671000
*                        04=MVS STIMERM                        @D64ADMK 07672000
*                   REG15=0 IF TIQUE ACTIVE OR NOT             @D64ADMK 07673000
*---------------------------------------------------------------------- 07674000
TINFGITA DS    0H                   START OF CODEBLOCK                  07675000
         USING TINFGITA,RD          BASE LOADED AT BRANCH TIME @D64ADMK 07676000
         BAL   R9,TINFGTID          CALL,CHECK TID ==========>>@D64ADMK 07677000
*SGLINK  TINFGTID,INPUT=(R0,R9,RC),OUTPUT=(R2,R8)                       07678000
         AMODESW SET,AMODE=31,WR=(R14) SWITCH TO 31 BIT        @D64ADMK 07679000
         SLR   R2,R2                PURGE POSSIBLE BITMAP      @D64ADMK 07680000
         SLR   R0,R0                INITIALIZE NO EXIT ADDRESS @D64ADMK 07681000
         L     R3,TIBTCB-TIBADR(,R8) TCB ADDRESS               @D64ADMK 07682000
         L     R3,TCBATCBE-TCBADR(,R3) TCB EXTENSION           @D64ADMK 07683000
         ICM   R1,15,TCBXTQCA-TCBXADR(R3) ACTIVE TIQUE         @D64ADMK 07684000
         BZ    TINFGIT9             NO TIQUE ACTIVE            @D64ADMK 07685000
         USING EXITBLK,R1           PTR TO ABEXIT INFO         @D64ADMK 07686000
         TM    TIQTYPE,TIQVSE       IF VSE TIMER               @D64ADMK 07687000
         BNO   TINFGIT2             ***                        @D64ADMK 07688000
         LA    R2,X'01'(,R2)          SET FLAG FOR IT          @D64ADMK 07689000
TINFGIT2 DS    0H                   ENDIF                      @D64ADMK 07690000
         TM    TIQTYPE,TIQTASK      IF MVS STIMER TASK         @D64ADMK 07691000
         BNO   TINFGIT3             ***                        @D64ADMK 07692000
         LA    R2,X'02'(,R2)          SET FLAG FOR IT          @D64ADMK 07693000
TINFGIT3 DS    0H                   ENDIF                      @D64ADMK 07694000
         TM    TIQTYPE,TIQSMVS      IF MVS STIMER REAL         @D64ADMK 07695000
         BNO   TINFGIT4             ***                        @D64ADMK 07696000
         LA    R2,X'03'(,R2)          SET FLAG FOR IT          @D64ADMK 07697000
TINFGIT4 DS    0H                   ENDIF                      @D64ADMK 07698000
         TM    TIQTYPE,TIQMMVS      IF MVS STIMERM             @D64ADMK 07699000
         BNO   TINFGIT5             ***                        @D64ADMK 07700000
         LA    R2,X'04'(,R2)          SET FLAG FOR IT          @D64ADMK 07701000
TINFGIT5 DS    0H                   ENDIF                      @D64ADMK 07702000
         LM    R0,R1,EXITADR        TAKE EXIT+SAVEAREA ADDRESS @D64ADMK 07703000
         DROP  R1                   DROP PTR TO EXIT INFO      @K64ADMK 07704000
TINFGIT9 DS    0H                                              @D64ADMK 07705000
         ST    R2,TINFSAV2          SUPPLY BIT MAP INFORMATION @D64ADMK 07706000
         B     TINC0ST0             RETURN                     @D64ADMK 07707000
         DROP  RD                   RELEASE BASE REGISTER      @D64ADMK 07708000
*                                   END OF CODEBLOCK                    07709000
*--------------------------------------------------------------@D63ADMK 07710000
*   GETFLD : FIELD=JCLPARM                                     @D63ADMK 07711000
*     GET POINTER TO PARM FIELD OF EXEC COMMAND                         07712000
*     (CURRENT PARTITION)                                               07713000
*   ON EXIT : R1 = ADDRESS OF PARM FIELD                       @D63ADMK 07714000
*   ON EXIT : RF = ALWAYS 0                                    @D63ADMK 07715000
*--------------------------------------------------------------@D63ADMK 07716000
         SLADCT SYSONLY=PARM                                            07717000
&SYSECT  CSECT                                                          07718000
         USING TINFGJCP,RD         BASE LOADED AT BRANCH TIME  @D63ADMK 07719000
TINFGJCP DS    0H                  START OF CODEBLOCK                   07720000
         BAL   R9,TINFGENT         CALL,SAVE STATUS =========>>@DY45849 07721000
*SGLINK  TINFGENT,INPUT=(R9,RC),WORK=(R2,R3,R4,R5,R7,RE,RF),           *07722000
               OUTPUT=(R0,R1,R6,R8,RA,RB)                      @DY45849 07723000
         USING SVEARA,RB           SAVE AREA BASE ADDRESS      @DY45849 07724000
         L     R5,PCBPTR           PCB BASE ADDRESS            @DY45849 07725000
         USING PCBADR,R5           PCBADR BASE                 @DY45849 07726000
         L     R3,PCECOMRA         GET CURRENT COMREG          @D63ADMK 07727000
         USING COMREG,R3           COMREG BASE POINTER         @D63ADMK 07728000
         L     R3,IJBJCWA          ADDRESS OF JOB CONTROL WORK @D63ADMK 07729000
         USING MAPJCWA,R3          MAPJCWA BASE POINTER        @D63ADMK 07730000
         SLR   R1,R1               CLEAR REGISTER              @D63ADMK 07731000
         ICM   R1,7,JCWPARM+1      ADDRESS OF PARAMETER FIELD  @D63ADMK 07732000
         DROP  R3                  RELEASE MAPJCWA BASE        @D63ADMK 07733000
         XC    SVER0F,SVER0F       SET RETURN CODE             @DY45849 07734000
         ST    R1,SVER01           PROVIDE PARAMETER ADDRESS   @DY45849 07735000
         DROP  RB                  RELEASE SAVE AREA BASE      @DY45849 07736000
         BR    R6                  DISP ===================>>> @DY45849 07737000
         DROP  R5                  RELEASE PCB BASE            @D63ADMK 07738000
         DROP  RD                  RELEASE BASE REGISTER RD    @D63ADMK 07739000
*--------------------------------------------------------------@D62ADMK 07740000
*   GETFLD : FIELD=PU CUU                                      @D64ADMK 07741000
*   ON ENTRY: R0 = CUU, FOR WHICH INFORMATION IS TO BE RETRIEVEDD64ADMK 07742000
*   ON EXIT : R1 = PUB INDEX                                   @D64ADMK 07743000
*           : RF = 0  INFORMATION RETIRVED                     @D64ADMK 07744000
*           : RF = 16 NO INFO FOR THIS CUU                     @D64ADMK 07745000
*--------------------------------------------------------------@D64ADMK 07746000
TINFGPUC DS    0H                  PROVIDE PUB INDEX FOR CUU            07747000
         USING TINFGPUC,RD         SUBROUTINE  BASE            @D64ADMK 07748000
         BAL   R9,TINFCUUP         GET POINTER TO PUB          @D64ADMK 07749000
*SGLINK  TINFCUUP,INPUT=(R0,R9,RC),WORK=(R1,R8,RA),OUTPUT=R3            07750000
         B     TINCOD16            ERROR CUU NOT FOUND         @D64ADMK 07751000
         LR    R1,R3               GET PUB INDEX               @D64ADMK 07752000
         B     TINC0ST1            EXIT / RC = 0               @D62ADMK 07753000
         DROP  RD                  RELEASE BASE REGISTER RD    @D62ADMK 07754000
*                                  END OF CODEBLOCK            @D62ADMK 07755000
*--------------------------------------------------------------@D64ADMK 07756000
*   GETFLD : FIELD = EXECMODE                                  @D64ADMK 07757000
*   INPUT: R0 = 0 OR PIK                                       @D64ADMK 07758000
*   OUTPUT: R1 = 0: VSE                                        @D64ADMK 07759000
*         : R1 = 4: OS/390 EMULATION MODE                      @D64ADMK 07760000
*           R15= RETURN CODE                                   @D64ADMK 07761000
*--------------------------------------------------------------@D64ADMK 07762000
TINFGEXM DS    0H                  START OF CODEBLOCK                   07763000
         USING TINFGEXM,RD         BASE LOADED AT BRANCH TIME  @D64ADMK 07764000
         BAL   R9,TINFGPIK         GET/CHECK REQUESTED PIK     @D64ADMK 07765000
*SGLINK  TINFGPIK,INPUT=(R0,R9,RC),WORK=R0,OUTPUT=R2                    07766000
         B     TINFCNPK            ERROR (ILLEGAL PIK)         @D64ADMK 07767000
         BAL   R9,TINFGPCB         AND POINT TO PARTITION PCB  @D64ADMK 07768000
*SGLINK  TINFGPCB,INPUT=(R2,R9,RC),OUTPUT=R5                            07769000
         B     TINX1C16            ERROR (DYN.PART.NOT ALLOC.) @D64ADMK 07770000
         NOP   0                   IGN.  STAT.PART NOT ALLOC.  @D64ADMK 07771000
         SLR   R1,R1               DEFAULT                  .  @D64ADMK 07772000
         USING PCBADR,R5                                       @D64ADMK 07773000
         TM    PCBFLAG,PCBMVSEM    OS/390 EMULATION MODE?      @D64ADMK 07774000
         BZ    TINC0ST1            NO, EXIT ROUTINE            @D64ADMK 07775000
         LA    R1,4                OS/390                      @D64ADMK 07776000
         B     TINC0ST1            EXIT ROUTINE                @D64ADMK 07777000
         DROP  R5                  DROP PCBADR                 @D64ADMK 07778000
         DROP  RD                  RELEASE BASE REGISTER RD    @D64ADMK 07779000
*---------------------------------------------------------------------- 07780000
*   MODFLD : SET DLI CONTROL BLOCK ADDRESS                     @DY45299 07781000
*---------------------------------------------------------------------- 07782000
         USING TINFMDLI,RD          TINFMDLI BASE POINTER      @DY45299 07783000
         USING TCBADR,RA            TCB BASE ADDRESS           @DY45299 07784000
TINFMDLI DS    0H                   MODIFY DLI CNTL.BLK.ADDRESS@DY45299 07785000
         L     RE,TCBATCBE          ADDRESS OF TCB EXTENTION   @DY45299 07786000
         USING TCBXADR,RE           TCB EXTENTION BASE         @DY45299 07787000
         LTR   R1,R1                IS ADDRESS TO BE RESET     @DY45299 07788000
         BZ    TINFMD10             NO,                        @DY45299 07789000
         ICM   R5,15,TCBXDLIP       IS ADDRESS ALREADY PRESENT @DY45299 07790000
         BNZ   TINCOD04             YES, ====================> @DY45299 07791000
TINFMD10 ST    R1,TCBXDLIP          SAVE DLI CONTROL BLK. ADDR.@DY45299 07792000
         B     TINCOD00             RETURN                     @DY45299 07793000
         DROP  RA                   RELEASE TCBADR BASE        @DY45299 07794000
         DROP  RE                   RELEASE TCBX BASE          @DY45299 07795000
         DROP  RD                   RELEASE TINFMDLI BASE      @DY45299 07796000
         AIF   (NOT &VSE250).N250040                           @D27XDAP 07797000
*---------------------------------------------------------------------- 07798000
*   MODFLD : SET IP-ANCHOR ADDRESS                             @D25IDAP 07799000
*---------------------------------------------------------------------- 07800000
         USING TINFMIPA,RD          TINFMIPA BASE POINTER      @D25IDAP 07801000
         USING TCBADR,RA            TCB BASE ADDRESS           @D25IDAP 07802000
TINFMIPA DS    0H                   GET IP-ANCHOR              @D25IDAP 07803000
         L     RE,TCBATCBE          ADDRESS OF TCB EXTENTION   @D25IDAP 07804000
         USING TCBXADR,RE           TCB EXTENTION BASE         @D25IDAP 07805000
         LTR   R1,R1                IS ADDRESS TO BE RESET     @D25IDAP 07806000
         BZ    TINFMI10             NO,                        @D25IDAP 07807000
         ICM   R5,15,TCBXIPAN       IS IPANCH ALREADY PRESENT  @D25IDAP 07808000
         BNZ   TINCOD04             YES, ====================> @D25IDAP 07809000
TINFMI10 ST    R1,TCBXIPAN          SAVE NEW ANCHOR ADDRESS    @D25IDAP 07810000
         B     TINCOD00             RETURN                     @D25IDAP 07811000
         DROP  RA                   RELEASE TCBADR BASE        @D25IDAP 07812000
         DROP  RE                   RELEASE TCBX BASE          @D25IDAP 07813000
         DROP  RD                   RELEASE TINFMIPA BASE      @D25IDAP 07814000
.N250040 ANOP                                                  @D25IDAP 07815000
         AIF   (NOT &VSE250).N250060                           @D27XDAP 07816000
*---------------------------------------------------------------------- 07817000
*   MODFLD : UPDATE PCB WITH DB2 CLEANUP AND CNTRL BLOCK ADDR           07818000
*---------------------------------------------------------------------- 07819000
         USING PCBADR,R5            PCB BASE ADDRESS           @D65CDOW 07820000
         USING TIBADR,R8            TIB BASE ADDRESS           @D65CDOW 07821000
         USING TINFDB2,RD                                      @D65CDOW 07822000
TINFDB2  DS    0H                                              @D65CDOW 07823000
         TM    TIBFLAG1,EOTINPR+TERMACT TERMINATOR OR CLEAN-UP @D65CDOW 07824000
         BNZ   TINFCNAU             YES, ILLEGAL SVC(ERR21)    @D65CDOW 07825000
         L     RE,PCBAPCBX          GET ADDR OF PCB-EXTENSION  @D65CDOW 07826000
         USING PCBXADR,RE                                      @D65CDOW 07827000
         ST    R0,PCBXDB2C          SAVE CLEAN-UP ENTRY ADDR   @D65CDOW 07828000
         ST    R1,PCBXDB2A          SAVE DB2 MAIN CB ADDR      @D65CDOW 07829000
         DROP  RE                                              @D65CDOW 07830000
         B     TINCOD00             RETURN                     @D65CDOW 07831000
         DROP  R5                   RELEASE PCB BASE           @D65CDOW 07832000
         DROP  R8                   RELEASE TIB BASE           @D65CDOW 07833000
         DROP  RD                   RELEASE RTN BASE           @D65CDOW 07834000
.N250060 ANOP                                                  @D65CDOW 07835000
***             WORK AREA LAYOUT                             **@D62ADMK 07836000
*PWRKAR  DSECT                                                          07837000
*PDEVPR  DS    F                      DEVICE PROPERTIES        @D62ADMK 07838000
*PREGSAV DS    10F                    REGISTER SAVE AREA       @D62ADMK 07839000
*PDVIND  DS    X                      INDEX FOR DEVICE         @D62ADMK 07840000
*PWMODE  DS    X                      WORKFIELD FOR MODE BYTE  @D62ADMK 07841000
*PWLEN   EQU   *-TPWRKAR              WORKFIELD FOR MODE BYTE  @D62ADMK 07842000
*        SPACE  2                                              @D62ADMK 07843000
***             PARAMETERLIST LAYOUT                         **@D62ADMK 07844000
*PPARM   DSECT                                                          07845000
*PCUU    DS    H                      CUU OF TAPE              @D62ADMK 07846000
*PMODE   DS    X                      MODE TO BE TESTED        @D62ADMK 07847000
*PPLEN   EQU   *-TPPARM               MODE TO BE TESTED        @D62ADMK 07848000
*        SPACE  2                                              @D62ADMK 07849000
*SYSECT  CSECT                                                          07850000
.*===================================================================== 07851000
.*= #   =============================================================== 07852000
.*= # # =================== PART 4: ADDRESS TABLE ===================== 07853000
.*= # # =================== PART 4: ADDRESS TABLE ===================== 07854000
.*= ### =================== PART 4: ADDRESS TABLE ===================== 07855000
.*=   # =============================================================== 07856000
.*===================================================================== 07857000
*== PART 4: ADDRESS TABLE ============================================= 07858000
* FUNCTION ADDRESS TABLE TO GET BRANCH ADDRESSES AT INVOCATION          07859000
*====================================================================== 07860000
         SPACE 1                                                        07861000
TINFATAB DS    0F                                                       07862000
TIN#TRLQ EQU   (*-TINFATAB)/4                                  @D61NNGL 07863000
         DC    A(TINFTRLQ)          0 TREADY COND=LQ                    07864000
TIN#TRNO EQU   (*-TINFATAB)/4                                  @D61NNGL 07865000
         DC    A(TINFTRNO)          1 TREADY COND=NO                    07866000
TIN#TRIO EQU   (*-TINFATAB)/4                                  @D61NNGL 07867000
         DC    A(TINFTRIO)          2 TREADY COND=IO                    07868000
TIN#TRVT EQU   (*-TINFATAB)/4                                  @D61NNGL 07869000
         DC    A(TINFTRVT)          3 TREADY COND=VTAM                  07870000
TIN#TRCA EQU   (*-TINFATAB)/4                                  @D61NNGL 07871000
         DC    A(TINFTRCA)          4 TREADY COND=CANCEL                07872000
TIN#TRVC EQU   (*-TINFATAB)/4                                  @D61NNGL 07873000
         DC    A(TINFTRVC)          5 TREADY COND=VCANCEL               07874000
TIN#GSAV EQU   (*-TINFATAB)/4                                  @D61NNGL 07875000
         DC    A(TINFGSAV)          6 GETFLD F=SAVAR                    07876000
TIN#GTPP EQU   (*-TINFATAB)/4                                  @D61NNGL 07877000
         DC    A(TINFGTPP)          7 GETFLD F=PPSAVAR                  07878000
TIN#GTLT EQU   (*-TINFATAB)/4                                  @D61NNGL 07879000
         DC    A(TINFGTLT)          8 GETFLD F=LTAPTR                   07880000
TIN#GTCC EQU   (*-TINFATAB)/4                                  @D61NNGL 07881000
         DC    A(TINFGTCC)          9 GETFLD F=CNCLCODE                 07882000
TIN#GTPI EQU   (*-TINFATAB)/4                                  @D61NNGL 07883000
         DC    A(TINFGTPI)          A GETFLD F=PIK                      07884000
TIN#GTMA EQU   (*-TINFATAB)/4                                  @D61NNGL 07885000
         DC    A(TINFGTMA)          B GETFLD F=MAINTASK                 07886000
TIN#GTVO EQU   (*-TINFATAB)/4                                  @D61NNGL 07887000
         DC    A(TINFGTVO)          C GETFLD F=VTAMOPEN                 07888000
TIN#GTVD EQU   (*-TINFATAB)/4                                  @D61NNGL 07889000
         DC    A(TINFGTVD)          D GETFLD F=VTAMDISP                 07890000
TIN#GTAO EQU   (*-TINFATAB)/4                                  @D61NNGL 07891000
         DC    A(TINFGTAO)          E GETFLD F=AOTPTR                   07892000
TIN#MOSY EQU   (*-TINFATAB)/4                                  @D61NNGL 07893000
         DC    A(TINFMOSY)          F MODFLD F=SYSRESW                  07894000
TIN#MOCC EQU   (*-TINFATAB)/4                                  @D61NNGL 07895000
         DC    A(TINFMOCC)         10 MODFLD F=CNCLCODE                 07896000
TIN#MOVO EQU   (*-TINFATAB)/4                                  @D61NNGL 07897000
         DC    A(TINFMOVO)         11 MODFLD F=VTAMOPEN                 07898000
TIN#MOVD EQU   (*-TINFATAB)/4                                  @D61NNGL 07899000
         DC    A(TINFMOVD)         12 MODFLD F=VTAMDISP                 07900000
TIN#TRST EQU   (*-TINFATAB)/4                                  @D61NNGL 07901000
         DC    A(TINFTRST)         13 TREADY COND=START,PART   @D36IDFG 07902000
TIN#TROE EQU   (*-TINFATAB)/4                                  @D61NNGL 07903000
         DC    A(TINFTROE)         14 TREADY COND=OC,PART      @D36IDFG 07904000
TIN#TRCE EQU   (*-TINFATAB)/4                                  @D61NNGL 07905000
         DC    A(TINFTRCE)         15 TREADY COND=CANCEL,PART  @D36IDFG 07906000
TIN#TWSN EQU   (*-TINFATAB)/4                                  @D61NNGL 07907000
         DC    A(TINFTWSN)         16 TSTOP RETURN=NO          @D36IDFG 07908000
TIN#TWSY EQU   (*-TINFATAB)/4                                  @D61NNGL 07909000
         DC    A(TINFTWSY)         17 TSTOP RETURN=YES         @D36IDFG 07910000
TIN#TWSP EQU   (*-TINFATAB)/4                                  @D61NNGL 07911000
         DC    A(TINFTWSP)         18 TSTOP COND=STOP          @D36IDFG 07912000
TIN#TWUB EQU   (*-TINFATAB)/4                                  @D61NNGL 07913000
         DC    A(TINFTWUB)         19 TSTOP COND=UNBATCH       @D36IDFG 07914000
TIN#GTCA EQU   (*-TINFATAB)/4                                  @D61NNGL 07915000
         DC    A(TINFGTCA)         1A GETFLD F=CNCLALL         @D36IDFG 07916000
TIN#GTEP EQU   (*-TINFATAB)/4                                  @D61NNGL 07917000
         DC    A(TINFGTEP)         1B GETFLD F=ICCFPP          @D36IDFG 07918000
TIN#MOSA EQU   (*-TINFATAB)/4                                  @D61NNGL 07919000
         DC    A(TINFMOSA)         1C MODFLD F=SAVAR           @D36IDFG 07920000
TIN#MOCA EQU   (*-TINFATAB)/4                                  @D61NNGL 07921000
         DC    A(TINFMOCA)         1D MODFLD F=CNCLALL         @D36IDFG 07922000
TIN#GTSY EQU   (*-TINFATAB)/4                                  @D61NNGL 07923000
         DC    A(TINFGTSY)         1E GETFLD F=SYSRESW         @D36IDFG 07924000
TIN#GTRO EQU   (*-TINFATAB)/4                                  @D61NNGL 07925000
         DC    A(TINFGTRO)         1F GETFLD F=ICCFRO          @D36IDWK 07926000
TIN#GTAC EQU   (*-TINFATAB)/4                                  @D61NNGL 07927000
         DC    A(TINFGTAC)         20 GETFLD F=ACLOSE          @D36IDWK 07928000
TIN#GTST EQU   (*-TINFATAB)/4                                  @D61NNGL 07929000
         DC    A(TINFGTST)         21 GETFLD F=STATUS          @D36IDWK 07930000
TIN#MOEP EQU   (*-TINFATAB)/4                                  @D61NNGL 07931000
         DC    A(TINFMOEP)         22 MODFLD F=ICCFPP          @D36IDWK 07932000
TIN#MORO EQU   (*-TINFATAB)/4                                  @D61NNGL 07933000
         DC    A(TINFMORO)         23 MODFLD F=ICCFRO          @D36IDWK 07934000
TIN#MOAC EQU   (*-TINFATAB)/4                                  @D61NNGL 07935000
         DC    A(TINFMOAC)         24 MODFLD F=ACLOSE          @D36IDWK 07936000
TIN#GTSU EQU   (*-TINFATAB)/4                                  @D61NNGL 07937000
         DC    A(TINFGTSU)         25 GETFLD F=NSUB            @D36IDWK 07938000
TIN#GTCT EQU   (*-TINFATAB)/4                                  @D61NNGL 07939000
         DC    A(TINFGTCT)         26 GETFLD F=CPUTIME         @D36IDWK 07940000
TIN#MVSO EQU   (*-TINFATAB)/4                                  @D61NNGL 07941000
         DC    A(TINFMVSO)         27 MODFLD F=VSAMOPEN        @D36IDWK 07942000
TIN#GTAB EQU   (*-TINFATAB)/4                                  @D61NNGL 07943000
         DC    A(TINFGTAB)         28 GETFLD F=ABINPR          @D36GDWK 07944000
TIN#TRIC EQU   (*-TINFATAB)/4                                  @D61NNGL 07945000
         DC    A(TINFTRIC)         29 TREADY COND = ICCF       @D319DGN 07946000
TIN#GTLA EQU   (*-TINFATAB)/4                                  @D61NNGL 07947000
         DC    A(TINFGTLA)         2A GETFLD F=LTAACT          @D36GDWK 07948000
TIN#GTPS EQU   (*-TINFATAB)/4                                  @D61NNGL 07949000
         DC    A(TINFGTPS)         2B GETFLD F=OPENSVA         @D36GDWK 07950000
TIN#MOPS EQU   (*-TINFATAB)/4                                  @D61NNGL 07951000
         DC    A(TINFMOPS)         2C MODFLD F=OPENSVA         @D36GDWK 07952000
TIN#MOIC EQU   (*-TINFATAB)/4                                  @D61NNGL 07953000
         DC    A(TINFMOIC)         2D MODFLD F=ICCFSVC         @D36GDWK 07954000
TIN#GTPN EQU   (*-TINFATAB)/4                                  @D61NNGL 07955000
         DC    A(TINFGTPN)         2E GETFLD F=PAGEIN          @D365DFG 07956000
TIN#GTPO EQU   (*-TINFATAB)/4                                  @D61NNGL 07957000
         DC    A(TINFGTPO)         2F GETFLD F=PAGEOUT         @D365DFG 07958000
TIN#GTTA EQU   (*-TINFATAB)/4                                  @D61NNGL 07959000
         DC    A(TINFGTTA)         30 GETFLD F=TERMACT         @D36GDFG 07960000
TIN#GTEA EQU   (*-TINFATAB)/4                                  @D61NNGL 07961000
         DC    A(TINFGTEA)         31 GETFLD F=EOTACT          @D36GDFG 07962000
TIN#GPCX EQU   (*-TINFATAB)/4                                  @D61NNGL 07963000
         DC    A(TINFGPCX)         32 GETFLD F=PCEXIT          @D36ZDWK 07964000
TIN#GITX EQU   (*-TINFATAB)/4                                  @D61NNGL 07965000
         DC    A(TINFGITX)         33 GETFLD F=ITEXIT          @D36ZDWK 07966000
TIN#GTC2 EQU   (*-TINFATAB)/4                                  @D61NNGL 07967000
         DC    A(TINFGTC2)         34 GETFLD F=CNCLCOD2        @D36ZDWK 07968000
TIN#GOCX EQU   (*-TINFATAB)/4                                  @D61NNGL 07969000
         DC    A(TINFGOCX)         35 GETFLD F=OCEXIT          @D36ZDWK 07970000
TIN#TROF EQU   (*-TINFATAB)/4                                  @D61NNGL 07971000
         DC    A(TINFCNFC)         36 TREADY COND = OCCF       @D37CDFG 07972000
TIN#RLTS EQU   (*-TINFATAB)/4                                  @D61NNGL 07973000
         DC    A(TINFCNFC)         37 RLOCK COND = CRTSAV      @D37CDFG 07974000
TIN#RLHC EQU   (*-TINFATAB)/4                                  @D61NNGL 07975000
         DC    A(TINFCNFC)         38 RLOCK COND = HCFCB       @D37CDFG 07976000
TIN#GDLI EQU   (*-TINFATAB)/4                                  @DY45299 07977000
         DC    A(TINFGDLI)         39 GETFLD F=DLIBLK          @DY45299 07978000
TIN#MDLI EQU   (*-TINFATAB)/4                                  @DY45299 07979000
         DC    A(TINFMDLI)         3A MODFLD F=DLIBLK          @DY45299 07980000
TIN#GIPA EQU   (*-TINFATAB)/4                                  @D25IDAP 07981000
         AIF   (NOT &VSE250).N250080                           @D27XDAP 07982000
         DC    A(TINFGIPA)         3B GETFLD F=IPANCH          @D25IDAP 07983000
         AGO   .Y250020                                        @D25IDAP 07984000
.N250080 ANOP                                                  @D25IDAP 07985000
         DC    A(TINFCNFC)         3B GETFLD F=IPANCH          @D25IDAP 07986000
.Y250020 ANOP                                                  @D25IDAP 07987000
TIN#MIPA EQU   (*-TINFATAB)/4                                  @D25IDAP 07988000
         AIF   (NOT &VSE250).N250100                           @D27XDAP 07989000
         DC    A(TINFMIPA)         3C MODFLD F=IPANCH          @D25IDAP 07990000
         AGO   .Y250040                                        @D25IDAP 07991000
.N250100 ANOP                                                  @D25IDAP 07992000
         DC    A(TINFCNFC)         3C MODFLD F=IPANCH          @D25IDAP 07993000
.Y250040 ANOP                                                  @D25IDAP 07994000
TIN#GEXA EQU   (*-TINFATAB)/4                                  @DY45385 07995000
         DC    A(TINFGEXA)         3D GETFLD F=EXABPRMS        @DY45385 07996000
TIN#GTCB EQU   (*-TINFATAB)/4                                  @D61NNGL 07997000
         DC    A(TINFGTCB)         3E GETFLD F=BALANCE         @D37BDWK 07998000
TIN#GTSF EQU   (*-TINFATAB)/4                                  @D61NNGL 07999000
         DC    A(TINFGTSF)         3F GETFLD F=SSFLAGS         @D37CDFG 08000000
TIN#GTCP EQU   (*-TINFATAB)/4                                  @D61NNGL 08001000
         DC    A(TINFGTCP)         40 GETFLD F=COMRGPTR        @D37ADWK 08002000
TIN#GABX EQU   (*-TINFATAB)/4                                  @D61NNGL 08003000
         DC    A(TINFGABX)         41 GETFLD F=ABEXIT          @D14CDFG 08004000
TIN#SFCU EQU   (*-TINFATAB)/4                                  @D61NNGL 08005000
         DC    A(TINFSFCU)         42 SRCHFLD FIELD = CHNUNIT  @D14BDWK 08006000
TIN#SFDT EQU   (*-TINFATAB)/4                                  @D61NNGL 08007000
         DC    A(TINFSFDT)         43 SRCHFLD FIELD = DEVTYPE  @D14BDWK 08008000
TIN#DVUS EQU   (*-TINFATAB)/4                                  @D61NNGL 08009000
         DC    A(TINFDVUS)         44 DEVUSE                   @D14BDWK 08010000
TIN#DVRL EQU   (*-TINFATAB)/4                                  @D61NNGL 08011000
         DC    A(TINFDVRL)         45 DEVREL                   @D14BDWK 08012000
TIN#ENLI EQU   (*-TINFATAB)/4                                  @D61NNGL 08013000
         DC    A(TINFENLI)         46 SENTER LIBR              @D14BDWK 08014000
TIN#LELI EQU   (*-TINFATAB)/4                                  @D61NNGL 08015000
         DC    A(TINFLELI)         47 SLEAVE                   @D14BDWK 08016000
TIN#VIOP EQU   (*-TINFATAB)/4                                  @D61NNGL 08017000
         DC    A(TINFVIOP)         48 VIOPOINT                 @D14BDWK 08018000
TIN#GTUT EQU   (*-TINFATAB)/4                                  @D61NNGL 08019000
         DC    A(TINFGTUT)         49 GETFLD F=USECNT          @D14BDWK 08020000
TIN#GTUP EQU   (*-TINFATAB)/4                                  @D61NNGL 08021000
         DC    A(TINFGTUP)         4A GETFLD F=PUSECNT         @D14BDWK 08022000
TIN#GTMF EQU   (*-TINFATAB)/4                                  @D61NNGL 08023000
         DC    A(TINFGTMF)         4B GETFLD F=MOUNTFLG        @D14BDWK 08024000
TIN#MOMF EQU   (*-TINFATAB)/4                                  @D61NNGL 08025000
         DC    A(TINFMOMF)         4C MODFLD F=MOUNTFLG        @D14BDWK 08026000
TIN#TRPO EQU   (*-TINFATAB)/4                                  @D61NNGL 08027000
         DC    A(TINFTRPO)         4D TREADY COND=POWER        @D14BDWK 08028000
TIN#GTPX EQU   (*-TINFATAB)/4                                  @D61NNGL 08029000
         DC    A(TINFGTPX)         4E GETFLD F=PUBXPTR         @D14BDWK 08030000
TIN#GTPB EQU   (*-TINFATAB)/4                                  @D61NNGL 08031000
         DC    A(TINFGTPB)         4F GETFLD F=PCBPTR          @D14BDWK 08032000
TIN#GTTP EQU   (*-TINFATAB)/4                                  @D61NNGL 08033000
         DC    A(TINFGTTP)         50 GETFLD F=TCBPTR          @D14BDWK 08034000
TIN#GTOW EQU   (*-TINFATAB)/4                                  @D61NNGL 08035000
         DC    A(TINFGTOW)         51 GETFLD F=OWNER           @D14BDWK 08036000
TIN#GTMS EQU   (*-TINFATAB)/4                                  @D61NNGL 08037000
         DC    A(TINFGTMS)         52 GETFLD F=MSECS           @D14BDFG 08038000
TIN#MOMS EQU   (*-TINFATAB)/4                                  @D61NNGL 08039000
         DC    A(TINFMOMS)         53 MODFLD F=MSECS           @D14BDFG 08040000
TIN#VLRD EQU   (*-TINFATAB)/4                                  @D61NNGL 08041000
         DC    A(TINFVLRD)         54 VALID CHECK=READ         @D14BDFG 08042000
TIN#VLWR EQU   (*-TINFATAB)/4                                  @D61NNGL 08043000
         DC    A(TINFVLWR)         55 VALID CHECK=WRITE        @D14BDFG 08044000
TIN#GVSO EQU   (*-TINFATAB)/4                                  @D61NNGL 08045000
         DC    A(TINFGVSO)         56 GETFLD F=VSAMOPEN        @D14BDFG 08046000
TIN#MOPB EQU   (*-TINFATAB)/4                                  @D61NNGL 08047000
         DC    A(TINFMOPB)         57 MODFLD F=PERBIT          @D14BDFR 08048000
TIN#GTPU EQU   (*-TINFATAB)/4                                  @D61NNGL 08049000
         DC    A(TINFGTPU)         58 GETFLD F=PU              @D14BDFG 08050000
TIN#GTJA EQU   (*-TINFATAB)/4                                  @D61NNGL 08051000
         DC    A(TINFGTJA)         59 GETJA PART=,ACTION=      @D14BDFG 08052000
TIN#MORM EQU   (*-TINFATAB)/4                                  @D61NNGL 08053000
         DC    A(TINFMORM)         5A MODFLD F=RUNMODE         @D14NDFG 08054000
TIN#MOAS EQU   (*-TINFATAB)/4                                  @D61NNGL 08055000
         DC    A(TINFMOAS)         5B MODFLD F=SASCOPE         @D14NDFG 08056000
TIN#MOAP EQU   (*-TINFATAB)/4                                  @D61NNGL 08057000
         DC    A(TINFMOAP)         5C MODFLD F=PASCOPE         @D14NDFG 08058000
TIN#RLRA EQU   (*-TINFATAB)/4                                  @D61NNGL 08059000
         DC    A(TINFRLRA)         5D RLOCK COND=ALLOCR        @D14NDFG 08060000
TIN#DB2  EQU   (*-TINFATAB)/4                                  @D65CDOW 08061000
         AIF   (NOT &VSE250).N250120                           @D27XDAP 08062000
         DC    A(TINFDB2)          5E MODFLD F=DB2             @D65CDOW 08063000
         AGO   .Y250060                                        @D65CDOW 08064000
.N250120 ANOP                                                  @D65CDOW 08065000
         DC    A(TINFCNFC)         5E INVALID                  @D65CDOW 08066000
.Y250060 ANOP                                                  @D65CDOW 08067000
TIN#TRRA EQU   (*-TINFATAB)/4                                  @D61NNGL 08068000
         DC    A(TINFTRRA)         5F TREADY COND=ALLOCR       @D14NDFG 08069000
TIN#FC60 EQU   (*-TINFATAB)/4                                  @D6...RP 08070000
         DC    A(TINFCNFC)         60 INVALID (FOR FUTURE USE) @D6...RP 08071000
TIN#MLIB EQU   (*-TINFATAB)/4                                  @D61NNGL 08072000
         DC    A(TINFMLIB)         61 MODFLD F=LIBRSERV        @D14CDWK 08073000
TIN#GTDL EQU   (*-TINFATAB)/4                                  @D61NNGL 08074000
         DC    A(TINFGTDL)         62 GETFLD F=DEVPROP LU      @D21CDWK 08075000
TIN#GTDP EQU   (*-TINFATAB)/4                                  @D61NNGL 08076000
         DC    A(TINFGTDP)         63 GETFLD F=DEVPROP PU      @D21CDWK 08077000
TIN#GTER EQU   (*-TINFATAB)/4                                  @D61NNGL 08078000
         DC    A(TINFGTER)         64 GETFLD F=EOTRTN          @DA37011 08079000
TIN#GTDM EQU   (*-TINFATAB)/4                                  @D61NNGL 08080000
         DC    A(TINFGTDM)         65 GETFLD F=MODE LU         @D61NNGL 08081000
TIN#GTMD EQU   (*-TINFATAB)/4                                  @D61NNGL 08082000
         DC    A(TINFGTMD)         66 GETFLD F=MODE PU         @D21FDRP 08083000
TIN#GTPL EQU   (*-TINFATAB)/4                                  @D61NNGL 08084000
         DC    A(TINFGTPL)         67 GETFLD F=PIK LOGID       @D31LDMZ 08085000
TIN#GPS0 EQU   (*-TINFATAB)/4                                  @D61NNGL 08086000
         DC    A(TINFGPS0)         68 GETFLD F=PSTAT           @D31LDMZ 08087000
TIN#GIVM EQU   (*-TINFATAB)/4                                  @D61NNGL 08088000
         DC    A(TINFGIVM)         69 GETFLD F=IVMCB           @D31ZDGN 08089000
TIN#MORA EQU   (*-TINFATAB)/4                                  @D61NNGL 08090000
         DC    A(TINFMORA)         6A MODFLD F=RIPLAUTH        @D31LDMZ 08091000
TIN#TROC EQU   (*-TINFATAB)/4                                  @D61NNGL 08092000
         DC    A(TINFTROC)         6B TREADY COND=OCANCEL      @D31LDGN 08093000
TIN#OSAE EQU   (*-TINFATAB)/4                                  @D61NNGL 08094000
         AIF   (NOT &VSE260).N260100                           @D65CDOW 08095000
         DC    A(TINFOSAE)         6C GETFLD FIELD=OSAE        @D65CDOW 08096000
         AGO   .Y260100                                        @D65CDOW 08097000
.N260100 ANOP                                                  @D65CDOW 08098000
         DC    A(TINFCNFC)         6C INVALID                  @D65CDOW 08099000
.Y260100 ANOP                                                  @D65CDOW 08100000
TIN#FC6D EQU   (*-TINFATAB)/4                                  @D61NNGL 08101000
         DC    A(TINFCNFC)         6D INVALID (FOR FUTURE USE) @D51IDHA 08102000
TIN#FC6E EQU   (*-TINFATAB)/4                                  @D61NNGL 08103000
         DC    A(TINFCNFC)         6E INVALID (FOR FUTURE USE) @D51IDHA 08104000
TIN#FC6F EQU   (*-TINFATAB)/4                                  @D61NNGL 08105000
         DC    A(TINFCNFC)         6F INVALID (FOR FUTURE USE) @D51IDHA 08106000
TIN#FC70 EQU   (*-TINFATAB)/4                                  @D61NNGL 08107000
         DC    A(TINFCNFC)         70 INVALID (FOR FUTURE USE) @D51IDHA 08108000
TIN#FC71 EQU   (*-TINFATAB)/4                                  @D61NNGL 08109000
         DC    A(TINFCNFC)         71 INVALID (FOR FUTURE USE) @D51IDHA 08110000
         AIF   (&VSE280).Y280040                               @D28ADAP 08111000
TIN#FC72 EQU   (*-TINFATAB)/4                                  @D61NNGL 08112000
         DC    A(TINFCNFC)         72 INVALID (FOR FUTURE USE) @D51IDHA 08113000
         AGO   .N280040                                        @D28ADAP 08114000
.Y280040 ANOP                                                  @D28ADAP 08115000
TIN#FC72 EQU   (*-TINFATAB)/4                                  @D61NNGL 08116000
         DC    A(TINFMSCI)         72 MODFLD F=SCSICUU         @D28ADAP 08117000
.N280040 ANOP                                                  @D28ADAP 08118000
TIN#GCPL EQU   (*-TINFATAB)/4                                  @D61NNGL 08119000
         DC    A(TINFGCPL)         73 GETFLD F=COMRGPTR LOGID  @D51IDHA 08120000
TIN#GPSL EQU   (*-TINFATAB)/4                                  @D61NNGL 08121000
         DC    A(TINFGPSL)         74 GETFLD F=PSTAT LOGID     @D51IDHA 08122000
TIN#GDPP EQU   (*-TINFATAB)/4                                  @D61NNGL 08123000
         DC    A(TINFGDPP)         75 GETFLD F=DIBPTR PART     @D51IDHA 08124000
TIN#GDPL EQU   (*-TINFATAB)/4                                  @D61NNGL 08125000
         DC    A(TINFGDPL)         76 GETFLD F=DIBPTR LOGID    @D51IDHA 08126000
TIN#GLTP EQU   (*-TINFATAB)/4                                  @D61NNGL 08127000
         DC    A(TINFGLTP)         77 GETFLD F=LUBTAB PART     @D51IDHA 08128000
TIN#GLTL EQU   (*-TINFATAB)/4                                  @D61NNGL 08129000
         DC    A(TINFGLTL)         78 GETFLD F=LUBTAB LOGID    @D51IDHA 08130000
TIN#GLBP EQU   (*-TINFATAB)/4                                  @D61NNGL 08131000
         DC    A(TINFGLBP)         79 GETFLD F=LUB PART        @D51IDHA 08132000
TIN#GLBL EQU   (*-TINFATAB)/4                                  @D61NNGL 08133000
         DC    A(TINFGLBL)         7A GETFLD F=LUB LOGID       @D51IDHA 08134000
TIN#GFLP EQU   (*-TINFATAB)/4                                  @D61NNGL 08135000
         DC    A(TINFGFLP)         7B GETFLD F=FREELUB PRT     @D51IDHA 08136000
TIN#GFLL EQU   (*-TINFATAB)/4                                  @D61NNGL 08137000
         DC    A(TINFGFLL)         7C GETFLD F=FREELUB LOG     @D51IDHA 08138000
TIN#GNPT EQU   (*-TINFATAB)/4                                  @D61NNGL 08139000
         DC    A(TINFGNPT)         7D GETFLD F=NPART           @D51IDHA 08140000
TIN#GPBP EQU   (*-TINFATAB)/4                                  @D61NNGL 08141000
         DC    A(TINFGPBP)         7E GETFLD F=PUB PART        @D51IDHA 08142000
TIN#GPBL EQU   (*-TINFATAB)/4                                  @D61NNGL 08143000
         DC    A(TINFGPBL)         7F GETFLD F=PUB LOGID       @D51IDHA 08144000
TIN#GPCT EQU   (*-TINFATAB)/4                                  @D61NNGL 08145000
         DC    A(TINFGPCT)         80 GETFLD F=PCEATAB         @D51IDHA 08146000
TIN#GPCP EQU   (*-TINFATAB)/4                                  @D61NNGL 08147000
         DC    A(TINFGPCP)         81 GETFLD F=PCEPTR PART     @D51IDHA 08148000
TIN#GPCL EQU   (*-TINFATAB)/4                                  @D61NNGL 08149000
         DC    A(TINFGPCL)         82 GETFLD F=PCEPTR LOGID    @D51IDHA 08150000
TIN#GPIP EQU   (*-TINFATAB)/4                                  @D61NNGL 08151000
         DC    A(TINFGPIP)         83 GETFLD F=PIB PART        @D51IDHA 08152000
TIN#GPIL EQU   (*-TINFATAB)/4                                  @D61NNGL 08153000
         DC    A(TINFGPIL)         84 GETFLD F=PIB LOGID       @D51IDHA 08154000
TIN#GLGD EQU   (*-TINFATAB)/4                                  @D61NNGL 08155000
         DC    A(TINFGLGD)         85 GETFLD F=LOGID           @D51IDHA 08156000
TIN#GSKP EQU   (*-TINFATAB)/4                                  @D61NNGL 08157000
         DC    A(TINFGSKP)         86 GETFLD F=STORKEY PART    @D51IDHA 08158000
TIN#GSKL EQU   (*-TINFATAB)/4                                  @D61NNGL 08159000
         DC    A(TINFGSKL)         87 GETFLD F=STORKEY LOGID   @D51IDHA 08160000
TIN#GPPT EQU   (*-TINFATAB)/4                                  @D61NNGL 08161000
         DC    A(TINFGPPT)         88 GETFLD F=PUBPTR          @D51IDHA 08162000
TIN#GPP2 EQU   (*-TINFATAB)/4                                  @D61NNGL 08163000
         DC    A(TINFGPP2)         89 GETFLD F=PUB2            @D51IDHA 08164000
TIN#GNLP EQU   (*-TINFATAB)/4                                  @D61NNGL 08165000
         DC    A(TINFGNLP)         8A GETFLD F=NUMLUB PART     @D51IDHA 08166000
TIN#GNLL EQU   (*-TINFATAB)/4                                  @D61NNGL 08167000
         DC    A(TINFGNLL)         8B GETFLD F=NUMLUB LOGID    @D51IDHA 08168000
TIN#GCLT EQU   (*-TINFATAB)/4                                  @D61NNGL 08169000
         DC    A(TINFGCLT)         8C GETFLD F=CLASSTAB        @D51IDHA 08170000
TIN#GIPL EQU   (*-TINFATAB)/4                                  @D61NNGL 08171000
         DC    A(TINFGIPL)         8D GETFLD F=IPLTIME         @D51IDHA 08172000
TIN#GPJP EQU   (*-TINFATAB)/4                                  @D61NNGL 08173000
         DC    A(TINFGPJP)         8E GETFLD F=POWJOB PART     @D51IDHA 08174000
TIN#GPJL EQU   (*-TINFATAB)/4                                  @D61NNGL 08175000
         DC    A(TINFGPJL)         8F GETFLD F=POWJOB LOGID    @D51IDHA 08176000
TIN#GPSY EQU   (*-TINFATAB)/4                                  @D61NNGL 08177000
         DC    A(TINFGPSY)         90 GETFLD F=POWSYS          @D51IDHA 08178000
TIN#GTAL EQU   (*-TINFATAB)/4                                  @D61NNGL 08179000
         DC    A(TINFGTAL)         91 GETFLD F=ALET            @D51ADGL 08180000
TIN#CPOW EQU   (*-TINFATAB)/4                                  @D61NNGL 08181000
         DC    A(TINFCPOW)         92 MODFLD F=COPYOWN         @D51IDGL 08182000
TIN#RSOW EQU   (*-TINFATAB)/4                                  @D61NNGL 08183000
         DC    A(TINFRSOW)         93 MODFLD F=RESETOWN        @D51IDGL 08184000
TIN#VSPT EQU   (*-TINFATAB)/4                                  @D61NNGL 08185000
         DC    A(TINFVSPT)         94 MODFLD F=VSPTFLG         @VSPT.GL 08186000
TIN#MOS1 EQU   (*-TINFATAB)/4                                  @D61NNGL 08187000
         DC    A(TINFMOS1)         95 MODFLD F=SASCOPE1        @D51IDGL 08188000
TIN#MOP1 EQU   (*-TINFATAB)/4                                  @D61NNGL 08189000
         DC    A(TINFMOP1)         96 MODFLD F=PASCOPE1        @D51IDGL 08190000
TIN#GTCG EQU   (*-TINFATAB)/4                                  @D61NNGL 08191000
         DC    A(TINFGTCG)         97 GETFLD F=LOGBAL          @D37BDWK 08192000
TIN#GAB1 EQU   (*-TINFATAB)/4                                  @D61NNGL 08193000
         DC    A(TINFGAB1)         98 GETFLD F=ABEXIT1         @D51ZDGL 08194000
TIN#GPC1 EQU   (*-TINFATAB)/4                                  @D61NNGL 08195000
         DC    A(TINFGPC1)         99 GETFLD F=PCEXIT1         @D52VDGL 08196000
TIN#GOC1 EQU   (*-TINFATAB)/4                                  @D61NNGL 08197000
         DC    A(TINFGOC1)         9A GETFLD F=OCEXIT1         @D52VDGL 08198000
TIN#GIT1 EQU   (*-TINFATAB)/4                                  @D61NNGL 08199000
         DC    A(TINFGIT1)         9B GETFLD F=ITEXIT1         @D52VDGL 08200000
TIN#ENAL EQU   (*-TINFATAB)/4                                  @D61NNGL 08201000
         DC    A(TINFENAL)         9C SENTER CODE=ALET         @D52VDGL 08202000
TIN#LEAL EQU   (*-TINFATAB)/4                                  @D61NNGL 08203000
         DC    A(TINFLEAL)         9D SLEAVE CODE=ALET         @D52VDGL 08204000
TIN#SCHN EQU   (*-TINFATAB)/4                                  @D61NNGL 08205000
         DC    A(TINFSCHN)         9E GETFLD F=SUBCHN          @D52VDGL 08206000
TIN#GSA1 EQU   (*-TINFATAB)/4                                  @D61NNGL 08207000
         DC    A(TINFGSA1)         9F GETFLD F=SAVAR1          @KD40391 08208000
TIN#MCEL EQU   (*-TINFATAB)/4                                  @D61NNGL 08209000
         DC    A(TINFMCEL)         A0 MODFLD F=CELANCH         @D61NNGL 08210000
         AIF   (NOT &VSE260).N260120                           @D27ADAP 08211000
TIN#VSEL EQU   (*-TINFATAB)/4                                  @D27ADAP 08212000
         DC    A(TINFVSEL)         A1 GETFLD F=VSELEVEL        @D27ADAP 08213000
         AIF   (NOT &VSE270).N270040                           @DY45988 08214000
TIN#VSID EQU   (*-TINFATAB)/4                                  @D27ADAP 08215000
         DC    A(TINFVSID)         A2 GETFLD F=VSEID           @D27ADAP 08216000
TIN#TLSD EQU   (*-TINFATAB)/4                                  @D27ADAP 08217000
         DC    A(TINFTLSD)         A3 GETFLD F=TLSDEF          @D27ADAP 08218000
         AGO   .Y270020                                        @DY45988 08219000
.N260120 ANOP                                                  @D27ADAP 08220000
TIN#CLUS EQU   (*-TINFATAB)/4                                  @D61NNGL 08221000
         DC    A(TINFCNFC)         A1 RESERVED                 @D62NDAP 08222000
.N270040 ANOP                                                  @DY45988 08223000
TIN#GTBL EQU   (*-TINFATAB)/4                                  @52SQLGL 08224000
         DC    A(TINFCNFC)         A2 RESERVED                 @D62NDAP 08225000
TIN#MOBL EQU   (*-TINFATAB)/4                                  @52SQLGL 08226000
         DC    A(TINFCNFC)         A3 RESERVED                 @D62NDAP 08227000
.Y270020 ANOP                                                  @DY45988 08228000
TIN#GLBN EQU   (*-TINFATAB)/4                                  @52SQLGL 08229000
         DC    A(TINFGLBN)         A4 GETFLD F=LIBNAME         @DAOM053 08230000
TIN#MRST EQU   (*-TINFATAB)/4                                  @D61NNGL 08231000
         DC    A(TINFMRST)         A5 MODFLD F=MNTRSTMP        @D61NNGL 08232000
TIN#MRSP EQU   (*-TINFATAB)/4                                  @D61NNGL 08233000
         DC    A(TINFMRSP)         A6 MODFLD F=MNTRSPRM        @D61NNGL 08234000
TIN#MRSF EQU   (*-TINFATAB)/4                                  @D61NNGL 08235000
         DC    A(TINFMRSF)         A7 MODFLD F=MNTRSFRC        @D61NNGL 08236000
TIN#MRLT EQU   (*-TINFATAB)/4                                  @D61NNGL 08237000
         DC    A(TINFMRLT)         A8 MODFLD F=MNTRLTMP        @D61NNGL 08238000
TIN#MRLP EQU   (*-TINFATAB)/4                                  @D61NNGL 08239000
         DC    A(TINFMRLP)         A9 MODFLD F=MNTRLPRM        @D61NNGL 08240000
TIN#MRLA EQU   (*-TINFATAB)/4                                  @D61NNGL 08241000
         DC    A(TINFMRLA)         AA MODFLD F=MNTRLTPA        @D61NNGL 08242000
TIN#GPX1 EQU   (*-TINFATAB)/4                                  @D61NNGL 08243000
         DC    A(TINFGPX1)         AB GETFLD F=PUBXPTR CUU=    @D61NNGL 08244000
TIN#GNXO EQU   (*-TINFATAB)/4                                  @D61NNGL 08245000
         DC    A(TINFGNXO)         AC GETFLD F=NXTOWNER,PART=  @D61NNGL 08246000
TIN#MRPA EQU   (*-TINFATAB)/4                                  @D61NNGL 08247000
         DC    A(TINFMRLA)         AD MODFLD F=MNTRLPRA        @D61NNGL 08248000
TIN#GPOC EQU   (*-TINFATAB)/4                                  @D61NNGL 08249000
         DC    A(TINFGPOC)         AE GETFLD F=POWCAT          @D61NNGL 08250000
TIN#GCEL EQU   (*-TINFATAB)/4                                  @D61NNGL 08251000
         DC    A(TINFGCEL)         AF GETFLD F=CELANCH         @D61NNGL 08252000
TIN#GMNF EQU   (*-TINFATAB)/4                                  @D61NNGL 08253000
         DC    A(TINFMINF)         B0 GETFLD F=MNTINFO         @D61NNGL 08254000
TIN#MMNF EQU   (*-TINFATAB)/4                                  @D61NNGL 08255000
         DC    A(TINFMINF)         B1 MODFLD F=MNTINFO         @D61NNGL 08256000
TIN#GRXE EQU   (*-TINFATAB)/4                                  @D61NNGL 08257000
         DC    A(TINFGRXE)         B2 GETFLD F=RXEOJPTR        @D61NNGL 08258000
TIN#MRXE EQU   (*-TINFATAB)/4                                  @D61NNGL 08259000
         DC    A(TINFMRXE)         B3 MODFLD F=RXEOJPTR        @D61NNGL 08260000
TIN#GSTK EQU   (*-TINFATAB)/4                                  @D61NNGL 08261000
         DC    A(TINFGSTK)         B4 GETFLD F=REALKEY         @D61NNGL 08262000
TIN#DSPA EQU   (*-TINFATAB)/4                                  @D61NNGL 08263000
         DC    A(TINFDSPA)         B5 GETFLD F=DSPACE          @D61EDOW 08264000
TIN#RID  EQU   (*-TINFATAB)/4                                  @D61NNGL 08265000
         DC    A(TINFRIDE)         B6 MODFLD F=RID             @D61EDOW 08266000
TIN#PTC  EQU   (*-TINFATAB)/4                                  @D62ADMK 08267000
         DC    A(TINFGPTC)         B7 GETFLD F=PTRACE          @D62ADMK 08268000
TIN#IPW  EQU   (*-TINFATAB)/4                                  @D62ADMK 08269000
         DC    A(TINFIPWS)         B8 MODFLD F=IPWSEGM         @D62ADMK 08270000
TIN#UCB  EQU   (*-TINFATAB)/4                                  @D62ADMK 08271000
         DC    A(TINFUCBS)         B9 GETFLD F=UCB             @D63ADMK 08272000
TIN#MODM EQU   (*-TINFATAB)/4                                  @D62ADMK 08273000
         DC    A(TINFMODM)         BA MODFLD F=MODE LU         @D62ADMK 08274000
TIN#MOMD EQU   (*-TINFATAB)/4                                  @D62ADMK 08275000
         DC    A(TINFMOMD)         BB MODFLD F=MODE PU         @D62ADMK 08276000
TIN#MPDM EQU   (*-TINFATAB)/4                                  @D62ADMK 08277000
         DC    A(TINFMODM)         BC MODFLD F=PMODE LU        @D63ADMK 08278000
TIN#MPMD EQU   (*-TINFATAB)/4                                  @D62ADMK 08279000
         DC    A(TINFMOMD)         BD MODFLD F=PMODE PU        @D63ADMK 08280000
TIN#GPDM EQU   (*-TINFATAB)/4                                  @D63ADMK 08281000
         DC    A(TINFGTDM)         BE GETFLD F=PMODE LU        @D63ADMK 08282000
TIN#GPMD EQU   (*-TINFATAB)/4                                  @D63ADMK 08283000
         DC    A(TINFGTMD)         BF GETFLD F=PMODE PU        @D63ADMK 08284000
TIN#ACM  EQU   (*-TINFATAB)/4                                  @D62ADMK 08285000
         DC    A(TINFACEM)         C0 MODFLD F=ACEEPTR         @D63ADMK 08286000
TIN#ACG  EQU   (*-TINFATAB)/4                                  @D62ADMK 08287000
         DC    A(TINFACEG)         C1 GETFLD F=ACEEPTR         @D63ADMK 08288000
TIN#SYSL EQU   (*-TINFATAB)/4                                  @D62ADMK 08289000
         DC    A(TINFSYSL)         C2 MODFLD F=SYSAL           @D63ADMK 08290000
TIN#GITA EQU   (*-TINFATAB)/4                                  @D64ADMK 08291000
         DC    A(TINFGITA)         C3 GETFLD F=ITACTIVE        @D64ADMK 08292000
TIN#GJCP EQU   (*-TINFATAB)/4                                  @D63ADMK 08293000
         DC    A(TINFGJCP)         C4 GETFLD F=JCLPARM         @D63ADMK 08294000
TIN#GPUC EQU   (*-TINFATAB)/4                                  @D63ADMK 08295000
         DC    A(TINFGPUC)         C5 GETFLD F=PU CUU          @D64ADMK 08296000
TIN#GEXM EQU   (*-TINFATAB)/4                                  @D63ADMK 08297000
         DC    A(TINFGEXM)         C6 GETFLD F=EXECMODE        @D64ADMK 08298000
TINFTEND EQU   *                   END OF ADDRESS TABLE                 08299000
TINFFMAX EQU   (TINFTEND-TINFATAB-4)/4      MAX FUNCTION CODE  @D51IDHA 08300000
*                                                              @D61NNGL 08301000
*    END OF ADDRESS VECTOR TABLE.                              @D61NNGL 08302000
*                                                              @D61NNGL 08303000
         SPACE 1                                                        08304000
         DROP  RC                                              @D51IDIS 08305000
         SPACE 1                                                        08306000
         AIF   (NOT &SGTINF).NPRT020                           @52CASRP 08307000
         PRINT NOGEN                                           @D37ZDWK 08308000
.NPRT020 MEXIT                                                 @D37ZDWK 08309000
.TININVS MNOTE 8,'SUBJECT NOT KNOWN IN SGTINF'                 #SECURGL 08310000
         MEXIT                                                 #SECURGL 08311000
.TININVC MNOTE 8,'WRONG REGISTER CONVENTION'                   #SECURGL 08312000
         MEND                                                           08313000
