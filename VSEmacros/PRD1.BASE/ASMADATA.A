         MACRO                                                          00001000
         ASMADATA &PRINT=NOGEN,&JID=NO,&AID=NO,&COMPUNIT=NO,&OUTPUT=NO,+00002000
               &AOPT=NO,&OPT=NO,&ESD=NO,&SOURCE=NO,&SRCERR=NO,&DCDS=NO,+00003000
               &DCX=NO,&MACH=NO,&RLD=NO,&SYM=NO,&XREF=NO,&RXREF=NO,    +00004000
               &MXREF=NO,&MXREFX=NO,&USER=NO,&USING=NO,&STATS=NO   @v4c 00005000
.*                                                                 @v4d 00006000
.**************************************************************         00007000
.*   Licensed Materials - Property of IBM                     *         00008000
.*                                                            *         00009000
.*   5696-234                                                 *         00010000
.*                                                            *         00011000
.*   (C) Copyright IBM Corp. 1975, 2004. All Rights Reserved. *         00012000
.*                                    @v7a                    *         00013000
.*   US Government Users Restricted Rights - Use,             *         00014000
.*   duplication or disclosure restricted by GSA ADP          *         00015000
.*   Schedule Contract with IBM Corp.                         *         00016000
.*                                                            *         00017000
.**************************************************************         00018000
.***START OF SPECIFICATIONS  ****************************************** 00019000
.*                                                                    * 00020000
.*MACRO NAME: ASMADATA                                                * 00021000
.*                                                                    * 00022000
.*DESCRIPTIVE NAME: Associated Data file mapping DSECT                * 00023000
.*                                                                    * 00024000
.*                                                                    * 00025000
.*FUNCTION: This macro produces a DSECT to map the associated data    * 00026000
.*          file records depending on the parameters passed to this   * 00027000
.*          macro.                                                    * 00028000
.*          Associated data file records are written to SYSADATA      * 00029000
.*          in MVS and CMS, and to SYSADAT in VSE.                    * 00030000
.*                                                                    * 00031000
.*NOTES:                                                              * 00032000
.*                                                                    * 00033000
.*  DEPENDENCIES: None                                                * 00034000
.*                                                                    * 00035000
.*  RESTRICTIONS: NONE                                                * 00036000
.*                                                                    * 00037000
.*  REGISTER CONVENTIONS: N/A                                         * 00038000
.*                                                                    * 00039000
.*  PATCH LABEL: NONE                                                 * 00040000
.*                                                                    * 00041000
.*MODULE TYPE: MACRO                                                  * 00042000
.*                                                                    * 00043000
.*  PROCESSOR: ASSEMBLER                                              * 00044000
.*                                                                    * 00045000
.*  MODULE SIZE: N/A                                                  * 00046000
.*                                                                    * 00047000
.*  ATTRIBUTES: N/A                                                   * 00048000
.*                                                                    * 00049000
.*ENTRY POINT: N/A                                                    * 00050000
.*                                                                    * 00051000
.*  PURPOSE: SEE FUNCTION                                             * 00052000
.*                                                                    * 00053000
.*  LINKAGE: N/A                                                      * 00054000
.*                                                                    * 00055000
.*  INPUT:                                                            * 00056000
.*                                                                    * 00057000
.*    REGISTERS: NONE                                                 * 00058000
.*                                                                    * 00059000
.*    OTHER:                                                          * 00060000
.*       PARAMETERS RECEIVED = PRINT, JID, AID, COMPUNIT, OUTPUT,  @v4c 00061000
.*                             AOPT, OPT, ESD, SOURCE, SRCERR,     @v4c 00061800
.*                             DCDS, DCX, MACH, RLD, SYM, XREF,    @v4c 00062600
.*                             RXREF, MXREF, MXREFX, USER, USING,  @v4c 00063400
.*                             STATS                               @v4a 00064200
.*       HOW PASSED: OPTIONAL POSITIONAL KEYWORD                      * 00065000
.*       PRINT = NOGEN will suppress the listing                      * 00066000
.*                 GEN will not suppress the listing                  * 00067000
.*       JID   = YES   will produce the Job Identificatio DSECT       * 00068000
.*               NO    will not produce the JID DSECT                 * 00069000
.*       AID   = YES   will produce the ADATA ID DSECT                * 00069100
.*               NO    will not produce the ADATA ID DSECT            * 00069200
.*     COMPUNIT= YES   will produce the ADATA COMPILATION UNIT DSECT  * 00069300
.*               NO    will not produce the ADATA COMPILATION UNIT DS * 00069400
.*       OUTPUT= YES   will produce the OUTPUT FILE DSECT             * 00069500
.*               NO    will not produce the OUTPUT FILE DSECT         * 00069600
.*       AOPT  = YES   will produce the Options File DSECT            * 00069700
.*               NO    will not produce the Options File DSECT        * 00069800
.*       OPT   = YES   will produce the Options DSECT                 * 00070000
.*               NO    will not produce Options DSECT                 * 00071000
.*       ESD   = YES   will produce the ESD DSECT                     * 00072000
.*               NO    will not produce Options DSECT                 * 00073000
.*       SOURCE= YES   will produce the SOURCE DSECT                  * 00074000
.*               NO    will not produce the SOURCE DSECT              * 00075000
.*       SRCERR= YES   will produce the SOURCE error DSECT            * 00076000
.*               NO    will not produce the SOURCE error DSECT        * 00077000
.*       DCDS  = YES   will produce the DC/DS DSECT                   * 00078000
.*               NO    will not produce the DC/DS DSECT               * 00079000
.*       DCX   = YES   will produce the DC Extension DSECT         @v4c 00079300
.*               NO    will not produce the DC Extension DSECT        * 00079600
.*       MACH  = YES   will produce the Machine Instruction DSECT     * 00080000
.*               NO    will not produce the Mach Inst DSECT           * 00081000
.*       RLD   = YES   will produce the RLD DSECT                     * 00081300
.*               NO    will not produce the RLD DSECT                 * 00081600
.*       SYM   = YES   will produce the SYMBOL DSECT                  * 00082000
.*               NO    will not produce the SYMBOL DSECT              * 00083000
.*       XREF  = YES   will produce the CROSS REFERENCE DSECT         * 00084000
.*               NO    will not produce the CROSS REFERENCE DSECT     * 00085000
.*       RXREF = YES   will produce the Register Cross Reference DSECT* 00086000
.*               NO    will not produce the Register cross ref DSECT  * 00088000
.*       MXREF = YES   will produce the MACRO SOURCE SUMMARY  DSECT   * 00090000
.*               NO    will not produce the MACRO SOURCE SUM DSECT    * 00091000
.*       MXREFX= YES   will produce the MACRO CROSS REFERENCE DSECT   * 00094000
.*               NO    will not produce the MACRO CROSS REF  DSECT    * 00095000
.*       USER  = YES   will produce the USER DATA RECORD DSECT        * 00098000
.*                     (the ADATA instruction produces these records) * 00099000
.*               NO    will not produce the USER DATA RECORD DSECT    * 00100000
.*       USING = YES   will produce the USING DSECT                   * 00101000
.*               NO    will not produce the USING DSECT               * 00103000
.*       STATS = YES   will produce the STATISTICS DSECT              * 00105000
.*               NO    will not produce STATISTICS DSECT              * 00108000
.*                                                                    * 00111000
.*  OUTPUT:                                                           * 00112000
.*                                                                    * 00113000
.*    REGISTERS: NONE                                                 * 00114000
.*                                                                    * 00115000
.*    OTHER: DSECT                                                    * 00116000
.*                                                                    * 00117000
.*EXTERNAL REFERENCES:                                                * 00118000
.*                                                                    * 00119000
.*  PROCEDURES INVOKED: NONE                                          * 00120000
.*                                                                    * 00121000
.*  CONTROL BLOCKS:                                                   * 00122000
.*                                                                    * 00123000
.*    SYSTEM CONTROL BLOCKS: NONE                                     * 00124000
.*                                                                    * 00125000
.*INTERNAL TABLES: NONE                                               * 00126000
.*                                                                    * 00127000
.*MACROS ISSUED:                                                      * 00128000
.*                                                                    * 00129000
.*  SYSTEM MACROS: NONE                                               * 00130000
.*                                                                    * 00131000
.*  PRODUCT MACROS: NONE                                              * 00132000
.*                                                                    * 00133000
.*MESSAGES ISSUED: NONE                                               * 00134000
.*                                                                    * 00135000
.*                                                                    * 00136000
.*CHANGE ACTIVITY:                                                    * 00137000
.*  Flag Reason  RLSE   Date     Origin    Comments                   * 00138000
.*  $L1= 3.12    1.3.0  11FEB98  ASTLSC  : Release 3 BFP DC extension * 00139000
.*  $L1= 3.6     1.3.0  25FEB98  ASTLMNA : Release 3 External Func.   * 00140000
.*  $L1= 3.4     1.3.0  16MAR98  ASTLSC  : Option changes             * 00141000
.*  $L1= 3.20    1.3.0  02JUN98  ASTLMNA : AINSERT changes            * 00142000
.*  $L1= 3.8     1.3.0  05JUN98  ASTLSC  : ADATA changes              * 00143000
.*  $L1= 3.4     1.3.0  08JUN98  ASTLSC  : Register Cross Reference   * 00144000
.*  $M1= 3.19    1.3.0  22JUN98  ASTLJRD : New USINGs                 * 00145000
.*  $P1= KH37005 1.3.0  21JUL98  ASTLMNA : Add COMPLEX flag to x'0042'* 00146000
.*  $P1= KH30063 1.3.0  28JUL98  ASTLJRD : Typo corrections to x'000a'* 00147000
.*                                                             @PQ22004 00148000
.*                                                             @PQ22004 00149000
.* Reason  Rlse    Date    Origin   Comments                   @PQ22004 00150000
.* ------- ------- ------- -------- ---------------------------@PQ22004 00151000
.* PQ22004 HMQ4130 21Dec98 ASTLSC   New option FLAG(PUSH)      @PQ22004 00152000
.* PQ35537 HMQ4130 11Feb00 ASTLGRF  New option FLAG(USING0)    @PQ35537 00153000
.* PQ41106 HMQ4130 23Aug00 ASTLGRF  Correct min len of x'0062' @PQ41106 00153490
.*                                                                    * 00154000
.*  Flag Reason  RLSE   Date     Origin    Comments                   * 00155000
.*  $V2=         1.4.0  31May99  ASTLSC  : Thread Option              * 00156000
.*  $V2=         1.4.0  13Jul99  ASTLSC  : Codepage Option            * 00157000
.*  $V2=         1.4.0  01Oct99  ASTLSC  : ASMAOPT records read       * 00158000
.*  $V2=         1.4.0  02Mar00  ASTLSC  : Options File Record        * 00159000
.*                                                             @PQ39402 00159190
.* Reason  Rlse    Date    Origin   Comments                   @PQ39402 00159380
.* ------- ------- ------- -------- ---------------------------@PQ39402 00159570
.* PQ39402 HMQ4140 27Jun00 ASTLSC   Implement Edition Number   @PQ39402 00159760
.* PQ67377 HMQ4140 13Nov02 ASTLCW   New FLAG(EXLITW) option in @PQ67377 00159790
.*                                  ADATA OPTIONS record.      @PQ67377 00159820
.*                                                             @PQ67377 00159850
.*  Flag Reason  RLSE   Date     Origin    Comments                   * 00159880
.*  $V3=         1.5.0  26Sep02  ASTLCB  : Add option TYPECHECK       * 00159940
.*  $v4=         1.5.0  03Oct03  ASTLCB  : Restructure records        * 00159970
.*  $v5= 3.1.17  1.5.0  28Jan04  ASTLCB  : Add SUPRWARN, plus two     * 00159976
.*                                         more parm bytes to X'0010'.* 00159982
.*  $v5= 3.1.13  1.5.0  28Jan04  ASTLCB  : Add synonym MACHINE also.  * 00159988
.*  $v5= 3.1.8   1.5.0  28Jan04  ASTLCB  : Add SECTALGN to X'0010'.   * 00159994
.*  $v6= 3.1.18  1.5.0  05Mar04  ASTLCB  : Add Program Type X'0034'.  * 00159997
.*  $v6= 3.1.18  1.5.0  14Mar04  ASTLCB  : Add Assembler Type and     * 00159999
.*                                         Program Type to X'0042'.   * 00160001
.*  $v6= 3.1.18  1.5.0  14Mar04  ASTLCB  : Add TC(REGISTER) X'0010'.  * 00160003
.*  $v7=         1.5.0  18Mar04  RMCCCB  : Update copyright date      * 00160004
.***END OF SPECIFICATIONS ********************************************* 00160006
.** START OF SAMPLE BIT FLAG USAGE  *******************************@v4a 00160010
.*                                                                 @v4a 00160020
.* DISCLAIMER OF WARRANTIES                                        @v4a 00160030
.*  The following enclosed code is sample code created by IBM      @v4a 00160040
.*  Corporation. This sample code is licensed under the terms of   @v4a 00160050
.*  the High Level Assembler license, but is not part of any       @v4a 00160060
.*  standard IBM product.  It is provided to you solely for the    @v4a 00160070
.*  purpose of demonstrating the usage of some of the features of  @v4a 00160080
.*  High Level Assembler.  The code is not supported by IBM and    @v4a 00160090
.*  is provided on an "AS IS" basis, without warranty of any kind. @v4a 00160100
.*  IBM shall not be liable for any damages arising out of your    @v4a 00160120
.*  use of the sample code, even if IBM has been advised of the    @v4a 00160140
.*  possibility of such damages.                                   @v4a 00160160
.*                                                                 @v4a 00160180
.* Flag bits within this macro are defined using the format        @v4a 00160200
.* EQU *,X'nn' so that the flag bit symbol is assigned the         @v4a 00160220
.* address of the related flag byte, and a length of X'80' down    @v4a 00160240
.* to X'01'.                                                       @v4a 00160260
.*                                                                 @v4a 00160280
.* This allows the testing, setting, and clearing of the flag bit  @v4a 00160300
.* without needing any reference to the flag byte itself.  Some    @v4a 00160320
.* examples of usage are:                                          @v4a 00160340
.*                                                                 @v4a 00160360
.* Test flag  -  TM    ADOPT_DECK,L'ADOPT_DECK                     @v4a 00160380
.* Set flag   -  OI    ADOPT_DECK,L'ADOPT_DECK                     @v4a 00160400
.* Clear flag -  NI    ADOPT_DECK,X'FF'-L'ADOPT_DECK               @v4a 00160420
.*                                                                 @v4a 00160440
.* Here are some examples of very simple macros to exploit this    @v4a 00160460
.* method; TestFlag, SetFlag, and ClearFlag:                       @v4a 00160480
.*                                                                 @v4a 00160500
.*          Macro                                                  @v4a 00160520
.* &L       TestFlag &Flag                                         @v4a 00160540
.* &L       TM        &Flag,L'&Flag                                @v4a 00160560
.*          MEnd                                                   @v4a 00160580
.*                                                                 @v4a 00160600
.*          Macro                                                  @v4a 00160620
.* &L       SetFlag &Flag                                          @v4a 00160640
.* &L       OI        &Flag,L'&Flag                                @v4a 00160660
.*          MEnd                                                   @v4a 00160680
.*                                                                 @v4a 00160700
.*          Macro                                                  @v4a 00160720
.* &L       ClearFlag &Flag                                        @v4a 00160740
.* &L       NI        &Flag,X'FF'-L'&Flag                          @v4a 00160760
.*          MEnd                                                   @v4a 00160780
.*                                                                 @v4a 00160800
.* Test     TestFlag  ADOPT_DECK     Invoke macro to test flag     @v4a 00160820
.* Set      SetFlag   ADOPT_DECK     Invoke macro to set flag      @v4a 00160840
.* Clear    ClearFlag ADOPT_DECK     Invoke macro to clear flag    @v4a 00160860
.*                                                                 @v4a 00160880
.* Note:  These macros do not perform any parameter validation or  @v4a 00160900
.*        any other form of checking; they are just simple         @v4a 00160920
.*        examples.                                                @v4a 00160940
.*                                                                 @v4a 00160960
.** END OF SAMPLE BIT FLAG USAGE  *********************************@v4a 00160980
         PUSH  PRINT                    Push the PRINT status           00161000
         PRINT &PRINT                   and set it                      00162000
ASMADATA DSECT                                                          00163000
ADATA_LEN           DS    HL2     Variable length indicator             00164000
                    DS    XL2     Reserved                         @v4c 00165000
ADATA_VERSION       DS    FL1     Product version number                00166000
ADATA_VERASM        EQU   16      High Level Assembler R1&2        @v4c 00167000
ADATA_RECTYPE       DS    XL2     The record type                      +00168000
                                   (See labels ADATA_RECnnn following)  00169000
ADATA_LEVEL         DS    FL1     The ASMADATA level                    00170000
ADATA_L1            EQU   1        - Associated DATA Level 1            00171000
ADATA_L2            EQU   2        - Associated DATA Level 2            00172000
ADATA_L3            EQU   3        - Associated DATA Level 3       @l1a 00173000
ADATA_LVL           EQU   3        - Current level                 @l1a 00174000
ADATA_CONT          DS    XL1     Continuation flag                     00175000
ADATA_NOTCONT       EQU   X'00'    - This record not continued          00176000
ADATA_ISCONT        EQU   X'01'    - Continued on Next record           00177000
ADATA_EDITION       DS    FL1     Edition Number                        00178000
                    DS    XL4     Reserved                         @v4c 00181000
ADATA_DATA_LEN      DS    HL2     Associated data field length     @l1a 00182000
ADATA_ORG           DS    0H      The length of the  record             00183000
ADATA_EQU_LEN       EQU   *-ASMADATA                                    00184000
.*                                                                 @v4c 00185000
         AIF ('&JID' EQ 'NO').AID                                  @v4c 00186000
         AIF ('&JID' EQ 'YES').JID                                      00187000
         MNOTE 4,'Invalid JID parameter. ''YES'' assumed'               00188000
.JID     ANOP                                                           00189000
*                                                                  @v4a 00189500
ADATA_RECJID        EQU   X'0000'  - Job Identification                 00190000
ADATA_EDNJID        EQU   X'01'    - Job Identification Edition    @v4c 00190490
ADJID_DATE          DS    CL8        Date ASMADATA record written       00191000
ADJID_TIME          DS    CL4        Time the ASMADATA record written   00192000
ADJID_PROD_NUMBER   DS    CL8        Product number                     00193000
ADJID_PROD_VERSION  DS    CL8        Version Number of the product      00194000
ADJID_PROD_LEVEL    DS    HL2        Monotonically increasing lvl  @v4a 00194300
ADJID_PROD_LEVEL_CURRENT  EQU  X'05' Current level for v1.5.0      @v4a 00194600
ADJID_PTF           DS    CL8        PTF level number of the product    00195000
ADJID_SYSTEM_ID     DS    CL24       System Identification              00196000
ADJID_JOBNAME       DS    CL8        Jobname producing ASMADATA file    00197000
ADJID_STEPNAME      DS    CL8        MVS stepname                       00198000
ADJID_PROCSTEP      DS    CL8        MVS procedure stepname             00199000
ADJID_FILES_NUM     DS    FL4        Number of input files         @v4c 00200000
ADJID_FILES_OFF     DS    FL4        Offset of first offsets block @v4a 00201000
ADJID_EQU_LEN       EQU   *-ASMADATA                               @v4c 00202000
*                                                                  @v4c 00203000
*  This is now the end of the fixed portion of the record.  The    @v4a 00205000
*  variable portion is continued by the ADFBLOCK DSECT.            @v4a 00207000
.*                                                                9@v4d 00209000
.AID     ANOP                                                           00209020
         AIF ('&AID' EQ 'NO').COMPUNIT                                  00209040
         AIF ('&AID' EQ 'YES').AID1                                     00209060
         MNOTE 4,'Invalid AID Parameter. ''YES'' assumed'               00209080
.AID1 ANOP                                                              00209100
*                                                                  @v4a 00209120
         ORG   ADATA_ORG                                                00209140
ADATA_RECAID        EQU   X'0001'  - ADATA Identification               00209160
ADATA_EDNAID        EQU   X'00'    - ADATA Identification Editi@PQ39402 00209180
ADAID_TIME          DS    XL8        Universal Time bit 63 = 1ms        00209200
ADAID_CCSID         DS    XL2        Coded Character Set ID             00209230
ADAID_EQU_LEN       EQU *-ASMADATA                                      00209260
.*                                                                      00209290
.COMPUNIT ANOP                                                          00209320
         AIF ('&COMPUNIT' EQ 'NO').OUTPUT                          @v4c 00209350
         AIF ('&COMPUNIT' EQ 'YES').COMPUNIT1                           00209380
         MNOTE 4,'Invalid COMPUNIT Parameter. ''YES'' assumed'          00209410
.COMPUNIT1 ANOP                                                         00209440
*                                                                  @v4a 00209470
         ORG   ADATA_ORG                                                00209500
ADATA_RECCOMPUNIT   EQU   X'0002'  - Compilation Unit Start/End         00209530
ADATA_EDNCOMPUNIT   EQU   X'00'    - Compilation Unit Start/End@PQ39402 00209560
ADCOMP_IND          DS    XL2        START/END Indicator                00209590
ADCOMP_IND_START    EQU   X'0000'    START of Compilation Unit          00209620
ADCOMP_IND_END      EQU   X'0001'    END of Compilation Unit            00209650
                    DS    XL2        Reserved                      @v4c 00209680
ADCOMP_RCOUNT       DS    FL4        Record Count for END record        00209710
ADCOMP_EQU_LEN      EQU   *-ASMADATA                                    00209740
.*                                                                      00209770
.OUTPUT  ANOP                                                           00209800
         AIF ('&OUTPUT' EQ 'NO').AOPT                              @v2c 00209830
         AIF ('&OUTPUT' EQ 'YES').OUTPUT1                               00209860
         MNOTE 4,'Invalid OUTPUT Parameter. ''YES'' assumed'            00209890
.OUTPUT1 ANOP                                                           00209920
*                                                                  @v4c 00209950
         ORG   ADATA_ORG                                                00209980
ADATA_RECOUTPUT     EQU   X'000A' - Output File Information             00210010
ADATA_EDNOUTPUT     EQU   X'01'   - Output File Information Edtn   @v4c 00210040
ADOUT_OBJECT_NUM    DS    FL4       Number of object files written @v4c 00210070
ADOUT_OBJECT_OFF    DS    FL4       Offset of first object block   @v4a 00210100
ADOUT_PUNCH_NUM     DS    FL4       Number of punch files written  @v4c 00210130
ADOUT_PUNCH_OFF     DS    FL4       Offset of first punch block    @v4a 00210160
ADOUT_PRINT_NUM     DS    FL4       Number of listing files writte @v4c 00210190
ADOUT_PRINT_OFF     DS    FL4       Offset of first print block    @v4a 00210220
ADOUT_TERM_NUM      DS    FL4       Number of term files written   @v4c 00210250
ADOUT_TERM_OFF      DS    FL4       Offset of first term block     @v4a 00210280
ADOUT_ADATA_NUM     DS    FL4       Number of adata files written  @v4c 00210310
ADOUT_ADATA_OFF     DS    FL4       Offset of first adata block    @v4a 00210340
ADOUT_EQU_LEN       EQU   *-ASMADATA                               @v4c 00210370
*                                                                  @v4c 00210400
*  This is now the end of the fixed portion of the record.  The    @v4a 00210430
*  variable portion is continued by the ADFBLOCK DSECT.            @v4a 00210460
.*                                                               40@v4d 00210490
.AOPT    ANOP                                                      @v2a 00210520
         AIF ('&AOPT' EQ 'NO').OPT                                 @v4c 00210550
         AIF ('&AOPT' EQ 'YES').AOPT1                              @v2a 00210580
         MNOTE 4,'Invalid AOPT Parameter. ''YES'' assumed'         @v2a 00210610
.AOPT1   ANOP                                                      @v2a 00210640
*                                                                  @v4a 00210670
         ORG   ADATA_ORG                                           @v2a 00210700
ADATA_RECAOPT       EQU   X'000B' - Options File Information       @v2a 00210730
ADATA_EDNAOPT       EQU   X'01'   - Options File Information Edtn  @v4c 00210760
ADAOPT_FILES_NUM    DS    FL4       Number of option files read    @v4c 00210790
ADAOPT_FILES_OFF    DS    FL4       Offset of first offsets block  @v4c 00210820
ADAOPT_EQU_LEN      EQU   *-ASMADATA                               @v4m 00210850
*                                                                  @v4c 00210880
*  This is now the end of the fixed portion of the record.  The    @v4a 00210910
*  variable portion is continued by the ADFBLOCK DSECT.            @v4a 00210940
.*                                                                8@v4d 00210970
.OPT     ANOP                                                           00211000
         AIF ('&OPT' EQ 'NO').ESD                                       00212000
         AIF ('&OPT' EQ 'YES').OPT1                                     00213000
         MNOTE 4,'Invalid OPT parameter. ''YES'' assumed'               00214000
.OPT1    ANOP                                                           00215000
*                                                                       00216000
         ORG   ADATA_ORG                                                00217000
ADATA_RECOPT        EQU   X'0010'  - Options                            00218000
ADATA_EDNOPT        EQU   X'03'    - Options Edition               @v4c 00218490
*                                                                  @v4a 00219290
*  These 14 option bytes match the assembler's option bytes.       @v5c 00220090
*                                                                  @v4a 00220890
ADOPT_DECK             EQU *,X'80'   DECK specified                @v4c 00221510
ADOPT_OBJECT           EQU *,X'40'   OBJECT specified              @v4c 00221530
ADOPT_LIST             EQU *,X'20'   LIST specified                @v4c 00221550
ADOPT_XREF             EQU *,X'10'   XREF specified                @v4c 00221570
ADOPT_RENT             EQU *,X'08'   RENT specified                @v4c 00221590
ADOPT_TEST             EQU *,X'04'   TEST specified                @v4c 00221610
ADOPT_BATCH            EQU *,X'02'   BATCH specified               @v4c 00221630
ADOPT_ALIGN            EQU *,X'01'   ALIGN specified               @v4c 00221660
ADOPT_BYTE1            DS  XL1       Option byte 1                      00221690
*                                                                       00229000
ADOPT_ESD              EQU *,X'80'   ESD specified                 @v4c 00229100
ADOPT_RLD              EQU *,X'40'   RLD specified                 @v4c 00229200
ADOPT_XREF_SHORT       EQU *,X'20'   XREF(SHORT) specified         @v4c 00229300
ADOPT_TRACE            EQU *,X'10'   TRACE specified               @v4c 00229400
ADOPT_XREF_FULL        EQU *,X'08'   XREF(FULL) specified          @v4c 00229500
ADOPT_SIZE_MAX         EQU *,X'04'   SIZE(MAX..,ABOVE) specified   @v4c 00229600
ADOPT_XREF_UNREFS      EQU *,X'02'   XREF(UNREFS) specified        @v4c 00229700
ADOPT_RXREF            EQU *,X'01'   RXREF specified               @v4c 00229800
ADOPT_BYTE2            DS  XL1       Option byte 2                      00230000
*                                                                       00240000
ADOPT_TERM             EQU *,X'80'   TERM specified                @v4c 00240100
ADOPT_TERM_NARROW      EQU *,X'40'   TERM(NARROW) specified        @v4c 00240200
ADOPT_DBCS             EQU *,X'20'   DBCS specified                @v4c 00240300
ADOPT_DXREF            EQU *,X'10'   DXREF specified               @v4c 00240400
ADOPT_FOLD             EQU *,X'08'   FOLD specified                @v4c 00240500
ADOPT_SIZE             EQU *,X'04'   SIZE specified                @v4c 00240600
ADOPT_FLAG_PUSH        EQU *,X'02'   FLAG(PUSH) specified          @v4c 00240700
ADOPT_THREAD           EQU *,X'01'   THREAD specified              @v4c 00240800
ADOPT_BYTE3            DS  XL1       Option byte 3                      00241000
*                                                                       00251000
ADOPT_PCONT_ON         EQU *,X'80'   PCONTROL(ON) specified        @v4c 00251100
ADOPT_PCONT_GEN        EQU *,X'40'   PCONTROL(GEN) specified       @v4c 00251200
ADOPT_PCONT_DATA       EQU *,X'20'   PCONTROL(DATA) specified      @v4c 00251300
ADOPT_PCONT_UHEAD      EQU *,X'10'   PCONTROL(UHEAD) specified     @v4c 00251400
ADOPT_PCONT_MSOURCE    EQU *,X'08'   PCONTROL(MSOURCE) specified   @v4c 00251500
ADOPT_SECTALGN         EQU *,X'04'   SECTALGN specified            @v5c 00251600
*                      EQU *,X'02'   Reserved                      @v4a 00251700
*                      EQU *,X'01'   Reserved                      @v4a 00251800
ADOPT_BYTE4            DS  XL1       Option byte 4                      00252000
*                                                                       00262000
ADOPT_ASA              EQU *,X'80'   ASA specified                 @v4c 00262100
ADOPT_USING_WARN       EQU *,X'40'   USING(WARN) specified         @v4c 00262200
ADOPT_USING_LIMIT      EQU *,X'20'   USING(LIMIT) specified        @v4c 00262300
ADOPT_USING_MAP        EQU *,X'10'   USING(MAP) specified          @v4c 00262400
ADOPT_INEXIT           EQU *,X'08'   INEXIT specified              @v4c 00262500
ADOPT_LIBEXIT          EQU *,X'04'   LIBEXIT specified             @v4c 00262600
ADOPT_PRTEXIT          EQU *,X'02'   PRTEXIT specified             @v4c 00262700
ADOPT_OBJEXIT          EQU *,X'01'   OBJEXIT specified             @v4c 00262800
ADOPT_BYTE5            DS  XL1       Option byte 5                      00263000
*                                                                       00272000
ADOPT_SYSPARM          EQU *,X'80'   SYSPARM specified             @v4c 00272100
ADOPT_FLAG             EQU *,X'40'   FLAG specified                @v4c 00272200
ADOPT_LANGUAGE         EQU *,X'20'   LANGUAGE specified            @v4c 00272300
ADOPT_LINECOUNT        EQU *,X'10'   LINECOUNT specified           @v4c 00272400
ADOPT_OPTABLE          EQU *,X'08'   OPTABLE/MACHINE specified     @v5c 00272500
ADOPT_ADATA            EQU *,X'04'   ADATA specified               @v4c 00272600
ADOPT_ADEXIT           EQU *,X'02'   ADEXIT specified              @v4c 00272700
ADOPT_TRMEXIT          EQU *,X'01'   TRMEXIT specified             @v4c 00272800
ADOPT_BYTE6            DS  XL1       Option byte 6                      00273000
*                                                                       00283000
ADOPT_LIST_121         EQU *,X'80'   LIST(121) specified           @v4c 00283100
ADOPT_LIST_133         EQU *,X'40'   LIST(133) specified           @v4c 00283200
ADOPT_LIST_MAX         EQU *,X'20'   LIST(MAX) specified           @v4c 00283300
*                      EQU *,X'10'   Reserved                      @v4a 00283400
*                      EQU *,X'08'   Reserved                      @v4a 00283500
*                      EQU *,X'04'   Reserved                      @v4a 00283600
*                      EQU *,X'02'   Reserved                      @v4a 00283700
*                      EQU *,X'01'   Reserved                      @v4a 00283800
ADOPT_BYTE7            DS  XL1       Option byte 7                      00284000
*                                                                       00296000
ADOPT_MXREF            EQU *,X'80'   MXREF specified               @v4c 00296100
ADOPT_MXREF_FULL       EQU *,X'40'   MXREF(FULL) specified         @v4c 00296200
ADOPT_MXREF_SOURCE     EQU *,X'20'   MXREF(SOURCE) specified       @v4c 00296300
ADOPT_MXREF_XREF       EQU *,X'10'   MXREF(XREF) specified         @v4c 00296400
ADOPT_TRANSLATE        EQU *,X'08'   TRANSLATE specified           @v4c 00296500
ADOPT_GOFF             EQU *,X'04'   GOFF specified (XOBJECT)      @v4c 00296600
ADOPT_GOFF_ADATA       EQU *,X'02'   GOFF(ADATA) specified         @v4c 00296700
ADOPT_PROFILE          EQU *,X'01'   PROFILE specified             @v4c 00296800
ADOPT_BYTE8            DS  XL1       Option byte 8                      00297000
*                                                                       00307000
ADOPT_FLAG_RECORD      EQU *,X'80'   FLAG(RECORD) specified        @v4c 00307100
ADOPT_PCONT_MCALL      EQU *,X'40'   PCONTROL(MCALL) specified     @v4c 00307200
ADOPT_PCONT_OFF        EQU *,X'20'   PCONTROL(OFF) specified       @v4c 00307300
ADOPT_PCONT_NODATA     EQU *,X'10'   PCONTROL(NOADATA) specified   @v4c 00307400
ADOPT_PCONT_NOGEN      EQU *,X'08'   PCONTROL(NOGEN) specified     @v4c 00307500
ADOPT_PCONT_NOUHEAD    EQU *,X'04'   PCONTROL(NOUHEAD) specified   @v4c 00307600
ADOPT_PCONT_NOMSOURCE  EQU *,X'02'   PCONTROL(NOMSOURCE) specified @v4c 00307700
ADOPT_PCONT_NOMCALL    EQU *,X'01'   PCONTROL(NOMCALL) specified   @v4c 00307800
ADOPT_BYTE9            DS  XL1       Option byte 9                 @v4c 00308000
*                                                                       00310000
*                      EQU *,X'80'   Reserved                      @v4c 00310100
*                      EQU *,X'40'   Reserved                      @v4c 00310200
*                      EQU *,X'20'   Reserved                      @v4c 00310300
*                      EQU *,X'10'   Reserved                      @v4c 00310400
ADOPT_OPTABLE_LIST     EQU *,X'08'   OPTABLE/MACHINE(LIST) spec.   @v5c 00310500
ADOPT_CODEPAGE         EQU *,X'04'   CODEPAGE specified            @v4c 00310600
ADOPT_OPTION_ERRORS    EQU *,X'02'   Option errors encountered     @v4c 00310700
ADOPT_INFO             EQU *,X'01'   INFO specified                @v4c 00310800
ADOPT_BYTE10           DS  XL1       Option byte 10                @v4c 00311000
*                                                                  @v4a 00315500
ADOPT_FLAG_EXLITW      EQU *,X'80'   FLAG(EXLITW) specified        @v4c 00315550
ADOPT_TYPECHECK_MAG    EQU *,X'40'   TYPECHECK(MAGNITUDE) spec.    @v6c 00315600
*                      EQU *,X'20'   Reserved                      @v4a 00315650
ADOPT_TYPECHECK_REG    EQU *,X'10'   TYPECHECK(REGISTER) specified @v6c 00315700
ADOPT_COMPAT_CASE      EQU *,X'08'   COMPAT(CASE) specified        @v4c 00315760
ADOPT_COMPAT_SYSLIST   EQU *,X'04'   COMPAT(SYSLIST) specified     @v4c 00315820
ADOPT_COMPAT_LITTYPE   EQU *,X'02'   COMPAT(LITTYPE) specified     @v4c 00315880
ADOPT_COMPAT_MACROCASE EQU *,X'01'   COMPAT(MACROCASE) specified   @v4c 00315940
ADOPT_BYTE11           DS  XL1       Option byte 11                @v4a 00316000
*                                                                  @v4a 00320500
ADOPT_FLAG_USING0      EQU *,X'80'   FLAG(USING0) specified        @v4c 00320550
ADOPT_LIBMAC           EQU *,X'40'   LIBMAC specified              @v4c 00320600
ADOPT_RA2              EQU *,X'20'   RA2 specified                 @v4c 00320650
ADOPT_FLAG_ALIGN       EQU *,X'10'   FLAG(ALIGN) specified         @v4c 00320700
ADOPT_FLAG_CONT        EQU *,X'08'   FLAG(CONT) specified          @v4c 00320760
ADOPT_FLAG_SUBSTR      EQU *,X'04'   FLAG(SUBSTR) specified        @v4c 00320820
ADOPT_FLAG_IMPLEN      EQU *,X'02'   FLAG(IMPLEN) specified        @v4c 00320880
ADOPT_FLAG_PAGE0       EQU *,X'01'   FLAG(PAGE0) specified         @v4c 00320940
ADOPT_BYTE12           DS  XL1       Option byte 12                @v4a 00321000
*                                                                  @v4c 00325500
ADOPT_SUPRWARN         EQU *,X'80'   SUPRWARN specified            @v5a 00326000
*                      EQU *,X'40'   Reserved                      @v5a 00326020
*                      EQU *,X'20'   Reserved                      @v5a 00326040
*                      EQU *,X'10'   Reserved                      @v5a 00326060
*                      EQU *,X'08'   Reserved                      @v5a 00326080
*                      EQU *,X'04'   Reserved                      @v5a 00326100
*                      EQU *,X'02'   Reserved                      @v5a 00326120
*                      EQU *,X'01'   Reserved                      @v5a 00326140
ADOPT_BYTE13           DS  XL1       Option byte 13                @v5a 00326160
*                                                                  @v5a 00326180
*                      EQU *,X'80'   Reserved                      @v5a 00326200
*                      EQU *,X'40'   Reserved                      @v5a 00326220
*                      EQU *,X'20'   Reserved                      @v5a 00326240
*                      EQU *,X'10'   Reserved                      @v5a 00326260
*                      EQU *,X'08'   Reserved                      @v5a 00326290
*                      EQU *,X'04'   Reserved                      @v5a 00326320
*                      EQU *,X'02'   Reserved                      @v5a 00326350
*                      EQU *,X'01'   Reserved                      @v5a 00326380
ADOPT_BYTE14           DS  XL1       Option byte 14                @v5a 00326410
*                                                                  @v5a 00326440
                       DS  XL4       Reserved                      @v5c 00326470
*                                                                  @v4a 00326500
*  This additional option byte exists only for this ADATA record.  @v4a 00327000
*                                                                  @v4a 00327500
ADOPT_COMPAT           EQU *,X'80'   COMPAT specified              @v4c 00327550
ADOPT_EXIT             EQU *,X'40'   EXIT specified                @v4c 00327600
ADOPT_PCONT            EQU *,X'20'   PCONTROL specified            @v4c 00327650
ADOPT_PESTOP           EQU *,X'10'   PESTOP specified              @v4c 00327700
ADOPT_SUBLIB_DF        EQU *,X'08'   SUBLIB(DF) specified          @v4c 00327760
*                      EQU *,X'04'   Reserved                      @v4a 00327820
*                      EQU *,X'02'   Reserved                      @v4a 00327880
*                      EQU *,X'01'   Reserved                      @v4a 00327940
ADOPT_EXTRA_BYTE1      DS  XL1       Additional option byte 1      @v4a 00328000
*                                                                  @v4a 00333400
                       DS  XL4       Reserved                      @v4a 00334000
*                                                                  @v4a 00334600
ADOPT_CODEPAGE_VAL     DS  XL4       CODEPAGE(X'xxxx')             @v4c 00335200
ADOPT_FLAG_VAL         DS  FL1       FLAG(n)                       @v4c 00335800
ADOPT_LANGUAGE_VAL     DS  CL3       LANGUAGE(xxx)                 @v4c 00336400
ADOPT_LINECOUNT_VAL    DS  HL2       LINECOUNT(n)                  @v4c 00337000
ADOPT_OPTABLE_VAL      DS  CL3       OPTABLE(xxx)                  @v4c 00337600
ADOPT_PROFILE_VAL      DS  CL8       PROFILE(xxxxxxxx)             @v4c 00338200
ADOPT_SECTALGN_VAL     DS  FL4       SECTALGN(n)                   @v5a 00338500
ADOPT_TRANSLATE_VAL    DS  CL2       TRANSLATE(xx)                 @v4c 00338800
ADOPT_USING_LIMIT_VAL  DS  HL2       USING(LIMIT(n))               @v4c 00339400
ADOPT_USING_WARN_VAL   DS  FL1       USING(WARN(n))                @v4c 00340000
*                                                                  @v4a 00340600
                       DS  XL32      Reserved                      @v4a 00341200
*                                                                  @v4a 00341800
ADOPT_PARM_STR_OFF     DS  FL4       Offset of PARM string         @v4c 00342400
ADOPT_PARM_STR_LEN     DS  FL4       Length of PARM string         @v4c 00343000
ADOPT_SYSPARM_STR_OFF  DS  FL4       Offset of SYSPARM string      @v4c 00343600
ADOPT_SYSPARM_STR_LEN  DS  FL4       Length of SYSPARM string      @v4c 00344200
ADOPT_INEXIT_PROG_OFF  DS  FL4       Offset of Input exit name     @v4c 00344800
ADOPT_INEXIT_PROG_LEN  DS  FL4       Length of Input exit name     @v4c 00345400
ADOPT_INEXIT_STR_OFF   DS  FL4       Offset of Input exit string   @v4c 00346000
ADOPT_INEXIT_STR_LEN   DS  FL4       Length of Input exit string   @v4c 00346600
ADOPT_LIBEXIT_PROG_OFF DS  FL4       Offset of Library exit name   @v4c 00347200
ADOPT_LIBEXIT_PROG_LEN DS  FL4       Length of Library exit name   @v4c 00347800
ADOPT_LIBEXIT_STR_OFF  DS  FL4       Offset of Library exit string @v4c 00348400
ADOPT_LIBEXIT_STR_LEN  DS  FL4       Length of Library exit string @v4c 00349000
ADOPT_PRTEXIT_PROG_OFF DS  FL4       Offset of Print exit name     @v4c 00349600
ADOPT_PRTEXIT_PROG_LEN DS  FL4       Length of Print exit name     @v4c 00350200
ADOPT_PRTEXIT_STR_OFF  DS  FL4       Offset of Print exit string   @v4c 00350800
ADOPT_PRTEXIT_STR_LEN  DS  FL4       Length of Print exit string   @v4c 00351400
ADOPT_OBJEXIT_PROG_OFF DS  FL4       Offset of Object exit name    @v4c 00352000
ADOPT_OBJEXIT_PROG_LEN DS  FL4       Length of Object exit name    @v4c 00352600
ADOPT_OBJEXIT_STR_OFF  DS  FL4       Offset of Object exit string  @v4c 00353200
ADOPT_OBJEXIT_STR_LEN  DS  FL4       Length of Object exit string  @v4c 00353800
ADOPT_ADEXIT_PROG_OFF  DS  FL4       Offset of ADATA exit name     @v4c 00354400
ADOPT_ADEXIT_PROG_LEN  DS  FL4       Length of ADATA exit name     @v4c 00355000
ADOPT_ADEXIT_STR_OFF   DS  FL4       Offset of ADATA exit string   @v4c 00355600
ADOPT_ADEXIT_STR_LEN   DS  FL4       Length of ADATA exit string   @v4c 00356200
ADOPT_TRMEXIT_PROG_OFF DS  FL4       Offset of TERM exit name      @v4c 00356800
ADOPT_TRMEXIT_PROG_LEN DS  FL4       Length of TERM exit name      @v4c 00357400
ADOPT_TRMEXIT_STR_OFF  DS  FL4       Offset of TERM exit string    @v4c 00358000
ADOPT_TRMEXIT_STR_LEN  DS  FL4       Length of TERM exit string    @v4c 00358600
ADOPT_EQU_LEN          EQU *-ASMADATA                              @v4c 00359200
*                                                                  @v4c 00359800
*  This is now the end of the fixed portion of the record.         @v4c 00360400
*                                                                  @v4c 00361000
ADOPT_PARM_STR         DS  0CL255    PARM string                   @v4c 00361600
ADOPT_SYSPARM_STR      DS  0CL255    SYSPARM string                @v4c 00362200
ADOPT_INEXIT_PROG      DS  0CL8      Input exit program name       @v4c 00362800
ADOPT_INEXIT_STR       DS  0CL64     Input exit parm string        @v4c 00363400
ADOPT_LIBEXIT_PROG     DS  0CL8      Library exit program name     @v4c 00364000
ADOPT_LIBEXIT_STR      DS  0CL64     Library exit parm string      @v4c 00364600
ADOPT_PRTEXIT_PROG     DS  0CL8      Print exit program name       @v4c 00365200
ADOPT_PRTEXIT_STR      DS  0CL64     Print exit parm string        @v4c 00365800
ADOPT_OBJEXIT_PROG     DS  0CL8      Object exit program name      @v4c 00366400
ADOPT_OBJEXIT_STR      DS  0CL64     Object exit parm string       @v4c 00367000
ADOPT_ADEXIT_PROG      DS  0CL8      ADATA exit program name       @v4c 00367600
ADOPT_ADEXIT_STR       DS  0CL64     ADATA exit parm string        @v4c 00368200
ADOPT_TRMEXIT_PROG     DS  0CL8      TERM exit program name        @v4c 00368800
ADOPT_TRMEXIT_STR      DS  0CL64     TERM exit parm string         @v4c 00369400
.*                                                                      00370000
.ESD     ANOP                                                           00371000
         AIF ('&ESD' EQ 'NO').SOURCE                                    00372000
         AIF ('&ESD' EQ 'YES').ESD1                                     00373000
         MNOTE 4,'Invalid ESD parameter. ''YES'' assumed'               00374000
.ESD1    ANOP                                                           00375000
*                                                                       00376000
         ORG   ADATA_ORG                                                00377000
ADATA_RECESD        EQU   X'0020'  - External Symbol Dictionary         00378000
ADATA_EDNESD        EQU   X'01'    - External Symbol Dir Edition   @v4c 00378490
ADESD_TYPE          DS    XL1        Type of ESD record            @v4c 00379190
ADESD_TYPE_SECTION  EQU   X'00'      Section Definition         SD @v4a 00379250
ADESD_TYPE_LABEL    EQU   X'01'      Label Definition   (entry) LD @v4a 00379310
ADESD_TYPE_EXTREF   EQU   X'02'      External Reference         ER @v4a 00379370
ADESD_TYPE_ELEMENT  EQU   X'03'      Element Definition (class) ED @v4a 00379430
ADESD_TYPE_PRIVATE  EQU   X'04'      Private Code Section       PC @v4a 00379490
ADESD_TYPE_COMMON   EQU   X'05'      Common Section             CM @v4a 00379550
ADESD_TYPE_EXTDUMMY EQU   X'06'      External Dummy Section     XD @v4a 00379610
ADESD_TYPE_PART     EQU   X'07'      Part Reference             PR @v4a 00379670
ADESD_TYPE_EXTWEAK  EQU   X'0A'      Weak External Reference    WX @v4a 00379730
ADESD_TYPE_DUMMY    EQU   X'FF'      Dummy Section              DS @v4a 00379790
*                                                                  @v4a 00379850
ADESD_FLAG_RSECT    EQU   *,X'08'    Read-Only Control Section     @v4a 00379910
ADESD_FLAG_RANY     EQU   *,X'04'    RMODE ANY (0=RMODE 24)        @v4a 00379970
ADESD_FLAG_AANY     EQU   *,X'03'    AMODE ANY                     @v4a 00380030
ADESD_FLAG_A31      EQU   *,X'02'    AMODE 31                      @v4a 00380100
ADESD_FLAG_A24      EQU   *,X'01'    AMODE 24                      @v4a 00380170
ADESD_FLAGS         DS    XL1        ESD flag byte                 @v4c 00380240
*                                     Alignment if SD              @v4a 00380310
*                                     Blank if LD, ER, WX          @v4a 00380380
*                                     AMODE/RMODE if SD, PC, CM    @v4a 00380450
*                                                                  @v4a 00380520
                    DS    XL2        Reserved                      @v4c 00380590
ADESD_ESDID         DS    FL4        ESDID                         @v4c 00381290
                    DS    AL4        Reserved                      @v4a 00381690
ADESD_ADDR          DS    AL4        Address or Alignment-1        @v4c 00381890
*                                     Symbol address if SD, LD, ED @v4a 00382190
*                                     Section address if PC, CM    @v4a 00382690
*                                     Alignment-1 if XD            @v4a 00383190
                    DS    FL4        Reserved                      @v4a 00383390
ADESD_LEN           DS    FL4        Length of section             @v4c 00383690
ADESD_OWNERID       DS    FL4        ESDID of the SD or ED in which    +00384190
                                      this symbol was defined.     @v4c 00384690
                    DS    XL8        Reserved                      @v4c 00385190
ADESD_NAME_OFF      DS    FL4        Offset of External name       @v4a 00385990
ADESD_NAME_LEN      DS    FL4        Length of External name       @v4c 00386790
ADESD_ALIAS_OFF     DS    FL4        Offset of ALIAS name          @v4a 00387590
ADESD_ALIAS_LEN     DS    FL4        Length of ALIAS name          @v4c 00388390
ADESD_EQU_LEN       EQU   *-ASMADATA                               @v4c 00389190
*                                                                  @v4a 00389990
*  This is now the end of the fixed portion of the record.         @v4a 00390790
*                                                                  @v4c 00391590
ADESD_NAME          DS    0CL63      External name                 @v4c 00392390
ADESD_ALIAS         DS    0CL63      ALIAS name                    @v4c 00393190
.*                                                                      00394000
.SOURCE  ANOP                                                           00395000
         AIF ('&SOURCE' EQ 'NO').SRCERR                                 00396000
         AIF ('&SOURCE' EQ 'YES').SOURCE1                               00397000
         MNOTE 4,'Invalid SOURCE Parameter. ''YES'' assumed'            00398000
.SOURCE1 ANOP                                                           00399000
*                                                                  @v4a 00399500
         ORG   ADATA_ORG                                                00400000
ADATA_RECSOURCE     EQU   X'0030'  - Source                             00401000
ADATA_EDNSOURCE     EQU   X'01'    - Source Edition                @v4c 00401490
ADSRC_ESDID         DS    FL4        ESDID for the source record   @v4c 00402390
ADSRC_STMT          DS    FL4        Statement number              @v4c 00403290
ADSRC_INPUT_REC     DS    FL4        Input source record number         00404190
ADSRC_PARENT_REC    DS    FL4        Input source parent record number  00405090
ADSRC_INPUT_NUM     DS    FL4        Input relative file number         00405990
ADSRC_PARENT_NUM    DS    FL4        Parent relative file number        00406990
ADSRC_LOCTR         DS    FL4        Source record location counter     00407990
ADSRC_REC_ORIGIN    DS    XL1        Where the source line comes from   00408990
ADSRC_REC_PINP      EQU   X'01'      Source line from Primary Input     00409990
ADSRC_REC_MACGEN    EQU   X'02'      Source line from Macro generation  00410990
ADSRC_REC_MAC       EQU   X'03'      Source line from macro / copy code 00411990
*                   EQU   X'04'      Reserved                     1@L1D 00412990
ADSRC_REC_AINSERT   EQU   X'05'      Source line from AINSERT buf  @L1A 00413990
ADSRC_PARENT_ORIGIN DS    XL1        Where the parent line comes from  +00414990
                                     (Values as above)                  00415990
*                                                                  @v4a 00416990
ADSRC_PRINT_GEN       EQU  *,X'80'   PRINT GEN                     @v4c 00417590
ADSRC_PRINT_DATA      EQU  *,X'40'   PRINT DATA                    @v4c 00418190
ADSRC_PRINT_ON        EQU  *,X'20'   PRINT ON                      @v4c 00418890
ADSRC_PRINT_NOMSOURCE EQU  *,X'10'   PRINT NOMSOURCE (0 = MSOURCE) @v4c 00419590
ADSRC_PRINT_UHEAD     EQU  *,X'08'   PRINT UHEAD                   @v4c 00420290
ADSRC_PRINT_MCALL     EQU  *,X'04'   PRINT MCALL                   @v4c 00420990
ADSRC_PRINT_FLAGS     DS   XL1       Current print status flags    @v4c 00421690
*                                                                  @v4a 00422390
                    DS    XL2        Reserved                      @l1c 00423100
ADSRC_REC_TYPE      DS    XL1        Source record type                 00423800
ADSRC_REC_COMM      EQU   X'01'      Comment                            00424500
ADSRC_REC_MACH      EQU   X'02'      Machine instruction                00425200
ADSRC_REC_ASM       EQU   X'03'      Assembler instruction              00425900
ADSRC_REC_MACR      EQU   X'04'      Macro instruction                  00426600
ADSRC_REC_MACD      EQU   X'05'      Macro definition                   00427400
ADSRC_ASM_OPCODE    DS    XL1        Assembler opcode              @v4c 00428200
ADSRC_ASM_GBLA      EQU   X'00'      GBLA                          @v4a 00428202
ADSRC_ASM_GBLB      EQU   X'01'      GBLB                          @v4a 00428204
ADSRC_ASM_GBLC      EQU   X'02'      GBLC                          @v4a 00428206
ADSRC_ASM_LCLA      EQU   X'03'      LCLA                          @v4a 00428208
ADSRC_ASM_LCLB      EQU   X'04'      LCLB                          @v4a 00428210
ADSRC_ASM_LCLC      EQU   X'05'      LCLC                          @v4a 00428212
ADSRC_ASM_SETA      EQU   X'06'      SETA                          @v4a 00428214
ADSRC_ASM_SETB      EQU   X'07'      SETB                          @v4a 00428216
ADSRC_ASM_SETC      EQU   X'08'      SETC                          @v4a 00428218
ADSRC_ASM_AIF       EQU   X'09'      AIF                           @v4a 00428220
ADSRC_ASM_AGO       EQU   X'0A'      AGO                           @v4a 00428222
ADSRC_ASM_ANOP      EQU   X'0B'      ANOP                          @v4a 00428224
ADSRC_ASM_COPY      EQU   X'0C'      COPY                          @v4a 00428226
ADSRC_ASM_MACRO     EQU   X'0D'      MACRO                         @v4a 00428228
ADSRC_ASM_MNOTE     EQU   X'0E'      MNOTE                         @v4a 00428230
ADSRC_ASM_MEXIT     EQU   X'0F'      MEXIT                         @v4a 00428232
ADSRC_ASM_MEND      EQU   X'10'      MEND                          @v4a 00428234
ADSRC_ASM_ICTL      EQU   X'11'      ICTL                          @v4a 00428236
ADSRC_ASM_ISEQ      EQU   X'12'      ISEQ                          @v4a 00428238
ADSRC_ASM_PRINT     EQU   X'13'      PRINT                         @v4a 00428240
ADSRC_ASM_SPACE     EQU   X'14'      SPACE                         @v4a 00428242
ADSRC_ASM_EJECT     EQU   X'15'      EJECT                         @v4a 00428244
ADSRC_ASM_PUNCH     EQU   X'16'      PUNCH                         @v4a 00428246
ADSRC_ASM_REPRO     EQU   X'17'      REPRO                         @v4a 00428248
ADSRC_ASM_TITLE     EQU   X'18'      TITLE                         @v4a 00428250
ADSRC_ASM_ENTRY     EQU   X'19'      ENTRY                         @v4a 00428252
ADSRC_ASM_EXTRN     EQU   X'1A'      EXTRN                         @v4a 00428254
ADSRC_ASM_START     EQU   X'1B'      START                         @v4a 00428256
ADSRC_ASM_CSECT     EQU   X'1C'      CSECT                         @v4a 00428258
ADSRC_ASM_DSECT     EQU   X'1D'      DSECT                         @v4a 00428260
ADSRC_ASM_COM       EQU   X'1E'      COM                           @v4a 00428262
ADSRC_ASM_EQU       EQU   X'1F'      EQU                           @v4a 00428264
ADSRC_ASM_ORG       EQU   X'20'      ORG                           @v4a 00428266
ADSRC_ASM_END       EQU   X'21'      END                           @v4a 00428268
ADSRC_ASM_LTORG     EQU   X'22'      LTORG                         @v4a 00428270
ADSRC_ASM_USING     EQU   X'23'      USING                         @v4a 00428272
ADSRC_ASM_DROP      EQU   X'24'      DROP                          @v4a 00428274
ADSRC_ASM_ACTR      EQU   X'25'      ACTR                          @v4a 00428276
ADSRC_ASM_DC        EQU   X'26'      DC                            @v4a 00428278
ADSRC_ASM_DS        EQU   X'27'      DS                            @v4a 00428280
ADSRC_ASM_CCW       EQU   X'28'      CCW                           @v4a 00428283
ADSRC_ASM_CNOP      EQU   X'29'      CNOP                          @v4a 00428286
ADSRC_ASM_LOCTR     EQU   X'2A'      LOCTR                         @v4a 00428289
ADSRC_ASM_DXD       EQU   X'2B'      DXD                           @v4a 00428292
ADSRC_ASM_CXD       EQU   X'2C'      CXD                           @v4a 00428295
*                   EQU   X'2D'      Reserved                      @v4a 00428298
ADSRC_ASM_OPSYN     EQU   X'2E'      OPSYN                         @v4a 00428301
ADSRC_ASM_PUSH      EQU   X'2F'      PUSH                          @v4a 00428304
ADSRC_ASM_POP       EQU   X'30'      POP                           @v4a 00428307
*                   EQU   X'31'      Reserved                      @v4a 00428310
*                   EQU   X'32'      Reserved                      @v4a 00428313
ADSRC_ASM_LITR      EQU   X'33'      LITR                          @v4a 00428316
*                   EQU   X'34'      Reserved                      @v4a 00428319
*                   EQU   X'35'      Reserved                      @v4a 00428322
*                   EQU   X'36'      Reserved                      @v4a 00428325
ADSRC_ASM_MHELP     EQU   X'37'      MHELP                         @v4a 00428328
ADSRC_ASM_AREAD     EQU   X'38'      AREAD                         @v4a 00428331
*                   EQU   X'39'      Reserved                      @v4a 00428334
*                   EQU   X'3A'      Reserved                      @v4a 00428337
ADSRC_ASM_WXTRN     EQU   X'3B'      WXTRN                         @v4a 00428340
*                   EQU   X'3C'      Reserved                      @v4a 00428343
ADSRC_ASM_AMODE     EQU   X'3D'      AMODE                         @v4a 00428346
ADSRC_ASM_RMODE     EQU   X'3E'      RMODE                         @v4a 00428349
ADSRC_ASM_RSECT     EQU   X'3F'      RSECT                         @v4a 00428352
ADSRC_ASM_CCW0      EQU   X'40'      CCW0                          @v4a 00428355
ADSRC_ASM_CCW1      EQU   X'41'      CCW1                          @v4a 00428358
ADSRC_ASM_EXITCTL   EQU   X'42'      EXITCTL                       @v4a 00428361
ADSRC_ASM_ASPACE    EQU   X'43'      ASPACE                        @v4a 00428364
ADSRC_ASM_AEJECT    EQU   X'44'      AEJECT                        @v4a 00428367
ADSRC_ASM_ALIAS     EQU   X'45'      ALIAS                         @v4a 00428370
ADSRC_ASM_CEJECT    EQU   X'46'      CEJECT                        @v4a 00428373
ADSRC_ASM_ADATA     EQU   X'47'      ADATA                         @v4a 00428376
ADSRC_ASM_SETAF     EQU   X'48'      SETAF                         @v4a 00428379
ADSRC_ASM_SETCF     EQU   X'49'      SETCF                         @v4a 00428382
ADSRC_ASM_CATTR     EQU   X'4A'      CATTR                         @v4a 00428385
ADSRC_ASM_ACONTROL  EQU   X'4B'      ACONTROL                      @v4a 00428388
ADSRC_ASM_XATTR     EQU   X'4C'      XATTR                         @v4a 00428391
ADSRC_ASM_AINSERT   EQU   X'4D'      AINSERT                       @v4a 00428394
ADSRC_ASM_HIGHEST   EQU   X'4D'      Highest Valid Assembler OP    @v4a 00428397
*                                                                  @v4a 00428400
ADSRC_FLAGA1        EQU   *,X'80'    Address 1 present             @v4c 00428600
ADSRC_FLAGA2        EQU   *,X'40'    Address 2 present             @v4c 00428800
ADSRC_FLAGS         DS    XL1        Flag bytes for address fields      00429000
*                                                                  @v4a 00429800
                    DS    AL4        Reserved                      @v4a 00431400
ADSRC_ADDRESS1      DS    AL4        Address 1 field from assembly      00431800
                    DS    AL4        Reserved                      @v4a 00432200
ADSRC_ADDRESS2      DS    AL4        Address 2 field from assembly      00432600
ADSRC_NAME_OFF      DS    FL4        Offset of Name entry in           +00433000
                                      statement field.             @v4c 00433800
ADSRC_NAME_LEN      DS    FL4        Length of Name entry          @v4c 00434600
ADSRC_OP_ENT_OFF    DS    FL4        Offset of Operation entry in      +00435400
                                      statement field.             @v4c 00436200
ADSRC_OP_ENT_LEN    DS    FL4        Length of Operation entry     @v4c 00437000
ADSRC_OPND_ENT_OFF  DS    FL4        Offset of Operand entry in        +00437800
                                      statement field.             @v4c 00438600
ADSRC_OPND_ENT_LEN  DS    FL4        Length of Operand entry       @v4c 00439400
ADSRC_REM_ENT_OFF   DS    FL4        Offset of Remarks entry in        +00440200
                                      statement field.             @v4c 00441000
ADSRC_REM_ENT_LEN   DS    FL4        Length of Remarks entry       @v4c 00441800
ADSRC_CONT_IND_OFF  DS    FL4        Offset of Continuation indicator  +00442600
                                      field.                       @v4c 00443400
                    DS    XL4        Reserved                      @v4c 00444200
ADSRC_MEMBER_OFF    DS    FL4        Offset of macro/copy mem name @v4a 00445000
ADSRC_MEMBER_LEN    DS    FL4        Length of macro/copy mem name @v4c 00445800
ADSRC_PARENT_OFF    DS    FL4        Offset of parent macro/copy       +00446600
                                      member name.                 @v4a 00447400
ADSRC_PARENT_LEN    DS    FL4        Length of parent macro/copy   @v4c 00448200
ADSRC_RECORD_OFF    DS    FL4        Offset of source record       @v4a 00449000
ADSRC_RECORD_LEN    DS    FL4        Length of source record       @v4c 00449800
                    DS    XL8        Reserved                           00450600
ADSRC_EQU_LEN       EQU   *-ASMADATA                               @v4c 00451400
*                                                                  @v4m 00452200
*  This is now the end of the fixed portion of the record.         @v4a 00453000
*                                                                  @v4a 00453800
ADSRC_MEMBER_NAME   DS    0CL256     Macro/copy member name        @v4c 00454600
ADSRC_PARENT_NAME   DS    0CL256     Parent macro/copy member name @v4c 00455400
ADSRC_RECORD        DS    0CL80      Actual source record          @v4c 00456200
.*                                                                      00457000
.SRCERR  ANOP                                                           00458000
         AIF ('&SRCERR' EQ 'NO').DCDS                                   00459000
         AIF ('&SRCERR' EQ 'YES').SRCERR1                               00460000
         MNOTE 4,'Invalid SRCERR Parameter. ''YES'' assumed'            00461000
.SRCERR1 ANOP                                                           00462000
*                                                                       00463000
         ORG   ADATA_ORG                                                00464000
ADATA_RECSRCERR     EQU   X'0032'  - Source Error                       00465000
ADATA_EDNSRCERR     EQU   X'01'    - Source Error Edition          @v4c 00465490
ADSRCERR_STMT       DS    FL4        Statement number in error          00466090
ADSRCERR_ID         DS    CL16       Error message identifier           00466690
ADSRCERR_SEV        DS    HL2        Error severity                     00467290
*                                                                  @v5a 00467390
ADSRCERR_FLAG_SUPR  EQU   *,X'80'    Message has been suppressed   @v5a 00467490
ADSRCERR_FLAG1      DS    XL1        Flag byte for error message   @v5a 00467590
*                                                                  @v5a 00467690
ADSRCERR_MSG_OFF    DS    FL4        Offset of Error Message       @v4a 00467890
ADSRCERR_MSG_LEN    DS    FL4        Length of Error Message       @v4c 00468490
                    DS    XL8        Reserved                      @v4c 00469090
ADSRCERR_EQU_LEN    EQU   *-ASMADATA                               @v4c 00469690
*                                                                  @v4a 00470290
*  This is now the end of the fixed portion of the record.         @v4a 00470890
*                                                                  @v4a 00471590
ADSRCERR_MSG        DS    0CL80      Error Message                 @v4c 00472290
.*                                                                      00473000
.DCDS    ANOP                                                           00474000
         AIF ('&DCDS' EQ 'NO').DCX                                 @v4c 00475000
         AIF ('&DCDS' EQ 'YES').DCDS1                                   00476000
         MNOTE 4,'Invalid DCDS Parameter. ''YES'' assumed'              00477000
.DCDS1   ANOP                                                           00478000
*                                                                  @v4a 00478500
         ORG   ADATA_ORG                                                00479000
ADATA_RECDCDS       EQU   X'0034'  - DC/DS                              00480000
ADATA_EDNDCDS       EQU   X'01'    - DC/DS Edition                 @v4c 00480490
ADDCDS_ESDID        DS    FL4        ESDID for the source record        00480790
*                                                                  @v4a 00480830
ADDCDS_TYPE_DC      EQU   *,X'80'    Flag for DC                   @v4c 00480870
ADDCDS_TYPE_CXD     EQU   *,X'C0'    Flag for CXD within DC        @v4c 00480910
ADDCDS_TYPE_CCW     EQU   *,X'A0'    Flag for CCW within DC        @v4c 00480950
ADDCDS_TYPE_DXD     EQU   *,X'40'    Flag for DXD                  @v4a 00480990
ADDCDS_TEXT_REC     EQU   *,X'10'    X'0035' Text record exists    @v4c 00481040
ADDCDS_TYPE_FLAG    DS    XL1        Type flag                          00481090
*                                                                  @v4a 00481390
                    DS    XL5        Reserved                      @v4c 00482590
ADDCDS_STMT         DS    FL4        Statement Number of source         00482890
ADDCDS_OPS_NUM      DS    FL4        Number of operands            @v4c 00483190
ADDCDS_OPS_OFF      DS    FL4        Offset of first operand       @v4a 00483490
ADDCDS_EQU_LEN      EQU   *-ASMADATA                               @v4c 00483790
*                                                                  @v4a 00484090
*  This is now the end of the fixed portion of the record.         @v4a 00484390
*                                                                  @v4a 00484690
*  The following 9 fields make up a DCDS Operand Block, and this   @v4a 00484990
*  block is repeated, not contiguously, for a count supplied in    @v4a 00485290
*  ADDCDS_OPS_NUM.                                                 @v4a 00485590
*                                                                  @v4a 00485990
*  The offset of the first block, from the start of the ADATA      @v4a 00486390
*  record, is supplied in ADDCDS_OPS_OFF.  Each block contains     @v4a 00486790
*  the offset to the next block, from the start of the ADATA       @v4a 00487190
*  record.  The blocks end when the next offset is zero.           @v4a 00487590
*                                                                  @v4a 00487990
ADDCDS_OPERAND      DSECT                                          @v4a 00488390
ADDCDS_NEXT_OP_OFF  DS    FL4        Offset of next operand block  @v4a 00488790
ADDCDS_LOCTR        DS    FL4        Location counter                   00489190
ADDCDS_DUP          DS    FL4        The duplication factor             00489590
ADDCDS_BIT_OFFSET   DS    XL1        Offset within byte for B constant  00489990
ADDCDS_TYPE_ATTR    DS    XL1        Type attribute                @v4c 00490390
ADDCDS_TYPE_EXT     DS    CL1        Type extension                @l1a 00490790
ADDCDS_PROGRAM_TYPE DS    XL4        Program Type                  @v6a 00491190
                    DS    XL4        Reserved                      @v6c 00491390
ADDCDS_VALUES_NUM   DS    FL4        Number of nominal values      @v4c 00491590
ADDCDS_VALUES_OFF   DS    FL4        Offset of first nominal value @v4a 00491990
ADDCDS_OPERAND_EQU_LEN    EQU  *-ADDCDS_OPERAND                    @v4a 00492390
*                                                                  @v4a 00492790
*  The following 4 fields make up a DCDS Value Block, and this     @v4a 00493190
*  block is repeated, not contiguously, for a count supplied in    @v4a 00493590
*  ADDCDS_VALUES_NUM.                                              @v4a 00493990
*                                                                  @v4a 00494390
*  The offset of the first block, from the start of the ADATA      @v4a 00494790
*  record, is supplied in ADDCDS_VALUES_OFF.  Each block contains  @v4a 00495190
*  the offset to the next block, from the start of the ADATA       @v4a 00495590
*  record.  The blocks end when the next offset is zero.           @v4a 00495990
*                                                                  @v4a 00496390
ADDCDS_VALUE        DSECT                                          @v4a 00496790
ADDCDS_NEXT_VAL_OFF DS    FL4        Offset of next value block    @v4a 00497190
ADDCDS_OBJECT_OFF   DS    FL4        Offset of the nominal value   @v4a 00497590
ADDCDS_BYTE_LEN     DS    FL4        # of bytes in the nominal val @v4c 00497990
ADDCDS_BIT_LEN      DS    FL4        # of Bits if B type constant  @v4c 00498390
ADDCDS_VALUE_EQU_LEN      EQU  *-ADDCDS_VALUE                      @v4c 00498790
*                                                                  @v4a 00499190
*  The following field may be present for each occurance of a      @v4a 00499590
*  DCDS Value Block, and can be accessed using the offset and      @v4a 00499990
*  length provided.  The _OFF gives the offset of the related      @v4a 00500390
*  field, from the start of the ADATA record, and the _LEN is the  @v4a 00500790
*  length of the related field.  Only one of the lengths will be   @v4a 00501190
*  provided; either the byte length or the bit length.  An offset  @v4a 00501590
*  of zero indicates that the related field is not available.      @v4a 00501990
*                                                                  @v4a 00502390
*  The field will not be present for a DC with a duplication       @v4a 00502790
*  factor of zero, or a DS or a DXD.                               @v4a 00503190
*                                                                  @v4a 00503590
ADDCDS_OBJECT       DS    0X         Nominal value                 @v4c 00503990
*                                                                  @v4a 00504390
ASMADATA DSECT                                                     @v4a 00504790
.*                                                                 @v4c 00505190
.DCX     ANOP                                                      @v4c 00505590
         AIF ('&DCX' EQ 'NO').MACH                                 @v4c 00505990
         AIF ('&DCX' EQ 'YES').DCX1                                @v4c 00506390
         MNOTE 4,'Invalid DCX Parameter. ''YES'' assumed'          @v4c 00506790
.DCX1  ANOP                                                        @v4c 00507190
*                                                                  @v4a 00507590
         ORG   ADATA_ORG                                                00508000
ADATA_RECDCX        EQU   X'0035'  - DC Extension                  @v4c 00509000
ADATA_EDNDCX        EQU   X'01'    - DC Extension Edition          @v4c 00509600
ADDCX_ESDID         DS    FL4        ESDID for the source record   @v4c 00510200
ADDCX_STMT          DS    FL4        Statement Number of source    @v4c 00510800
ADDCX_LOCTR         DS    FL4        Location Counter              @v4c 00511400
                    DS    XL8        Reserved                      @v4c 00512000
ADDCX_OBJECT_OFF    DS    FL4        Offset of DC generated object @v4a 00512600
ADDCX_OBJECT_LEN    DS    FL4        Length of DC generated object @v4c 00513200
ADDCX_EQU_LEN       EQU   *-ASMADATA                               @v4c 00513800
*                                                                  @v4a 00514400
*  This is now the end of the fixed portion of the record.         @v4a 00515000
*                                                                  @v4a 00515600
ADDCX_OBJECT        DS    0X         DC generated object           @v4c 00516300
.*                                                                      00517000
.MACH    ANOP                                                           00518000
         AIF ('&MACH' EQ 'NO').RLD                                 @v4c 00519000
         AIF ('&MACH' EQ 'YES').MACH1                                   00520000
         MNOTE 4,'Invalid MACH Parameter. ''YES'' assumed'              00521000
.MACH1   ANOP                                                           00522000
*                                                                  @v4a 00522500
         ORG   ADATA_ORG                                                00523000
ADATA_RECMACH       EQU   X'0036'  - Machine Instruction                00524000
ADATA_EDNMACH       EQU   X'01'    - Machine Instruction Edition   @v4c 00524490
ADMACH_ESDID        DS    FL4        ESDID for the source record        00524990
ADMACH_STMT         DS    FL4        Statement number of source    @v4a 00525290
ADMACH_LOCTR        DS    FL4        Location counter for the instr     00525590
                    DS    XL8        Reserved                      @v4c 00526190
ADMACH_INST_OFF     DS    FL4        Offset of machine instruction @v4a 00526790
ADMACH_INST_LEN     DS    FL4        Length of machine instruction @v4c 00527390
ADMACH_EQU_LEN      EQU   *-ASMADATA                               @v4c 00527990
*                                                                  @v4a 00528590
*  This is now the end of the fixed portion of the record.         @v4a 00529190
*                                                                  @v4a 00529790
ADMACH_INST_VAL     DS    0X         Actual machine instruction    @v4c 00530390
.*                                                                      00531000
.RLD     ANOP                                                           00531030
         AIF ('&RLD' EQ 'NO').SYM                                  @v4c 00531060
         AIF ('&RLD' EQ 'YES').RLD1                                     00531090
         MNOTE 4,'Invalid RLD Parameter. ''YES'' assumed'               00531120
.RLD1    ANOP                                                           00531150
*                                                                  @v4a 00531180
         ORG   ADATA_ORG                                                00531210
ADATA_RECRLD        EQU   X'0040'  - Relocation Dictionary              00531240
ADATA_EDNRLD        EQU   X'01'    - Relocation Dictionary Edition @v4c 00531270
ADRLD_POSID         DS    FL4        ESDID number where address used    00531300
ADRLD_RELID         DS    FL4        ESDID number where symbol defined  00531330
                    DS    AL4        Reserved                      @v4a 00531360
ADRLD_ADDRESS       DS    AL4        Address of the field where the    +00531380
                                      ADCON is stored.                  00531400
*                                                                  @v4a 00531440
ADRLD_FLAG_UNREF    EQU   *,X'80'    LMOD - unresolved reference   @v4a 00531480
ADRLD_FLAG_LEN4     EQU   *,X'40'    Add 4 to length of ADCON      @v4a 00531520
ADRLD_FLAG_CXD      EQU   *,X'30'    ADCON type (3=CXD)            @v4a 00531560
ADRLD_FLAG_Q        EQU   *,X'20'    ADCON type (2=Q)              @v4a 00531600
ADRLD_FLAG_V        EQU   *,X'10'    ADCON type (1=V, 0=A)         @v4a 00531640
ADRLD_FLAG_LENGTH   EQU   *,X'0C'    Contains length-1 of ADCON    @v4a 00531680
ADRLD_FLAG_SIGN     EQU   *,X'02'    Relocation sign (1=-, 0=+)    @v4a 00531720
ADRLD_FLAG_SAME_RP  EQU   *,X'01'    Following RLD item has same       +00531760
                                      R and P pointer.             @v4a 00531800
ADRLD_FLAGS         DS    XL1        Flags for the type of RLD          00531840
*                                                                  @v4a 00531880
ADRLD_EQU_LEN       EQU   *-ASMADATA                               @v4c 00531920
.*                                                                      00531960
.SYM     ANOP                                                           00532000
         AIF ('&SYM' EQ 'NO').XREF                                      00533000
         AIF ('&SYM' EQ 'YES').SYM1                                     00534000
         MNOTE 4,'Invalid SYM Parameter. ''YES'' assumed'               00535000
.SYM1    ANOP                                                           00536000
*                                                                  @v4a 00536500
         ORG   ADATA_ORG                                                00537000
ADATA_RECSYM        EQU   X'0042'  - Symbol                             00538000
ADATA_EDNSYM        EQU   X'01'    - Symbol Edition                @v4c 00538490
ADSYM_ESDID         DS    FL4        ESDID of the section in which     +00539290
                                      the symbol is defined.       @v4c 00540190
ADSYM_STMT          DS    FL4        Statement number                   00541090
ADSYM_LOCTR         DS    FL4        Location counter              @v4m 00541990
ADSYM_TYPE          DS    XL1        Symbol section type                00542890
ADSYM_TYPE_UNDEF    EQU   X'00'      Undefined name                @v4a 00542940
ADSYM_TYPE_SECTION  EQU   X'01'      CSECT / RSECT name            @v4a 00542990
ADSYM_TYPE_DSECT    EQU   X'02'      DSECT name                    @v4a 00543040
ADSYM_TYPE_COMMON   EQU   X'03'      Common section name           @v4a 00543090
ADSYM_TYPE_DXD      EQU   X'04'      Dummy External DSECT name     @v4a 00543140
ADSYM_TYPE_VCON     EQU   X'05'      V-type constant name          @v4a 00543190
ADSYM_TYPE_QUAL     EQU   X'06'      Qualifier                     @v4a 00543250
ADSYM_TYPE_XTRN     EQU   X'07'      EXTRN/WXTRN name              @v4a 00543310
ADSYM_TYPE_LOCTR    EQU   X'08'      LOCTR name                    @v4a 00543370
ADSYM_TYPE_DUP      EQU   X'09'      Duplicate name                @v4a 00543430
ADSYM_TYPE_LITERAL  EQU   X'0A'      Literal name                  @v4a 00543490
ADSYM_TYPE_ASTLIT   EQU   X'0B'      *-in-literal name             @v4a 00543550
ADSYM_TYPE_EQU      EQU   X'0C'      EQU name                      @v4a 00543610
ADSYM_TYPE_ORDINARY EQU   X'0D'      Ordinary label                @v4a 00543670
ADSYM_TYPE_UNRES    EQU   X'0E'      Unresolvable EQU, DC or DS    @v4a 00543730
ADSYM_DUP           DS    FL4        Duplication factor            @v4m 00543790
ADSYM_ATTR          DS    XL1        Type attribyte                @v6c 00544690
ADSYM_ASM_TYPE      DS    CL4        Assembler Type                @v6a 00544990
ADSYM_PROGRAM_TYPE  DS    XL4        Program Type                  @v6c 00545290
ADSYM_BYTE_LEN      DS    FL4        Length in bytes               @v4c 00545590
ADSYM_INT           DS    HL2        Number of positions occupied by   +00546490
                                      int portion of fixed-point.  @v4c 00547390
ADSYM_SCALE         DS    HL2        Number of positions occupied by   +00548290
                                      fract portion of fixed-point.@v4c 00549190
*                                                                  @v4a 00550090
ADSYM_RELOC         EQU   *,X'80'    Operand points to a relocatable   +00550990
                                      expression.                  @v4c 00551890
ADSYM_COMPLEX       EQU   *,X'C0'    Operand points to a complex       +00552790
                                      relocatable symbol.          @v4c 00553690
ADSYM_RELOC_FLAG    DS    XL1        Relocatable flag                   00553990
*                                                                  @v4a 00554290
                    DS    XL7        Reserved                      @v4c 00554590
ADSYM_NAME_OFF      DS    FL4        Offset of Symbol Name         @v4a 00555490
ADSYM_NAME_LEN      DS    FL4        Length of Symbol Name         @v4c 00556390
ADSYM_EQU_LEN       EQU   *-ASMADATA                               @v4c 00557290
*                                                                  @v4a 00558190
*  This is now the end of the fixed portion of the record.         @v4a 00559090
*                                                                       00560000
ADSYM_NAME          DS    0CL63      Symbol Name (variable name)   @v4c 00560500
.*                                                                      00561000
.XREF    ANOP                                                           00562000
         AIF ('&XREF' EQ 'NO').RXREF                                    00563000
         AIF ('&XREF' EQ 'YES').XREF1                                   00564000
         MNOTE 4,'Invalid XREF Parameter. ''YES'' assumed'              00565000
.XREF1   ANOP                                                           00566000
*                                                                  @v4a 00566500
         ORG   ADATA_ORG                                                00567000
ADATA_RECXREF       EQU   X'0044'  - Symbol & Literal Cross Ref    @v4c 00568000
ADATA_EDNXREF       EQU   X'01'    - Symbol & Literal Cross Ref    @v4c 00568200
ADXREF_STMT         DS    FL4        Definition statement number   @v4c 00568500
ADXREF_REL_TYPE     DS    CL1        Relocatability type           @v4c 00568800
ADXREF_REL_SIMPLE   EQU   C' '       Simple relocatable symbol     @v4a 00569100
ADXREF_REL_ABSOLUTE EQU   C'A'       Absolute symbol               @v4a 00569400
ADXREF_REL_COMPLEX  EQU   C'C'       Complex relocatable symbol    @v4a 00569700
                    DS    XL7        Reserved                      @v4c 00570000
ADXREF_SYM_OFF      DS    FL4        Offset of Symbol/Literal name @v4a 00570300
ADXREF_SYM_LEN      DS    FL4        Offset of Symbol/Literal name @v4c 00570600
ADXREF_TOTAL_REFS   DS    FL4        Total number of references    @v4a 00570900
ADXREF_REFS_NUM     DS    FL4        Number of refs in this record @v4c 00571200
ADXREF_REFS_OFF     DS    FL4        Offset to first reference     @v4a 00571500
ADXREF_EQU_LEN      EQU   *-ASMADATA                               @v4c 00571800
*                                                                  @v4a 00572100
*  This is now the end of the fixed portion of the record.         @v4a 00572400
*                                                                  @v4a 00572700
ADXREF_SYM_NAME     DS    0CL63      Symbol/Literal name           @v4c 00573000
*                                                                  @v4a 00573300
*  The following 2 fields make up a Symbol Reference Block, and    @v4a 00573600
*  this block is repeated, contiguously, for a count supplied      @v4a 00573900
*  in ADXREF_REFS_NUM; creating in effect a fixed array.           @v4a 00574200
*                                                                  @v4a 00574500
*  The offset of the first block, from the start of the ADATA      @v4a 00574800
*  record, is supplied in ADXREF_REFS_OFF.                         @v4a 00575100
*                                                                  @v4a 00575400
ADXREF_REF          DSECT                                          @v4a 00575700
ADXREF_REF_STMT     DS    FL4        Reference statement number    @v4c 00576000
ADXREF_REF_FLAG     DS    CL1        Reference flag                @v4c 00576600
ADXREF_REF_NOBRMOD  EQU   C' '       No branch or modification     @v4a 00576900
ADXREF_REF_MODIFY   EQU   C'M'       Modified                      @v4a 00577200
ADXREF_REF_BRANCH   EQU   C'B'       Branched to                   @v4a 00577500
ADXREF_REF_USING    EQU   C'U'       USING statement               @v4a 00577800
ADXREF_REF_DROP     EQU   C'D'       DROP statement                @v4a 00578100
ADXREF_REF_EXECUTE  EQU   C'X'       Execute Instruction           @v4a 00578400
ADXREF_REF_EQU_LEN  EQU   *-ADXREF_REF                             @v4a 00578700
*                                                                       00579000
ASMADATA DSECT                                                     @v4a 00579500
.*                                                                      00580000
.RXREF   ANOP                                                      @l1a 00581000
         AIF ('&RXREF' EQ 'NO').MXREF                              @v4c 00582000
         AIF ('&RXREF' EQ 'YES').RXREF1                            @l1a 00583000
         MNOTE 4,'Invalid RXREF Parameter. ''YES'' assumed'        @l1a 00584000
.RXREF1   ANOP                                                     @l1a 00585000
*                                                                  @v4a 00612500
         ORG   ADATA_ORG                                           @l1a 00613000
ADATA_RECRXREF      EQU   X'0045'  - Register Cross Reference      @v4c 00615000
ADATA_EDNRXREF      EQU   X'01'    - Register Cross Ref Edition    @v4c 00617000
ADRXREF_REG_NUMBER  DS    XL1        Register Number               @v4c 00619000
ADRXREF_REG_TYPE    DS    CL1        Register Type - G - general   @v4c 00622000
                    DS    XL2        Reserved                      @v4c 00625890
ADRXREF_TOTAL_REFS  DS    FL4        Total number of references    @v4c 00626790
ADRXREF_REFS_NUM    DS    FL4        Number of references to the       +00627690
                                      register in this ADATA rec.  @v4c 00628590
ADRXREF_REFS_OFF    DS    FL4        Offset to first reference     @v4c 00629490
ADRXREF_EQU_LEN     EQU   *-ASMADATA                               @v4c 00630390
*                                                                  @v4c 00631290
*  This is now the end of the fixed portion of the record.         @v4a 00632190
*                                                                  @v4a 00638500
*  The following 2 fields make up a Register Reference Block, and  @v4a 00639000
*  this block is repeated, contiguously, for a count supplied      @v4a 00639400
*  in ADRXREF_REFS_NUM; creating in effect a fixed array.          @v4a 00639800
*                                                                  @v4a 00640200
*  The offset of the first block, from the start of the ADATA      @v4a 00640600
*  record, is supplied in ADRXREF_REFS_OFF.                        @v4a 00641000
*                                                                  @v4a 00641400
ADRXREF_REF         DSECT                                          @v4a 00641800
ADRXREF_REF_STMT    DS    FL4        Reference statement number    @v4c 00642200
ADRXREF_REF_FLAG    DS    CL1        Reference flag                @v4c 00642600
ADRXREF_REF_NOBRMOD EQU   C' '       No branch or modification     @v4c 00643000
ADRXREF_REF_MODIFY  EQU   C'M'       Modified                      @v4c 00643400
ADRXREF_REF_BRANCH  EQU   C'B'       Branched to                   @v4c 00643800
ADRXREF_REF_INDEX   EQU   C'N'       Index register reference      @v4c 00644200
ADRXREF_REF_USING   EQU   C'U'       USING statement               @v4c 00644600
ADRXREF_REF_DROP    EQU   C'D'       DROP statement                @v4c 00645000
ADRXREF_REF_EQU_LEN EQU   *-ADRXREF_REF                            @v4c 00645500
*                                                                  @v4c 00646000
ASMADATA DSECT                                                     @v4a 00646500
.*                                                                      00647000
.MXREF   ANOP                                                           00648000
         AIF ('&MXREF' EQ 'NO').MXREFX                                  00649000
         AIF ('&MXREF' EQ 'YES').MXREF1                                 00650000
         MNOTE 4,'Invalid MXREF Parameter. ''YES'' assumed'             00651000
.MXREF1  ANOP                                                           00652000
*                                                                  @v4a 00652500
         ORG   ADATA_ORG                                                00653000
ADATA_RECMXREF      EQU   X'0060'  - Library Record                     00654000
ADATA_EDNMXREF      EQU   X'01'    - Library Record Edition        @v4c 00654490
ADMXREF_CONCAT      DS    FL4        Dataset concat number         @v4c 00654790
ADMXREF_DAT_OFF     DS    FL4        Offset of the dataset name    @v4a 00655090
ADMXREF_DAT_LEN     DS    FL4        Length of the dataset name    @v4c 00655390
ADMXREF_VOL_OFF     DS    FL4        Offset of the volume name     @v4a 00655690
ADMXREF_VOL_LEN     DS    FL4        Length of the volume name     @v4c 00655990
ADMXREF_DD_OFF      DS    FL4        Offset of the ddname          @v4a 00656290
ADMXREF_DD_LEN      DS    FL4        Length of the ddname          @v4c 00656590
ADMXREF_MACROS_NUM  DS    FL4        Number of macro/copy blocks   @v4c 00656890
ADMXREF_MACROS_OFF  DS    FL4        Offset to first macro/copy    @v4a 00657190
ADMXREF_EQU_LEN     EQU   *-ASMADATA                               @v4c 00657490
*                                                                  @v4c 00657790
*  This is now the end of the fixed portion of the record.         @v4a 00658090
*                                                                  @v4a 00658390
ADMXREF_DATASET     DS    0CL256     Dataset name where the macro/copy +00658690
                                      code was retrieved from.     @v4c 00658990
ADMXREF_VOL         DS    0CL256     Volume where dataset resides  @v4c 00659290
ADMXREF_DDNAME      DS    0CL256     DDNAME where dataset resides  @v4c 00659590
*                                                                  @v4a 00659890
*  The following 3 fields make up a Macro Offsets Block, and this  @v4a 00660790
*  block is repeated, not contiguously, for a count supplied in    @v4a 00661090
*  ADMXREF_MACROS_NUM.                                             @v4a 00661390
*                                                                  @v4a 00661690
*  The offset of the first block, from the start of the ADATA      @v4a 00661990
*  record, is supplied in ADMXREF_MACROS_OFF.  Each block          @v4a 00662290
*  contains the offset to the next block, from the start of the    @v4a 00662590
*  ADATA record.  The blocks end when the next offset is zero.     @v4a 00662890
*                                                                  @v4a 00663190
ADMXREF_MACRO           DSECT                                      @v4a 00663290
ADMXREF_MACRO_NEXT_OFF  DS   FL4     Offset of next macro block    @v4a 00663490
ADMXREF_MACRO_NAME_OFF  DS   FL4     Offset of the macro/copy name @v4a 00663790
ADMXREF_MACRO_NAME_LEN  DS   FL4     Length of the macro/copy name @v4c 00664090
ADMXREF_MACRO_EQU_LEN   EQU  *-ADMXREF_MACRO                       @v4a 00664390
*                                                                  @v4a 00664690
*  The following field may be present for each occurance of a      @v4a 00664990
*  Macro Offsets Block, and can be accessed using the offset and   @v4a 00665290
*  length pair provided.  The _OFF gives the offset of the         @v4a 00665590
*  related field, from the start of the ADATA record, and the      @v4a 00665890
*  _LEN is the length of the related field.  An offset or length   @v4a 00666190
*  of zero indicates that the related field is not available.      @v4a 00666490
*                                                                  @v4a 00666790
ADMXREF_MACRO_NAME      DS   0CL256  Macro/copy code name          @v4c 00667090
*                                                                  @v4a 00667390
ASMADATA DSECT                                                     @v4a 00667690
.*                                                                      00668000
.MXREFX  ANOP                                                           00669000
         AIF ('&MXREFX' EQ 'NO').USER                                   00670000
         AIF ('&MXREFX' EQ 'YES').MXREFX1                               00671000
         MNOTE 4,'Invalid MXREFX Parameter. ''YES'' assumed'            00672000
.MXREFX1  ANOP                                                          00673000
*                                                                  @v4a 00673500
         ORG   ADATA_ORG                                                00674000
ADATA_RECMXREFX     EQU   X'0062'  - Macro & Copy Code Cross Reference  00675000
ADATA_EDNMXREFX     EQU   X'01'    - Macro & Copy Code Cross Ref   @v4c 00675490
ADMXRFX_CNUM        DS    FL4        Library Concatenation Number       00675890
ADMXRFX_DEFN        DS    FL4        Stmnt Number; 0=LIB; -1=Undef      00676290
ADMXRFX_CTYPE       DS    CL1        Concatenation Type                 00676690
ADMXRFX_CTYPE_L     EQU   C'L'       Library                            00677090
ADMXRFX_CTYPE_P     EQU   C'P'       Primary Input                      00677490
ADMXRFX_DEFN_FLAG   DS    CL1        Definition Flag                    00677990
ADMXRFX_DEFN_NORMAL EQU   C' '       No imbedding... no nothing... @v4a 00678190
ADMXRFX_DEFN_IMBED  EQU   C'X'       Macro imbedded due to LIBMAC       00678490
                    DS    XL8        Reserved                      @v4c 00678990
ADMXRFX_MEM_OFF     DS    FL4        Offset of Library Member name @v4a 00679490
ADMXRFX_MEM_LEN     DS    FL4        Length of Library Member name @v4a 00679990
ADMXRFX_CALL_OFF    DS    FL4        Offset of Caller name         @v4a 00680490
ADMXRFX_CALL_LEN    DS    FL4        Length of Caller name         @v4a 00680990
ADMXRFX_TOTAL_REFS  DS    FL4        Total number of references to     +00681490
                                      member by current caller.    @v4c 00681990
ADMXRFX_REFS_NUM    DS    FL4        Number of references to the       +00682490
                                      member in this ADATA record. @v4c 00682990
ADMXRFX_REFS_OFF    DS    FL4        Offset to first reference     @v4c 00683490
ADMXRFX_EQU_LEN     EQU   *-ASMADATA                               @v4c 00683990
*                                                                  @v4a 00684490
*  This is now the end of the fixed portion of the record.         @v4a 00684990
*                                                                  @v4a 00685490
ADMXRFX_MEM_NAME    DS    0CL64      The Library Member name       @v4c 00685990
ADMXRFX_CALL_NAME   DS    0CL64      The Caller name               @v4c 00686490
*                                                                  @v4a 00686990
*  The following 2 fields make up a Member Reference Block, and    @v4a 00687490
*  this block is repeated, contiguously, for a count supplied      @v4a 00687990
*  in ADMXRFX_REFS_NUM; creating in effect a fixed array.          @v4a 00688490
*                                                                  @v4a 00688990
*  The offset of the first block, from the start of the ADATA      @v4a 00689490
*  record, is supplied in ADMXRFX_REFS_OFF.                        @v4a 00689990
*                                                                  @v4a 00690490
ADMXRFX_REF         DSECT                                          @v4a 00690990
ADMXRFX_REF_STMT    DS    FL4        Reference statement number    @v4c 00691490
ADMXRFX_REF_FLAG    DS    CL1        Reference flag                @v4c 00691790
ADMXRFX_REF_MACRO   EQU   C' '       Caused by MACRO call          @v4a 00692190
ADMXRFX_REF_COPY    EQU   C'C'       Caused by COPY statement           00692490
ADMXRFX_REF_EQU_LEN       EQU  *-ADMXRFX_REF                       @v4c 00693490
*                                                                  @v4c 00693990
ASMADATA DSECT                                                     @v4a 00694490
.*                                                                      00695000
.USER    ANOP                                                           00696000
         AIF ('&USER' EQ 'NO').USING                               @v4c 00697000
         AIF ('&USER' EQ 'YES').USER1                                   00698000
         MNOTE 4,'Invalid USER Parameter. ''YES'' assumed'              00699000
.USER1   ANOP                                                           00700000
*                                                                  @v4a 00700500
         ORG   ADATA_ORG                                                00701000
ADATA_RECUSER       EQU   X'0070'  - User Data                          00702000
ADATA_EDNUSER       EQU   X'01'    - User Data Edition             @v4c 00702490
ADUSER_FIELD1       DS    XL4        User Specified Binary Data         00703090
ADUSER_FIELD2       DS    XL4        User Specified Binary Data         00703690
ADUSER_FIELD3       DS    XL4        User Specified Binary Data         00704290
ADUSER_FIELD4       DS    XL4        User Specified Binary Data         00704890
ADUSER_DATA_OFF     DS    FL4        Offset of ADUSER_DATA         @v4a 00705490
ADUSER_DATA_LEN     DS    FL4        Length of ADUSER_DATA         @v4c 00706090
ADUSER_EQU_LEN      EQU   *-ASMADATA                               @v4c 00706690
*                                                                  @v4a 00707290
*  This is now the end of the fixed portion of the record.         @v4a 00707890
*                                                                  @v4a 00708590
ADUSER_DATA         DS    0C         User Specified Binary Data    @v4c 00709290
.*                                                                      00710000
.USING   ANOP                                                           00711000
         AIF ('&USING' EQ 'NO').STATS                              @v4c 00711800
         AIF ('&USING' EQ 'YES').USING1                                 00712600
         MNOTE 4,'Invalid USING Parameter. ''YES'' assumed'             00713400
.USING1  ANOP                                                           00714200
*                                                                  @v4a 00715100
         ORG   ADATA_ORG                                                00716000
ADATA_RECUSING      EQU   X'0080'  - USING Map                          00717000
ADATA_EDNUSING      EQU   X'01'    - USING Map Edition             @v4c 00737000
*                                                                  @v4a 00771500
ADUSING_TYPE_DROP   EQU   *,X'80'    DROP                          @v4a 00772000
ADUSING_TYPE_PUSH   EQU   *,X'40'    PUSH                          @v4a 00775000
ADUSING_TYPE_POP    EQU   *,X'20'    POP                           @v4a 00779000
ADUSING_TYPE_USING  EQU   *,X'00'    USING                         @v4a 00783000
ADUSING_TYPE        DS    XL1        Record type                   @v4c 00787000
*                                                                  @v4a 00791500
ADUSING_FLAG_LABDEP EQU   *,X'30'    Labeled Dependent USING       @v4a 00792000
ADUSING_FLAG_DEP    EQU   *,X'20'    Dependent USING               @v4a 00794000
ADUSING_FLAG_LAB    EQU   *,X'10'    Labeled USING                 @v4a 00796000
ADUSING_FLAG_ORD    EQU   *,X'00'    Ordinary USING                @v4a 00798000
ADUSING_FLAG        DS    XL1        Using type                         00800000
*                                                                  @v4a 00802500
ADUSING_LOCTR_ESDID DS    FL4        USING location counter ESDID  @v4c 00803000
ADUSING_STMT        DS    FL4        The statement number of the using  00803500
ADUSING_LOCTR       DS    FL4        The location count of the using    00804000
ADUSING_VALUE       DS    FL4        The type value                     00804500
ADUSING_LAST_STMT   DS    FL4        The last statement for the using   00805000
ADUSING_ID          DS    FL4        The ID of the using                00805500
ADUSING_REG         DS    XL1        The register used in the using     00806000
ADUSING_DISP        DS    XL2        The max displacement for the using 00806500
                    DS    XL1        Reserved                      @m1a 00807000
ADUSING_RANGE       DS    FL4        The range value               @m1a 00807500
                    DS    XL2        Reserved                      @v4c 00808000
ADUSING_LABEL_OFF   DS    FL4        Offset of LABEL & USING text  @v4a 00809000
ADUSING_LABEL_LEN   DS    FL4        Length of LABEL & USING text  @v4c 00809300
ADUSING_EQU_LEN     EQU   *-ASMADATA                               @v4c 00809600
*                                                                  @v4a 00810000
*  This is now the end of the fixed portion of the record.         @v4a 00810400
*                                                                  @v4c 00810800
ADUSING_LABEL       DS    0CL63      LABEL & USING text            @v4c 00811200
.*                                                                1@v4d 00811600
.STATS   ANOP                                                           00812000
         AIF ('&STATS' EQ 'NO').FILEBLOCK                          @v4c 00813000
         AIF ('&STATS' EQ 'YES').STATS1                                 00814000
         MNOTE 4,'Invalid STATS Parameter. ''YES'' assumed'             00815000
.STATS1  ANOP                                                           00816000
*                                                                  @v4a 00816500
         ORG   ADATA_ORG                                                00817000
ADATA_RECSTATS      EQU   X'0090'  - Statistics                    @v4c 00818000
ADATA_EDNSTATS      EQU   X'02'    - Statistics Edition            @v4c 00818600
ADSTATS_BUFFP        DS   FL4        Size in KB of buffer pool          00819200
ADSTATS_REQ_INSTOR   DS   FL4        Size in KB to be incore assembly   00819800
ADSTATS_P_INPUT      DS   FL4        Number of primary input records    00820400
ADSTATS_LIB_INPUT    DS   FL4        Number of library records read     00821000
ADSTATS_WORK_FILE    DS   FL4        Number of work file reads          00821600
ADSTATS_P_PRINT      DS   FL4        Number of print records written    00822200
ADSTATS_P_PUNCH      DS   FL4        Number of punch records written    00822800
ADSTATS_WORK_WRITE   DS   FL4        Number of work file writes    @v4c 00823400
ADSTATS_ADATA        DS   FL4        Number of adata file writes        00824000
ADSTATS_ADATA_CALLS  DS   FL4        Number of adata exit calls         00824600
ADSTATS_ADATA_ADDED  DS   FL4        Number adata exit recs added       00825200
ADSTATS_ADATA_DELETE DS   FL4        Number adata exit recs deleted     00825800
ADSTATS_ADATA_DIAG   DS   FL4        Number adata exit diagnostics      00826400
ADSTATS_LIB_CALLS    DS   FL4        Number of library exit calls       00827000
ADSTATS_LIB_ADDED    DS   FL4        Number library exit recs added     00827600
ADSTATS_LIB_DELETE   DS   FL4        Number library exit recs delet     00828200
ADSTATS_LIB_DIAG     DS   FL4        Number library exit diagnostic     00828800
ADSTATS_LIST_CALLS   DS   FL4        Number of listing exit calls       00829400
ADSTATS_LIST_ADDED   DS   FL4        Number listing exit recs added     00830000
ADSTATS_LIST_DELETE  DS   FL4        Number listing exit recs delet     00830700
ADSTATS_LIST_DIAG    DS   FL4        Number listing exit diagnostic     00831400
ADSTATS_OBJ_CALLS    DS   FL4        Number of object exit calls        00832100
ADSTATS_OBJ_ADDED    DS   FL4        Number object exit recs added      00832800
ADSTATS_OBJ_DELETE   DS   FL4        Number object exit recs delete     00833500
ADSTATS_OBJ_DIAG     DS   FL4        Number object exit diagnostics     00834200
ADSTATS_INPUT_CALLS  DS   FL4        Number of input exit calls         00834900
ADSTATS_INPUT_ADDED  DS   FL4        Number input exit recs added       00835600
ADSTATS_INPUT_DELETE DS   FL4        Number input exit recs deleted     00836300
ADSTATS_INPUT_DIAG   DS   FL4        Number input exit diagnostics      00837000
ADSTATS_PUNCH_CALLS  DS   FL4        Number of punch exit calls         00837700
ADSTATS_PUNCH_ADDED  DS   FL4        Number punch exit recs added       00838400
ADSTATS_PUNCH_DELETE DS   FL4        Number punch exit recs deleted     00839100
ADSTATS_PUNCH_DIAG   DS   FL4        Number punch exit diagnostics      00839800
ADSTATS_TERM_CALLS   DS   FL4        Number of term exit calls          00840500
ADSTATS_TERM_ADDED   DS   FL4        Number term exit recs added        00841200
ADSTATS_TERM_DELETE  DS   FL4        Number term exit recs deleted      00841900
ADSTATS_TERM_DIAG    DS   FL4        Number term exit diagnostics       00842600
ADSTATS_START_TIME   DS   FL4        Local time assembly commenced      00843300
ADSTATS_STOP_TIME    DS   FL4        Local time assembly completed      00844000
ADSTATS_PROC_TIME    DS   FL4        Processor seconds used             00844700
ADSTATS_ASMAOPT_READ DS   FL4        ASMAOTP records read          @v2a 00845400
                     DS   XL4        Reserved                      @v2c 00846100
ADSTATS_XFUNCS_NUM   DS   FL4        Number of ext. func. loaded   @v4c 00846800
ADSTATS_XFUNCS_OFF   DS   FL4        Offset of first ext. func.    @v4a 00847500
ADSTATS_SUPR_NUM     DS   FL4        Number of messages suppressed @v5a 00847700
ADSTATS_SUPR_OFF     DS   FL4        Offset of first message supp. @v5a 00847900
ADSTATS_EQU_LEN      EQU  *-ASMADATA                               @v4c 00848200
*                                                                  @v4a 00848900
*  This is now the end of the fixed portion of the record.         @v4a 00849600
*                                                                  @v4a 00850300
*  The following 8 fields make up an External Function Block, and  @v4a 00851000
*  this block is repeated, not contiguously, for a count supplied  @v4a 00851700
*  in ADSTATS_XFUNCS_NUM.                                          @v4a 00852400
*                                                                  @v4a 00853100
*  The offset of the first block, from the start of the ADATA      @v4a 00853800
*  record, is supplied in ADSTATS_XFUNCS_OFF.  Each block          @v4a 00854500
*  contains the offset to the next block, from the start of the    @v4a 00855200
*  ADATA record.  The blocks end when the next offset is zero.     @v4a 00855900
*                                                                  @v4c 00856600
ADSTATS_XFUNC          DSECT                                       @v4c 00857300
ADSTATS_XFUNC_NEXT_OFF DS    FL4     Offset of next ext. func.     @v4a 00858000
                       DS    XL4     Reserved                      @L1A 00858700
ADSTATS_XFUNC_SETAF    DS    FL4     Number of SETAF calls         @L1A 00859400
ADSTATS_XFUNC_SETCF    DS    FL4     Number of SETCF calls         @L1A 00860100
ADSTATS_XFUNC_MSG      DS    FL4     Number of messages issued     @L1A 00860800
ADSTATS_XFUNC_MSEV     DS    HL2     Highest messages severity     @L1A 00861500
ADSTATS_XFUNC_NAME_OFF DS    FL4     Offset of the ext. func. name @v4a 00862200
ADSTATS_XFUNC_NAME_LEN DS    FL4     Length of the ext. func. name @v4c 00862900
ADSTATS_XFUNC_EQU_LEN  EQU   *-ADSTATS_XFUNC                       @v4a 00863600
*                                                                  @v4a 00864300
*  The following field may be present for each occurance of an     @v4a 00865000
*  External Function Block, and can be accessed using the offset   @v4a 00865700
*  and length pair provided.  The _OFF gives the offset of the     @v4a 00866400
*  related field, from the start of the ADATA record, and the      @v4a 00867100
*  _LEN is the length of the related field.  An offset or length   @v4a 00867800
*  of zero indicates that the related field is not available.      @v4a 00868500
*                                                                  @v4a 00869200
ADSTATS_XFUNC_NAME     DS    0CL256  External Function name        @v4c 00869900
*                                                                  @v5a 00869950
*  The following 2 fields make up a Suppressed Message Block, and  @v5a 00870000
*  this block is repeated, contiguously, for a count supplied      @v5a 00870050
*  in ADSTATS_SUPRWARN_NUM; creating in effect a fixed array.      @v5a 00870100
*                                                                  @v5a 00870150
*  The offset of the first block, from the start of the ADATA      @v5a 00870200
*  record, is supplied in ADSTATS_SUPRWARN_OFF.                    @v5a 00870250
*                                                                  @v5a 00870300
ADSTATS_SUPR           DSECT                                       @v5a 00870360
ADSTATS_SUPR_MSGNO     DS    HL2     Message number                @v5a 00870420
ADSTATS_SUPR_COUNT     DS    FL4     Number of times suppressed    @v5a 00870480
ADSTATS_SUPR_EQU_LEN   EQU   *-ADSTATS_SUPR                        @v5a 00870540
*                                                                  @v4a 00870600
ASMADATA DSECT                                                     @v4a 00871300
.*                                                                 @v4c 00872000
.FILEBLOCK  ANOP                                                   @v4a 00872020
         AIF   (('&JID' NE 'YES')    AND                               +00872040
                ('&OUTPUT' NE 'YES') AND                               +00872060
                ('&AOPT' NE 'YES')).ENDIT                          @v4a 00872080
*                                                                  @v4a 00872100
*  The following 8 fields make up a File Offsets Block, and this   @v4a 00872160
*  block is repeated, not contiguously, for a count supplied in    @v4a 00872180
*  the fixed portion of the particular ADATA record.               @v4a 00872200
*                                                                  @v4a 00872220
*  The offset of the first block, from the start of the ADATA      @v4a 00872240
*  record, is also supplied in the fixed portion of the            @v4a 00872260
*  particular ADATA record.  Each block contains the offset to     @v4a 00872280
*  the next block, from the start of the ADATA record.  The        @v4a 00872310
*  blocks end when the next offset is zero.                        @v4a 00872340
*                                                                  @v4a 00872370
ADFBLOCK            DSECT                                          @v4a 00872380
ADFBLOCK_NEXT_OFF   DS    FL4        Offset of next offsets block  @v4a 00872400
ADFBLOCK_FILENUMBER DS    FL4        File number                   @v4a 00872430
ADFBLOCK_FILE_OFF   DS    FL4        Offset of the file name       @v4a 00872460
ADFBLOCK_FILE_LEN   DS    FL4        Length of the file name       @v4a 00872490
ADFBLOCK_VOL_OFF    DS    FL4        Offset of the volume name     @v4a 00872520
ADFBLOCK_VOL_LEN    DS    FL4        Length of the volume name     @v4a 00872550
ADFBLOCK_MEM_OFF    DS    FL4        Offset of the member name     @v4a 00872580
ADFBLOCK_MEM_LEN    DS    FL4        Length of the member name     @v4a 00872610
ADFBLOCK_EQU_LEN    EQU   *-ADFBLOCK                               @v4a 00872640
*                                                                  @v4a 00872670
*  The following 3 fields may be present for each occurance of a   @v4a 00872700
*  File Offsets Block, and can be accessed using the offset and    @v4a 00872730
*  length pairs provided.  Each _OFF gives the offset of the       @v4a 00872760
*  related field, from the start of the ADATA record, and each     @v4a 00872790
*  _LEN is the length of the related field.  An offset or length   @v4a 00872820
*  of zero indicates that the related field is not available.      @v4a 00872850
*                                                                  @v4a 00872880
ADFBLOCK_FILENAME   DS    0CL256     File name                     @v4a 00872910
ADFBLOCK_VOLNAME    DS    0CL256     Volume name                   @v4a 00872940
ADFBLOCK_MEMNAME    DS    0CL256     Member name                   @v4a 00872970
.*                                                                 @v4a 00872980
.ENDIT   ANOP                                                           00873000
         POP   PRINT                 Restore PRINT status               00874000
         MEND                                                           00875000
