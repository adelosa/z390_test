         MACRO                                                          00001000
.**************************************************************         00002000
.*   Licensed Materials - Property of IBM                     *         00003000
.*                                                            *         00004000
.*   5696-234                                                 *         00005000
.*                                                            *         00006000
.*   (C) Copyright IBM Corp. 1975, 2004. All Rights Reserved. *         00007000
.*                                 @v7a                       *         00008000
.*   US Government Users Restricted Rights - Use,             *         00009000
.*   duplication or disclosure restricted by GSA ADP          *         00010000
.*   Schedule Contract with IBM Corp.                         *         00011000
.*                                                            *         00012000
.**************************************************************         00013000
         ASMAOPT &ADATA=NO,                                            *00014000
               &ALIGN=YES,                                             *00015000
               &ALIGNWARN=YES,    FLAG sub-option                      *00016000
               &BATCH=YES,                                             *00017000
               &CODEPAGE=047C,                                    @v2a *00018000
               &COMPAT=NO,                                             *00019000
               &CONTWARN=YES,     FLAG sub-option                      *00020000
               &DBCS=NO,                                               *00021000
               &DECK=NO,                                               *00022000
               &DELETE=,                                               *00023000
               &DSECT=NO,                                              *00024000
               &DXREF=YES,                                             *00025000
               &ESD=YES,                                               *00026000
               &EXLITW=YES,       FLAG sub-option                      *00027000
               &ADEXIT=,          EXIT sub-option                      *00028000
               &INEXIT=,          EXIT sub-option                      *00029000
               &LIBEXIT=,         EXIT sub-option                      *00030000
               &PRTEXIT=,         EXIT sub-option                      *00031000
               &OBJEXIT=,         EXIT sub-option                      *00032000
               &TRMEXIT=,         TERM EXIT sub-option                 *00033000
               &FLAG=0,                                                *00034000
               &FOLD=NO,                                               *00035000
               &IMPLENWARN=NO,    Flag suboption                       *00036000
               &INFO=NO,                                               *00037000
               &LANGUAGE=EN,                                           *00038000
               &LIBMAC=NO,                                             *00039000
               &LINECOUNT=60,                                          *00040000
               &LIST=YES,                                              *00041000
               &MACHINE=,         Synonym for OPTABLE              @v6a*00042000
               &MACHINELIST=NO,   Synonym for OPTABLELIST          @v6a*00043000
               &MXREF=SOURCE, (SOURCE and YES are the same)            *00044000
               &OBJECT=YES,                                            *00045000
               &OPTABLE=UNI,                                           *00046000
               &OPTABLELIST=NO,                                        *00047000
               &PAGE0WARN=NO,     Flag suboption                       *00048000
               &PCONTROL=NO,                                           *00049000
               &PESTOP=NO,                                             *00050000
               &PROFILE=NO,                                            *00051000
               &PROFMEM=ASMAPROF,                                      *00052000
               &PUSHWARN=YES,     FLAG sub-option                      *00053000
               &RA2=NO,                                                *00054000
               &RECORDINFO=YES,   FLAG sub-option                      *00055000
               &RENT=NO,                                               *00056000
               &RLD=YES,                                               *00057000
               &RXREF=YES,                                             *00058000
               &SECTALGN=8,                                        @v6a*00059000
               &SIZE=MAX,                                              *00060000
               &STORAGE=,                                              *00061000
               &SUBSTRWARN=NO,                                         *00062000
               &SUPRWARN=NO,                                       @v6a*00063000
               &SYSPARMV=,                                             *00064000
               &TERM=NO,                                               *00065000
               &TEST=NO,                                               *00066000
               &THREAD=YES,                                        @v2a*00067000
               &TRANSLATE=NO,                                          *00068000
               &TYPECHECK=(MAGNITUDE,REGISTER),                    @v6c*00069000
               &USING0WARN=YES,   FLAG sub-option USING0               *00070000
               &LIMIT=NO,         USING sub-option                     *00071000
               &MAP=YES,          USING sub-option                     *00072000
               &WARN=15,          USING sub-option                     *00073000
               &XREF=(SHORT,UNREFS)                                     00074000
.***START OF SPECIFICATIONS ******************************************* 00075000
.*                                                                    * 00076000
.*MACRO NAME: ASMAOPT                                                 * 00077000
.*                                                                    * 00078000
.*DESCRIPTIVE NAME: Macro to Generate Default Invocation Options      * 00079000
.*                                                                    * 00080000
.*                                                                    * 00081000
.*FUNCTION: This macro builds a default option table (ASMADOPT) for   * 00082000
.*          use when the IBM High Level Assembler is invoked.         * 00083000
.*                                                                    * 00084000
.*  DEPENDENCIES: NONE                                                * 00085000
.*                                                                    * 00086000
.*  RESTRICTIONS: NONE                                                * 00087000
.*                                                                    * 00088000
.*  REGISTER CONVENTIONS: N/A                                         * 00089000
.*                                                                    * 00090000
.*  PATCH LABEL: NONE                                                 * 00091000
.*                                                                    * 00092000
.*MODULE TYPE: MACRO                                                  * 00093000
.*                                                                    * 00094000
.*  PROCESSOR: ASSEMBLER                                              * 00095000
.*                                                                    * 00096000
.*  MODULE SIZE: 940 bytes                                         @v6c 00097000
.*                                                                    * 00098000
.*  ATTRIBUTES: RENT, REUS (note module produced is not executable)   * 00099000
.*                                                                    * 00100000
.*ENTRY POINT: N/A                                                    * 00101000
.*                                                                    * 00102000
.*  PURPOSE: SEE FUNCTION                                             * 00103000
.*                                                                    * 00104000
.*  LINKAGE: N/A                                                      * 00105000
.*                                                                    * 00106000
.*  INPUT:                                                            * 00107000
.*                                                                    * 00108000
.*    REGISTERS: N/A                                                  * 00109000
.*                                                                    * 00110000
.*    OTHER:                                                          * 00111000
.*       PARAMETER RECEIVED = ADATA                                   * 00112000
.*       HOW PASSED: OPTIONAL KEYWORD                                 * 00113000
.*       VALUE = YES         Produce debug information on SYSADATA    * 00114000
.*               NO          No output on SYSADATA                    * 00115000
.*                                                                    * 00116000
.*       PARAMETER RECEIVED = ALIGN                                   * 00117000
.*       HOW PASSED: OPTIONAL KEYWORD                                 * 00118000
.*       VALUE = YES         Check operand alignment                  * 00119000
.*               NO          Do not check operand alignment           * 00120000
.*                                                                    * 00121000
.*       PARAMETER RECEIVED = ALIGNWARN (ALIGN sub-option of FLAG)    * 00122000
.*       HOW PASSED: OPTIONAL KEYWORD                                 * 00123000
.*       VALUE = YES         Equivalent to FLAG(ALIGN). Issue message * 00124000
.*                           ASMA033W when there is an alignment error* 00125000
.*               NO          Equivalent to FLAG(NOALIGN)              * 00126000
.*                                                                    * 00127000
.*       PARAMETER RECEIVED = BATCH                                   * 00128000
.*       HOW PASSED: OPTIONAL KEYWORD                                 * 00129000
.*       VALUE = YES         Multiple assemblies on SYSIN             * 00130000
.*               NO          Single source deck on SYSIN              * 00131000
.*                                                                    * 00132000
.*       PARAMETER RECEIVED = CODEPAGE                             @v2a 00133000
.*       HOW PASSED: OPTIONAL KEYWORD                              @v2a 00134000
.*       VALUE = 047C        Unicode codepage ASMA047C to be used  @v2a 00135000
.*               XXXX        The hexadecimal number of the Unicode @v2a 00136000
.*                           code page to be used for conversion of@v2a 00137000
.*                           Unicode constants.                    @v2a 00138000
.*                                                                    * 00139000
.*       PARAMETER RECEIVED = COMPAT                                  * 00140000
.*       HOW PASSED: OPTIONAL KEYWORD                                 * 00141000
.*       VALUE = (CASE,      The assembler will be case sensitive     * 00142000
.*                MACROCASE, Uppercase all unquoted macro operands    * 00143000
.*                SYSLIST,   Substituted parenthesized argument       * 00144000
.*                           strings not recognised as sublists       * 00145000
.*                LITTYPE,   Return 'U' as the type attribute for     * 00146000
.*                           all literals                             * 00147000
.*                NOCASE,    The assembler will not be case           * 00148000
.*                           sensitive                                * 00149000
.*                NOMACROCASE, do not uppercase unquoted              * 00150000
.*                           macro operands                           * 00151000
.*                NOSYSLIST  treat parenthesized sublists in          * 00152000
.*                           SETC symbols as sublists                 * 00153000
.*                NOLITTYPE) Return current attribute of literal which* 00154000
.*                           will change once the literal has been    * 00155000
.*                           used                                     * 00156000
.*               NO          No COMPAT sub-options                    * 00157000
.*                                                                    * 00158000
.*       PARAMETER RECEIVED = CONTWARN  (CONT sub-option of FLAG)     * 00159000
.*       HOW PASSED: OPTIONAL KEYWORD                                 * 00160000
.*       VALUE = YES         Equivalent to FLAG(CONT). Issue messages * 00161000
.*                           ASMA430W to ASMA433W when a possible     * 00162000
.*                           continuation error is detected.          * 00163000
.*               NO          Equivalent to FLAG(NOCONT)               * 00164000
.*                                                                    * 00165000
.*       PARAMETER RECEIVED = DBCS                                    * 00166000
.*       HOW PASSED: OPTIONAL KEYWORD                                 * 00167000
.*       VALUE = YES         Double-byte character set acceptable     * 00168000
.*               NO          DBCS not acceptable in assembly          * 00169000
.*                                                                    * 00170000
.*       PARAMETER RECEIVED = DECK                                    * 00171000
.*       HOW PASSED: OPTIONAL KEYWORD                                 * 00172000
.*       VALUE = YES         Produce object module on SYSPUNCH        * 00173000
.*               NO          No object module on SYSPUNCH             * 00174000
.*                                                                    * 00175000
.*       PARAMETER RECEIVED = DELETE                                  * 00176000
.*       HOW PASSED: OPTIONAL KEYWORD ARRAY                           * 00177000
.*       VALUE = (opt1,opt2, Specifies parameters that will not be    * 00178000
.*               ...,optn)   allowed on EXEC statement invoking the   * 00179000
.*                           assembler (ie can not be overridden)     * 00180000
.*                                                                    * 00181000
.*       PARAMETER RECEIVED = DSECT                                   * 00182000
.*       HOW PASSED: OPTIONAL KEYWORD                                 * 00183000
.*       VALUE = YES         Produce a DSECT called ASMAOPT           * 00184000
.*               NO          Produce a CSECT called ASMADOPT (default)* 00185000
.*                                                                    * 00186000
.*       PARAMETER RECEIVED = DXREF                                   * 00187000
.*       HOW PASSED: OPTIONAL KEYWORD                                 * 00188000
.*       VALUE = YES         Produce DSECT cross reference listing    * 00189000
.*               NO          No DSECT cross reference listing         * 00190000
.*                                                                    * 00191000
.*       PARAMETER RECEIVED = ESD                                     * 00192000
.*       HOW PASSED: OPTIONAL KEYWORD                                 * 00193000
.*       VALUE = YES         Produce ESD listing                      * 00194000
.*               NO          No ESD listing                           * 00195000
.*                                                             @PQ67377 00196000
.*       PARAMETER RECEIVED = EXLITW                           @PQ67377 00197000
.*       HOW PASSED: OPTIONAL KEYWORD                          @PQ67377 00198000
.*       VALUE = YES         Issue msg ASMA016W when a literal @PQ67377 00199000
.*                           is used as the object of an EX    @PQ67377 00200000
.*                           instruction.                      @PQ67377 00201000
.*               NO          No msg is issued                  @PQ67377 00202000
.*                                                                    * 00203000
.*       PARAMETER RECEIVED = ADEXIT   (sub-option of EXIT)           * 00204000
.*       HOW PASSED: OPTIONAL KEYWORD                                 * 00205000
.*       VALUE = (mod,str)   where mod= name of user SYSADATA exit    * 00206000
.*                                 str= optional string to pass to it * 00207000
.*       NOTE: Outer quotes will be removed                           * 00208000
.*                                                                    * 00209000
.*       PARAMETER RECEIVED = INEXIT   (sub-option of EXIT)           * 00210000
.*       HOW PASSED: OPTIONAL KEYWORD                                 * 00211000
.*       VALUE = (mod,str)   where mod= name of user SYSIN exit       * 00212000
.*                                 str= optional string to pass to it * 00213000
.*       NOTE: Outer quotes will be removed                           * 00214000
.*                                                                    * 00215000
.*       PARAMETER RECEIVED = LIBEXIT  (sub-option of EXIT)           * 00216000
.*       HOW PASSED: OPTIONAL KEYWORD                                 * 00217000
.*       VALUE = (mod,str)   where mod= name of user SYSLIB exit      * 00218000
.*                                 str= optional string to pass to it * 00219000
.*       NOTE: Outer quotes will be removed                           * 00220000
.*                                                                    * 00221000
.*       PARAMETER RECEIVED = PRTEXIT  (sub-option of EXIT)           * 00222000
.*       HOW PASSED: OPTIONAL KEYWORD                                 * 00223000
.*       VALUE = (mod,str)   where mod= name of user SYSPRINT exit    * 00224000
.*                                 str= optional string to pass to it * 00225000
.*       NOTE: Outer quotes will be removed                           * 00226000
.*                                                                    * 00227000
.*       PARAMETER RECEIVED = OBJEXIT  (sub-option of EXIT)           * 00228000
.*       HOW PASSED: OPTIONAL KEYWORD                                 * 00229000
.*       VALUE = (mod,str)   where mod= name of user SYSLIN/SYSPUNCH  * 00230000
.*                                      exit                          * 00231000
.*                                 str= optional string to pass to it * 00232000
.*       NOTE: Outer quotes will be removed                           * 00233000
.*                                                                    * 00234000
.*       PARAMETER RECEIVED = TRMEXIT  (sub-option of EXIT)           * 00235000
.*       HOW PASSED: OPTIONAL KEYWORD                                 * 00236000
.*       VALUE = (mod,str)   where mod= name of user SYSTERM exit     * 00237000
.*                                 str= optional string to pass to it * 00238000
.*       NOTE: Outer quotes will be removed                           * 00239000
.*                                                                    * 00240000
.*       PARAMETER RECEIVED = FLAG                                    * 00241000
.*       HOW PASSED: OPTIONAL KEYWORD                                 * 00242000
.*       VALUE = numeric     lowest severity code for which messages  * 00243000
.*                           are to be printed during assembly        * 00244000
.*                                                                    * 00245000
.*       PARAMETER RECEIVED = FOLD                                    * 00246000
.*       HOW PASSED: OPTIONAL KEYWORD                                 * 00247000
.*       VALUE = YES         Translate lower case to upper on input   * 00248000
.*               NO          Do not translate                         * 00249000
.*                                                                    * 00250000
.*       PARAMETER RECEIVED = INFO                                    * 00251000
.*       HOW PASSED: OPTIONAL KEYWORD                                 * 00252000
.*       VALUE = YES         Copy all product information to the list * 00253000
.*                           dataset.                                 * 00254000
.*               YYYYMMDD    Copy product information dated on or     * 00255000
.*                           after this date to the list dataset.     * 00256000
.*               NO          Do not copy product information to the   * 00257000
.*                           list dataset.                            * 00258000
.*                                                                    * 00259000
.*       PARAMETER RECEIVED = IMPLENWARN                              * 00260000
.*       HOW PASSED: OPTIONAL KEYWORD                                 * 00261000
.*       VALUE = YES         Issue message ASMA169I when an explicit  * 00262000
.*                           length subfield is omitted from an       * 00263000
.*                           SS-format machine instruction.           * 00264000
.*               NO          Do not issue message                     * 00265000
.*                                                                    * 00266000
.*       PARAMETER RECEIVED = LANGUAGE                                * 00267000
.*       HOW PASSED: OPTIONAL KEYWORD                                 * 00268000
.*       VALUE = EN          Messages and Headings in                 * 00269000
.*                           mixed case English                       * 00270000
.*               DE          Messages in German, Headings in          * 00271000
.*                           mixed case English                       * 00272000
.*               ES          Messages in Spanish, Headings in         * 00273000
.*                           mixed case English                       * 00274000
.*               JP          Messages in Japanses, Headings in        * 00275000
.*                           upper case English                       * 00276000
.*               UE          Messages and Headings in                 * 00277000
.*                           uppercase English                        * 00278000
.*                                                                    * 00279000
.*       PARAMETER RECEIVED = LIBMAC                                  * 00280000
.*       HOW PASSED: OPTIONAL KEYWORD                                 * 00281000
.*       VALUE = YES         Insert library macros in input stream    * 00282000
.*               NO          Do not copy them to input stream         * 00283000
.*                                                                    * 00284000
.*       PARAMETER RECEIVED = LINECOUNT                               * 00285000
.*       HOW PASSED: OPTIONAL KEYWORD                                 * 00286000
.*       VALUE = numeric     lines per page (0, 10-32767)             * 00287000
.*                                                                    * 00288000
.*       PARAMETER RECEIVED = LIST                                    * 00289000
.*       HOW PASSED: OPTIONAL KEYWORD                                 * 00290000
.*       VALUE = YES         Produce listing on SYSPRINT              * 00291000
.*               NO          No output on SYSPRINT                    * 00292000
.*                                                                 @v6a 00293000
.*       PARAMETER RECEIVED = MACHINE (Synonym for OPTABLE)        @v6a 00294000
.*       HOW PASSED: OPTIONAL KEYWORD                              @v6a 00295000
.*       VALUE = S370        370 Instruction Set      (Vector) @PQ89655 00296000
.*               S370XA      XA  Instruction Set      (Vector) @PQ89655 00296500
.*               S370ESA     ESA Instruction Set      (Vector) @PQ89655 00297000
.*               S390        ESA Instruction Set      (Vector) @PQ89655 00297500
.*               S390E       ESA Instruction Set      (Vector) @PQ89655 00298000
.*               ZSERIES     zSeries Instructions  (NO Vector) @PQ89655 00298500
.*               ZS          zSeries Instructions  (NO Vector) @PQ89655 00299000
.*               ZSERIES-2   zSeries Long Displac. (NO Vector) @PQ89655 00299500
.*               ZS-2        zSeries Long Displac. (NO Vector) @PQ89655 00300000
.*               ZSERIES-3   zSeries GA3           (NO Vector) @PK02660 00300300
.*               ZS-3        zSeries GA3           (NO Vector) @PK02660 00300600
.*                                                                 @v6a 00301000
.*       PARAMETER RECEIVED = MACHINELIST (Synonym for OPTABLELIST)@v6a 00302000
.*       HOW PASSED: OPTIONAL KEYWORD                              @v6a 00303000
.*       VALUE = YES         Produce Operation Code Table          @v6a 00304000
.*                           Contents section in assembler         @v6a 00305000
.*                           listing.                              @v6a 00306000
.*               NO          Do not produce Operation Code         @v6a 00307000
.*                           Table Contents report.                @v6a 00308000
.*                                                                    * 00309000
.*       PARAMETER RECEIVED = MXREF                                   * 00310000
.*       HOW PASSED: OPTIONAL KEYWORD                                 * 00311000
.*       VALUE = YES         - same as SOURCE -                       * 00312000
.*               FULL        Produce macro source summary and cross   * 00313000
.*                           reference information (same as YES)      * 00314000
.*               SOURCE      Produce macro source summary only        * 00315000
.*               XREF        Produce macro cross reference only       * 00316000
.*               NO          No macro source summary or cross         * 00317000
.*                           reference information                    * 00318000
.*                                                                    * 00319000
.*       PARAMETER RECEIVED = OBJECT                                  * 00320000
.*       HOW PASSED: OPTIONAL KEYWORD                                 * 00321000
.*       VALUE = YES         Produce object module on SYSLIN          * 00322000
.*               NO          No object module on SYSLIN               * 00323000
.*                                                                    * 00324000
.*       PARAMETER RECEIVED = OPTABLE                          @PQ89655 00325000
.*       HOW PASSED: OPTIONAL KEYWORD                          @PQ89655 00325900
.*       VALUE = UNI         Universal Opcode Table   (Vector) @PQ89655 00326800
.*               DOS         DOS Instruction Set   (NO Vector) @PQ89655 00327700
.*               370         370 Instruction Set      (Vector) @PQ89655 00328600
.*               XA          XA  Instruction Set      (Vector) @PQ89655 00329500
.*               ESA         ESA Instruction Set      (Vector) @PQ89655 00330400
.*               ZOP         zSeries Instructions  (NO Vector) @PQ89655 00331300
.*               YOP         zSeries Long Displac. (NO Vector) @PQ89655 00332200
.*               ZS3         zSeries GA3                       @PK02660 00332600
.*                                                             @PQ89655 00333100
.*       PARAMETER RECEIVED = OPTABLELIST                      @PQ89655 00334000
.*       HOW PASSED: OPTIONAL KEYWORD                          @PQ44437 00336000
.*       VALUE = YES         Produce Operation Code Table      @PQ44437 00337000
.*                           Contents section in assembler     @PQ44437 00338000
.*                           listing.                          @PQ44437 00339000
.*               NO          Do not produce Operation Code     @PQ44437 00340000
.*                           Table Contents report.            @PQ44437 00341000
.*                                                                    * 00342000
.*       PARAMETER RECEIVED = PAGE0WARN                               * 00343000
.*       HOW PASSED: OPTIONAL KEYWORD                                 * 00344000
.*       VALUE = YES         Issue message ASMA309W when an operand   * 00345000
.*                           is resolved to a baseless address and    * 00346000
.*                           the base and displacement is expected.   * 00347000
.*               NO          Do not issue message                     * 00348000
.*                                                                    * 00349000
.*       PARAMETER RECEIVED = PCONTROL                                * 00350000
.*       HOW PASSED: OPTIONAL KEYWORD ARRAY                           * 00351000
.*       VALUE = (ON,        Ignore PRINT OFF and NOPRINT             * 00352000
.*                GEN,       Ignore PRINT NOGEN                       * 00353000
.*                DATA,      Ignore PRINT NODATA                      * 00354000
.*                UHEAD,     Ignore PRINT NOUHEAD                     * 00355000
.*                MCALL,     Ignore PRINT NOMCALL                     * 00356000
.*                MSOURCE,   Ignore PRINT NOMSOURCE                   * 00357000
.*                OFF,       Ignore PRINT ON and NOPRINT              * 00358000
.*                NOGEN,     Ignore PRINT GEN                         * 00359000
.*                NODATA,    Ignore PRINT DATA                        * 00360000
.*                NOUHEAD,   Ignore PRINT UHEAD                       * 00361000
.*                NOMCALL,   Ignore PRINT MCALL                       * 00362000
.*                NOMSOURCE) Ignore PRINT MSOURCE                     * 00363000
.*               NO          NOPCONTROL                               * 00364000
.*                                                                    * 00365000
.*       PARAMETER RECEIVED = PESTOP                                  * 00366000
.*       HOW PASSED: OPTIONAL KEYWORD                                 * 00367000
.*       VALUE = YES         Terminate if invocation parameter errors * 00368000
.*               NO          Do not terminate!                        * 00369000
.*                                                                    * 00370000
.*       PARAMETER RECEIVED = PROFILE                                 * 00371000
.*       HOW PASSED: OPTIONAL KEYWORD                                 * 00372000
.*       VALUE = YES         Supply profile member. See PROFMEM for   * 00373000
.*                           member name.                             * 00374000
.*               NO          Do not supply a profile member.          * 00375000
.*                                                                    * 00376000
.*       PARAMETER RECEIVED = PROFMEM                                 * 00377000
.*       HOW PASSED: OPTIONAL KEYWORD                                 * 00378000
.*       VALUE = member name The name of the default member name      * 00379000
.*                           when PROFILE invocation option is        * 00380000
.*                           specified without a member name.         * 00381000
.*                           If not specified it is set to ASMAPROF.  * 00382000
.*                                                                    * 00383000
.*       PARAMETER RECEIVED = PUSHWARN                         @PQ22004 00384000
.*       HOW PASSED: OPTIONAL KEYWORD                          @PQ22004 00385000
.*       VALUE = YES         Issue message ASMA138W when a     @PQ22004 00386000
.*                           PUSH/POP queue is not empty at the@PQ22004 00387000
.*                           end of a compile.                 @PQ22004 00388000
.*               NO          Do not issue message              @PQ22004 00389000
.*                                                             @PQ22004 00390000
.*       PARAMETER RECEIVED = RA2                                     * 00391000
.*       HOW PASSED: OPTIONAL KEYWORD                                 * 00392000
.*       VALUE = YES         Allow 2-byte relocatable address         * 00393000
.*                           constants                                * 00394000
.*               NO          Issue ASMA066 for 2-byte relocatable     * 00395000
.*                           address constants                        * 00396000
.*                                                                    * 00397000
.*       PARAMETER RECEIVED = RECORDINFO(RECORD sub-option of FLAG)   * 00398000
.*       HOW PASSED: OPTIONAL KEYWORD                                 * 00399000
.*       VALUE = YES         Equivalent to FLAG(RECORD). Issue        * 00400000
.*                           message ASMA435I when after one or more  * 00401000
.*                           assembler diagnostic messages. Also      * 00402000
.*                           include dataset information in the       * 00403000
.*                           flagged statements of the Diagnostic     * 00404000
.*                           Cross Reference and Assembler Summary.   * 00405000
.*               NO          Equivalent to FLAG(NORECORD)             * 00406000
.*                                                                    * 00407000
.*       PARAMETER RECEIVED = RENT                                    * 00408000
.*       HOW PASSED: OPTIONAL KEYWORD                                 * 00409000
.*       VALUE = YES         Check for program reenterability         * 00410000
.*               NO          Do not check                             * 00411000
.*                                                                    * 00412000
.*       PARAMETER RECEIVED = RLD                                     * 00413000
.*       HOW PASSED: OPTIONAL KEYWORD                                 * 00414000
.*       VALUE = YES         Produce RLD listing                      * 00415000
.*               NO          No RLD listing                           * 00416000
.*                                                                    * 00417000
.*       PARAMETER RECEIVED = RXREF                                   * 00418000
.*       HOW PASSED: OPTIONAL KEYWORD                                 * 00419000
.*       VALUE = YES         Produce register XREF                    * 00420000
.*               NO          No register XREF                         * 00421000
.*                                                                 @v6a 00422000
.*       PARAMETER RECEIVED = SECTALGN                             @v6a 00423000
.*       HOW PASSED: OPTIONAL KEYWORD                              @v6a 00424000
.*       VALUE = numeric     Desired alignment for all sections,   @v6a 00425000
.*                           expressed as a power of 2 with a      @v6a 00426000
.*                           range of 8 (doubleword) to 4096 (page)@v6a 00427000
.*                                                                    * 00428000
.*       PARAMETER RECEIVED = SIZE                                    * 00429000
.*       HOW PASSED: OPTIONAL KEYWORD                                 * 00430000
.*       VALUE = nnnK        Use nnnK for variable storage buffers etc* 00431000
.*               nnM         Use nnM for variable storage buffers etc.* 00432000
.*               MAX         Use all available storage.....           * 00433000
.*               MAX-nnnk    Use all available storage less nnnK..... * 00434000
.*               MAX-nnM     Use all available storage less nnM.....  * 00435000
.*       NOTE: The minimum value specifiable is 200K                  * 00436000
.*             The maximum value specifiable is 15M (15*2**20)        * 00437000
.*                                                                    * 00438000
.*       PARAMETER RECEIVED = STORAGE                                 * 00439000
.*       HOW PASSED: OPTIONAL KEYWORD                                 * 00440000
.*       VALUE = BELOW       Storage specified in SIZE will be        * 00441000
.*                           obtained below the 16Mb line.            * 00442000
.*               ABOVE       Storage specified in SIZE will be        * 00443000
.*                           obtained above the 16Mb line. If not     * 00444000
.*                           available it will be obtained below the  * 00445000
.*                           16Mb line.                               * 00446000
.*       NOTE: Only valid when the MAX value is included in the       * 00447000
.*             SIZE value.                                            * 00448000
.*                                                                    * 00449000
.*       PARAMETER RECEIVED = SUBSTRWARN                              * 00450000
.*       HOW PASSED: OPTIONAL KEYWORD                                 * 00451000
.*       VALUE = YES         Issue message ASMA094 if 2nd subscript   * 00452000
.*                           of substring notation indexes past the   * 00453000
.*                           end of the character expression          * 00454000
.*               NO          Do not issue message ASMA094.            * 00455000
.*                                                                 @v6a 00456000
.*       PARAMETER RECEIVED = SUPRWARN                             @v6a 00457000
.*       HOW PASSED: OPTIONAL KEYWORD                              @v6a 00458000
.*       VALUE = (msgno1,    Suppress specified message numbers    @v6a 00459000
.*               msgno2,...) of warning (4) or less severity.      @v6a 00460000
.*                           Specify the 1-4 digit message number. @v6a 00461000
.*               NO          No messages to be suppressed          @v6a 00462000
.*                                                                    * 00463000
.*       PARAMETER RECEIVED = SYSPARMV                                * 00464000
.*       HOW PASSED: OPTIONAL KEYWORD                                 * 00465000
.*       VALUE = string      Default value for &SYSPARM               * 00466000
.*       NOTE: Outer quotes will be removed                           * 00467000
.*                                                                    * 00468000
.*       PARAMETER RECEIVED = TERM                                    * 00469000
.*       HOW PASSED: OPTIONAL KEYWORD                                 * 00470000
.*       VALUE = YES         Produce error messages on SYSTERM        * 00471000
.*               WIDE        Same as YES                              * 00472000
.*               NARROW      Produce error messages on SYSTERM with   * 00473000
.*                           surplus blanks removed                   * 00474000
.*               NO          No output to SYSTERM                     * 00475000
.*                                                                    * 00476000
.*       PARAMETER RECEIVED = TEST                                    * 00477000
.*       HOW PASSED: OPTIONAL KEYWORD                                 * 00478000
.*       VALUE = YES         Produce SYM records in object module     * 00479000
.*               NO          No SYM records in object module          * 00480000
.*                                                                    * 00481000
.*       PARAMETER RECEIVED = THREAD                               @v2a 00482000
.*       HOW PASSED: OPTIONAL KEYWORD                              @v2a 00483000
.*       VALUE = YES         Don't reset location counter          @v2a 00484000
.*               NO          Location counter reset on change of   @v2a 00485000
.*                           CSECT                                 @v2a 00486000
.*                                                                    * 00487000
.*       PARAMETER RECEIVED = TRANSLATE                               * 00488000
.*       HOW PASSED: OPTIONAL KEYWORD                                 * 00489000
.*       VALUE = NO          Use internal EBCDIC translation table    * 00490000
.*               AS          Use ASCII translation table ASMALTAS     * 00491000
.*               xx          Use user translation table ASMALTxx      * 00492000
.*                                                                 @v6c 00493000
.*       PARAMETER RECEIVED = TYPECHECK                            @v6c 00494000
.*       HOW PASSED: OPTIONAL KEYWORD                              @v6c 00495000
.*       VALUE = (MAGNITUDE,    Perform magnitude validation of    @v6c 00496000
.*                              signed immediate-data fields of    @v6a 00497000
.*                              machine instruction operands.      @v6a 00498000
.*                REGISTER,     Perform type checking of register  @v6a 00499000
.*                              fields of machine instruction      @v6a 00500000
.*                              operands.                          @v6a 00501000
.*                NOMAGNITUDE,  No magnitude checking              @v6a 00502000
.*                NOREGISTER)   No register checking               @v6a 00503000
.*               YES            Enable all typechecking            @v6c 00504000
.*               NO             Disable all typechecking           @v6c 00505000
.*                                                                    * 00506000
.*       PARAMETER RECEIVED = USING0WARN                       @PQ35537 00507000
.*       HOW PASSED: OPTIONAL KEYWORD                          @PQ35537 00508000
.*       VALUE = YES         Issue message ASMA306W when a     @PQ35537 00509000
.*                           USING range coincides with        @PQ35537 00510000
.*                           implicit USING 0,0                @PQ35537 00511000
.*               NO          Do not issue message              @PQ35537 00512000
.*                                                                    * 00513000
.*       PARAMETER RECEIVED = LIMIT    (sub-option of USING)          * 00514000
.*       HOW PASSED: OPTIONAL KEYWORD                                 * 00515000
.*       VALUE = NO          Equivalent to a value of 4095            * 00516000
.*               numeric     Maximum displacement to be checked       * 00517000
.*                                                                    * 00518000
.*       PARAMETER RECEIVED = MAP      (sub-option of USING)          * 00519000
.*       HOW PASSED: OPTIONAL KEYWORD                                 * 00520000
.*       VALUE = YES         Produce USING map at end of assembly     * 00521000
.*               NO          No USING map                             * 00522000
.*                                                                    * 00523000
.*       PARAMETER RECEIVED = WARN     (sub-option of USING)          * 00524000
.*       HOW PASSED: OPTIONAL KEYWORD                                 * 00525000
.*       VALUE = NO          Equivalent to a value of 0               * 00526000
.*               numeric     Conditions required to produce warning   * 00527000
.*                           messages (0-15)                          * 00528000
.*                                                                    * 00529000
.*       PARAMETER RECEIVED = XREF                                    * 00530000
.*       HOW PASSED: OPTIONAL KEYWORD                                 * 00531000
.*       VALUE = FULL        Produce full cross reference listing     * 00532000
.*               SHORT       Produce XREF for referenced symbols only * 00533000
.*               UNREFS      Produce XREF for unreferenced symbols in * 00534000
.*                           symbol name order                        * 00535000
.*               NO          No cross reference listing of symbols    * 00536000
.*                                                                    * 00537000
.*                                                                    * 00538000
.*  OUTPUT:                                                           * 00539000
.*                                                                    * 00540000
.*    REGISTERS: N/A                                                  * 00541000
.*                                                                    * 00542000
.*    OTHER:                                                          * 00543000
.*                                                                    * 00544000
.*      GENERATED CODE: default options table (ASMADOPT)              * 00545000
.*                                                                    * 00546000
.*  MESSAGES ISSUED:                                                  * 00547000
.*   MNOTE 4,'Positional parameter(s) specified; ignored'             * 00548000
.*   MNOTE 4,'ASMAOPT macro has already been used; this macro ignored'* 00549000
.*   MNOTE 4,'Invalid ALIGN value &ALIGN; YES assumed'                * 00550000
.*   MNOTE 4,'Invalid ALIGNWARN value &ALIGNWARN; YES assumed'        * 00551000
.*   MNOTE 4,'Invalid BATCH value &BATCH; NO assumed'                 * 00552000
.*   MNOTE 4,'Invalid CODEPAGE value &CODEPAGE; 047C assumed'      @v2a 00553000
.*   MNOTE 4,'COMPAT option &COMPAT(&A) invalid; ignored'             * 00554000
.*   MNOTE 4,'Invalid CONTWARN value &CONTWARN; NO assumed'           * 00555000
.*   MNOTE 4,'Invalid DBCS value &DBCS; NO assumed'                   * 00556000
.*   MNOTE 4,'Invalid DECK value &DECK; YES assumed'                  * 00557000
.*   MNOTE 4,'DELETE COMPAT option &DELST invalid; ignored'           * 00558000
.*   MNOTE 4,'DELETE PCONTROL option &DELST invalid; ignored'         * 00559000
.*   MNOTE 4,'DELETE LIST option &DELST invalid; ignored'             * 00560000
.*   MNOTE 4,'DELETE MXREF option &DELST invalid; ignored'            * 00561000
.*   MNOTE 4,'DELETE TYPECHECK option &DELST invalid; ignored'     @v6a 00562000
.*   MNOTE 4,'DELETE XREF option &DELST invalid; ignored'             * 00563000
.*   MNOTE 4,'DELETE option &DELETE(&A) invalid; ignored'             * 00564000
.*   MNOTE 4,'Invalid DXREF value &DXREF; YES assumed'                * 00565000
.*   MNOTE 4,'Invalid ESD value &ESD; YES assumed'                    * 00566000
.*   MNOTE 4,'Invalid EXLITW value &EXLITW; YES assumed'       @PQ67377 00567000
.*   MNOTE 4,'ADEXIT string > 64 characters; truncated'               * 00568000
.*   MNOTE 4,'INEXIT string > 64 characters; truncated'               * 00569000
.*   MNOTE 4,'LIBEXIT string > 64 characters; truncated'              * 00570000
.*   MNOTE 4,'PRTEXIT string > 64 characters; truncated'              * 00571000
.*   MNOTE 4,'OBJEXIT string > 64 characters; truncated'              * 00572000
.*   MNOTE 4,'TRMEXIT string > 64 characters; truncated'              * 00573000
.*   MNOTE 4,'Invalid FLAG value &FLAG; 0 assumed'                    * 00574000
.*   MNOTE 4,'Invalid FOLD value &FOLD; NO assumed'                   * 00575000
.*   MNOTE 4,'Invalid IMPLENWARN value &IMPLENWARN; NO assumed'       * 00576000
.*   MNOTE 4,'Invalid INFO value &INFO; YES assumed'                  * 00577000
.*   MNOTE 4,'Invalid LANGUAGE value &LANGUAGE; UE assumed'           * 00578000
.*   MNOTE 4,'Invalid LIBMAC value &LIBMAC; NO assumed'               * 00579000
.*   MNOTE 4,'Invalid LINECOUNT value &LINECOUNT; 60 assumed'         * 00580000
.*   MNOTE 4,'Invalid LIST value &LIST; YES assumed'                  * 00581000
.*   MNOTE 4,'Invalid MACHINE value &MACHINE; ignored'             @v6a 00582000
.*   MNOTE 4,'Invalid MACHINELIST value &MACHINELIST; NO assumed'  @v6a 00583000
.*   MNOTE 4,'Invalid MXREF value &MXREF; YES assumed'                * 00584000
.*   MNOTE 4,'Invalid OBJECT value &OBJECT; NO assumed'               * 00585000
.*   MNOTE 4,'Invalid OPTABLE value &OPTABLE; UNI assumed'            * 00586000
.*   MNOTE 4,'Invalid OPTABLELIST value &OPTABLELIST; NO assumed'      +00587000
                                                               @PQ44437 00588000
.*   MNOTE 4,'Invalid PAGE0WARN value &PAGE0WARN; YES assumed'        * 00589000
.*   MNOTE 4,'Invalid PCONTROL option &PCONTROL(&A); ignored'         * 00590000
.*   MNOTE 8,'Only xxx or NOxxx allowed for PCONTROL'                 * 00591000
.*   MNOTE 4,'Invalid PESTOP value &PESTOP; NO assumed'               * 00592000
.*   MNOTE 4,'Invalid PUSHWARN value &PUSHWARN; YES assumed'   @PQ22004 00593000
.*   MNOTE 4,'Invalid RA2 value &RA2; NO assumed'                     * 00594000
.*   MNOTE 4,'Invalid RECORDINFO value &RECORDINFO; NO assumed'       * 00595000
.*   MNOTE 4,'Invalid RENT value &RENT; NO assumed'                   * 00596000
.*   MNOTE 4,'Invalid RLD value &RLD; YES assumed'                    * 00597000
.*   MNOTE 4,'Invalid RXREF value &RXREF; YES assumed'                * 00598000
.*   MNOTE 4,'Invalid SIZE value &SIZE; 200K assumed'                 * 00599000
.*   MNOTE 4,'Invalid SIZE value &SIZE; MAX assumed'                  * 00600000
.*   MNOTE 4,'Invalid SUBSTRWARN value &SUBSTRWARN; NO assumed'    @v6a 00601000
.*   MNOTE 4,'Invalid SUPRWARN value &SUPRWARN; ignored'           @v6a 00602000
.*   MNOTE 4,'Duplicate SUPRWARN value &SUPRWARN; ignored'         @v6a 00603000
.*   MNOTE 4,'Invalid TERM value &TERM; NO assumed'                   * 00604000
.*   MNOTE 4,'Invalid TEST value &TEST; NO assumed'                   * 00605000
.*   MNOTE 4,'Invalid THREAD value &THREAD; YES assumed'           @v2a 00606000
.*   MNOTE 4,'Invalid TRANSLATE value &TRANSLATE; ignored'            * 00607000
.*   MNOTE 4,'Invalid TYPECHECK option &TYPECHECK; ignored'        @v6c 00608000
.*   MNOTE 4,'Invalid USING0WARN value &USING0WARN; YES assumed@PQ35537 00609000
.*   MNOTE 4,'Invalid LIMIT value &LIMIT; NO (4095) assumed'          * 00610000
.*   MNOTE 4,'Invalid MAP value &MAP; NO assumed'                     * 00611000
.*   MNOTE 4,'Invalid WARN value &WARN; NO (0) assumed'               * 00612000
.*   MNOTE 4,'Invalid XREF value &XREF; FULL assumed'                 * 00613000
.*                                                                    * 00614000
.*EXTERNAL REFERENCES:                                                * 00615000
.*                                                                    * 00616000
.*  PROCEDURES INVOKED: NONE                                          * 00617000
.*                                                                    * 00618000
.*  CONTROL BLOCKS:                                                   * 00619000
.*                                                                    * 00620000
.*    SYSTEM CONTROL BLOCKS: NONE                                     * 00621000
.*                                                                    * 00622000
.*INTERNAL TABLES: NONE                                               * 00623000
.*                                                                    * 00624000
.*MACROS ISSUED:                                                      * 00625000
.*                                                                    * 00626000
.*  SYSTEM MACROS: NONE                                               * 00627000
.*                                                                    * 00628000
.*  PRODUCT MACROS:                                                   * 00629000
.*     ASMAMODV - To validate module names                            * 00630000
.*                                                                    * 00631000
.*CHANGE ACTIVITY:                                                    * 00632000
.*  $MAC(ASMAOPT) : Macro to Generate Default Invocation Options      * 00633000
.*                                                                    * 00634000
.*  Flag Reason  RLSE   Date     Origin    Comments                   * 00635000
.*  $L1= 3.4     1.3.0  07MAY98  ASTLSC  : Option changes             * 00636000
.*  $P1= KH39990 1.3.0  01Jul98  ASTLJRD : Copyy changes from ASMAOPt * 00637000
.*                                                             @PQ22004 00638000
.* Reason  Rlse    Date    Origin   Comments                   @PQ22004 00639000
.* ------- ------- ------- -------- ---------------------------@PQ22004 00640000
.* PQ22004 HMQ4130 21Dec98 ASTLSC   New option PUSHWARN.       @PQ22004 00641000
.* PQ35537 HMQ4130 11Feb00 ASTLGRF  New USING0WARN option.     @PQ35537 00642000
.*                                                             @PQ22004 00643000
.*  Flag Reason  RLSE   Date     Origin    Comments                   * 00644000
.*  $V2=         1.4.0  02Jun99  ASTLSC  : THREAD option              * 00645000
.*  $V2=         1.4.0  13Jul99  ASTLSC  : CODEPAGE option            * 00646000
.*  $V2=         1.4.0  22Oct99  ASTLSC  : ASMAOPT file               * 00647000
.*  $V2=         1.4.0  29Oct99  ASTLSC  : OPTABLE(LIST) option       * 00648000
.*  $V2=         1.4.0  12Jan00  ASTLSC  : Version number             * 00649000
.*  $V2=         1.4.0  15Mar00  ASTLSC  : Remove OPTLIST option      * 00650000
.*                                                             @PQ39402 00651000
.* Reason  Rlse    Date    Origin   Comments                   @PQ39402 00652000
.* ------- ------- ------- -------- ---------------------------@PQ39402 00653000
.* PQ39402 HMQ4140 21Aug00 ASTLSC   Change Pos to POS.         @PQ39402 00654000
.* PQ44437 HMQ4140 18Dec00 ASTLGRF .Add OPTABLE suboption ZOP. @PQ44437 00655000
.*                                 .Add OPTABLELIST keyword.   @PQ44437 00656000
.* PQ67377 HMQ4140 13Nov02 ASTLCW   New FLAG(EXLITW) option.   @PQ67377 00657000
.*                                                                    * 00658000
.*  $v3=         1.5.0  16Sep02  ASTLCB  : Add TYPECHECK option.      * 00659000
.*  $v4=         1.5.0  26Sep02  ASTLCB  : Move TYPECHECK for ACONTROL* 00660000
.*  $v5=3.1.1    1.5.0  02Jan04  ASTLCB  : Release 5                  * 00661000
.*  $v6=3.1.17   1.5.0  02Jan04  ASTLCB  : Add SUPRWARN, plus two     * 00662000
.*                                         more parm bytes.           * 00663000
.*  $v6=3.1.13   1.5.0  02Jan04  ASTLCB  : Add synonym MACHINE.       * 00664000
.*  $v6=3.1.8    1.5.0  02Jan04  ASTLCB  : Add SECTALGN.              * 00665000
.*  $v6=3.1.18   1.5.0  02Jan04  ASTLCB  : Enhance TYPECHECK.         * 00666000
.*  $v7=         1.5.0  18Mar04  ASTRMC  : Update copyright year      * 00667000
.*                                                             @PQ89655 00667100
.* Reason  Rlse    Date    Origin   Comments                   @PQ89655 00667200
.* ------- ------- ------- -------- ---------------------------@PQ89655 00667400
.* PQ89655 HMQ4150 14Jun04 ASTLCB   MACHINE & OPTABLE tweaks   @PQ89655 00667600
.* PK02660 HMQ4150 26May05 ASTLJRD  Add ZS3 OPTABLE            @PK02660 00667700
.*                                                             @PQ89655 00667800
.***END OF SPECIFICATIONS ********************************************* 00668000
         GBLB  &OPTYES,&INVDD,&INVMOD                                   00669000
.*                                                                      00670000
         GBLB  &PARM00,&PARM01,&PARM02,&PARM03                          00671000
         GBLB  &PARM04,&PARM05,&PARM06,&PARM07                          00672000
         GBLB  &PARM10,&PARM11,&PARM12,&PARM13                          00673000
         GBLB  &PARM14,&PARM15,&PARM16,&PARM17                          00674000
         GBLB  &PARM20,&PARM21,&PARM22,&PARM23                          00675000
         GBLB  &PARM24,&PARM25,&PARM26,&PARM27                          00676000
         GBLB  &PARM30,&PARM31,&PARM32,&PARM33                          00677000
         GBLB  &PARM34,&PARM35,&PARM36,&PARM37                          00678000
         GBLB  &PARM40,&PARM41,&PARM42,&PARM43                          00679000
         GBLB  &PARM44,&PARM45,&PARM46,&PARM47                          00680000
         GBLB  &PARM50,&PARM51,&PARM52,&PARM53                          00681000
         GBLB  &PARM54,&PARM55,&PARM56,&PARM57                          00682000
         GBLB  &PARM60,&PARM61,&PARM62,&PARM63                          00683000
         GBLB  &PARM64,&PARM65,&PARM66,&PARM67                          00684000
         GBLB  &PARM70,&PARM71,&PARM72,&PARM73                          00685000
         GBLB  &PARM74,&PARM75,&PARM76,&PARM77                          00686000
         GBLB  &PARM80,&PARM81,&PARM82,&PARM83                          00687000
         GBLB  &PARM84,&PARM85,&PARM86,&PARM87                          00688000
         GBLB  &PARM90,&PARM91,&PARM92,&PARM93                          00689000
         GBLB  &PARM94,&PARM95,&PARM96,&PARM97                          00690000
         GBLB  &PARMA0,&PARMA1,&PARMA2,&PARMA3                          00691000
         GBLB  &PARMA4,&PARMA5,&PARMA6,&PARMA7                          00692000
         GBLB  &PARMB0,&PARMB1,&PARMB2,&PARMB3                          00693000
         GBLB  &PARMB4,&PARMB5,&PARMB6,&PARMB7                          00694000
         GBLB  &PARMC0,&PARMC1,&PARMC2,&PARMC3                     @v6a 00695000
         GBLB  &PARMC4,&PARMC5,&PARMC6,&PARMC7                     @v6a 00696000
         GBLB  &PARMD0,&PARMD1,&PARMD2,&PARMD3                     @v6a 00697000
         GBLB  &PARMD4,&PARMD5,&PARMD6,&PARMD7                     @v6a 00698000
.*                                                                      00699000
         GBLB  &DELP00,&DELP01,&DELP02,&DELP03                          00700000
         GBLB  &DELP04,&DELP05,&DELP06,&DELP07                          00701000
         GBLB  &DELP10,&DELP11,&DELP12,&DELP13                          00702000
         GBLB  &DELP14,&DELP15,&DELP16,&DELP17                          00703000
         GBLB  &DELP20,&DELP21,&DELP22,&DELP23                          00704000
         GBLB  &DELP24,&DELP25,&DELP26,&DELP27                          00705000
         GBLB  &DELP30,&DELP31,&DELP32,&DELP33                          00706000
         GBLB  &DELP34,&DELP35,&DELP36,&DELP37                          00707000
         GBLB  &DELP40,&DELP41,&DELP42,&DELP43                          00708000
         GBLB  &DELP44,&DELP45,&DELP46,&DELP47                          00709000
         GBLB  &DELP50,&DELP51,&DELP52,&DELP53                          00710000
         GBLB  &DELP54,&DELP55,&DELP56,&DELP57                          00711000
         GBLB  &DELP60,&DELP61,&DELP62,&DELP63                          00712000
         GBLB  &DELP64,&DELP65,&DELP66,&DELP67                          00713000
         GBLB  &DELP70,&DELP71,&DELP72,&DELP73                          00714000
         GBLB  &DELP74,&DELP75,&DELP76,&DELP77                          00715000
         GBLB  &DELP80,&DELP81,&DELP82,&DELP83                          00716000
         GBLB  &DELP84,&DELP85,&DELP86,&DELP87                          00717000
         GBLB  &DELP90,&DELP91,&DELP92,&DELP93                          00718000
         GBLB  &DELP94,&DELP95,&DELP96,&DELP97                          00719000
         GBLB  &DELPA0,&DELPA1,&DELPA2,&DELPA3                          00720000
         GBLB  &DELPA4,&DELPA5,&DELPA6,&DELPA7                          00721000
         GBLB  &DELPB0,&DELPB1,&DELPB2,&DELPB3                          00722000
         GBLB  &DELPB4,&DELPB5,&DELPB6,&DELPB7                          00723000
         GBLB  &DELPC0,&DELPC1,&DELPC2,&DELPC3                     @v6a 00724000
         GBLB  &DELPC4,&DELPC5,&DELPC6,&DELPC7                     @v6a 00725000
         GBLB  &DELPD0,&DELPD1,&DELPD2,&DELPD3                     @v6a 00726000
         GBLB  &DELPD4,&DELPD5,&DELPD6,&DELPD7                     @v6a 00727000
.*                                                                      00728000
         GBLA  &UWARN,&LNCT,&SIZEA,&ULIM,&SYSPL,&MSGL                   00729000
         GBLA  &XINSL,&XLIBSL,&XPRTSL,&XOBJSL,&XADSL,&PEFLAG            00730000
         GBLA  &XTRMSL,&SUPRNUM,&SUPRMSG(1),&SALGN                 @v6c 00731000
.*                                                                      00732000
         GBLC  &SYSPC,&OPTAB,&LANG,&INFODATE,&CODEPG               @v2c 00733000
         GBLC  &XINN,&XLIBN,&XPRTN,&XOBJN,&XADN                         00734000
         GBLC  &XTRMN                                                   00735000
         GBLC  &XINS,&XLIBS,&XPRTS,&XOBJS,&XADS                         00736000
         GBLC  &XTRMS,&XLATE,&PROFMEMB                                  00737000
.*                                                                      00738000
         LCLB  &PARMA1N,&PARMA3N                                   @v6a 00739000
         LCLB  &PARMA4N,&PARMA5N,&PARMA6N,&PARMA7N                 @l1c 00740000
.*                                                                 @v6a 00741000
         LCLC  &OPT,&MACH                                          @v6a 00742000
.*                                                                      00743000
         AIF   (&OPTYES EQ 0).CHKPOS                                    00744000
         MNOTE 4,'ASMAOPT macro has already been used; this macro ignor+00745000
               ed'                                                      00746000
         MEXIT                                                          00747000
.*                                                                      00748000
.CHKPOS  ANOP                                                           00749000
         AIF   (N'&SYSLIST EQ 0).CHKALG                                 00750000
&XXXN    SETA   N'&SYSLIST                                              00751000
&XXXK    SETA   K'&SYSLIST(1)                                           00752000
&XXXL    SETA   K'&SYSLIST(2)                                           00753000
         AIF    ((&XXXN EQ 2) AND (&XXXK EQ 0) AND (&XXXL EQ 0)).CHKALG 00754000
         MNOTE 4,'Positional parameter(s) specified; ignored'           00755000
.CHKALG  ANOP                                                           00756000
&OPTYES  SETB  1                                                        00757000
         AIF   ('&ALIGN' EQ 'NO').CHKALGW                               00758000
&PARM07  SETB  1                  Set flag                              00759000
         AIF   ('&ALIGN' EQ 'YES').CHKALGW                              00760000
         MNOTE 4,'Invalid ALIGN value &ALIGN; YES assumed'              00761000
.*                                                                      00762000
.CHKALGW ANOP                                                           00763000
         AIF   ('&ALIGNWARN' EQ 'NO').CHKASA                            00764000
&PARMB3  SETB  1                  Set flag to YES                       00765000
         AIF   ('&ALIGNWARN' EQ 'YES').CHKASA                           00766000
         MNOTE 4,'Invalid ALIGNWARN value &ALIGNWARN; YES assumed'      00767000
.*                                                                      00768000
.CHKASA  ANOP                                                           00769000
&PARM40  SETB  1                  Set flag                              00770000
.*                                                                      00771000
.CHKBAT  ANOP                                                           00772000
         AIF   ('&BATCH' EQ 'NO').CHKCP                            @v2c 00773000
         AIF   ('&BATCH' NE 'YES').INVBAT                               00774000
&PARM06  SETB  1                  Set flag                              00775000
         AGO   .CHKCP                                              @v2c 00776000
.INVBAT  ANOP                                                           00777000
         MNOTE 4,'Invalid BATCH value &BATCH; NO assumed'               00778000
.*                                                                      00779000
.CHKCP   ANOP                                                      @v2a 00780000
         AIF   ('&CODEPAGE' GT '9999').INVCP                       @v2a 00781000
&CODEPG  SETC  '&CODEPAGE'                                         @v2a 00782000
&PARM95  SETB  1                  Set flag                         @v2a 00783000
         AGO   .CHKCMP                                             @v2a 00784000
.INVCP   ANOP                                                      @v2a 00785000
         MNOTE 4,'Invalid CODEPAGE value &CODEPAGE; 047C assumed'  @v2a 00786000
&CODEPG  SETC  '047C'                                              @v2a 00787000
.*                                                                      00788000
.CHKCMP  ANOP                                                           00789000
         AIF   ('&COMPAT' EQ 'NO').CHKCONT                              00790000
&A       SETA  0                  Set loop counter                      00791000
.COMPLOP ANOP                                                           00792000
&A       SETA  &A+1               Bump loop counter                     00793000
         AIF   (&A GT N'&COMPAT).CHKCONT Go process CONTWARN            00794000
&CMPSTR  SETC  '&COMPAT(&A)'      Save sub-option                       00795000
         AIF   ('&CMPSTR' NE 'CASE').CHKCMP2                            00796000
&PARMA4  SETB  1                  Set flag                              00797000
         AGO   .COMPLOP                                                 00798000
.CHKCMP2 ANOP                                                           00799000
         AIF   ('&CMPSTR' NE 'SYSLIST').CHKCMP3                         00800000
&PARMA5  SETB  1                  Set flag                              00801000
         AGO   .COMPLOP                                                 00802000
.CHKCMP3 ANOP                                                           00803000
         AIF   ('&CMPSTR' NE 'MACROCASE').CHKCMP4                       00804000
&PARMA7  SETB  1                  Set flag COMPAT(MACROCASE)            00805000
         AGO   .COMPLOP                                                 00806000
.CHKCMP4 ANOP                                                      @l1a 00807000
         AIF   ('&CMPSTR' NE 'LITTYPE').CHKCMP5                    @l1a 00808000
&PARMA6  SETB  1                  Set flag COMPAT(LITTYPE)         @l1a 00809000
         AGO   .COMPLOP                                            @l1a 00810000
.CHKCMP5 ANOP                                                      @l1c 00811000
         AIF   ('&CMPSTR' NE 'NOCASE').CHKCMP6                     @l1c 00812000
&PARMA4N SETB  1                  Set flag COMPAT(NOCASE)               00813000
         AGO   .COMPLOP                                                 00814000
.CHKCMP6 ANOP                                                      @l1c 00815000
         AIF   ('&CMPSTR' NE 'NOSYSLIST').CHKCMP7                  @l1c 00816000
&PARMA5N SETB  1                  Set flag COMPAT(NOSYSLIST)            00817000
         AGO   .COMPLOP                                                 00818000
.CHKCMP7 ANOP                                                      @l1c 00819000
         AIF   ('&CMPSTR' NE 'NOMACROCASE').CHKCMP8                @l1c 00820000
&PARMA7N SETB  1                  Set flag COMPAT(NOMACROCASE)          00821000
         AGO   .COMPLOP                                                 00822000
.CHKCMP8 ANOP                                                      @l1a 00823000
         AIF   ('&CMPSTR' NE 'NOLITTYPE').CMPERR                   @l1a 00824000
&PARMA6N SETB  1                  Set flag COMPAT(NOLITTYPE)       @l1a 00825000
         AGO   .COMPLOP                                            @l1a 00826000
.CMPERR  ANOP                                                           00827000
         MNOTE 4,'COMPAT option &COMPAT(&A) invalid; ignored'           00828000
         AGO   .COMPLOP                                                 00829000
.*                                                                      00830000
.CHKCONT ANOP                                                           00831000
         AIF   ('&CONTWARN' EQ 'NO').CHKDBC                             00832000
&PARMB4  SETB  1                  Set flag to YES                       00833000
         AIF   ('&CONTWARN' EQ 'YES').CHKDBC                            00834000
         MNOTE 4,'Invalid CONTWARN value &CONTWARN; YES assumed'        00835000
.*                                                                      00836000
.CHKDBC  ANOP                                                           00837000
         AIF   ('&DBCS' EQ 'NO').CHKDEC                                 00838000
         AIF   ('&DBCS' NE 'YES').INVDBC                                00839000
&PARM22  SETB  1                  Set flag                              00840000
         AGO   .CHKDEC                                                  00841000
.INVDBC  ANOP                                                           00842000
         MNOTE 4,'Invalid DBCS value &DBCS; NO assumed'                 00843000
.*                                                                      00844000
.CHKDEC  ANOP                                                           00845000
         AIF   ('&DECK' EQ 'NO').DELETE                                 00846000
         AIF   ('&DECK' NE 'YES').INVDEC                                00847000
&PARM00  SETB  1                  Set flag                              00848000
         AGO   .DELETE                                                  00849000
.INVDEC  ANOP                                                           00850000
         MNOTE 4,'Invalid DECK value &DECK; YES assumed'                00851000
&PARM00  SETB  1                  Set flag                              00852000
.*                                                                      00853000
.*       Establish the 'NO-OVERRIDE' list                               00854000
.*                                                                      00855000
.DELETE  ANOP                                                           00856000
&A       SETA  0                  Set loop counter                      00857000
.DELOLOP ANOP                                                           00858000
&A       SETA  &A+1               Bump loop counter                     00859000
         AIF   (&A GT N'&DELETE).CHKDXR Go process DXREF                00860000
&DELSTR  SETC  '&DELETE(&A)'      Save option to be deleted             00861000
         AIF   ('&DELSTR' NE 'ALIGN').DALGW                             00862000
&DELP07  SETB  1                  Set flag                              00863000
         AGO   .DELOLOP           Check next option                     00864000
.DALGW   ANOP                                                           00865000
         AIF   ('&DELSTR' NE 'ALIGNWARN').DASA                          00866000
&DELPB3  SETB  1                  Set flag                              00867000
         AGO   .DELOLOP           Check next option                     00868000
.DASA    ANOP                                                           00869000
.DBAT    ANOP                                                           00870000
         AIF   ('&DELSTR' NE 'BATCH').DCP                          @v2c 00871000
&DELP06  SETB  1                  Set flag                              00872000
         AGO   .DELOLOP           Check next option                     00873000
.DCP     ANOP                                                      @v2a 00874000
         AIF   ('&DELSTR' NE 'CODEPAGE').DCOM                      @v2a 00875000
&DELP95  SETB  1                  Set flag                         @v2a 00876000
         AGO   .DELOLOP           Check next option                     00877000
.DCOM    ANOP                                                           00878000
         AIF   ('&DELSTR'(1,7) NE 'COMPAT(').DCONTW                     00879000
&DELSL   SETA  K'&DELSTR                                                00880000
         AIF   (&DELSL LT 10).DCER                                      00881000
         AIF   ('&DELSTR'(&DELSL,1) NE ')').DCER                        00882000
&DELSTR  SETC  '&DELSTR'(8,&DELSL-8)                                    00883000
&DELSL   SETA  K'&DELSTR                                                00884000
&B       SETA  1                                                        00885000
.DECILOP ANOP                                                           00886000
&C       SETA  &B                                                       00887000
.DECILOO ANOP                                                           00888000
         AIF   (&C GT &DELSL).DECCHK2                                   00889000
         AIF   ('&DELSTR'(&C,1) EQ ',').DECCHK                          00890000
&C       SETA  &C+1                                                     00891000
         AGO   .DECILOO                                                 00892000
.DECCHK  ANOP                                                           00893000
         AIF   (&C NE &B).DECCHK2 Null sub-option?                      00894000
&B       SETA  &C+1                                                     00895000
         AGO   .DECILOP           Check next sub-option                 00896000
.DECCHK2 ANOP                                                           00897000
&C       SETA  &C-1                                                     00898000
         AIF   (&C LE &B).DELOLOP                                       00899000
&DELST   SETC  '&DELSTR'(&B,&C-&B+1)                                    00900000
         AIF   ('&DELST' NE 'CASE').DCCS                                00901000
&DELPA4  SETB  1                  Set flag                              00902000
&B       SETA  &C+2                                                     00903000
         AGO   .DECILOP           Check next sub-option                 00904000
.DCCS    ANOP                                                           00905000
         AIF   ('&DELST' NE 'SYSLIST').DCCM                             00906000
&DELPA5  SETB  1                  Set flag                              00907000
&B       SETA  &C+2                                                     00908000
         AGO   .DECILOP           Check next sub-option                 00909000
.DCCM    ANOP                                                           00910000
         AIF   ('&DELST' NE 'MACROCASE').DCCL                      @l1c 00911000
&DELPA7  SETB  1                  Set flag                              00912000
&B       SETA  &C+2                                                     00913000
         AGO   .DECILOP           Check next sub-option                 00914000
.DCCL    ANOP                                                      @l1a 00915000
         AIF   ('&DELST' NE 'LITTYPE').DCER                        @l1a 00916000
&DELPA6  SETB  1                  Set flag                         @l1a 00917000
&B       SETA  &C+2                                                @l1a 00918000
         AGO   .DECILOP           Check next sub-option            @l1a 00919000
.DCER    ANOP                                                           00920000
         MNOTE 4,'DELETE COMPAT option &DELST invalid; ignored'         00921000
&B       SETA  &C+2                                                     00922000
         AGO   .DECILOP           Check next sub-option                 00923000
.DCONTW  ANOP                                                           00924000
         AIF   ('&DELSTR' NE 'CONTWARN').DDBC                           00925000
&DELPB4  SETB  1                  Set flag                              00926000
         AGO   .DELOLOP           Check next option                     00927000
.DDBC    ANOP                                                           00928000
         AIF   ('&DELSTR' NE 'DBCS').DDEC                               00929000
&DELP22  SETB  1                  Set flag                              00930000
         AGO   .DELOLOP           Check next option                     00931000
.DDEC    ANOP                                                           00932000
         AIF   ('&DELSTR' NE 'DECK').DDXR                               00933000
&DELP00  SETB  1                  Set flag                              00934000
         AGO   .DELOLOP           Check next option                     00935000
.DDXR    ANOP                                                           00936000
         AIF   ('&DELSTR' NE 'DXREF').DESD                              00937000
&DELP23  SETB  1                  Set flag                              00938000
         AGO   .DELOLOP           Check next option                     00939000
.DESD    ANOP                                                           00940000
         AIF   ('&DELSTR' NE 'ESD').DADX                                00941000
&DELP10  SETB  1                  Set flag                              00942000
         AGO   .DELOLOP           Check next option                     00943000
.DADX    ANOP                                                           00944000
         AIF   ('&DELSTR' NE 'ADEXIT').DINX                             00945000
&DELP56  SETB  1                  Set flag                              00946000
         AGO   .DELOLOP           Check next option                     00947000
.DINX    ANOP                                                           00948000
         AIF   ('&DELSTR' NE 'INEXIT').DLIX                             00949000
&DELP44  SETB  1                  Set flag                              00950000
         AGO   .DELOLOP           Check next option                     00951000
.DLIX    ANOP                                                           00952000
         AIF   ('&DELSTR' NE 'LIBEXIT').DPRX                            00953000
&DELP45  SETB  1                  Set flag                              00954000
         AGO   .DELOLOP           Check next option                     00955000
.DPRX    ANOP                                                           00956000
         AIF   ('&DELSTR' NE 'PRTEXIT').DOBX                            00957000
&DELP46  SETB  1                  Set flag                              00958000
         AGO   .DELOLOP           Check next option                     00959000
.DOBX    ANOP                                                           00960000
         AIF   ('&DELSTR' NE 'OBJEXIT').DTRX                            00961000
&DELP47  SETB  1                  Set flag                              00962000
         AGO   .DELOLOP           Check next option                     00963000
.DTRX    ANOP                                                           00964000
         AIF   ('&DELSTR' NE 'TRMEXIT').DFLA                            00965000
&DELP57  SETB  1                  Set flag                              00966000
         AGO   .DELOLOP           Check next option                     00967000
.DFLA    ANOP                                                           00968000
         AIF   ('&DELSTR' NE 'FLAG').DFOL                               00969000
&DELP51  SETB  1                  Set flag                              00970000
         AGO   .DELOLOP           Check next option                     00971000
.DFOL    ANOP                                                           00972000
         AIF   ('&DELSTR' NE 'FOLD').DIMPW                         @l1c 00973000
&DELP24  SETB  1                  Set flag                              00974000
         AGO   .DELOLOP           Check next option                     00975000
.DIMPW   ANOP                                                      @l1a 00976000
         AIF   ('&DELSTR' NE 'IMPLENWARN').DINFO                   @l1a 00977000
&DELPB6  SETB  1                  Set flag                         @l1a 00978000
         AGO   .DELOLOP           Check next option                @l1a 00979000
.DINFO   ANOP                                                      @l1a 00980000
         AIF   ('&DELSTR' NE 'INFO').DLAN                          @l1a 00981000
&DELP97  SETB  1                  Set flag                         @l1a 00982000
         AGO   .DELOLOP           Check next option                @l1a 00983000
.DLAN    ANOP                                                           00984000
         AIF   ('&DELSTR' NE 'LANGUAGE').DLIB                           00985000
&DELP52  SETB  1                  Set flag                              00986000
         AGO   .DELOLOP           Check next option                     00987000
.DLIB    ANOP                                                           00988000
         AIF   ('&DELSTR' NE 'LIBMAC').DLIN                             00989000
&DELPB1  SETB  1                  Set flag                              00990000
         AGO   .DELOLOP           Check next option                     00991000
.DLIN    ANOP                                                           00992000
         AIF   ('&DELSTR' NE 'LINECOUNT').DLIS                          00993000
&DELP53  SETB  1                  Set flag                              00994000
         AGO   .DELOLOP           Check next option                     00995000
.DLIS    ANOP                                                           00996000
         AIF   ('&DELSTR'(1,4) NE 'LIST').DDAT                          00997000
&DELP60  SETB  1                  Set flag                              00998000
&DELP02  SETB  1                  Set flag                              00999000
.DDAT    ANOP                                                           01000000
         AIF   ('&DELSTR' NE 'ADATA').DMACH                        @v6c 01001000
&DELP55  SETB  1                  Set flag                              01002000
         AGO   .DELOLOP           Check next option                     01003000
.DMACH   ANOP                                                      @v6a 01004000
         AIF   ('&DELSTR' NE 'MACHINE').DMACHL                     @v6a 01005000
&DELP54  SETB  1                  Set flag                         @v6a 01006000
         AGO   .DELOLOP           Check next option                @v6a 01007000
.DMACHL  ANOP                                                      @v6a 01008000
         AIF   ('&DELSTR' NE 'MACHINELIST').DMXR                   @v6a 01009000
&DELP94  SETB  1                  Set flag                         @v6a 01010000
         AGO   .DELOLOP           Check next option                @v6a 01011000
.DMXR    ANOP                                                           01012000
         AIF   ('&DELSTR' NE 'MXREF').DNOM                              01013000
&DELP70  SETB  1                  Set flag                              01014000
&DELP71  SETB  1                  MXREF FULL                            01015000
&DELP72  SETB  1                        SOURCE                          01016000
&DELP73  SETB  1                        XREF                            01017000
         AGO   .DELOLOP           Check next option                     01018000
.DNOM    ANOP                                                           01019000
.DOBJ    ANOP                                                           01020000
         AIF   ('&DELSTR' NE 'OBJECT').DOPT                             01021000
&DELP01  SETB  1                  Set flag                              01022000
         AGO   .DELOLOP           Check next option                     01023000
.DOPT    ANOP                                                           01024000
         AIF   ('&DELSTR' NE 'OPTABLE').DOPTL                  @PQ44437 01025000
&DELP54  SETB  1                  Set flag                              01026000
         AGO   .DELOLOP           Check next option            @PQ44437 01027000
.DOPTL   ANOP                                                  @PQ44437 01028000
         AIF   ('&DELSTR' NE 'OPTABLELIST').DPAG0              @PQ44437 01029000
&DELP94  SETB  1                  Set flag                     @PQ44437 01030000
         AGO   .DELOLOP           Check next option                     01031000
.DPAG0   ANOP                                                      @l1a 01032000
         AIF   ('&DELSTR' NE 'PAGE0WARN').DPCO                     @l1a 01033000
&DELPB7  SETB  1                  Set flag                         @l1a 01034000
         AGO   .DELOLOP           Check next option                @l1a 01035000
.DPCO    ANOP                                                           01036000
         AIF   ('&DELSTR'(1,9) NE 'PCONTROL(').DPROF                    01037000
&DELSL   SETA  K'&DELSTR                                                01038000
         AIF   (&DELSL LT 12).DERR                                      01039000
         AIF   ('&DELSTR'(&DELSL,1) NE ')').DERR                        01040000
&DELSTR  SETC  '&DELSTR'(10,&DELSL-10)                                  01041000
&DELSL   SETA  K'&DELSTR                                                01042000
&B       SETA  1                                                        01043000
.DELILOP ANOP                                                           01044000
&C       SETA  &B                                                       01045000
.DELILOO ANOP                                                           01046000
         AIF   (&C GT &DELSL).DELCHK2                                   01047000
         AIF   ('&DELSTR'(&C,1) EQ ',').DELCHK                          01048000
&C       SETA  &C+1                                                     01049000
         AGO   .DELILOO                                                 01050000
.DELCHK  ANOP                                                           01051000
         AIF   (&C NE &B).DELCHK2 Null sub-option?                      01052000
&B       SETA  &C+1                                                     01053000
         AGO   .DELILOP           Check next sub-option                 01054000
.DELCHK2 ANOP                                                           01055000
&C       SETA  &C-1                                                     01056000
         AIF   (&C LE &B).DELOLOP                                       01057000
&DELST   SETC  '&DELSTR'(&B,&C-&B+1)                                    01058000
         AIF   ('&DELST' NE 'ON').DPCG                                  01059000
&DELP30  SETB  1                  Set flag                              01060000
&B       SETA  &C+2                                                     01061000
         AGO   .DELILOP           Check next sub-option                 01062000
.DPCG    ANOP                                                           01063000
         AIF   ('&DELST' NE 'GEN').DPCD                                 01064000
&DELP31  SETB  1                  Set flag                              01065000
&B       SETA  &C+2                                                     01066000
         AGO   .DELILOP           Check next sub-option                 01067000
.DPCD    ANOP                                                           01068000
         AIF   ('&DELST' NE 'DATA').DPCU                                01069000
&DELP32  SETB  1                  Set flag                              01070000
&B       SETA  &C+2                                                     01071000
         AGO   .DELILOP           Check next sub-option                 01072000
.DPCU    ANOP                                                           01073000
         AIF   ('&DELST' NE 'UHEAD').DPCM                               01074000
&DELP33  SETB  1                  Set flag                              01075000
&B       SETA  &C+2                                                     01076000
         AGO   .DELILOP           Check next sub-option                 01077000
.DPCM    ANOP                                                           01078000
         AIF   ('&DELST' NE 'MSOURCE').DPCMC                            01079000
&DELP34  SETB  1                  Set flag                              01080000
&B       SETA  &C+2                                                     01081000
         AGO   .DELILOP           Check next sub-option                 01082000
.DPCMC   ANOP                                                           01083000
         AIF   ('&DELST' NE 'MCALL').DPCOFF                             01084000
&DELP81  SETB  1                  Set flag                              01085000
&B       SETA  &C+2                                                     01086000
         AGO   .DELILOP           Check next sub-option                 01087000
.DPCOFF  ANOP                                                           01088000
         AIF   ('&DELST' NE 'OFF').DPCND                                01089000
&DELP82  SETB  1                  Set flag                              01090000
&B       SETA  &C+2                                                     01091000
         AGO   .DELILOP           Check next sub-option                 01092000
.DPCND   ANOP                                                           01093000
         AIF   ('&DELST' NE 'NODATA').DPCNG                             01094000
&DELP83  SETB  1                  Set flag                              01095000
&B       SETA  &C+2                                                     01096000
         AGO   .DELILOP           Check next sub-option                 01097000
.DPCNG   ANOP                                                           01098000
         AIF   ('&DELST' NE 'NOGEN').DPCNU                              01099000
&DELP84  SETB  1                  Set flag                              01100000
&B       SETA  &C+2                                                     01101000
         AGO   .DELILOP           Check next sub-option                 01102000
.DPCNU   ANOP                                                           01103000
         AIF   ('&DELST' NE 'NOUHEAD').DPCNM                            01104000
&DELP85  SETB  1                  Set flag                              01105000
&B       SETA  &C+2                                                     01106000
         AGO   .DELILOP           Check next sub-option                 01107000
.DPCNM   ANOP                                                           01108000
         AIF   ('&DELST' NE 'NOMSOURCE').DPCNMC                         01109000
&DELP86  SETB  1                  Set flag                              01110000
&B       SETA  &C+2                                                     01111000
         AGO   .DELILOP           Check next sub-option                 01112000
.DPCNMC  ANOP                                                           01113000
         AIF   ('&DELST' NE 'NOMCALL').DPCE                             01114000
&DELP87  SETB  1                  Set flag                              01115000
&B       SETA  &C+2                                                     01116000
         AGO   .DELILOP           Check next sub-option                 01117000
.DPCE    ANOP                                                           01118000
         MNOTE 4,'DELETE PCONTROL option &DELST invalid; ignored'       01119000
&B       SETA  &C+2                                                     01120000
         AGO   .DELILOP           Check next sub-option                 01121000
.DPROF   ANOP                                                           01122000
         AIF   ('&DELSTR' NE 'PROFILE').DPUSH                  @PQ22004 01123000
&DELP77  SETB  1                  Set flag                              01124000
         AGO   .DELOLOP           Check next option                     01125000
.DPUSH   ANOP                                                  @PQ22004 01126000
         AIF   ('&DELSTR' NE 'PUSHWARN').DRA2                  @PQ22004 01127000
&DELP26  SETB  1                  Set flag                     @PQ22004 01128000
         AGO   .DELOLOP           Check next option            @PQ22004 01129000
.DRA2    ANOP                                                           01130000
         AIF   ('&DELSTR' NE 'RA2').DRECI                               01131000
&DELPB2  SETB  1                  Set flag                              01132000
         AGO   .DELOLOP           Check next option                     01133000
.DRECI   ANOP                                                           01134000
         AIF   ('&DELSTR' NE 'RECORDINFO').DREN                         01135000
&DELP80  SETB  1                  Set flag                              01136000
         AGO   .DELOLOP           Check next option                     01137000
.DREN    ANOP                                                           01138000
         AIF   ('&DELSTR' NE 'RENT').DRLD                               01139000
&DELP04  SETB  1                  Set flag                              01140000
         AGO   .DELOLOP           Check next option                     01141000
.DRLD    ANOP                                                           01142000
         AIF   ('&DELSTR' NE 'RLD').DRXRF                               01143000
&DELP11  SETB  1                  Set flag                              01144000
         AGO   .DELOLOP           Check next option                     01145000
.DRXRF   ANOP                                                           01146000
         AIF   ('&DELSTR' NE 'RXREF').DSALGN                       @v6c 01147000
&DELP17  SETB  1                  Set flag                              01148000
         AGO   .DELOLOP           Check next option                     01149000
.DSALGN  ANOP                                                      @v6a 01150000
         AIF   ('&DELSTR' NE 'SECTALGN').DSIZ                      @v6a 01151000
&DELP35  SETB  1                  Set flag                         @v6a 01152000
         AGO   .DELOLOP           Check next option                @v6a 01153000
.DSIZ    ANOP                                                           01154000
         AIF   ('&DELSTR' NE 'SIZE').DSTORAG                            01155000
&DELP25  SETB  1                  Set flag                              01156000
         AGO   .DELOLOP           Check next option                     01157000
.DSTORAG ANOP                                                           01158000
         AIF   ('&DELSTR' NE 'STORAGE').DSUPR                      @v6c 01159000
&DELP15  SETB  1                  Set flag                              01160000
         AGO   .DELOLOP           Check next option                     01161000
.DSUPR   ANOP                                                      @v6a 01162000
         AIF   ('&DELSTR' NE 'SUPRWARN').DSUBSTR                   @v6a 01163000
&DELPC0  SETB  1                  Set flag                         @v6a 01164000
         AGO   .DELOLOP           Check next option                @v6a 01165000
.DSUBSTR ANOP                                                           01166000
         AIF   ('&DELSTR' NE 'SUBSTRWARN').DSYS                         01167000
&DELPB5  SETB  1                  Set flag                              01168000
         AGO   .DELOLOP           Check next option                     01169000
.DSYS    ANOP                                                           01170000
         AIF   ('&DELSTR' NE 'SYSPARMV').DTER                           01171000
&DELP50  SETB  1                  Set flag                              01172000
         AGO   .DELOLOP           Check next option                     01173000
.DTER    ANOP                                                           01174000
         AIF   ('&DELSTR' NE 'TERM').DTES                               01175000
&DELP20  SETB  1                  Set flag                              01176000
         AGO   .DELOLOP           Check next option                     01177000
.DTES    ANOP                                                           01178000
         AIF   ('&DELSTR' NE 'TEST').DTHR                          @v2m 01179000
&DELP05  SETB  1                  Set flag                              01180000
         AGO   .DELOLOP           Check next option                     01181000
.DTHR    ANOP                                                      @v2a 01182000
         AIF   ('&DELSTR' NE 'THREAD').DTRAN                       @v2a 01183000
&DELP27  SETB  1                  Set flag                         @v2a 01184000
         AGO   .DELOLOP           Check next option                     01185000
.DTRAN   ANOP                                                           01186000
         AIF   ('&DELSTR' NE 'TRANSLATE').DTYPE                @PQ69375 01187000
&DELP74  SETB  1                  Set flag                              01188000
         AGO   .DELOLOP           Check next option            @PQ69375 01189000
.*                                                                 @v6a 01190000
.DTYPE   ANOP                                                      @v6c 01191000
         AIF   ('&DELSTR'(1,10) NE 'TYPECHECK(').DUSING0           @v6c 01192000
&DELSL   SETA  K'&DELSTR                                           @v6c 01193000
&DELST   SETC  'is'                                                @v6a 01194000
&C       SETA  0                                                   @v6a 01195000
         AIF   (&DELSL LT 12).DTYPERR                              @v6c 01196000
         AIF   ('&DELSTR'(&DELSL,1) NE ')').DTYPERR                @v6a 01197000
&DELSTR  SETC  '&DELSTR'(11,&DELSL-11)                             @v6a 01198000
&DELSL   SETA  K'&DELSTR                                           @v6a 01199000
&B       SETA  1                                                   @v6a 01200000
.*                                                                 @v6a 01201000
.DTYPLOP ANOP                             Loop through sub-options @v6a 01202000
&C       SETA  &B                                                  @v6a 01203000
.DTYPLOO ANOP                             Loop through characters  @v6a 01204000
         AIF   (&C GT &DELSL).DTYPCK2                              @v6a 01205000
         AIF   ('&DELSTR'(&C,1) EQ ',').DTYPCK1                    @v6a 01206000
&C       SETA  &C+1                                                @v6a 01207000
         AGO   .DTYPLOO                   Check next character     @v6a 01208000
.DTYPCK1 ANOP                             Found a comma            @v6a 01209000
         AIF   (&C NE &B).DTYPCK2         Not a null sub-option?   @v6a 01210000
&B       SETA  &C+1                                                @v6a 01211000
         AGO   .DTYPLOP                   Check next sub-option    @v6a 01212000
.DTYPCK2 ANOP                             Found a sub-option?      @v6a 01213000
         AIF   (&C LE &B).DELOLOP         Finished with TYPECHECK  @v6a 01214000
&DELST   SETC  '&DELSTR'(&B,&C-&B)        Extract sub-option       @v6a 01215000
.*                                                                 @v6a 01216000
         AIF   ('&DELST' NE 'MAGNITUDE').DTYPCK3                   @v6a 01217000
&DELPA1  SETB  1                                                   @v6a 01218000
&B       SETA  &C+1                                                @v6a 01219000
         AGO   .DTYPLOP                   Check next sub-option    @v6a 01220000
.DTYPCK3 ANOP                                                      @v6a 01221000
         AIF   ('&DELST' NE 'REGISTER').DTYPERR                    @v6a 01222000
&DELPA3  SETB  1                                                   @v6a 01223000
&B       SETA  &C+1                                                @v6a 01224000
         AGO   .DTYPLOP                   Check next sub-option    @v6a 01225000
.DTYPERR ANOP                                                      @v6a 01226000
         MNOTE 4,'DELETE TYPECHECK option &DELST invalid; ignored' @v6a 01227000
&B       SETA  &C+1                                                @v6a 01228000
         AGO   .DTYPLOP                   Check next sub-option    @v6a 01229000
.*                                                                 @v6a 01230000
.DUSING0 ANOP                                                  @PQ35537 01231000
         AIF   ('&DELSTR' NE 'USING0WARN').DEXLITW             @PQ67377 01232000
&DELPB0  SETB  1                  Set flag                     @PQ35537 01233000
         AGO   .DELOLOP           Check next option            @PQ67377 01234000
.DEXLITW ANOP                                                  @PQ67377 01235000
         AIF   ('&DELSTR' NE 'EXLITW').DLIM                    @PQ67377 01236000
&DELPA0  SETB  1                  Set flag                     @PQ67377 01237000
         AGO   .DELOLOP           Check next option                     01238000
.DLIM    ANOP                                                           01239000
         AIF   ('&DELSTR' NE 'LIMIT').DMAP                              01240000
&DELP42  SETB  1                  Set flag                              01241000
         AGO   .DELOLOP           Check next option                     01242000
.DMAP    ANOP                                                           01243000
         AIF   ('&DELSTR' NE 'MAP').DWAR                                01244000
&DELP43  SETB  1                  Set flag                              01245000
         AGO   .DELOLOP           Check next option                     01246000
.DWAR    ANOP                                                           01247000
         AIF   ('&DELSTR' NE 'WARN').DXRE                               01248000
&DELP41  SETB  1                  Set flag                              01249000
         AGO   .DELOLOP           Check next option                     01250000
.DXRE    ANOP                                                           01251000
         AIF   ('&DELSTR' NE 'XREF').DERR                               01252000
&DELP03  SETB  1                  Delete XREF                           01253000
&DELP12  SETB  1                  Delete SHORT                          01254000
&DELP14  SETB  1                  Delete FULL                           01255000
&DELP16  SETB  1                  Delete UNREFS                         01256000
         AGO   .DELOLOP           Check next option                     01257000
.DERR    ANOP                                                           01258000
         MNOTE 4,'DELETE option &DELETE(&A) invalid; ignored'           01259000
         AGO   .DELOLOP                                                 01260000
.*                                                                      01261000
.CHKDXR  ANOP                                                           01262000
         AIF   ('&DXREF' EQ 'NO').CHKESD                                01263000
         AIF   ('&DXREF' NE 'YES').INVDXR                               01264000
&PARM23  SETB  1                  Set flag                              01265000
         AGO   .CHKESD                                                  01266000
.INVDXR  ANOP                                                           01267000
         MNOTE 4,'Invalid DXREF value &DXREF; YES assumed'              01268000
&PARM23  SETB  1                  Set flag                              01269000
.*                                                                      01270000
.CHKESD  ANOP                                                           01271000
         AIF   ('&ESD' EQ 'NO').CHKADX                                  01272000
         AIF   ('&ESD' NE 'YES').INVESD                                 01273000
&PARM10  SETB  1                  Set flag                              01274000
         AGO   .CHKADX                                                  01275000
.INVESD  ANOP                                                           01276000
         MNOTE 4,'Invalid ESD value &ESD; YES assumed'                  01277000
&PARM10  SETB  1                  Set flag                              01278000
.*                                                                      01279000
.CHKADX  ANOP                                                           01280000
&XADN    SETC  ' '                Module Name                           01281000
         AIF   (N'&ADEXIT EQ 0).CKADX3                                  01282000
&XADN    SETC  '&ADEXIT(1)'       Module Name                           01283000
&PARM56  SETB  1                  Set flag                              01284000
         ASMAMODV ADATA,&XADN                                           01285000
         AIF   (&INVMOD EQ 0).CKADX1                                    01286000
&XADN    SETC  ' '                Module Name                           01287000
.CKADX1  ANOP                                                           01288000
         AIF   (N'&ADEXIT EQ 1).CKADX3                                  01289000
&XADS    SETC  '&ADEXIT(2)'       String                                01290000
         AIF   (K'&XADS EQ 0).CKADX3                                    01291000
         AIF   ('&XADS'(1,1) NE '''').CKADX2                            01292000
.*       Remove outer set of apostrophes                                01293000
&XADS    SETC  '&XADS'(2,K'&XADS-2)                                     01294000
.CKADX2  ANOP                                                           01295000
&XADSL   SETA  K'&XADS                                                  01296000
         AIF   (&XADSL LE 64).CKADX3                                    01297000
         MNOTE 4,'ADEXIT string > 64 characters; truncated'             01298000
&XADS    SETC  '&XADS'(1,64)                                            01299000
&XADSL   SETA  64                                                       01300000
.CKADX3  ANOP                                                           01301000
&XADS    SETC  '&XADS'.(64-&XADSL)' '                                   01302000
.*                                                                      01303000
.CHKINX  ANOP                                                           01304000
&XINN    SETC  ' '                Module Name                           01305000
         AIF   (N'&INEXIT EQ 0).CKINX3                                  01306000
&XINN    SETC  '&INEXIT(1)'       Module Name                           01307000
&PARM44  SETB  1                  Set flag                              01308000
         ASMAMODV SOURCE,&XINN                                          01309000
         AIF   (&INVMOD EQ 0).CKINX1                                    01310000
&XINN    SETC  ' '                Module Name                           01311000
.CKINX1  ANOP                                                           01312000
         AIF   (N'&INEXIT EQ 1).CKINX3                                  01313000
&XINS    SETC  '&INEXIT(2)'       String                                01314000
         AIF   (K'&XINS EQ 0).CKINX3                                    01315000
         AIF   ('&XINS'(1,1) NE '''').CKINX2                            01316000
.*       Remove outer set of apostrophes                                01317000
&XINS    SETC  '&XINS'(2,K'&XINS-2)                                     01318000
.CKINX2  ANOP                                                           01319000
&XINSL   SETA  K'&XINS                                                  01320000
         AIF   (&XINSL LE 64).CKINX3                                    01321000
         MNOTE 4,'INEXIT string > 64 characters; truncated'             01322000
&XINS    SETC  '&XINS'(1,64)                                            01323000
&XINSL   SETA  64                                                       01324000
.CKINX3  ANOP                                                           01325000
&XINS    SETC  '&XINS'.(64-&XINSL)' '                                   01326000
.*                                                                      01327000
.CHKLIBX ANOP                                                           01328000
&XLIBN   SETC  ' '                Module Name                           01329000
         AIF   (N'&LIBEXIT EQ 0).CKLIBX3                                01330000
&XLIBN   SETC  '&LIBEXIT(1)'      Module Name                           01331000
&PARM45  SETB  1                  Set flag                              01332000
         ASMAMODV LIBRARY,&XLIBN                                        01333000
         AIF   (&INVMOD EQ 0).CKLIBX1                                   01334000
&XLIBN   SETC  ' '                Module Name                           01335000
.CKLIBX1 ANOP                                                           01336000
         AIF   (N'&LIBEXIT EQ 1).CKLIBX3                                01337000
&XLIBS   SETC  '&LIBEXIT(2)'      String                                01338000
         AIF   (K'&XLIBS EQ 0).CKLIBX3                                  01339000
         AIF   ('&XLIBS'(1,1) NE '''').CKLIBX2                          01340000
.*       Remove outer set of apostrophes                                01341000
&XLIBS   SETC  '&XLIBS'(2,K'&XLIBS-2)                                   01342000
.CKLIBX2 ANOP                                                           01343000
&XLIBSL  SETA  K'&XLIBS                                                 01344000
         AIF   (&XLIBSL LE 64).CKLIBX3                                  01345000
         MNOTE 4,'LIBEXIT string > 64 characters; truncated'            01346000
&XLIBS   SETC  '&XLIBS'(1,64)                                           01347000
&XLIBSL  SETA  64                                                       01348000
.CKLIBX3 ANOP                                                           01349000
&XLIBS   SETC  '&XLIBS'.(64-&XLIBSL)' '                                 01350000
.*                                                                      01351000
.CHKPRTX ANOP                                                           01352000
&XPRTN   SETC  ' '                Module Name                           01353000
         AIF   (N'&PRTEXIT EQ 0).CKPRTX3                                01354000
&XPRTN   SETC  '&PRTEXIT(1)'      Module Name                           01355000
&PARM46  SETB  1                  Set flag                              01356000
         ASMAMODV PRINT,&XPRTN                                          01357000
         AIF   (&INVMOD EQ 0).CKPRTX1                                   01358000
&XPRTN   SETC  ' '                Module Name                           01359000
.CKPRTX1 ANOP                                                           01360000
         AIF   (N'&PRTEXIT EQ 1).CKPRTX3                                01361000
&XPRTS   SETC  '&PRTEXIT(2)'      String                                01362000
         AIF   (K'&XPRTS EQ 0).CKPRTX3                                  01363000
         AIF   ('&XPRTS'(1,1) NE '''').CKPRTX2                          01364000
.*       Remove outer set of apostrophes                                01365000
&XPRTS   SETC  '&XPRTS'(2,K'&XPRTS-2)                                   01366000
.CKPRTX2 ANOP                                                           01367000
&XPRTSL  SETA  K'&XPRTS                                                 01368000
         AIF   (&XPRTSL LE 64).CKPRTX3                                  01369000
         MNOTE 4,'PRTEXIT string > 64 characters; truncated'            01370000
&XPRTS   SETC  '&XPRTS'(1,64)                                           01371000
&XPRTSL  SETA  64                                                       01372000
.CKPRTX3 ANOP                                                           01373000
&XPRTS   SETC  '&XPRTS'.(64-&XPRTSL)' '                                 01374000
.*                                                                      01375000
.CHKOBJX ANOP                                                           01376000
&XOBJN   SETC  ' '                Module Name                           01377000
         AIF   (N'&OBJEXIT EQ 0).CKOBJX3                                01378000
&XOBJN   SETC  '&OBJEXIT(1)'      Module Name                           01379000
&PARM47  SETB  1                  Set flag                              01380000
         ASMAMODV OBJECT,&XOBJN                                         01381000
         AIF   (&INVMOD EQ 0).CKOBJX1                                   01382000
&XOBJN   SETC  ' '                Module Name                           01383000
.CKOBJX1 ANOP                                                           01384000
         AIF   (N'&OBJEXIT EQ 1).CKOBJX3                                01385000
&XOBJS   SETC  '&OBJEXIT(2)'      String                                01386000
         AIF   (K'&XOBJS EQ 0).CKOBJX3                                  01387000
         AIF   ('&XOBJS'(1,1) NE '''').CKOBJX2                          01388000
.*       Remove outer set of apostrophes                                01389000
&XOBJS   SETC  '&XOBJS'(2,K'&XOBJS-2)                                   01390000
.CKOBJX2 ANOP                                                           01391000
&XOBJSL  SETA  K'&XOBJS                                                 01392000
         AIF   (&XOBJSL LE 64).CKOBJX3                                  01393000
         MNOTE 4,'OBJEXIT string > 64 characters; truncated'            01394000
&XOBJS   SETC  '&XOBJS'(1,64)                                           01395000
&XOBJSL  SETA  64                                                       01396000
.CKOBJX3 ANOP                                                           01397000
&XOBJS   SETC  '&XOBJS'.(64-&XOBJSL)' '                                 01398000
.CHKTRMX ANOP                                                           01399000
&XTRMN   SETC  ' '                Module Name                           01400000
         AIF   (N'&TRMEXIT EQ 0).CKTRMX3                                01401000
&XTRMN   SETC  '&TRMEXIT(1)'      Module Name                           01402000
&PARM57  SETB  1                  Set flag                              01403000
         ASMAMODV TERM,&XTRMN                                           01404000
         AIF   (&INVMOD EQ 0).CKTRMX1                                   01405000
&XTRMN   SETC  ' '                Module Name                           01406000
.CKTRMX1 ANOP                                                           01407000
         AIF   (N'&TRMEXIT EQ 1).CKTRMX3                                01408000
&XTRMS   SETC  '&TRMEXIT(2)'      String                                01409000
         AIF   (K'&XTRMS EQ 0).CKTRMX3                                  01410000
         AIF   ('&XTRMS'(1,1) NE '''').CKTRMX2                          01411000
.*       Remove outer set of apostrophes                                01412000
&XTRMS   SETC  '&XTRMS'(2,K'&XTRMS-2)                                   01413000
.CKTRMX2 ANOP                                                           01414000
&XTRMSL  SETA  K'&XTRMS                                                 01415000
         AIF   (&XTRMSL LE 64).CKTRMX3                                  01416000
         MNOTE 4,'TRMEXIT string > 64 characters; truncated'            01417000
&XTRMS   SETC  '&XTRMS'(1,64)                                           01418000
&XTRMSL  SETA  64                                                       01419000
.CKTRMX3 ANOP                                                           01420000
&XTRMS   SETC  '&XTRMS'.(64-&XTRMSL)' '                                 01421000
.*                                                                      01422000
.CHKFLA  ANOP                                                           01423000
         AIF   (K'&FLAG EQ 0).INVFLA                                    01424000
&A       SETA  1                  Loop counter                          01425000
.CKFLA1  ANOP                                                           01426000
         AIF   (&A GT K'&FLAG).CKFLA2                                   01427000
         AIF   ('&FLAG'(&A,1) LT '0').INVFLA                            01428000
         AIF   ('&FLAG'(&A,1) GT '9').INVFLA                            01429000
&A       SETA  &A+1               Bump loop counter                     01430000
         AGO   .CKFLA1                                                  01431000
.CKFLA2  ANOP                                                           01432000
&MSGL    SETA  &FLAG              Set value                             01433000
         AIF   ((&FLAG GE 0) AND (&FLAG LE 255)).CHKIMPW           @l1c 01434000
.INVFLA  ANOP                                                           01435000
         MNOTE 4,'Invalid FLAG value &FLAG; 0 assumed'                  01436000
&MSGL    SETA  0                  Set value                             01437000
.*                                                                      01438000
.CHKIMPW ANOP                                                      @l1a 01439000
         AIF   ('&IMPLENWARN' EQ 'NO').CHKFOL                      @l1a 01440000
         AIF   ('&IMPLENWARN' NE 'YES').INVIMPW                    @l1a 01441000
&PARMB6  SETB  1                  Set flag                         @l1a 01442000
         AGO   .CHKFOL                                             @l1a 01443000
.INVIMPW ANOP                                                      @l1a 01444000
         MNOTE 4,'Invalid IMPLENWARN value &IMPLENWARN; NO assumed'     01445000
.*                                                                      01446000
.CHKFOL  ANOP                                                           01447000
         AIF   ('&FOLD' EQ 'NO').CHKINFO                           @l1c 01448000
         AIF   ('&FOLD' NE 'YES').INVFOL                                01449000
&PARM24  SETB  1                  Set flag                              01450000
         AGO   .CHKINFO                                            @l1c 01451000
.INVFOL  ANOP                                                           01452000
         MNOTE 4,'Invalid FOLD value &FOLD; NO assumed'                 01453000
.*                                                                      01454000
.CHKINFO ANOP                                                      @l1a 01455000
&PARMA7  SETB  0                  Set flag off                     @l1a 01456000
         AIF   ('&INFO' EQ 'NO').CHKLAN                            @l1a 01457000
&INFODATE SETC ' '                Set info date to default of space@l1a 01458000
         AIF   ('&INFO' EQ 'YES').CKINFO3                          @l1a 01459000
         AIF   (K'&INFO NE 8).INVINFO                              @l1a 01460000
&A       SETA  1                  Loop counter                     @l1a 01461000
.CKINFO1 ANOP                                                      @l1a 01462000
         AIF   (&A GT 8).CKINFO2                                   @l1a 01463000
         AIF   ('&INFO'(&A,1) LT '0').INVINFO                      @l1a 01464000
         AIF   ('&INFO'(&A,1) GT '9').INVINFO                      @l1a 01465000
&A       SETA  &A+1               Bump loop counter                @l1a 01466000
         AGO   .CKINFO1                                            @l1a 01467000
.CKINFO2 ANOP                                                      @l1a 01468000
&INFODATE SETC '&INFO'                                             @l1a 01469000
.CKINFO3 ANOP                                                      @l1a 01470000
&PARM97  SETB  1                  Set flag                         @l1a 01471000
         AGO   .CHKLAN                                             @l1a 01472000
.INVINFO ANOP                                                      @l1a 01473000
         MNOTE 4,'Invalid INFO value &INFO; YES assumed'           @l1a 01474000
&PARM97  SETB  1                  Set flag                         @l1a 01475000
.*                                                                      01476000
.CHKLAN  ANOP                                                           01477000
         AIF   (K'&LANGUAGE EQ 0).INVLAN                                01478000
&LANG    SETC  '&LANGUAGE'                                              01479000
&PARM52  SETB  1                  Set flag                              01480000
         AIF   ('&LANGUAGE' EQ 'UE').CHKLIB                             01481000
         AIF   ('&LANGUAGE' EQ 'EN').CHKLIB                             01482000
         AIF   ('&LANGUAGE' EQ 'DE').CHKLIB                             01483000
         AIF   ('&LANGUAGE' EQ 'ES').CHKLIB                             01484000
         AIF   ('&LANGUAGE' EQ 'JP').CHKLIB                             01485000
.INVLAN  ANOP                                                           01486000
         MNOTE 4,'Invalid LANGUAGE value &LANGUAGE; UE assumed'         01487000
&LANG    SETC  'UE'                                                     01488000
.*                                                                      01489000
.CHKLIB  ANOP                                                           01490000
         AIF   ('&LIBMAC' EQ 'NO').CHKLIN                               01491000
         AIF   ('&LIBMAC' NE 'YES').INVLIB                              01492000
&PARMB1  SETB  1                  Set flag                              01493000
         AGO   .CHKLIN                                                  01494000
.INVLIB  ANOP                                                           01495000
         MNOTE 4,'Invalid LIBMAC value &LIBMAC; NO assumed'             01496000
.*                                                                      01497000
.CHKLIN  ANOP                                                           01498000
         AIF   (K'&LINECOUNT EQ 0).INVLIN                               01499000
&A       SETA  1                  Loop counter                          01500000
.CKLIN1  ANOP                                                           01501000
         AIF   (&A GT K'&LINECOUNT).CKLIN2                              01502000
         AIF   ('&LINECOUNT'(&A,1) LT '0').INVLIN                       01503000
         AIF   ('&LINECOUNT'(&A,1) GT '9').INVLIN                       01504000
&A       SETA  &A+1               Bump loop counter                     01505000
         AGO   .CKLIN1                                                  01506000
.CKLIN2  ANOP                                                           01507000
&LNCT    SETA  &LINECOUNT         Set value                             01508000
&PARM53  SETB  1                  Set flag                              01509000
         AIF   ((&LNCT GE 0) AND (&LNCT LE 32767)).CHKLIS               01510000
.INVLIN  ANOP                                                           01511000
         MNOTE 4,'Invalid LINECOUNT value &LINECOUNT; 60 assumed'       01512000
&LNCT    SETA  60                 Set value                             01513000
.*                                                                      01514000
.CHKLIS  ANOP                                                           01515000
         AIF   ('&LIST' EQ 'NO').CHKDAT                                 01516000
&PARM02  SETB  1                  Set flag LIST                         01517000
&PARM60  SETB  1                  Set flag LIST (internal)              01518000
         AIF   ('&LIST' EQ 'YES').CHKDAT                                01519000
         MNOTE 4,'Invalid LIST value &LIST; YES assumed'                01520000
         AGO   .CHKDAT                                                  01521000
.*                                                                      01522000
.CHKDAT  ANOP                                                           01523000
         AIF   ('&ADATA' EQ 'NO').CHKMACH                               01524000
         AIF   ('&ADATA' NE 'YES').INVDAT                               01525000
&PARM55  SETB  1                  Set flag                              01526000
         AGO   .CHKMACH                                                 01527000
.INVDAT  ANOP                                                           01528000
         MNOTE 4,'Invalid ADATA value &ADATA; NO assumed'               01529000
.*                                                                 @v6a 01530000
.CHKMACH ANOP                                                      @v6a 01531000
         AIF   (K'&MACHINE EQ 0).CHKMACHL                          @v6a 01532000
&X       SETC  (UPPER '&MACHINE')                                  @v6a 01533000
         AIF   ('&X' EQ 'S370').MACH370                            @v6a 01534000
         AIF   ('&X' EQ 'S370XA').MACHXA                       @PQ89655 01535000
         AIF   ('&X' EQ 'S370ESA').MACHESA                     @PQ89655 01535400
         AIF   ('&X' EQ 'S390').MACHESA                        @PQ89655 01535800
         AIF   ('&X' EQ 'S390E').MACHESA                       @PQ89655 01536200
         AIF   ('&X' EQ 'ZSERIES').MACHZOP                         @v6a 01537000
         AIF   ('&X' EQ 'ZS').MACHZOP                          @PQ89655 01538000
         AIF   ('&X' EQ 'ZSERIES-2').MACHYOP                   @PQ89655 01538200
         AIF   ('&X' EQ 'ZS-2').MACHYOP                        @PQ89655 01538400
         AIF   ('&X' EQ 'ZSERIES-3').MACHZS3                   @PK02660 01538600
         AIF   ('&X' EQ 'ZS-3').MACHZS3                        @PK02660 01538800
.INVMACH ANOP                                                      @v6a 01539000
         MNOTE 4,'Invalid MACHINE value &MACHINE; ignored'         @v6a 01540000
&MACH    SETC  ''                                                  @v6a 01541000
         AGO   .CHKMACHL                                           @v6a 01542000
.MACH370 ANOP                                                      @v6a 01543000
&PARM54  SETB  1                                                   @v6a 01544000
&MACH    SETC  'S370'                                              @v6a 01545000
&OPT     SETC  '370'                                               @v6a 01546000
         AGO   .CHKMACHL                                           @v6a 01547000
.MACHXA  ANOP                                                      @v6a 01548000
&PARM54  SETB  1                                                   @v6a 01549000
&MACH    SETC  'S370XA'                                        @PQ89655 01550000
&OPT     SETC  'XA'                                                @v6a 01551000
         AGO   .CHKMACHL                                           @v6a 01552000
.MACHESA ANOP                                                      @v6a 01553000
&PARM54  SETB  1                                                   @v6a 01554000
&MACH    SETC  'S390'                                          @PQ89655 01555000
&OPT     SETC  'ESA'                                               @v6a 01556000
         AGO   .CHKMACHL                                           @v6a 01557000
.MACHZOP ANOP                                                      @v6a 01558000
&PARM54  SETB  1                                                   @v6a 01559000
&MACH    SETC  'zSeries'                                       @PQ89655 01560000
&OPT     SETC  'ZOP'                                               @v6a 01561000
         AGO   .CHKMACHL                                           @v6a 01562000
.MACHYOP ANOP                                                      @v6a 01563000
&PARM54  SETB  1                                                   @v6a 01564000
&MACH    SETC  'zSeries-2'                                     @PQ89655 01565000
&OPT     SETC  'YOP'                                               @v6a 01566000
         AGO   .CHKMACHL                                           @v6a 01567000
.MACHZS3 ANOP                                                  @PK02660 01567200
&PARM54  SETB  1                                               @PK02660 01567400
&MACH    SETC  'zSeries-3'                                     @PK02660 01567600
&OPT     SETC  'ZS3'                                           @PK02660 01567800
.*                                                                 @v6a 01568000
.CHKMACHL ANOP                                                     @v6a 01569000
         AIF   ('&MACHINELIST' EQ 'NO').CHKMXR                     @v6a 01570000
         AIF   ('&MACHINELIST' NE 'YES').INVMACHL                  @v6a 01571000
&PARM94  SETB  1                  Set flag                         @v6a 01572000
         AGO   .CHKMXR                                             @v6a 01573000
.INVMACHL ANOP                                                     @v6a 01574000
         MNOTE 4,'Invalid MACHINELIST value &MACHINELIST; NO assumed'  +01575000
                                                                   @v6a 01576000
.*                                                                      01577000
.CHKMXR  ANOP                                                           01578000
         AIF   ('&MXREF' EQ 'NO').CHKXOBJ                               01579000
&PARM70  SETB  1                  Set flag                              01580000
         AIF   ('&MXREF' EQ 'FULL').MXRFULL                             01581000
         AIF   ('&MXREF' EQ 'SOURCE').MXRSOURCE                         01582000
         AIF   ('&MXREF' EQ 'XREF').MXRXREF                             01583000
         AIF   ('&MXREF' EQ 'YES').MXRSOURCE                            01584000
         MNOTE 4,'Invalid MXREF value &MXREF; SOURCE assumed'           01585000
.MXRSOURCE ANOP                                                         01586000
&PARM72  SETB  1                  Set flag MXREF(SOURCE)                01587000
         AGO   .CHKXOBJ                                                 01588000
.MXRXREF   ANOP                                                         01589000
&PARM73  SETB  1                  Set flag MXREF(XREF)                  01590000
         AGO   .CHKXOBJ                                                 01591000
.MXRFULL ANOP                                                           01592000
&PARM71  SETB  1                  Set flag MXREF(FULL)                  01593000
         AGO   .CHKXOBJ                                                 01594000
.*                                                                      01595000
.*                                                                      01596000
.CHKXOBJ ANOP                                                           01597000
.CHKOBJ  ANOP                                                           01598000
         AIF   ('&OBJECT' EQ 'NO').CHKOPT                               01599000
         AIF   ('&OBJECT' NE 'YES').INVOBJ                              01600000
&PARM01  SETB  1                  Set flag                              01601000
         AGO   .CHKOPT                                                  01602000
.INVOBJ  ANOP                                                           01603000
         MNOTE 4,'Invalid OBJECT value &OBJECT; NO assumed'             01604000
.*                                                                      01605000
.CHKOPT  ANOP                                                           01606000
         AIF   (&PARM54 EQ 1).CHKOPTL         OPTABLE already set  @v6a 01607000
         AIF   (K'&OPTABLE EQ 0).INVOPT                                 01608000
&OPT     SETC  (UPPER '&OPTABLE')                                  @v6c 01609000
&PARM54  SETB  1                  Set flag                              01610000
         AIF   ('&OPT' EQ 'UNI').OPTUNI                            @v6c 01611000
         AIF   ('&OPT' EQ 'DOS').OPTDOS                            @v6c 01612000
         AIF   ('&OPT' EQ '370').OPT370                            @v6c 01613000
         AIF   ('&OPT' EQ 'XA').OPTXA                              @v6c 01614000
         AIF   ('&OPT' EQ 'ESA').OPTESA                            @v6c 01615000
         AIF   ('&OPT' EQ 'ZOP').OPTZOP                            @v6c 01616000
         AIF   ('&OPT' EQ 'YOP').OPTYOP                            @v6c 01617000
         AIF   ('&OPT' EQ 'ZS3').OPTZS3                        @PK02660 01617500
.INVOPT  ANOP                                                           01618000
         MNOTE 4,'Invalid OPTABLE value &OPTABLE; UNI assumed'          01619000
.OPTUNI  ANOP                                                      @v6a 01620000
&OPT     SETC  'UNI'                                                    01621000
&MACH    SETC  ''                                                  @v6a 01622000
         AGO   .CHKOPTL                                            @v6a 01623000
.OPTDOS  ANOP                                                      @v6a 01624000
&MACH    SETC  ''                                                  @v6a 01625000
         AGO   .CHKOPTL                                            @v6a 01626000
.OPT370  ANOP                                                      @v6a 01627000
&MACH    SETC  'S370'                                              @v6a 01628000
         AGO   .CHKOPTL                                            @v6a 01629000
.OPTXA   ANOP                                                      @v6a 01630000
&MACH    SETC  'S370XA'                                        @PQ89655 01631000
         AGO   .CHKOPTL                                            @v6a 01632000
.OPTESA  ANOP                                                      @v6a 01633000
&MACH    SETC  'S390'                                          @PQ89655 01634000
         AGO   .CHKOPTL                                            @v6a 01635000
.OPTZOP  ANOP                                                      @v6a 01636000
&MACH    SETC  'zSeries'                                       @PQ89655 01637000
         AGO   .CHKOPTL                                            @v6a 01638000
.OPTYOP  ANOP                                                      @v6a 01639000
&MACH    SETC  'zSeries-2'                                     @PQ89655 01640000
         AGO   .CHKOPTL                                            @v6a 01641000
.OPTZS3  ANOP                                                  @PK02660 01641300
&MACH    SETC  'zSeries-3'                                     @PK02660 01641600
.*                                                             @PQ44437 01642000
.CHKOPTL ANOP                                                  @PQ44437 01643000
         AIF   ('&OPTABLELIST' EQ 'NO').CHKPAG0                @PQ44437 01644000
         AIF   ('&OPTABLELIST' NE 'YES').INVOPTL               @PQ44437 01645000
&PARM94  SETB  1                  Set flag                     @PQ44437 01646000
         AGO   .CHKPAG0                                        @PQ44437 01647000
.INVOPTL ANOP                                                  @PQ44437 01648000
         MNOTE 4,'Invalid OPTABLELIST value &OPTABLELIST; NO assumed'  +01649000
                                                               @PQ44437 01650000
.*                                                                      01651000
.CHKPAG0 ANOP                                                      @l1a 01652000
         AIF   ('&PAGE0WARN' EQ 'NO').CHKPCO                       @l1a 01653000
&PARMB7  SETB  1                  Set flag                         @l1a 01654000
         AIF   ('&PAGE0WARN' EQ 'YES').CHKPCO                      @l1a 01655000
         MNOTE 4,'Invalid PAGE0WARN value &PAGE0WARN; YES assumed'      01656000
.*                                                                      01657000
.CHKPCO  ANOP                                                           01658000
         AIF   ('&PCONTROL' EQ 'NO').CHKPES                             01659000
&A       SETA  0                  Set loop counter                      01660000
.PCOLOOP ANOP                                                           01661000
&A       SETA  &A+1               Bump loop counter                     01662000
         AIF   (&A GT N'&PCONTROL).CHKPCBAD                             01663000
         AIF   ('&PCONTROL(&A)' NE 'ON').PCGEN                          01664000
&PARM30  SETB  1                  Set flag                              01665000
         AGO   .PCOLOOP                                                 01666000
.PCGEN   ANOP                                                           01667000
         AIF   ('&PCONTROL(&A)' NE 'GEN').PCDAT                         01668000
&PARM31  SETB  1                  Set flag                              01669000
         AGO   .PCOLOOP                                                 01670000
.PCDAT   ANOP                                                           01671000
         AIF   ('&PCONTROL(&A)' NE 'DATA').PCUHE                        01672000
&PARM32  SETB  1                  Set flag                              01673000
         AGO   .PCOLOOP                                                 01674000
.PCUHE   ANOP                                                           01675000
         AIF   ('&PCONTROL(&A)' NE 'UHEAD').PCMSO                       01676000
&PARM33  SETB  1                  Set flag                              01677000
         AGO   .PCOLOOP                                                 01678000
.PCMSO   ANOP                                                           01679000
         AIF   ('&PCONTROL(&A)' NE 'MSOURCE').PCMCALL                   01680000
&PARM34  SETB  1                  Set flag                              01681000
         AGO   .PCOLOOP                                                 01682000
.PCMCALL ANOP                                                           01683000
         AIF   ('&PCONTROL(&A)' NE 'MCALL').PCOFF                       01684000
&PARM81  SETB  1                  Set flag PCONTROL(MCALL)              01685000
         AGO   .PCOLOOP                                                 01686000
.PCOFF   ANOP                                                           01687000
         AIF   ('&PCONTROL(&A)' NE 'OFF').PCNODATA                      01688000
&PARM82  SETB  1                  Set flag PCONTROL(OFF)                01689000
         AGO   .PCOLOOP                                                 01690000
.PCNODATA ANOP                                                          01691000
         AIF   ('&PCONTROL(&A)' NE 'NODATA').PCNOGEN                    01692000
&PARM83  SETB  1                  Set flag PCONTROL(NODATA)             01693000
         AGO   .PCOLOOP                                                 01694000
.PCNOGEN  ANOP                                                          01695000
         AIF   ('&PCONTROL(&A)' NE 'NOGEN').PCNOUHEAD                   01696000
&PARM84  SETB  1                  Set flag PCONTROL(NOGEN)              01697000
         AGO   .PCOLOOP                                                 01698000
.PCNOUHEAD ANOP                                                         01699000
         AIF   ('&PCONTROL(&A)' NE 'NOUHEAD').PCNOMSO                   01700000
&PARM85  SETB  1                  Set flag PCONTROL(NOUHEAD)            01701000
         AGO   .PCOLOOP                                                 01702000
.PCNOMSO   ANOP                                                         01703000
         AIF   ('&PCONTROL(&A)' NE 'NOMSOURCE').PCNOMCALL               01704000
&PARM86  SETB  1                  Set flag PCONTROL(NOMSOURCE)          01705000
         AGO   .PCOLOOP                                                 01706000
.PCNOMCALL ANOP                                                         01707000
         AIF   ('&PCONTROL(&A)' NE 'NOMCALL').INVPCO                    01708000
&PARM87  SETB  1                  Set flag PCONTROL(NOMCALL)            01709000
         AGO   .PCOLOOP                                                 01710000
.INVPCO  ANOP                                                           01711000
         MNOTE 4,'Invalid PCONTROL option &PCONTROL(&A); ignored'       01712000
         AGO   .PCOLOOP                                                 01713000
.CHKPCBAD ANOP                                                          01714000
         AIF   ('&PARM30' NE '&PARM82').CHKPC1                          01715000
.* If one of these parm values is 0 then it means both are              01716000
.* which means neither option was specified. This is ok.                01717000
         AIF   ('&PARM30' EQ '0').CHKPC1                                01718000
&PARM30  SETB  0                  Set flag                              01719000
&PARM82  SETB  0                  Set flag                              01720000
         MNOTE 8,'Only ON or OFF allowed for PCONTROL'                  01721000
.CHKPC1  AIF   ('&PARM31' NE '&PARM84').CHKPC2                          01722000
         AIF   ('&PARM31' EQ '0').CHKPC2                                01723000
&PARM31  SETB  0                  Set flag                              01724000
&PARM84  SETB  0                  Set flag                              01725000
         MNOTE 8,'Only GEN or NOGEN allowed for PCONTROL'               01726000
.CHKPC2  AIF   ('&PARM32' NE '&PARM83').CHKPC3                          01727000
         AIF   ('&PARM32' EQ '0').CHKPC3                                01728000
&PARM32  SETB  0                  Set flag                              01729000
&PARM83  SETB  0                  Set flag                              01730000
         MNOTE 8,'Only DATA or NODATA allowed for PCONTROL'             01731000
.CHKPC3  AIF   ('&PARM33' NE '&PARM85').CHKPC4                          01732000
         AIF   ('&PARM33' EQ '0').CHKPC4                                01733000
&PARM33  SETB  0                  Set flag                              01734000
&PARM85  SETB  0                  Set flag                              01735000
         MNOTE 8,'Only UHEAD or NOUHEAD allowed for PCONTROL'           01736000
.CHKPC4  AIF   ('&PARM34' NE '&PARM86').CHKPC5                          01737000
         AIF   ('&PARM34' EQ '0').CHKPC5                                01738000
&PARM34  SETB  0                  Set flag                              01739000
&PARM86  SETB  0                  Set flag                              01740000
         MNOTE 8,'Only MSOURCE or NOMSOURCE allowed for PCONTROL'       01741000
.CHKPC5  AIF   ('&PARM81' NE '&PARM87').CHKPES                          01742000
         AIF   ('&PARM81' EQ '0').CHKPES                                01743000
&PARM81  SETB  0                  Set flag                              01744000
&PARM87  SETB  0                  Set flag                              01745000
         MNOTE 8,'Only MCALL or NOMCALL allowed for PCONTROL'           01746000
.*                                                                      01747000
.CHKPES  ANOP                                                           01748000
&PEFLAG  SETA  0                  Clear flag                            01749000
         AIF   ('&PESTOP' EQ 'NO').CHKPROF                              01750000
         AIF   ('&PESTOP' NE 'YES').INVPES                              01751000
&PEFLAG  SETA  255                Set flag                              01752000
         AGO   .CHKPROF                                                 01753000
.INVPES  ANOP                                                           01754000
         MNOTE 4,'Invalid PESTOP value &PESTOP; NO assumed'             01755000
.CHKPROF ANOP                                                           01756000
         AIF   ('&PROFILE' EQ 'NO').CHKPROFM                            01757000
         AIF   ('&PROFILE' NE 'YES').INVPROF                            01758000
&PARM77  SETB  1                  Set flag PROFILE=YES                  01759000
         AGO   .CHKPROFM                                                01760000
.INVPROF ANOP                                                           01761000
         MNOTE 4,'Invalid PROFILE value &PROFILE; NO assumed'           01762000
.CHKPROFM ANOP                                                          01763000
         AIF   (K'&PROFMEM EQ 0).INVPROFM                               01764000
         AIF   (K'&PROFMEM GT 8).INVPROFM                               01765000
&PROFMEMB SETC  '&PROFMEM'                                              01766000
         AGO   .CHKPUSH                                        @PQ22004 01767000
.INVPROFM ANOP                                                          01768000
&PROFMEMB SETC  'ASMAPROF'                                              01769000
         MNOTE 4,'Invalid PROFILE member name; ASMAPROF assumed'        01770000
.*                                                             @PQ22004 01771000
.CHKPUSH ANOP                                                  @PQ22004 01772000
         AIF   ('&PUSHWARN' EQ 'NO').CHKRA2                    @PQ22004 01773000
&PARM26  SETB  1                  Set flag                     @PQ22004 01774000
         AIF   ('&PUSHWARN' EQ 'YES').CHKRA2                   @PQ22004 01775000
         MNOTE 4,'Invalid PUSHWARN value &PUSHWARN; YES assumed'       X01776000
                                                               @PQ22004 01777000
.*                                                                      01778000
.CHKRA2  ANOP                                                           01779000
         AIF   ('&RA2' EQ 'NO').CHKRECI                                 01780000
         AIF   ('&RA2' NE 'YES').INVRA2                                 01781000
&PARMB2  SETB  1                  Set flag                              01782000
         AGO   .CHKRECI                                                 01783000
.INVRA2  ANOP                                                           01784000
         MNOTE 4,'Invalid RA2 value &RA2; NO assumed'                   01785000
.*                                                                      01786000
.CHKRECI ANOP                                                           01787000
         AIF   ('&RECORDINFO' EQ 'NO').CHKREN                           01788000
&PARM80  SETB  1                  Set flag to YES                       01789000
         AIF   ('&RECORDINFO' EQ 'YES').CHKREN                          01790000
         MNOTE 4,'Invalid RECORDINFO value &RECORDINFO; YES assumed'   X01791000
                                                                        01792000
.*                                                                      01793000
.CHKREN  ANOP                                                           01794000
         AIF   ('&RENT' EQ 'NO').CHKRLD                                 01795000
         AIF   ('&RENT' NE 'YES').INVREN                                01796000
&PARM04  SETB  1                  Set flag                              01797000
         AGO   .CHKRLD                                                  01798000
.INVREN  ANOP                                                           01799000
         MNOTE 4,'Invalid RENT value &RENT; NO assumed'                 01800000
.*                                                                      01801000
.CHKRLD  ANOP                                                           01802000
         AIF   ('&RLD' EQ 'NO').CHKRXRF                                 01803000
         AIF   ('&RLD' NE 'YES').INVRLD                                 01804000
&PARM11  SETB  1                  Set flag                              01805000
         AGO   .CHKRXRF                                                 01806000
.INVRLD  ANOP                                                           01807000
         MNOTE 4,'Invalid RLD value &RLD; YES assumed'                  01808000
&PARM11  SETB  1                  Set flag                              01809000
.*                                                                      01810000
.CHKRXRF ANOP                                                           01811000
         AIF   ('&RXREF' EQ 'NO').CHKSALGN                         @v6c 01812000
         AIF   ('&RXREF' NE 'YES').INVRXRF                              01813000
&PARM17  SETB  1                  Set flag                              01814000
         AGO   .CHKSALGN                                           @v6c 01815000
.INVRXRF ANOP                                                           01816000
         MNOTE 4,'Invalid RXREF value &RXREF; YES assumed'              01817000
&PARM17  SETB  1                  Set flag                              01818000
.*                                                                 @v6a 01819000
.CHKSALGN ANOP                                                     @v6a 01820000
         AIF   (K'&SECTALGN EQ 0).INVSALGN                         @v6a 01821000
&A       SETA  1                                                   @v6a 01822000
.CKSALGN1 ANOP                                                     @v6a 01823000
         AIF   (&A GT K'&SECTALGN).CKSALGN2                        @v6a 01824000
         AIF   ('&SECTALGN'(&A,1) LT '0').INVSALGN                 @v6a 01825000
         AIF   ('&SECTALGN'(&A,1) GT '9').INVSALGN                 @v6a 01826000
&A       SETA  &A+1                                                @v6a 01827000
         AGO   .CKSALGN1                                           @v6a 01828000
.CKSALGN2 ANOP                                                     @v6a 01829000
         AIF   (&SECTALGN EQ 8).CKSALGN3                           @v6a 01830000
         AIF   (&SECTALGN EQ 16).CKSALGN3                          @v6a 01831000
         AIF   (&SECTALGN EQ 32).CKSALGN3                          @v6a 01832000
         AIF   (&SECTALGN EQ 64).CKSALGN3                          @v6a 01833000
         AIF   (&SECTALGN EQ 128).CKSALGN3                         @v6a 01834000
         AIF   (&SECTALGN EQ 256).CKSALGN3                         @v6a 01835000
         AIF   (&SECTALGN EQ 512).CKSALGN3                         @v6a 01836000
         AIF   (&SECTALGN EQ 1024).CKSALGN3                        @v6a 01837000
         AIF   (&SECTALGN EQ 2048).CKSALGN3                        @v6a 01838000
         AIF   (&SECTALGN EQ 4096).CKSALGN3                        @v6a 01839000
.INVSALGN ANOP                                                     @v6a 01840000
         MNOTE 4,'Invalid SECTALGN value &SECTALGN; 8 assumed'     @v6a 01841000
&SALGN   SETA  8                                                   @v6a 01842000
         AGO   .CHKSIZ                                             @v6a 01843000
.CKSALGN3 ANOP                                                     @v6a 01844000
&PARM35  SETB  1                  Set flag                         @v6a 01845000
&SALGN   SETA  &SECTALGN                                           @v6a 01846000
.*                                                                      01847000
.CHKSIZ  ANOP                                                           01848000
&MAXS    SETA  0                  Indicate not MAX                      01849000
&PARM25  SETB  1                  Set flag                              01850000
&SIZEA   SETA  0                  Default (=MAX)                        01851000
&SIZES   SETC  ''                 Set sign for SIZE (+ve)               01852000
         AIF   (K'&SIZE EQ 0).INVSIZ                                    01853000
         AIF   ('&SIZE' NE 'MAX').CKSIZ0                                01854000
&MAXS    SETA  1                  Indicate MAX                          01855000
         AGO   .CHKSTOR                                                 01856000
.CKSIZ0  ANOP                                                           01857000
&KM      SETC  '&SIZE'(K'&SIZE,1)                                       01858000
         AIF   (('&KM' NE 'K') AND ('&KM' NE 'M')).INVSIZ               01859000
&SIZEC   SETC  '&SIZE'(1,K'&SIZE-1) Strip trailing K or M               01860000
         AIF   ('&SIZEC'(1,4) NE 'MAX-').CKSIZ1                         01861000
&MAXS    SETA  1                  Indicate MAX                          01862000
&SIZEC   SETC  '&SIZEC'(5,K'&SIZEC) Strip leading MAX-                  01863000
&SIZES   SETC  '-'                Set sign for SIZE (-ve)               01864000
.CKSIZ1  ANOP                                                           01865000
         AIF   (K'&SIZEC EQ 0).INVSIZ                                   01866000
&A       SETA  1                  Loop counter                          01867000
.CKSIZ2  ANOP                                                           01868000
         AIF   (&A GT K'&SIZEC).CKSIZ3                                  01869000
         AIF   ('&SIZEC'(&A,1) LT '0').INVSIZ                           01870000
         AIF   ('&SIZEC'(&A,1) GT '9').INVSIZ                           01871000
&A       SETA  &A+1               Bump loop counter                     01872000
         AGO   .CKSIZ2                                                  01873000
.CKSIZ3  ANOP                                                           01874000
&SIZEA   SETA  &SIZEC             Convert to arithmetic                 01875000
&SIZEA   SETA  &SIZEA*1024        Assume K                              01876000
         AIF   ('&KM' EQ 'M').CKSIZ4     If nnM continue                01877000
         AIF   ('&SIZES' EQ '-').CHKSTOR  If MAX-nnnK continue          01878000
         AIF   (&SIZEA GE 200*1024).CHKSTOR  If nnnK and nnn<200        01879000
&SIZEA   SETA  200*1024           Default (=MIN)                        01880000
         MNOTE 4,'Invalid SIZE value &SIZE; 200K assumed'               01881000
         AGO   .CHKSTOR                                                 01882000
.CKSIZ4  ANOP                                                           01883000
&SIZEA   SETA  &SIZEA*1024        Was really M                          01884000
         AGO   .CHKSTOR                                                 01885000
.INVSIZ  ANOP                                                           01886000
&MAXS    SETA  1                  Indicate MAX                          01887000
         MNOTE 4,'Invalid SIZE value &SIZE; MAX assumed'                01888000
.*                                                                      01889000
.CHKSTOR ANOP                                                           01890000
         AIF   ('&STORAGE' EQ 'BELOW').CHKST00                          01891000
         AIF   ('&STORAGE' EQ 'ABOVE').CHKST01                          01892000
&PARM15  SETB  0                                                        01893000
         AIF   (K'&STORAGE EQ 0).CHKSUBSTR                              01894000
       MNOTE 4,'Invalid STORAGE value &STORAGE; ABOVE assumed' @PQ89655 01895000
         ago   .chkst01                                        @PQ89655 01895300
.CHKST00 ANOP                                                           01896000
         AIF   (&MAXS EQ 1).CHKSUBSTR                                   01897000
         MNOTE 0,'STORAGE=BELOW only takes effect when SIZE includes MA-01898000
               X'                                                       01899000
         AGO   .CHKSUBSTR                                               01900000
.CHKST01 ANOP                                                           01901000
&PARM15  SETB  1                                                        01902000
         AIF   (&MAXS EQ 1).CHKSUBSTR                                   01903000
         MNOTE 0,'STORAGE=ABOVE only takes effect when SIZE includes MA-01904000
               X'                                                       01905000
.*                                                                      01906000
.CHKSUBSTR ANOP                                                         01907000
         AIF   ('&SUBSTRWARN' EQ 'NO').CHKSUPR                     @v6c 01908000
         AIF   ('&SUBSTRWARN' NE 'YES').INVSUBSTR                       01909000
&PARMB5  SETB  1                  Set flag                              01910000
         AGO   .CHKSUPR                                            @v6c 01911000
.INVSUBSTR ANOP                                                         01912000
        MNOTE 4,'Invalid SUBSTRWARN value &SUBSTRWARN; NO assumed'      01913000
.*                                                                 @v6a 01914000
.CHKSUPR ANOP                                                      @v6a 01915000
&SUPRNUM SETA  0                                                   @v6a 01916000
         AIF   ('&SUPRWARN' EQ 'NO').CHKSYSP                       @v6a 01917000
&A       SETA  0                               Set loop counter    @v6a 01918000
.CKSUP1  ANOP                                                      @v6a 01919000
&A       SETA  &A+1                            Bump loop counter   @v6a 01920000
         AIF   (&A GT N'&SUPRWARN).CHKSYSP                         @v6a 01921000
&MSGNO   SETC  '&SUPRWARN(&A)'                 Save message number @v6a 01922000
         AIF   (K'&MSGNO EQ 0).CKSUP1                              @v6a 01923000
&B       SETA  1                               Set loop counter    @v6a 01924000
.CKSUP3  ANOP                                                      @v6a 01925000
         AIF   (&B GT K'&MSGNO).CKSUP4                             @v6a 01926000
         AIF   ('&MSGNO'(&B,1) LT '0').INVSUPR                     @v6a 01927000
         AIF   ('&MSGNO'(&B,1) GT '9').INVSUPR                     @v6a 01928000
&B       SETA  &B+1                            Bump loop counter   @v6a 01929000
         AGO   .CKSUP3                                             @v6a 01930000
.CKSUP4  ANOP                                                      @v6a 01931000
         AIF   ((&MSGNO LE 0) OR (&MSGNO GT 9999)).INVSUPR         @v6a 01932000
&C       SETA  0                               Set loop counter    @v6a 01933000
.CKSUP5  ANOP                                                      @v6a 01934000
&C       SETA  &C+1                            Bump loop counter   @v6a 01935000
         AIF   (&C GT &SUPRNUM).CKSUP6                             @v6a 01936000
         AIF   (&MSGNO EQ &SUPRMSG(&C)).DUPSUPR                    @v6a 01937000
         AGO   .CKSUP5                                             @v6a 01938000
.CKSUP6  ANOP                                                      @v6a 01939000
&PARMC0              SETB  1                   SUPRWARN is ON      @v6a 01940000
&SUPRNUM             SETA  &SUPRNUM+1          Bump # of mags      @v6a 01941000
&SUPRMSG(&SUPRNUM)   SETA  &MSGNO              Save message number @v6a 01942000
         AGO   .CKSUP1                                             @v6a 01943000
.INVSUPR ANOP                                                      @v6a 01944000
         MNOTE 4,'Invalid SUPRWARN value &MSGNO; ignored'          @v6a 01945000
         AGO   .CKSUP1                                             @v6a 01946000
.DUPSUPR ANOP                                                      @v6a 01947000
         MNOTE 4,'Duplicate SUPRWARN value &MSGNO; ignored'        @v6a 01948000
         AGO   .CKSUP1                                             @v6a 01949000
.*                                                                      01950000
.CHKSYSP ANOP                                                           01951000
&SYSPC   SETC  '&SYSPARMV'                                              01952000
&SYSPL   SETA  K'&SYSPC                                                 01953000
         AIF   (&SYSPL EQ 0).CKSYSP1                                    01954000
&PARM50  SETB  1                  Set flag                              01955000
         AIF   ('&SYSPC'(1,1) NE '''').CKSYSP1                          01956000
.*       Remove outer set of apostrophes                                01957000
&SYSPC   SETC  '&SYSPC'(2,K'&SYSPC-2)                                   01958000
&SYSPL   SETA  K'&SYSPC                                                 01959000
.CKSYSP1 ANOP                                                           01960000
&SYSPC   SETC  '&SYSPC'.(255-&SYSPL)' '                                 01961000
.*                                                                      01962000
.CHKTER  ANOP                                                           01963000
         AIF   ('&TERM' EQ 'NO').CHKTES                                 01964000
         AIF   ('&TERM' EQ 'WIDE').TERSET                               01965000
         AIF   ('&TERM' EQ 'YES').TERSET                                01966000
         AIF   ('&TERM' NE 'NARROW').INVTER                             01967000
&PARM21  SETB  1                  Set flag (NARROW)                     01968000
.TERSET  ANOP                                                           01969000
&PARM20  SETB  1                  Set flag (TERM=YES)                   01970000
         AGO   .CHKTES                                                  01971000
.INVTER  ANOP                                                           01972000
         MNOTE 4,'Invalid TERM value &TERM; NO assumed'                 01973000
.*                                                                      01974000
.CHKTES  ANOP                                                           01975000
         AIF   ('&TEST' EQ 'NO').CHKTHR                            @v2m 01976000
         AIF   ('&TEST' NE 'YES').INVTES                                01977000
&PARM05  SETB  1                  Set flag                              01978000
         AGO   .CHKTHR                                                  01979000
.INVTES  ANOP                                                           01980000
         MNOTE 4,'Invalid TEST value &TEST; NO assumed'                 01981000
.*                                                                      01982000
.CHKTHR  ANOP                                                      @v2a 01983000
         AIF   ('&THREAD' EQ 'NO').CHKTRAN                         @v2a 01984000
         AIF   ('&THREAD' NE 'YES').INVTHR                         @v2a 01985000
&PARM27  SETB  1                  Set flag                         @v2a 01986000
         AGO   .CHKTRAN                                            @v2a 01987000
.INVTHR  ANOP                                                      @v2a 01988000
&PARM27  SETB  1                  Set flag                         @v2a 01989000
         MNOTE 4,'Invalid THREAD value &THREAD; YES assumed'       @v2a 01990000
.*                                                                      01991000
.CHKTRAN ANOP                                                           01992000
         AIF   ('&TRANSLATE' EQ 'NO').CHKTYPE                  @PQ69375 01993000
         AIF   (K'&TRANSLATE EQ 0).CHKTYPE                     @PQ69375 01994000
         AIF   (K'&TRANSLATE GT 2).INVTRAN                              01995000
&XLATE   SETC  '&TRANSLATE'                                             01996000
&PARM74  SETB  1                  Set flag TRANSLATE(xx)                01997000
         AGO   .CHKTYPE                                        @PQ74561 01998000
.INVTRAN ANOP                                                           01999000
         MNOTE 4,'Invalid TRANSLATE value &TRANSLATE; ignored'          02000000
.*                                                                 @v3a 02001000
.CHKTYPE ANOP                                                      @v3a 02002000
         AIF   ('&TYPECHECK' EQ 'NO').CHKUS0                       @v3a 02003000
&PARMA1  SETB  1                          Default MAGNITUDE        @v6a 02004000
&PARMA3  SETB  1                          Default REGISTER         @v6a 02005000
         AIF   ('&TYPECHECK' EQ 'YES').CHKUS0                      @v6a 02006000
&A       SETA  0                                                   @v6a 02007000
.CKTYPE1 ANOP                             Loop through sub-options @v6a 02008000
&A       SETA  &A+1                                                @v6a 02009000
         AIF   (&A GT N'&TYPECHECK).CHKUS0                         @v6a 02010000
&X       SETC  '&TYPECHECK(&A)'           Save sub-option          @v6a 02011000
         AIF   ('&X' NE 'MAGNITUDE').CKTYPE2                       @v6a 02012000
&PARMA1  SETB  1                                                   @v6a 02013000
&PARMA1N SETB  0                                                   @v6a 02014000
         AGO   .CKTYPE1                                            @v6a 02015000
.CKTYPE2 ANOP                                                      @v6a 02016000
         AIF   ('&X' NE 'REGISTER').CKTYPE3                        @v6a 02017000
&PARMA3  SETB  1                                                   @v6a 02018000
&PARMA3N SETB  0                                                   @v6a 02019000
         AGO   .CKTYPE1                                            @v6a 02020000
.CKTYPE3 ANOP                                                      @v6a 02021000
         AIF   ('&X' NE 'NOMAGNITUDE').CKTYPE4                     @v6a 02022000
&PARMA1  SETB  0                                                   @v6a 02023000
&PARMA1N SETB  1                                                   @v6a 02024000
         AGO   .CKTYPE1                                            @v6a 02025000
.CKTYPE4 ANOP                                                      @v6a 02026000
         AIF   ('&X' NE 'NOREGISTER').TYPERR                       @v6a 02027000
&PARMA3  SETB  0                                                   @v6a 02028000
&PARMA3N SETB  1                                                   @v6a 02029000
         AGO   .CKTYPE1                                            @v6a 02030000
.TYPERR  ANOP                                                      @v6c 02031000
         MNOTE 4,'Invalid TYPECHECK option &X; ignored'            @v6c 02032000
         AGO   .CKTYPE1                                            @v6c 02033000
.*                                                                      02034000
.CHKUS0  ANOP                                                  @PQ35537 02035000
         AIF   ('&USING0WARN' EQ 'NO').CHKXLIT                 @PQ67377 02036000
&PARMB0  SETB  1                  Set flag                     @PQ35537 02037000
         AIF   ('&USING0WARN' EQ 'YES').CHKXLIT                @PQ67377 02038000
         MNOTE 4,'Invalid USING0WARN value &USING0WARN; YES assumed'   X02039000
                                                               @PQ35537 02040000
.*                                                             @PQ67377 02041000
.CHKXLIT ANOP                                                  @PQ67377 02042000
         AIF   ('&EXLITW' EQ 'NO').CHKLIM                      @PQ67377 02043000
&PARMA0  SETB  1                  Set flag                     @PQ67377 02044000
         AIF   ('&EXLITW' EQ 'YES').CHKLIM                     @PQ67377 02045000
         MNOTE 4,'Invalid EXLITW value &EXLITW; YES assumed'   @PQ67377 02046000
.*                                                                      02047000
.CHKLIM  ANOP                                                           02048000
&ULIM    SETA  4095               Set value                             02049000
         AIF   ('&LIMIT' EQ 'NO').CHKMAP                                02050000
&A       SETA  1                  Loop counter                          02051000
.CKLIM1  ANOP                                                           02052000
         AIF   (&A GT K'&LIMIT).CKLIM2                                  02053000
         AIF   ('&LIMIT'(&A,1) LT '0').INVLIM                           02054000
         AIF   ('&LIMIT'(&A,1) GT '9').INVLIM                           02055000
&A       SETA  &A+1               Bump loop counter                     02056000
         AGO   .CKLIM1                                                  02057000
.CKLIM2  ANOP                                                           02058000
&ULIM    SETA  &LIMIT             Set value                             02059000
&PARM42  SETB  1                  Set flag                              02060000
         AIF   ((&ULIM GE 0) AND (&ULIM LE 4095)).CHKMAP                02061000
.INVLIM  ANOP                                                           02062000
         MNOTE 4,'Invalid LIMIT value &LIMIT; NO (4095) assumed'        02063000
&ULIM    SETA  4095               Set value                             02064000
&PARM42  SETB  0                  Clear flag                            02065000
.*                                                                      02066000
.CHKMAP  ANOP                                                           02067000
         AIF   ('&MAP' EQ 'NO').CHKWAR                                  02068000
         AIF   ('&MAP' NE 'YES').INVMAP                                 02069000
&PARM43  SETB  1                  Set flag                              02070000
         AGO   .CHKWAR                                                  02071000
.INVMAP  ANOP                                                           02072000
         MNOTE 4,'Invalid MAP value &MAP; NO assumed'                   02073000
.*                                                                      02074000
.CHKWAR  ANOP                                                           02075000
&UWARN   SETA  0                  Clear value                           02076000
         AIF   ('&WARN' EQ 'NO').CHKXRF                                 02077000
&A       SETA  1                  Loop counter                          02078000
.CKWAR1  ANOP                                                           02079000
         AIF   (&A GT K'&WARN).CKWAR2                                   02080000
         AIF   ('&WARN'(&A,1) LT '0').INVWAR                            02081000
         AIF   ('&WARN'(&A,1) GT '9').INVWAR                            02082000
&A       SETA  &A+1               Bump loop counter                     02083000
         AGO   .CKWAR1                                                  02084000
.CKWAR2  ANOP                                                           02085000
&UWARN   SETA  &WARN              Set value                             02086000
&PARM41  SETB  1                  Set flag                              02087000
         AIF   ((&UWARN GE 0) AND (&UWARN LE 15)).CHKXRF                02088000
.INVWAR  ANOP                                                           02089000
         MNOTE 4,'Invalid WARN value &WARN; NO (0) assumed'             02090000
&UWARN   SETA  0                  Clear value                           02091000
&PARM41  SETB  0                  Clear flag                            02092000
.*                                                                      02093000
.CHKXRF  ANOP                                                           02094000
&ONEDONE SETB  1                  Indicate XREF=NO by default           02095000
         AIF   ('&XREF' EQ 'NO').CHKEND                                 02096000
&ONEDONE SETB  0                  Indicate none done                    02097000
&PARM03  SETB  1                  Set flag                              02098000
         AIF   ('&XREF' NE 'FULL').CHKSHRT                              02099000
&PARM14  SETB  1                  Set flag                              02100000
         AGO   .COMPLETE                                                02101000
.CHKSHRT ANOP                                                           02102000
&A       SETA  0                  Set loop counter                      02103000
.XRFLOOP ANOP                                                           02104000
&A       SETA  &A+1               Bump loop counter                     02105000
         AIF   (&A GT N'&XREF).CHKEND                                   02106000
         AIF   ('&XREF(&A)' EQ 'FULL').INVXRF                           02107000
         AIF   ('&XREF(&A)' NE 'SHORT').XRFURD                          02108000
&PARM12  SETB  1                  Set flag XREF(SHORT)                  02109000
&ONEDONE SETB  1                  Indicate at least one done            02110000
         AGO   .XRFLOOP                                                 02111000
.XRFURD  ANOP                                                           02112000
         AIF   ('&XREF(&A)' NE 'UNREFS').CHKEND                         02113000
&PARM16  SETB  1                  Set flag XREF(UNREFS)                 02114000
&ONEDONE SETB  1                  Indicate at least one done            02115000
         AGO   .XRFLOOP                                                 02116000
.INVXRF  ANOP                                                           02117000
         MNOTE 4,'Invalid XREF value &XREF; ignored'                    02118000
         AGO   .XRFLOOP                                                 02119000
.CHKEND  ANOP                                                           02120000
         AIF   ('&ONEDONE' EQ '1').COMPLETE                             02121000
         MNOTE 4,'Invalid XREF value &XREF; FULL assumed'               02122000
&PARM14  SETB  1                  Set flag XREF(FULL)                   02123000
.COMPLETE ANOP                                                          02124000
.*                                                                      02125000
.GENCOM1 ANOP                                                           02126000
.*                                                                      02127000
.*       Validation Complete, now Generate Code                         02128000
.*                                                                      02129000
&PARM0   SETA  &PARM00*128+&PARM01*64+&PARM02*32+&PARM03*16             02130000
&PARM0   SETA  &PARM0+&PARM04*8+&PARM05*4+&PARM06*2+&PARM07             02131000
.*                                                                3@v3d 02132000
&PARM1   SETA  &PARM10*128+&PARM11*64+&PARM12*32+&PARM13*16             02133000
&PARM1   SETA  &PARM1+&PARM14*8+&PARM15*4+&PARM16*2+&PARM17             02134000
.*                                                                3@v3d 02135000
&PARM2   SETA  &PARM20*128+&PARM21*64+&PARM22*32+&PARM23*16             02136000
&PARM2   SETA  &PARM2+&PARM24*8+&PARM25*4+&PARM26*2+&PARM27             02137000
.*                                                                      02138000
.* Following bits are spare:                                            02139000
.*      PARM36 - PARM37                                            @v6c 02140000
.*                                                                      02141000
&PARM3   SETA  &PARM30*128+&PARM31*64+&PARM32*32+&PARM33*16             02142000
&PARM3   SETA  &PARM3+&PARM34*8+&PARM35*4+&PARM36*2+&PARM37             02143000
.*                                                                      02144000
&PARM4   SETA  &PARM40*128+&PARM41*64+&PARM42*32+&PARM43*16             02145000
&PARM4   SETA  &PARM4+&PARM44*8+&PARM45*4+&PARM46*2+&PARM47             02146000
.*                                                                      02147000
&PARM5   SETA  &PARM50*128+&PARM51*64+&PARM52*32+&PARM53*16             02148000
&PARM5   SETA  &PARM5+&PARM54*8+&PARM55*4+&PARM56*2+&PARM57             02149000
.*                                                                      02150000
.* Following bits are spare:                                            02151000
.*      PARM63 - PARM67                                       @v3c @v4c 02152000
.*                                                                      02153000
&PARM6   SETA  &PARM60*128+&PARM61*64+&PARM62*32+&PARM63*16             02154000
&PARM6   SETA  &PARM6+&PARM64*8+&PARM65*4+&PARM66*2+&PARM67             02155000
.*                                                                      02156000
&PARM7   SETA  &PARM70*128+&PARM71*64+&PARM72*32+&PARM73*16             02157000
&PARM7   SETA  &PARM7+&PARM74*8+&PARM75*4+&PARM76*2+&PARM77             02158000
.*                                                                      02159000
&PARM8   SETA  &PARM80*128+&PARM81*64+&PARM82*32+&PARM83*16             02160000
&PARM8   SETA  &PARM8+&PARM84*8+&PARM85*4+&PARM86*2+&PARM87             02161000
.*                                                                      02162000
.* Following bits are spare:                                            02163000
.*     PARM90-95                                                        02164000
.*                                                                      02165000
&PARM9   SETA  &PARM90*128+&PARM91*64+&PARM92*32+&PARM93*16             02166000
&PARM9   SETA  &PARM9+&PARM94*8+&PARM95*4+&PARM96*2+&PARM97             02167000
.*                                                                3@v6d 02168000
&PARMA   SETA  &PARMA0*128+&PARMA1*64+&PARMA2*32+&PARMA3*16             02169000
&PARMA   SETA  &PARMA+&PARMA4*8+&PARMA5*4+&PARMA6*2+&PARMA7             02170000
.*                                                                      02171000
.* Following bits are spare:                                            02172000
.*     PARMB0                                                           02173000
.*                                                                      02174000
&PARMB   SETA  &PARMB0*128+&PARMB1*64+&PARMB2*32+&PARMB3*16             02175000
&PARMB   SETA  &PARMB+&PARMB4*8+&PARMB5*4+&PARMB6*2+&PARMB7             02176000
.*                                                                 @v6a 02177000
.* Following bits are spare:                                       @v6a 02178000
.*             PARMC1-PARMC7                                       @v6a 02179000
.*                                                                 @v6a 02180000
&PARMC   SETA  &PARMC0*128+&PARMC1*64+&PARMC2*32+&PARMC3*16        @v6a 02181000
&PARMC   SETA  &PARMC+&PARMC4*8+&PARMC5*4+&PARMC6*2+&PARMC7        @v6a 02182000
.*                                                                 @v6a 02183000
.* Following bits are spare:                                       @v6a 02184000
.*             PARMD0-PARMD7                                       @v6a 02185000
.*                                                                 @v6a 02186000
&PARMD   SETA  &PARMD0*128+&PARMD1*64+&PARMD2*32+&PARMD3*16        @v6a 02187000
&PARMD   SETA  &PARMD+&PARMD4*8+&PARMD5*4+&PARMD6*2+&PARMD7        @v6a 02188000
.*                                                                      02189000
&DELP0   SETA  &DELP00*128+&DELP01*64+&DELP02*32+&DELP03*16             02190000
&DELP0   SETA  &DELP0+&DELP04*8+&DELP05*4+&DELP06*2+&DELP07             02191000
.*                                                                      02192000
&DELP1   SETA  &DELP10*128+&DELP11*64+&DELP12*32+&DELP13*16             02193000
&DELP1   SETA  &DELP1+&DELP14*8+&DELP15*4+&DELP16*2+&DELP17             02194000
.*                                                                      02195000
&DELP2   SETA  &DELP20*128+&DELP21*64+&DELP22*32+&DELP23*16             02196000
&DELP2   SETA  &DELP2+&DELP24*8+&DELP25*4+&DELP26*2+&DELP27             02197000
.*                                                                      02198000
&DELP3   SETA  &DELP30*128+&DELP31*64+&DELP32*32+&DELP33*16             02199000
&DELP3   SETA  &DELP3+&DELP34*8+&DELP35*4+&DELP36*2+&DELP37             02200000
.*                                                                      02201000
&DELP4   SETA  &DELP40*128+&DELP41*64+&DELP42*32+&DELP43*16             02202000
&DELP4   SETA  &DELP4+&DELP44*8+&DELP45*4+&DELP46*2+&DELP47             02203000
.*                                                                      02204000
&DELP5   SETA  &DELP50*128+&DELP51*64+&DELP52*32+&DELP53*16             02205000
&DELP5   SETA  &DELP5+&DELP54*8+&DELP55*4+&DELP56*2+&DELP57             02206000
.*                                                                      02207000
&DELP6   SETA  &DELP60*128+&DELP61*64+&DELP62*32+&DELP63*16             02208000
&DELP6   SETA  &DELP6+&DELP64*8+&DELP65*4+&DELP66*2+&DELP67             02209000
.*                                                                      02210000
&DELP7   SETA  &DELP70*128+&DELP71*64+&DELP72*32+&DELP73*16             02211000
&DELP7   SETA  &DELP7+&DELP74*8+&DELP75*4+&DELP76*2+&DELP77             02212000
.*                                                                      02213000
&DELP8   SETA  &DELP80*128+&DELP81*64+&DELP82*32+&DELP83*16             02214000
&DELP8   SETA  &DELP8+&DELP84*8+&DELP85*4+&DELP86*2+&DELP87             02215000
.*                                                                      02216000
&DELP9   SETA  &DELP90*128+&DELP91*64+&DELP92*32+&DELP93*16             02217000
&DELP9   SETA  &DELP9+&DELP94*8+&DELP95*4+&DELP96*2+&DELP97             02218000
.*                                                                      02219000
&DELPA   SETA  &DELPA0*128+&DELPA1*64+&DELPA2*32+&DELPA3*16             02220000
&DELPA   SETA  &DELPA+&DELPA4*8+&DELPA5*4+&DELPA6*2+&DELPA7             02221000
.*                                                                      02222000
&DELPB   SETA  &DELPB0*128+&DELPB1*64+&DELPB2*32+&DELPB3*16             02223000
&DELPB   SETA  &DELPB+&DELPB4*8+&DELPB5*4+&DELPB6*2+&DELPB7             02224000
.*                                                                 @v6a 02225000
&DELPC   SETA  &DELPC0*128+&DELPC1*64+&DELPC2*32+&DELPC3*16        @v6a 02226000
&DELPC   SETA  &DELPC+&DELPC4*8+&DELPC5*4+&DELPC6*2+&DELPC7        @v6a 02227000
.*                                                                 @v6a 02228000
&DELPD   SETA  &DELPD0*128+&DELPD1*64+&DELPD2*32+&DELPD3*16        @v6a 02229000
&DELPD   SETA  &DELPD+&DELPD4*8+&DELPD5*4+&DELPD6*2+&DELPD7        @v6a 02230000
.*                                                                      02231000
         AIF   ('&DSECT' EQ 'YES').GENDS                                02232000
ASMADOPT AMODE 31                                                       02233000
ASMADOPT RMODE ANY                                                      02234000
ASMADOPT CSECT                    Default Options                       02235000
         AGO   .GENCOM                                                  02236000
.GENDS   ANOP                                                           02237000
ASMAOPT  DSECT                    Default Options                       02238000
.GENCOM  ANOP                                                           02239000
DOVALS   CNOP  0,8                                                      02240000
DOLEVEL  DC    CL5'1.5.0'         HLASM Release 1.5                @v5c 02241000
         DC    CL3' '             Reserved for future use               02242000
DOPARMS  DC    AL1(&PARM0,&PARM1,&PARM2,&PARM3,&PARM4,&PARM5)           02243000
DOPARMS2 DC    AL1(&PARM6,&PARM7,&PARM8,&PARM9,&PARMA,&PARMB)           02244000
DOPARMS3 DC    AL1(&PARMC,&PARMD)                                  @v6c 02245000
DOFLAG   DC    AL1(&MSGL)                                               02246000
DOUWARN  DC    AL1(&UWARN)                                              02247000
DOLNCT   DC    H'&LNCT'                                                 02248000
DOSIZE   DC    F'&SIZES&SIZEA'                                          02249000
DOULIM   DC    H'&ULIM'                                                 02250000
DOSYSPL  DC    H'&SYSPL'                                                02251000
*                                                                       02252000
&TEMPSTR SETC  '&SYSPC'(1,32)                                           02253000
DOSYSPC  DC    CL32'&TEMPSTR'                                           02254000
&TEMPSTR SETC  '&SYSPC'(33,32)                                          02255000
         DC    CL32'&TEMPSTR'                                           02256000
&TEMPSTR SETC  '&SYSPC'(65,32)                                          02257000
         DC    CL32'&TEMPSTR'                                           02258000
&TEMPSTR SETC  '&SYSPC'(97,32)                                          02259000
         DC    CL32'&TEMPSTR'                                           02260000
&TEMPSTR SETC  '&SYSPC'(129,32)                                         02261000
         DC    CL32'&TEMPSTR'                                           02262000
&TEMPSTR SETC  '&SYSPC'(161,32)                                         02263000
         DC    CL32'&TEMPSTR'                                           02264000
&TEMPSTR SETC  '&SYSPC'(193,32)                                         02265000
         DC    CL32'&TEMPSTR'                                           02266000
&TEMPSTR SETC  '&SYSPC'(225,31)                                         02267000
         DC    CL31'&TEMPSTR'                                           02268000
DOSTOP   DC    AL1(&PEFLAG)                                             02269000
DODELS   DC    AL1(&DELP0,&DELP1,&DELP2,&DELP3,&DELP4,&DELP5)           02270000
DODELS2  DC    AL1(&DELP6,&DELP7,&DELP8,&DELP9,&DELPA,&DELPB)           02271000
DODELS3  DC    AL1(&DELPC,&DELPD)                                  @v6c 02272000
*                                                                       02273000
DOOPTAB  DC    CL8'ASMAO&OPT'                                           02274000
         DC    A(0)                                                     02275000
DOMSGTAB DC    CL8'ASMAM&LANG'                                          02276000
         DC    A(0)                                                     02277000
*                                                                       02278000
DOXINN   DC    CL8'&XINN'                                               02279000
         DC    A(0)                                                     02280000
DOXLIBN  DC    CL8'&XLIBN'                                              02281000
         DC    A(0)                                                     02282000
DOXPRTN  DC    CL8'&XPRTN'                                              02283000
         DC    A(0)                                                     02284000
DOXOBJN  DC    CL8'&XOBJN'                                              02285000
         DC    A(0)                                                     02286000
DOXADN   DC    CL8'&XADN'                                               02287000
         DC    A(0)                                                     02288000
DOXINL   DC    AL1(&XINSL)                                              02289000
DOXLIBL  DC    AL1(&XLIBSL)                                             02290000
DOXPRTL  DC    AL1(&XPRTSL)                                             02291000
DOXOBJL  DC    AL1(&XOBJSL)                                             02292000
DOXADL   DC    AL1(&XADSL)                                              02293000
         DC    AL1(0,0,0)         For future expansion                  02294000
&TEMPSTR SETC  '&XINS'(1,32)                                            02295000
DOXINS   DC    CL32'&TEMPSTR'                                           02296000
&TEMPSTR SETC  '&XINS'(33,32)                                           02297000
         DC    CL32'&TEMPSTR'                                           02298000
&TEMPSTR SETC  '&XLIBS'(1,32)                                           02299000
DOXLIBS  DC    CL32'&TEMPSTR'                                           02300000
&TEMPSTR SETC  '&XLIBS'(33,32)                                          02301000
         DC    CL32'&TEMPSTR'                                           02302000
&TEMPSTR SETC  '&XPRTS'(1,32)                                           02303000
DOXPRTS  DC    CL32'&TEMPSTR'                                           02304000
&TEMPSTR SETC  '&XPRTS'(33,32)                                          02305000
         DC    CL32'&TEMPSTR'                                           02306000
&TEMPSTR SETC  '&XOBJS'(1,32)                                           02307000
DOXOBJS  DC    CL32'&TEMPSTR'                                           02308000
&TEMPSTR SETC  '&XOBJS'(33,32)                                          02309000
         DC    CL32'&TEMPSTR'                                           02310000
&TEMPSTR SETC  '&XADS'(1,32)                                            02311000
DOXADS   DC    CL32'&TEMPSTR'                                           02312000
&TEMPSTR SETC  '&XADS'(33,32)                                           02313000
         DC    CL32'&TEMPSTR'                                           02314000
DOXTRMN  DC    CL8'&XTRMN'                                              02315000
         DC    A(0)                                                     02316000
DOXTRML  DC    AL1(&XTRMSL)                                             02317000
&TEMPSTR SETC  '&XTRMS'(1,32)                                           02318000
DOXTRMS  DC    CL32'&TEMPSTR'                                           02319000
&TEMPSTR SETC  '&XTRMS'(33,32)                                          02320000
         DC    CL32'&TEMPSTR'                                           02321000
*                                                                       02322000
DOSIN    DC    CL8'SYSIN'                                               02323000
DOSLIB   DC    CL8'SYSLIB'                                              02324000
DOSLIN   DC    CL8'SYSLIN'                                              02325000
DOSADATA DC    CL8'SYSADATA'                                            02326000
DOSPRINT DC    CL8'SYSPRINT'                                            02327000
DOSPUNCH DC    CL8'SYSPUNCH'                                            02328000
DOSTERM  DC    CL8'SYSTERM'                                             02329000
DOSUT1   DC    CL8'SYSUT1'                                              02330000
DOAOPT   DC    CL8'ASMAOPT'                                        @v2a 02331000
*                                                                       02332000
DODATE   DC    CL8'&SYSDATC'                                            02333000
DOTIME   DC    CL8'&SYSTIME'                                            02334000
         DC    AL1(0,0)          Reserved for future                    02335000
DOHDRTAB DC    CL8'ASMA4&LANG'   Listing Headers                        02336000
DOXLATE  DC    CL8'ASMALT&XLATE' Translate Table (Blanks if none)       02337000
DOPROF   DC    CL8'&PROFMEMB '   Profile Library Member Name            02338000
DOINFODT DC    CL8'&INFODATE '   INFO option date                  @l1a 02339000
DOCPSTAB DC    CL8'ASMA&CODEPAGE'                                  @v2a 02340000
         DC    AL1(0)            Reserved                          @v6a 02341000
DOSALGN  DC    A(&SALGN)           SECTALGN value                  @v6a 02342000
DOSUPNUM DC    A(&SUPRNUM)         Number of suppressed messages   @v6a 02343000
         AIF   (&SUPRNUM GT 0).SUPROFF                             @v6a 02344000
DOSUPOFF DC    A(0)                Offset of suppressed messages   @v6a 02345000
         AGO   .SUPRMSGS                                           @v6a 02346000
.SUPROFF  ANOP                                                     @v6a 02347000
DOSUPOFF DC    A(DOSUPTBL-DOVALS)  Offset of suppressed messages   @v6a 02348000
.*                                                                 @v6a 02349000
.SUPRMSGS ANOP                                                     @v6a 02350000
DOSUPTBL DC    0H                  Table of suppressed messages    @v6a 02351000
&A       SETA  1                               Set loop counter    @v6a 02352000
.BLDSUP1 ANOP                                                      @v6a 02353000
         AIF   (&A GT &SUPRNUM).BLDSUP2        Finished?           @v6a 02354000
         DC    AL2(&SUPRMSG(&A))                                   @v6a 02355000
&A       SETA  &A+1                            Bump loop counter   @v6a 02356000
         AGO   .BLDSUP1                                            @v6a 02357000
.BLDSUP2 ANOP                                                      @v6a 02358000
.*                                                                      02359000
.*       Generation Complete, now List Options in Effect                02360000
.*                                                                      02361000
         AIF   ('&DSECT' EQ 'YES').ENDM                                 02362000
&S1      SETC  (69)'*'                                                  02363000
         MNOTE *,'&S1'                                                  02364000
         MNOTE *,' IBM High Level Assembler OPTIONS in Effect:'         02365000
         MNOTE *,' ==========================================='         02366000
         MNOTE *,'                  '                                   02367000
&POS     SETA  0                                               @PQ39402 02368000
.* ADATA-PARM55                                                         02369000
&S1      SETC  (&DELP55)'*'.(1-&DELP55)' '                              02370000
&S1      SETC  '&S1'.(1-&PARM55)'NO'.(&PARM55)'  '                      02371000
&S1      SETC  '&S1'.'ADATA'                                            02372000
&POS     SETA  &POS+1                                          @PQ39402 02373000
&S(&POS) SETC  '&S1'                                           @PQ35537 02374000
.* ALIGN-PARM07                                                         02375000
&S1      SETC  (&DELP07)'*'.(1-&DELP07)' '                              02376000
&S1      SETC  '&S1'.(1-&PARM07)'NO'.(&PARM07)'  '                      02377000
&S1      SETC  '&S1'.'ALIGN'                                            02378000
&POS     SETA  &POS+1                                          @PQ39402 02379000
&S(&POS) SETC  '&S1'                                           @PQ35537 02380000
.* ASA-PARM40                                                           02381000
&S1      SETC  (&DELP40)'*'.(1-&DELP40)' '                              02382000
&S1      SETC  '&S1'.(1-&PARM40)'NO'.(&PARM40)'  '                      02383000
&S1      SETC  '&S1'.'ASA'                                              02384000
&POS     SETA  &POS+1                                          @PQ39402 02385000
&S(&POS) SETC  '&S1'                                           @PQ35537 02386000
.* BATCH-PARM06                                                         02387000
&S1      SETC  (&DELP06)'*'.(1-&DELP06)' '                              02388000
&S1      SETC  '&S1'.(1-&PARM06)'NO'.(&PARM06)'  '                      02389000
&S1      SETC  '&S1'.'BATCH'                                            02390000
&POS     SETA  &POS+1                                          @PQ39402 02391000
&S(&POS) SETC  '&S1'                                           @PQ35537 02392000
.* CODEPAGE - PARM95                                               @v2a 02393000
&S1      SETC  (&DELP95)'*'.(1-&DELP95)' '                         @v2a 02394000
&S1      SETC  '&S1'.'  CODEPAGE(&CODEPG)'                         @v2a 02395000
.* COMPAT(CASE)-PARMA4                                                  02396000
&S1      SETC  (&DELPA4)'*'.(1-&DELPA4)' '                     @PQ35537 02397000
&S1      SETC  '&S1'.(1-(&PARMA4+&PARMA4N))'NO'.(&PARMA4+&PARMA4N)'  '  02398000
&S1      SETC  '&S1'.'COMPAT('.(&PARMA4N)'NO'.'CASE)'          @PQ35537 02399000
&POS     SETA  &POS+1                                          @PQ39402 02400000
&S(&POS) SETC  '&S1'                                           @PQ35537 02401000
.* COMPAT(LITTYPE)-PARMA6                                               02402000
&S1      SETC  (&DELPA6)'*'.(1-&DELPA6)' '                         @l1a 02403000
&S1      SETC  '&S1'.(1-(&PARMA6+&PARMA6N))'NO'.(&PARMA6+&PARMA6N)'  '  02404000
&S1      SETC  '&S1'.'COMPAT('.(&PARMA6N)'NO'.'LITTYPE)'           @l1a 02405000
&POS     SETA  &POS+1                                          @PQ39402 02406000
&S(&POS) SETC  '&S1'                                           @PQ35537 02407000
.* COMPAT(MACROCASE)-PARMA7                                    @PQ35537 02408000
&S1      SETC  (&DELPA7)'*'.(1-&DELPA7)' '                     @PQ35537 02409000
&S1      SETC  '&S1'.(1-(&PARMA7+&PARMA7N))'NO'.(&PARMA7+&PARMA7N)'  ' +02410000
                                                               @PQ35537 02411000
&S1      SETC  '&S1'.'COMPAT('.(&PARMA7N)'NO'.'MACROCASE)'     @PQ35537 02412000
&POS     SETA  &POS+1                                          @PQ39402 02413000
&S(&POS) SETC  '&S1'                                           @PQ35537 02414000
.* COMPAT(SYSLIST)-PARMA5                                      @PQ35537 02415000
&S1      SETC  (&DELPA5)'*'.(1-&DELPA5)' '                     @PQ35537 02416000
&S1      SETC  '&S1'.(1-(&PARMA5+&PARMA5N))'NO'.(&PARMA5+&PARMA5N)'  ' +02417000
                                                               @PQ35537 02418000
&S1      SETC  '&S1'.'COMPAT('.(&PARMA5N)'NO'.'SYSLIST)'       @PQ35537 02419000
&POS     SETA  &POS+1                                          @PQ39402 02420000
&S(&POS) SETC  '&S1'                                           @PQ35537 02421000
.* DBCS-PARM22                                                 @PQ35537 02422000
&S1      SETC  (&DELP22)'*'.(1-&DELP22)' '                     @PQ35537 02423000
&S1      SETC  '&S1'.(1-&PARM22)'NO'.(&PARM22)'  '             @PQ35537 02424000
&S1      SETC  '&S1'.'DBCS'                                    @PQ35537 02425000
&POS     SETA  &POS+1                                          @PQ39402 02426000
&S(&POS) SETC  '&S1'                                           @PQ35537 02427000
.* DECK-PARM00                                                 @PQ35537 02428000
&S1      SETC  (&DELP00)'*'.(1-&DELP00)' '                     @PQ35537 02429000
&S1      SETC  '&S1'.(1-&PARM00)'NO'.(&PARM00)'  '             @PQ35537 02430000
&S1      SETC  '&S1'.'DECK'                                    @PQ35537 02431000
&POS     SETA  &POS+1                                          @PQ39402 02432000
&S(&POS) SETC  '&S1'                                           @PQ35537 02433000
.* DXREF-PARM23                                                @PQ35537 02434000
&S1      SETC  (&DELP23)'*'.(1-&DELP23)' '                     @PQ35537 02435000
&S1      SETC  '&S1'.(1-&PARM23)'NO'.(&PARM23)'  '             @PQ35537 02436000
&S1      SETC  '&S1'.'DXREF'                                   @PQ35537 02437000
&POS     SETA  &POS+1                                          @PQ39402 02438000
&S(&POS) SETC  '&S1'                                           @PQ35537 02439000
.* ESD-PARM10                                                  @PQ35537 02440000
&S1      SETC  (&DELP10)'*'.(1-&DELP10)' '                     @PQ35537 02441000
&S1      SETC  '&S1'.(1-&PARM10)'NO'.(&PARM10)'  '             @PQ35537 02442000
&S1      SETC  '&S1'.'ESD'                                     @PQ35537 02443000
&POS     SETA  &POS+1                                          @PQ39402 02444000
&S(&POS) SETC  '&S1'                                           @PQ35537 02445000
.* FLAG(ALIGN)-PARMB3                                          @PQ35537 02446000
&S1      SETC  (&DELPB3)'*'.(1-&DELPB3)' '                     @PQ35537 02447000
&S1      SETC  '&S1'.'  FLAG('                                 @PQ35537 02448000
&S1      SETC  '&S1'.(1-&PARMB3)'NO'                           @PQ35537 02449000
&S1      SETC  '&S1'.'ALIGN)'                                  @PQ35537 02450000
&POS     SETA  &POS+1                                          @PQ39402 02451000
&S(&POS) SETC  '&S1'                                           @PQ35537 02452000
.* FLAG(CONT)-PARMB4                                           @PQ35537 02453000
&S1      SETC  (&DELPB4)'*'.(1-&DELPB4)' '                     @PQ35537 02454000
&S1      SETC  '&S1'.'  FLAG('                                 @PQ35537 02455000
&S1      SETC  '&S1'.(1-&PARMB4)'NO'                           @PQ35537 02456000
&S1      SETC  '&S1'.'CONT)'                                   @PQ35537 02457000
&POS     SETA  &POS+1                                          @PQ39402 02458000
&S(&POS) SETC  '&S1'                                           @PQ35537 02459000
.* FLAG(EXLITW)-PARMA0                                         @PQ67377 02460000
&S1      SETC  (&DELPA0)'*'.(1-&DELPA0)' '                     @PQ67377 02461000
&S1      SETC  '&S1'.'  FLAG('                                 @PQ67377 02462000
&S1      SETC  '&S1'.(1-&PARMA0)'NO'                           @PQ67377 02463000
&S1      SETC  '&S1'.'EXLITW)'                                 @PQ67377 02464000
&POS     SETA  &POS+1                                          @PQ67377 02465000
&S(&POS) SETC  '&S1'                                           @PQ67377 02466000
.* FLAG(IMPLEN)-PARMB6                                         @PQ35537 02467000
&S1      SETC  (&DELPB6)'*'.(1-&DELPB6)' '                     @PQ35537 02468000
&S1      SETC  '&S1'.'  FLAG('                                 @PQ35537 02469000
&S1      SETC  '&S1'.(1-&PARMB6)'NO'                           @PQ35537 02470000
&S1      SETC  '&S1'.'IMPLEN)'                                 @PQ35537 02471000
&POS     SETA  &POS+1                                          @PQ39402 02472000
&S(&POS) SETC  '&S1'                                           @PQ35537 02473000
.* FLAG(PAGE0)-PARMB7                                          @PQ35537 02474000
&S1      SETC  (&DELPB7)'*'.(1-&DELPB7)' '                     @PQ35537 02475000
&S1      SETC  '&S1'.'  FLAG('                                 @PQ35537 02476000
&S1      SETC  '&S1'.(1-&PARMB7)'NO'                           @PQ35537 02477000
&S1      SETC  '&S1'.'PAGE0)'                                  @PQ35537 02478000
&POS     SETA  &POS+1                                          @PQ39402 02479000
&S(&POS) SETC  '&S1'                                           @PQ35537 02480000
.* FLAG(PUSH)-PARM26                                           @PQ35537 02481000
&S1      SETC  (&DELP26)'*'.(1-&DELP26)' '                     @PQ35537 02482000
&S1      SETC  '&S1'.'  FLAG('                                 @PQ35537 02483000
&S1      SETC  '&S1'.(1-&PARM26)'NO'                           @PQ35537 02484000
&S1      SETC  '&S1'.'PUSH)'                                   @PQ35537 02485000
&POS     SETA  &POS+1                                          @PQ39402 02486000
&S(&POS) SETC  '&S1'                                           @PQ35537 02487000
.* FLAG(RECORD)-PARM80                                         @PQ35537 02488000
&S1      SETC  (&DELP80)'*'.(1-&DELP80)' '                     @PQ35537 02489000
&S1      SETC  '&S1'.'  FLAG('                                 @PQ35537 02490000
&S1      SETC  '&S1'.(1-&PARM80)'NO'                           @PQ35537 02491000
&S1      SETC  '&S1'.'RECORD)'                                 @PQ35537 02492000
&POS     SETA  &POS+1                                          @PQ39402 02493000
&S(&POS) SETC  '&S1'                                           @PQ35537 02494000
.* FLAG(SUBSTR)-PARMB5                                         @PQ35537 02495000
&S1      SETC  (&DELPB5)'*'.(1-&DELPB5)' '                     @PQ35537 02496000
&S1      SETC  '&S1'.'  FLAG('                                 @PQ35537 02497000
&S1      SETC  '&S1'.(1-&PARMB5)'NO'                           @PQ35537 02498000
&S1      SETC  '&S1'.'SUBSTR)'                                 @PQ35537 02499000
&POS     SETA  &POS+1                                          @PQ39402 02500000
&S(&POS) SETC  '&S1'                                           @PQ35537 02501000
.* FLAG(USING0)-PARMB0                                         @PQ35537 02502000
&S1      SETC  (&DELPB0)'*'.(1-&DELPB0)' '                     @PQ35537 02503000
&S1      SETC  '&S1'.'  FLAG('                                 @PQ35537 02504000
&S1      SETC  '&S1'.(1-&PARMB0)'NO'                           @PQ35537 02505000
&S1      SETC  '&S1'.'USING0)'                                 @PQ35537 02506000
&POS     SETA  &POS+1                                          @PQ39402 02507000
&S(&POS) SETC  '&S1'                                           @PQ35537 02508000
.* FLAG(n)-PARM51                                              @PQ35537 02509000
&S1      SETC  (&DELP51)'*'.(1-&DELP51)' '.'  FLAG(&MSGL)'     @PQ35537 02510000
&POS     SETA  &POS+1                                          @PQ39402 02511000
&S(&POS) SETC  '&S1'                                           @PQ35537 02512000
.* FOLD-PARM24                                                 @PQ35537 02513000
&S1      SETC  (&DELP24)'*'.(1-&DELP24)' '                     @PQ35537 02514000
&S1      SETC  '&S1'.(1-&PARM24)'NO'.(&PARM24)'  '             @PQ35537 02515000
&S1      SETC  '&S1'.'FOLD'                                    @PQ35537 02516000
&POS     SETA  &POS+1                                          @PQ39402 02517000
&S(&POS) SETC  '&S1'                                           @PQ35537 02518000
.* INFO-PARM97                                                 @PQ35537 02519000
&S1      SETC  (&DELP97)'*'.(1-&DELP97)' '                     @PQ35537 02520000
&S1      SETC  '&S1'.(1-&PARM97)'NO'.(&PARM97)'  '             @PQ35537 02521000
&S1      SETC  '&S1'.'INFO'                                    @PQ35537 02522000
         AIF   ('&INFODATE' EQ '        ').PTPC                @PQ35537 02523000
&S1      SETC  '&S1'.'('.'&INFODATE'.')'                       @PQ35537 02524000
.PTPC    ANOP                                                  @PQ35537 02525000
&POS     SETA  &POS+1                                          @PQ39402 02526000
&S(&POS) SETC  '&S1'                                           @PQ35537 02527000
.* LANGUAGE-PARM52                                             @PQ35537 02528000
&S1      SETC  (&DELP52)'*'.(1-&DELP52)' '                     @PQ35537 02529000
&S1      SETC  '&S1'.'  LANGUAGE('.'&LANG'.')'                 @PQ35537 02530000
&POS     SETA  &POS+1                                          @PQ39402 02531000
&S(&POS) SETC  '&S1'                                           @PQ35537 02532000
.* LIBMAC-PARMB1                                               @PQ35537 02533000
&S1      SETC  (&DELPB1)'*'.(1-&DELPB1)' '                     @PQ35537 02534000
&S1      SETC  '&S1'.(1-&PARMB1)'NO'.(&PARMB1)'  '             @PQ35537 02535000
&S1      SETC  '&S1'.'LIBMAC'                                  @PQ35537 02536000
&POS     SETA  &POS+1                                          @PQ39402 02537000
&S(&POS) SETC  '&S1'                                           @PQ35537 02538000
.* LINECOUNT-PARM53                                            @PQ35537 02539000
&S1      SETC  (&DELP53)'*'.(1-&DELP53)' '                     @PQ35537 02540000
&S1      SETC  '&S1'.'  LINECOUNT(&LNCT)'                      @PQ35537 02541000
&POS     SETA  &POS+1                                          @PQ39402 02542000
&S(&POS) SETC  '&S1'                                           @PQ35537 02543000
.* LIST-PARM02                                                     @l1m 02544000
&S1      SETC  (&DELP02)'*'.(1-&DELP02)' '                     @PQ35537 02545000
&S1      SETC  '&S1'.(1-&PARM02)'NO'.(&PARM02)'  '                 @l1m 02546000
&S1      SETC  '&S1'.'LIST'                                    @PQ35537 02547000
&POS     SETA  &POS+1                                          @PQ39402 02548000
&S(&POS) SETC  '&S1'                                           @PQ35537 02549000
.* MACHINE-PARM54 (Synonym for OPTABLE)                            @v6a 02550000
&S1      SETC  (&DELP54)'*'.(1-&DELP54)' '                         @v6a 02551000
&S1      SETC  '&S1'.'  MACHINE(&MACH)'                            @v6a 02552000
&POS     SETA  &POS+1                                              @v6a 02553000
&S(&POS) SETC  '&S1'                                               @v6a 02554000
.* MACHINELIST-PARM94 (Synonym for OPTABLELIST)                    @v6a 02555000
&S1      SETC  (&DELP94)'*'.(1-&DELP94)' '                         @v6a 02556000
&S1      SETC  '&S1'.'  MACHINE('                                  @v6a 02557000
&S1      SETC  '&S1'.(1-&PARM94)'NO'                               @v6a 02558000
&S1      SETC  '&S1'.'LIST)'                                       @v6a 02559000
&POS     SETA  &POS+1                                              @v6a 02560000
&S(&POS) SETC  '&S1'                                               @v6a 02561000
.* MXREF-PARM70                                                    @l1m 02562000
&S1      SETC  (&DELP70)'*'.(1-&DELP70)' '                     @PQ35537 02563000
&S1      SETC  '&S1'.(1-&PARM70)'NO'.(&PARM70)'  '                 @l1m 02564000
&S1      SETC  '&S1'.'MXREF'                                       @l1m 02565000
         AIF (&PARM71 NE 1).NOTFULL                                @l1m 02566000
&S1      SETC  '&S1'.'(FULL)'                                      @l1m 02567000
         AGO   .MXRDONE                                            @l1m 02568000
.NOTFULL ANOP                                                      @l1m 02569000
         AIF (&PARM72 NE 1).NOTSRC                                 @l1m 02570000
&S1      SETC  '&S1'.'(SOURCE)'                                    @l1m 02571000
         AGO   .MXRDONE                                            @l1m 02572000
.NOTSRC  ANOP                                                      @l1m 02573000
         AIF (&PARM73 NE 1).MXRDONE                                @l1m 02574000
&S1      SETC  '&S1'.'(XREF)'                                      @l1m 02575000
         AGO   .MXRDONE                                            @l1m 02576000
.MXRDONE  ANOP                                                     @l1m 02577000
&POS     SETA  &POS+1                                          @PQ39402 02578000
&S(&POS) SETC  '&S1'                                           @PQ35537 02579000
.* OBJECT-PARM01                                               @PQ35537 02580000
&S1      SETC  (&DELP01)'*'.(1-&DELP01)' '                     @PQ35537 02581000
&S1      SETC  '&S1'.(1-&PARM01)'NO'.(&PARM01)'  '             @PQ35537 02582000
&S1      SETC  '&S1'.'OBJECT'                                  @PQ35537 02583000
&POS     SETA  &POS+1                                          @PQ39402 02584000
&S(&POS) SETC  '&S1'                                           @PQ35537 02585000
.* OPTABLE-PARM54                                              @PQ89655 02586000
&S1      SETC  (&DELP54)'*'.(1-&DELP54)' '                     @PQ35537 02587000
&S1      SETC  '&S1'.'  OPTABLE(&OPT)'                             @v2c 02588000
&POS     SETA  &POS+1                                          @PQ39402 02589000
&S(&POS) SETC  '&S1'                                           @PQ35537 02590000
.* OPTABLELIST-PARM94                                          @PQ89655 02591000
&S1      SETC  (&DELP94)'*'.(1-&DELP94)' '                     @PQ44437 02592000
&S1      SETC  '&S1'.'  OPTABLE('                              @PQ44437 02593000
&S1      SETC  '&S1'.(1-&PARM94)'NO'                           @PQ44437 02594000
&S1      SETC  '&S1'.'LIST)'                                   @PQ44437 02595000
&POS     SETA  &POS+1                                          @PQ44437 02596000
&S(&POS) SETC  '&S1'                                           @PQ44437 02597000
.* PCONTROL(DATA)-PARM32                                       @PQ35537 02598000
&S1      SETC  (&DELP32)'*'.(1-&DELP32)' '                     @PQ35537 02599000
&S1      SETC  '&S1'.(1-&PARM32)'NO'.(&PARM32)'  '             @PQ35537 02600000
&S1      SETC  '&S1'.'PCONTROL(DATA)'                          @PQ35537 02601000
&POS     SETA  &POS+1                                          @PQ39402 02602000
&S(&POS) SETC  '&S1'                                           @PQ35537 02603000
.* PCONTROL(GEN)-PARM31                                        @PQ35537 02604000
&S1      SETC  (&DELP31)'*'.(1-&DELP31)' '                     @PQ35537 02605000
&S1      SETC  '&S1'.(1-&PARM31)'NO'.(&PARM31)'  '             @PQ35537 02606000
&S1      SETC  '&S1'.'PCONTROL(GEN)'                           @PQ35537 02607000
&POS     SETA  &POS+1                                          @PQ39402 02608000
&S(&POS) SETC  '&S1'                                           @PQ35537 02609000
.* PCONTROL(MCALL)-PARM81                                      @PQ35537 02610000
&S1      SETC  (&DELP81)'*'.(1-&DELP81)' '                     @PQ35537 02611000
&S1      SETC  '&S1'.(1-&PARM81)'NO'.(&PARM81)'  '             @PQ35537 02612000
&S1      SETC  '&S1'.'PCONTROL(MCALL)'                         @PQ35537 02613000
&POS     SETA  &POS+1                                          @PQ39402 02614000
&S(&POS) SETC  '&S1'                                           @PQ35537 02615000
.* PCONTROL(MSOURCE)-PARM34                                    @PQ35537 02616000
&S1      SETC  (&DELP34)'*'.(1-&DELP34)' '                     @PQ35537 02617000
&S1      SETC  '&S1'.(1-&PARM34)'NO'.(&PARM34)'  '             @PQ35537 02618000
&S1      SETC  '&S1'.'PCONTROL(MSOURCE)'                       @PQ35537 02619000
&POS     SETA  &POS+1                                          @PQ39402 02620000
&S(&POS) SETC  '&S1'                                           @PQ35537 02621000
.* PCONTROL(NODATA)-PARM83                                     @PQ35537 02622000
&S1      SETC  (&DELP83)'*'.(1-&DELP83)' '                     @PQ35537 02623000
&S1      SETC  '&S1'.(1-&PARM83)'NO'.(&PARM83)'  '             @PQ35537 02624000
&S1      SETC  '&S1'.'PCONTROL(NODATA)'                        @PQ35537 02625000
&POS     SETA  &POS+1                                          @PQ39402 02626000
&S(&POS) SETC  '&S1'                                           @PQ35537 02627000
.* PCONTROL(NOGEN)-PARM84                                      @PQ35537 02628000
&S1      SETC  (&DELP84)'*'.(1-&DELP84)' '                     @PQ35537 02629000
&S1      SETC  '&S1'.(1-&PARM84)'NO'.(&PARM84)'  '             @PQ35537 02630000
&S1      SETC  '&S1'.'PCONTROL(NOGEN)'                         @PQ35537 02631000
&POS     SETA  &POS+1                                          @PQ39402 02632000
&S(&POS) SETC  '&S1'                                           @PQ35537 02633000
.* PCONTROL(NOMCALL)-PARM87                                    @PQ35537 02634000
&S1      SETC  (&DELP87)'*'.(1-&DELP87)' '                     @PQ35537 02635000
&S1      SETC  '&S1'.(1-&PARM87)'NO'.(&PARM87)'  '             @PQ35537 02636000
&S1      SETC  '&S1'.'PCONTROL(NOMCALL)'                       @PQ35537 02637000
&POS     SETA  &POS+1                                          @PQ39402 02638000
&S(&POS) SETC  '&S1'                                           @PQ35537 02639000
.* PCONTROL(NOMSOURCE)-PARM86                                  @PQ35537 02640000
&S1      SETC  (&DELP86)'*'.(1-&DELP86)' '                     @PQ35537 02641000
&S1      SETC  '&S1'.(1-&PARM86)'NO'.(&PARM86)'  '             @PQ35537 02642000
&S1      SETC  '&S1'.'PCONTROL(NOMSOURCE)'                     @PQ35537 02643000
&POS     SETA  &POS+1                                          @PQ39402 02644000
&S(&POS) SETC  '&S1'                                           @PQ35537 02645000
.* PCONTROL(NOUHEAD)-PARM85                                    @PQ35537 02646000
&S1      SETC  (&DELP85)'*'.(1-&DELP85)' '                     @PQ35537 02647000
&S1      SETC  '&S1'.(1-&PARM85)'NO'.(&PARM85)'  '             @PQ35537 02648000
&S1      SETC  '&S1'.'PCONTROL(NOUHEAD)'                       @PQ35537 02649000
&POS     SETA  &POS+1                                          @PQ39402 02650000
&S(&POS) SETC  '&S1'                                           @PQ35537 02651000
.* PCONTROL(OFF)-PARM82                                        @PQ35537 02652000
&S1      SETC  (&DELP82)'*'.(1-&DELP82)' '                     @PQ35537 02653000
&S1      SETC  '&S1'.(1-&PARM82)'NO'.(&PARM82)'  '             @PQ35537 02654000
&S1      SETC  '&S1'.'PCONTROL(OFF)'                           @PQ35537 02655000
&POS     SETA  &POS+1                                          @PQ39402 02656000
&S(&POS) SETC  '&S1'                                           @PQ35537 02657000
.* PCONTROL(ON)-PARM30                                         @PQ35537 02658000
&S1      SETC  (&DELP30)'*'.(1-&DELP30)' '                     @PQ35537 02659000
&S1      SETC  '&S1'.(1-&PARM30)'NO'.(&PARM30)'  '             @PQ35537 02660000
&S1      SETC  '&S1'.'PCONTROL(ON)'                            @PQ35537 02661000
&POS     SETA  &POS+1                                          @PQ39402 02662000
&S(&POS) SETC  '&S1'                                           @PQ35537 02663000
.* PCONTROL(UHEAD) - PARM32                                    @PQ35537 02664000
&S1      SETC  (&DELP32)'*'.(1-&DELP32)' '                     @PQ35537 02665000
&S1      SETC  '&S1'.(1-&PARM32)'NO'.(&PARM32)'  '             @PQ35537 02666000
&S1      SETC  '&S1'.'PCONTROL(UHEAD)'                         @PQ35537 02667000
&POS     SETA  &POS+1                                          @PQ39402 02668000
&S(&POS) SETC  '&S1'                                           @PQ35537 02669000
.* PESTOP                                                      @PQ35537 02670000
&S1      SETC  ' '.(1-&PEFLAG/255)'NO'.(&PEFLAG/255)'  '       @PQ35537 02671000
&S1      SETC  '&S1'.'PESTOP'                                  @PQ35537 02672000
&POS     SETA  &POS+1                                          @PQ39402 02673000
&S(&POS) SETC  '&S1'                                           @PQ35537 02674000
.* PROFILE-PARM77                                              @PQ35537 02675000
&S1      SETC  (&DELP77)'*'.(1-&DELP77)' '                     @PQ35537 02676000
&S1      SETC  '&S1'.(1-&PARM77)'NO'.(&PARM77)'  '             @PQ35537 02677000
&S1      SETC  '&S1'.'PROFILE('.'&PROFMEMB'.')'                @PQ35537 02678000
&POS     SETA  &POS+1                                          @PQ39402 02679000
&S(&POS) SETC  '&S1'                                           @PQ35537 02680000
.* RA2-PARMB2                                                  @PQ35537 02681000
&S1      SETC  (&DELPB2)'*'.(1-&DELPB2)' '                     @PQ35537 02682000
&S1      SETC  '&S1'.(1-&PARMB2)'NO'.(&PARMB2)'  '             @PQ35537 02683000
&S1      SETC  '&S1'.'RA2'                                     @PQ35537 02684000
&POS     SETA  &POS+1                                          @PQ39402 02685000
&S(&POS) SETC  '&S1'                                           @PQ35537 02686000
.* RENT-PARM04                                                 @PQ35537 02687000
&S1      SETC  (&DELP04)'*'.(1-&DELP04)' '                     @PQ35537 02688000
&S1      SETC  '&S1'.(1-&PARM04)'NO'.(&PARM04)'  '             @PQ35537 02689000
&S1      SETC  '&S1'.'RENT'                                    @PQ35537 02690000
&POS     SETA  &POS+1                                          @PQ39402 02691000
&S(&POS) SETC  '&S1'                                           @PQ35537 02692000
.* RLD-PARM11                                                      @l1m 02693000
&S1      SETC  (&DELP11)'*'.(1-&DELP11)' '                     @PQ35537 02694000
&S1      SETC  '&S1'.(1-&PARM11)'NO'.(&PARM11)'  '                 @l1m 02695000
&S1      SETC  '&S1'.'RLD'                                         @l1m 02696000
&POS     SETA  &POS+1                                          @PQ39402 02697000
&S(&POS) SETC  '&S1'                                           @PQ35537 02698000
.* RXREF - PARM17                                                  @l1a 02699000
&S1      SETC  (&DELP17)'*'.(1-&DELP17)' '                     @PQ35537 02700000
&S1      SETC  '&S1'.(1-&PARM17)'NO'.(&PARM17)'  '                 @l1a 02701000
&S1      SETC  '&S1'.'RXREF'                                       @l1a 02702000
&POS     SETA  &POS+1                                          @PQ39402 02703000
&S(&POS) SETC  '&S1'                                           @PQ35537 02704000
.* SECTALGN(n)-PARM35                                              @v6a 02705000
&S1      SETC  (&DELP35)'*'.(1-&DELP35)' '.'  SECTALGN(&SALGN)'    @v6a 02706000
&POS     SETA  &POS+1                                              @v6a 02707000
&S(&POS) SETC  '&S1'                                               @v6a 02708000
.* SIZE-PARM25, STORAGE-PARM15                                     @l1m 02709000
&XXX     SETC  'MAX'                                               @l1m 02710000
         AIF   (&SIZEA EQ 0).XXMAX                                 @l1m 02711000
         AIF   ('&KM' EQ 'K').XXK                                  @l1m 02712000
&SIZEA   SETA  &SIZEA/1024                                         @l1m 02713000
.XXK     ANOP                                                      @l1m 02714000
&SIZEA   SETA  &SIZEA/1024                                         @l1m 02715000
         AIF   ('&SIZES' EQ '').XXPOS                              @l1m 02716000
&XXX     SETC  '&XXX-'.'&SIZEA'.'&KM'                              @l1m 02717000
         AGO   .XXMAX                                              @l1m 02718000
.XXPOS   ANOP                                                      @l1m 02719000
&XXX     SETC  '&SIZEA'.'&KM'                                      @l1m 02720000
.XXMAX   ANOP                                                      @l1m 02721000
&S1      SETC  (&DELP25)'*'.(1-&DELP25)' '                     @PQ35537 02722000
         AIF (&PARM15 EQ 1).XXABOVE                                @l1m 02723000
&S1      SETC  '&S1'.'  SIZE(&XXX)'                                @l1m 02724000
         AGO   .XXEND                                              @l1m 02725000
.XXABOVE ANOP                                                      @l1m 02726000
&S1      SETC  '&S1'.'  SIZE(&XXX,ABOVE)'                          @l1m 02727000
.XXEND   ANOP                                                      @l1m 02728000
&POS     SETA  &POS+1                                          @PQ39402 02729000
&S(&POS) SETC  '&S1'                                           @PQ35537 02730000
.* TERM-PARM20,WIDE/NARROW-PARM21                                  @l1m 02731000
&S1      SETC  (&DELP20)'*'.(1-&DELP20)' '                     @PQ35537 02732000
&S1      SETC  '&S1'.(1-&PARM20)'NO'.(&PARM20)'  '.'TERM'          @l1m 02733000
         AIF   (&PARM20 EQ 0).TERNB                                @l1m 02734000
&S1      SETC  '&S1'.(&PARM20)'('.(&PARM21)'NARROW'                @l1m 02735000
&S1      SETC  '&S1'.(1-&PARM21)'WIDE'.(&PARM20)')'                @l1m 02736000
.TERNB   ANOP                                                      @l1m 02737000
&POS     SETA  &POS+1                                          @PQ39402 02738000
&S(&POS) SETC  '&S1'                                           @PQ35537 02739000
.* TEST-PARM05                                                     @l1m 02740000
&S1      SETC  (&DELP05)'*'.(1-&DELP05)' '                     @PQ35537 02741000
&S1      SETC  '&S1'.(1-&PARM05)'NO'.(&PARM05)'  '                 @l1m 02742000
&S1      SETC  '&S1'.'TEST'                                        @l1m 02743000
&POS     SETA  &POS+1                                          @PQ39402 02744000
&S(&POS) SETC  '&S1'                                           @PQ35537 02745000
.* THREAD-PARM27                                                   @v2a 02746000
&S1      SETC  (&DELP27)'*'.(1-&DELP27)' '                         @v2a 02747000
&S1      SETC  '&S1'.(1-&PARM27)'NO'.(&PARM27)'  '                 @v2a 02748000
&S1      SETC  '&S1'.'THREAD'                                      @v2a 02749000
&POS     SETA  &POS+1                                          @PQ39402 02750000
&S(&POS) SETC  '&S1'                                           @PQ35537 02751000
.* TRANSLATE-PARM74                                                @l1m 02752000
&S1      SETC  (&DELP74)'*'.(1-&DELP74)' '                     @PQ35537 02753000
&S1      SETC  '&S1'.(1-&PARM74)'NO'.(&PARM74)'  '                 @l1m 02754000
&S1      SETC  '&S1'.'TRANSLATE'                                   @l1m 02755000
         AIF ('&XLATE' EQ '').NOXL                                 @l1m 02756000
&S1      SETC  '&S1'.'(&XLATE)'                                    @l1m 02757000
.NOXL    ANOP                                                      @l1m 02758000
&POS     SETA  &POS+1                                          @PQ39402 02759000
&S(&POS) SETC  '&S1'                                           @PQ35537 02760000
.* TYPECHECK(MAGNITUDE)-PARMA1                                     @v6c 02761000
&S1      SETC  (&DELPA1)'*'.(1-&DELPA1)' '                         @v6c 02762000
&S1      SETC  '&S1'.(1-(&PARMA1+&PARMA1N))'NO'.(&PARMA1+&PARMA1N)'  ' +02763000
                                                                   @v6c 02764000
&S1      SETC  '&S1'.'TYPECHECK('.(&PARMA1N)'NO'.'MAGNITUDE)'      @v6c 02765000
&POS     SETA  &POS+1                                              @v6c 02766000
&S(&POS) SETC  '&S1'                                               @v6c 02767000
.* TYPECHECK(REGISTER)-PARMA3                                      @v6a 02768000
&S1      SETC  (&DELPA3)'*'.(1-&DELPA3)' '                         @v6a 02769000
&S1      SETC  '&S1'.(1-(&PARMA3+&PARMA3N))'NO'.(&PARMA3+&PARMA3N)'  ' +02770000
                                                                   @v6a 02771000
&S1      SETC  '&S1'.'TYPECHECK('.(&PARMA3N)'NO'.'REGISTER)'       @v6a 02772000
&POS     SETA  &POS+1                                              @v6a 02773000
&S(&POS) SETC  '&S1'                                               @v6a 02774000
.* USING(LIMIT)-PARM42                                             @l1m 02775000
&S1      SETC  (&DELP42)'*'.(1-&DELP42)' '                     @PQ35537 02776000
&S1      SETC  '&S1'.'  USING('.(1-&PARM42)'NO'                    @l1m 02777000
&S1      SETC  '&S1'.'LIMIT'.(&PARM42)'(&ULIM)'.')'                @l1m 02778000
&POS     SETA  &POS+1                                          @PQ39402 02779000
&S(&POS) SETC  '&S1'                                           @PQ35537 02780000
.* USING(MAP)-PARM43                                               @l1m 02781000
&S1      SETC  (&DELP43)'*'.(1-&DELP43)' '                     @PQ35537 02782000
&S1      SETC  '&S1'.'  USING('.(1-&PARM43)'NO'                    @l1m 02783000
&S1      SETC  '&S1'.'MAP)'                                        @l1m 02784000
&POS     SETA  &POS+1                                          @PQ39402 02785000
&S(&POS) SETC  '&S1'                                           @PQ35537 02786000
.* USING(WARN)-PARM41                                              @l1m 02787000
&S1      SETC  (&DELP41)'*'.(1-&DELP41)' '                     @PQ35537 02788000
&S1      SETC  '&S1'.'  USING('.(1-&PARM41)'NO'                    @l1m 02789000
&S1      SETC  '&S1'.'WARN'.(&PARM41)'(&UWARN)'.')'                @l1m 02790000
&POS     SETA  &POS+1                                          @PQ39402 02791000
&S(&POS) SETC  '&S1'                                           @PQ35537 02792000
.* XREF-PARM03,SHORT=PARM12,FULL=PARM14,UNREFS=PARM16              @l1m 02793000
&S1      SETC  (&DELP03)'*'.(1-&DELP03)' '                     @PQ35537 02794000
&S1      SETC  '&S1'.(1-&PARM03)'NO'.(&PARM03)'  '                 @l1m 02795000
&S1      SETC  '&S1'.'XREF'                                        @l1m 02796000
         AIF (&PARM14 NE 1).NOTFULX                                @l1m 02797000
&S1      SETC  '&S1'.'(FULL)'                                      @l1m 02798000
         AGO   .XRFDONE                                            @l1m 02799000
.NOTFULX ANOP                                                      @l1m 02800000
&S1      SETC  '&S1'.'('                                           @l1m 02801000
         AIF (&PARM12 NE 1).NOTSHT                                 @l1m 02802000
&S1      SETC  '&S1'.'SHORT,'                                      @l1m 02803000
.NOTSHT  ANOP                                                      @l1m 02804000
         AIF (&PARM16 NE 1).NOTUNR                                 @l1m 02805000
&S1      SETC  '&S1'.'UNREFS)'                                     @l1m 02806000
         AGO   .XRFDONE                                            @l1m 02807000
.NOTUNR  ANOP                                                      @l1m 02808000
&L1      SETA  K'&S1                                               @l1m 02809000
&L1      SETA  &L1-1                                               @l1m 02810000
&S1      SETC  '&S1'(1,&L1)                                        @l1m 02811000
&S1      SETC  '&S1'.')'                                           @l1m 02812000
.XRFDONE ANOP                                                      @l1m 02813000
&POS     SETA  &POS+1                                          @PQ39402 02814000
&S(&POS) SETC  '&S1'                                           @PQ35537 02815000
.*                                                             @PQ35537 02816000
.*       Now output into three columns:                        @PQ35537 02817000
.*                                                             @PQ35537 02818000
&LP      SETA  0                                               @PQ35537 02819000
&LPMAX   SETA  &POS/3                                          @PQ39402 02820000
&L1      SETA  &POS-&LPMAX*3                                   @PQ39402 02821000
&COL2    SETA  &LPMAX                                          @PQ35537 02822000
&COL3    SETA  &LPMAX*2                                        @PQ35537 02823000
         AIF   (&L1 EQ 0).LPBEG                                @PQ35537 02824000
&COL2    SETA  &COL2+1                                         @PQ35537 02825000
&COL3    SETA  &COL3+1                                         @PQ35537 02826000
         AIF   (&L1 EQ 1).LPBEG                                @PQ35537 02827000
&COL3    SETA  &COL3+1                                         @PQ35537 02828000
.*                                                             @PQ35537 02829000
.LPBEG   ANOP                                                  @PQ35537 02830000
&LP      SETA  &LP+1                                           @PQ35537 02831000
         AIF   (&LP GT &LPMAX).LPEND                           @PQ35537 02832000
&L1      SETA  K'&S(&LP)                                       @PQ35537 02833000
&S1      SETC  '&S(&LP)'.(22-&L1)' '                           @PQ35537 02834000
&L1      SETA  K'&S(&LP+&COL2)                                 @PQ35537 02835000
&S1      SETC  '&S1'.'&S(&LP+&COL2)'.(22-&L1)' '               @PQ35537 02836000
&S1      SETC  '&S1'.'&S(&LP+&COL3)'                           @PQ35537 02837000
         MNOTE *,'&S1'                                                  02838000
         AGO   .LPBEG                                          @PQ35537 02839000
.LPEND   ANOP                                                  @PQ35537 02840000
.*                                                             @PQ35537 02841000
.*       Now format final (partial) line                       @PQ35537 02842000
.*                                                             @PQ35537 02843000
         AIF   (&COL2 EQ &LPMAX).LPDONE                        @PQ35537 02844000
&L1      SETA  K'&S(&COL2)                                     @PQ35537 02845000
&S1      SETC  '&S(&COL2)'.(22-&L1)' '                         @PQ35537 02846000
         AIF   (&COL3 EQ &LPMAX*2+1).LPLINE                    @PQ35537 02847000
&S1      SETC  '&S1'.'&S(&COL3)'                               @PQ35537 02848000
.LPLINE  ANOP                                                  @PQ35537 02849000
         MNOTE *,'&S1'                                         @PQ35537 02850000
.LPDONE  ANOP                                                  @PQ35537 02851000
.*                                                             @PQ35537 02852000
.*                                                             @PQ35537 02853000
.*                                                             @PQ35537 02854000
.*                                                                      02855000
         MNOTE *,'                  '                                   02856000
.*                                                                      02857000
         AIF   (&XADSL EQ 0).XITPR1                                     02858000
&S1      SETC  '<'.'&XADS'(1,&XADSL).'>'                                02859000
         MNOTE *,'&S1'                                                  02860000
.*                                                                      02861000
.XITPR1  ANOP                                                           02862000
         MNOTE *,'                  '                                   02863000
.*                                                                      02864000
&S1      SETC  (&DELP44)'*'.(1-&PARM44)'NO '.'INEXIT'                   02865000
&S1      SETC  '&S1'.(&PARM44)'=&XINN'                                  02866000
         MNOTE *,'&S1'                                                  02867000
.*                                                                      02868000
         AIF   (&XINSL EQ 0).XITPR2                                     02869000
&S1      SETC  '<'.'&XINS'(1,&XINSL).'>'                                02870000
         MNOTE *,'&S1'                                                  02871000
.*                                                                      02872000
.XITPR2  ANOP                                                           02873000
         MNOTE *,'                  '                                   02874000
.*                                                                      02875000
&S1      SETC  (&DELP45)'*'.(1-&PARM45)'NO '.'LIBEXIT'                  02876000
&S1      SETC  '&S1'.(&PARM45)'=&XLIBN'                                 02877000
         MNOTE *,'&S1'                                                  02878000
.*                                                                      02879000
         AIF   (&XLIBSL EQ 0).XITPR3                                    02880000
&S1      SETC  '<'.'&XLIBS'(1,&XLIBSL).'>'                              02881000
         MNOTE *,'&S1'                                                  02882000
.*                                                                      02883000
.XITPR3  ANOP                                                           02884000
         MNOTE *,'                  '                                   02885000
.*                                                                      02886000
&S1      SETC  (&DELP46)'*'.(1-&PARM46)'NO '.'PRTEXIT'                  02887000
&S1      SETC  '&S1'.(&PARM46)'=&XPRTN'                                 02888000
         MNOTE *,'&S1'                                                  02889000
.*                                                                      02890000
         AIF   (&XPRTSL EQ 0).XITPR4                                    02891000
&S1      SETC  '<'.'&XPRTS'(1,&XPRTSL).'>'                              02892000
         MNOTE *,'&S1'                                                  02893000
.*                                                                      02894000
.XITPR4  ANOP                                                           02895000
         MNOTE *,'                  '                                   02896000
.*                                                                      02897000
&S1      SETC  (&DELP47)'*'.(1-&PARM47)'NO '.'OBJEXIT'                  02898000
&S1      SETC  '&S1'.(&PARM47)'=&XOBJN'                                 02899000
         MNOTE *,'&S1'                                                  02900000
.*                                                                      02901000
         AIF   (&XOBJSL EQ 0).XITPR5                                    02902000
&S1      SETC  '<'.'&XOBJS'(1,&XOBJSL).'>'                              02903000
         MNOTE *,'&S1'                                                  02904000
.*                                                                      02905000
.XITPR5  ANOP                                                           02906000
         MNOTE *,'                  '                                   02907000
.*                                                                      02908000
&S1      SETC  (&DELP57)'*'.(1-&PARM57)'NO '.'TRMEXIT'                  02909000
&S1      SETC  '&S1'.(&PARM57)'=&XTRMN'                                 02910000
         MNOTE *,'&S1'                                                  02911000
.*                                                                      02912000
         AIF   (&XTRMSL EQ 0).SUPRLST                              @v6c 02913000
&S1      SETC  '<'.'&XTRMS'(1,&XTRMSL).'>'                              02914000
         MNOTE *,'&S1'                                                  02915000
.*                                                                 @v6a 02916000
.SUPRLST ANOP                                                      @v6a 02917000
         MNOTE *,'                  '                              @v6a 02918000
.*                                                                 @v6a 02919000
&S1      SETC  (&DELPC0)'*'.(1-&PARMC0)'NO '.'SUPRWARN'            @v6a 02920000
&S2      SETC  ''                                                  @v6a 02921000
         AIF   (&SUPRNUM EQ 1).LSTSUP1                             @v6a 02922000
&S2      SETC  's'                                                 @v6a 02923000
.LSTSUP1 ANOP                                                      @v6a 02924000
&S1      SETC  '&S1'.(&PARMC0)' (&SUPRNUM message&S2 suppressed):' @v6a 02925000
         MNOTE *,'&S1'                                             @v6a 02926000
.*                                                                 @v6a 02927000
         AIF   (&PARMC0 EQ 0).XITPRX                               @v6a 02928000
.*                                                                 @v6a 02929000
&A       SETA  0                               Set loop counter    @v6a 02930000
.LSTSUP2 ANOP                                  Loop for each line  @v6a 02931000
&B       SETA  0                               Set msg/line count  @v6a 02932000
&S1      SETC  ''                              Set msg line        @v6a 02933000
.LSTSUP3 ANOP                                  Loop for each msg   @v6a 02934000
&A       SETA  &A+1                            Bump loop counter   @v6a 02935000
         AIF   (&A GT &SUPRNUM).LSTSUP5        Finished?           @v6a 02936000
&S1      SETC  '&S1'.(4-K'&SUPRMSG(&A))'0'.'&SUPRMSG(&A)'          @v6a 02937000
         AIF   (&A GE &SUPRNUM).LSTSUP4        Last one, no comma  @v6a 02938000
&S1      SETC  '&S1'.','                       Add comma           @v6a 02939000
.LSTSUP4 ANOP                                                      @v6a 02940000
&B       SETA  &B+1                            Bump msg/line count @v6a 02941000
         AIF   (&B LT 13).LSTSUP3              Line not full?      @v6a 02942000
.LSTSUP5 ANOP                                                      @v6a 02943000
&S1      SETC  '<'.'&S1'.'>'                   Finish off line     @v6a 02944000
         MNOTE *,'&S1'                         Output line         @v6a 02945000
         AIF   (&A LT &SUPRNUM).LSTSUP2        More msgs to do     @v6a 02946000
.*                                                                      02947000
.XITPRX  ANOP                                                           02948000
         MNOTE *,'                  '                                   02949000
&XXDEL   SETA  &DELP0+&DELP1+&DELP2+&DELP3+&DELP4+&DELP5+&DELP6    @v6c 02950000
&XXDEL   SETA  &XXDEL+&DELP7+&DELP8+&DELP9+&DELPA+&DELPB+&DELPC    @v6a 02951000
&XXDEL   SETA  &XXDEL+&DELPD                                       @v6a 02952000
         AIF   (&XXDEL EQ 0).XASTER                                     02953000
         MNOTE *,'( * option can not be overridden by user at Assembler+02954000
                invocation)'                                            02955000
.XASTER  ANOP                                                           02956000
&S1      SETC  (69)'*'                                                  02957000
         MNOTE *,'&S1'                                                  02958000
.ENDM    ANOP                                                           02959000
         MEND                                                           02960000
