         MACRO                                                          00050000
&NAME    MODEENT &LOGMODE=,&FMPROF=0,&TSPROF=0,&PRIPROT=0,&SECPROT=0,  *00100000
               &COMPROT=0,&PSERVIC=X'00',&RUSIZES=X'0000',             *00103000
               &TYPE=X'01',&PSNDPAC=X'00',&SRCVPAC=X'00',              *00106000
               &SSNDPAC=X'00',&COS=,&ENCR=0,&LANG=X'00',&DCODE=X'00',  *00108000
               &COMPRES=SYSTEM,&APPNCOS=                                00110000
.********************* START OF SPECIFICATIONS *********************    00112000
.*                                                                      00115000
.* MACRO NAME(S): MODEENT                                               00118000
.*                                                                      00121000
.* DESCRIPTIVE NAME:  Define a single logon mode entry.                 00124000
.*                                                                      00127000
.* STATUS: ACF/VTAM VERSION 3 RELEASE 4                                 00130000
.*                                                                      00133000
.* COPYRIGHT:  LICENSED MATERIALS - PROPERTY OF IBM                     00136000
.*                                                                      00139000
.*             THIS PRODUCT CONTAINS "RESTRICTED MATERIALS OF IBM"      00140000
.*                                                                      00141000
.*             5685-085 (C) COPYRIGHT IBM CORP. 1984, 1991.             00141100
.*             ALL RIGHTS RESERVED.                                     00141200
.*                                                                      00141300
.*             U.S. GOVERNMENT USERS RESTRICTED RIGHTS -                00141400
.*             USE, DUPLICATION OR DISCLOSURE RESTRICTED BY             00141500
.*             GSA ADP SCHEDULE CONTRACT WITH IBM CORP.                 00141600
.*                                                                      00141700
.*             SEE COPYRIGHT INSTRUCTIONS.                              00141800
.*                                                                      00141900
.* MACRO USER'S GUIDE:                                                  00142000
.*                                                                      00145000
.*    FUNCTION: This macro associates a logon mode name with a set of   00148000
.*              parameters representing session protocols.  The         00151000
.*              component description for the device represented by the 00154000
.*              LU should describe the desired features to be used and  00157000
.*              how to use those features.                              00160000
.*                                                                      00163000
.*    MACRO FORMAT:                                                     00166000
.*                                                                      00169000
.*       <label> MODEENT <,COMPRES=value>                               00171000
.*                       <,COMPROT=value>                               00173000
.*                       <,COS=name>                                    00175000
.*                       <,APPNCOS=name>                                00175700
.*                       <,DCODE=value>                                 00176500
.*                       <,ENCR=value>                                  00178000
.*                       <,FMPROF=value>                                00181000
.*                       <,LANG=value>                                  00184000
.*                       <,LOGMODE=name>                                00187000
.*                       <,PRIPROT=value>                               00190000
.*                       <,PSERVIC=value>                               00193000
.*                       <,PSNDPAC=value>                               00196000
.*                       <,RUSIZES=value>                               00199000
.*                       <,SECPROT=value>                               00202000
.*                       <,SRCVPAC=value>                               00205000
.*                       <,SSNDPAC=value>                               00208000
.*                       <,TSPROF=value>                                00211000
.*                       <,TYPE=value>                                  00214000
.*                                                                      00217000
.*    DESCRIPTION OF OPERANDS:                                          00220000
.*                                                                      00223000
.*       label          Optional label associated with the macro        00226000
.*                      invocation statement.                           00229000
.*                                                                      00229100
.*       COMPRES        Optional keyword that specifies how data        00229200
.*                      compression usage will be determined.   Value   00229300
.*                      can be one of SYSTEM, REQD, or PROHIB.          00229400
.*                                                                      00229500
.*                      SYSTEM: Use normal system defaults.  No         00229600
.*                              overrides are used.                     00229700
.*                                                                      00229800
.*                      REQD: System override to specify that data      00229900
.*                            compression is required.                  00230000
.*                                                                      00230100
.*                      PROHIB: System override to specify that data    00230200
.*                              compression is not to be used.          00230300
.*                                                                      00230400
.*                      The default is SYSTEM.                          00230500
.*                                                                      00232000
.*       COMPROT        The common LU protocols (bytes 5 and 6 in the   00235000
.*                      session parameter field) for this logon mode.   00238000
.*                      Can be any hexadecimal number from 0 to FFFF.   00241000
.*                                                                      00244000
.*                      The default is 0.                               00247000
.*                                                                      00250000
.*       COS            The name of a class of service to be used for a 00253000
.*                      session that uses this logon mode.  It should   00256000
.*                      be a name of 1 to 8 characters in length.       00259000
.*                                                                      00262000
.*                      The default is 8 blank spaces.                  00265000
.*                                                                      00268000
.*       APPNCOS        The name of the class of service used for the   00268100
.*                      session in the APPN part of the network. This   00268200
.*                      parameter only applies when coded within the    00268300
.*                      default logon mode table ISTINCLM.              00268400
.*                                                                      00268500
.*                      The default is the subarea COS. If the subarea  00268600
.*                      COS is not specified then the default is        00268700
.*                      '#CONNECT'.                                     00268800
.*                                                                      00268900
.*       DCODE          Optional keyword which specifies the LU device  00269000
.*                      code. The format of the device code byte is as  00269100
.*                      follows:                                        00269200
.*                                                                      00269300
.*                      BIT 0: 0 = Indicates terminal is keyboard and   00269400
.*                                 printer.                             00269500
.*                             1 = Indicates terminal is keyboard and   00269600
.*                                 display.                             00269800
.*                                                                      00270000
.*                      BITS 1-7: 000 0000                              00270200
.*                                Reserved.                             00270400
.*                                                                      00270600
.*                                                                      00270800
.*       ENCR           Specifies what type of cryptography (from the   00271000
.*                      VTAM encryption facility) is expected by the    00274000
.*                      LU.  Can be any hexadecimal number from 0 to F, 00277000
.*                      an equivalent decimal number, or a 4 bit binary 00280000
.*                      string.  This value is stored in the first 4    00283000
.*                      bits of byte 26 in the session parameter field. 00286000
.*                                                                      00289000
.*                      The default value is 0.                         00292000
.*                                                                      00295000
.*                      See the VTAM Customization Manual for more      00298000
.*                      information.                                    00301000
.*                                                                      00304000
.*       FMPROF         Represents the function management profile      00307000
.*                      (byte 1 in the session parameter field).  Can   00310000
.*                      be any hexadecimal number from 0 to FF, or an   00313000
.*                      equivalent decimal number.  Values 2, 3, and 4  00316000
.*                      have defined meanings, described in VTAM        00319000
.*                      Programming.                                    00322000
.*                                                                      00325000
.*                      The default is 0.                               00328000
.*                                                                      00331000
.*       LANG           Optional keyword specifying the language code   00334000
.*                      supported by the LU.  The format of the         00337000
.*                      language code byte is as follows:               00340000
.*                                                                      00343000
.*                      BIT 0: 0 = Identify the language from the code  00346000
.*                                 specified in bits 4-7 of this byte.  00349000
.*                             1 = Send query command to the device to  00352000
.*                                 determine the SBCS (Single Byte      00355000
.*                                 Character Set) language and the DBCS 00358000
.*                                 (Double Byte Character Set)          00361000
.*                                 capability.  If the language         00364000
.*                                 cannot be determined from the input  00367000
.*                                 received from the query, the code    00370000
.*                                 specified in bits 1-7 of this byte   00373000
.*                                 will be used.                        00376000
.*                                                                      00379000
.*                      BITS 1-7: 000 0000  or 000 0001                 00382000
.*                                US English, or any single byte        00385000
.*                                character set, SBCS, in which the     00388000
.*                                valid character codes are compatible  00391000
.*                                with the English codes.               00394000
.*                                                                      00397000
.*                                This is the default value.            00400000
.*                                                                      00403000
.*                                001 0001                              00406000
.*                                Katakana, or any single byte or       00409000
.*                                double byte character set in which    00412000
.*                                the valid character codes are         00415000
.*                                compatible with Katakana.  See the    00418000
.*                                3274 Control Unit Description and     00421000
.*                                Programmer's Guide for the set of     00424000
.*                                valid character codes for Katakana.   00427000
.*                                                                      00430000
.*                      These are the values of the Keyboard Language/  00433000
.*                      Character Set I/O Interface Codes from the      00436000
.*                      3274 Control Unit Planning, Setup, and Custom-  00439000
.*                      izing Guide.  If the terminal is to be defined  00442000
.*                      as Katakana, with no Query required, code       00445000
.*                      LANG=X'11'.  Code LANG=X'91' when Query is      00448000
.*                      required.                                       00451000
.*                                                                      00454000
.*       LOGMODE        The logon mode name used as a key for the       00457000
.*                      session parameters in this table entry.  If     00460000
.*                      duplicate names appear in the table, the first  00463000
.*                      name is used.  The default is 8 blank spaces.   00466000
.*                                                                      00469000
.*       PRIPROT        The primary LU protocol (byte 3 in the session  00472000
.*                      parameter field) for this logon mode.  Can be   00475000
.*                      any hexadecimal number from 0 to FF.            00478000
.*                                                                      00481000
.*                      The default is 0.                               00484000
.*                                                                      00487000
.*       PSERVIC        The LU presentation services profile and usage  00490000
.*                      field (bytes 13 through 24 in the session       00493000
.*                      parameter field) for this logon mode.  A 24     00496000
.*                      digit hexadecimal number is coded for this      00499000
.*                      parameter using the settings described in       00502000
.*                      "Specifying Session Parameters" in VTAM         00505000
.*                      Programming.                                    00508000
.*                                                                      00511000
.*                      The default is 0.                               00514000
.*                                                                      00517000
.*                      See the VTAM Customization Manual for note      00520000
.*                      pertaining to VM.                               00523000
.*                                                                      00526000
.*       PSNDPAC        Specifies the primary send pacing count and     00527200
.*                      whether one or two stage pacing is to be used   00528400
.*                      (byte 11 in the session parameter field).  The  00529600
.*                      primary send pacing count may be any decimal    00530800
.*                      number in the range 0 to 63 or any hexadecimal  00532000
.*                      number in the range x'00' to x'3F'.  Although   00533200
.*                      the hexadecimal count cannot be greater than    00534400
.*                      x'3F', any hexadecimal number in the range      00535300
.*                      x'00' to x'FF', which does not use the reserved 00536200
.*                      bit in position 1, can be coded for this        00537100
.*                      parameter.  An error message will be generated  00538000
.*                      and the default value will be used if a         00538900
.*                      hexadecimal number is coded which uses the      00539800
.*                      reserved bit.  The high order bit is used to    00540700
.*                      specify whether one or two stage pacing is to   00541600
.*                      be used.  The low order 6 bits of the           00542500
.*                      hexadecimal number correspond to the primary    00543400
.*                      send pacing count.  See the VTAM Resource       00544300
.*                      Definition Reference and VTAM Programming       00545200
.*                      manuals for more information.         @06C @07C 00546100
.*                                                                      00547000
.*                      The default is 0.                               00550000
.*                                                                      00553000
.*       RUSIZES        A portion of the transmission services usage    00556000
.*                      field (bytes 9 and 10 in the session parameter  00559000
.*                      field) for this logon mode.  This parameter     00562000
.*                      specifies the maximum length of data (request   00565000
.*                      units), in bytes, that can be sent by the       00568000
.*                      primary LU and by the secondary LU with which   00571000
.*                      the primary LU communicates in this session.    00574000
.*                                                                      00577000
.*                      See the VTAM Customization Manual for more      00580000
.*                      information on this parameter.                  00583000
.*                                                                      00586000
.*       SECPROT        The secondary LU protocol (byte 4 in the        00589000
.*                      session parameter field) for this logon mode.   00592000
.*                      Can be any hexadecimal number from 0 to FF.     00595000
.*                                                                      00598000
.*                      The default is 0.                               00601000
.*                                                                      00604000
.*       SRCVPAC        Specifies the secondary receive pacing count    00604700
.*                      and whether fixed or adaptive pacing is to be   00605400
.*                      used (byte 8 in the session parameter field).   00606100
.*                      The secondary receive pacing count may be any   00606800
.*                      decimal number in the range 0 to 63 or any      00607500
.*                      hexadecimal number in the range x'00' to x'3F'. 00608200
.*                      Although the hexadecimal count cannot be        00608900
.*                      greater than x'3F', any hexadecimal number in   00609400
.*                      the range x'00' to x'FF', which does not use    00609900
.*                      the reserved bit in position 1, can be coded    00610400
.*                      for this parameter.  An error message will be   00610900
.*                      generated and the default value will be used if 00611400
.*                      a hexadecimal number is coded which uses the    00611900
.*                      reserved bit.  The high order bit is used to    00612400
.*                      specify whether fixed or adaptive pacing is to  00612900
.*                      be used.  The low order 6 bits of the           00613400
.*                      hexadecimal number correspond to the secondary  00613900
.*                      receive pacing count.  See VTAM Resource        00614400
.*                      Definition Reference and VTAM Programming       00614900
.*                      manuals for more information.         @06C @07C 00615400
.*                                                                      00616000
.*                      The default is 0.                               00619000
.*                                                                      00622000
.*       SSNDPAC        Specifies the secondary send pacing count and   00623000
.*                      whether one or two stage pacing is to be used   00624000
.*                      (byte 7 in the session parameter field).  The   00625000
.*                      secondary send pacing count may be any decimal  00626000
.*                      number in the range 0 to 63 or any hexadecimal  00627000
.*                      number in the range x'00' to x'3F'.  Although   00628000
.*                      the hexadecimal count cannot be greater than    00629000
.*                      x'3F', any hexadecimal number in the range      00630000
.*                      x'00' to x'FF', which does not use the reserved 00631000
.*                      bit in position 1, can be coded for this        00632000
.*                      parameter.  An error message will be generated  00633000
.*                      and the default value will be used if a         00634000
.*                      hexadecimal number is coded which uses the      00635000
.*                      reserved bit.  The high order bit is used to    00636000
.*                      specify whether one or two stage pacing is to   00637000
.*                      be used.  The low order 6 bits of the           00638000
.*                      hexadecimal number correspond to the secondary  00639000
.*                      send pacing count.  See VTAM Resource           00640000
.*                      Definition Reference and VTAM Programming       00641000
.*                      manuals for more information.         @06C @07C 00642000
.*                                                                      00643000
.*                      The default is 0.                               00646000
.*                                                                      00649000
.*       TSPROF        Represents the transmission services profile     00652000
.*                     (byte 2 in the session parameter field) for this 00655000
.*                     logon mode.  Can be any hexadecimal number from  00658000
.*                     0 to FF, or an equivalent decimal number.        00661000
.*                     Values 2, 3, and 4 have defined meanings that    00664000
.*                     are described in VTAM Programming.               00667000
.*                                                                      00670000
.*       TYPE          Indicates the type of BIND request represented   00673000
.*                     by this logon mode entry (bits 4 through 7 of    00676000
.*                     byte 0 in the session parameter field).  The     00679000
.*                     only defined values are 0 and 1.  However, any   00682000
.*                     hexadecimal number from 0 to F can be specified. 00685000
.*                     If 0 is specified, the logon mode entry          00688000
.*                     represents session parameters that could be sent 00691000
.*                     in a negotiable BIND.  If 1 is specified, a      00694000
.*                     non-negotiable BIND should be sent.              00697000
.*                                                                      00700000
.*                     The default is 1.                                00703000
.*                                                                      00706000
.*                     See the VTAM Customization Manual for more       00709000
.*                     information about this parameter.                00712000
.*                                                                      00715000
.*    CODING EXAMPLES:                                                  00718000
.*                                                                      00721000
.*       (1) Code a logon mode table entry whose name is "MODENAME" and 00724000
.*           whose class of service name is "COSNAME".  Hexadecimal     00727000
.*           values are specified for the remaining parameters. (x = a  00730000
.*           hexadecimal digit).                                        00733000
.*                                                                      00736000
.*             LABEL1   MODEENT COMPROT=X'xxxx',COS=COSNAME,ENCR=X'x',  00739000
.*                              FMPROF=X'xx',LOGMODE=MODENAME,          00742000
.*                              PSERVIC=X'xxxxxxxxxxxxxxxxxxxxxxxx',    00745000
.*                              PRIPROT=X'xx',PSNDPAC=X'xx',            00748000
.*                              RUSIZES=X'xxxx',SECPROT=X'xx',          00751000
.*                              SRCVPAC=X'xx',SSNDPAC=X'xx',            00754000
.*                              TSPROF=X'xx',TYPE=X'x'                  00757000
.*                                                                      00760000
.*       (2) Code a logon mode table entry whose name is "MODENAME".    00763000
.*           Decimal values are specified for the ENCR and FMPROF       00766000
.*           parameters (d = a decimal digit).  A default value is used 00769000
.*           for the remaining parameters.                              00772000
.*                                                                      00775000
.*             LABEL2   MODEENT LOGMODE=MODENAME,ENCR=dd,FMPROF=dd      00778000
.*                                                                      00781000
.*       (3) Code a logon mode table entry whose name is "MODENAME".    00784000
.*           A binary value is specified for the ENCR parameter (b = a  00787000
.*           binary digit).  A default value is used for the remaining  00790000
.*           parameters.                                                00793000
.*                                                                      00796000
.*             LABEL3   MODEENT LOGMODE=MODENAME,ENCR=B'bbbb'           00799000
.*                                                                      00802000
.*    RESTRICTIONS / DEPENDENCIES: NONE                                 00805000
.*                                                                      00808000
.*    OUTPUT: Output from this macro is an entry in the logon mode      00811000
.*            table.  For each entry, this includes a logon mode name,  00814000
.*            along with its associated parameters (the parameters that 00817000
.*            were specified with the macro invocation or, if not       00820000
.*            specified, default values are used).                      00823000
.*                                                                      00826000
.*    CHANGE ACTIVITY:                                                  00829000
.*                                                                      00832000
.*       04/19/88  Added copyright information                 @P055566 00833500
.*                                                                      00835000
.* $MAC(MODEENT),COMP(USER),PROD(VTAM): DEFINE A SINGLE LOGON MODE      00835200
.*                                      ENTRY                           00835400
.*                                                                      00835600
.* FLAG REASON   RELEASE DATE   ORIGIN  FLAG DESCRIPTORS                00836800
.* ---- -------  ------- ------ ------  --------------------------      00838000
.* $01= OY19445  HVT3303 890504 042852: MSGIEV044 UNDEFINED SYMBOL      00839200
.* $J1= XD@@@CLD HVT3431 900710 797350: DATA COMPRESSION                00839800
.* $BB= ACC@@AMS HVT3401 891025 615520: PL/AS CONVERSION                00840400
.* $02= OY34863  HVT3401 901018 810410: DELETE AIF FOR NULL LOGMODE     00841600
.*                                      NAME ON FIRST MODETAB ENTRY     00842800
.* $X1= P093041  HVT3431 910201 797350: COMPRES DEFAULT INCORRECT       00843000
.* $X2= P093042  HVT3431 910201 797350: COMPRES PROHIB VALUE INCORRECT  00843200
.* $X3= P093101  HVT3431 910206 607388: COMMENT CHANGE WHEN SPECIFYING  00843400
.*                                      SRCVPAC, AND SSNDPAC            00843600
.* $X4= P094766  HVT3431 910402 797350: SINGLE DIGIT HEX ENCR           00843700
.* $X5= P095188  HVT3431 910404 797350: SINGLE DIGIT HEX ENCR           00843800
.* $03= OY48211  HVT3431 911107 001569: CHECK HEX VALUE FOR PSNDPAC,    00843900
.*                                      SECPROT AND PRIPROT             00844000
.* $KF= ST@@@CLD HATAPPN 910717 458230: TRS Modename Support            00844200
.* $04= OY53368  VM341   920430 787924: CORRECT GENERATION OF COMPRES   00844400
.*                                      VALUE FOR XF ASSEMBLER          00844800
.* $KG= ST@DR001 HATAPPN 920325 458230: Multiple Mode Table Support     00844900
.* $05= OY53568  VM341   920605 787924: CHECK LOGMODE NAME VALIDITY     00845000
.* $06= VM52883  VM341   920816 787924: REMOVE CODE FOR OY48211         00845100
.* $07= OY56445  HATAPPN 921029 062811: IMPROVE CHECK OF HEX VALUE      00845200
.*                                      CODED FOR PSNDPAC, SRCVPAC      00845300
.*                                      AND SSNDPAC                     00845400
.* $T1= P105799  HATAPPN 921119 349112: CORRECTED CODE TO CHECK FOR     00845500
.*                                      NEGATIVE NUMBERS AND TO SET     00845600
.*                                      DEFAULTS WHEN NULLS SPECIFIED   00845700
.* $U2= P108744  EMERALD 930513 450767: MISSING LCLC                    00845800
.*                                                                      00845900
.********************** END OF SPECIFICATIONS ************************* 00846100
.*                                                                      00848000
.********************************************************************** 00850000
.*       DECLARE LOCALS AND GLOBALS                                     00900000
.********************************************************************** 00950000
         GBLB  &ERRCK                          1 = MODETAB ENCOUNTERED  00980000
         GBLA  &ENTRYCT                        NUMBER OF MODEENT MACROS 01010000
         GBLC  &LNGLABL                                                 01040000
         GBLA  &TABCT                          NUMBER OF MODETAB MACROS 01070000
         LCLC  &CHAR1,&CHAR2,&CHAR3(3),&CHAR4                  @DM39835 01102500
         LCLA  &LEN,&I,&J,&K                                   @DM39835 01135000
         LCLA  &LOG1                                               @05A 01167500
         LCLC  &ERRCHAR                                            @U2A 01183700
.********************************************************************** 01200000
.*       IF MODETAB WAS NOT PREVIOUSLY INVOKED, INDICATE ERROR          01250000
.********************************************************************** 01300000
         AIF   ('&ERRCK' EQ '1').MODLINE  THIS IS A VALID MACRO CALL    01350000
         MNOTE 8,'MODETAB MACRO WAS NOT ISSUED MODEENT IS VOID'         01400000
.********************************************************************** 01450000
.*       IF LOGMODE WAS PASSED, GENERATE CL8 FOR ITS VALUE              01500000
.*          OTHERWISE, GENERATE A CL8 OF BLANKS,                        01550000
.*          ISSUING AN ERROR MESSAGE IF THIS IS NOT THE FIRST ENTRY     01600000
.********************************************************************** 01650000
.MODLINE ANOP                                                           01700000
         AIF   ('&ENTRYCT' NE '0').NOTFRST                              01762500
LS&TABCT EQU   *                                                        01775000
.NOTFRST ANOP                                                           01787500
         AIF   ('&LOGMODE' EQ '').NLOGMOD  LOGMODE SPECIFIED ?     @01A 01793700
.********************************************************************** 01795300
.*       IF 1ST CHARACTER OF LOGMODE NAME IS NUMERIC               @05A 01796900
.*          ISSUE ERROR MESSAGE                                    @05A 01798500
.********************************************************************** 01800100
&LOG1    SETA  1                                                   @05A 01801700
         AIF   ('&LOGMODE'(&LOG1,1) EQ '@' ).LOG30                 @05A 01803300
         AIF   ('&LOGMODE'(&LOG1,1) EQ '#' ).LOG30                 @05A 01804900
         AIF   ('&LOGMODE'(&LOG1,1) EQ '$' ).LOG30                 @05A 01806500
         AIF   ('&LOGMODE'(&LOG1,1) LT 'A' ).INVCHAR               @05A 01808100
         AIF   ('&LOGMODE'(&LOG1,1) LE 'I' ).LOG30                 @05A 01809700
         AIF   ('&LOGMODE'(&LOG1,1) LT 'J' ).INVCHAR               @05A 01811300
         AIF   ('&LOGMODE'(&LOG1,1) LE 'R' ).LOG30                 @05A 01812900
         AIF   ('&LOGMODE'(&LOG1,1) LT 'S' ).INVCHAR               @05A 01814500
         AIF   ('&LOGMODE'(&LOG1,1) LE 'Z' ).LOG30                 @05A 01816100
         AIF   ('&LOGMODE'(&LOG1,1) LE '9' ).INVCHAR               @05A 01817700
.LOG30   ANOP                                                      @05A 01819300
&LOG1    SETA &LOG1+1          POINT TO NEXT CHARACTER             @05A 01820900
         AIF   (&LOG1 GT K'&LOGMODE ).LOGOK                        @05A 01822500
         AIF   ('&LOGMODE'(&LOG1,1) EQ '@' ).LOG30                 @05A 01824100
         AIF   ('&LOGMODE'(&LOG1,1) EQ '#' ).LOG30                 @05A 01825700
         AIF   ('&LOGMODE'(&LOG1,1) EQ '$' ).LOG30                 @05A 01827300
         AIF   ('&LOGMODE'(&LOG1,1) LT 'A' ).INVCHAR               @05A 01828900
         AIF   ('&LOGMODE'(&LOG1,1) LE 'I' ).LOG30                 @05A 01830500
         AIF   ('&LOGMODE'(&LOG1,1) LT 'J' ).INVCHAR               @05A 01832100
         AIF   ('&LOGMODE'(&LOG1,1) LE 'R' ).LOG30                 @05A 01833700
         AIF   ('&LOGMODE'(&LOG1,1) LT 'S' ).INVCHAR               @05A 01835300
         AIF   ('&LOGMODE'(&LOG1,1) LE 'Z' ).LOG30                 @05A 01836900
         AIF   ('&LOGMODE'(&LOG1,1) LT '0' ).INVCHAR               @05A 01838500
         AIF   ('&LOGMODE'(&LOG1,1) GT '9' ).INVCHAR               @05A 01840100
         AGO   .LOG30                                              @05A 01841700
.INVCHAR ANOP                                                      @05A 01843300
&ERRCHAR SETC  '&LOGMODE'(&LOG1,1)                                 @05A 01844900
         MNOTE 8,'''&ERRCHAR'' INVALID CHARACTER IN LOGMODE NAME'       01846500
.LOGOK   DC    CL8'&LOGMODE'                   LOGMODE             @05C 01848100
         AGO   .TYPEVAL                                                 01850000
.NLOGMOD ANOP                                                           01900000
         AIF   ('&ENTRYCT' EQ '0').LOGMOD1 FIRST TABLE ENTRY ?          01950000
         MNOTE 4,'LOGMODE= BLANK ONLY VALID FOR FIRST ENTRY '  @AZ56369 02000000
.LOGMOD1 ANOP                                                           02050000
         DC    CL8'        '                    LOGMODE DEFAULT         02100000
.********************************************************************** 02150000
.*       GENERATE CODE FOR THE TYPE KEYWORD VALUE OR DEFAULT            02200000
.********************************************************************** 02250000
.TYPEVAL ANOP                                                           02300000
         AIF   ('&TYPE' EQ '').TYPEDEF          TYPE NOT SPECIFIED @T1A 02325000
&CHAR1   SETC  '&TYPE'(1,2)                     FIRST 2 CHARS           02350000
&LEN     SETA  K'&TYPE                          VALUE LENGTH            02400000
&CHAR2   SETC  '&TYPE'(&LEN,1)                  LAST CHAR               02450000
         AIF   ('&CHAR1' NE 'X''').TYPCKQ1      IF NOT HEX, BRANCH      02500000
         AIF   ('&CHAR2' NE '''').TYPERR1       ENDING QUOTE MISSING    02550000
         AIF   (&LEN GT 5).TYPERR2              VALUE TOO LONG          02600000
         AIF   (&LEN EQ 4).TYPLEN4              LEN = 4?       @OY10691 02618100
&CHAR3(1) SETC  '&TYPE'(3,1)                    GET 3RD BYTE   @OY10691 02636200
         AIF   ('&CHAR3(1)' NE '0').TYPERR4     CHECK FOR HI   @OY10691 02654300
.TYPLEN4 ANOP                                                  @OY10691 02672400
&CHAR3(1) SETC  '&TYPE'(&LEN-1,1)               GET VALUE      @OY10691 02690500
         AIF   ('&CHAR3(1)' LT 'A').TYPERR5     INVALID VAL    @OY10691 02708600
         AIF   ('&CHAR3(1)' LE 'F').CHAROK1     CHECK FOR HI   @OY10691 02726700
         AIF   ('&CHAR3(1)' LT '0').TYPERR5     INVALID VAL    @OY10691 02744800
         AIF   ('&CHAR3(1)' GT '9').TYPERR5     FROM 0 TO 9    @OY10691 02762900
.CHAROK1 ANOP                                   CHAR IS OK     @OY10691 02781000
         DC    XL1&CHAR2&CHAR3(1)&CHAR2         GENERATE TYPE VALUE     02800000
         AGO   .FMPROF                          CHECK NEXT KEYWORD      02850000
.TYPCKQ1 ANOP                                                           02900000
&CHAR1   SETC  '&TYPE'(1,1)                     FIRST CHARACTER    @T1A 02933300
         AIF   ('&CHAR1' EQ '-').TYPERR3        VALUE NEGATIVE     @T1C 02966600
         AIF   (&TYPE GT 15).TYPERR4            VALUE TOO HI   @OY10691 03000000
         DC    AL1(&TYPE)                       GENERATE TYPE VALUE     03100000
         AGO   .FMPROF                          CHECK NEXT KEYWORD      03150000
.TYPERR1 ANOP                                                           03200000
         MNOTE 4,'NO ENDING QUOTE ON TYPE VALUE'                        03250000
         DC    XL1'01'                          GENERATE DEFAULT TYPE   03300000
         AGO   .FMPROF                          CHECK NEXT KEYWORD      03350000
.TYPERR2 ANOP                                                           03400000
         MNOTE 4,'TYPE VALUE IS TOO LONG'                               03450000
         DC    XL1'01'                          GENERATE DEFAULT TYPE   03500000
         AGO   .FMPROF                          CHECK NEXT KEYWORD      03550000
.TYPERR3 ANOP                                                           03600000
         MNOTE 4,'TYPE VALUE IS TOO LOW'                                03650000
         DC    XL1'01'                          GENERATE DEFAULT TYPE   03700000
         AGO   .FMPROF                          CHECK NEXT KEYWORD      03750000
.TYPERR4 ANOP                                                           03800000
         MNOTE 4,'TYPE VALUE IS TOO HIGH'                               03850000
         DC    XL1'01'                          GENERATE DEFAULT TYPE   03900000
         AGO   .FMPROF                          CHECK NEXT     @OY10691 03910000
.TYPERR5 ANOP                                                  @OY10691 03920000
         MNOTE 4,'TYPE VALUE IS INVALID'        INVALID VAL    @OY10691 03930000
.TYPEDEF DC    XL1'01'                          DEFAULT TYPE       @T1C 03940000
.********************************************************************** 03950000
.*       GENERATE CODE FOR THE FMPROF KEYWORD VALUE OR DEFAULT          04000000
.*                HEXADECIMAL CHECKING                                  04050000
.********************************************************************** 04100000
.FMPROF  ANOP                                                           04150000
         AIF   ('&FMPROF' EQ '').FMPDEF         FMPROF NULLS       @T1A 04175000
&CHAR1   SETC  '&FMPROF'(1,2)                   FIRST 2 CHARS           04200000
&LEN     SETA  K'&FMPROF                        VALUE LENGTH            04250000
&CHAR2   SETC  '&FMPROF'(&LEN,1)                LAST CHAR               04300000
         AIF   ('&CHAR1' NE 'X''').MODCKQ1      IF NOT HEX, BRANCH      04350000
         AIF   ('&CHAR2' NE '''').FMPERR1       ENDING QUOTE MISSING    04400000
         AIF   (&LEN GT 5).FMPERR2              VALUE TOO LONG          04450000
&CHAR3(1) SETC  '&FMPROF'(3,&LEN-3)             GET VALUE               04500000
&CHAR1   SETC  '&CHAR1'(1,1)                    SET TO X                04550000
         DC    &CHAR1.L1&CHAR2&CHAR3(1)&CHAR2   FM PROFILE              04600000
         AGO   .TSPROF                                                  04650000
.********************************************************************** 04700000
.*       GENERATE CODE FOR THE FMPROF KEYWORD VALUE OR DEFAULT          04750000
.*                DECIMAL PROCESSING                                    04800000
.********************************************************************** 04850000
.MODCKQ1 ANOP                                                           04900000
&CHAR1   SETC  '&FMPROF'(1,1)                   FIRST CHARACTER    @T1C 04950000
         AIF   ('&CHAR1' EQ '-').FMPERR3        VALUE NEGATIVE     @T1C 05000000
         AIF   (&FMPROF GT 255).FMPERR4         VALUE TOO HIGH     @T1C 05050000
         DC    AL1(&FMPROF)                     FM PROFILE - NUMERIC    05100000
         AGO   .TSPROF                                                  05150000
.********************************************************************** 05200000
.*       GENERATE CODE FOR THE FMPROF KEYWORD VALUE OR DEFAULT          05250000
.*                DEFAULT PROCESSING                                    05300000
.********************************************************************** 05350000
.FMPERR1 MNOTE 4,'FMPROF INVALID - NO ENDING QUOTE'            @AZ56369 05400000
         AGO   .NFMPROF                                                 05450000
.FMPERR2 MNOTE 4,'FMPROF INVALID - TOO MANY DIGITS'            @AZ56369 05500000
         AGO   .NFMPROF                                                 05550000
.FMPERR3 MNOTE 4,'FMPROF INVALID - VALUE LESS THAN 0'          @AZ56369 05600000
         AGO   .NFMPROF                                                 05650000
.FMPERR4 MNOTE 4,'FMPROF INVALID - VALUE GREATER THAN 255'     @AZ56369 05700000
.NFMPROF ANOP                                                           05750000
         MNOTE 4,'FMPROF INVALID - DEFAULT VALUE USED'         @AZ56369 05800000
.FMPDEF  DC    XL1'0'                           FM PROFILE DEFAULT @T1C 05850000
.********************************************************************** 05900000
.*       GENERATE CODE FOR THE TSPROF KEYWORD VALUE OR DEFAULT          05950000
.*                HEXIDECIMAL CHECKING                                  06000000
.********************************************************************** 06050000
.TSPROF  ANOP                                                           06100000
         AIF   ('&TSPROF' EQ '').TSPDEF         TSPROF NULLS       @T1A 06125000
&CHAR1   SETC  '&TSPROF'(1,2)                   FIRST 2 CHARS           06150000
&LEN     SETA  K'&TSPROF                        VALUE LENGTH            06200000
&CHAR2   SETC  '&TSPROF'(&LEN,1)                LAST CHAR               06250000
         AIF   ('&CHAR1' NE 'X''').MODCKQ2      IF NOT HEX, BRANCH      06300000
         AIF   ('&CHAR2' NE '''').TSPERR1       ENDING QUOTE MISSING    06350000
         AIF   (&LEN GT 5).TSPERR2              VALUE TOO LONG          06400000
&CHAR3(1) SETC  '&TSPROF'(3,&LEN-3)             GET VALUE               06450000
&CHAR1   SETC  '&CHAR1'(1,1)                    SET TO X                06500000
         DC    &CHAR1.L1&CHAR2&CHAR3(1)&CHAR2   TS PROFILE              06550000
         AGO   .PRIPROT                                                 06600000
.********************************************************************** 06650000
.*       GENERATE CODE FOR THE TSPROF KEYWORD VALUE OR DEFAULT          06700000
.*                DECIMAL PROCESSING                                    06750000
.********************************************************************** 06800000
.MODCKQ2 ANOP                                                           06850000
&CHAR1   SETC  '&TSPROF'(1,1)                   FIRST CHARACTER    @T1C 06900000
         AIF   ('&CHAR1' EQ '-').TSPERR3        VALUE NEGATIVE     @T1C 06950000
         AIF   (&TSPROF GT 255).TSPERR4         VALUE TOO HIGH     @T1C 07000000
         DC    AL1(&TSPROF)                     TS PROFILE - NUMERIC    07050000
         AGO   .PRIPROT                                                 07100000
.********************************************************************** 07150000
.*       GENERATE CODE FOR THE TSPROF KEYWORD VALUE OR DEFAULT          07200000
.*                DEFAULT PROCESSING                                    07250000
.********************************************************************** 07300000
.TSPERR1 MNOTE 4,'TSPROF INVALID - NO ENDING QUOTE'            @AZ56369 07350000
         AGO   .NTSPROF                                                 07400000
.TSPERR2 MNOTE 4,'TSPROF INVALID - TOO MANY DIGITS'            @AZ56369 07450000
         AGO   .NTSPROF                                                 07500000
.TSPERR3 MNOTE 4,'TSPROF INVALID - VALUE LESS THAN 0'          @AZ56369 07550000
         AGO   .NTSPROF                                                 07600000
.TSPERR4 MNOTE 4,'TSPROF INVALID - VALUE GREATER THAN 255'     @AZ56369 07650000
.NTSPROF ANOP                                                           07700000
         MNOTE 4,'TSPROF INVALID - DEFAULT VALUE USED'         @AZ56369 07750000
.TSPDEF  DC    XL1'0'                           TS PROFILE DEFAULT @T1C 07800000
.********************************************************************** 07850000
.*       GENERATE CODE FOR THE PRIPROT KEYWORD VALUE OR DEFAULT         07900000
.*                HEXIDECIMAL CHECKING                                  07950000
.********************************************************************** 08000000
.PRIPROT ANOP                                                           08050000
         AIF   ('&PRIPROT' EQ '').PRIPDEF       PRIPROT NULLS      @T1A 08075000
&CHAR1   SETC  '&PRIPROT'(1,2)                  FIRST 2 CHARS           08100000
&LEN     SETA  K'&PRIPROT                       VALUE LENGTH            08150000
&CHAR2   SETC  '&PRIPROT'(&LEN,1)               LAST CHAR               08200000
         AIF   ('&CHAR1' NE 'X''').MODCKQ3      IF NOT HEX, BRANCH      08250000
         AIF   ('&CHAR2' NE '''').PRIERR1       ENDING QUOTE MISSING    08300000
         AIF   (&LEN GT 5).PRIERR2              VALUE TOO LONG          08350000
&CHAR3(1) SETC  '&PRIPROT'(3,&LEN-3)            GET VALUE               08400000
&CHAR1   SETC  '&CHAR1'(1,1)                    SET TO X                08450000
         DC    &CHAR1.L1&CHAR2&CHAR3(1)&CHAR2   PRIPROT PROFILE         08500000
         AGO   .SECPROT                                                 08550000
.********************************************************************** 08600000
.*       GENERATE CODE FOR THE PRIPROT KEYWORD VALUE OR DEFAULT         08650000
.*                DECIMAL PROCESSING                                    08700000
.********************************************************************** 08750000
.MODCKQ3 ANOP                                                           08800000
&CHAR1   SETC  '&PRIPROT'(1,1)                  FIRST CHARACTER    @T1C 08850000
         AIF   ('&CHAR1' EQ '-').PRIERR3        VALUE NEGATIVE     @T1C 08900000
         AIF   (&PRIPROT GT 255).PRIERR4        VALUE TOO HIGH     @T1C 08950000
         DC    AL1(&PRIPROT)                    PRIPROT - NUMERIC       09000000
         AGO   .SECPROT                                                 09050000
.********************************************************************** 09100000
.*       GENERATE CODE FOR THE PRIPROT KEYWORD VALUE OR DEFAULT         09150000
.*                DEFAULT PROCESSING                                    09200000
.********************************************************************** 09250000
.PRIERR1 MNOTE 4,'PRIPROT INVALID - NO ENDING QUOTE'           @AZ56369 09300000
         AGO   .PRIPROF                                                 09350000
.PRIERR2 MNOTE 4,'PRIPROT INVALID - TOO MANY DIGITS'           @AZ56369 09400000
         AGO   .PRIPROF                                                 09450000
.PRIERR3 MNOTE 4,'PRIPROT INVALID - VALUE LESS THAN 0'         @AZ56369 09500000
         AGO   .PRIPROF                                                 09550000
.PRIERR4 MNOTE 4,'PRIPROT INVALID - VALUE GREATER THAN 255'    @AZ56369 09600000
.PRIPROF ANOP                                                           09650000
         MNOTE 4,'PRIPROT INVALID - DEFAULT VALUE USED'        @AZ56369 09700000
.PRIPDEF DC    XL1'0'                           PRIPROT DEFAULT    @T1C 09750000
.********************************************************************** 09800000
.*       GENERATE CODE FOR THE SECPROT KEYWORD VALUE OR DEFAULT         09850000
.*                HEXIDECIMAL CHECKING                                  09900000
.********************************************************************** 09950000
.SECPROT ANOP                                                           10000000
         AIF   ('&SECPROT' EQ '').SECPDEF       SECPROT NULLS      @T1A 10025000
&CHAR1   SETC  '&SECPROT'(1,2)                  FIRST 2 CHARS           10050000
&LEN     SETA  K'&SECPROT                       VALUE LENGTH            10100000
&CHAR2   SETC  '&SECPROT'(&LEN,1)               LAST CHAR               10150000
         AIF   ('&CHAR1' NE 'X''').MODCKQ4      IF NOT HEX, BRANCH      10200000
         AIF   ('&CHAR2' NE '''').SECERR1       ENDING QUOTE MISSING    10250000
         AIF   (&LEN GT 5).SECERR2              VALUE TOO LONG          10300000
&CHAR3(1) SETC  '&SECPROT'(3,&LEN-3)            GET VALUE               10350000
&CHAR1   SETC  '&CHAR1'(1,1)                    SET TO X                10400000
         DC    &CHAR1.L1&CHAR2&CHAR3(1)&CHAR2   SECPROT PROFILE         10450000
         AGO   .COMPROT                                                 10500000
.********************************************************************** 10550000
.*       GENERATE CODE FOR THE SECPROT KEYWORD VALUE OR DEFAULT         10600000
.*                DECIMAL PROCESSING                                    10650000
.********************************************************************** 10700000
.MODCKQ4 ANOP                                                           10750000
&CHAR1   SETC  '&SECPROT'(1,1)                  FIRST CHARACTER    @T1C 10800000
         AIF   ('&CHAR1' EQ '-').SECERR3        VALUE NEGATIVE     @T1C 10850000
         AIF   (&SECPROT GT 255).SECERR4        VALUE TOO HIGH     @T1C 10900000
         DC    AL1(&SECPROT)                    SECPROT - NUMERIC       10950000
         AGO   .COMPROT                                                 11000000
.********************************************************************** 11050000
.*       GENERATE CODE FOR THE SECPROT KEYWORD VALUE OR DEFAULT         11100000
.*                DEFAULT PROCESSING                                    11150000
.********************************************************************** 11200000
.SECERR1 MNOTE 4,'SECPROT INVALID - NO ENDING QUOTE'           @AZ56369 11250000
         AGO   .SECPROF                                                 11300000
.SECERR2 MNOTE 4,'SECPROT INVALID - TOO MANY DIGITS'           @AZ56369 11350000
         AGO   .SECPROF                                                 11400000
.SECERR3 MNOTE 4,'SECPROT INVALID - VALUE LESS THAN 0'         @AZ56369 11450000
         AGO   .SECPROF                                                 11500000
.SECERR4 MNOTE 4,'SECPROT INVALID - VALUE GREATER THAN 255'    @AZ56369 11550000
.SECPROF ANOP                                                           11600000
         MNOTE 4,'SECPROT INVALID - DEFAULT VALUE USED'        @AZ56369 11650000
.SECPDEF DC    XL1'0'                           SECPROT DEFAULT    @T1C 11700000
.********************************************************************** 11750000
.*       GENERATE CODE FOR THE COMPROT KEYWORD VALUE OR DEFAULT         11800000
.*                HEXIDECIMAL CHECKING                                  11850000
.********************************************************************** 11900000
.COMPROT ANOP                                                           11950000
         AIF   ('&COMPROT' EQ '').COMPDEF       COMPROT NULLS      @T1A 11975000
&CHAR1   SETC  '&COMPROT'(1,2)                  FIRST 2 CHARS           12000000
&LEN     SETA  K'&COMPROT                       VALUE LENGTH            12050000
&CHAR2   SETC  '&COMPROT'(&LEN,1)               LAST CHAR               12100000
         AIF   ('&CHAR1' NE 'X''').MODCKQ5      IF NOT HEX, BRANCH      12150000
         AIF   ('&CHAR2' NE '''').COMERR1       ENDING QUOTE MISSING    12200000
         AIF   (&LEN GT 7).COMERR2              VALUE TOO LONG          12250000
&CHAR3(1) SETC  '&COMPROT'(3,&LEN-3)            GET VALUE               12300000
&CHAR1   SETC  '&CHAR1'(1,1)                    SET TO X                12350000
         DC    &CHAR1.L2&CHAR2&CHAR3(1)&CHAR2   COMPROT PROFILE         12400000
         AGO   .SSNDS                                                   12450000
.********************************************************************** 12500000
.*       GENERATE CODE FOR THE COMPROT KEYWORD VALUE OR DEFAULT         12550000
.*                DECIMAL PROCESSING                                    12600000
.********************************************************************** 12650000
.MODCKQ5 ANOP                                                           12700000
&CHAR1   SETC  '&COMPROT'(1,1)                  FIRST CHARACTER    @T1C 12750000
         AIF   ('&CHAR1' EQ '-').COMERR3        VALUE NEGATIVE     @T1C 12800000
         AIF   (&COMPROT GT 65535).COMERR4      VALUE TOO HIGH     @T1C 12850000
         DC    AL2(&COMPROT)                    COMPROT - NUMERIC       12900000
         AGO   .SSNDS                                                   12950000
.********************************************************************** 13000000
.*       GENERATE CODE FOR THE COMPROT KEYWORD VALUE OR DEFAULT         13050000
.*                DEFAULT PROCESSING                                    13100000
.********************************************************************** 13150000
.COMERR1 MNOTE 4,'COMPROT INVALID - NO ENDING QUOTE'           @AZ56369 13200000
         AGO   .COMPROF                                                 13250000
.COMERR2 MNOTE 4,'COMPROT INVALID - TOO MANY DIGITS'           @AZ56369 13300000
         AGO   .COMPROF                                                 13350000
.COMERR3 MNOTE 4,'COMPROT INVALID - VALUE LESS THAN 0'         @AZ56369 13400000
         AGO   .COMPROF                                                 13450000
.COMERR4 MNOTE 4,'COMPROT INVALID - VALUE GREATER THAN 65535'  @AZ56369 13500000
.COMPROF ANOP                                                           13550000
         MNOTE 4,'COMPROT INVALID - DEFAULT VALUE USED'        @AZ56369 13600000
.COMPDEF DC    XL2'00'                          COMPROT DEFAULT    @T1C 13650000
.********************************************************************** 13700000
.*       GENERATE CODE FOR THE SSNDPAC KEYWORD VALUE OR DEFAULT.        13718700
.*       THE SECONDARY SEND PACING COUNT MAY BE ANY HEXADECIMAL NUMBER  13737400
.*       IN THE RANGE X'00' TO X'3F', BUT ANY HEXADECIMAL NUMBER IN THE 13749900
.*       RANGE X'00' TO X'FF', WHICH DOES NOT USE THE RESERVED BIT IN   13762400
.*       POSITION 1, CAN BE CODED FOR THIS PARAMETER.  AN ERROR MESSAGE 13774900
.*       WILL BE GENERATED AND THE DEFAULT VALUE WILL BE USED IF A      13787400
.*       HEXADECIMAL NUMBER IS CODED WHICH USES THE RESERVED BIT.  THE  13799900
.*       HIGH ORDER BIT SPECIFIES WHETHER ONE OR TWO STAGE PACING IS TO 13812400
.*       BE USED WHILE THE LOW ORDER 6 BITS CORRESPOND TO THE SECONDARY 13824900
.*       SEND PACING COUNT.                                   @06C @07C 13837400
.********************************************************************** 13850000
.SSNDS   ANOP                                                           13900000
         AIF   ('&SSNDPAC' EQ '').SSNDDEF       SSNDPAC NULLS      @T1A 13925000
&CHAR1   SETC  '&SSNDPAC'(1,2)                  FIRST 2 CHARS           13950000
&LEN     SETA  K'&SSNDPAC                       VALUE LENGTH            14000000
&CHAR2   SETC  '&SSNDPAC'(&LEN,1)               LAST CHAR               14050000
         AIF   ('&CHAR1' NE 'X''').MODCKQ6      IF NOT HEX, BRANCH      14100000
         AIF   ('&CHAR2' NE '''').SSNERR1       ENDING QUOTE MISSING    14150000
         AIF   (&LEN GT 5).SSNERR2              VALUE TOO LONG          14200000
&CHAR3(1) SETC  '&SSNDPAC'(3,&LEN-3)            GET VALUE               14250000
         AIF   (&LEN-3 EQ 1).HEXOK1             HEX VALUE <= X'F', OK   14254100
.*                                                                 @07A 14258200
         AIF   ('&CHAR3(1)'(1,1) EQ '4').SSNERR5 CHECK - DID       @07A 14262300
         AIF   ('&CHAR3(1)'(1,1) EQ '5').SSNERR5 VALUE FOR         @07A 14266400
         AIF   ('&CHAR3(1)'(1,1) EQ '6').SSNERR5 SSNDPAC TRY       @07A 14270500
         AIF   ('&CHAR3(1)'(1,1) EQ '7').SSNERR5 TO USE BIT        @07A 14274600
         AIF   ('&CHAR3(1)'(1,1) EQ 'C').SSNERR5 POSITION 1        @07A 14278700
         AIF   ('&CHAR3(1)'(1,1) EQ 'D').SSNERR5 (WHICH IS         @07A 14282800
         AIF   ('&CHAR3(1)'(1,1) EQ 'E').SSNERR5 RESERVED)         @07A 14286900
         AIF   ('&CHAR3(1)'(1,1) EQ 'F').SSNERR5                   @07A 14291000
.HEXOK1  ANOP                                                      @07A 14295100
&CHAR1   SETC  '&CHAR1'(1,1)                    SET TO X                14300000
         DC    &CHAR1.L1&CHAR2&CHAR3(1)&CHAR2   SSNDPAC PROFILE         14350000
         AGO   .SRCVS                                                   14400000
.********************************************************************** 14450000
.*       GENERATE CODE FOR THE SSNDPAC KEYWORD VALUE OR DEFAULT         14500000
.*                DECIMAL PROCESSING                                    14550000
.*       THE SECONDARY SEND PACING COUNT MAY BE ANY DECIMAL NUMBER      14566600
.*       FROM 0 TO 63.                                             @06C 14583200
.********************************************************************** 14600000
.MODCKQ6 ANOP                                                           14650000
&CHAR1   SETC  '&SSNDPAC'(1,1)                  FIRST CHARACTER    @T1C 14700000
         AIF   ('&CHAR1' EQ '-').SSNERR3        VALUE NEGATIVE     @T1C 14750000
         AIF   (&SSNDPAC GT 63).SSNERR4         VALUE TOO HIGH     @T1C 14800000
         DC    AL1(&SSNDPAC)                    SSNDPAC - NUMERIC       14850000
         AGO   .SRCVS                                                   14900000
.********************************************************************** 14950000
.*       GENERATE CODE FOR THE SSNDPAC KEYWORD VALUE OR DEFAULT         15000000
.*                DEFAULT PROCESSING                                    15050000
.********************************************************************** 15100000
.SSNERR1 MNOTE 4,'SSNDPAC INVALID - NO ENDING QUOTE'           @AZ56369 15150000
         AGO   .SSNPROF                                                 15200000
.SSNERR2 MNOTE 4,'SSNDPAC INVALID - TOO MANY DIGITS'           @AZ56369 15250000
         AGO   .SSNPROF                                                 15300000
.SSNERR3 MNOTE 4,'SSNDPAC INVALID - VALUE LESS THAN 0'         @AZ56369 15350000
         AGO   .SSNPROF                                                 15400000
.SSNERR4 MNOTE 4,'SSNDPAC INVALID - VALUE GREATER THAN 63'     @AZ56369 15450000
         AGO   .SSNPROF                                            @07A 15466600
.SSNERR5 MNOTE 4,'SSNDPAC INVALID - ATTEMPT TO USE RESERVED BIT'   @07A 15483200
.SSNPROF ANOP                                                           15500000
         MNOTE 4,'SSNDPAC INVALID - DEFAULT VALUE USED'        @AZ56369 15550000
.SSNDDEF DC    XL1'0'                           SSNDPAC DEFAULT    @T1C 15600000
.********************************************************************** 15650000
.*       GENERATE CODE FOR THE SRCVPAC KEYWORD VALUE OR DEFAULT.        15668700
.*       THE SECONDARY RECEIVE PACING COUNT MAY BE ANY HEXADECIMAL      15687400
.*       NUMBER IN THE RANGE X'00' TO X'3F', BUT ANY HEXADECIMAL NUMBER 15706100
.*       IN THE RANGE X'00' TO X'FF', WHICH DOES NOT USE THE RESERVED   15717800
.*       BIT IN POSITION 1, CAN BE CODED FOR THIS PARAMETER.  AN ERROR  15729500
.*       MESSAGE WILL BE GENERATED AND THE DEFAULT VALUE WILL BE USED   15741200
.*       IF A HEXADECIMAL NUMBER IS CODED WHICH USES THE RESERVED BIT.  15752900
.*       THE HIGH ORDER BIT SPECIFIES WHETHER FIXED OR ADAPTIVE PACING  15764600
.*       IS TO BE USED WHILE THE LOW ORDER 6 BITS CORRESPOND TO THE     15776300
.*       SECONDARY RECEIVE PACING COUNT.                      @06C @07C 15788000
.********************************************************************** 15800000
.SRCVS   ANOP                                                           15850000
         AIF   ('&SRCVPAC' EQ '').SRCVDEF       SRCVPAC NULLS      @T1A 15875000
&CHAR1   SETC  '&SRCVPAC'(1,2)                  FIRST 2 CHARS           15900000
&LEN     SETA  K'&SRCVPAC                       VALUE LENGTH            15950000
&CHAR2   SETC  '&SRCVPAC'(&LEN,1)               LAST CHAR               16000000
         AIF   ('&CHAR1' NE 'X''').MODCKQ7      IF NOT HEX, BRANCH      16050000
         AIF   ('&CHAR2' NE '''').SRCERR1       ENDING QUOTE MISSING    16100000
         AIF   (&LEN GT 5).SRCERR2              VALUE TOO LONG          16150000
&CHAR3(1) SETC  '&SRCVPAC'(3,&LEN-3)            GET VALUE               16200000
         AIF   (&LEN-3 EQ 1).HEXOK2             HEX VALUE <= X'F', OK   16204100
.*                                                                 @07A 16208200
         AIF   ('&CHAR3(1)'(1,1) EQ '4').SRCERR5 CHECK - DID       @07A 16212300
         AIF   ('&CHAR3(1)'(1,1) EQ '5').SRCERR5 VALUE FOR         @07A 16216400
         AIF   ('&CHAR3(1)'(1,1) EQ '6').SRCERR5 SRCVPAC TRY       @07A 16220500
         AIF   ('&CHAR3(1)'(1,1) EQ '7').SRCERR5 TO USE BIT        @07A 16224600
         AIF   ('&CHAR3(1)'(1,1) EQ 'C').SRCERR5 POSITION 1        @07A 16228700
         AIF   ('&CHAR3(1)'(1,1) EQ 'D').SRCERR5 (WHICH IS         @07A 16232800
         AIF   ('&CHAR3(1)'(1,1) EQ 'E').SRCERR5 RESERVED)         @07A 16236900
         AIF   ('&CHAR3(1)'(1,1) EQ 'F').SRCERR5                   @07A 16241000
.HEXOK2  ANOP                                                      @07A 16245100
&CHAR1   SETC  '&CHAR1'(1,1)                    SET TO X                16250000
         DC    &CHAR1.L1&CHAR2&CHAR3(1)&CHAR2   SRCVPAC PROFILE         16300000
         AGO   .RUSZS                                                   16350000
.********************************************************************** 16400000
.*       GENERATE CODE FOR THE SRCVPAC KEYWORD VALUE OR DEFAULT         16450000
.*                DECIMAL PROCESSING                                    16500000
.*       THE SECONDARY RECEIVE PACING COUNT MAY BE ANY DECIMAL          16516600
.*       NUMBER FROM 0 TO 63                                       @06C 16533200
.********************************************************************** 16550000
.MODCKQ7 ANOP                                                           16600000
&CHAR1   SETC  '&SRCVPAC'(1,1)                  FIRST CHARACTER    @T1C 16650000
         AIF   ('&CHAR1' EQ '-').SRCERR3        VALUE NEGATIVE     @T1C 16700000
         AIF   (&SRCVPAC GT 63).SRCERR4         VALUE TOO HIGH     @T1C 16750000
         DC    AL1(&SRCVPAC)                    SRCVPAC - NUMERIC       16800000
         AGO   .RUSZS                                                   16850000
.********************************************************************** 16900000
.*       GENERATE CODE FOR THE SRCVPAC KEYWORD VALUE OR DEFAULT         16950000
.*                DEFAULT PROCESSING                                    17000000
.********************************************************************** 17050000
.SRCERR1 MNOTE 4,'SRCVPAC INVALID - NO ENDING QUOTE'           @AZ56369 17100000
         AGO   .SRCPROF                                                 17150000
.SRCERR2 MNOTE 4,'SRCVPAC INVALID - TOO MANY DIGITS'           @AZ56369 17200000
         AGO   .SRCPROF                                                 17250000
.SRCERR3 MNOTE 4,'SRCVPAC INVALID - VALUE LESS THAN 0'         @AZ56369 17300000
         AGO   .SRCPROF                                                 17350000
.SRCERR4 MNOTE 4,'SRCVPAC INVALID - VALUE GREATER THAN 63'     @AZ56369 17400000
         AGO   .SRCPROF                                            @07A 17416600
.SRCERR5 MNOTE 4,'SRCVPAC INVALID - ATTEMPT TO USE RESERVED BIT'   @07A 17433200
.SRCPROF ANOP                                                           17450000
         MNOTE 4,'SRCVPAC INVALID - DEFAULT VALUE USED'        @AZ56369 17500000
.SRCVDEF DC    XL1'0'                           SRCVPAC DEFAULT    @T1C 17550000
.********************************************************************** 17600000
.*       GENERATE CODE FOR THE RUSIZES KEYWORD VALUE OR DEFAULT         17650000
.*                HEXADECIMAL CHECKING                                  17700000
.********************************************************************** 17750000
.RUSZS   ANOP                                                           17800000
         AIF   ('&RUSIZES' EQ '').RUSDEF        RUSIZES NULLS      @T1A 17825000
&CHAR1   SETC  '&RUSIZES'(1,2)                  FIRST 2 CHARS           17850000
&LEN     SETA  K'&RUSIZES                       VALUE LENGTH            17900000
&CHAR2   SETC  '&RUSIZES'(&LEN,1)               LAST CHAR               17950000
         AIF   ('&CHAR1' NE 'X''').RUSERR1      IF NOT HEX, BRANCH      18000000
         AIF   ('&CHAR2' NE '''').RUSERR2       ENDING QUOTE MISSING    18050000
         AIF   (&LEN GT 7).RUSERR3              VALUE TOO LONG          18100000
&CHAR3(1) SETC  '&RUSIZES'(3,&LEN-3)            GET VALUE               18150000
&CHAR1   SETC  '&CHAR1'(1,1)                    SET TO X                18200000
         DC    &CHAR1.L2&CHAR2&CHAR3(1)&CHAR2   RUSIZES PROFILE         18250000
         AGO   .RUSEND                                                  18300000
.********************************************************************** 18350000
.*       GENERATE CODE FOR THE RUSIZES KEYWORD VALUE OR DEFAULT         18400000
.*                DEFAULT PROCESSING                                    18450000
.********************************************************************** 18500000
.RUSERR1 MNOTE 4,'RUSIZES INVALID - NOT A HEX NUMBER'                   18550000
         AGO   .RUSPROF                                                 18600000
.RUSERR2 MNOTE 4,'RUSIZES INVALID - NO ENDING QUOTE'                    18650000
         AGO   .RUSPROF                                                 18700000
.RUSERR3 MNOTE 4,'RUSIZES INVALID - TOO MANY DIGITS'                    18750000
.RUSPROF ANOP                                                           18800000
         MNOTE 4,'RUSIZES INVALID - DEFAULT VALUE USED'                 18850000
.RUSDEF  DC    XL2'00'                          RUSIZES DEFAULT    @T1C 18900000
.********************************************************************** 18950000
.*       GENERATE CODE FOR THE PSNDPAC KEYWORD VALUE OR DEFAULT.        18968700
.*       THE PRIMARY SEND PACING COUNT MAY BE ANY HEXADECIMAL NUMBER    18987400
.*       IN THE RANGE X'00' TO X'3F', BUT ANY HEXADECIMAL NUMBER IN THE 18999900
.*       RANGE X'00' TO X'FF', WHICH DOES NOT USE THE RESERVED BIT IN   19012400
.*       POSITION 1, CAN BE CODED FOR THIS PARAMETER.  AN ERROR MESSAGE 19024900
.*       WILL BE GENERATED AND THE DEFAULT VALUE WILL BE USED IF A      19037400
.*       HEXADECIMAL NUMBER IS CODED WHICH USES THE RESERVED BIT.  THE  19049900
.*       HIGH ORDER BIT SPECIFIES WHETHER ONE OR TWO STAGE PACING IS    19062400
.*       TO BE USED WHILE THE LOW ORDER 6 BITS CORRESPOND TO THE        19074900
.*       PRIMARY SEND PACING COUNT.                           @06C @07C 19087400
.********************************************************************** 19100000
.RUSEND  ANOP                                                           19150000
         AIF   ('&PSNDPAC' EQ '').PSNDDEF       RUSIZES NULLS      @T1A 19175000
&CHAR1   SETC  '&PSNDPAC'(1,2)                  FIRST 2 CHARS           19200000
&LEN     SETA  K'&PSNDPAC                       VALUE LENGTH            19250000
&CHAR2   SETC  '&PSNDPAC'(&LEN,1)               LAST CHAR               19300000
         AIF   ('&CHAR1' NE 'X''').MODCKQ8      IF NOT HEX, BRANCH      19350000
         AIF   ('&CHAR2' NE '''').PSNERR1       ENDING QUOTE MISSING    19400000
         AIF   (&LEN GT 5).PSNERR2              VALUE TOO LONG          19450000
&CHAR3(1) SETC  '&PSNDPAC'(3,&LEN-3)            GET VALUE               19500000
         AIF   (&LEN-3 EQ 1).HEXOK3             HEX VALUE <= X'F', OK   19504100
.*                                                                 @07A 19508200
         AIF   ('&CHAR3(1)'(1,1) EQ '4').PSNERR5 CHECK - DID       @07A 19512300
         AIF   ('&CHAR3(1)'(1,1) EQ '5').PSNERR5 VALUE FOR         @07A 19516400
         AIF   ('&CHAR3(1)'(1,1) EQ '6').PSNERR5 PSNDPAC TRY       @07A 19520500
         AIF   ('&CHAR3(1)'(1,1) EQ '7').PSNERR5 TO USE BIT        @07A 19524600
         AIF   ('&CHAR3(1)'(1,1) EQ 'C').PSNERR5 POSITION 1        @07A 19528700
         AIF   ('&CHAR3(1)'(1,1) EQ 'D').PSNERR5 (WHICH IS         @07A 19532800
         AIF   ('&CHAR3(1)'(1,1) EQ 'E').PSNERR5 RESERVED)         @07A 19536900
         AIF   ('&CHAR3(1)'(1,1) EQ 'F').PSNERR5                   @07A 19541000
.HEXOK3  ANOP                                                      @07A 19545100
&CHAR1   SETC  '&CHAR1'(1,1)                    SET TO X                19550000
         DC    &CHAR1.L1&CHAR2&CHAR3(1)&CHAR2   PSNDPAC PROFILE         19600000
         AGO   .PSERIC                                                  19650000
.********************************************************************** 19700000
.*       GENERATE CODE FOR THE PSNDPAC KEYWORD VALUE OR DEFAULT         19750000
.*                DECIMAL PROCESSING                                    19800000
.*       THE PRIMARY SEND PACING COUNT MAY BE ANY DECIMAL NUMBER        19816600
.*       FROM 0 TO 63.                                             @06C 19833200
.********************************************************************** 19850000
.MODCKQ8 ANOP                                                           19900000
&CHAR1   SETC  '&PSNDPAC'(1,1)                  FIRST CHARACTER    @T1C 19950000
         AIF   ('&CHAR1' EQ '-').PSNERR3        VALUE NEGATIVE     @T1C 20000000
         AIF   (&PSNDPAC GT 63).PSNERR4         VALUE TOO HIGH     @T1C 20050000
         DC    AL1(&PSNDPAC)                    PSNDPAC - NUMERIC       20100000
         AGO   .PSERIC                                                  20150000
.********************************************************************** 20200000
.*       GENERATE CODE FOR THE PSNDPAC KEYWORD VALUE OR DEFAULT         20250000
.*                DEFAULT PROCESSING                                    20300000
.********************************************************************** 20350000
.PSNERR1 MNOTE 4,'PSNDPAC INVALID - NO ENDING QUOTE'           @AZ56369 20400000
         AGO   .PSNPROF                                                 20450000
.PSNERR2 MNOTE 4,'PSNDPAC INVALID - TOO MANY DIGITS'           @AZ56369 20500000
         AGO   .PSNPROF                                                 20550000
.PSNERR3 MNOTE 4,'PSNDPAC INVALID - VALUE LESS THAN 0'         @AZ56369 20600000
         AGO   .PSNPROF                                                 20650000
.PSNERR4 MNOTE 4,'PSNDPAC INVALID - VALUE GREATER THAN 63'     @AZ56369 20700000
         AGO   .PSNPROF                                            @07A 20716600
.PSNERR5 MNOTE 4,'PSNDPAC INVALID - ATTEMPT TO USE RESERVED BIT'   @07A 20733200
.PSNPROF ANOP                                                           20750000
         MNOTE 4,'PSNDPAC INVALID - DEFAULT VALUE USED'        @AZ56369 20800000
.PSNDDEF DC    XL1'0'                           PSNDPAC DEFAULT    @T1C 20850000
.********************************************************************** 20900000
.*       GENERATE RESERVED FIELD                                        20950000
.********************************************************************** 21000000
.PSERIC  ANOP                                                @D34EKMP   21050000
         AIF   ('&PSERVIC' EQ '').PSEDEF        PSERVIC NULLS      @T1A 21075000
         DC     XL1'00'                         RESERVED     @D34EKMP   21100000
.********************************************************************** 21150000
.*       GENERATE CODE FOR THE PSERVIC KEYWORD VALUE OR DEFAULT         21200000
.*                HEXADECIMAL CHECKING                                  21250000
.********************************************************************** 21300000
&CHAR1   SETC  '&PSERVIC'(1,2)                  FIRST 2 CHARS           21350000
&LEN     SETA  K'&PSERVIC                       VALUE LENGTH            21400000
&CHAR2   SETC  '&PSERVIC'(&LEN,1)               LAST CHAR               21450000
         AIF   ('&CHAR1' NE 'X''').PSEERR1      IF NOT HEX, BRANCH      21500000
         AIF   ('&CHAR2' NE '''').PSEERR2       ENDING QUOTE MISSING    21550000
         AIF   (&LEN GT 27).PSEERR3             VALUE TOO LONG          21600000
.********************************************************************** 21650000
.*       GENERATE CODE FOR THE PSERVIC KEYWORD VALUE OR DEFAULT         21700000
.*                LOOP TO LOAD LOCAL ARRAY                              21750000
.********************************************************************** 21800000
&LEN     SETA  &LEN-3                                                   21850000
&I       SETA  0                                             @DM39835   21900000
&J       SETA  3                                             @DM39835   21950000
&K       SETA  8                                             @DM39835   22000000
.PSLOOP  ANOP                                                @DM39835   22050000
&I       SETA  &I+1                                          @DM39835   22100000
         AIF   (&K LE &LEN).PSMOVE                           @DM39835   22150000
&K       SETA  &LEN                                          @DM39835   22200000
.PSMOVE  ANOP                                                @DM39835   22250000
&CHAR3(&I) SETC '&PSERVIC'(&J,&K)                            @DM39835   22300000
&J       SETA  &J+&K                                         @DM39835   22350000
&LEN     SETA  &LEN-&K                                       @DM39835   22400000
         AIF   (&LEN GT 0).PSLOOP                            @DM39835   22450000
&CHAR4   SETC  '&CHAR1'(2,1)                                            22500000
&CHAR1   SETC  '&CHAR1'(1,1)                                            22550000
         DC    &CHAR1.L12&CHAR4&CHAR3(1)&CHAR3(2)&CHAR3(3)&CHAR4        22600000
*                                               PRESENTATION @DM39835   22650000
*                                               SERVICES     @DM39835   22700000
         AGO   .ENCR                                                    22750000
.********************************************************************** 22800000
.*       GENERATE CODE FOR THE PSERVIC KEYWORD VALUE OR DEFAULT         22850000
.*                DEFAULT PROCESSING                                    22900000
.********************************************************************** 22950000
.PSEERR1 MNOTE 4,'PSERVIC INVALID - NOT A HEX NUMBER'          @AZ56369 23000000
         AGO   .PSERVD                                                  23050000
.PSEERR2 MNOTE 4,'PSERVIC INVALID - NO ENDING QUOTE'           @AZ56369 23100000
         AGO   .PSERVD                                                  23150000
.PSEERR3 MNOTE 4,'PSERVIC INVALID - TOO MANY DIGITS'           @AZ56369 23200000
.PSERVD  ANOP                                                           23250000
         MNOTE 4,'PSERVIC INVALID - DEFAULT VALUE USED'        @AZ56369 23300000
.PSEDEF  DC    XL12'00'                        PSERVIC DEFAULT     @T1C 23350000
.********************************************************************** 23400000
.*       GENERATE CODE FOR CRYPTO KEYWORD VALUES                        23450000
.********************************************************************** 23500000
.ENCR    ANOP                                                  @XM30113 23550000
         AIF   ('&ENCR' EQ '').ENCRDEF         ENCR NULLS          @T1A 23575000
&CHAR1   SETC  '&ENCR'(1,2)                                    @XM30113 23600000
&LEN     SETA  K'&ENCR                                         @XM30113 23650000
&CHAR2   SETC  '&ENCR'(&LEN,1)                                 @XM30113 23700000
         AIF   ('&CHAR1' EQ 'X''').ENCRCHX                     @XM30113 23750000
         AIF   ('&CHAR1' EQ 'B''').ENCRCHB                     @XM30344 23800000
         AIF   (&LEN EQ 2).ENCRNM2                             @ZM35828 23850000
         AIF   ('&CHAR1' LT '0').ENCRER1                       @XM30113 23900000
         AIF   ('&CHAR1' GT '9').ENCRER2                       @XM30113 23950000
         AIF   ('&CHAR1' EQ '2').ENCRER1                       @XM30113 24000000
         AIF   ('&CHAR1' EQ '6').ENCRER1                       @XM30113 24050000
         DC    AL1(16*&ENCR)                   ENCR VALUE      @XM30344 24100000
         AGO   .DEF                                            @XM30113 24150000
.ENCRNM2 ANOP                                                  @XM30113 24200000
         AIF   ('&CHAR1' LT '00').ENCRER1                      @XM30113 24250000
         AIF   ('&CHAR1' EQ '02').ENCRER1                      @XM30113 24300000
         AIF   ('&CHAR1' EQ '06').ENCRER1                      @XM30113 24350000
         AIF   ('&CHAR1' EQ '10').ENCRER1                      @XM30113 24400000
         AIF   ('&CHAR1' GT '11').ENCRER2                      @XM30113 24450000
         DC    AL1(16*&ENCR)                   ENCR VALUE      @XM30344 24500000
         AGO   .DEF                                            @XM30113 24550000
.ENCRCHX ANOP                                                  @XM30113 24600000
         AIF   ('&CHAR2' NE '''').ENCRER3                      @XM30344 24650000
         AIF   (&LEN LT 4).ENCRER9                                 @X4A 24683300
         AIF   (&LEN GT 5).ENCRER5                                 @X4C 24716600
         AGO   .ENCROPH                                        @XM30344 24750000
.ENCRCHB ANOP                                                  @XM30344 24800000
         AIF   ('&CHAR2' NE '''').ENCRER3                      @XM30344 24850000
         AIF   (&LEN NE 7).ENCRER6                             @XM30344 24900000
&CHAR3(1) SETC '&ENCR'(3,&LEN-3)                               @XM30344 24950000
&CHAR4   SETC  '&CHAR1'(2,1)                                   @XM30344 25000000
&CHAR1   SETC  '&CHAR1'(1,1)                                   @XM30344 25050000
&I       SETA  0                                               @XM30344 25100000
.ENCRBCK ANOP                                                  @XM30344 25150000
&I       SETA  &I+1                                            @XM30344 25200000
         AIF   (&I GT 4).ENCRBOK                               @XM30344 25250000
         AIF   ('&CHAR3(1)'(&I,1) EQ '0').ENCRBCK              @XM30344 25300000
         AIF   ('&CHAR3(1)'(&I,1) NE '1').ENCRER7              @XM30344 25350000
         AGO   .ENCRBCK                                        @XM30344 25400000
.ENCRBOK ANOP                                                  @XM30344 25450000
         AIF   ('&CHAR3(1)'(1,2) EQ '11').ENCRER8              @XM30344 25500000
         AIF   ('&CHAR3(1)'(3,2) EQ '10').ENCRER8              @XM30344 25550000
&CHAR3(1) SETC '&CHAR3(1)'.'0000'                              @XM30344 25600000
         AGO   .ENCRGEN                                        @XM30344 25650000
.ENCROPH ANOP                                                  @XM30113 25700000
&CHAR3(1) SETC '&ENCR'(3,&LEN-3)                               @XM30113 25750000
&CHAR4    SETC '&CHAR1'(2,1)                                   @XM30113 25800000
&CHAR1    SETC '&CHAR1'(1,1)                                   @XM30113 25850000
         AIF (&LEN NE 4).ENCRONE                                   @X4A 25862500
&CHAR3(1) SETC '&CHAR3(1)'.'0'                                     @X5A 25875000
.ENCRONE ANOP                                                      @X4A 25887500
         AIF ('&CHAR3(1)'(2,1) NE '0').ENCRER4                 @XM30344 25900000
         AIF ('&CHAR3(1)'(1,1) GE '0').ENCRNUM                 @XM30344 25950000
         AIF ('&CHAR3(1)'(1,1) EQ 'B').ENCRGEN                 @XM30344 26000000
         AGO .ENCRER4                                          @XM30344 26050000
.ENCRNUM ANOP                                                  @XM30344 26100000
         AIF ('&CHAR3(1)'(1,1) GT '9').ENCRER4                 @XM30344 26150000
         AIF ('&CHAR3(1)'(1,1) EQ '2').ENCRER4                 @XM30344 26200000
         AIF ('&CHAR3(1)'(1,1) EQ '6').ENCRER4                 @XM30344 26250000
.ENCRGEN ANOP                                                  @XM30344 26300000
         DC    &CHAR1.L1&CHAR4&CHAR3(1)&CHAR2  ENCR VALUE      @XM30113 26350000
         AGO .DEF                                              @XM30113 26400000
.ENCRER1 ANOP                                                  @XM30113 26450000
         MNOTE 4,'ENCR VALUE IS INVALID-DEFAULT USED'          @AZ56369 26500000
         MNOTE 4,'CHECK FOR NON-NUMERIC CHARACTER'             @AZ56369 26550000
         AGO .NENCR                                            @XM30113 26600000
.ENCRER2 ANOP                                                  @XM30113 26650000
         MNOTE 4,'ENCR VALUE IS INVALID-DEFAULT USED'          @AZ56369 26700000
         MNOTE 4,'CHECK FOR VALUE EXCEEDING MAXIMUM ALLOWED'   @AZ56369 26750000
         AGO .NENCR                                            @XM30113 26800000
.ENCRER3 ANOP                                                  @XM30113 26850000
         MNOTE 4,'ENCR VALUE IS INVALID-DEFAULT USED'          @AZ56369 26900000
         MNOTE 4,'CHECK FOR UNBALANCED QUOTES'                 @AZ56369 26950000
         AGO .NENCR                                            @XM30113 27000000
.ENCRER4 ANOP                                                  @XM30113 27050000
         MNOTE 4,'ENCR VALUE IS INVALID-DEFAULT USED'          @AZ56369 27100000
         MNOTE 4,'CHECK FOR NON-HEX DIGITS'                    @AZ56369 27150000
         AGO   .NENCR                                          @XM30113 27200000
.ENCRER5 ANOP                                                  @XM30344 27250000
         MNOTE 4,'ENCR VALUE IS INVALID-DEFAULT USED'          @AZ56369 27300000
         MNOTE 4,'CHECK FOR HEX STRING EXCEEDING 2-DIGITS'     @AZ56369 27350000
         AGO   .NENCR                                          @XM30344 27400000
.ENCRER6 ANOP                                                  @XM30344 27450000
         MNOTE 4,'ENCR VALUE IS INVALID-DEFAULT USED'          @AZ56369 27500000
         MNOTE 4,'CHECK FOR BINARY STRING EXCEEDING 4-BITS'    @AZ56369 27550000
         AGO   .NENCR                                          @XM30344 27600000
.ENCRER7 ANOP                                                  @XM30344 27650000
         MNOTE 4,'ENCR VALUE IS INVALID-DEFAULT USED'          @AZ56369 27700000
         MNOTE 4,'CHECK FOR NON-BINARY CHARACTERS'             @AZ56369 27750000
         AGO   .NENCR                                          @XM30344 27800000
.ENCRER8 ANOP                                                  @XM30344 27850000
         MNOTE 4,'ENCR VALUE IS INVALID-DEFAULT USED'          @AZ56369 27900000
         MNOTE 4,'CHECK FOR INVALID BIT COMBINATION'           @AZ56369 27950000
         AGO   .NENCR                                              @X4A 27960000
.ENCRER9 ANOP                                                      @X4A 27970000
         MNOTE 4,'ENCR VALUE IS INVALID-DEFAULT USED'              @X4A 27980000
         MNOTE 4,'CHECK FOR INVALID HEX COMBINATION'               @X4A 27990000
.NENCR   ANOP                                                  @XM30113 28000000
.ENCRDEF DC    XL1'00'                          ENCR DEFAULT       @T1C 28050000
.********************************************************************** 28100000
.*       GENERATE CODE FOR COSNAME                                      28150000
.********************************************************************** 28200000
.DEF     ANOP                                                           28250000
         DC    XL1'08'                          COSNAME LENGTH          28300000
         AIF   ('&COS' EQ '').NCOSNAM                                   28350000
         DC    CL8'&COS'                        COSNAME                 28400000
         AGO   .USER                                                    28450000
.NCOSNAM ANOP                                                           28500000
         DC    CL8'        '                    COSNAME DEFAULT         28550000
.USER    ANOP                                                           28600000
         DC    XL1'00'                          USER DATA LENGTH        28650000
.********************************************************************** 28700000
.*       GENERATE CODE FOR THE LANG KEYWORD VALUE OR DEFAULT            28750000
.*                HEXIDECIMAL CHECKING                                  28800000
.********************************************************************** 28850000
.LANG    ANOP                                                           28900000
         AIF   ('&LANG' EQ '').LANGDEF          LANG NULLS         @T1A 28925000
&CHAR1   SETC  '&LANG'(1,2)                     FIRST 2 CHARS           28950000
&LEN     SETA  K'&LANG                          VALUE LENGTH            29000000
&CHAR2   SETC  '&LANG'(&LEN,1)                  LAST CHAR               29050000
         AIF   ('&CHAR1' NE 'X''').MODCKQ9      IF NOT HEX, BRANCH      29100000
         AIF   ('&CHAR2' NE '''').LANERR1       ENDING QUOTE MISSING    29150000
         AIF   (&LEN GT 5).LANERR2              VALUE TOO LONG          29200000
&CHAR3(1) SETC  '&LANG'(3,&LEN-3)               GET VALUE               29250000
&CHAR1   SETC  '&CHAR1'(1,1)                    SET TO X                29300000
         DC    &CHAR1.L1&CHAR2&CHAR3(1)&CHAR2   LANGUAGE PROFILE        29350000
         AGO   .DCODE                                                   29400000
.********************************************************************** 29450000
.*       GENERATE CODE FOR THE LANG KEYWORD VALUE OR DEFAULT            29500000
.*                DECIMAL PROCESSING                                    29550000
.********************************************************************** 29600000
.MODCKQ9 ANOP                                                           29650000
&CHAR1   SETC  '&LANG'(1,1)                     FIRST CHARACTER    @T1C 29700000
         AIF   ('&CHAR1' EQ '-').LANERR3        VALUE NEGATIVE     @T1C 29750000
         AIF   (&LANG GT 255).LANERR4           VALUE TOO HIGH     @T1C 29800000
         DC    AL1(&LANG)                       LANGUAGE - NUMERIC      29850000
         AGO   .DCODE                                                   29900000
.********************************************************************** 29950000
.*       GENERATE CODE FOR THE LANG KEYWORD VALUE OR DEFAULT            30000000
.*                DEFAULT PROCESSING                                    30050000
.********************************************************************** 30100000
.LANERR1 MNOTE 4,'LANG INVALID - NO ENDING QUOTE'              @R506200 30150000
         AGO   .LANPROF                                                 30200000
.LANERR2 MNOTE 4,'LANG INVALID - TOO MANY DIGITS'              @R506200 30250000
         AGO   .LANPROF                                                 30300000
.LANERR3 MNOTE 4,'LANG INVALID - VALUE LESS THAN 0'            @R506200 30350000
         AGO   .LANPROF                                                 30400000
.LANERR4 MNOTE 4,'LANG INVALID - VALUE GREATER THAN 255'       @R506200 30450000
.LANPROF ANOP                                                           30500000
         MNOTE 4,'LANG INVALID - DEFAULT VALUE USED'           @R506200 30550000
.LANGDEF DC    XL1'0'                           LANGUAGE DEFAULT   @T1C 30600000
.********************************************************************** 30650000
.*       GENERATE CODE FOR THE DCODE KEYWORD VALUE OR DEFAULT           30651200
.*                HEXIDECIMAL CHECKING                                  30652400
.********************************************************************** 30653600
.DCODE   ANOP                                                           30654800
         AIF   ('&DCODE' EQ '').DCODEF          DCODE NULLS        @T1A 30655400
&CHAR1   SETC  '&DCODE'(1,2)                    FIRST 2 CHARS           30656000
&LEN     SETA  K'&DCODE                         VALUE LENGTH            30657200
&CHAR2   SETC  '&DCODE'(&LEN,1)                 LAST CHAR               30658400
         AIF   ('&CHAR1' NE 'X''').MODCKQA      IF NOT HEX, BRANCH      30659600
         AIF   ('&CHAR2' NE '''').DCODER1       ENDING QUOTE MISSING    30660800
         AIF   (&LEN GT 5).DCODER2              VALUE TOO LONG          30662000
&CHAR3(1) SETC  '&DCODE'(3,&LEN-3)              GET VALUE               30663200
&CHAR1   SETC  '&CHAR1'(1,1)                    SET TO X                30664400
         DC    &CHAR1.L1&CHAR2&CHAR3(1)&CHAR2   DEVICE CODE PROFILE     30665600
         AGO   .DATAC                                              @J1C 30666800
.********************************************************************** 30668000
.*       GENERATE CODE FOR THE DCODE KEYWORD VALUE OR DEFAULT           30669200
.*                DECIMAL PROCESSING                                    30670400
.********************************************************************** 30671600
.MODCKQA ANOP                                                           30672800
&CHAR1   SETC  '&DCODE'(1,1)                    FIRST CHARACTER    @T1C 30674000
         AIF   ('&CHAR1' EQ '-').DCODER3        VALUE NEGATIVE     @T1C 30675200
         AIF   (&DCODE GT 255).DCODER4          VALUE TOO HIGH     @T1C 30676400
         DC    AL1(&DCODE)                      DCODE - NUMERIC         30677600
         AGO   .DATAC                                              @J1C 30678800
.********************************************************************** 30680000
.*       GENERATE CODE FOR THE DCODE KEYWORD VALUE OR DEFAULT           30681200
.*                DEFAULT PROCESSING                                    30682400
.********************************************************************** 30683600
.DCODER1 MNOTE 4,'DCODE INVALID - NO ENDING QUOTE'                      30684800
         AGO   .DCODPRO                                                 30686000
.DCODER2 MNOTE 4,'DCODE INVALID - TOO MANY DIGITS'                      30687200
         AGO   .DCODPRO                                                 30688400
.DCODER3 MNOTE 4,'DCODE INVALID - VALUE LESS THAN 0'                    30689600
         AGO   .DCODPRO                                                 30690800
.DCODER4 MNOTE 4,'DCODE INVALID - VALUE GREATER THAN 255'               30692000
.DCODPRO ANOP                                                           30693200
         MNOTE 4,'DCODE INVALID - DEFAULT VALUE USED'                   30694400
.DCODEF  DC    XL1'0'                           DCODE DEFAULT      @T1C 30695600
.********************************************************************** 30696800
.*       GENERATE DATA COMPRESS OVERRRIDE BYTE                          30696900
.********************************************************************** 30697000
.DATAC   ANOP                                                      @J1A 30697100
         AIF  ('&COMPRES' EQ '').DATACBL        NOTHING SPECIFIED  @J1A 30697200
         AIF  ('&COMPRES' EQ 'SYSTEM').DATACSY  SYSTEM SPECIFIED   @J1A 30697300
         AIF  ('&COMPRES' EQ 'REQD').DATACRQ    REQD SPECIFIED     @J1A 30697400
         AIF  ('&COMPRES' EQ 'PROHIB').DATACPH  PROHIB SPECIFIED   @J1A 30697500
         MNOTE 4,'COMPRES INVALID - DEFAULT USED'                  @J1A 30697600
&CHAR1   SETC '00'                              COMPRES DEFAULT    @04C 30697700
.*                                                                 @04A 30697800
         AGO  .DATACON                                             @J1A 30697900
.DATACBL ANOP                                                      @J1A 30698000
         MNOTE 4,'NO VALUE SPECIFIED FOR COMPRES - SYSTEM USED'    @J1A 30698100
.DATACSY ANOP                                                      @J1A 30698200
&CHAR1   SETC '00'                              SYSTEM SPECIFIED   @04C 30698300
.*                                                                 @04A 30698400
         AGO  .DATACON                                             @J1A 30698500
.DATACRQ ANOP                                                      @J1A 30698600
&CHAR1   SETC '01'                              REQD SPECIFIED     @04C 30698700
.*                                                                 @04A 30698800
         AGO  .DATACON                                             @J1A 30698900
.DATACPH ANOP                                                      @J1A 30699000
&CHAR1   SETC '02'                              PROHIB SPECIFIED   @04C 30699100
.*                                                                 @04A 30699200
.DATACON ANOP                                                      @J1A 30699300
         DC    XL1'&CHAR1'                      COMPRES BYTE       @04C 30699400
.*                                                                 @04A 30699500
.********************************************************************** 30699600
.*       GENERATE CODE FOR APPNCOS                                      30702400
.********************************************************************** 30705200
.APCOS   ANOP                                                      @KFA 30708000
         AIF   ('&APPNCOS' EQ '').CKCOS    Branch if APPNCOS NULL  @KFA 30710800
         DC    CL8'&APPNCOS'               Set parm to APPNCOS     @KFA 30713600
         AGO   .AWAY                       Go to End               @KFA 30716400
.CKCOS   ANOP                                                      @KFA 30719200
         AIF   ('&COS' EQ '').SETDEF       Branch if COS is NULL   @KFA 30722000
         AIF   ('&COS' EQ '        ').SETDEF   or if COS is blank  @KFA 30724800
         DC    CL8'&COS'                   Set Parm to COS value   @KFA 30727600
         AGO   .AWAY                                               @KFA 30730400
.SETDEF  ANOP                                                      @KFA 30733200
         DC    CL8'#CONNECT'               Set Parm to '#CONNECT'  @KFA 30736000
.AWAY    ANOP                                                      @KFA 30738800
         DC    XL1'00'                                             @KFA 30741600
.********************************************************************** 30744400
.*       GENERATE NOT USED - AVAILABLE FIELD                            30747200
.********************************************************************** 30750000
.AVAIL   ANOP                                                           30800000
         DC   XL1'00'                           RESERVED           @J1C 30828500
         AIF  ('&ERRCK' NE '1').MODEEND                                 30857000
         AIF  ('&ENTRYCT' NE '0').SKIPING       LENGTH OF ONE ENTRY     30885500
LE&TABCT EQU  *-LS&TABCT                                                30914000
.SKIPING ANOP                                                           30942500
&ENTRYCT SETA &ENTRYCT+1         COUNT OF THE NUMBER OF MODE ENTRIES    30971000
.MODEEND ANOP                                                           31000000
         MEND                                                           31050000
