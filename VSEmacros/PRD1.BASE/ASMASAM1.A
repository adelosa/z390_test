 title 'Sample Program1'                                                00001000
*********************************************************************   00002000
*   Licensed Materials - Property of IBM                            *   00003000
*                                                                   *   00004000
*   5696-234                                                        *   00005000
*                                                                   *   00006000
*   (C) Copyright IBM Corp. 1992, 2004. All Rights Reserved.        *   00007000
*                                                                   *   00008000
*   US Government Users Restricted Rights - Use,                    *   00009000
*   duplication or disclosure restricted by GSA ADP                 *   00010000
*   Schedule Contract with IBM Corp.                                *   00011000
*                                                                   *   00012000
*********************************************************************   00013000
*********************************************************************   00014000
* DISCLAIMER OF WARRANTIES                                          *   00015000
*                                                                   *   00016000
*  The following enclosed code is sample code created by IBM        *   00017000
*  Corporation. This sample code is licensed under the terms of     *   00018000
*  the High Level Assembler license, but is not part of any         *   00019000
*  standard IBM product.  It is provided to you solely for the      *   00020000
*  purpose of demonstrating the usage of some of the features of    *   00021000
*  High Level Assembler.  The code is not supported by IBM and      *   00022000
*  is provided on an "AS IS" basis, without warranty of any kind.   *   00023000
*  IBM shall not be liable for any damages arising out of your      *   00024000
*  use of the sample code, even if IBM has been advised of the      *   00025000
*  possibility of such damages.                                     *   00026000
*********************************************************************   00027000
a        csect                                                          00028000
         using *,8                                                      00029000
         sr    15,15      Set return code to zero                       00030000
         br    14          and return.                                  00031000
         space                                                          00032000
**********************************************************************  00033000
*              PUSH  and POP  statements                             *  00034000
* Push down the PRINT statement, replace it, retrieve original       *  00035000
**********************************************************************  00036000
         space                                                          00037000
         push  print     Save Default setting '  PRINT ON,NODATA,GEN'   00038000
         print nogen,data                                               00039000
         wto   mf=(E,(1))                    Expansion not shown        00040000
 dc x'123,ABC',(reallylongsymbol-transylvania)b'1,10,11,1010,1011,1100' 00041000
         pop   print                   Restore default PRINT setting    00042000
         wto   mf=(E,(1))                    Expansion shown            00043000
 dc x'123,ABC',(reallylongsymbol-transylvania)b'1,10,11,1010,1011,1100' 00044000
 space 1                                                                00045000
**********************************************************************  00046000
*                     LOCTR  instruction                             *  00047000
* LOCTR allows 'REMOTE' assembly of constant                         *  00048000
**********************************************************************  00049000
         space                                                          00050000
         l     5,constant                                               00051000
deecees  loctr                                                          00052000
constant dc    f'5'      Constant coded here, assembled behind LOCTR A  00053000
a        loctr                Return to 1st LOCTR in CSECT A            00054000
 space 1                                                                00055000
**********************************************************************  00056000
*  3 operand EQUATE with forward reference in 1ST operand            *  00057000
**********************************************************************  00058000
         space                                                          00059000
a5       lr    1,2            L'A5 = 2, T'A5 = I                        00060000
         print data                                                     00061000
a7 dc l'3.1415926535897932384626433832795028841972' L'A7 = 16,T'A7 = L  00062000
&type    setc  t'a7                                                     00063000
a8       equ   b5,l'a5,c'&type'                                         00064000
         EJECT                                                          00065000
**********************************************************************  00066000
* Implicit declaration of locals &A, &C -- Use of SETC dup factor to *  00067000
*   produce SETC string longer than 8, MNOTE in open code            *  00068000
**********************************************************************  00069000
 space 1                                                                00070000
&la8     seta  l'a8                                                     00071000
&ta8     setc  t'a8                                                     00072000
         mnote *,'Length of A8 = &LA8, Type of A8 = &TA8'               00073000
         space                                                          00074000
&a       seta  2                                                        00075000
&c       setc  (&a+3)'STRING,'                                          00076000
         mnote *,'&&C has value = &c'                                   00077000
         space                                                          00078000
**********************************************************************  00079000
* Examples of 4 byte self-defined terms, unary + and -               *  00080000
**********************************************************************  00081000
         space                                                          00082000
         dc    a(2147483647,C'ABCD',X'ffffffff')                        00083000
         lr    -1+2,16+-3                                               00084000
         space                                                          00085000
X        equ   4*-6                                                     00086000
BIGNAME  title 'Insert Programmer Macro in Source Stream now'           00087000
**********************************************************************  00088000
*  Mixed keywords and positional parameters, extended AGO and AIF    *  00089000
*     statements, declaration and use of subscripted SET symbols,    *  00090000
*       Use of created SET symbols, extended SET statements          *  00091000
**********************************************************************  00092000
         space                                                          00093000
         macro                                                          00094000
         demo  &p1,&key1=A,&p2,&key2=1,&p3,&key3=3,&p4                  00095000
&loc(1)  setc  '2','3'        &LOC is dimensioned LCLC by default       00096000
         gblc  &xa(5),&xb(20),&xc(1)                                    00097000
         aif   ('&system_id'(1,3) eq 'VSE').vse                         00098000
         &p1   &syslist(4),&syslist(5),&syslist(6),mf=E                 00099000
         ago   .notvse                                                  00100000
.vse     anop                 Use VSE WRITE macro parameters            00101000
         &p1   &syslist(4),SQ,&syslist(6)                               00102000
.notvse  anop                                                           00103000
&n       seta  1                                                        00104000
         ago   (&key2).mnote1,.mnote2,.mnote3                           00105000
&n       seta  2                                                        00106000
         mnote *,'&&KEY2 not 1,2, or 3---Use &&KEY3 in place of it'     00107000
         aif   (&key3 eq 1).mnote1,                                    X00108000
               (&key3 eq 2).mnote2,(&key3 eq 3).mnote3                  00109000
         mnote *,'Both &&KEY2 and &&KEY3 fail to qualify'               00110000
         ago   .common                                                  00111000
.mnote1  mnote *,'&&KEY&LOC(&N) = 1'                                    00112000
         ago   .common                                                  00113000
.mnote2  mnote *,'&&KEY&LOC(&N) = 2'                                    00114000
         ago   .common                                                  00115000
.mnote3  mnote *,'&&KEY&LOC(&N) = 3'                                    00116000
.common  l     5,8(,10)       Note that opcodes, operands & comments    00117000
&xb(2) sr 9,10                  on MODEL statements                     00118000
&(x&key1)(2) lm 12,13,=a(a5,x)    are kept in place unless displaced    00119000
&p2 st 7,&p3                        as a result of substitution         00120000
         mend                                                           00121000
 space 1                                                                00122000
*****          DEMO  MACRO  instruction (call)                          00123000
         space                                                          00124000
         gblc  &xa(1),&xb(2),&xc(3)                                     00125000
&xa(1)   setc  'A','MISSISSIPPI'                                        00126000
&xb(1)   setc  'B','SUSQUEHANNA'                                        00127000
&xc(1)   setc  'C','TRANSYLVANIA'                                       00128000
         demo  key3=2,write,reallylongsymbol,                          M00129000
               a8+8*(b5-constant-7)(3),key1=C,(6),SF,                  N00130000
               (8),key2=7                                               00131000
 eject                                                                  00132000
**********************************************************************  00133000
*  Copy 'NOTE' macro in from maclib, rename it 'MARK', call it under *  00134000
*    its ALIAS -- in expansion of MARK, notice reference back to     *  00135000
*      definition statements in 'columns' 76-80 of expansion         *  00136000
**********************************************************************  00137000
         space                                                          00138000
         copy  note                                                     00139000
         space                                                          00140000
         space                                                          00141000
mark     opsyn note      Comments of generated statements occupy same   00142000
         mark  (6)         'COLUMNS' as those in MODEL statements       00143000
 space 1                                                                00144000
**********************************************************************  00145000
deecees  loctr        Switch to alternate location counter              00146000
b5       ccw   X'0b',b5,0,80                                            00147000
 space 1                                                                00148000
**********************************************************************  00149000
*  Display of &SYSTIME, &SYSDATE, &SYSPARM and &SYSLOC               *  00150000
**********************************************************************  00151000
 space 1                                                                00152000
         print nodata                                                   00153000
  dc  c'TIME = &systime, DATE = &sysdate, PARM = &sysparm'              00154000
         space                                                          00155000
         macro                                                          00156000
         locate                                                         00157000
&sysect  csect      Display of current control section                  00158000
&sysloc  loctr          and location counter                            00159000
         mend                                                           00160000
 space 1                                                                00161000
         locate                                                         00162000
a        loctr                                                          00163000
 title 'Ordinary, Labeled and Dependent USING Instructions'             00164000
**********************************************************************  00165000
pd2      com                  Named COMMON thrown in for good measure   00166000
         ds    500f                                                     00167000
         lr    6,7                                                      00168000
                                                                        00169000
**********************************************************************  00170000
*  Use of ordinary, labeled and dependent USING Instructions         *  00171000
**********************************************************************  00172000
                                                                        00173000
         using *,12                                                     00174000
         la    1,area1                                                  00175000
         la    2,area2                                                  00176000
         using first,1                 Ordinary USING                   00177000
lab      using first,2                 Labeled USING                    00178000
         using second,first2           Dependent USING                  00179000
labdep   using third,lab.first2        Labeled dependent USING          00180000
         mvc   first1,=cl8'1st'        Uses ordinary USING              00181000
         mvc   lab.first1,=cl8'1st'    Uses labeled USING               00182000
         mvc   second1,=cl4'2nd'       Uses dependent USING             00183000
         mvc   labdep.third1,=cl2'3d'  Uses labeled dependent USING     00184000
area1    ds    0f                      First data area                  00185000
area1a   ds    cl8                                                      00186000
area1b   ds    cl8                                                      00187000
area2    ds    0f                      Second data area                 00188000
area2a   ds    cl8                                                      00189000
area2b   ds    cl8                                                      00190000
first    dsect                         First dsect                      00191000
first1   ds    cl8                                                      00192000
first2   ds    cl8                                                      00193000
second   dsect                         Second dsect                     00194000
second1  ds    cl4                                                      00195000
second2  ds    cl4                                                      00196000
third    dsect                         Third dsect                      00197000
third1   ds    cl2                                                      00198000
third2   ds    cl2                                                      00199000
 title 'Predefined Absolute Symbols in SETA and SETC expressions'       00200000
**********************************************************************  00201000
*  Use of predefined absolute symbols in SETA and SETC expressions   *  00202000
**********************************************************************  00203000
                                                                        00204000
hundred  equ   100                                                      00205000
&dividnd seta  20                                                       00206000
&percent seta  &dividnd*100/40         Predefined symbol in SETA        00207000
fifty    equ   50                                                       00208000
&longwd  setc  (hundred)'a'            Predefined symbol in SETC        00209000
         dc    c'&longwd'                                               00210000
&twowds  setc  (fifty)'a'.' '.(hundred/2)'B'                            00211000
         dc    c'&twowds'                                               00212000
 title 'Symbol Attribute Enhancements'                                  00213000
**********************************************************************  00214000
*  Symbol Attribute enhancements                                     *  00215000
**********************************************************************  00216000
                                                                        00217000
SYMBOL1  DC    C'ABC'                                                   00218000
SYMBOL2  DC    P'123.45'                                                00219000
&VAR1    SETC  'SYMBOL1'                                                00220000
&VAR2    SETC  'SYMBOL2'                                                00221000
         LA    1,=C'ABC'                                                00222000
         LA    1,=P'123.45'                                             00223000
                                                                        00224000
&TYPE    SETC  T'=C'ABC'                                                00225000
         DC    CL1'&TYPE'                                               00226000
         DC    AL1(T'SYMBOL1)                                           00227000
         DC    AL1(T'&VAR1)                                             00228000
         DC    AL1(T'=C'ABC')                                           00229000
&LEN     SETA  L'=C'ABC'                                                00230000
         DC    AL1(&LEN)                                                00231000
         DC    AL1(L'SYMBOL1)                                           00232000
         DC    AL1(L'&VAR1)                                             00233000
         DC    AL1(L'=C'ABC')                                           00234000
&INT     SETA  I'=P'123.45'                                             00235000
         DC    AL1(&INT)                                                00236000
         DC    AL1(I'SYMBOL2)                                           00237000
         DC    AL1(I'&VAR2)                                             00238000
         DC    AL1(I'=P'123.45')                                        00239000
&SCALE   SETA  S'=P'123.45'                                             00240000
         DC    AL1(&SCALE)                                              00241000
         DC    AL1(S'SYMBOL2)                                           00242000
         DC    AL1(S'&VAR2)                                             00243000
         DC    AL1(S'=P'123.45')                                        00244000
 title 'New Floating-point Constants included for Verification'         00245000
**********************************************************************  00246000
*  New FP defintions included to verify correct release of HLASM     *  00247000
**********************************************************************  00248000
BFP1     DC    DB'1234'                                                 00249000
HFP1     DC    DH'1234'                                                 00250000
         end                                                            00251000
