         MACRO
.*********************************************************************
.* Copyright 2007 Automated Software Tools Corporation               *
.* This source code is part of z390 assembler/emulator package       *
.* The z390 package is distributed under GNU general public license  *
.* Author - Don Higgins                                              *
.* Date   - 06/22/07                                                 *
.*********************************************************************
.* 07/28/07 RPI 644 INITIAL CODING OF RPL OPTIONS        
.* 08/04/07 RPI 644 UPDATE RPLFEEDB TO 4 BYTE CODES      
.* 08/19/07 RPI 680 CORRECT LOOP GE TO GT, ADD LCLB &LRD 
.* 08/29/07 RPI 688 CORRECT SETTING OF MACR1_XRBA OPTION BIT, ADD XRBA
.*********************************************************************
.*
.* RPL 28 VSAM OPTCD OPTIONS - MODELED ON MVS 3.8 IDAVSOPT
.*
.* ADR - addressed access to KSDS or ESDS by RBA, seq access by ESDS
.* ARD - User's argument determines the record to be processed (NS)                   
.* ASY - Asynchronous access (ignored)
.* BWD - proceed backward for KEY, SEQ, DIR for POINT, GET, PUT, ERASE
.* CNV - control intervAL access (not supported)            
.* CR  - For RLS, CR (consistent read integrity) (ignored)
.* CRE - For RLS transactional POINT and GET NUP CR locks (ignored)    
.* DIR - direct access to a RRDS, KSDS, or ESDS.               
.* FKS - a full key is provided as a search argument
.* FWD - Processing to proceed in a forward direction.         
.* GEN - A generic key is provided as a search argument using KEYLEN
.* KEQ - key must match for GET (key,dir/skp) and POINT (key)
.* KEY - rel rcd RRDS access or key KDSD access, seq rel rcd or key
.* KGE - key GE, for RRDS rel rcd > max existing returns EOD, PUT adds
.* LOC - leave record from GET in I/O buffer (ignored) 
.* LRD - Last record in the data set is to be located via POINT/GET
.* MVE - move record to/from area (ignored - always in RPL AREA=)
.* NRI - For RLS, NRI (no read integrity) (ignored)
.* NSP - For DIR, remember position for seq access until ENDREQ
.* NUP - records will not be updated, PUT stores new record, no pos
.* NWAITX - Never take the UPAD or RLSWAIT exit (ignored)
.* RBA - for ADR, use 4 byte RBA in ARG field (default)           
.* SEQ - Sequential access to a RRDS, KSDS, or ESDS.           
.* SKP - Skip sequential access.                               
.* SYN - Synchronous access (always)
.* UPD - records may be updated or deleted after DIR+UPD GET
.* WAITX  - if SYN and UPAD, take UPAD exit instead of WAIT (ignored)
.* XRBA - for ADR, use 8 byte XRBA in ARG field
.*********************************************************************
&N       RPL   &ACB=0,    VSAM ACCESS CONTROL BLOCK ADDRESS            X
               &AM=VSAM,  VSAM VS VTAM                                 X
               &AREA=0,   RECORD WORK AREA (DATA FOR MVE, ADDR FOR LOC)X
               &AREALEN=0, LENGTH OF AREA (MAX LRECL IF MVS, 4 FOR LOC)X
               &ARG=0,    KEY FIELD FOR KSDS ACCESS                    X
               &ECB=0,    ECB TO BE POSTED ON COMPLETION               X
               &KEYLEN=0, KEY LENGTH FOR GENERIC KEY SEARCH            X
               &NXTRPL=0, NEXT RPL IN CHAINED RPL LIST                 X
               &OPTCD=,   OPTIONS (SEE SUPPORTED OPTIONS ABOVE)        X
               &RECLEN=0  RECORD LENGTH FOR VARIABLE LENGTH PUT
         AIF   (&N EQ '').SKIPDS
&N       DS    0D
.SKIPDS  ANOP
         AIF   (N'&SYSLIST EQ 0).NPOK
         MNOTE 12,'RPL UNSUPPORTED OPERANDS - &SYSLIST(1)'
         MEXIT
.NPOK    ANOP
         AIF   (&AM NE 'VSAM').ERR1
.*
.* DEFINE 2 OPTION BYTES FROM OPTCD PARMS USING IDAVSOPT AS MODEL
.*
         LCLB  &KEY,&ADR,&CNV,&SEQ,&DIR,&SKP     6
         LCLB  &SYN,&ASY,&NUP,&UPD,&NSP,&KEQ     6
         LCLB  &KGE,&FKS,&GEN,&MVE,&LOC,&LRD     5
         LCLB  &WAITX,&NWAITX                    2
         LCLB  &ARD,&ASY,&BWD,&CR,&CRE           5
         LCLB  &FWD,&NRI,&RBA,&XRBA              4
&I       SETA  0
.OPTLOOP ANOP
&I       SETA  &I+1
         AIF   (&I GT N'&OPTCD).CHK_OPT  RPI 680        
&ADR     SETB  ('&OPTCD(&I)' EQ 'ADR' OR &ADR)
&ARD     SETB  ('&OPTCD(&I)' EQ 'ARD' OR &ARD)               
&ASY     SETB  ('&OPTCD(&I)' EQ 'ASY' OR &ASY)
&BWD     SETB  ('&OPTCD(&I)' EQ 'BWD' OR &BWD)               
&CNV     SETB  ('&OPTCD(&I)' EQ 'CNV' OR &CNV)
&CR      SETB  ('&OPTCD(&I)' EQ 'CR'  OR &CR)   NEW
&CRE     SETB  ('&OPTCD(&I)' EQ 'CRE' OR &CRE)  NEW
&DIR     SETB  ('&OPTCD(&I)' EQ 'DIR' OR &DIR)
&FKS     SETB  ('&OPTCD(&I)' EQ 'FKS' OR &FKS)
&FWD     SETB  ('&OPTCD(&I)' EQ 'FWD' OR &FWD)               
&GEN     SETB  ('&OPTCD(&I)' EQ 'GEN' OR &GEN)
&KEQ     SETB  ('&OPTCD(&I)' EQ 'KEQ' OR &KEQ)
&KEY     SETB  ('&OPTCD(&I)' EQ 'KEY' OR &KEY)
&KGE     SETB  ('&OPTCD(&I)' EQ 'KGE' OR &KGE)
&LOC     SETB  ('&OPTCD(&I)' EQ 'LOC' OR &LOC)
&LRD     SETB  ('&OPTCD(&I)' EQ 'LRD' OR &LRD)               
&MVE     SETB  ('&OPTCD(&I)' EQ 'MVE' OR &MVE)
&NRI     SETB  ('&OPTCD(&I)' EQ 'NRI' OR &NRI)       NEW
&NSP     SETB  ('&OPTCD(&I)' EQ 'NSP' OR &NSP)
&NUP     SETB  ('&OPTCD(&I)' EQ 'NUP' OR &NUP)
&NWAITX  SETB  ('&OPTCD(&I)' EQ 'NWAITX' OR &NWAITX)     
&RBA     SETB  ('&OPTCD(&I)' EQ 'RBA' OR &RBA)       NEW
&SEQ     SETB  ('&OPTCD(&I)' EQ 'SEQ' OR &SEQ)
&SKP     SETB  ('&OPTCD(&I)' EQ 'SKP' OR &SKP)
&SYN     SETB  ('&OPTCD(&I)' EQ 'SYN' OR &SYN)
&UPD     SETB  ('&OPTCD(&I)' EQ 'UPD' OR &UPD)
&WAITX   SETB  ('&OPTCD(&I)' EQ 'WAITX' OR &WAITX)           
&XRBA    SETB  ('&OPTCD(&I)' EQ 'XRBA' OR &XRBA)     NEW
         AGO   .OPTLOOP
.CHK_OPT ANOP    
.*
.* CHECK MUTUALLY EXCLUSIVE OPTIONS
.*
.CHK1    AIF   (NOT(&KEY AND &ADR)).CHK2    
         MNOTE 12,'RPL KEY AND ADR MUTUALLY EXCLUSIVE'
&RPLERR  SETB  1
.CHK2    AIF   (NOT(&KEY AND &CNV)).CHK3   
         MNOTE 12,'RPL KEY AND CNV MUTUALLY EXCLUSIVE'
&RPLERR  SETB  1
.CHK3    AIF   (NOT(&ADR AND &CNV)).CHK4    
         MNOTE 12,'RPL ADR AND CNV MUTUALLY EXCLUSIVE'
&RPLERR  SETB  1
.CHK4    AIF   (NOT(&SEQ AND &DIR)).CHK5    
         MNOTE 12,'RPL SEQ AND DIR MUTUALLY EXCLUSIVE'
&RPLERR  SETB  1
.CHK5    AIF   (NOT(&SEQ AND &SKP)).CHK6    
         MNOTE 12,'RPL SEQ AND SKP MUTUALLY EXCLUSIVE'
&RPLERR  SETB  1
.CHK6    AIF   (NOT(&DIR AND &SKP)).CHK7   
         MNOTE 12,'RPL DIR AND SKP MUTUALLY EXCLUSIVE'
&RPLERR  SETB  1
.CHK7    AIF   (NOT(&SYN AND &ASY)).CHK8    
         MNOTE 12,'RPL SYN AND ASY MUTUALLY EXCLUSIVE'
&RPLERR  SETB  1
.CHK8    AIF   (NOT(&NUP AND &UPD)).CHK9    
         MNOTE 12,'RPL NUP AND UPD MUTUALLY EXCLUSIVE'
&RPLERR  SETB  1
.CHK9    AIF   (NOT(&NUP AND &NSP)).CHK10  
         MNOTE 12,'RPL NUP AND NSP MUTUALLY EXCLUSIVE'
&RPLERR  SETB  1
.CHK10   AIF   (NOT(&UPD AND &NSP)).CHK11  
         MNOTE 12,'RPL UPD AND NSP MUTUALLY EXCLUSIVE'
&RPLERR  SETB  1
.CHK11   AIF   (NOT(&KEQ AND &KGE)).CHK12                    
         MNOTE 12,'RPL KEY AND KGE MUTUALLY EXCLUSIVE'
&RPLERR  SETB  1
.CHK12   AIF   (NOT(&WAITX AND &NWAITX)).CHK13               
         MNOTE 12,'RPL WAITX AND NWAITX MUTUALLY EXCLUSIVE'
&RPLERR  SETB  1
.CHK13   AIF   (NOT(&FKS AND &GEN)).CHK14   
         MNOTE 12,'RPL FKS AND GEN MUTUALLY EXCLUSIVE'
&RPLERR  SETB  1
.CHK14   AIF   (NOT(&MVE AND &LOC)).CHK15                    
         MNOTE 12,'RPL MVE AND LOC MUTUALLY EXCLUSIVE'
&RPLERR  SETB  1
.CHK15   AIF   (NOT(&BWD AND &FWD)).CHK16                              
         MNOTE 12,'RPL FWD AND BWD MUTUALLY EXCLUSIVE'
&RPLERR  SETB  1
.CHK16   AIF   (NOT(&ARD AND &LRD)).CHKEND                       
         MNOTE 12,'RPL ARD AND LRD MUTUALLY EXCLUSIVE'
&RPLERR  SETB  1
.CHKEND  ANOP                                                 
         LCLC  &OPT1,&OPT2,&OPT3,&OPT4
&OPT1    SETC  '&LOC&DIR&SEQ&SKP&ASY&KGE&GEN&XRBA'  OPTCD BYTE 1
&OPT2    SETC  '&KEY&ADR&CNV&BWD&LRD&WAITX&UPD&NSP' OPTCD BYTE 2           
.*
.* GENERATE VSAM RPL
.*
         DC    AL1(0)             RPLTYPE   RPL ID
         DC    AL1(10)            RPLSTYPE  RPL TYPE VSAM
         DC    AL1(RPLEND-IHARPL) RPLLEN    RPL LENGTH
         DC    X'00'              (ALIGN)
         DC    A(&ECB)            RPLECB    ECB (POSTED IF PRESENT)
         DC    XL4'00'            RPLFEEDBK RPL FEEDBACK CODES
         DC    A(&KEYLEN)         RPLKEYLEN KEY LENGTH
         DC    A(&ACB)            RPLACB    ACB
         DC    A(&AREA)           RPLAREA   AREA
         DC    A(&ARG)            RPLARG    ARG (KS KEY, RR NUM)
         DC    B'&OPT1&OPT2'      RPLOPT    OPTION BYTES 1+2
         DC    X'0000'            (ALIGN)
         DC    A(&NXTRPL)         RPLNEXT   NEXT RPL
         DC    A(&RECLEN)         RPLRECL   RECORD LENGTH FOR PUT
         DC    XL8'00'            RPLXRBA   VX0 XRBA FOR LAST REC
         DC    A(&AREALEN)        RPLAREAL  AREA LENGTH
         RPLD
         MEXIT
.ERR1    MNOTE 12,'ONLY AM=VSAM IS SUPPORTED'
         MEND
