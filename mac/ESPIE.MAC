        MACRO
.*********************************************************************
.* Copyright 2005 Automated Software Tools Corporation               *
.* This source code is part of z390 assembler/emulator package       *
.* The z390 package is distributed under GNU general public license  *
.* Author - Don Higgins                                              *
.* Date   - 09/30/05                                                 *
.*********************************************************************
&N      ESPIE &OP,&ADDR,&LIST
.*
.* Set or reset program interruption exit
.*    ESPIE SET,ADDR
.*    ESPIE RESET
.* Notes:
.*  1.  SPM can be used to set the psw program mask bits and cc:
.*         mask bit 0 > pic  8 - fixed point overflow
.*         mask bit 1 > pic 10 - packed decimal overflow
.*         mask bit 2 - pic 13 - HFP floating point exponent underflow
.*         mask bit 3 - pic 14 - HFP floating point mantissa significance
.*  2.  If mask bit is off, then the above exceptions are not
.*      generated and cannot be handled by ESPIE or ESTAE.
.*  3.  The interrupt codes that can be specified in 3rd positional
.*      operand sublist are as follows:
.*         1 - operation
.*         2 - privilege
.*         3 - execute 
.*         4 - protection
.*         5 - addressing
.*         6 - specification
.*         7 - data exception - see DXC reason codes:
.*               00 packed decimal data exception
.*               08 BFP inexact truncated
.*               0C BFP inexact incremented
.*               10 BFP underflow exact
.*               18 BFP underflow inexact truncated
.*               1C BFP underflow inexact incremented 
.*               20 BFP overflow  exact                           
.*               28 BFP overflow  inexact truncated
.*               2C BFP overflow  inexact incremented
.*               40 BFP division by zero
.*               80 BFP invalid operation
.*         8 - fixed point overflow   (SPM mask bit x'8')
.*         9 - fixed point divide
.*        10 - decimal overflow       (SPM mask bit x'4')
.*        11 - decimal divide                          
.*        12 - HFP exponent overflow  (SPM mask bit x'2')
.*        13 - HFP exponent underflow (SPM mask bit x'2')
.*        14 - HFP significance       (SPM mask bit x'1')
.*        15 - HFP divide
.*
.*  4.  Any of the above interrupts raised and not handled by ESPIE
.*      or ESTAE user defined exit will result in 0Cx abend.
.*
        LCLA   B(31)
&N      DS     0H
        AIF    (&OP EQ 'SET').SET
        AIF    (&OP EQ 'RESET').RESET
        MNOTE  8,'ESPIE INVALID OPERATION - SET/RESET - &OP'
        MEXIT
.SET    ANOP
&NP     SETA   N'&LIST
        IPM    0  GET CURRENT PGM MASK
.PLOOP  ANOP
        AIF    (&NP EQ 0).BLDPIE
&RANGE  SETC   &LIST(&NP)
&I1     SETA   &RANGE
&I2     SETA   &I1
&DASH   SETA   (&RANGE FIND '-')
        AIF    (&DASH EQ 0).RLOOP
&I2     SETA   '&RANGE'(&DASH+1,K'&RANGE-&DASH)
.RLOOP  ANOP
        AIF    (&I1 GT 0 AND &I1 LT 16).SETBIT
        MNOTE  8,'ESPIE INVALID INTERRUPT CODE = &RANGE'
        MEXIT
.SETBIT ANOP
&B(&I1) SETA   1
        AIF    (&I1 EQ  8).SETM0 FIXED OVERFLOW
        AIF    (&I1 EQ 10).SETM1 DEC   OVERFLOW
        AIF    (&I1 EQ 13).SETM2 HFP   UNDERFLOW
        AIF    (&I1 EQ 14).SETM3 HFP   SIGNIFICANCE
        AGO    .NEXT
.SETM0  ANOP
        OILL   0,8
        AGO    .NEXT
.SETM1  ANOP
        OILL   0,4
        AGO    .NEXT
.SETM2  ANOP
        OILL   0,2
        AGO    .NEXT
.SETM3  ANOP
        OILL   0,1
.NEXT   ANOP
&I1     SETA   &I1+1
        AIF    (&I1 LE &I2).RLOOP
&NP     SETA   &NP-1
        AGO    .PLOOP
.BLDPIE ANOP
        SPM    0 TURN ON ANY MASKS REQUIRED
&I      SETA   1
&PIE    SETC   '0'
.BLOOP  ANOP
        AIF    (&I GT 31).SETR0                
&PIE    SETC   '&PIE&B(&I)'
&I      SETA   &I+1
        AGO    .BLOOP
.SETR0  ANOP
        L      0,=B'&PIE'
        AIF    ('&ADDR'(1,1) EQ '(').AREG
        LA     1,&ADDR
        AGO    .SVC
.AREG   ANOP
        LR     1,&ADDR(1)
        AGO    .SVC
.RESET  ANOP
        SR     1,1
.SVC    ANOP
        SVC    X'6D' ESPIE
        MEND
