         MACRO                                                             
         DO    &END,&WHILE=,&UNTIL=                                                            
         COPY  ZSTRGBL
         LCLA  &N,&M,&S,&ZSTR_LAB1,&L,&I                                        
         LCLA  &UNTIL_LAB                                                      
         LCLC  &OP,&OPR                                                    
.********************************************************************
.*             AUTHOR.   DON HIGGINS.                                      
.*             DATE.     03/27/74.                                         
.*             REMARKS.  MACRO TO ALLOW STRUCTURED PROGRAMMING USING       
.*                       IF, THEN, ELSE, AND DO UP TO TEN LEVELS DEEP      
.*                       AND NO BRANCH INSTRUCTIONS. SEE IF MACRO.         
.********************************************************************
.* 05/14/06 DSH Z390 RPI 316 UPDATED FOR COMPAT.
.* 07/21/06 DSH Z390 RPI 379 USE IF TO SUPPORT COMPOUND WHILE/UNTIL
.* 04/11/07 DSH Z390 RPI 589 USE ZSTRGBL AND EXPAND LEVELS TO 100   
.* 04/19/08 RPI 833 add SETC quotes for HLASM compatibility
.********************************************************************
         AIF   (&ZSTR_DOLVL EQ &ZSTR_MAX_LEVEL).ERR1                                         
         AIF   ('&WHILE' NE '').WHILE
         AIF   ('&UNTIL' NE '').UNTIL
         AIF   ('&END' EQ 'END').END
&PARM    SETC  '&END'
         AGO   .ERR3
.UNTIL   ANOP 
&UNTIL_LAB SETA &UNTIL_LAB+1
&ZSTR_DOLVL   SETA  &ZSTR_DOLVL+1                                                    
&ZSTR_DOLAB   SETA  &ZSTR_DOLAB+1                                                    
&ZSTR_DOSEQ(&ZSTR_DOLVL) SETA 1                                                      
&ZSTR_DO(&ZSTR_DOLVL) SETA &ZSTR_DOLAB                                                    
         B     ZSTR_DO_&ZSTR_DOLAB._CODE 
ZSTR_DO_&ZSTR_DOLAB._TEST EQU *  
&IFPARM  SETC  '&UNTIL'(2,K'&UNTIL-2)                                                         
         IF    &IFPARM
               B     ZSTR_DO_&ZSTR_DOLAB._END                                               
         ENDIF
ZSTR_DO_&ZSTR_DOLAB._CODE EQU *                                                             
         AGO   .EXIT                                                       
.WHILE   ANOP        
&ZSTR_DOLVL   SETA  &ZSTR_DOLVL+1                                                    
&ZSTR_DOLAB   SETA  &ZSTR_DOLAB+1                                                    
&ZSTR_DOSEQ(&ZSTR_DOLVL) SETA 1                                                      
&ZSTR_DO(&ZSTR_DOLVL) SETA &ZSTR_DOLAB                                                    
ZSTR_DO_&ZSTR_DOLAB._TEST EQU   *                                                           
&IFPARM  SETC  '&WHILE'(2,K'&WHILE-2)                                                         
         IF    &IFPARM
               B   ZSTR_DO_&ZSTR_DOLAB._CODE
         ENDIF
         B     ZSTR_DO_&ZSTR_DOLAB._END                                               
ZSTR_DO_&ZSTR_DOLAB._CODE EQU *                                                             
         AGO   .EXIT                                                       
.END     ANOP                                                              
&PARM    SETC  '&SYSLIST(2)'
         AIF   (&N GT 1).ERR3                                              
         AIF   (&ZSTR_DOLVL EQ 0).ERR4                                          
         AIF   (&ZSTR_DOSEQ(&ZSTR_DOLVL) NE 1).ERR4                                  
&ZSTR_DOSEQ(&ZSTR_DOLVL) SETA 0                                                      
         B     ZSTR_DO_&ZSTR_DO(&ZSTR_DOLVL)._TEST           
ZSTR_DO_&ZSTR_DO(&ZSTR_DOLVL)._END EQU *                                    
&ZSTR_DOLVL   SETA  &ZSTR_DOLVL-1                                                    
         AGO   .EXIT                                                       
.ERR1    MNOTE 8,'DO - LEVEL OVERFLOW'                                     
         AGO   .EXIT                                                       
.ERR2    MNOTE 8,'DO - MISSING OPERAND'                                    
         AGO   .EXIT                                                       
.ERR3    MNOTE 8,'DO - INVALID OPERAND - &PARM'                                    
         AGO   .EXIT                                                       
.ERR4    MNOTE 8,'DO - END OUT OF SEQUENCE'                                
.EXIT    ANOP                                                              
         MEND
